{
  "metadata": {
    "timestamp": 1736711849372,
    "page": 173,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "openemr/openemr",
      "stars": 3249,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1259765625,
          "content": "root = true\n[*]\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true"
        },
        {
          "name": ".env.example",
          "type": "blob",
          "size": 0.22265625,
          "content": "# Possible options are prod or dev. No spaces, no quotes.\nOPENEMR__ENVIRONMENT=\n# Possible options are true to prevent dated reminders and background apps.Else empty or false. No spaces, no quotes.\nOPENEMR__NO_BACKGROUND_TASKS=\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.85546875,
          "content": "node_modules\ninterface/forms/eye_mag/js\ninterface/forms/questionnaire_assessments/lforms\ninterface/main/calendar/modules/PostCalendar/pnincludes/*.js\ninterface/modules/custom_modules/oe-module-comlink-telehealth/public/assets/js/dist\ninterface/modules/custom_modules/oe-module-comlink-telehealth/public/assets/js/src/cvb.min.js\ninterface/modules/zend_modules/public/js/lib/**/*.js\ninterface/super/rules/www/js/cdr-multiselect\ninterface/super/rules/www/js/jQuery.autocomplete.js\ninterface/super/rules/www/js/jQuery.fn.sortElements.js\nlibrary/ESign/js/jquery.esign.js\nlibrary/js/vendors/validate/validate_modified.js\nlibrary/js/xl/**/*.js\nlibrary/js/u2f-api.js\nlibrary/js/SearchHighlight.js\nlibrary/js/DocumentTreeMenu.js\nlibrary/js/CategoryTreeMenu.js\nportal/sign/assets/signature_pad.umd.js\nportal/patient/scripts\npublic/assets\nswagger\nvendor\nDocumentation/EHI_Export/**/*.js\n"
        },
        {
          "name": ".eslintrc.json",
          "type": "blob",
          "size": 0.642578125,
          "content": "{\n    \"env\": {\n        \"browser\": true,\n        \"commonjs\": true,\n        \"es6\": true,\n        \"jquery\": true,\n        \"jest/globals\": true\n    },\n    \"extends\": [\"eslint:recommended\"],\n    \"globals\": {\n        \"Atomics\": \"readonly\",\n        \"SharedArrayBuffer\": \"readonly\"\n    },\n    \"parserOptions\": {\n        \"ecmaVersion\": \"latest\",\n        \"sourceType\": \"module\"\n    },\n    \"rules\": {\n        \"no-undef\": \"warn\",\n        \"no-unused-vars\": \"warn\",\n        \"no-redeclare\": \"warn\"\n    },\n    \"overrides\": [\n        {\n            \"files\": \"**/*.spec.js\",\n            \"plugins\": [\"jest\"],\n            \"extends\": [\"plugin:jest/recommended\"]\n        }\n    ]\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3388671875,
          "content": "# logs\n/logs\n\n# environment vars\n.env\n\n# vendor and assets\nnode_modules\n/vendor/*\n/public/assets/*\n/public/themes/*\n!/public/assets/modified\n/.docs/.out/*\n\n# ccda service build\nccdaservice/node_modules\n\n# dev editor configs\n/.idea/*\n/.vscode/*\n/nbproject/*\n.DS_Store\n.buildpath\n.project\n.settings\n\n# testing\n.phpunit.result.cache\ncoverage/js-unit\n"
        },
        {
          "name": ".stylelintignore",
          "type": "blob",
          "size": 0.75390625,
          "content": "vendor/**/*.css\nvendor/**/*.scss\nnode_modules/**/*.css\nnode_modules/**/*.scss\nccdaservice/node_modules/**/*.css\nccdaservice/node_modules/**/*.scss\ninterface/modules/zend_modules/public/css/**/*.css\ninterface/forms/questionnaire_assessments/lforms/webcomponent/styles.css\npublic/assets/**/*.css\npublic/assets/**/*.scss\npublic/themes/**/*.css\npublic/themes/**/*.scss\nswagger/**/*.css\nswagger/**/*.scss\ncoverage/**/*.css\ncoverage/**/*.scss\n\n# To be fixed and removed from this list\ninterface/forms/**/*.css\ninterface/forms/**/*.scss\ninterface/main/**/*.css\ninterface/main/**/*.scss\ninterface/modules/**/*.css\ninterface/modules/**/*.scss\ninterface/super/**/*.css\ninterface/super/**/*.scss\ninterface/themes/**/*.css\ninterface/themes/**/*.scss\nDocumentation/EHI_Export/**/*.css\n"
        },
        {
          "name": ".stylelintrc.json",
          "type": "blob",
          "size": 0.76171875,
          "content": "{\n    \"plugins\": [\"stylelint-order\", \"stylelint-scss\"],\n    \"extends\": [\n        \"stylelint-config-standard\",\n        \"stylelint-config-sass-guidelines\"\n    ],\n    \"rules\": {\n        \"selector-id-pattern\": null,\n        \"selector-no-qualifying-type\": [\n            true,\n            {\n                \"ignore\": [\"attribute\", \"class\", \"id\"]\n            }\n        ],\n        \"string-quotes\": null,\n        \"selector-class-pattern\": null,\n        \"selector-max-id\": null,\n        \"selector-max-compound-selectors\": null,\n        \"at-rule-no-unknown\": null,\n        \"declaration-empty-line-before\": null,\n        \"at-rule-empty-line-before\": null,\n        \"scss/at-mixin-pattern\": null,\n        \"max-nesting-depth\": null,\n        \"scss/at-extend-no-missing-placeholder\": null\n    }\n}\n"
        },
        {
          "name": "API_README.md",
          "type": "blob",
          "size": 29.48046875,
          "content": "# OpenEMR REST API Documentation\n\n## REST API Table of Contents\n- [Overview](API_README.md#overview)\n- [Prerequisite](API_README.md#prerequisite)\n- [Using API Internally](API_README.md#using-api-internally)\n- [Multisite Support](API_README.md#multisite-support)\n- [Authorization](API_README.md#authorization)\n    - [Scopes](API_README.md#scopes)\n    - [Registration](API_README.md#registration)\n        - [SMART on FHIR Registration](API_README.md#smart-on-fhir-registration)\n    - [Authorization Code Grant](API_README.md#authorization-code-grant)\n    - [Refresh Token Grant](API_README.md#refresh-token-grant)\n    - [Password Grant](API_README.md#password-grant)\n    - [Client Credentials Grant](API_README.md#client-credentials-grant)\n    - [Logout](API_README.md#logout)\n    - [OpenID Connect](API_README.md#openid-connect)\n    - [More Details](API_README.md#more-details)\n- [Standard API Documentation](API_README.md#standard-api-documentation)\n- [Patient Portal API Documentation](API_README.md#patient-portal-api-documentation)\n- [FHIR API Documentation (in FHIR_README.md)](FHIR_README.md#fhir-api-documentation)\n    - [Capability Statement (in FHIR_README.md)](FHIR_README.md#capability-statement)\n    - [Provenance (in FHIR_README.md)](FHIR_README.md#Provenance-resources)\n    - [BULK FHIR Exports (in FHIR_README.md)](FHIR_README.md#bulk-fhir-exports)\n        - [System Export (in FHIR_README.md)](FHIR_README.md#bulk-fhir-exports)\n        - [Patient Export (in FHIR_README.md)](FHIR_README.md#bulk-fhir-exports)\n        - [Group Export (in FHIR_README.md)](FHIR_README.md#bulk-fhir-exports)\n    - [3rd Party SMART Apps (in FHIR_README.md)](FHIR_README.md#3rd-party-smart-apps)\n    - [Native Applications (in FHIR_README.md)](FHIR_README.md#native-applications)\n    - [Carecoordination Summary of Care (CCD) Generation (in FHIR_README.md)](FHIR_README.md#carecoordination-summary-of-care-docref-operation)\n        - [Overview Docref (in FHIR_README.md)](FHIR_README.md#overview-docref)\n        - [Generate CCDA (in FHIR_README.md)](FHIR_README.md#generate-ccda)\n        - [Details Docref (in FHIR_README.md)](FHIR_README.md#details-docref)\n- [Security Settings](API_README.md#security)\n- [For Developers](API_README.md#for-developers)\n\n## Overview\n\nEasy-to-use JSON-based REST API for OpenEMR. FHIR is also supported, see FHIR API documentation [here](FHIR_README.md),\n\n## Prerequisite\n\nEnable the Standard API service (/api/ endpoints) in OpenEMR menu: Administration->Config->Connectors->\"Enable OpenEMR Standard REST API\"\n\n## Using API Internally\n\nThere are several ways to make API calls from an authorized session and maintain security:\n\n-   See the script at tests/api/InternalApiTest.php for examples of internal API use cases.\n\n## Multisite Support\n\nMultisite is supported by including the site in the endpoint. When not using multisite or using the `default` multisite site, then a typical path would look like `apis/default/api/patient`. If you are using multisite and using a site called `alternate`, then the path would look like `apis/alternate/api/patient`.\n\n## Authorization\n\nOpenEMR uses OIDC compliant authorization for API. SSL is required and setting baseurl at Administration->Config->Connectors->'Site Address (required for OAuth2 and FHIR)' is required. The listing of scopes can be found in below Scopes section.\n\n### Scopes\n\nThis is a listing of scopes:\n- `openid` (Generic mandatory scope)\n- `fhirUser`\n- `online_access`\n- `offline_access` (Will signal server to provide a refresh token)\n- `launch`\n- `launch/patient`\n- `api:fhir` (fhir which are the /fhir/ endpoints)\n  - `patient/AllergyIntolerance.read`\n  - `patient/Appointment.read`\n  - `patient/Binary.read`\n  - `patient/CarePlan.read`\n  - `patient/CareTeam.read`\n  - `patient/Condition.read`\n  - `patient/Coverage.read`\n  - `patient/Device.read`\n  - `patient/DiagnosticReport.read`\n  - `patient/DocumentReference.read`\n  - `patient/DocumentReference.$docref`\n  - `patient/Encounter.read`\n  - `patient/Goal.read`\n  - `patient/Immunization.read`\n  - `patient/Location.read`\n  - `patient/MedicationRequest.read`\n  - `patient/Medication.read`\n  - `patient/Observation.read`\n  - `patient/Organization.read`\n  - `patient/Patient.read`\n  - `patient/Person.read`\n  - `patient/Practitioner.read`\n  - `patient/Procedure.read`\n  - `patient/Provenance.read`\n  - `system/AllergyIntolerance.read`\n  - `system/Binary.read`\n  - `system/CarePlan.read`\n  - `system/CareTeam.read`\n  - `system/Condition.read`\n  - `system/Coverage.read`\n  - `system/Device.read`\n  - `system/DiagnosticReport.read`\n  - `system/DocumentReference.read`\n  - `system/DocumentReference.$docref`\n  - `system/Encounter.read`\n  - `system/Goal.read`\n  - `system/Group.read`\n  - `system/Group.$export`\n  - `system/Immunization.read`\n  - `system/Location.read`\n  - `system/MedicationRequest.read`\n  - `system/Medication.read`\n  - `system/Observation.read`\n  - `system/Organization.read`\n  - `system/Patient.read`\n  - `system/Patient.$export`\n  - `system/Person.read`\n  - `system/Practitioner.read`\n  - `system/PractitionerRole.read`\n  - `system/Procedure.read`\n  - `system/Provenance.read`\n  - `system/*.$bulkdata-status`\n  - `system/*.$export`\n  - `user/AllergyIntolerance.read`\n  - `user/Binary.read`\n  - `user/CarePlan.read`\n  - `user/CareTeam.read`\n  - `user/Condition.read`\n  - `user/Coverage.read`\n  - `user/Device.read`\n  - `user/DiagnosticReport.read`\n  - `user/DocumentReference.read`\n  - `user/DocumentReference.$docref`\n  - `user/Encounter.read`\n  - `user/Goal.read`\n  - `user/Immunization.read`\n  - `user/Location.read`\n  - `user/MedicationRequest.read`\n  - `user/Medication.read`\n  - `user/Observation.read`\n  - `user/Organization.read`\n  - `user/Organization.write`\n  - `user/Patient.read`\n  - `user/Patient.write`\n  - `user/Person.read`\n  - `user/Practitioner.read`\n  - `user/Practitioner.write`\n  - `user/PractitionerRole.read`\n  - `user/Procedure.read`\n  - `user/Provenance.read`\n- `api:oemr` (user api which are the /api/ endpoints)\n  - `user/allergy.read`\n  - `user/allergy.write`\n  - `user/appointment.read`\n  - `user/appointment.write`\n  - `user/dental_issue.read`\n  - `user/dental_issue.write`\n  - `user/document.read`\n  - `user/document.write`\n  - `user/drug.read`\n  - `user/encounter.read`\n  - `user/encounter.write`\n  - `user/facility.read`\n  - `user/facility.write`\n  - `user/immunization.read`\n  - `user/insurance.read`\n  - `user/insurance.write`\n  - `user/insurance_company.read`\n  - `user/insurance_company.write`\n  - `user/insurance_type.read`\n  - `user/list.read`\n  - `user/medical_problem.read`\n  - `user/medical_problem.write`\n  - `user/medication.read`\n  - `user/medication.write`\n  - `user/message.write`\n  - `user/patient.read`\n  - `user/patient.write`\n  - `user/practitioner.read`\n  - `user/practitioner.write`\n  - `user/prescription.read`\n  - `user/procedure.read`\n  - `user/soap_note.read`\n  - `user/soap_note.write`\n  - `user/surgery.read`\n  - `user/surgery.write`\n  - `user/transaction.read`\n  - `user/transaction.write`\n  - `user/vital.read`\n  - `user/vital.write`\n- `api:port` (patient api which are the /portal/ endpoints) (EXPERIMENTAL)\n  - `patient/encounter.read`\n  - `patient/patient.read`\n  - `patient/appointment.read`\n\n### Registration\n\nHere is an example for registering a client. A client needs to be registered before applying for grant to obtain access/refresh tokens. Note: \"post_logout_redirect_uris\" is optional and only used if client wants a redirect to its own confirmation workflow.\n\nNote that all scopes are included in this example for demonstration purposes. For production purposes, should only include the necessary scopes.\n\n```sh\ncurl -X POST -k -H 'Content-Type: application/json' -i https://localhost:9300/oauth2/default/registration --data '{\n   \"application_type\": \"private\",\n   \"redirect_uris\":\n     [\"https://client.example.org/callback\"],\n   \"post_logout_redirect_uris\":\n     [\"https://client.example.org/logout/callback\"],\n   \"client_name\": \"A Private App\",\n   \"token_endpoint_auth_method\": \"client_secret_post\",\n   \"contacts\": [\"me@example.org\", \"them@example.org\"],\n   \"scope\": \"openid offline_access api:oemr api:fhir api:port user/allergy.read user/allergy.write user/appointment.read user/appointment.write user/dental_issue.read user/dental_issue.write user/document.read user/document.write user/drug.read user/encounter.read user/encounter.write user/facility.read user/facility.write user/immunization.read user/insurance.read user/insurance.write user/insurance_company.read user/insurance_company.write user/insurance_type.read user/list.read user/medical_problem.read user/medical_problem.write user/medication.read user/medication.write user/message.write user/patient.read user/patient.write user/practitioner.read user/practitioner.write user/prescription.read user/procedure.read user/soap_note.read user/soap_note.write user/surgery.read user/surgery.write user/transaction.read user/transaction.write user/vital.read user/vital.write user/AllergyIntolerance.read user/CareTeam.read user/Condition.read user/Coverage.read user/Encounter.read user/Immunization.read user/Location.read user/Medication.read user/MedicationRequest.read user/Observation.read user/Organization.read user/Organization.write user/Patient.read user/Patient.write user/Practitioner.read user/Practitioner.write user/PractitionerRole.read user/Procedure.read patient/encounter.read patient/patient.read patient/AllergyIntolerance.read patient/CareTeam.read patient/Condition.read patient/Coverage.read patient/Encounter.read patient/Immunization.read patient/MedicationRequest.read patient/Observation.read patient/Patient.read patient/Procedure.read\"\n  }'\n```\n\nResponse:\n```sh\n{\n    \"client_id\": \"LnjqojEEjFYe5j2Jp9m9UnmuxOnMg4VodEJj3yE8_OA\",\n    \"client_secret\": \"j21ecvLmFi9HPc_Hv0t7Ptmf1pVcZQLtHjIdU7U9tkS9WAjFJwVMav0G8ogTJ62q4BATovC7BQ19Qagc4x9BBg\",\n    \"registration_access_token\": \"uiDSXx2GNSvYy5n8eW50aGrJz0HjaGpUdrGf07Agv_Q\",\n    \"registration_client_uri\": \"https:\\/\\/localhost:9300\\/oauth2\\/default\\/client\\/6eUVG0-qK2dYiwfYdECKIw\",\n    \"client_id_issued_at\": 1604767861,\n    \"client_secret_expires_at\": 0,\n    \"contacts\": [\"me@example.org\", \"them@example.org\"],\n    \"application_type\": \"private\",\n    \"client_name\": \"A Private App\",\n    \"redirect_uris\": [\"https:\\/\\/client.example.org\\/callback\"],\n    \"token_endpoint_auth_method\": \"client_secret_post\",\n    \"scope\": \"openid offline_access api:oemr api:fhir api:port user/allergy.read user/allergy.write user/appointment.read user/appointment.write user/dental_issue.read user/dental_issue.write user/document.read user/document.write user/drug.read user/encounter.read user/encounter.write user/facility.read user/facility.write user/immunization.read user/insurance.read user/insurance.write user/insurance_company.read user/insurance_company.write user/insurance_type.read user/list.read user/medical_problem.read user/medical_problem.write user/medication.read user/medication.write user/message.write user/patient.read user/patient.write user/practitioner.read user/practitioner.write user/prescription.read user/procedure.read user/soap_note.read user/soap_note.write user/surgery.read user/surgery.write  user/transaction.read user/transaction.write user/vital.read user/vital.write user/AllergyIntolerance.read user/CareTeam.read user/Condition.read user/Coverage.read user/Encounter.read user/Immunization.read user/Location.read user/Medication.read user/MedicationRequest.read user/Observation.read user/Organization.read user/Organization.write user/Patient.read user/Patient.write user/Practitioner.read user/Practitioner.write user/PractitionerRole.read user/Procedure.read patient/encounter.read patient/patient.read patient/AllergyIntolerance.read patient/CareTeam.read patient/Condition.read patient/Coverage.read patient/Encounter.read patient/Immunization.read patient/MedicationRequest.read patient/Observation.read patient/Patient.read patient/Procedure.read\"\n}\n```\n\n#### SMART on FHIR Registration\n\nSMART Enabled Apps are supported.\n\nSMART client can be registered at <website>/interface/smart/register-app.php. For example https://localhost:9300/interface/smart/register-app.php\n\nAfter registering the SMART client, can then Enable it in OpenEMR at Administration->System->API Clients\n\nAfter it is enabled, the SMART App will then be available to use in the Patient Summary screen (SMART Enabled Apps widget).\n\nSee this github issue for an example of a Smart App installation: https://github.com/openemr/openemr/issues/4148\n\n### Authorization Code Grant\n\nThis is the recommended standard mechanism to obtain access/refresh tokens. This is done by using an OAuth2 client with provider url of `oauth2/<site>`; an example full path would be `https://localhost:9300/oauth2/default`.  Standard OAUTH2 clients will retrieve the authorize URL from the FHIR /metadata endpoint, but if you are building your own client you can access the metadata or go directly to the https://localhost:9300/oauth2/default/authorize endpoint.\n\nNote that a refresh token is only supplied if the `offline_access` scope is provided when requesting authorization grant.\n\nYou will need to pass the scopes you are requesting, the redirect_uri (must be one that was registered at the time of your client registration), and a state parameter which can be any value.  Once authorization has finished the browser will be redirected to the URL specified in redirect_uri with an encrypted code value and the state value sent in the initial authorize request.\n\nExample GET (this must be done in a browser):\n```\nGET /oauth2/default/authorize?client_id=yi4mnmVadpnqnJiOigkcGshuG-Kayiq6kmLqCJsYrk4&response_type=code&scope=launch%2Fpatient%20openid%20fhirUser%20offline_access%20patient%2FAllergyIntolerance.read%20patient%2FCarePlan.read%20patient%2FCareTeam.read%20patient%2FCondition.read%20patient%2FDevice.read%20patient%2FDiagnosticReport.read%20patient%2FDocumentReference.read%20patient%2FEncounter.read%20patient%2FGoal.read%20patient%2FImmunization.read%20patient%2FLocation.read%20patient%2FMedication.read%20patient%2FMedicationRequest.read%20patient%2FObservation.read%20patient%2FOrganization.read%20patient%2FPatient.read%20patient%2FPractitioner.read%20patient%2FProcedure.read%20patient%2FProvenance.read&redirect_uri=https%3A%2F%2Fclient.example.org%2Fcallback&state=9512151b-e5ca-cb4b-1ddc-aaf4cd8c6ecc\n```\n\nThe client application must then make a request for an access token by hitting the /token endpoint.  Note the redirect_uri MUST match what what was sent in /authorize endpoint.  If your application is registered as a public application you must include the client_id in the POST request.  If you are registered as a confidential app you must use HTTP Basic Authentication where the client_id is your username and the password is your client_secret.  HTTP Basic Authentication follows the algorithm of base64_encode(username:client_secret).  In PHP this would be base64_encode($client_id . ':' . $client_secret);  Note that this mechanism should ONLY be used over an encrypted protocol such as TLS to prevent leaking your client_secret.\n\nExample Public Application POST\n```\ncurl -X POST -k -H 'Content-Type: application/x-www-form-urlencoded'\n'https://localhost:9300/oauth2/default/token'\n--data 'grant_type=authorization_code&client_id=yi4mnmVadpnqnJiOigkcGshuG-Kayiq6kmLqCJsYrk4redirect_uri=https%3A%2F%2Fclient.example.org%2Fcallback&code=def50...'\n```\n\nExample Private Application POST\n```\ncurl -X POST -k -H 'Content-Type: application/x-www-form-urlencoded' \\\n    -H 'Authorization: Basic c3Z2TThFX1hISEhYUmtoZzUyeWoyNjdIOEYwQnpmT09pRmE4aUZBT290WTptbzZpZEFPaEU0UVYxb0lacUR5YTFHR1JHVGU5VDQzNWpzeTlRbWYxV2NiVFQ4NXhuZW5VdUpaUFR0bUZGT1QxVkhmYjZiclVvWWZ2Znd2NTFQejFldw==' \\\n    'https://localhost:9300/oauth2/default/token' \\\n    --data 'grant_type=authorization_code&client_id=yi4mnmVadpnqnJiOigkcGshuG-Kayiq6kmLqCJsYrk4redirect_uri=https%3A%2F%2Fclient.example.org%2Fcallback&code=def50...'\n```\n### Refresh Token Grant\n\nNote that a refresh token is only supplied if the `offline_access` scope is provided when requesting authorization or password grant.\n\nExample:\n\n```sh\ncurl -X POST -k -H 'Content-Type: application/x-www-form-urlencoded'\n-i 'https://localhost:9300/oauth2/default/token'\n--data 'grant_type=refresh_token\n&client_id=LnjqojEEjFYe5j2Jp9m9UnmuxOnMg4VodEJj3yE8_OA\n&refresh_token=def5020089a766d16...'\n```\n\nResponse:\n\n```json\n{\n  \"id_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiJrYn...\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 3599,\n  \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiJrYnl1RkRp...\",\n  \"refresh_token\": \"def5020017b484b0add020bf3491a8a537fa04eda12...\"\n}\n```\n\n### Password Grant\n\nRecommend not using this mechanism unless you know what you are doing. It is considered far less secure than the standard authorization code method. Because of security implications, it is not turned on by default. It can be turned on at Administration->Config->Connectors->'Enable OAuth2 Password Grant (Not considered secure)'.\n\nNote that all scopes are included in these examples for demonstration purposes. For production purposes, should only include the necessary scopes.\n\nNote that a refresh token is only supplied if the `offline_access` scope is provided when requesting password grant.\n\nExample for `users` role:\n```sh\ncurl -X POST -k -H 'Content-Type: application/x-www-form-urlencoded'\n-i 'https://localhost:9300/oauth2/default/token'\n--data 'grant_type=password\n&client_id=LnjqojEEjFYe5j2Jp9m9UnmuxOnMg4VodEJj3yE8_OA\n&scope=openid%20offline_access%20api%3Aoemr%20api%3Afhir%20user%2Fallergy.read%20user%2Fallergy.write%20user%2Fappointment.read%20user%2Fappointment.write%20user%2Fdental_issue.read%20user%2Fdental_issue.write%20user%2Fdocument.read%20user%2Fdocument.write%20user%2Fdrug.read%20user%2Fencounter.read%20user%2Fencounter.write%20user%2Ffacility.read%20user%2Ffacility.write%20user%2Fimmunization.read%20user%2Finsurance.read%20user%2Finsurance.write%20user%2Finsurance_company.read%20user%2Finsurance_company.write%20user%2Finsurance_type.read%20user%2Flist.read%20user%2Fmedical_problem.read%20user%2Fmedical_problem.write%20user%2Fmedication.read%20user%2Fmedication.write%20user%2Fmessage.write%20user%2Fpatient.read%20user%2Fpatient.write%20user%2Fpractitioner.read%20user%2Fpractitioner.write%20user%2Fprescription.read%20user%2Fprocedure.read%20user%2Fsoap_note.read%20user%2Fsoap_note.write%20user%2Fsurgery.read%20user%2Fsurgery.write%20user%2Ftransaction.read%20user%2Ftransaction.write%20user%2Fvital.read%20user%2Fvital.write%20user%2FAllergyIntolerance.read%20user%2FCareTeam.read%20user%2FCondition.read%20user%2FCoverage.read%20user%2FEncounter.read%20user%2FImmunization.read%20user%2FLocation.read%20user%2FMedication.read%20user%2FMedicationRequest.read%20user%2FObservation.read%20user%2FOrganization.read%20user%2FOrganization.write%20user%2FPatient.read%20user%2FPatient.write%20user%2FPractitioner.read%20user%2FPractitioner.write%20user%2FPractitionerRole.read%20user%2FProcedure.read\n&user_role=users\n&username=admin\n&password=pass'\n```\n\nExample for `patient` role:\n```sh\ncurl -X POST -k -H 'Content-Type: application/x-www-form-urlencoded'\n-i 'https://localhost:9300/oauth2/default/token'\n--data 'grant_type=password\n&client_id=LnjqojEEjFYe5j2Jp9m9UnmuxOnMg4VodEJj3yE8_OA\n&scope=openid%20offline_access%20api%3Aport%20api%3Afhir%20patient%2Fencounter.read%20patient%2Fpatient.read%20patient%2FAllergyIntolerance.read%20patient%2FCareTeam.read%20patient%2FCondition.read%20patient%2FCoverage.read%20patient%2FEncounter.read%20patient%2FImmunization.read%20patient%2FMedication.read%20patient%2FMedicationRequest.read%20patient%2FObservation.read%20patient%2FPatient.read%20patient%2FProcedure.read\n&user_role=patient\n&username=Phil1\n&password=phil\n&email=heya@invalid.email.com'\n```\n\nResponse:\n\n```json\n{\n  \"id_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiJrYn...\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 3599,\n  \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiJrYnl1RkRp...\",\n  \"refresh_token\": \"def5020017b484b0add020bf3491a8a537fa04eda12...\"\n}\n```\n\n### Client Credentials Grant\n\nThis is an advanced grant that uses JSON Web Key Sets(JWKS) to authenticate and identify the client.  This credential grant is\nrequired to be used for access to any **system/\\*.$export** scopes.  API clients must register either web accessible JWKS URI that hosts\na RSA384 compatible key, or provide their JWKS as part of the registration. Client Credentials Grant access tokens are short\nlived and valid for only 1 minute and no refresh token is issued.  Tokens are requested at `/oauth2/default/token`\nTo walk you through how to do this process you can follow [this guide created by HL7](https://hl7.org/fhir/uv/bulkdata/STU1/authorization/index.html).\n\n### Logout\n\nA grant (both Authorization Code and Password grants) can be logged out (ie. removed) by url of `oauth2/<site>/logout?id_token_hint=<id_token>`; an example full path would be `https://localhost:9300/oauth2/default/logout?id_token_hint=<id_token>`. Optional: `post_logout_redirect_uri` and `state` parameters can also be sent; note that `post_logout_redirect_uris` also needs to be set during registration for it to work.\n\n## OpenID Connect\n- The OpenEMR OpenID Connect discover endpoint is `https://{openmr_host}/oauth2/{site}/.well-known/openid-configuration` as the base URI. An example on the OpenEMR easy-dev docker with the 'default' site installation would be: https://localhost:9300/oauth2/default/.well-known/openid-configuration\n- A sample response is the following:\n    ```json\n    {\n       \"issuer\": \"https://localhost:9300/oauth2/default\",\n       \"authorization_endpoint\": \"https://localhost:9300/oauth2/default/authorize\",\n       \"token_endpoint\": \"https://localhost:9300/oauth2/default/token\",\n       \"jwks_uri\": \"https://localhost:9300/oauth2/default/jwk\",\n       \"userinfo_endpoint\": \"https://localhost:9300/oauth2/default/userinfo\",\n       \"registration_endpoint\": \"https://localhost:9300/oauth2/default/registration\",\n       \"end_session_endpoint\": \"https://localhost:9300/oauth2/default/logout\",\n       \"introspection_endpoint\": \"https://localhost:9300/oauth2/default/introspect\",\n       \"scopes_supported\": [\n         \"openid\",\n         \"fhirUser\",\n         \"online_access\",\n         \"offline_access\",\n         \"launch\",\n         \"launch\\/patient\",\n         \"api:oemr\",\n         \"api:fhir\",\n         \"api:port\"\n       ]\n    }\n   ```\n- The standard site used is **default**\n- OpenEMR supports token revocation.  It is recommended that clients use the OpenID Connect **introspection_endpoint** retrieved from the discovery endpoint to verify a token is active before assuming the token is active.\n\n### More Details\n\nThe forum thread that detailed development of Authorization and where questions and issues are addressed is here: https://community.open-emr.org/t/v6-authorization-and-api-changes-afoot/15450\n\nMore specific development api topics are discussed and described on the above forum thread (such as introspection).\n\n## Standard API Documentation\n\nThe Standard API is documented via Swagger. Can see this documentation (and can test it) by going to the `swagger` directory in your OpenEMR installation. The Standard API is documented there in the `standard` section. Can also see (and test) this in the online demos at https://www.open-emr.org/wiki/index.php/Development_Demo#Daily_Build_Development_Demos (clicking on the `API (Swagger) User Interface` link for the demo will take you there).  Make sure to set your client api registration's redirect_uris to be `<OpenEMR base URI>/swagger/oauth2-redirect.html`.\n\nOpenEMR standard endpoints Use `https://localhost:9300/apis/default/api as base URI.`\n\nNote that the `default` component can be changed to the name of the site when using OpenEMR's multisite feature.\n\n_Example:_ `https://localhost:9300/apis/default/api/patient` returns a resource of all Patients.\n\nThe Bearer token is required for each OpenEMR API request, and is conveyed using an Authorization header. Note that the Bearer token is the access_token that is obtained in the above [Authorization](API_README.md#authorization) section.\n\nRequest:\n\n```sh\ncurl -X GET 'https://localhost:9300/apis/default/api/patient/1/medical_problem' \\\n  -H 'Authorization: Bearer eyJ0b2tlbiI6IjAwNmZ4TWpsNWhsZmNPelZicXBEdEZVUlNPQUY5KzdzR1Jjejc4WGZyeGFjUjY2QlhaaEs4eThkU3cxbTd5VXFBeTVyeEZpck9mVzBQNWc5dUlidERLZ0trUElCME5wRDVtTVk5bE9WaE5DTHF5RnRnT0Q0OHVuaHRvbXZ6OTEyNmZGUmVPUllSYVJORGoyZTkzTDA5OWZSb0ZRVGViTUtWUFd4ZW5cL1piSzhIWFpJZUxsV3VNcUdjQXR5dmlLQXRXNDAiLCJzaXRlX2lkIjoiZGVmYXVsdCIsImFwaSI6Im9lbXIifQ=='\n```\n\n## Patient Portal API Documentation\n\nThe Patient Portal API is documented via Swagger. Can see this documentation (and can test it) by going to the `swagger` directory in your OpenEMR installation. The Patient Portal API is documented there in the `standard-patient` section. Can also see (and test) this in the online demos at https://www.open-emr.org/wiki/index.php/Development_Demo#Daily_Build_Development_Demos (clicking on the `API (Swagger) User Interface` link for the demo will take you there). Make sure to set your client api registration's redirect_uris to be `<OpenEMR base URI>/swagger/oauth2-redirect.html`.\n\nThis is under development and is considered EXPERIMENTAL.\n\nEnable the Patient Portal API service (/portal/ endpoints) in OpenEMR menu: Administration->Config->Connectors->\"Enable OpenEMR Patient Portal REST API (EXPERIMENTAL)\"\n\nOpenEMR patient portal endpoints Use `https://localhost:9300/apis/default/portal as base URI.`\n\nNote that the `default` component can be changed to the name of the site when using OpenEMR's multisite feature.\n\n_Example:_ `https://localhost:9300/apis/default/portal/patient` returns a resource of the patient.\n\nThe Bearer token is required for each OpenEMR API request, and is conveyed using an Authorization header. Note that the Bearer token is the access_token that is obtained in the above [Authorization](API_README.md#authorization) section.\n\nRequest:\n\n```sh\ncurl -X GET 'https://localhost:9300/apis/default/portal/patient' \\\n  -H 'Authorization: Bearer eyJ0b2tlbiI6IjAwNmZ4TWpsNWhsZmNPelZicXBEdEZVUlNPQUY5KzdzR1Jjejc4WGZyeGFjUjY2QlhaaEs4eThkU3cxbTd5VXFBeTVyeEZpck9mVzBQNWc5dUlidERLZ0trUElCME5wRDVtTVk5bE9WaE5DTHF5RnRnT0Q0OHVuaHRvbXZ6OTEyNmZGUmVPUllSYVJORGoyZTkzTDA5OWZSb0ZRVGViTUtWUFd4ZW5cL1piSzhIWFpJZUxsV3VNcUdjQXR5dmlLQXRXNDAiLCJzaXRlX2lkIjoiZGVmYXVsdCIsImFwaSI6Im9lbXIifQ=='\n```\n\n## Security\n- OpenEMR adminstrators / installers should ensure that the API is protected using an end to end encryption protocol such as TLS\n- Password Grant SHOULD be turned off for any kind of production use as it has a number of security problems\n- Setting the Admin -> Config -> OAuth2 App Manual Approval Settings to be 'Manual Approval' prevents any OAuth2 application from accessing the API without manual approval from an administrator.  This is the most secure setting.  However, in the USA jurisdiction that must comply with CEHRT rules for ONC Cures Update, patient standalone apps must be approved within 48 hours of a patient requesting access in order to avoid pentalities under the Information Blocking Provisions from ONC.  EHR administrators are not allowed to vet a patient's choice of an app as long as the app complies with OpenEMR's OAuth2 security requirements.  If an app requests user/* or system/* scopes, administrators can vet an application and request additional information / security on an app by app basis.  Leaving the setting at the default will auto-approve any patient standalone app.\n- Public apps (ones that can't securely store a secret) MUST implement the PKCE standard specified in [RFC 7636](https://www.rfc-editor.org/rfc/rfc7636).  Confidential apps are still highly encouraged to implement PKCE to mitigate forms of MITM attacks such as multiple native app devices registering for the same custom url scheme used as the OAUTH2 redirect_uri in the authorization_code grant.\n\n## For Developers\n\n-   For business logic, make or use the services [here](src/Services)\n-   For controller logic, make or use the classes [here](src/RestControllers)\n-   For routing declarations, use the class [here](_rest_routes.inc.php).\n\nREST API endpoints are defined in the [primary routes file](_rest_routes.inc.php). The routes file maps an external, addressable\nendpoint to the OpenEMR controller which handles the request, and also handles the JSON data conversions.\n\n```php\n\"POST /api/patient\" => function () {\n    RestConfig::authorization_check(\"patients\", \"demo\");\n    $data = (array) (json_decode(file_get_contents(\"php://input\")));\n    $return = (new PatientRestController())->post($data);\n    RestConfig::apiLog($return, $data);\n    return $return;\n}\n```\n\nAt a high level, the request processing flow consists of the following steps:\n\n```\nJSON Request -> Controller Component -> Validation -> Service Component -> Database\n```\n\nThe logical response flow begins with the database result:\n\n```\nDatabase Result -> Service Component -> Controller Component -> RequestControllerHelper -> JSON Response\n```\n\nThe [RequestControllerHelper class](./src/RestControllers/RestControllerHelper.php) evaluates the Service Component's\nresult and maps it to a http response code and response payload. Existing APIs should be updated to utilize the\n`handleProcessingResult` method as it supports the [Validator](./src/Validators/BaseValidator.php) components.\n\nThe [PatientRestController](./src/RestControllers/PatientRestController.php) may be used as a reference to see how APIs are\nintegrated with `RequestControllerHelper::handleProcessingResult` and the `Validator` components.\n\nFinally, APIs which are integrated with the new `handleProcessingResult` method utilize a common response format.\n\n```json\n{\n    \"validationErrors\": [],\n    \"internalErrors\": [],\n    \"data\": < data payload >\n}\n```\n\n-   `validationErrors` contain \"client based\" data validation errors\n-   `internalErrors` contain server related errors\n-   `data` is the response payload, represented as an object/`{}` for single results or an array/`[]` for multiple results\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 69.029296875,
          "content": "# CHANGELOG.md\n\n## [7.0.2.3](https://github.com/openemr/openemr/milestone/15?closed=1) - 2024-11-24\n\n### Fixed\n- Add new document template plugins ([#7836](https://github.com/openemr/openemr/issues/7836))\n- Feat openemr b11 7742 decision support interventions ([#7743](https://github.com/openemr/openemr/pull/7743))\n- Fix New Documents patient select for actions. ([#7812](https://github.com/openemr/openemr/issues/7812))\n- Portal Settings card Default Signature leaves backdrop on save close. ([#7835](https://github.com/openemr/openemr/issues/7835))\n- Portal Theme Resets to core theme. ([#7800](https://github.com/openemr/openemr/issues/7800))\n- Update Office Notes ([#7811](https://github.com/openemr/openemr/issues/7811))\n-  Patient Portal with no procedures throws error on viewing Customized Medical History Report ([#7814](https://github.com/openemr/openemr/issues/7814))\n-  cannot delete from address book when username is null ([#7805](https://github.com/openemr/openemr/issues/7805))\n-  cannot view fee sheet items if billing.billed is null ([#7807](https://github.com/openemr/openemr/issues/7807))\n-  prior auth module broken patient report link ([#7803](https://github.com/openemr/openemr/issues/7803))\n-  report pdf error with faxsms module installed ([#7793](https://github.com/openemr/openemr/issues/7793))\n\n\n### OpenEMR Developer Changes\n\n### Fixed\n-  Clinical Decisions Rule review screen has invalid CSRF class used ([#7832](https://github.com/openemr/openemr/issues/7832))\n\n## [7.0.2.2](https://github.com/openemr/openemr/milestone/14?closed=1) - 2024-10-25\n\n### Added\n  -  Change Patient Portal Layout to use tile format for mobile friendly design ([#7609](https://github.com/openemr/openemr/issues/7609))\n  -  Change Patient Portal Request New Appointment Openings Label to See Availability ([#7654](https://github.com/openemr/openemr/issues/7654))\n  -  Convert portal_patient_report.php file to  use twig template for module writers to extend ([#7707](https://github.com/openemr/openemr/issues/7707))\n  -  Improve Portal Credential Settings page for patients ([#7650](https://github.com/openemr/openemr/issues/7650))\n  -  Improve asset config to support html script tags of type module for javascript module support ([#7698](https://github.com/openemr/openemr/issues/7698))\n  -  Improve patient and clinician message user interface ([#7648](https://github.com/openemr/openemr/issues/7648))\n  -  Patient Portal Download Medical Record Documents make file path easier to distinguish and download help message. ([#7660](https://github.com/openemr/openemr/issues/7660))\n  -  Patient Portal allow new appointments to choose dates in localized format ([#7608](https://github.com/openemr/openemr/issues/7608))\n  -  Patient portal demographics make save action mobile friendly ([#7656](https://github.com/openemr/openemr/issues/7656))\n  -  Patient portal show single page app page title when page navigation changes ([#7646](https://github.com/openemr/openemr/issues/7646))\n  -  Portal appointments request should not allow No Show appointment type to be selected ([#7640](https://github.com/openemr/openemr/issues/7640))\n  -  Prescription Email Feature ([#7480](https://github.com/openemr/openemr/issues/7480))\n  -  Send Prescription Email using Webclient/Native mail program ([#7494](https://github.com/openemr/openemr/issues/7494))\n  -  Twigify patient portal appointments card list and show clearer message when no appointments are found. ([#7652](https://github.com/openemr/openemr/issues/7652))\n  -  Twigify the patient portal Digital Signature page for module writers ([#7658](https://github.com/openemr/openemr/issues/7658))\n  -  Update EHI documentation to include FHIR _lastUpdated columns  ([#7764](https://github.com/openemr/openemr/issues/7764))\n  -  Update Pull Request Template to provide documentation for AI Generated Code ([#7705](https://github.com/openemr/openemr/issues/7705))\n  -  Warn user when attempting prescription fax if signature is not configured ([#7525](https://github.com/openemr/openemr/issues/7525))\n  -  allow embedding of lform javascript/style questionnaire files using the setupHeader syntax ([#7699](https://github.com/openemr/openemr/issues/7699))\n  -  allow patients with 1 character first name ([#7714](https://github.com/openemr/openemr/issues/7714))\n  -  change clinical messages casing in messages.php ([#7644](https://github.com/openemr/openemr/issues/7644))\n  -  upgrade 2025 icd10 ([#7712](https://github.com/openemr/openemr/issues/7712))\n\n\n### Fixed\n  - Add back faxsms Module RingCentral Support ([#7541](https://github.com/openemr/openemr/issues/7541))\n  - Add title to all appointment sql queries ([#7311](https://github.com/openemr/openemr/pull/7311))\n  - Adding module manager ([#7500](https://github.com/openemr/openemr/pull/7500))\n  - Billing Manager and Some Module fixes ([#7747](https://github.com/openemr/openemr/pull/7747))\n  - Billing Manager showing unassigned ([#7553](https://github.com/openemr/openemr/issues/7553))\n  - Bug fixes for nation notes, lbf ([#6740](https://github.com/openemr/openemr/pull/6740))\n  - Bug openemr fix 7746 export since delta fix ([#7754](https://github.com/openemr/openemr/pull/7754))\n  - CCDA Service compile is broken node version > v18.x ([#7528](https://github.com/openemr/openemr/issues/7528))\n  - CKEditor4 now throwing security popup ([#7540](https://github.com/openemr/openemr/issues/7540))\n  - Change telehealth support contact ([#7560](https://github.com/openemr/openemr/issues/7560))\n  - Dorn Changes ([#7221](https://github.com/openemr/openemr/pull/7221))\n  - Eligibility Fixes ([#7774](https://github.com/openemr/openemr/pull/7774))\n  - Encounter Review shows unknown in tab title. ([#7776](https://github.com/openemr/openemr/issues/7776))\n  - Fax No Content error ([#7505](https://github.com/openemr/openemr/issues/7505))\n  - Fax/SMS Weno modules needs updates and bug fixes. ([#7696](https://github.com/openemr/openemr/issues/7696))\n  - Fixes #7503 user admin create empty google sign in ([#7504](https://github.com/openemr/openemr/pull/7504))\n  - LBF deletes newly added service when diagnoses already saved ([#7579](https://github.com/openemr/openemr/issues/7579))\n  - List Edit has a save limit of 40 ([#7694](https://github.com/openemr/openemr/issues/7694))\n  - Module command line batch notifications broken. ([#7752](https://github.com/openemr/openemr/issues/7752))\n  - More Changes and Fixes Modules ([#7755](https://github.com/openemr/openemr/pull/7755))\n  - Need module bootstrap status events ([#7462](https://github.com/openemr/openemr/issues/7462))\n  - New Fixes ([#7770](https://github.com/openemr/openemr/pull/7770))\n  - ONC certification requires removal of 2015 wording ([#7690](https://github.com/openemr/openemr/issues/7690))\n  - Patient menu navigation not working when Prior Auth module enabled ([#7677](https://github.com/openemr/openemr/issues/7677))\n  - Payor never being returned in FHIR Coverage endpoint ([#7684](https://github.com/openemr/openemr/issues/7684))\n  - Portal create new appointment is broken ([#7688](https://github.com/openemr/openemr/issues/7688))\n  - Portal document display  ([#7632](https://github.com/openemr/openemr/issues/7632))\n  - Portal patient documents download broken ([#7692](https://github.com/openemr/openemr/issues/7692))\n  - Portal updates and bug fixes ([#7599](https://github.com/openemr/openemr/issues/7599))\n  - Prevent Appointment comment as visit reason ([#7680](https://github.com/openemr/openemr/issues/7680))\n  - Prior Authorizations Report Error. #7461 ([#7558](https://github.com/openemr/openemr/issues/7558))\n  - Questionnaire - configure where LOINC terms note is displayed ([#7550](https://github.com/openemr/openemr/issues/7550))\n  - Repair OA Eligibility  ([#7773](https://github.com/openemr/openemr/issues/7773))\n  - Replace CkEditor  Nation Notes and Portal ([#7544](https://github.com/openemr/openemr/issues/7544))\n  - Replace ckeditor in portal ([#7594](https://github.com/openemr/openemr/issues/7594))\n  - Template access from Demographics several issues ([#7758](https://github.com/openemr/openemr/issues/7758))\n  - Update FHIR LForms to latest version v36.3.3 and restyle form rendering. ([#7666](https://github.com/openemr/openemr/issues/7666))\n  - Wrong insurance information displayed when attempting to update ([#7763](https://github.com/openemr/openemr/issues/7763))\n  -  'None' does not hide 'search by any demographics' field ([#7493](https://github.com/openemr/openemr/issues/7493))\n  -  Bulk export _since parameter is throwing error ([#7746](https://github.com/openemr/openemr/issues/7746))\n  -  Calendar entries when comments are turned on show html for escaped characters ([#7635](https://github.com/openemr/openemr/issues/7635))\n  -  Create users breaks when more than one user has an empty email address for Google Email For Login ([#7503](https://github.com/openemr/openemr/issues/7503))\n  -  Custom Reports-Superbill not showing Billing Information ([#7581](https://github.com/openemr/openemr/issues/7581))\n  -  Document Uploader when editing document properties shows a stray html tag on success message ([#7511](https://github.com/openemr/openemr/issues/7511))\n  -  EncounterService uses referring provider id for therapy_group name on insert ([#7569](https://github.com/openemr/openemr/issues/7569))\n  -  Insurance coverage save fails for payer relationship self when subscriber name has different casing ([#7477](https://github.com/openemr/openemr/issues/7477))\n  -  Lab Core Procedure Manual eReq breaks due to PHP8 date issue if date_collected is not filled in ([#7526](https://github.com/openemr/openemr/issues/7526))\n  -  Patient Portal Secure Messaging checkbox click should select item instead of open for reading ([#7662](https://github.com/openemr/openemr/issues/7662))\n  -  Patient Portal appointment shows \"error\" screen for patient's first appointment ([#7633](https://github.com/openemr/openemr/issues/7633))\n  -  Prescription Fax fails when signature file is populated on PHP8 ([#7524](https://github.com/openemr/openemr/issues/7524))\n  -  Questionnaire throws error in clinical documents page if validation fails due to translation failure ([#7621](https://github.com/openemr/openemr/issues/7621))\n  -  Show Visit Category option on Encounters, Hide on New and Edit Form ([#7686](https://github.com/openemr/openemr/issues/7686))\n  -  Skip payment scripts in portal if Portal Allow Online Payments feature disabled. ([#7620](https://github.com/openemr/openemr/issues/7620))\n  -  Upgrade to v702 fails for v301 ([#7630](https://github.com/openemr/openemr/issues/7630))\n  -  User Admin screen \tGoogle Email for Login does not save when creating new user ([#7393](https://github.com/openemr/openemr/issues/7393))\n  -  create custom temp directory for htmlpurify ([#7520](https://github.com/openemr/openemr/issues/7520))\n  -  default x12 partner not selected in billing manager ([#7501](https://github.com/openemr/openemr/issues/7501))\n  -  editing insurance company from practice settings 404 not found ([#7483](https://github.com/openemr/openemr/issues/7483))\n  -  export to collections fails to send all encounters for a person ([#7768](https://github.com/openemr/openemr/issues/7768))\n  -  fix variable typo in messages.php ([#7467](https://github.com/openemr/openemr/issues/7467))\n  -  getEffectiveInsurances not inspecting date_end  ([#7489](https://github.com/openemr/openemr/issues/7489))\n  -  jquery-datetimepicker-2-5-4-translated.js creates invalid date format when DateFormatRead is not in window scope ([#7497](https://github.com/openemr/openemr/issues/7497))\n  -  migrate table engine array binds ([#7565](https://github.com/openemr/openemr/issues/7565))\n  -  patient portal secure messaging timing issue. Messages sometimes are unclickable in inbox when page loads. ([#7663](https://github.com/openemr/openemr/issues/7663))\n  -  portal htmlpurify serializer path not writable ([#7475](https://github.com/openemr/openemr/issues/7475))\n  -  typo in 837I script ([#7468](https://github.com/openemr/openemr/issues/7468))\n  -  webroot typo documents-go portal home ([#7473](https://github.com/openemr/openemr/issues/7473))\n  -  x12837 billing 5 or 9 digit zip check ([#7759](https://github.com/openemr/openemr/issues/7759))\n  - configure two logos on the portal login page - as one can on user login page ([#7710](https://github.com/openemr/openemr/issues/7710))\n  - issue type not shown in encounter add issue form ([#7563](https://github.com/openemr/openemr/issues/7563))\n  - search by any demographic configured as fixed doesn't use patient finder ([#7596](https://github.com/openemr/openemr/issues/7596))\n\n\n### Changed\n  -  Input sanitation on google signin email ([#7356](https://github.com/openemr/openemr/pull/7356))\n  -  bug ([#7535](https://github.com/openemr/openemr/pull/7535))\n  -  send each checked encounter to collections in form export ([#7769](https://github.com/openemr/openemr/pull/7769))\n  -  x12837 billing 5 or 9 digit zip check ([#7760](https://github.com/openemr/openemr/pull/7760))\n  -  x12837 billing 5 or 9 digit zip check (#7760) for rel-702 ([#7765](https://github.com/openemr/openemr/pull/7765))\n\n\n### OpenEMR Developer Changes\n\n### Added\n  -  Convert Dicom Viewer to Twig for Module writers to extend / overwrite ([#7509](https://github.com/openemr/openemr/issues/7509))\n  -  Prescriptions Dialog move to twig to allow module writers to extend / modify the view ([#7496](https://github.com/openemr/openemr/issues/7496))\n  -  pull patient portal health snapshot into modular twig/filter event for customization ([#7708](https://github.com/openemr/openemr/issues/7708))\n\n\n### Changed\n  -  Move patient previous name methods in patient service into its own Service ([#7568](https://github.com/openemr/openemr/issues/7568))\n\n\n## [7.0.2.1](https://github.com/openemr/openemr/milestone/13?closed=1) - 2024-05-28\n\n### Added\n  -  Change Module Manager ([#7247](https://github.com/openemr/openemr/issues/7247))\n  -  Encounter and observation report generation in Patient List Creation ([#7014](https://github.com/openemr/openemr/issues/7014))\n  -  Etherfax need tiff image support and image to PDF ([#7436](https://github.com/openemr/openemr/issues/7436))\n  -  Hide cards in the patient dashboard ([#7191](https://github.com/openemr/openemr/issues/7191))\n  -  Modernize Work School Note ([#6946](https://github.com/openemr/openemr/issues/6946))\n  -  Password strength meter missing ([#7366](https://github.com/openemr/openemr/issues/7366))\n  -  Patient Insurance Policy rest endpoint for updating a specific policy  ([#7143](https://github.com/openemr/openemr/issues/7143))\n  -  Show group attendance in encounter summary ([#7127](https://github.com/openemr/openemr/issues/7127))\n  -  Weno EZ Integration ([#6635](https://github.com/openemr/openemr/issues/6635))\n  -  Weno improve design, and pharmacy import speed ([#7204](https://github.com/openemr/openemr/pull/7204))\n  -  When google single sign on is enabled it still requires user to use password from openEMR to sign the encounter doesn't use single sign on. ([#7254](https://github.com/openemr/openemr/issues/7254))\n  -  add Real World Testing Report for 2024 ([#7210](https://github.com/openemr/openemr/pull/7210))\n  -  electronically post payment when billed modifier isn't returned in ERA ([#7293](https://github.com/openemr/openemr/issues/7293))\n  -  improved pharmacy download, user facility selection improvement,  improved UX for errors and theme compatability ([#7208](https://github.com/openemr/openemr/pull/7208))\n  -  make Demographics Insurance Edit Screen its own page ([#7108](https://github.com/openemr/openemr/issues/7108))\n  -  show collection balance in billing widget ([#7454](https://github.com/openemr/openemr/pull/7454))\n  -  support 2024 reporting cqm valueset import ([#7317](https://github.com/openemr/openemr/issues/7317))\n  -  support electronic worker's comp claims ([#7206](https://github.com/openemr/openemr/issues/7206))\n  -  total front receipts by payment method ([#7448](https://github.com/openemr/openemr/issues/7448))\n  -  use default visit category in add edit event ([#7189](https://github.com/openemr/openemr/issues/7189))\n  -  weno changes - restrict NCPDPD to 7 digits per spec ([#7384](https://github.com/openemr/openemr/pull/7384))\n\n\n### Fixed\n  - Backport etherfax #7429 #7447 ([#7452](https://github.com/openemr/openemr/pull/7452))\n  - Gap cherry-picks ([#7451](https://github.com/openemr/openemr/pull/7451))\n  - Patch1 more cherry-picks ([#7457](https://github.com/openemr/openemr/pull/7457))\n  - Phantom date showing at the top of all reports. ([#7433](https://github.com/openemr/openemr/pull/7433))\n  - Prevent Upload of ZIP bombs ([#7407](https://github.com/openemr/openemr/pull/7407))\n  - Pull request #7442 backport Cleanup Background tasks ([#7455](https://github.com/openemr/openemr/pull/7455))\n  -  837P service location details are not created when service facility and billing facility differ ([#7213](https://github.com/openemr/openemr/issues/7213))\n  -  Add previous name doesn't save New/Search ([#7437](https://github.com/openemr/openemr/issues/7437))\n  -  Authentication Error when opening a patient with Open in New Browser Tab checked. ([#7167](https://github.com/openemr/openemr/issues/7167))\n  -  Billing Manager Date of Service selector not working ([#7069](https://github.com/openemr/openemr/issues/7069))\n  -  CDR gui summary screen submit breaks when set no alert types ([#7178](https://github.com/openemr/openemr/issues/7178))\n  -  CDR reminder_results_integrate() to work when same actions are used in different rules ([#7266](https://github.com/openemr/openemr/issues/7266))\n  -  Cannot delete entry from immunization list ([#7345](https://github.com/openemr/openemr/issues/7345))\n  -  Claimrev leaves background service on when module is uninstalled ([#7441](https://github.com/openemr/openemr/issues/7441))\n  -  Clinical Rules - dates and filters ([#7157](https://github.com/openemr/openemr/issues/7157))\n  -  Clinical Rules - interval boundaries used in evaluating target instances ([#7161](https://github.com/openemr/openemr/issues/7161))\n  -  Clinical Rules - logic issues in filter and target evaluations; divide by zero bug ([#7153](https://github.com/openemr/openemr/issues/7153))\n  -  Eye Form Style fixes ([#7051](https://github.com/openemr/openemr/pull/7051))\n  -  File missing for Quest Lab Hub to function properly ([#7084](https://github.com/openemr/openemr/issues/7084))\n  -  Fixes bugs in user edit screen, restyle Logs Viewer ([#7222](https://github.com/openemr/openemr/pull/7222))\n  -  In Visit History, print, or save as PDF, a multi-page list of encounters doesn't print or save all results. ([#7270](https://github.com/openemr/openemr/issues/7270))\n  -  Insurance Edit Screen overwrites insurance fax value ([#7164](https://github.com/openemr/openemr/issues/7164))\n  -  Insurance Edit screen add provider functionality does not update provider list ([#7109](https://github.com/openemr/openemr/issues/7109))\n  -  Insurance rest endpoints documentation incorrect for patient pid  ([#7145](https://github.com/openemr/openemr/issues/7145))\n  -  Layout Based Forms (LBF) printable fatal error ([#7148](https://github.com/openemr/openemr/issues/7148))\n  -  Layout Based Forms (LBF) query error breaks on newer database versions ([#7239](https://github.com/openemr/openemr/issues/7239))\n  -  Messages SMS Zone Combobox width ([#6070](https://github.com/openemr/openemr/issues/6070))\n  -  Missing Pdf and Track Anything style sheets ([#7258](https://github.com/openemr/openemr/issues/7258))\n  -  OpenEMR logs sensitive field - payment reference number ([#7340](https://github.com/openemr/openemr/issues/7340))\n  -  OpenEMR\\Service\\BaseService->getSelectJoinClauses() join_clause property is improperly escaped ([#7188](https://github.com/openemr/openemr/issues/7188))\n  -  Opening portal templates from documents broken ([#7173](https://github.com/openemr/openemr/issues/7173))\n  -  Patient Insurance List All Endpoint fails ([#7107](https://github.com/openemr/openemr/issues/7107))\n  -  Practice Settings Insurance Company list extremely slow to load with hundreds of insurance companies ([#7224](https://github.com/openemr/openemr/issues/7224))\n  -  SNOMED lookup is slow in some places ([#7276](https://github.com/openemr/openemr/issues/7276))\n  -  Unable to import CCDA XML files in Docker 7.0.3 ([#7411](https://github.com/openemr/openemr/issues/7411))\n  -  Unable to share templates in nations note ([#7129](https://github.com/openemr/openemr/issues/7129))\n  -  User able to select a Date of Birth that occurs in the future on new patient screen ([#7378](https://github.com/openemr/openemr/issues/7378))\n  -  Weno calculate age bug and labels incorrectly used for weno user ([#7453](https://github.com/openemr/openemr/pull/7453))\n  -  [CKEDITOR] Error code: invalid-lts-license-key. ([#7097](https://github.com/openemr/openemr/issues/7097))\n  -  appointments report total incorrect ([#7289](https://github.com/openemr/openemr/issues/7289))\n  -  balance formatting in record front payment ([#7260](https://github.com/openemr/openemr/issues/7260))\n  -  billing manager To Encounter button doesn't load proper person for insurance edit  ([#7419](https://github.com/openemr/openemr/issues/7419))\n  -  billing manager broken validation of claim with replaced patient insurance ([#7263](https://github.com/openemr/openemr/issues/7263))\n  -  billing_note duplication each time invoice form is saved ([#7287](https://github.com/openemr/openemr/issues/7287))\n  -  document display fail on empty array key ([#7390](https://github.com/openemr/openemr/issues/7390))\n  -  encounter date of service time format ([#7202](https://github.com/openemr/openemr/issues/7202))\n  -  era posting denial write off ([#7186](https://github.com/openemr/openemr/issues/7186))\n  -  escaping custom templates used with ckeditor ([#7151](https://github.com/openemr/openemr/issues/7151))\n  -  etherFax fails render on large download log. ([#7430](https://github.com/openemr/openemr/issues/7430))\n  -  eye exam chart fails since upgrade to latest chart.js package ([#7155](https://github.com/openemr/openemr/issues/7155))\n  -  fatal implode error registering app when contacts is empty ([#7282](https://github.com/openemr/openemr/issues/7282))\n  -  fix bug ([#7231](https://github.com/openemr/openemr/pull/7231))\n  -  fix bug ([#7229](https://github.com/openemr/openemr/pull/7229))\n  -  fix jspdf versions from PR#7429 ([#7447](https://github.com/openemr/openemr/pull/7447))\n  -  need to handle multiple modifiers in fee sheet ([#7165](https://github.com/openemr/openemr/issues/7165))\n  -  not_due not working in the Clinical Reminders widget ([#7200](https://github.com/openemr/openemr/issues/7200))\n  -  pdf download patient report ([#7053](https://github.com/openemr/openemr/issues/7053))\n  -  php fatal math error when saving empty statement count editing invoice ([#7280](https://github.com/openemr/openemr/issues/7280))\n  -  rel_702 form_encounter missing last_update field ([#7183](https://github.com/openemr/openemr/issues/7183))\n  -  saving `# of tablets` in a prescription to `9999999999` sets it to `2147483647` ([#7314](https://github.com/openemr/openemr/issues/7314))\n  -  saving existing insurance with no country in address ([#7331](https://github.com/openemr/openemr/issues/7331))\n  -  visit history count for display of ALL results incorrect, if shorter pages displayed previously ([#7385](https://github.com/openemr/openemr/issues/7385))\n\n\n### Changed\n  -  to not allow user to pick future date for DOB ([#7379](https://github.com/openemr/openemr/pull/7379))\n  -  replace htmlspecialchars with escaping functions for recent commit ([#7146](https://github.com/openemr/openemr/pull/7146))\n  -  Nation Notes components display breaks when building a list of components. ([#7176](https://github.com/openemr/openemr/issues/7176))\n  -  batch payments distinct tab ([#7398](https://github.com/openemr/openemr/pull/7398))\n  -  billing manager To Encounter button to load proper person ([#7420](https://github.com/openemr/openemr/pull/7420))\n  -  bug ([#7435](https://github.com/openemr/openemr/pull/7435))\n  -  bug ([#7434](https://github.com/openemr/openemr/pull/7434))\n  -  bug fix ([#7230](https://github.com/openemr/openemr/pull/7230))\n  -  bug fix for rel-702 ([#7193](https://github.com/openemr/openemr/pull/7193))\n  -  cdr fix to correctly show actions that are due, due soon, past due in expanded listings ([#7211](https://github.com/openemr/openemr/pull/7211))\n\n\n### OpenEMR Developer Changes\n\n### Added\n  -  Add module perform after actions functionality to Module Manager ([#7147](https://github.com/openemr/openemr/issues/7147))\n  -  Add to SMART style twig files the OpenEMR logo and populate the modal backdrop color ([#7134](https://github.com/openemr/openemr/issues/7134))\n  -  Add zipcode plus_four to address service / apis ([#7216](https://github.com/openemr/openemr/issues/7216))\n  -  Allow module writers to add commands to the bin/console command runner ([#7237](https://github.com/openemr/openemr/issues/7237))\n  -  Enhance BaseService->getSelectFields to support table and column aliases ([#7370](https://github.com/openemr/openemr/issues/7370))\n  -  Extract billing code selector logic from options.inc.php into its own class ([#7323](https://github.com/openemr/openemr/issues/7323))\n  -  Extract local providers list selector logic from options.inc.php into its own class ([#7368](https://github.com/openemr/openemr/issues/7368))\n  -  FHIR Patient missing deceasedBoolean ([#7063](https://github.com/openemr/openemr/issues/7063))\n  -  FHIR ValueSet is missing ([#7062](https://github.com/openemr/openemr/issues/7062))\n  -  Infrastructure to send documents to cloud storage buckets ([#7232](https://github.com/openemr/openemr/issues/7232))\n  -  Insurance Company Service allow setting id and make phone settings optional ([#7217](https://github.com/openemr/openemr/issues/7217))\n  -  Time format in logs should display seconds instead of just hours and minutes ([#7335](https://github.com/openemr/openemr/issues/7335))\n  -  Title is not returned when getting list of Appointments via API. ([#7301](https://github.com/openemr/openemr/issues/7301))\n  -  Twigify Portal Quick Start landing page. Prep for plugin support. ([#7116](https://github.com/openemr/openemr/issues/7116))\n  -  User settings not set if not in globals. ([#7194](https://github.com/openemr/openemr/issues/7194))\n  -  minor CryptoGen class updates ([#7365](https://github.com/openemr/openemr/pull/7365))\n\n\n### Fixed\n  -  Adding calendar event (appointment) via API causes endTime to be set to 0:00:00 ([#7300](https://github.com/openemr/openemr/issues/7300))\n  -  CCDA import creates extra entries in list_options for drug_units list_id ([#7319](https://github.com/openemr/openemr/issues/7319))\n  -  Duplicated \"extends\" key in stylelint configuration file ([#6700](https://github.com/openemr/openemr/issues/6700))\n  -  FHIR Appointment fields wrong or missing ([#7061](https://github.com/openemr/openemr/issues/7061))\n  -  FHIR Encounter lastUpdated field is wrong and missing as search param ([#7064](https://github.com/openemr/openemr/issues/7064))\n  -  InstallerController needs to pass current status to ModuleManagerAfterActionListener action methods ([#7214](https://github.com/openemr/openemr/issues/7214))\n  -  Insurance Company Service does not load records that have no address entry ([#7226](https://github.com/openemr/openemr/issues/7226))\n  -  PatientValidator email address should not fail to validate with empty string \"\" for email ([#7219](https://github.com/openemr/openemr/issues/7219))\n  -  SMART on FHIR style url is throwing 500 error. ([#7133](https://github.com/openemr/openemr/issues/7133))\n  -  SectionEvent->addCard append places second function call in first index position ([#7171](https://github.com/openemr/openemr/issues/7171))\n  -  Trusted Email is missing from FHIR Patient ([#7113](https://github.com/openemr/openemr/issues/7113))\n  -  ccda import fails on empty postParseEvent ([#7347](https://github.com/openemr/openemr/issues/7347))\n  -  missing use aclmain statement in prior commit ([#7427](https://github.com/openemr/openemr/issues/7427))\n\n\n### Changed\n  -  bump phpseclib/phpseclib from 3.0.34 to 3.0.36 ([#7259](https://github.com/openemr/openemr/pull/7259))\n  -  ci add mariadb 11.3, change mysql 8.2 to mysql 8.3 ([#7273](https://github.com/openemr/openemr/pull/7273))\n  -  commit 2 that updates github actions for docker builds to prevent deprecations ([#7272](https://github.com/openemr/openemr/pull/7272))\n  -  update github actions for docker builds to prevent deprecations ([#7271](https://github.com/openemr/openemr/pull/7271))\n  -  possible fix of logic in jquery-datetimepicker-2-5-4-translated.js ([#7223](https://github.com/openemr/openemr/pull/7223))\n\n## [7.0.2.1](https://github.com/openemr/openemr/milestone/13?closed=1) - 2024-04-26\n\n### Added\n  -  Add to SMART style twig files the OpenEMR logo and populate the modal backdrop color ([#7134](https://github.com/openemr/openemr/issues/7134))\n  -  Add zipcode plus_four to address service / apis ([#7216](https://github.com/openemr/openemr/issues/7216))\n  -  Allow module writers to add commands to the bin/console command runner ([#7237](https://github.com/openemr/openemr/issues/7237))\n  -  Encounter and observation report generation in Patient List Creation ([#7014](https://github.com/openemr/openemr/issues/7014))\n  -  Enhance BaseService->getSelectFields to support table and column aliases ([#7370](https://github.com/openemr/openemr/issues/7370))\n  -  Extract billing code selector logic from options.inc.php into its own class ([#7323](https://github.com/openemr/openemr/issues/7323))\n  -  Extract local providers list selector logic from options.inc.php into its own class ([#7368](https://github.com/openemr/openemr/issues/7368))\n  -  FHIR Patient missing deceasedBoolean ([#7063](https://github.com/openemr/openemr/issues/7063))\n  -  FHIR ValueSet is missing ([#7062](https://github.com/openemr/openemr/issues/7062))\n  -  Infrastructure to send documents to cloud storage buckets ([#7232](https://github.com/openemr/openemr/issues/7232))\n  -  Insurance Company Service allow setting id and make phone settings optional ([#7217](https://github.com/openemr/openemr/issues/7217))\n  -  Modernize Work School Note ([#6946](https://github.com/openemr/openemr/issues/6946))\n  -  Password strength meter missing ([#7366](https://github.com/openemr/openemr/issues/7366))\n  -  Patient Insurance Policy rest endpoint for updating a specific policy  ([#7143](https://github.com/openemr/openemr/issues/7143))\n  -  Refactor Demographics Insurance Edit Screen ([#7108](https://github.com/openemr/openemr/issues/7108))\n  -  Title is not returned when getting list of Appointments via API. ([#7301](https://github.com/openemr/openemr/issues/7301))\n  -  add Real World Testing Report for 2024 ([#7210](https://github.com/openemr/openemr/pull/7210))\n  -  electronically post payment when billed modifier isn't returned in ERA ([#7293](https://github.com/openemr/openemr/issues/7293))\n  -  minor CryptoGen class updates ([#7365](https://github.com/openemr/openemr/pull/7365))\n  -  support 2024 reporting cqm valueset import ([#7317](https://github.com/openemr/openemr/issues/7317))\n  -  support electronic worker's comp claims ([#7206](https://github.com/openemr/openemr/issues/7206))\n  -  use default visit category in add edit event ([#7189](https://github.com/openemr/openemr/issues/7189))\n\n\n### Fixed\n  - Add module perform after actions functionality to Module Manager ([#7147](https://github.com/openemr/openemr/issues/7147))\n  - Authentication Error when opening a patient with Open in New Browser Tab checked. ([#7167](https://github.com/openemr/openemr/issues/7167))\n  - CDR gui summary screen submit breaks when set no alert types ([#7178](https://github.com/openemr/openemr/issues/7178))\n  - Change Module Manager ([#7247](https://github.com/openemr/openemr/issues/7247))\n  - Eye Form Style fixes ([#7051](https://github.com/openemr/openemr/pull/7051))\n  - Missing Pdf and Track Anything style sheets ([#7258](https://github.com/openemr/openemr/issues/7258))\n  - Nation Notes components render broken. ([#7176](https://github.com/openemr/openemr/issues/7176))\n  - Opening portal templates from documents broken ([#7173](https://github.com/openemr/openemr/issues/7173))\n  - SNOMED lookup is slow in some places ([#7276](https://github.com/openemr/openemr/issues/7276))\n  - Saving `# of tablets` in a prescription to `9999999999` sets it to `2147483647` ([#7314](https://github.com/openemr/openemr/issues/7314))\n  - Show group attendance in encounter summary ([#7127](https://github.com/openemr/openemr/issues/7127))\n  - Trusted Email is missing from FHIR Patient ([#7113](https://github.com/openemr/openemr/issues/7113))\n  - Various Bug fixes. ([#7222](https://github.com/openemr/openemr/pull/7222))\n  - Weno EZ Integration ([#6635](https://github.com/openemr/openemr/issues/6635))\n  - Weno fixes and updates ([#7204](https://github.com/openemr/openemr/pull/7204))\n  - Weno module changes ([#7208](https://github.com/openemr/openemr/pull/7208))\n  - When google single sign on is enabled it still requires user to use password from openEMR to sign the encounter doesn't use single sign on. ([#7254](https://github.com/openemr/openemr/issues/7254))\n  - appointments report total incorrect ([#7289](https://github.com/openemr/openemr/issues/7289))\n  - billing_note duplication ([#7287](https://github.com/openemr/openemr/issues/7287))\n  -  837P service location details are not created when service facility and billing facility differ ([#7213](https://github.com/openemr/openemr/issues/7213))\n  -  Billing Manager Date of Service selector not working ([#7069](https://github.com/openemr/openemr/issues/7069))\n  -  CCDA import creates extra entries in list_options for drug_units list_id ([#7319](https://github.com/openemr/openemr/issues/7319))\n  -  Clinical Rules - dates and filters ([#7157](https://github.com/openemr/openemr/issues/7157))\n  -  Clinical Rules - interval boundaries used in evaluating target instances ([#7161](https://github.com/openemr/openemr/issues/7161))\n  -  Clinical Rules - several fixes ([#7153](https://github.com/openemr/openemr/issues/7153))\n  -  Duplicated \"extends\" key in stylelint configuration file ([#6700](https://github.com/openemr/openemr/issues/6700))\n  -  FHIR Appointment fields wrong or missing ([#7061](https://github.com/openemr/openemr/issues/7061))\n  -  FHIR Encounter lastUpdated field is wrong and missing as search param ([#7064](https://github.com/openemr/openemr/issues/7064))\n  -  File missing for Quest Lab Hub to function properly ([#7084](https://github.com/openemr/openemr/issues/7084))\n  -  In Visit History, print, or save as PDF, a multi-page list of encounters doesn't print or save all results. ([#7270](https://github.com/openemr/openemr/issues/7270))\n  -  Inadequate time format in logs ([#7335](https://github.com/openemr/openemr/issues/7335))\n  -  InstallerController needs to pass current status to ModuleManagerAfterActionListener action methods ([#7214](https://github.com/openemr/openemr/issues/7214))\n  -  Insurance Company Service does not load records that have no address entry ([#7226](https://github.com/openemr/openemr/issues/7226))\n  -  Insurance Edit Add Provider Does Not Update Provider List ([#7109](https://github.com/openemr/openemr/issues/7109))\n  -  Insurance Edit Screen overwrites insurance fax value ([#7164](https://github.com/openemr/openemr/issues/7164))\n  -  Insurance rest endpoints documentation incorrect for patient pid  ([#7145](https://github.com/openemr/openemr/issues/7145))\n  -  LBF printable fatal error ([#7148](https://github.com/openemr/openemr/issues/7148))\n  -  LBF query error ([#7239](https://github.com/openemr/openemr/issues/7239))\n  -  Messages SMS Zone Combobox width ([#6070](https://github.com/openemr/openemr/issues/6070))\n  -  OpenEMR\\Service\\BaseService->getSelectJoinClauses() join_clause property is improperly escaped ([#7188](https://github.com/openemr/openemr/issues/7188))\n  -  Patient Insurance List All Endpoint fails ([#7107](https://github.com/openemr/openemr/issues/7107))\n  -  PatientValidator email address should not fail to validate with empty string \"\" for email ([#7219](https://github.com/openemr/openemr/issues/7219))\n  -  Practice Settings Insurance Company list extremely slow to load with hundreds of insurance companies ([#7224](https://github.com/openemr/openemr/issues/7224))\n  -  SMART on FHIR style url is throwing 500 error. ([#7133](https://github.com/openemr/openemr/issues/7133))\n  -  SectionEvent->addCard append places second function call in first index position ([#7171](https://github.com/openemr/openemr/issues/7171))\n  -  Unable to share templates in nations note ([#7129](https://github.com/openemr/openemr/issues/7129))\n  -  balance formatting in front payment ([#7260](https://github.com/openemr/openemr/issues/7260))\n  -  broken validation of claim with replaced insurance ([#7263](https://github.com/openemr/openemr/issues/7263))\n  -  ccda import fails on empty postParseEvent ([#7347](https://github.com/openemr/openemr/issues/7347))\n  -  document display fail on empty array key ([#7390](https://github.com/openemr/openemr/issues/7390))\n  -  era posting denial write off ([#7186](https://github.com/openemr/openemr/issues/7186))\n  -  escaping custom templates used with ckeditor ([#7151](https://github.com/openemr/openemr/issues/7151))\n  -  eye exam chart fails since upgrade to latest chart.js package ([#7155](https://github.com/openemr/openemr/issues/7155))\n  -  fatal implode error registering app when contacts is empty ([#7282](https://github.com/openemr/openemr/issues/7282))\n  -  fix bug ([#7231](https://github.com/openemr/openemr/pull/7231))\n  -  fix bug ([#7229](https://github.com/openemr/openemr/pull/7229))\n  -  multiple modifiers in fee sheet ([#7165](https://github.com/openemr/openemr/issues/7165))\n  -  pdf download patient report ([#7053](https://github.com/openemr/openemr/issues/7053))\n  -  php fatal math error when saving empty statement count editing invoice ([#7280](https://github.com/openemr/openemr/issues/7280))\n  -  rel_702 form_encounter missing last_update field ([#7183](https://github.com/openemr/openemr/issues/7183))\n  -  saving existing insurance with no country in address ([#7331](https://github.com/openemr/openemr/issues/7331))\n  - not_due not working in the Clinical Reminders widget ([#7200](https://github.com/openemr/openemr/issues/7200))\n  - weno changes ([#7384](https://github.com/openemr/openemr/pull/7384))\n\n\n### Changed\n  - 00:00 ([#7300](https://github.com/openemr/openemr/issues/7300))\n  -  OpenEMR logs sensitive information such as payment details ([#7340](https://github.com/openemr/openemr/issues/7340))\n  -  invalid-lts-license-key. ([#7097](https://github.com/openemr/openemr/issues/7097))\n  -  bump phpseclib/phpseclib from 3.0.34 to 3.0.36 ([#7259](https://github.com/openemr/openemr/pull/7259))\n  -  ci add mariadb 11.3, change mysql 8.2 to mysql 8.3 ([#7273](https://github.com/openemr/openemr/pull/7273))\n  -  commit 2 that updates github actions for docker builds to prevent deprecations ([#7272](https://github.com/openemr/openemr/pull/7272))\n  -  replace htmlspecialchars with escaping functions for recent commit ([#7146](https://github.com/openemr/openemr/pull/7146))\n  -  update github actions for docker builds to prevent deprecations ([#7271](https://github.com/openemr/openemr/pull/7271))\n  -  bug fix ([#7230](https://github.com/openemr/openemr/pull/7230))\n  -  bug fix for rel-702 ([#7193](https://github.com/openemr/openemr/pull/7193))\n  -  cdr fix to correctly show actions that are due, due soon, past due in expanded listings ([#7211](https://github.com/openemr/openemr/pull/7211))\n  -  possible fix of logic in jquery-datetimepicker-2-5-4-translated.js ([#7223](https://github.com/openemr/openemr/pull/7223))\n  -  reminder_results_integrate() to work when same actions are used in different rules ([#7266](https://github.com/openemr/openemr/issues/7266))\n\n\n### OpenEMR Developer Changes\n\n### Fixed\n  - Twigify Portal Quick Start landing page. Prep for plugin support. ([#7116](https://github.com/openemr/openemr/issues/7116))\n  - User settings not set if not in globals. ([#7194](https://github.com/openemr/openemr/issues/7194))\n\n\n## [7.0.2](https://github.com/openemr/openemr/milestone/12?closed=1) - 2023-11-17\n\n### Added\n-  2024 ICD10 update ([#6796](https://github.com/openemr/openemr/issues/6796))\n-  Add a combined nationality with country list to Demographics Stats group ([#6891](https://github.com/openemr/openemr/issues/6891))\n-  Add ability to prevent forced portal credential change ([#6813](https://github.com/openemr/openemr/issues/6813))\n-  Add container, better rendering of header, space buttons on the patient encounter page. ([#6768](https://github.com/openemr/openemr/pull/6768))\n-  Add global setting for Admins to configure patient portal credential force reset behavior ([#6824](https://github.com/openemr/openemr/pull/6824))\n-  Add patient upload to portal with portal notifications ([#6704](https://github.com/openemr/openemr/issues/6704))\n-  Allow In Collection for New Encounter Form to be hidden ([#6906](https://github.com/openemr/openemr/issues/6906))\n-  Allow default date in new Clinical Note ([#6909](https://github.com/openemr/openemr/issues/6909))\n-  Better spacing of additional code buttons on fee sheet ([#6790](https://github.com/openemr/openemr/pull/6790))\n-  Care Plan UI Wider Textbox ([#6709](https://github.com/openemr/openemr/pull/6709))\n-  Display recent last 10 most recent patients viewed by current user on patient finder ([#6641](https://github.com/openemr/openemr/pull/6641))\n-  EHI Export - track anything and updated table documentation ([#6987](https://github.com/openemr/openemr/pull/6987))\n-  Enhanced Default Open Tabs Options ([#6604](https://github.com/openemr/openemr/pull/6604))\n-  Implement ONC 2015 Certification (b)(10) Electronic Health Information Export  ([#6945](https://github.com/openemr/openemr/issues/6945))\n-  Improve UI and code of newpatient report.php ([#6748](https://github.com/openemr/openemr/issues/6748))\n-  Improve clinical note report User Interface to be more content-focused instead of table based. ([#6802](https://github.com/openemr/openemr/pull/6802))\n-  Improve the Facilities UI by moving addresses to pill based tab panel ([#6687](https://github.com/openemr/openemr/pull/6687))\n-  Issues detail form improve form layout and guide the user to avoid scrolling and show most common fields ([#6664](https://github.com/openemr/openemr/issues/6664))\n-  Limit OpenEMR core appearance themes to five to simplify both development and user choices. ([#6534](https://github.com/openemr/openemr/issues/6534))\n-  MFA TOTP should display a seed code to enter into an application that does not use QR Codes ([#6839](https://github.com/openemr/openemr/issues/6839))\n-  More encounter UI improvements ([#6794](https://github.com/openemr/openemr/pull/6794))\n-  Nationality list refactor for uniqueness and refactor nationality layout for new list ([#6936](https://github.com/openemr/openemr/pull/6936))\n-  Need a new demographic field for Preferred Name. ([#6726](https://github.com/openemr/openemr/issues/6726))\n-  Patient Portal restyle for portrait mode, add select to auto save, and alert patient to unsaved edits in edit mode ([#6560](https://github.com/openemr/openemr/pull/6560))\n-  Portal update landing page and use default OpenEMR style themes instead of custom portal style theme. ([#6523](https://github.com/openemr/openemr/issues/6523))\n-  Quest Lab Hub module support ([#6941](https://github.com/openemr/openemr/pull/6941))\n-  Remove old frameset settings for frames related globals ([#6462](https://github.com/openemr/openemr/pull/6462))\n-  Reorganize MRD cards ([#6582](https://github.com/openemr/openemr/pull/6582))\n-  Restyle front dashboard cards on patient demographics screen. ([#6883](https://github.com/openemr/openemr/issues/6883))\n-  Slight main interface redesign & 7.0.2+ mobile friendly changes on provider login view ([#6460](https://github.com/openemr/openemr/issues/6460))\n-  Support patient portal onetime login tokens ([#6786](https://github.com/openemr/openemr/pull/6786))\n-  The client app should avoid re-authenticating during it’s launch within OpenEMR ([#6525](https://github.com/openemr/openemr/issues/6525))\n-  ability to inactivate facilities that are no longer used ([#6585](https://github.com/openemr/openemr/issues/6585))\n-  create a fee schedule table to store the fee schedules from various payers ([#6955](https://github.com/openemr/openemr/issues/6955))\n-  expose valedictory in user admin and esign ([#6812](https://github.com/openemr/openemr/issues/6812))\n-  fix no-useless-escape error (eslint) ([#6734](https://github.com/openemr/openemr/pull/6734))\n-  invoices generated should be saved to pt documents ([#6950](https://github.com/openemr/openemr/issues/6950))\n-  put request urls from x12 clearinghouse screens into globals for versatility ([#6913](https://github.com/openemr/openemr/issues/6913))\n\n\n### Fixed\n-   Fix typo in interface/usergroup/mfa_totp.php ([#6974](https://github.com/openemr/openemr/issues/6974))\n-  \"Show Title on Login\" not working in OpenEMR 7.0.1 Patch 1 ([#6650](https://github.com/openemr/openemr/issues/6650))\n-  5010 interchange control numbers are expected to be unique ([#6900](https://github.com/openemr/openemr/issues/6900))\n-  Add Issue Does not refresh screen on save ([#7006](https://github.com/openemr/openemr/issues/7006))\n-  Allergy card on MRD fails to render NKDA ([#6759](https://github.com/openemr/openemr/issues/6759))\n-  ClaimRev Module problem in adding issues to encounter ([#6894](https://github.com/openemr/openemr/issues/6894))\n-  Clinical Note Category does not respect Active setting ([#6907](https://github.com/openemr/openemr/issues/6907))\n-  Clinical Note Type does not respect Active flag ([#6908](https://github.com/openemr/openemr/issues/6908))\n-  Clinical reports are not filtering by diagnosis ([#6879](https://github.com/openemr/openemr/issues/6879))\n-  Default themes font size to small ([#7027](https://github.com/openemr/openemr/issues/7027))\n-  Demographics not rendering ([#6765](https://github.com/openemr/openemr/issues/6765))\n-  Display oauth2 login error messages on login authorization page. ([#6845](https://github.com/openemr/openemr/issues/6845))\n-  Divide By Zero Fatal Error if PAMI not authorized ([#6965](https://github.com/openemr/openemr/issues/6965))\n-  EHI Export clinical notes form fixes and track anything implementation. ([#6985](https://github.com/openemr/openemr/pull/6985))\n-  Emailing invoices broken ([#6711](https://github.com/openemr/openemr/issues/6711))\n-  Encounter does not insert default POS from facility ([#6952](https://github.com/openemr/openemr/issues/6952))\n-  Eye Form fails to load correctly. Requires update to eye_mag_functions.php ([#6807](https://github.com/openemr/openemr/pull/6807))\n-  Facilities page active toggle button not styled correctly ([#6682](https://github.com/openemr/openemr/issues/6682))\n-  Fix dependencies for core portal apps with dark styling theme ([#6555](https://github.com/openemr/openemr/pull/6555))\n-  Fix undefined array key mod_relative_link and undefined php var closeAnchorClasses  ([#6976](https://github.com/openemr/openemr/pull/6976))\n-  Form Pain Map fails to save w/ incorrect arguments error ([#6742](https://github.com/openemr/openemr/issues/6742))\n-  Generate Demographic Widget/Cards from Modules - No custom function call in \"btnLink\" ([#6840](https://github.com/openemr/openemr/issues/6840))\n-  Head Circumference is missing from the vitals display chart due to incorrect unit conversion ([#6527](https://github.com/openemr/openemr/issues/6527))\n-  High severity allergies do not display with proper alarms ([#6662](https://github.com/openemr/openemr/issues/6662))\n-  Highlight when using custom theme shows text colored pink due to hard coded style ([#6865](https://github.com/openemr/openemr/issues/6865))\n-  Insufficient contrast when hovering over navbar in dark theme ([#6746](https://github.com/openemr/openemr/issues/6746))\n-  Issue with medical_problem api ([#6988](https://github.com/openemr/openemr/issues/6988))\n-  Lab requisition form does not work when connected orders are deleted  ([#6433](https://github.com/openemr/openemr/issues/6433))\n-  Line breaks of text are not exporting as is when generating an xml/word document ([#6868](https://github.com/openemr/openemr/issues/6868))\n-  Long Problem List leads to bad UI ([#6651](https://github.com/openemr/openemr/issues/6651))\n-  MFA Management -> add new TOTP key gives blank screen. ([#6961](https://github.com/openemr/openemr/issues/6961))\n-  MRD Portal Card does not respect global setting if portal and api are disabled ([#6653](https://github.com/openemr/openemr/issues/6653))\n-  MRD top cards break if all 4 are rendered ([#6760](https://github.com/openemr/openemr/issues/6760))\n-  Message doesn't allow assigned to user message display ([#6692](https://github.com/openemr/openemr/issues/6692))\n-  Newcrop send only active diagnosis ([#6956](https://github.com/openemr/openemr/pull/6956))\n-  Not all eligibilities were displaying in the ClaimRev module ([#6778](https://github.com/openemr/openemr/issues/6778))\n-  On add new patient Previous name populates with wrong name ([#6769](https://github.com/openemr/openemr/issues/6769))\n-  PHP 8 inventory lot edit error throws a fatal error when specifying the lot quantity. ([#6942](https://github.com/openemr/openemr/issues/6942))\n-  Patient portal typo and translation in login page. ([#6714](https://github.com/openemr/openemr/pull/6714))\n-  Portal documents corrupted on save. ([#6617](https://github.com/openemr/openemr/issues/6617))\n-  Portal patient default document templates should recur always ([#6538](https://github.com/openemr/openemr/issues/6538))\n-  Quest lab result should display specimen date ([#6917](https://github.com/openemr/openemr/issues/6917))\n-  Quickfix to reverse the text and nl2br tags in newpatient forms ([#6793](https://github.com/openemr/openemr/pull/6793))\n-  Remove hard coded gray background style in login page. ([#6920](https://github.com/openemr/openemr/issues/6920))\n-  Summary screen user setting not presisting ([#7018](https://github.com/openemr/openemr/issues/7018))\n-  Telehealth Transfer Appointment fails to launch appointment on latest 7.0.1 patch ([#6500](https://github.com/openemr/openemr/issues/6500))\n-  Update mfa_totp.php to not show blank screen when user hits enter ([#6916](https://github.com/openemr/openemr/pull/6916))\n-  add to list feature is broken ([#6484](https://github.com/openemr/openemr/issues/6484))\n-  add/edit issue fails to update begin or end date to null datetime ([#6619](https://github.com/openemr/openemr/issues/6619))\n-  address book and demographics contact referring providers with null username ([#6526](https://github.com/openemr/openemr/issues/6526))\n-  alert on batch payments screen flashes off  ([#6717](https://github.com/openemr/openemr/issues/6717))\n-  allergies appear when adding new patient with no issues ([#6724](https://github.com/openemr/openemr/issues/6724))\n-  allergies are displayed with duplicates on upgrade to 7.0.2 due to missing user value in lists table ([#6930](https://github.com/openemr/openemr/issues/6930))\n-  ambiguous facility id label ([#6963](https://github.com/openemr/openemr/issues/6963))\n-  apostrophe breaks comment in save inside order results ([#6938](https://github.com/openemr/openemr/pull/6938))\n-  appointments report lists canceled appointments ([#6546](https://github.com/openemr/openemr/issues/6546))\n-  billing log isn't logging validate only well ([#6558](https://github.com/openemr/openemr/issues/6558))\n-  calendar php8 fatal error in day, week, and month template views ([#6621](https://github.com/openemr/openemr/issues/6621))\n-  default payment method checkout  ([#6564](https://github.com/openemr/openemr/issues/6564))\n-  encounter pos code is saving when config option is disabled ([#6928](https://github.com/openemr/openemr/issues/6928))\n-  encounters history randomly shows \"Patient\" in red - round invoice amounts for better comparison and display. ([#6838](https://github.com/openemr/openemr/issues/6838))\n-  era posting display floatval fix and typo in patient.inc ([#6675](https://github.com/openemr/openemr/pull/6675))\n-  error message on changing table in demographic forms ([#6984](https://github.com/openemr/openemr/issues/6984))\n-  expand/collapse of widgets on dashboard summary javascript error when click on the font-awesome icon ([#6993](https://github.com/openemr/openemr/issues/6993))\n-  eye form ROS not saving ([#6623](https://github.com/openemr/openemr/issues/6623))\n-  eye form lists negative in PMSFH report and side bar even if there are entries ([#6625](https://github.com/openemr/openemr/issues/6625))\n-  eye form view.php shorthand icons are position incorrectly in 7.0. ([#6831](https://github.com/openemr/openemr/pull/6831))\n-  fix none issue mechanism in the patient summary screen ([#6861](https://github.com/openemr/openemr/pull/6861))\n-  fix none mechanism in issues gui ([#6860](https://github.com/openemr/openemr/pull/6860))\n-  fix parsing of allergy and medication responses from NewCrop, prevent sending diagnosis other than ICD10 to NewCrop ([#6912](https://github.com/openemr/openemr/pull/6912))\n-  fix several clinical_notes form fixes ([#6811](https://github.com/openemr/openemr/pull/6811))\n-  fix solar nav background, set default theme if missing in globals, add portal theme to global settings. ([#6536](https://github.com/openemr/openemr/pull/6536))\n-  fix static domain included in URL for patient portal onsite documents. ([#6829](https://github.com/openemr/openemr/pull/6829))\n-  fix summary screen cards expand and collapse persistence ([#6836](https://github.com/openemr/openemr/pull/6836))\n-  flow board stuck on appointment with status CALL ([#6596](https://github.com/openemr/openemr/issues/6596))\n-  immunizations are not showing up on the patient summary screen ([#6990](https://github.com/openemr/openemr/issues/6990))\n-  insurance date_end field not implemented ([#6532](https://github.com/openemr/openemr/issues/6532))\n-  inventory managment datatables warning ([#6642](https://github.com/openemr/openemr/issues/6642))\n-  login language selector settings for allowed languages and hiding dummy language ([#7023](https://github.com/openemr/openemr/pull/7023))\n-  menu tab with iframe of external domain shows loading overlay even after iframe has loaded ([#6781](https://github.com/openemr/openemr/issues/6781))\n-  minor fix in upgrade script for Document_Template_Categories list update ([#6590](https://github.com/openemr/openemr/pull/6590))\n-  output X12 payer zip even if not 5 or 9 digits ([#6529](https://github.com/openemr/openemr/issues/6529))\n-  output other insco zip ([#6599](https://github.com/openemr/openemr/issues/6599))\n-  passing integer instead of referenced variable to genX12837P fatal error ([#6495](https://github.com/openemr/openemr/issues/6495))\n-  patient finder + Add New Patient missing webroot ([#6722](https://github.com/openemr/openemr/issues/6722))\n-  patient portal card won't render for non-admins ([#6482](https://github.com/openemr/openemr/issues/6482))\n-  patient summary screen card sections fix for receptionist ([#6902](https://github.com/openemr/openemr/pull/6902))\n-  payment receipt not printing total paid ([#6492](https://github.com/openemr/openemr/issues/6492))\n-  posCode not saved with new encounter ([#6871](https://github.com/openemr/openemr/issues/6871))\n-  prior auth module hides Report in patient menu for non-admins ([#6578](https://github.com/openemr/openemr/issues/6578))\n-  referring provider in X125010837P not looking at the claims referrer ([#6544](https://github.com/openemr/openemr/issues/6544))\n-  remove cards max height to prevent scroll on longer lists. ([#7012](https://github.com/openemr/openemr/pull/7012))\n-  remove semicolon typos in sql upgrade script for x12_partners table ([#6926](https://github.com/openemr/openemr/pull/6926))\n-  reopening and clearing claim fatal error in billing report ([#6614](https://github.com/openemr/openemr/issues/6614))\n-  results only electronic procedure results create multiple encounters for same datetime ([#6933](https://github.com/openemr/openemr/issues/6933))\n-  service facility zip code not present in 837 professional claims if not 9 digits ([#6488](https://github.com/openemr/openemr/issues/6488))\n-  topatient call in billing report doesn't load encs ([#6583](https://github.com/openemr/openemr/issues/6583))\n-  typo in 701 to 702 upgrade ([#6586](https://github.com/openemr/openemr/pull/6586))\n-  use datetime of procedure result to match existing encounter ([#6934](https://github.com/openemr/openemr/pull/6934))\n- quick fix for default open tabs on upgrade ([#6646](https://github.com/openemr/openemr/pull/6646))\n\n\n### Changed\n-  ClaimRev fix styling issue ([#6835](https://github.com/openemr/openemr/pull/6835))\n-  Refactor oauth2 authorization flow template files into twig ([#6844](https://github.com/openemr/openemr/issues/6844))\n-  change stream to file with mpdf output in billing invoice from recent commit ([#6970](https://github.com/openemr/openemr/pull/6970))\n-  fix IDE intellisense error in front_payment.php ([#6898](https://github.com/openemr/openemr/issues/6898))\n-  EHI Export - Asynchronous Export Progress Updates. ([#6977](https://github.com/openemr/openemr/pull/6977))\n-  use patient filter to assist remote chart review ([#6553](https://github.com/openemr/openemr/issues/6553))\n-  Use bootstrap for list items on multi sorted list options ([#6603](https://github.com/openemr/openemr/pull/6603))\n-  do not list canceled appts in report by default ([#6547](https://github.com/openemr/openemr/pull/6547))\n-  fixes to allergy card in patient summary ([#6863](https://github.com/openemr/openemr/pull/6863))\n-  patient summary screen fix for receptionist ([#6862](https://github.com/openemr/openemr/pull/6862))\n-  improve button colors in (registration-modal) ([#6804](https://github.com/openemr/openemr/pull/6804))\n-  test and refactor populateTimezones function in (ccdaservice) ([#6818](https://github.com/openemr/openemr/pull/6818))\n\n\n### OpenEMR Developer Changes\n\n### Added\n-  API support for _sort parameter ([#6799](https://github.com/openemr/openemr/issues/6799))\n-  Add Delete and Render Event Hooks to appointment add screen ([#6591](https://github.com/openemr/openemr/issues/6591))\n-  Add OpenEMR regular date time twig filter function ([#6631](https://github.com/openemr/openemr/issues/6631))\n-  Add Render event on forms.php page for encounter forms page. ([#6629](https://github.com/openemr/openemr/issues/6629))\n-  Add RestAPISecurityCheckEvent to allow module writers to extend or change the API security checks. ([#6504](https://github.com/openemr/openemr/issues/6504))\n-  Add a system event to billing payment deletion for module writers to know when a payment is deleted. ([#6841](https://github.com/openemr/openemr/issues/6841))\n-  Add core event hooks to QuestionnaireResponse save/insert records. ([#6506](https://github.com/openemr/openemr/issues/6506))\n-  Add new environment variable to disable background services for repeater services ([#6601](https://github.com/openemr/openemr/issues/6601))\n-  Add system event to send SMS from Secure Messaging for module or core code to hook into ([#6593](https://github.com/openemr/openemr/issues/6593))\n-  Add system events for module writers to hook into the CDA Parse Engine ([#6731](https://github.com/openemr/openemr/pull/6731))\n-  Add system events to CDA Import for module writers. ([#6715](https://github.com/openemr/openemr/issues/6715))\n-  Add system events to be dispatched on the front payments page for module writers. ([#6877](https://github.com/openemr/openemr/issues/6877))\n-  Add to UtilsService methods for dealing with FHIR Canonical URLs, OperationOutcomes, and Reference resources ([#6505](https://github.com/openemr/openemr/issues/6505))\n-  Allow CORS content-encoding header ([#6634](https://github.com/openemr/openemr/issues/6634))\n-  Allow module writers to override / hook into the SMART style_url ([#6919](https://github.com/openemr/openemr/issues/6919))\n-  Allow multiple paths to be added to TwigContainer for template directories ([#6632](https://github.com/openemr/openemr/issues/6632))\n-  Convert from smarty to twig the SOAP Note  ([#5983](https://github.com/openemr/openemr/issues/5983))\n-  Create event to send SMS and Email notifications ([#6588](https://github.com/openemr/openemr/issues/6588))\n-  Email Queue support html/text view with twig templates ([#6772](https://github.com/openemr/openemr/issues/6772))\n-  Enhance FHIR UtilsService with extension lookup method ([#6849](https://github.com/openemr/openemr/issues/6849))\n-  Extend PatientService to have methods for retrieving a list of the PCP for a given list of patients ([#6509](https://github.com/openemr/openemr/issues/6509))\n-  Extend appointment dialog with hooks for modules and smart apps ([#6720](https://github.com/openemr/openemr/issues/6720))\n-  Extract patient portal pdf generator into separate service ([#6570](https://github.com/openemr/openemr/issues/6570))\n-  FHIR Date Search support partial seconds component ([#6669](https://github.com/openemr/openemr/issues/6669))\n-  FHIR Patient Resource support generalPractitioner data field ([#6827](https://github.com/openemr/openemr/issues/6827))\n-  Fixes #6629 Encounter forms list render event ([#6630](https://github.com/openemr/openemr/pull/6630))\n-  Implement Portal Dashboard Audit Report Javascript Event ([#6568](https://github.com/openemr/openemr/issues/6568))\n-  Improved customizations on login page logo and portal navbar logo ([#6515](https://github.com/openemr/openemr/pull/6515))\n-  Patient Service api sort order for name field make title last field sorted on. ([#6851](https://github.com/openemr/openemr/issues/6851))\n-  Patient api endpoints support _lastUpdated search parameter ([#6800](https://github.com/openemr/openemr/issues/6800))\n-  Patient portal pdf document return Document object instead of success message ([#6610](https://github.com/openemr/openemr/issues/6610))\n-  REST API add user endpoint in order to grab any user not just practitioners. ([#6751](https://github.com/openemr/openemr/issues/6751))\n-  Twig extension to get logo from within template, instead of having to pass it in as a variable ([#6247](https://github.com/openemr/openemr/issues/6247))\n-  Update FHIR Capability statement to indicate we do not allow resources to be created with an update operation ([#6576](https://github.com/openemr/openemr/issues/6576))\n-  add javascript lint support to devtools  ([#6719](https://github.com/openemr/openemr/pull/6719))\n-  coverage reports for js unit tests (jest) ([#6735](https://github.com/openemr/openemr/pull/6735))\n-  globals setting allow address book data type for user id selection ([#6752](https://github.com/openemr/openemr/issues/6752))\n-  minor refactor x12 insurance eligibility api ([#6915](https://github.com/openemr/openemr/pull/6915))\n\n\n### Fixed\n-  API calls with pagination _limit or _offset parameters generates fatal error. ([#6848](https://github.com/openemr/openemr/issues/6848))\n-  Allow auth portal users to view pnotes from portal ([#6695](https://github.com/openemr/openemr/issues/6695))\n-  Bulk FHIR Export Capability Statement Operation Name incorrect ([#7019](https://github.com/openemr/openemr/issues/7019))\n-  Bulk FHIR fails w/ 500 error in patient/system export due to missing patient ids exception ([#7001](https://github.com/openemr/openemr/issues/7001))\n-  Bulk Patient FHIR Export fails w/ 500 error when OpenEMR has insurance company provider in the system. ([#7000](https://github.com/openemr/openemr/issues/7000))\n-  Duplicate stylelint command in CI ([#6702](https://github.com/openemr/openemr/issues/6702))\n-  FHIR Confidential Client fails CORS OPTIONS check in browser window when requesting /token endpoint ([#6497](https://github.com/openemr/openemr/issues/6497))\n-  FHIR POST _search operation returns different results than GET search ([#6732](https://github.com/openemr/openemr/issues/6732))\n-  FHIR api warnings for missing array keys in AllergyIntolerance, Vitals Observations, Social History Observations, Procedures ([#7002](https://github.com/openemr/openemr/issues/7002))\n-  Fix EncounterValidator typo on configureValidator() to avoid fatal error ([#6875](https://github.com/openemr/openemr/issues/6875))\n-  Fix QuestionnaireResponse search operation to deal with duplicate field ids in where clause ([#6574](https://github.com/openemr/openemr/issues/6574))\n-  Fix fax/sms module event usage from API dispatch.php call ([#6820](https://github.com/openemr/openemr/issues/6820))\n-  Fix questionnaire_assessments to not php die if there is a form problem. ([#6677](https://github.com/openemr/openemr/issues/6677))\n-  Gulp theme build deprecation warning in development mode ([#6542](https://github.com/openemr/openemr/issues/6542))\n-  Missing user rest controller for API causing user api to fail ([#6783](https://github.com/openemr/openemr/issues/6783))\n-  Questionnaire URL needs to be a cannonical FQDN url ([#6507](https://github.com/openemr/openemr/issues/6507))\n-  Questionnaire source_url breaks if oauth2 fhir url does not end in a slash ([#6672](https://github.com/openemr/openemr/issues/6672))\n-  REST API filter by UUID breaks on some endpoints ([#6107](https://github.com/openemr/openemr/pull/6107))\n-  Telehealth Patient Updated event signature type broken with patient update by uuid ([#6499](https://github.com/openemr/openemr/issues/6499))\n-  Typos in templates/error HTML files ([#6698](https://github.com/openemr/openemr/issues/6698))\n-  Unable to use the  internal api and fhir apis locally inside a new module by using the existing code in the test files  ([#6744](https://github.com/openemr/openemr/issues/6744))\n-  Zend module installer upgrade broken for custom modules in PHP8 ([#6808](https://github.com/openemr/openemr/issues/6808))\n-  add ccdaservice/package-lock.json to .gitignore to help with easy development dockers ([#6979](https://github.com/openemr/openemr/issues/6979))\n-  deprecated php: creation of dynamic property $groupId in src/Events/Encounter/EncounterFormsListRenderEvent.php ([#6815](https://github.com/openemr/openemr/issues/6815))\n-  escaping in patient portal and transactions screen. ([#6697](https://github.com/openemr/openemr/pull/6697))\n-  fix no-mixed-spaces-and-tabs error (eslint) ([#6728](https://github.com/openemr/openemr/pull/6728))\n-  lock down pnotes to user ([#6550](https://github.com/openemr/openemr/pull/6550))\n-  oauth2 key should regenerate if key is empty or corrupted when in development mode. fix rest config include in api auth controller ([#6607](https://github.com/openemr/openemr/pull/6607))\n-  openemr-api.yaml fails validation when generating client library with openapi-generator ([#6967](https://github.com/openemr/openemr/issues/6967))\n-  typo in sql upgrade with email_queue table ([#6797](https://github.com/openemr/openemr/issues/6797))\n-  use mb_strlen to check field value length in get_layout_form_value() ([#6707](https://github.com/openemr/openemr/pull/6707))\n\n\n### Changed\n-  Change HttpRestRequest class to implement PSR7 ServerRequestInterface ([#6503](https://github.com/openemr/openemr/issues/6503))\n-  ESLint setup in OpenEMR ([#6708](https://github.com/openemr/openemr/pull/6708))\n-  Improved handling of inserting and updating encounters ([#6647](https://github.com/openemr/openemr/pull/6647))\n-  Make it possible to save OAuth2 client outside of AuthorizationController.php ([#6575](https://github.com/openemr/openemr/issues/6575))\n-  ci adjustments for alpine 3.18, php 8.2,  and mariadb updates ([#6581](https://github.com/openemr/openemr/pull/6581))\n-  ci mariadb stuff - added 11.1 and removed 10.9 ([#6834](https://github.com/openemr/openemr/pull/6834))\n-  documentation for flex docker now using alpine 3.18 with php 8.2 ([#6580](https://github.com/openemr/openemr/pull/6580))\n-  drop support for arm7 ([#7007](https://github.com/openemr/openemr/pull/7007))\n-  insane dev environment updates ([#6925](https://github.com/openemr/openemr/pull/6925))\n-  packages update and set min php version 8.1 ([#6867](https://github.com/openemr/openemr/pull/6867))\n-  php 8.3 fixes to prepare for next release ([#6935](https://github.com/openemr/openemr/pull/6935))\n-  pinned maennchen/zipstream-php version to work with arm7 and updated packages ([#6973](https://github.com/openemr/openemr/pull/6973))\n-  specify interface folders with errors (stylelint) ([#6780](https://github.com/openemr/openemr/pull/6780))\n-  upgrade phpseclib from version 2 to version 3 ([#6887](https://github.com/openemr/openemr/pull/6887))\n-  bugs ([#6552](https://github.com/openemr/openemr/pull/6552))\n-  fix AllergyIntoleranceService lookup by pid to return results instead of empty list. ([#6864](https://github.com/openemr/openemr/pull/6864))\n-  fix stylelint errors in admin.css (gacl) ([#6777](https://github.com/openemr/openemr/pull/6777))\n-  Refactor portal templates scheduling from profile to individual templates in profile ([#6612](https://github.com/openemr/openemr/issues/6612))\n-  change the generate_select_list function and incorporate it to Twig ([#6659](https://github.com/openemr/openemr/pull/6659))\n-  extract and test cleanCode function (ccdaservice) ([#6785](https://github.com/openemr/openemr/pull/6785))\n-  extract and test date functions (ccdaservice) ([#6795](https://github.com/openemr/openemr/pull/6795))\n-  extract and test headReplace function (ccdaservice) ([#6792](https://github.com/openemr/openemr/pull/6792))\n-  extract and test safeTrim function (ccdaservice) ([#6788](https://github.com/openemr/openemr/pull/6788))\n-  improve DataStack class (ccdaservice) ([#6718](https://github.com/openemr/openemr/pull/6718))\n-  refactor bucks function with new class based on oeFormatMoney ([#6932](https://github.com/openemr/openemr/pull/6932))\n-  test and refactor count entities function (ccdaservice) ([#6805](https://github.com/openemr/openemr/pull/6805))\n-  test and refactor fetchPreviousAddresses function in the ccdaservice ([#6828](https://github.com/openemr/openemr/pull/6828))\n-  test and refactor populateDemographics function (ccdaservice) ([#6837](https://github.com/openemr/openemr/pull/6837))\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.396484375,
          "content": "# Code of Conduct\n\n## 1. Purpose\n\nA primary goal of OpenEMR is to be inclusive to the largest number of contributors, with the most varied and diverse backgrounds possible. As such, we are committed to providing a friendly, safe and welcoming environment for all, regardless of gender, sexual orientation, ability, ethnicity, socioeconomic status, and religion (or lack thereof).\n\nThis code of conduct outlines our expectations for all those who participate in our community, as well as the consequences for unacceptable behavior.\n\nWe invite all those who participate in OpenEMR to help us create safe and positive experiences for everyone.\n\n## 2. Open Source Citizenship\n\nA supplemental goal of this Code of Conduct is to increase open source citizenship by encouraging participants to recognize and strengthen the relationships between our actions and their effects on our community.\n\nCommunities mirror the societies in which they exist and positive action is essential to counteract the many forms of inequality and abuses of power that exist in society.\n\nIf you see someone who is making an extra effort to ensure our community is welcoming, friendly, and encourages all participants to contribute to the fullest extent, we want to know.\n\n## 3. Expected Behavior\n\nThe following behaviors are expected and requested of all community members:\n\n*   Participate in an authentic and active way. In doing so, you contribute to the health and longevity of this community.\n*   Exercise consideration and respect in your speech and actions.\n*   Attempt collaboration before conflict.\n*   Refrain from demeaning, discriminatory, or harassing behavior and speech.\n*   Be mindful of your surroundings and of your fellow participants. Alert community leaders if you notice a dangerous situation, someone in distress, or violations of this Code of Conduct, even if they seem inconsequential.\n*   Remember that community event venues may be shared with members of the public; please be respectful to all patrons of these locations.\n\n## 4. Unacceptable Behavior\n\nThe following behaviors are considered harassment and are unacceptable within our community:\n\n*   Violence, threats of violence or violent language directed against another person.\n*   Sexist, racist, homophobic, transphobic, ableist or otherwise discriminatory jokes and language.\n*   Posting or displaying sexually explicit or violent material.\n*   Posting or threatening to post other people’s personally identifying information (\"doxing\").\n*   Personal insults, particularly those related to gender, sexual orientation, race, religion, or disability.\n*   Inappropriate photography or recording.\n*   Inappropriate physical contact. You should have someone’s consent before touching them.\n*   Unwelcome sexual attention. This includes, sexualized comments or jokes; inappropriate touching, groping, and unwelcomed sexual advances.\n*   Deliberate intimidation, stalking or following (online or in person).\n*   Advocating for, or encouraging, any of the above behavior.\n*   Sustained disruption of community events, including talks and presentations.\n\n## 5. Consequences of Unacceptable Behavior\n\nUnacceptable behavior from any community member, including sponsors and those with decision-making authority, will not be tolerated.\n\nAnyone asked to stop unacceptable behavior is expected to comply immediately.\n\nIf a community member engages in unacceptable behavior, the community organizers may take any action they deem appropriate, up to and including a temporary ban or permanent expulsion from the community without warning (and without refund in the case of a paid event).\n\n## 6. Reporting Guidelines\n\nIf you are subject to or witness unacceptable behavior, or have any other concerns, please notify a community organizer as soon as possible. This can be done by sending a direct message to \"admins\" on the community forums found at https://community.open-emr.org/.\n\n\n\nAdditionally, community organizers are available to help community members engage with local law enforcement or to otherwise help those experiencing unacceptable behavior feel safe. In the context of in-person events, organizers will also provide escorts as desired by the person experiencing distress.\n\n## 7. Addressing Grievances\n\nIf you feel you have been falsely or unfairly accused of violating this Code of Conduct, you should notify OpenEMR with a concise description of your grievance. Your grievance will be handled in accordance with our existing governing policies.\n\n\n\n## 8. Scope\n\nWe expect all community participants (contributors, paid or otherwise; sponsors; and other guests) to abide by this Code of Conduct in all community venues–online and in-person–as well as in all one-on-one communications pertaining to community business.\n\nThis code of conduct and its related procedures also applies to unacceptable behavior occurring outside the scope of community activities when such behavior has the potential to adversely affect the safety and well-being of community members.\n\n## 10. License and attribution\n\nThis Code of Conduct is distributed under a [Creative Commons Attribution-ShareAlike license](http://creativecommons.org/licenses/by-sa/3.0/).\n\nPortions of text derived from the [Django Code of Conduct](https://www.djangoproject.com/conduct/) and the [Geek Feminism Anti-Harassment Policy](http://geekfeminism.wikia.com/wiki/Conference_anti-harassment/Policy).\n\nRetrieved on November 22, 2016 from [http://citizencodeofconduct.org/](http://citizencodeofconduct.org/)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 35.01953125,
          "content": "Thank you for your contribution. OpenEMR (and global healthcare) continues to get better because of people like you!\n\nThe maintainers of OpenEMR want to get your pull request in as seamlessly as possible, so please ensure your code is consistent with our [development policies](https://open-emr.org/wiki/index.php/Development_Policies).\n\n## Code Contributions (local development)\n\nYou will need a \"local\" version of OpenEMR to make changes to the source code. The easiest way to do this is with [Docker](https://hub.docker.com/r/openemr/openemr/):\n\n---\n\n### Starting with OpenEMR Development Docker Environment\n- For the highly recommended free course \"You Can Be a OpenEMR Developer in 5 Easy Steps\", click below:\n\n    [You Can Be a OpenEMR Developer in 5 Easy Steps](https://www.open-emr.org/blog/you-can-be-a-openemr-developer-in-5-easy-steps/)\n\n- For the Video Tutorial, click below:\n\n    [![Getting Started Video Tutorial](Documentation/images/easy-dev-intro.png)](https://youtu.be/D4tXP5G9-sY)\n\n    - (Recommend using Ubuntu Desktop 22.04 for above video and other videos in the [OpenEMR Easy Docker Development Environment Video Series](https://www.youtube.com/playlist?list=PLFiWG_dDadgQT7zjqvEqbXm1OiuubOVO8). Easiest way to do this is setting up a [Ubuntu Desktop 22.04 Virtual Machine on VirtualBox](https://ubuntu.com/tutorials/how-to-run-ubuntu-desktop-on-a-virtual-machine-using-virtualbox), which recommend configuring with 40GB hard drive, assigning 25% of computer memory, and assigning 25% of cpu cores to the virtual machine.)\n\n1. [Create your own fork of OpenEMR](https://github.com/openemr/openemr/fork) (you will need a GitHub account) and `git clone` it to your local machine.\n\n    - For the Video Tutorial, click below:\n\n      [![Getting Started Video Tutorial](Documentation/images/easy-dev-git.png)](https://youtu.be/QhTlWMqPV1Q)\n\n      - (Recommend using Ubuntu Desktop 22.04 for above video and other videos in the [OpenEMR Easy Docker Development Environment Video Series](https://www.youtube.com/playlist?list=PLFiWG_dDadgQT7zjqvEqbXm1OiuubOVO8). Easiest way to do this is setting up a [Ubuntu Desktop 22.04 Virtual Machine on VirtualBox](https://ubuntu.com/tutorials/how-to-run-ubuntu-desktop-on-a-virtual-machine-using-virtualbox), which recommend configuring with 40GB hard drive, assigning 25% of computer memory, and assigning 25% of cpu cores to the virtual machine.)\n\n    - If you haven't already, [install git](https://git-scm.com/downloads) for your system\n\t- (optional) If you want to set up the base services(e.g. git, docker, docker-compose, openemr-cmd, minkube and kubectl) easily, please try [openemr-env-installer](https://github.com/openemr/openemr-devops/tree/master/utilities/openemr-env-installer)\n    - (optional) It's best to also add an `upstream` origin to keep your local fork up to date. [Check out this guide](https://oneemptymind.wordpress.com/2018/07/11/keeping-a-fork-up-to-date/) for more info.\n2. `cd openemr/docker/development-easy` (if you are running this on Raspberry Pi, then instead do `cd openemr/docker/development-easy-arm32` or `cd openemr/docker/development-easy-arm64`)\n    - If you haven't already, [install Docker](https://docs.docker.com/install/) and [install compose](https://docs.docker.com/compose/install/) for your system\n    - (optional) If you want to troubleshoot with the below steps easier, please also [install openemr-cmd](https://github.com/openemr/openemr-devops/tree/master/utilities/openemr-cmd) for your system\n    - (optional) If you want to monitor and easily manage the docker environment, please also [install openemr-monitor](https://github.com/openemr/openemr-devops/tree/master/utilities/openemr-monitor) and [install portainer](https://github.com/openemr/openemr-devops/tree/master/utilities/portainer) for your system\n    - (optional) If you want to migrate the running docker environment, please try [openemr-env-migrator](https://github.com/openemr/openemr-devops/tree/master/utilities/openemr-env-migrator)\n    - (optional) If you want to set up with orchestration tool, please try [OpenEMR Kubernetes Orchestrations](https://github.com/openemr/openemr-devops/tree/master/kubernetes/minikube)\n3. Run `docker-compose up` from your command line\n    - When the build is done, you'll see the following message:\n    ```sh\n    openemr_1  | Love OpenEMR? You can now support the project via the open collective:\n    openemr_1  |  > https://opencollective.com/openemr/donate\n    openemr_1  |\n    openemr_1  | Starting cron daemon!\n    openemr_1  | Starting apache!\n    ```\n4. Navigate to `http://localhost:8300/` or `https://localhost:9300/` to login as `admin`. Password is `pass`.\n5. If you wish to connect to the sql database, this docker environment provides the following 2 options:\n    - Navigate to `http://localhost:8310/` where you can login into phpMyAdmin.\n    - Or you can directly connect to port 8320 via your favorite sql tool (Mysql Workbench etc.).\n    - Use `username/user`: openemr, `password`: openemr .\n6. Make changes to any files on your local file system. Most changes will appear after a refresh of the page or iFrame you're working on.\n\n    - For the Video Tutorials, click below:\n\n      [![Getting Started Video Tutorial](Documentation/images/easy-dev-vscode-xdebug.png)](https://youtu.be/XJl7SQGNhpw)\n\n      [![Getting Started Video Tutorial](Documentation/images/easy-dev-advanced-vscode-xdebug.png)](https://youtu.be/0dEYDHWECMI)\n\n      - (Recommend using Ubuntu Desktop 22.04 for above videos and other videos in the [OpenEMR Easy Docker Development Environment Video Series](https://www.youtube.com/playlist?list=PLFiWG_dDadgQT7zjqvEqbXm1OiuubOVO8). Easiest way to do this is setting up a [Ubuntu Desktop 22.04 Virtual Machine on VirtualBox](https://ubuntu.com/tutorials/how-to-run-ubuntu-desktop-on-a-virtual-machine-using-virtualbox), which recommend configuring with 40GB hard drive, assigning 25% of computer memory, and assigning 25% of cpu cores to the virtual machine.)\n\n    - An exception to this is if making changes to styling scripts in interface/themes/. In that case will need to clear web browser cache and run the following command to rebuild the theme files:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools build-themes'\n      ```\n7. When you're done, it's best to clean up after yourself with `docker-compose down -v`\n    - If you don't want to build from scratch every time, just use `docker-compose down` so your next `docker-compose up` will use the cached volumes.\n8. To ensure you are using the most recent dockers, recommend running below set of commands intermittently:\n    ```console\n    docker pull openemr/openemr:flex\n    docker pull openemr/openemr:flex-3.17\n    docker pull openemr/openemr:flex-3.18\n    docker pull openemr/openemr:flex-3.20\n    docker pull openemr/openemr:flex-3.21\n    docker pull mariadb:11.4\n    docker pull phpmyadmin/phpmyadmin\n    docker pull couchdb\n    docker pull openemr/dev-ldap:easy\n    ```\n9. [Submit a PR](https://github.com/openemr/openemr/compare) from your fork into `openemr/openemr#master`!\n\nWe look forward to your contribution...\n\n---\n\n### Advanced Use of OpenEMR Development Docker Environment\n\nThe OpenEMR development docker environment has a very rich advanced feature set. See below Index for links to all the cool advanced stuff:\n\n**Index for Advanced Use of OpenEMR Development Docker Environment**\n\n---\n\n1. [Xdebug and profiling](#xdebug)\n2. [API development and testing](#api)\n3. [Testing other PHP versions](#other_php_versions)\n4. [Php syntax checking, psr12 checking, and automated testing](#dev_tools_tests)\n5. [Run the entire dev tool suite](#dev_tools_suite)\n6. [Run only all the automated tests](#dev_tools_auto)\n7. [Resetting OpenEMR and loading demo data](#dev_tools_reset)\n8. [Backup and restore OpenEMR data](#dev_tools_backup)\n9. [Send/receive snapshots](#dev_tools_send)\n10. [Create and add random patient data](#dev_tools_randompatients)\n11. [Add multisite bank](#dev_tools_bankmultisite)\n12. [Turn on and turn off support for multisite feature in setup.php](#dev_tools_multisite)\n13. [List the current multisite](#dev_tools_listmultisite)\n14. [Change the database character set and collation](#dev_tools_charset)\n15. [Test ssl certificate and force/unforce https](#dev_tools_https)\n16. [Place/remove testing sql ssl certificate and testing sql ssl client key/cert](#dev_tools_ssl)\n17. [CouchDB integration](#dev_tools_couchdb)\n18. [LDAP integration](#dev_tools_ldap)\n19. [Test webroot value](#dev_tools_webroot)\n\n---\n\n1. <a name=\"xdebug\"></a>Xdebug and profiling is supported for PHPStorm and VSCode.\n\n    - For the Video Tutorial, click below:\n\n      [![Getting Started Video Tutorial](Documentation/images/easy-dev-vscode-xdebug.png)](https://youtu.be/XJl7SQGNhpw)\n\n      - (Recommend using Ubuntu Desktop 22.04 for above video and other videos in the [OpenEMR Easy Docker Development Environment Video Series](https://www.youtube.com/playlist?list=PLFiWG_dDadgQT7zjqvEqbXm1OiuubOVO8). Easiest way to do this is setting up a [Ubuntu Desktop 22.04 Virtual Machine on VirtualBox](https://ubuntu.com/tutorials/how-to-run-ubuntu-desktop-on-a-virtual-machine-using-virtualbox), which recommend configuring with 40GB hard drive, assigning 25% of computer memory, and assigning 25% of cpu cores to the virtual machine.)\n\n     - Firefox/Chrome install xdebug helper add on and enable\n    - PHPStorm Settings->Language & Frameworks->PHP->Debug\n        - Start listening\n        - Untoggle \"Break at first line in PHP scripts\"\n        - Untoggle both settings that start with \"Force Break at first line...\"\n        - See [these images for more detail](https://github.com/openemr/openemr-devops/pull/283#issuecomment-779798156)\n    - VSCode\n        - Listen for XDebug\n        - Use this `launch.json` [template](https://github.com/openemr/openemr-devops/issues/285#issuecomment-782899207)\n    - Make sure port 9003 is open on your host operating system\n    - Profiling output can be found in /tmp directory in the docker. Following will list the profiling output files:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools list-xdebug-profiles'\n      ```\n    - To check Xdebug log:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools xdebug-log'\n      ```\n2. <a name=\"api\"></a>API development and testing.\n    - Swagger is including in OpenEMR to ease API documentation, development, and testing.\n    - The following command will update the API documentation (derive documentation from [_rest_routes.inc.php](_rest_routes.inc.php) to [swagger/openemr-api.yaml](swagger/openemr-api.yaml)):\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools build-api-docs'\n      ```\n    - Can go to Swagger at [https://localhost:9300/swagger](https://localhost:9300/swagger) where it is super easy to test the API:\n        - First, click on 'Authorize' button.\n        - Then click 'Select All' scopes.\n        - Can then do the following from command line to get a client id and secret, which then can copy/paste into the fields:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools register-oauth2-client'\n          ```\n        - Then click 'Authorize' button and follow the flow and before you know it, you will be authorized to test the api endpoints!\n    - There is also a mechanism to allow use of the above Swagger tool with multisite.\n        - Before going to the Swagger gui linked above, run the following command (after running below command, the Swagger gui will then be configured to work with the selected multisite):\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools set-swagger-to-multisite <multisite-name>'\n          ```\n        - To collect a client id and secret for the selected multisite, can then do:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools register-oauth2-client <multisite-name>'\n          ```\n        - When done testing with Swagger on the selected multisite, recommend setting swagger back to the default multisite to avoid changes to the swagger configuration script showing up in your local git repository:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools set-swagger-to-multisite'\n          ```\n    - There is also a dev tool to make it easy to test the API on the online OpenEMR demo farm. For example, what if you wanted to test the API at [https://eleven.openemr.io/a/openemr](https://eleven.openemr.io/a/openemr):\n        - Go to [https://eleven.openemr.io/a/openemr/swagger](https://eleven.openemr.io/a/openemr/swagger/index.html) and follow the Swagger gui flow above. The following command can be used to get a client id and secret from that online demo:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools register-oauth2-client-demo https://eleven.openemr.io/a/openemr'\n          ```\n3. <a name=\"other_php_versions\"></a>Testing other PHP versions.\n    - The standard `flex` docker used in the easy development environments is PHP 8.3. This can be modified by changing the image (`image: openemr/openemr:flex`) used in the docker-compose.yml script. To use PHP 8.1, then just need to change it to `image: openemr/openemr:flex-3.17`. To use PHP 8.2, then just need to change it to `image: openemr/openemr:flex-3.18`. To use PHP 8.4 then change it to `image: openemr/openemr:flex-3.21`.\n4. <a name=\"dev_tools_tests\"></a>Php syntax checking, psr12 checking, and automated testing.\n    - To check PHP error logs:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools php-log'\n      ```\n    - To create a report of PSR12 code styling issues (this takes several minutes):\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools psr12-report'\n      ```\n    - To fix PSR12 code styling issues (this takes several minutes):\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools psr12-fix'\n      ```\n    - To create a report of theme styling issues:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools lint-themes-report'\n      ```\n    - To fix theme styling issues:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools lint-themes-fix'\n      ```\n    - To check PHP parsing errors (this takes several minutes):\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools php-parserror'\n      ```\n    - To run unit testing:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools unit-test'\n      ```\n    - To run api testing:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools api-test'\n      ```\n    - To run e2e testing:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools e2e-test'\n      ```\n    - To run services testing:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools services-test'\n      ```\n    - To run fixtures testing:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools fixtures-test'\n      ```\n    - To run validators testing:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools validators-test'\n      ```\n    - To run controllers testing:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools controllers-test'\n      ```\n    - To run common testing:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools common-test'\n      ```\n5. <a name=\"dev_tools_suite\"></a>Run the entire dev tool suite (PSR12 fix, lint themes fix, PHP parse error, unit/API/e2e/services/fixtures/validators/controllers/common tests) in one command, run\n    ```sh\n    docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools clean-sweep'\n    ```\n6. <a name=\"dev_tools_auto\"></a>Run only all the automated tests (unit/API/e2e/services/fixtures/validators/controllers/common tests) in one command, run\n    ```sh\n    docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools clean-sweep-tests'\n    ```\n7. <a name=\"dev_tools_reset\"></a>Resetting OpenEMR and loading demo data.\n    - For the Video Tutorial, click below:\n\n      [![Resetting and Demo Data Video Tutorial](Documentation/images/easy-dev-reset.png)](https://youtu.be/1ch84Ffmky8)\n\n      - (Recommend using Ubuntu Desktop 22.04 for above video and other videos in the [OpenEMR Easy Docker Development Environment Video Series](https://www.youtube.com/playlist?list=PLFiWG_dDadgQT7zjqvEqbXm1OiuubOVO8). Easiest way to do this is setting up a [Ubuntu Desktop 22.04 Virtual Machine on VirtualBox](https://ubuntu.com/tutorials/how-to-run-ubuntu-desktop-on-a-virtual-machine-using-virtualbox), which recommend configuring with 40GB hard drive, assigning 25% of computer memory, and assigning 25% of cpu cores to the virtual machine.)\n\n    - To reset OpenEMR only (then can reinstall manually via setup.php in web browser):\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools dev-reset'\n      ```\n        - When running setup.php, need to use `mysql` for 'Server Host', `root` for 'Root Password', and `%` for 'User Hostname'.\n    - To reset and reinstall OpenEMR:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools dev-reset-install'\n      ```\n    - To reset and reinstall OpenEMR with demo data (this includes several users with access controls setup in addition to patient portal logins. [See HERE for those credentials](https://www.open-emr.org/wiki/index.php/Development_Demo#Demo_Credentials).):\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools dev-reset-install-demodata'\n      ```\n        - hint: this is also a great way to test any changes a developer has made to the sql upgrade stuff (ie. such as sql/5_0_2-to-6_0_0_upgrade.sql)\n8. <a name=\"dev_tools_backup\"></a>Backup and restore OpenEMR data (database and data on drive) via snapshots.\n    - For the Video Tutorial, click below:\n\n      [![Snapshots and Capsules Video Tutorial](Documentation/images/easy-dev-snapshots-capsules.png)](https://youtu.be/n569Lw5I5us)\n\n      - (Recommend using Ubuntu Desktop 22.04 for above video and other videos in the [OpenEMR Easy Docker Development Environment Video Series](https://www.youtube.com/playlist?list=PLFiWG_dDadgQT7zjqvEqbXm1OiuubOVO8). Easiest way to do this is setting up a [Ubuntu Desktop 22.04 Virtual Machine on VirtualBox](https://ubuntu.com/tutorials/how-to-run-ubuntu-desktop-on-a-virtual-machine-using-virtualbox), which recommend configuring with 40GB hard drive, assigning 25% of computer memory, and assigning 25% of cpu cores to the virtual machine.)\n\n     - Create a backup snapshot (using `example` below, but can use any alphanumeric identifier):\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools backup example'\n      ```\n    - Restore from a snapshot (using `example` below, but can use any alphanumeric identifier)\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools restore example'\n      ```\n    - To list the snapshots\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools list-snapshots'\n      ```\n9. <a name=\"dev_tools_send\"></a>Send/receive snapshots (via capsules) that are created above in item 8.\n    - For the Video Tutorial, click below:\n\n      [![Snapshots and Capsules Video Tutorial](Documentation/images/easy-dev-snapshots-capsules.png)](https://youtu.be/n569Lw5I5us)\n\n      - (Recommend using Ubuntu Desktop 22.04 for above video and other videos in the [OpenEMR Easy Docker Development Environment Video Series](https://www.youtube.com/playlist?list=PLFiWG_dDadgQT7zjqvEqbXm1OiuubOVO8). Easiest way to do this is setting up a [Ubuntu Desktop 22.04 Virtual Machine on VirtualBox](https://ubuntu.com/tutorials/how-to-run-ubuntu-desktop-on-a-virtual-machine-using-virtualbox), which recommend configuring with 40GB hard drive, assigning 25% of computer memory, and assigning 25% of cpu cores to the virtual machine.)\n\n    - Here is how to grab a capsule from the docker, which can then store or share with friends.\n        - List the capsules:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools list-capsules'\n          ```\n        - Copy the capsule from the docker to your current directory (using `example.tgz` below):\n          ```sh\n          docker cp $(docker ps | grep _openemr | cut -f 1 -d \" \"):/snapshots/example.tgz .\n          ```\n    - Here is how to send a capsule into the docker.\n        - Copy the capsule from current directory into the docker (using `example.tgz` below):\n          ```sh\n          docker cp example.tgz $(docker ps | grep _openemr | cut -f 1 -d \" \"):/snapshots/\n          ```\n        - Restore from the new shiny snapshot (using `example` below):\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools restore example'\n          ```\n        - Ensure run upgrade to ensure will work with current version OpenEMR:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools upgrade 5.0.2'\n          ```\n10. <a name=\"dev_tools_randompatients\"></a>Create and add random patient data. This will use synthea to create random patients that are then imported into OpenEMR. You can choose the number of patients. Note that each patient will take several seconds.\n    - For the Video Tutorial, click below:\n\n      [![Creating Random Patients Video Tutorial](Documentation/images/easy-dev-random-pat.png)](https://youtu.be/cFBFXFm_Psg)\n\n      - (Recommend using Ubuntu Desktop 22.04 for above video and other videos in the [OpenEMR Easy Docker Development Environment Video Series](https://www.youtube.com/playlist?list=PLFiWG_dDadgQT7zjqvEqbXm1OiuubOVO8). Easiest way to do this is setting up a [Ubuntu Desktop 22.04 Virtual Machine on VirtualBox](https://ubuntu.com/tutorials/how-to-run-ubuntu-desktop-on-a-virtual-machine-using-virtualbox), which recommend configuring with 40GB hard drive, assigning 25% of computer memory, and assigning 25% of cpu cores to the virtual machine.)\n\n    - Create and add 100 random patients (defaults to development mode set to true, which is set be default to true; development mode will markedly improve performance by bypassing the import of the ccda document and bypassing the use of the audit_master and audit_details tables and will directly import the new patient data from the ccda. Note this should never be done on sites that already contain real data/use, and it will also turn off the audit log during the import.):\n       ```sh\n       docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools import-random-patients 100'\n       ```\n       or\n       ```sh\n       docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools import-random-patients 100 true'\n       ```\n    - Create and add 100 random patients (with development mode set to false)\n       ```sh\n       docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools import-random-patients 100 false'\n       ```\n11. <a name=\"dev_tools_bankmultisite\"></a>Create a bank of multisites with selected number of multisites that are all labelled from run1..runx. It will clone from the default instance. This can be helpful for testing of multisites and other larger scale testing.\n    - Create 5 multisites (will be run1, run2, run3, run4, run5):\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools generate-multisite-bank 5'\n      ```\n12. <a name=\"dev_tools_multisite\"></a>Turn on and turn off support for multisite feature (to allow setting up multisites in setup.php script).\n    - Turn on support for multisite:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools enable-multisite'\n      ```\n    - Turn off support for multisite:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools disable-multisite'\n      ```\n13. <a name=\"dev_tools_listmultisite\"></a>The available multsites can be listed via following command:\n    ```sh\n    docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools list-multisites'\n    ```\n14. <a name=\"dev_tools_charset\"></a>Change the database character set and collation (character set is the encoding that is used to store data in the database; collation are a set of rules that the database uses to sort the stored data).\n    - Best to demonstrate this devtool with examples.\n        - Set character set to utf8mb4 and collation to utf8mb4_general_ci (this is default for OpenEMR 6 and higher):\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools change-encoding-collation utf8mb4 utf8mb4_general_ci'\n          ```\n        - Set character set to utf8mb4 and collation to utf8mb4_unicode_ci:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools change-encoding-collation utf8mb4 utf8mb4_unicode_ci'\n          ```\n        - Set character set to utf8mb4 and collation to utf8mb4_vietnamese_ci:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools change-encoding-collation utf8mb4 utf8mb4_vietnamese_ci'\n          ```\n        - Set character set to utf8 and collation to utf8_general_ci (this is default for OpenEMR 5 and lower):\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools change-encoding-collation utf8 utf8_general_ci'\n          ```\n15. <a name=\"dev_tools_https\"></a>Test ssl certificate (to test client based certificates and revert back to default self signed certificate) and force/unforce https.\n    - To test client based certificates, create a zip package of the certificate in OpenEMR at Administration->System->Certificates. Then can import this zip package (example `ssl.zip`) into the docker via:\n      ```sh\n      docker cp ssl.zip $(docker ps | grep _openemr | cut -f 1 -d \" \"):/certs/\n      ```\n    - To list the available certificate packages on docker:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools list-client-certs'\n      ```\n    - To install and configure a certificate package (example `ssl`):\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools setup-client-cert ssl'\n      ```\n    - To revert back to selfsigned certicates (ie. revert the changes required for client based certificates):\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools on-self-signed-cert'\n      ```\n    - To force https in apache script via redirect:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools force-https'\n      ```\n    - To revert the changes that forced https in apache script:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools un-force-https'\n      ```\n16. <a name=\"dev_tools_ssl\"></a>Place/remove testing sql ssl certificate and testing sql ssl client key/cert.\n    - Place the testing sql ssl CA cert:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools sql-ssl'\n      ```\n    - Remove the testing sql ssl CA cert:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools sql-ssl-off'\n      ```\n    - Place the testing sql ssl CA cert and testing sql ssl client key/cert:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools sql-ssl-client'\n      ```\n    - Remove the testing sql ssl CA cert and testing sql ssl client key/cert:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools sql-ssl-client-off'\n      ```\n17. <a name=\"dev_tools_couchdb\"></a>CouchDB integration.\n    - In OpenEMR, CouchDB is an option for the patients document storage. For this reason, a CouchDB docker is included in this OpenEMR docker development environment. You can visit the CouchDB GUI directly via http://localhost:5984/_utils/ or https://localhost:6984/_utils/ with username `admin` and password `password`. You can configure OpenEMR to use this CouchDB docker for patient document storage in OpenEMR at Administration->Globals->Documents:\n        - Document Storage Method->CouchDB\n    - After running the following devtools, 'dev-reset', 'dev-install', 'dev-reset-install', 'dev-reset-install-demodata', 'restore-snapshot', then need to restart the couchdb docker via the following command:\n        ```sh\n        docker restart $(docker ps | grep _couchdb_1 | cut -f 1 -d \" \")\n        ```\n    - Developer tools to place/remove testing couchdb ssl certificate and testing couchdb ssl client key/cert.\n        - Place the testing couchdb ssl CA cert:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools couchdb-ssl'\n          ```\n        - Remove the testing couchdb ssl CA cert:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools couchdb-ssl-off'\n          ```\n        - Place the testing couchdb ssl CA cert and testing couchdb ssl client key/cert:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools couchdb-ssl-client'\n          ```\n        - Remove the testing couchdb ssl CA cert and testing couchdb ssl client key/cert:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools couchdb-ssl-client-off'\n          ```\n18. <a name=\"dev_tools_ldap\"></a>LDAP integration.\n    - In OpenEMR, LDAP is an option for authentication. If this is turned on, then this will be supported for the `admin` user, which will use the following password: `admin`\n    - Turn on LDAP:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools enable-ldap'\n      ```\n    - Turn off LDAP:\n      ```sh\n      docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools disable-ldap'\n      ```\n    - Developer tools to place/remove testing ldap tls/ssl certificate and testing ldap tls/ssl client key/cert.\n        - Place the testing ldap tls/ssl CA cert:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools ldap-ssl'\n          ```\n        - Remove the testing ldap tls/ssl CA cert:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools ldap-ssl-off'\n          ```\n        - Place the testing ldap tls/ssl CA cert and testing ldap tls/ssl client key/cert:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools ldap-ssl-client'\n          ```\n        - Remove the testing ldap tls/ssl CA cert and testing ldap tls/ssl client key/cert:\n          ```sh\n          docker exec -i $(docker ps | grep _openemr | cut -f 1 -d \" \") sh -c '/root/devtools ldap-ssl-client-off'\n          ```\n19. <a name=\"dev_tools_webroot\"></a>Test webroot value.\n    - The default setup of the docker development environments are with a blank webroot, however, it is a good idea to also test with a webroot setting. There is an option to set the webroot to openemr.\n    - Note this dev tool requires the use of the openemr-cmd script, which is discussed above and can find instructions to install and use openemr-cmd script at [install openemr-cmd](https://github.com/openemr/openemr-devops/tree/master/utilities/openemr-cmd).\n    - Set webroot to blank:\n      ```sh\n      openemr-cmd change-webroot-blank\n      ```\n    - Set webroot to `openemr`:\n      ```sh\n      openemr-cmd change-webroot-openemr\n      ```\n\n### Non-docker Use\n\nIf you do not want to use Docker, you can always install OpenEMR directly on your local environment. This will require installing additional dependencies for your operating system. For more info see [OpenEMR Development Versions](https://open-emr.org/wiki/index.php/OpenEMR_Installation_Guides#OpenEMR_Development_Versions) on the wiki.\n\n## Financial contributions\n\nWe also welcome financial contributions in full transparency on our [open collective](https://opencollective.com/openemr).\nAnyone can file an expense. If the expense makes sense for the development of the community, it will be \"merged\" in the ledger of our open collective by the core contributors and the person who filed the expense will be reimbursed.\n\n## Credits\n\n### Contributors\n\nThank you to all the people who have already contributed to openemr!\n<a href=\"https://github.com/openemr/openemr/graphs/contributors\"><img src=\"https://opencollective.com/openemr/contributors.svg?width=890\" /></a>\n\n### Backers\n\nThank you to all our backers! [[Become a backer](https://opencollective.com/openemr#backer)]\n\n<a href=\"https://opencollective.com/openemr#backers\" target=\"_blank\"><img src=\"https://opencollective.com/openemr/backers.svg?width=890\"></a>\n\n### Sponsors\n\nThank you to all our sponsors! (please ask your company to also support this open source project by [becoming a sponsor](https://opencollective.com/openemr#sponsor))\n\n<a href=\"https://opencollective.com/openemr/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/openemr/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/openemr/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/openemr/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/openemr/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/openemr/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/openemr/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/openemr/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/openemr/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/openemr/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/openemr/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/openemr/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/openemr/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/openemr/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/openemr/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/openemr/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/openemr/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/openemr/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/openemr/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/openemr/sponsor/9/avatar.svg\"></a>\n"
        },
        {
          "name": "DOCKER_README.md",
          "type": "blob",
          "size": 3.21875,
          "content": "# OpenEMR Docker Documentation\n\n## Overview\nThe OpenEMR community loves Docker. We eat and breathe Docker. The OpenEMR dockers and detailed documentation\ncan be found on [dockerhub](https://hub.docker.com/r/openemr/openemr/). There are two main categories of\ndockers for OpenEMR, Production Dockers and Development Dockers. Production dockers are meant for production\nuse with tags such as `7.0.0` whereby the `latest` tag identifies the most recent version Production\ndocker. Development dockers are mainly meant for development and/or testing and include the `flex`\nseries which are highly flexible development dockers that are used to create the standard OpenEMR development\nenvironments. There is also a development docker that is built nightly from the current development codebase\nwith tags `dev` and `next` that is less flexible than the `flex` series and is mainly used for testing.\n\n## Production Dockers\nProduction dockers are meant for production use with tags such as `7.0.0` whereby the `latest` tag identifies\nthe most recent version Production docker and can be found on [dockerhub](https://hub.docker.com/r/openemr/openemr/).\nSeveral example docker-compose.yml scripts are discussed below.\n\n### Production example\nAn example docker-compose.yml script can be found at\n[docker/production/docker-compose.yml](docker/production/docker-compose.yml). After modifying the\nscript for your purposes, it can then be started with `docker-compose up`, which will then take about 5-10\nminutes to complete.\n\n### Production example for Raspberry Pi\nAn example docker-compose.yml script for Raspberry Pi can be found at\n[docker/production-arm/docker-compose.yml](docker/production-arm/docker-compose.yml). After modifying the\nscript for your purposes, it can then be started with `docker-compose up`, which will then take about 5-10\nminutes to complete.\n\n## Development Dockers\nDevelopment dockers are meant for development and testing and can be found on\n[dockerhub](https://hub.docker.com/r/openemr/openemr/).\n\n### `Flex` Series Development Dockers and Development Environments\nThe `flex` series development dockers are highly flexible development dockers that are used to create the\nstandard OpenEMR development environments, and can be found on\n[dockerhub](https://hub.docker.com/r/openemr/openemr/). It is strongly recommended to not use these dockers\nfor production purposes unless you know what you are doing. There are 2 OpenEMR development environments,\nwhich are based on these development dockers. The main development environment is the Easy Development Docker\nenvironment, which is documented at [CONTRIBUTING.md](CONTRIBUTING.md#code-contributions-local-development);\nnote this environment can also be run on Raspberry Pi. The other development environment, which is much more\ncomplex, is the Insane Development Docker environment, which is documented at\n[docker/development-insane/README.md](docker/development-insane/README.md#insane-development-docker-environment).\n\n### Nightly build Development Docker\nThere is also a development docker that is built nightly from the current development codebase with tags `dev`\nand `next` that is less flexible than the `flex` series and is mainly used for testing, and can be found on\n[dockerhub](https://hub.docker.com/r/openemr/openemr/).\n"
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "FHIR_README.md",
          "type": "blob",
          "size": 15.6015625,
          "content": "# OpenEMR FHIR API Documentation\n\n## FHIR API Table of Contents\n- [Overview](FHIR_README.md#overview)\n- [Prerequisite](FHIR_README.md#prerequisite)\n- [Using FHIR API Internally](FHIR_README.md#using-fhir-api-internally)\n- [Multisite Support](FHIR_README.md#multisite-support)\n- [Authorization (in API_README.md)](API_README.md#authorization)\n    - [Scopes (in API_README.md)](API_README.md#scopes)\n    - [Registration (in API_README.md)](API_README.md#registration)\n        - [SMART on FHIR Registration (in API_README.md)](API_README.md#smart-on-fhir-registration)\n    - [Authorization Code Grant (in API_README.md)](API_README.md#authorization-code-grant)\n    - [Refresh Token Grant (in API_README.md)](API_README.md#refresh-token-grant)\n    - [Password Grant (in API_README.md)](API_README.md#password-grant)\n    - [Client Credentials Grant (in API_README.md)](API_README.md#client-credentials-grant)\n    - [Logout (in API_README.md)](API_README.md#logout)\n    - [More Details (in API_README.md)](API_README.md#more-details)\n- [FHIR API Documentation](FHIR_README.md#fhir-api-documentation)\n    - [Capability Statement](FHIR_README.md#capability-statement)\n    - [Provenance](FHIR_README.md#Provenance-resources)\n    - [BULK FHIR Exports](FHIR_README.md#bulk-fhir-exports)\n        - [System Export](FHIR_README.md#bulk-fhir-exports)\n        - [Patient Export](FHIR_README.md#bulk-fhir-exports)\n        - [Group Export](FHIR_README.md#bulk-fhir-exports)\n- [3rd Party SMART Apps](FHIR_README.md#3rd-party-smart-apps)\n- [Native Applications](FHIR_README.md#native-applications)\n- [Carecoordination Summary Of Care (CCD) Generation](FHIR_README.md#carecoordination-summary-of-care-docref-operation)\n    - [Overview Docref](FHIR_README.md#overview-docref)\n    - [Generate CCDA](FHIR_README.md#generate-ccda)\n    - [Details Docref](FHIR_README.md#details-docref)\n- [For Developers](FHIR_README.md#for-developers)\n\n## Overview\n\nEasy-to-use JSON-based REST API for OpenEMR FHIR. See standard OpenEMR API docs [here](API_README.md).  The OpenEMR FHIR API conforms to the R4 specification and the US Core 3.1 Implementation Guide (IG).\n\n## Prerequisite\n\nEnable the Standard FHIR service (/fhir/ endpoints) in OpenEMR menu: Administration->Config->Connectors->\"Enable OpenEMR Standard FHIR REST API\"\n\n## Using FHIR API Internally\n\nThere are several ways to make API calls from an authorized session and maintain security:\n\n-   See the script at tests/api/InternalApiTest.php for examples of internal API use cases.\n\n## Multisite Support\n\nMultisite is supported by including the site in the endpoint. When not using multisite or using the `default` multisite site, then a typical path would look like `apis/default/fhir/patient`. If you were using multisite and using a site called `alternate`, then the path would look like `apis/alternate/fhir/patient`.\n\n## Authorization\n\nOpenEMR uses OIDC compliant authorization for API. SSL is required and setting baseurl at Administration->Config->Connectors->'Site Address (required for OAuth2 and FHIR)' is required.\n\nSee [Authorization](API_README.md#authorization) for more details.\n\n## FHIR API Documentation\n\nThe FHIR API is documented via Swagger. Can see this documentation (and can test it) by going to the `swagger` directory in your OpenEMR installation. The FHIR API is documented there in the `fhir` section. Can also see (and test) this in the online demos at https://www.open-emr.org/wiki/index.php/Development_Demo#Daily_Build_Development_Demos (clicking on the `API (Swagger) User Interface` link for the demo will take you there).\n\nStandard FHIR endpoints Use `https://localhost:9300/apis/default/fhir as base URI.`\n\nNote that the `default` component can be changed to the name of the site when using OpenEMR's multisite feature.\n\n_Example:_ `https://localhost:9300/apis/default/fhir/Patient` returns a Patient's bundle resource, etc\n\nThe Bearer token is required for each OpenEMR FHIR request (except for the Capability Statement), and is conveyed using an Authorization header. Note that the Bearer token is the access_token that is obtained in the [Authorization](API_README.md#authorization) section.\n\nWhen registering an API client to use with Swagger the following for the redirect url and launch url for the client.\n- Redirect URL -> <base_site_address>/swagger/oauth2-redirect.html\n- Launch URL -> <base_site_address>/swagger/index.html\n\nRequest:\n\n```sh\ncurl -X GET 'https://localhost:9300/apis/fhir/Patient' \\\n  -H 'Authorization: Bearer eyJ0b2tlbiI6IjAwNnZ3eGJZYmFrOXlxUjF4U290Y1g4QVVDd3JOcG5yYXZEaFlqaHFjWXJXRGNDQUtFZmJONkh2cElTVkJiaWFobHBqOTBYZmlNRXpiY2FtU01pSHk1UzFlMmgxNmVqZEhcL1ZENlNtaVpTRFRLMmtsWDIyOFRKZzNhQmxMdUloZmNJM3FpMGFKZ003OXdtOGhYT3dpVkx5b3BFRXQ1TlNYNTE3UW5TZ0dsUVdQbG56WjVxOVYwc21tdDlSQ3RvcDV3TEkiLCJzaXRlX2lkIjoiZGVmYXVsdCIsImFwaSI6ImZoaXIifQ=='\n```\n\n---\n\n### Capability Statement\n\n#### GET fhir/metadata\n\nThis will return the Capability Statement. Note this can be tested in the Swagger documentation linked to in the above `FHIR API Documentation`.\n    ```sh\n    curl -X GET 'https://localhost:9300/apis/default/fhir/metadata'\n    ```\n\n### Provenance Resources\n\nProvenance resources are requested by including `_revinclude=Provenance:target` in the search of a resource. Is currently supported for the following resources:\n  - AllergyIntolerance\n      ```sh\n      curl -X GET 'https://localhost:9300/apis/default/fhir/AllergyIntolerance?_revinclude=Provenance:target'\n      ```\n\n### BULK FHIR Exports\nAn export operation that implements the [BULK FHIR Export ONC requirements](https://hl7.org/fhir/uv/bulkdata/export/index.html) can be requested by issuing a GET request to the following endpoints:\n - System Export, requires the **system/\\*.$export** scope.  Exports All supported FHIR resources\n    ```sh\n          curl -X GET 'https://localhost:9300/apis/default/fhir/$export'\n    ```\n - Group Export, requires the **system/Group.$export** scope.  Exports all data in the [Patient Compartment](https://www.hl7.org/fhir/compartmentdefinition-patient.html) for the group.\n   The system automatically creates a group for every Practitioner resource in the system where the patients in the group are the individuals who have the Practitioner as their primary care provider.\n    ```sh\n          curl -X GET 'https://localhost:9300/apis/default/fhir/Group/1/$export'\n    ```\n - Patient Export, requires the **system/Patient.$export** scope.  Exports all data for all patients in the [Patient Compartment](https://www.hl7.org/fhir/compartmentdefinition-patient.html).\n    ```sh\n          curl -X GET 'https://localhost:9300/apis/default/fhir/Patient/$export'\n    ```\nYou will get an empty body response with a **Content-Location** header with the URL you can query for status updates on the export.\n\nTo query the status update operation you need the **system/\\*.$bulkdata-status** scope.  An example query:\n - Status Query\n    ```sh\n          curl -X GET 'https://localhost:9300/apis/default/fhir/$bulkdata-status?job=92a94c00-77d6-4dfc-ae3b-73550742536d'\n    ```\n\nA status Query will return a result like the following:\n```\n{\n  \"transactionTime\": {\n    \"date\": \"2021-02-05 20:48:38.000000\",\n    \"timezone_type\": 3,\n    \"timezone\": \"UTC\"\n  },\n  \"request\": \"\\/apis\\/default\\/fhir\\/Group\\/1\\/%24export\",\n  \"requiresAccessToken\": true,\n  \"output\": [\n    {\n      \"url\": \"https:\\/\\/localhost:9300\\/apis\\/default\\/fhir\\/Binary\\/97552\",\n      \"type\": \"Patient\"\n    },\n    {\n      \"url\": \"https:\\/\\/localhost:9300\\/apis\\/default\\/fhir\\/Binary\\/105232\",\n      \"type\": \"Encounter\"\n    }\n  ],\n  \"error\": []\n}\n```\n\nYou can download the exported documents which are formatted in Newline Delimited JSON (NDJSON) by making a call to:\n    ```sh\n          curl -X GET 'https://localhost:9300/apis/default/fhir/Binary/105232'\n    ```\n\nIn order to download the documents you will need the **system/Binary.read** scope.\n\n#### Bulk FHIR Scope Reference\n- All System export - **system/\\*.$export system\\*.$bulkdata-status system/Binary.read**\n- Group System export - **system/Group.$export system\\*.$bulkdata-status system/Binary.read**\n- Patient System export - **system/Patient.$export system\\*.$bulkdata-status system/Binary.read**\n\n####\n## 3rd Party SMART Apps\nOpenEMR supports the ability for 3rd party apps who implement the [SMART on FHIR App Launch Implementation Guide 1.1.0](http://hl7.org/fhir/smart-app-launch/2021May/) context.\n\n3rd party Apps using the confidential app profile are auto enabled if they are strictly a patient standalone app.  A patient standalone app is one that only requests patient only scopes such as patient/\\*. A provider or system app (requesting permissions such as launch, user/\\*, system/\\*, etc) must be authorized by the OpenEMR Server Installation Administrator.  Access Tokens issued to 3rd party apps are only valid for one hour and must be renewed with a refresh token which is valid for up to three months.  Refresh tokens are only issued if the offline_access scope is authorized by the OpenEMR user authenticating with OpenEMR through their 3rd party app.\n\nFor a patient to have access to their patient data via a 3rd party app they must have api credentials generated by their clinician from the patient demographics page.  A patient must not have opted out of 3rd party API access.\n\nOpenEMR does NOT support wildcard scopes (patient/*.* or patient/*.read).  Scopes must be requested explicitly by an app at the time of registration.  OpenEMR does not support adding scopes from the initial registration.\n\n\n## Revoking Clients, Users, Access Tokens, Refresh Tokens\n\n## Revoking Clients\nYou can disable a client completely which prevents their access tokens from being used in the system from the Admin -> System -> API Clients interface.  Edit the client registered in your system you wish to disable and hit the Disable button.\n\n## Revoking Users\nIf you wish to revoke a user's authorization for a particular client you will need to open up the API client from the Admin -> System -> API Clients interface.  Once you are editing the client you will need to go to the Authenticated API Users section.\n\nFrom there you can find the user that is listed and hit the Revoke User button (Note this can be a lengthy list so use your browser's search text functionality to find the user).\n\n## Revoking Access Tokens\nYou can revoke an access token two ways.  One from the API Client edit screen, finding the client and then the access token's identifier you wish to revoke.\n\nThe second way is if you have the fully encoded access token using the API Client Tools screen.  Go to Admin->System->API Clients and then click on the Token Tools button.  Paste in the entire encoded token and then select Parse Token.  Information about the token will be displayed including the authenticated user that authorized the token.  Now select the Revoke Token button to revoke the token.  A success message will be displayed when the revocation completes.  You can parse the token again to see that the token has been revoked.\n\n## Native Applications\nInteroperability requirements with OpenEMR for Native Applications\n\n- Native applications wishing to use the OpenEMR FHIR API with refresh tokens MUST be capable of storing the refresh token in a secure manner similar to the requirements of storing a secret for confidential apps.\n- Native applications must support either PKCE with a public app or use a confidential app.  PKCE is still recommended to be used with confidential apps to prevent MITM attacks.\n- Native applications must request the offline_scope in their initial API request in order to receive a refresh token\n- Native application refresh tokens are valid for 3 months before they must be renewed.\n- Native applications will receive a new refresh token every time they are renewed.\n- Native applications can only communicate with OpenEMR over a TLS secured channel in order to ensure the safe transmission of the refresh token.\n- Native applications should use certificate pinning to mitigate any SSL MITM attack.\n- Native applications must use the Authorization Code grant flow in order to receive a refresh token.\n\nIt is recommended that native applications follow best practices for native client applications as outlined in RFC 8252 OAuth 2.0 for Native Apps.\n\n## Carecoordination Summary of Care Docref Operation\n### Overview Docref\n- The $docref operation is used to request the server to generate a document based on the specified\n  parameters. If no additional parameters are specified then a DocumentReference to the patient's most current Clinical\n  Summary of Care Document (CCD) is returned. The document itself is retrieved using the DocumentReference.content.attachment.url\n  element.  See <a href='http://hl7.org/fhir/us/core/OperationDefinition-docref.html' target='_blank'\n  rel='noopener'>http://hl7.org/fhir/us/core/OperationDefinition-docref.html</a> for more details.\n### Generate CCDA\n- [Tutorial to Generate CCDA (with Screenshots)](https://github.com/openemr/openemr/issues/5284#issuecomment-1155678620)\n### Details Docref\n- Requires <context>/DocumentReference.$docref, <context>/DocumentReference.read, and <context>/Binary.read scopes\n- Start and end date filter encounter related events for the following sections:\n    - History of Procedures\n    - Relevant DX Tests / LAB Data\n    - Functional Status\n    - Progress Notes\n    - Procedure Notes\n    - Laboratory Report Narrative\n    - Encounters\n    - Assessments\n    - Treatment Plan\n    - Goals\n    - Health Concerns Document\n    - Reason for Referral\n    - Mental Status\n- The following sections have the entire medical record sent to ensure that medical professionals have medically necessary information to provide treatment of care:\n    - Demographics\n    - Allergies, Adverse Reactions, Alerts\n    - History of Medication Use\n    - Problem List\n    - Immunizations\n    - Social History\n    - Medical Equipment\n    - Vital Signs (shows the latest vitals recorded for the patient)\n- CCD is generated on demand, saved off in patient's documents record under the CCDA category.\n- Returns a DocumentReference search bundle per the IG spec.\n- XSL to view the document can be download at /<site>/interface/modules/zend_modules/public/xsl/cda.xsl\n    - Or xml file can be uploaded as a document into OpenEMR to view in a human readable format\n    - Due to browser security restrictions XSL file must be in same directory as ccd document to view.\n- If no start date is provided it will retrieve all records in the patient history up to the end date\n- If no end date is provided it will retrieve all records connected to encounters starting from the start date\n- If a records for a specific service date are desired, make the start date and end date the same day in YYYY-MM-DD format.\n- Dates must be specified in least specifity to most specifity for wildcard like operations IE YYYY for the beginning of the year for start date or ending of the year for end date, YYYY-MM for the beginning of the month for start date and end of the month for end date, etc.\n\n## For Developers\n\nFHIR endpoints are defined in the [primary routes file](_rest_routes.inc.php). The routes file maps an external, addressable\nendpoint to the OpenEMR FHIR controller which handles the request, and also handles the JSON data conversions.\n\n```php\n\"GET /fhir/Patient\" => function () {\n    RestConfig::authorization_check(\"patients\", \"demo\");\n    $return = (new FhirPatientRestController())->getAll($_GET);\n    RestConfig::apiLog($return);\n    return $return;\n}\n```\n\nAt a high level, the request processing flow consists of the following steps:\n\n```\nJSON Request -> FHIR Controller Component -> FHIR Validation -> Parsing FHIR Resource -> Standard Service Component -> Validation -> Database\n```\n\nThe logical response flow begins with the database result:\n\n```\nDatabase Result -> Service Component -> FHIR Service Component -> Parse OpenEMR Record -> FHIR Controller Component -> RequestControllerHelper -> JSON Response\n```\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.9521484375,
          "content": "![Syntax Status](https://github.com/openemr/openemr/workflows/Syntax/badge.svg?branch=master)\n![Styling Status](https://github.com/openemr/openemr/workflows/Styling/badge.svg?branch=master)\n![Testing Status](https://github.com/openemr/openemr/workflows/Test/badge.svg?branch=master)\n\n[![Backers on Open Collective](https://opencollective.com/openemr/backers/badge.svg)](#backers) [![Sponsors on Open Collective](https://opencollective.com/openemr/sponsors/badge.svg)](#sponsors)\n\n# OpenEMR\n\n[OpenEMR](https://open-emr.org) is a Free and Open Source electronic health records and medical practice management application. It features fully integrated electronic health records, practice management, scheduling, electronic billing, internationalization, free support, a vibrant community, and a whole lot more. It runs on Windows, Linux, Mac OS X, and many other platforms.\n\n### Contributing\n\nOpenEMR is a leader in healthcare open source software and comprises a large and diverse community of software developers, medical providers and educators with a very healthy mix of both volunteers and professionals. [Join us and learn how to start contributing today!](https://open-emr.org/wiki/index.php/FAQ#How_do_I_begin_to_volunteer_for_the_OpenEMR_project.3F)\n\n> Already comfortable with git? Check out [CONTRIBUTING.md](CONTRIBUTING.md) for quick setup instructions and requirements for contributing to OpenEMR by resolving a bug or adding an awesome feature 😊.\n\n### Support\n\nCommunity and Professional support can be found [here](https://open-emr.org/wiki/index.php/OpenEMR_Support_Guide).\n\nExtensive documentation and forums can be found on the [OpenEMR website](https://open-emr.org) that can help you to become more familiar about the project 📖.\n\n### Reporting Issues and Bugs\n\nReport these on the [Issue Tracker](https://github.com/openemr/openemr/issues). If you are unsure if it is an issue/bug, then always feel free to use the [Forum](https://community.open-emr.org/) and [Chat](https://www.open-emr.org/chat/) to discuss about the issue 🪲.\n\n### Reporting Security Vulnerabilities\n\nCheck out [SECURITY.md](.github/SECURITY.md)\n\n### API\n\nCheck out [API_README.md](API_README.md)\n\n### Docker\n\nCheck out [DOCKER_README.md](DOCKER_README.md)\n\n### FHIR\n\nCheck out [FHIR_README.md](FHIR_README.md)\n\n### For Developers\n\nIf using OpenEMR directly from the code repository, then the following commands will build OpenEMR (Node.js version 20.* is required) :\n\n```shell\ncomposer install --no-dev\nnpm install\nnpm run build\ncomposer dump-autoload -o\n```\n\n### Contributors\n\nThis project exists thanks to all the people who have contributed. [[Contribute]](CONTRIBUTING.md).\n<a href=\"https://github.com/openemr/openemr/graphs/contributors\"><img src=\"https://opencollective.com/openemr/contributors.svg?width=890\" /></a>\n\n\n### Sponsors\n\nThanks to our [ONC Certification Major Sponsors](https://www.open-emr.org/wiki/index.php/OpenEMR_Certification_Stage_III_Meaningful_Use#Major_sponsors)!\n\n\n### License\n\n[GNU GPL](LICENSE)\n"
        },
        {
          "name": "_rest_config.php",
          "type": "blob",
          "size": 23.666015625,
          "content": "<?php\n\n/**\n * Useful globals class for Rest\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2018-2020 Jerry Padgett <sjpadgett@gmail.com>\n * @copyright Copyright (c) 2019 Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2024 Care Management Solutions, Inc. <stephen.waite@cmsvt.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once __DIR__ . '/vendor/autoload.php';\n\nuse Laminas\\HttpHandlerRunner\\Emitter\\SapiEmitter;\nuse League\\OAuth2\\Server\\Exception\\OAuthServerException;\nuse League\\OAuth2\\Server\\ResourceServer;\nuse Nyholm\\Psr7\\Factory\\Psr17Factory;\nuse Nyholm\\Psr7Server\\ServerRequestCreator;\nuse OpenEMR\\Common\\Acl\\AclMain;\nuse OpenEMR\\Common\\Auth\\OpenIDConnect\\Repositories\\AccessTokenRepository;\nuse OpenEMR\\Common\\Http\\HttpRestRequest;\nuse OpenEMR\\Common\\Logging\\EventAuditLogger;\nuse OpenEMR\\Common\\Logging\\SystemLogger;\nuse OpenEMR\\Common\\Session\\SessionUtil;\nuse OpenEMR\\FHIR\\Config\\ServerConfig;\nuse OpenEMR\\Services\\TrustedUserService;\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\ServerRequestInterface;\n\n\n// also a handy place to add utility methods\n// TODO before v6 release: refactor http_response_code(); for psr responses.\n//\nclass RestConfig\n{\n    /** @var routemap is an array of patterns and routes */\n    public static $ROUTE_MAP;\n\n    /** @var fhir routemap is an  of patterns and routes */\n    public static $FHIR_ROUTE_MAP;\n\n    /** @var portal routemap is an  of patterns and routes */\n    public static $PORTAL_ROUTE_MAP;\n\n    /** @var app root is the root directory of the application */\n    public static $APP_ROOT;\n\n    /** @var root url of the application */\n    public static $ROOT_URL;\n    // you can guess what the rest are!\n    public static $VENDOR_DIR;\n    public static $SITE;\n    public static $apisBaseFullUrl;\n    public static $webserver_root;\n    public static $web_root;\n    public static $server_document_root;\n    public static $publicKey;\n    private static $INSTANCE;\n    private static $IS_INITIALIZED = false;\n    /**  @var set to true if local api call */\n    private static $localCall = false;\n    /**  @var set to true if not rest call */\n    private static $notRestCall = false;\n\n    /** prevents external construction */\n    private function __construct()\n    {\n    }\n\n    /**\n     * Returns an instance of the RestConfig singleton\n     *\n     * @return RestConfig\n     */\n    public static function GetInstance(): \\RestConfig\n    {\n        if (!self::$IS_INITIALIZED) {\n            self::Init();\n        }\n\n        if (!self::$INSTANCE instanceof self) {\n            self::$INSTANCE = new self();\n        }\n\n        return self::$INSTANCE;\n    }\n\n    /**\n     * Initialize the RestConfig object\n     */\n    public static function Init(): void\n    {\n        if (self::$IS_INITIALIZED) {\n            return;\n        }\n        // The busy stuff.\n        self::setPaths();\n        self::setSiteFromEndpoint();\n        $serverConfig = new ServerConfig();\n        $serverConfig->setWebServerRoot(self::$webserver_root);\n        $serverConfig->setSiteId(self::$SITE);\n        self::$ROOT_URL = self::$web_root . \"/apis\";\n        self::$VENDOR_DIR = self::$webserver_root . \"/vendor\";\n        self::$publicKey = $serverConfig->getPublicRestKey();\n        self::$IS_INITIALIZED = true;\n    }\n\n    /**\n     * Basic paths when GLOBALS are not yet available.\n     *\n     * @return void\n     */\n    private static function SetPaths(): void\n    {\n        $isWindows = (stripos(PHP_OS_FAMILY, 'WIN') === 0);\n        // careful if moving this class to modify where's root.\n        self::$webserver_root = __DIR__;\n        if ($isWindows) {\n            //convert windows path separators\n            self::$webserver_root = str_replace(\"\\\\\", \"/\", self::$webserver_root);\n        }\n        // Collect the apache server document root (and convert to windows slashes, if needed)\n        self::$server_document_root = realpath($_SERVER['DOCUMENT_ROOT']);\n        if ($isWindows) {\n            //convert windows path separators\n            self::$server_document_root = str_replace(\"\\\\\", \"/\", self::$server_document_root);\n        }\n        self::$web_root = substr(self::$webserver_root, strspn(self::$webserver_root ^ self::$server_document_root, \"\\0\"));\n        // Ensure web_root starts with a path separator\n        if (preg_match(\"/^[^\\/]/\", self::$web_root)) {\n            self::$web_root = \"/\" . self::$web_root;\n        }\n        // Will need these occasionally. sql init comes to mind!\n        $GLOBALS['rootdir'] = self::$web_root . \"/interface\";\n        // Absolute path to the source code include and headers file directory (Full path):\n        $GLOBALS['srcdir'] = self::$webserver_root . \"/library\";\n        // Absolute path to the location of documentroot directory for use with include statements:\n        $GLOBALS['fileroot'] = self::$webserver_root;\n        // Absolute path to the location of interface directory for use with include statements:\n        $GLOBALS['incdir'] = self::$webserver_root . \"/interface\";\n        // Absolute path to the location of documentroot directory for use with include statements:\n        $GLOBALS['webroot'] = self::$web_root;\n        // Static assets directory, relative to the webserver root.\n        $GLOBALS['assets_static_relative'] = self::$web_root . \"/public/assets\";\n        // Relative themes directory, relative to the webserver root.\n        $GLOBALS['themes_static_relative'] = self::$web_root . \"/public/themes\";\n        // Relative images directory, relative to the webserver root.\n        $GLOBALS['images_static_relative'] = self::$web_root . \"/public/images\";\n        // Static images directory, absolute to the webserver root.\n        $GLOBALS['images_static_absolute'] = self::$webserver_root . \"/public/images\";\n        //Composer vendor directory, absolute to the webserver root.\n        $GLOBALS['vendor_dir'] = self::$webserver_root . \"/vendor\";\n    }\n\n    private static function setSiteFromEndpoint(): void\n    {\n        // Get site from endpoint if available. Unsure about this though!\n        // Will fail during sql init otherwise.\n        $endPointParts = self::parseEndPoint(self::getRequestEndPoint());\n        if (count($endPointParts) > 1) {\n            $site_id = $endPointParts[0] ?? '';\n            if ($site_id) {\n                self::$SITE = $site_id;\n            }\n        }\n    }\n\n    public static function parseEndPoint($resource): array\n    {\n        if ($resource[0] === '/') {\n            $resource = substr($resource, 1);\n        }\n        return explode('/', $resource);\n    }\n\n    public static function getRequestEndPoint(): string\n    {\n        $resource = null;\n        if (!empty($_REQUEST['_REWRITE_COMMAND'])) {\n            $resource = \"/\" . $_REQUEST['_REWRITE_COMMAND'];\n        } elseif (!empty($_SERVER['REDIRECT_QUERY_STRING'])) {\n            $resource = str_replace('_REWRITE_COMMAND=', '/', $_SERVER['REDIRECT_QUERY_STRING']);\n        } else {\n            if (!empty($_SERVER['REQUEST_URI'])) {\n                if (strpos($_SERVER['REQUEST_URI'], '?') > 0) {\n                    $resource = strstr($_SERVER['REQUEST_URI'], '?', true);\n                } else {\n                    $resource = str_replace(self::$ROOT_URL ?? '', '', $_SERVER['REQUEST_URI']);\n                }\n            }\n        }\n\n        return $resource;\n    }\n\n    public static function verifyAccessToken()\n    {\n        $logger = new SystemLogger();\n        $response = self::createServerResponse();\n        $request = self::createServerRequest();\n        try {\n            // if we there's a key problem need to catch the exception\n            $server = new ResourceServer(\n                new AccessTokenRepository(),\n                self::$publicKey\n            );\n            $raw = $server->validateAuthenticatedRequest($request);\n        } catch (OAuthServerException $exception) {\n            $logger->error(\"RestConfig->verifyAccessToken() OAuthServerException\", [\"message\" => $exception->getMessage()]);\n            return $exception->generateHttpResponse($response);\n        } catch (\\Exception $exception) {\n            if ($exception instanceof LogicException) {\n                $logger->error(\n                    \"RestConfig->verifyAccessToken() LogicException, likely oauth2 public key is missing, corrupted, or misconfigured\",\n                    [\"message\" => $exception->getMessage()]\n                );\n                return (new OAuthServerException(\"Invalid access token\", 0, 'invalid_token', 401))\n                    ->generateHttpResponse($response);\n            } else {\n                $logger->error(\"RestConfig->verifyAccessToken() Exception\", [\"message\" => $exception->getMessage()]);\n                // do NOT reveal what happened at the server level if we have a server exception\n                return (new OAuthServerException(\"Server Error\", 0, 'unknown_error', 500))\n                    ->generateHttpResponse($response);\n            }\n        }\n\n        return $raw;\n    }\n\n    /**\n     * Returns true if the access token for the given token id is valid.  Otherwise returns the access denied response.\n     * @param $tokenId\n     * @return bool|ResponseInterface\n     */\n    public static function validateAccessTokenRevoked($tokenId)\n    {\n        $repository = new AccessTokenRepository();\n        if ($repository->isAccessTokenRevokedInDatabase($tokenId)) {\n            $response = self::createServerResponse();\n            return OAuthServerException::accessDenied('Access token has been revoked')->generateHttpResponse($response);\n        }\n        return true;\n    }\n\n    public static function isTrustedUser($clientId, $userId)\n    {\n        $trustedUserService = new TrustedUserService();\n        $response = self::createServerResponse();\n        try {\n            if (!$trustedUserService->isTrustedUser($clientId, $userId)) {\n                (new SystemLogger())->debug(\n                    \"invalid Trusted User.  Refresh Token revoked or logged out\",\n                    ['clientId' => $clientId, 'userId' => $userId]\n                );\n                throw new OAuthServerException('Refresh Token revoked or logged out', 0, 'invalid _request', 400);\n            }\n            return $trustedUserService->getTrustedUser($clientId, $userId);\n        } catch (OAuthServerException $exception) {\n            return $exception->generateHttpResponse($response);\n        } catch (\\Exception $exception) {\n            return (new OAuthServerException($exception->getMessage(), 0, 'unknown_error', 500))\n                ->generateHttpResponse($response);\n        }\n    }\n\n    public static function createServerResponse(): ResponseInterface\n    {\n        $psr17Factory = new Psr17Factory();\n\n        return $psr17Factory->createResponse();\n    }\n\n    public static function createServerRequest(): ServerRequestInterface\n    {\n        $psr17Factory = new Psr17Factory();\n        $creator = new ServerRequestCreator(\n            $psr17Factory, // ServerRequestFactory\n            $psr17Factory, // UriFactory\n            $psr17Factory, // UploadedFileFactory\n            $psr17Factory  // StreamFactory\n        );\n\n        return $creator->fromGlobals();\n    }\n\n    public static function destroySession(): void\n    {\n        SessionUtil::apiSessionCookieDestroy();\n    }\n\n    public static function getPostData($data)\n    {\n        if (count($_POST)) {\n            return $_POST;\n        }\n\n        if ($post_data = file_get_contents('php://input')) {\n            if ($post_json = json_decode($post_data, true)) {\n                return $post_json;\n            }\n            parse_str($post_data, $post_variables);\n            if (count($post_variables)) {\n                return $post_variables;\n            }\n        }\n\n        return null;\n    }\n\n    public static function authorization_check($section, $value, $user = '', $aclPermission = ''): void\n    {\n        $result = AclMain::aclCheckCore($section, $value, $user, $aclPermission);\n        if (!$result) {\n            if (!self::$notRestCall) {\n                http_response_code(401);\n            }\n            exit();\n        }\n    }\n\n    // Main function to check scope\n    //  Use cases:\n    //     Only sending $scopeType would be for something like 'openid'\n    //     For using all 3 parameters would be for something like 'user/Organization.write'\n    //       $scopeType = 'user', $resource = 'Organization', $permission = 'write'\n    public static function scope_check($scopeType, $resource = null, $permission = null): void\n    {\n        if (!empty($GLOBALS['oauth_scopes'])) {\n            // Need to ensure has scope\n            if (empty($resource)) {\n                // Simply check to see if $scopeType is an allowed scope\n                $scope = $scopeType;\n            } else {\n                // Resource scope check\n                $scope = $scopeType . '/' . $resource . '.' . $permission;\n            }\n            if (!in_array($scope, $GLOBALS['oauth_scopes'])) {\n                (new SystemLogger())->debug(\"RestConfig::scope_check scope not in access token\", ['scope' => $scope, 'scopes_granted' => $GLOBALS['oauth_scopes']]);\n                http_response_code(401);\n                exit;\n            }\n        } else {\n            (new SystemLogger())->error(\"RestConfig::scope_check global scope array is empty\");\n            http_response_code(401);\n            exit;\n        }\n    }\n\n    public static function setLocalCall(): void\n    {\n        self::$localCall = true;\n    }\n\n    public static function setNotRestCall(): void\n    {\n        self::$notRestCall = true;\n    }\n\n    public static function is_fhir_request($resource): bool\n    {\n        return stripos(strtolower($resource), \"/fhir/\") !== false;\n    }\n\n    public static function is_portal_request($resource): bool\n    {\n        return stripos(strtolower($resource), \"/portal/\") !== false;\n    }\n\n    public static function is_api_request($resource): bool\n    {\n        return stripos(strtolower($resource), \"/api/\") !== false;\n    }\n\n    public static function skipApiAuth($resource): bool\n    {\n        if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {\n            // we don't authenticate OPTIONS requests\n            return true;\n        }\n\n        // ensure 1) sane site and 2) ensure the site exists on filesystem before even considering for skip api auth\n        if (empty(self::$SITE) || preg_match('/[^A-Za-z0-9\\\\-.]/', self::$SITE) || !file_exists(__DIR__ . '/sites/' . self::$SITE)) {\n            error_log(\"OpenEMR Error - api site error, so forced exit\");\n            http_response_code(400);\n            exit();\n        }\n        // let the capability statement for FHIR or the SMART-on-FHIR through\n        $resource = str_replace('/' . self::$SITE, '', $resource);\n        if (\n            // TODO: @adunsulag we need to centralize our auth skipping logic... as we have this duplicated in HttpRestRouteHandler\n            // however, at the point of this method we don't have the resource identified and haven't gone through our parsing\n            // routine to handle that logic...\n            $resource === (\"/fhir/metadata\") ||\n            $resource === (\"/fhir/.well-known/smart-configuration\") ||\n            // skip list and single instance routes\n            0 === strpos(\"/fhir/OperationDefinition\", $resource)\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public static function apiLog($response = '', $requestBody = ''): void\n    {\n        $logResponse = $response;\n\n        // only log when using standard api calls (skip when using local api calls from within OpenEMR)\n        //  and when api log option is set\n        if (!$GLOBALS['is_local_api'] && !self::$notRestCall && $GLOBALS['api_log_option']) {\n            if ($GLOBALS['api_log_option'] == 1) {\n                // Do not log the response and requestBody\n                $logResponse = '';\n                $requestBody = '';\n            }\n            if ($response instanceof ResponseInterface) {\n                if (self::shouldLogResponse($response)) {\n                    $body = $response->getBody();\n                    $logResponse = $body->getContents();\n                    $body->rewind();\n                } else {\n                    $logResponse = 'Content not application/json - Skip binary data';\n                }\n            } else {\n                $logResponse = (!empty($logResponse)) ? json_encode($response) : '';\n            }\n\n            // convert pertinent elements to json\n            $requestBody = (!empty($requestBody)) ? json_encode($requestBody) : '';\n\n            // prepare values and call the log function\n            $event = 'api';\n            $category = 'api';\n            $method = $_SERVER['REQUEST_METHOD'];\n            $url = $_SERVER['REQUEST_URI'];\n            $patientId = (int)($_SESSION['pid'] ?? 0);\n            $userId = (int)($_SESSION['authUserID'] ?? 0);\n            $api = [\n                'user_id' => $userId,\n                'patient_id' => $patientId,\n                'method' => $method,\n                'request' => $GLOBALS['resource'],\n                'request_url' => $url,\n                'request_body' => $requestBody,\n                'response' => $logResponse\n            ];\n            if ($patientId === 0) {\n                $patientId = null; //entries in log table are blank for no patient_id, whereas in api_log are 0, which is why above $api value uses 0 when empty\n            }\n            EventAuditLogger::instance()->recordLogItem(1, $event, ($_SESSION['authUser'] ?? ''), ($_SESSION['authProvider'] ?? ''), 'api log', $patientId, $category, 'open-emr', null, null, '', $api);\n        }\n    }\n\n    public static function emitResponse($response, $build = false): void\n    {\n        if (headers_sent()) {\n            throw new RuntimeException('Headers already sent.');\n        }\n        $statusLine = sprintf(\n            'HTTP/%s %s %s',\n            $response->getProtocolVersion(),\n            $response->getStatusCode(),\n            $response->getReasonPhrase()\n        );\n        header($statusLine, true);\n        foreach ($response->getHeaders() as $name => $values) {\n            $responseHeader = sprintf('%s: %s', $name, $response->getHeaderLine($name));\n            header($responseHeader, false);\n        }\n        echo $response->getBody();\n    }\n\n    /**\n     * If the FHIR System scopes enabled or not.  True if its turned on, false otherwise.\n     * @return bool\n     */\n    public static function areSystemScopesEnabled()\n    {\n        return $GLOBALS['rest_system_scopes_api'] === '1';\n    }\n\n    public function authenticateUserToken($tokenId, $clientId, $userId): bool\n    {\n        $ip = collectIpAddresses();\n\n        // check for token\n        $accessTokenRepo = new AccessTokenRepository();\n        $authTokenExpiration = $accessTokenRepo->getTokenExpiration($tokenId, $clientId, $userId);\n\n        if (empty($authTokenExpiration)) {\n            EventAuditLogger::instance()->newEvent('api', '', '', 0, \"API failure: \" . $ip['ip_string'] . \". Token not found for client[\" . $clientId . \"] and user \" . $userId . \".\");\n            return false;\n        }\n\n        // Ensure token not expired (note an expired token should have already been caught by oauth2, however will also check here)\n        $currentDateTime = date(\"Y-m-d H:i:s\");\n        $expiryDateTime = date(\"Y-m-d H:i:s\", strtotime($authTokenExpiration));\n        if ($expiryDateTime <= $currentDateTime) {\n            EventAuditLogger::instance()->newEvent('api', '', '', 0, \"API failure: \" . $ip['ip_string'] . \". Token expired for client[\" . $clientId . \"] and user \" . $userId . \".\");\n            return false;\n        }\n\n        // Token authentication passed\n        EventAuditLogger::instance()->newEvent('api', '', '', 1, \"API success: \" . $ip['ip_string'] . \". Token successfully used for client[\" . $clientId . \"] and user \" . $userId . \".\");\n        return true;\n    }\n\n    /**\n     * Checks if we should log the response interface (we don't want to log binary documents or anything like that)\n     * We only log requests with a content-type of any form of json fhir+application/json or application/json\n     * @param ResponseInterface $response\n     * @return bool If the request should be logged, false otherwise\n     */\n    private static function shouldLogResponse(ResponseInterface $response)\n    {\n        if ($response->hasHeader(\"Content-Type\")) {\n            $contentType = $response->getHeaderLine(\"Content-Type\");\n            if ($contentType === 'application/json') {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Grabs all of the context information for the request's access token and populates any context variables the\n     * request needs (such as patient binding information).  Returns the populated request\n     * @param HttpRestRequest $restRequest\n     * @return HttpRestRequest\n     */\n    public function populateTokenContextForRequest(HttpRestRequest $restRequest)\n    {\n\n        $context = $this->getTokenContextForRequest($restRequest);\n        // note that the context here is the SMART value that is returned in the response for an AccessToken in this\n        // case it is the patient value which is the logical id (ie uuid) of the patient.\n        $patientUuid = $context['patient'] ?? null;\n        if (!empty($patientUuid)) {\n            // we only set the bound patient access if the underlying user can still access the patient\n            if ($this->checkUserHasAccessToPatient($restRequest->getRequestUserId(), $patientUuid)) {\n                $restRequest->setPatientUuidString($patientUuid);\n            } else {\n                (new SystemLogger())->error(\"OpenEMR Error: api had patient launch scope but user did not have access to patient uuid.\"\n                . \" Resources restricted with patient scopes will not return results\");\n            }\n        } else {\n            (new SystemLogger())->error(\"OpenEMR Error: api had patient launch scope but no patient was set in the \"\n            . \" session cache.  Resources restricted with patient scopes will not return results\");\n        }\n        return $restRequest;\n    }\n\n    public function getTokenContextForRequest(HttpRestRequest $restRequest)\n    {\n        $accessTokenRepo = new AccessTokenRepository();\n        // note this is pretty confusing as getAccessTokenId comes from the oauth_access_id which is the token NOT\n        // the database id even though this is called accessTokenId....\n        $token = $accessTokenRepo->getTokenByToken($restRequest->getAccessTokenId());\n        $context = $token['context'] ?? \"{}\"; // if there is no populated context we just return an empty return\n        try {\n            return json_decode($context, true);\n        } catch (\\Exception $exception) {\n            (new SystemLogger())->error(\"OpenEMR Error: failed to decode token context json\", ['exception' => $exception->getMessage()\n                , 'tokenId' => $restRequest->getAccessTokenId()]);\n        }\n        return [];\n    }\n\n\n    /**\n     * Checks whether a user has access to the patient. Returns true if the user can access the given patient, false otherwise\n     * @param $userId The id from the users table that represents the user\n     * @param $patientUuid The uuid from the patient_data table that represents the patient\n     * @return bool True if has access, false otherwise\n     */\n    private function checkUserHasAccessToPatient($userId, $patientUuid)\n    {\n        // TODO: the session should never be populated with the pid from the access token unless the user had access to\n        // it.  However, if we wanted an additional check or if we wanted to fire off any kind of event that does\n        // patient filtering by provider / clinic we would handle that here.\n        return true;\n    }\n\n\n    /** prevents external cloning */\n    private function __clone()\n    {\n    }\n}\n\n// Include our routes and init routes global\n//\nrequire_once(__DIR__ . \"/_rest_routes.inc.php\");\n"
        },
        {
          "name": "_rest_routes.inc.php",
          "type": "blob",
          "size": 512.9697265625,
          "content": "<?php\n\n/**\n * Routes\n * (All REST routes)\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Matthew Vita <matthewvita48@gmail.com>\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @author    Yash Raj Bothra <yashrajbothra786@gmail.com>\n * @author    Stephen Nielson <snielson@discoverandchange.com>\n * @copyright Copyright (c) 2018 Matthew Vita <matthewvita48@gmail.com>\n * @copyright Copyright (c) 2018-2020 Jerry Padgett <sjpadgett@gmail.com>\n * @copyright Copyright (c) 2019-2021 Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2020 Yash Raj Bothra <yashrajbothra786@gmail.com>\n * @copyright Copyright (c) 2024 Care Management Solutions, Inc. <stephen.waite@cmsvt.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\n/**\n *  @OA\\Info(title=\"OpenEMR API\", version=\"7.0.3\")\n *  @OA\\Server(url=\"/apis/default/\")\n *  @OA\\SecurityScheme(\n *      securityScheme=\"openemr_auth\",\n *      type=\"oauth2\",\n *      @OA\\Flow(\n *          authorizationUrl=\"/oauth2/default/authorize\",\n *          tokenUrl=\"/oauth2/default/token\",\n *          refreshUrl=\"/oauth2/default/token\",\n *          flow=\"authorizationCode\",\n *          scopes={\n *              \"openid\": \"Generic mandatory scope\",\n *              \"offline_access\": \"Will signal server to provide a refresh token\",\n *              \"launch/patient\": \"Will provide a patient selector when logging in as an OpenEMR user (required for testing patient/* scopes in swagger if not logging in as a patient)\",\n *              \"api:fhir\": \"FHIR R4 API\",\n *              \"patient/AllergyIntolerance.read\": \"Read allergy intolerance resources for the current patient (api:fhir)\",\n *              \"patient/Appointment.read\": \"Read appointment resources for the current patient (api:fhir)\",\n *              \"patient/Binary.read\": \"Read binary document resources for the current patient (api:fhir)\",\n *              \"patient/CarePlan.read\": \"Read care plan resources for the current patient (api:fhir)\",\n *              \"patient/CareTeam.read\": \"Read care team resources for the current patient (api:fhir)\",\n *              \"patient/Condition.read\": \"Read condition resources for the current patient (api:fhir)\",\n *              \"patient/Coverage.read\": \"Read coverage resources for the current patient (api:fhir)\",\n *              \"patient/Device.read\": \"Read device resources for the current patient (api:fhir)\",\n *              \"patient/DiagnosticReport.read\": \"Read diagnostic report resources for the current patient (api:fhir)\",\n *              \"patient/DocumentReference.read\": \"Read document reference resources for the current patient (api:fhir)\",\n *              \"patient/DocumentReference.$docref\" : \"Generate a document for the current patient or returns the most current Clinical Summary of Care Document (CCD)\",\n *              \"patient/Encounter.read\": \"Read encounter resources for the current patient (api:fhir)\",\n *              \"patient/Goal.read\": \"Read goal resources for the current patient (api:fhir)\",\n *              \"patient/Immunization.read\": \"Read immunization resources for the current patient (api:fhir)\",\n *              \"patient/Location.read\": \"Read location resources for the current patient (api:fhir)\",\n *              \"patient/Medication.read\": \"Read medication resources for the current patient (api:fhir)\",\n *              \"patient/MedicationRequest.read\": \"Read medication request resources for the current patient (api:fhir)\",\n *              \"patient/Observation.read\": \"Read observation resources for the current patient (api:fhir)\",\n *              \"patient/Organization.read\": \"Read organization resources for the current patient (api:fhir)\",\n *              \"patient/Patient.read\": \"Read patient resource for the current patient (api:fhir)\",\n *              \"patient/Person.read\": \"Read person resources for the current patient (api:fhir)\",\n *              \"patient/Practitioner.read\": \"Read practitioner resources for the current patient (api:fhir)\",\n *              \"patient/Procedure.read\": \"Read procedure resources for the current patient (api:fhir)\",\n *              \"patient/Provenance.read\": \"Read provenance resources for the current patient (api:fhir)\",\n *              \"system/AllergyIntolerance.read\": \"Read all allergy intolerance resources in the system (api:fhir)\",\n *              \"system/Binary.read\": \"Read all binary document resources in the system (api:fhir)\",\n *              \"system/CarePlan.read\": \"Read all care plan resources in the system (api:fhir)\",\n *              \"system/CareTeam.read\": \"Read all care team resources in the system (api:fhir)\",\n *              \"system/Condition.read\": \"Read all condition resources in the system (api:fhir)\",\n *              \"system/Coverage.read\": \"Read all coverage resources in the system (api:fhir)\",\n *              \"system/Device.read\": \"Read all device resources in the system (api:fhir)\",\n *              \"system/DiagnosticReport.read\": \"Read all diagnostic report resources in the system (api:fhir)\",\n *              \"system/DocumentReference.read\": \"Read all document reference resources in the system (api:fhir)\",\n *              \"system/DocumentReference.$docref\" : \"Generate a document for any patient in the system or returns the most current Clinical Summary of Care Document (CCD)\",\n *              \"system/Encounter.read\": \"Read all encounter resources in the system (api:fhir)\",\n *              \"system/Goal.read\": \"Read all goal resources in the system (api:fhir)\",\n *              \"system/Group.read\": \"Read all group resources in the system (api:fhir)\",\n *              \"system/Immunization.read\": \"Read all immunization resources in the system (api:fhir)\",\n *              \"system/Location.read\": \"Read all location resources in the system (api:fhir)\",\n *              \"system/Medication.read\": \"Read all medication resources in the system (api:fhir)\",\n *              \"system/MedicationRequest.read\": \"Read all medication request resources in the system (api:fhir)\",\n *              \"system/Observation.read\": \"Read all observation resources in the system (api:fhir)\",\n *              \"system/Organization.read\": \"Read all organization resources in the system (api:fhir)\",\n *              \"system/Patient.read\": \"Read all patient resources in the system (api:fhir)\",\n *              \"system/Person.read\": \"Read all person resources in the system (api:fhir)\",\n *              \"system/Practitioner.read\": \"Read all practitioner resources in the system (api:fhir)\",\n *              \"system/PractitionerRole.read\": \"Read all practitioner role resources in the system (api:fhir)\",\n *              \"system/Procedure.read\": \"Read all procedure resources in the system (api:fhir)\",\n *              \"system/Provenance.read\": \"Read all provenance resources in the system (api:fhir)\",\n *              \"system/ValueSet.read\": \"Read all valueSet resources in the system (api:fhir)\",\n *              \"user/AllergyIntolerance.read\": \"Read all allergy intolerance resources the user has access to (api:fhir)\",\n *              \"user/Binary.read\" : \"Read all binary documents the user has access to (api:fhir)\",\n *              \"user/CarePlan.read\": \"Read all care plan resources the user has access to (api:fhir)\",\n *              \"user/CareTeam.read\": \"Read all care team resources the user has access to (api:fhir)\",\n *              \"user/Condition.read\": \"Read all condition resources the user has access to (api:fhir)\",\n *              \"user/Coverage.read\": \"Read all coverage resources the user has access to (api:fhir)\",\n *              \"user/Device.read\": \"Read all device resources the user has access to (api:fhir)\",\n *              \"user/DiagnosticReport.read\": \"Read all diagnostic report resources the user has access to (api:fhir)\",\n *              \"user/DocumentReference.read\": \"Read all document reference resources the user has access to (api:fhir)\",\n *              \"user/DocumentReference.$docref\" : \"Generate a document for any patient the user has access to or returns the most current Clinical Summary of Care Document (CCD) (api:fhir)\",\n *              \"user/Encounter.read\": \"Read all encounter resources the user has access to (api:fhir)\",\n *              \"user/Goal.read\": \"Read all goal resources the user has access to (api:fhir)\",\n *              \"user/Immunization.read\": \"Read all immunization resources the user has access to (api:fhir)\",\n *              \"user/Location.read\": \"Read all location resources the user has access to (api:fhir)\",\n *              \"user/Medication.read\": \"Read all medication resources the user has access to (api:fhir)\",\n *              \"user/MedicationRequest.read\": \"Read all medication request resources the user has access to (api:fhir)\",\n *              \"user/Observation.read\": \"Read all observation resources the user has access to (api:fhir)\",\n *              \"user/Organization.read\": \"Read all organization resources the user has access to (api:fhir)\",\n *              \"user/Organization.write\": \"Write all organization resources the user has access to (api:fhir)\",\n *              \"user/Patient.read\": \"Read all patient resources the user has access to (api:fhir)\",\n *              \"user/Patient.write\": \"Write all patient resources the user has access to (api:fhir)\",\n *              \"user/Person.read\": \"Read all person resources the user has access to (api:fhir)\",\n *              \"user/Practitioner.read\": \"Read all practitioner resources the user has access to (api:fhir)\",\n *              \"user/Practitioner.write\": \"Write all practitioner resources the user has access to (api:fhir)\",\n *              \"user/PractitionerRole.read\": \"Read all practitioner role resources the user has access to (api:fhir)\",\n *              \"user/Procedure.read\": \"Read all procedure resources the user has access to (api:fhir)\",\n *              \"user/Provenance.read\": \"Read all provenance resources the user has access to (api:fhir)\",\n *              \"user/ValueSet.read\": \"Read all valueSet resources the user has access to (api:fhir)\",\n *              \"api:oemr\": \"Standard OpenEMR API\",\n *              \"user/allergy.read\": \"Read allergies the user has access to (api:oemr)\",\n *              \"user/allergy.write\": \"Write allergies the user has access to for (api:oemr)\",\n *              \"user/appointment.read\": \"Read appointments the user has access to (api:oemr)\",\n *              \"user/appointment.write\": \"Write appointments the user has access to for (api:oemr)\",\n *              \"user/dental_issue.read\": \"Read dental issues the user has access to (api:oemr)\",\n *              \"user/dental_issue.write\": \"Write dental issues the user has access to (api:oemr)\",\n *              \"user/document.read\": \"Read documents the user has access to (api:oemr)\",\n *              \"user/document.write\": \"Write documents the user has access to (api:oemr)\",\n *              \"user/drug.read\": \"Read drugs the user has access to (api:oemr)\",\n *              \"user/encounter.read\": \"Read encounters the user has access to (api:oemr)\",\n *              \"user/encounter.write\": \"Write encounters the user has access to (api:oemr)\",\n *              \"user/facility.read\": \"Read facilities the user has access to (api:oemr)\",\n *              \"user/facility.write\": \"Write facilities the user has access to (api:oemr)\",\n *              \"user/immunization.read\": \"Read immunizations the user has access to (api:oemr)\",\n *              \"user/insurance.read\": \"Read insurances the user has access to (api:oemr)\",\n *              \"user/insurance.write\": \"Write insurances the user has access to (api:oemr)\",\n *              \"user/insurance_company.read\": \"Read insurance companies the user has access to (api:oemr)\",\n *              \"user/insurance_company.write\": \"Write insurance companies the user has access to (api:oemr)\",\n *              \"user/insurance_type.read\": \"Read insurance types the user has access to (api:oemr)\",\n *              \"user/list.read\": \"Read lists the user has access to (api:oemr)\",\n *              \"user/medical_problem.read\": \"Read medical problems the user has access to (api:oemr)\",\n *              \"user/medical_problem.write\": \"Write medical problems the user has access to (api:oemr)\",\n *              \"user/medication.read\": \"Read medications the user has access to (api:oemr)\",\n *              \"user/medication.write\": \"Write medications the user has access to (api:oemr)\",\n *              \"user/message.write\": \"Read messages the user has access to (api:oemr)\",\n *              \"user/patient.read\": \"Read patients the user has access to (api:oemr)\",\n *              \"user/patient.write\": \"Write patients the user has access to (api:oemr)\",\n *              \"user/practitioner.read\": \"Read practitioners the user has access to (api:oemr)\",\n *              \"user/practitioner.write\": \"Write practitioners the user has access to (api:oemr)\",\n *              \"user/prescription.read\": \"Read prescriptions the user has access to (api:oemr)\",\n *              \"user/procedure.read\": \"Read procedures the user has access to (api:oemr)\",\n *              \"user/soap_note.read\": \"Read soap notes the user has access to (api:oemr)\",\n *              \"user/soap_note.write\": \"Write soap notes the user has access to (api:oemr)\",\n *              \"user/surgery.read\": \"Read surgeries the user has access to (api:oemr)\",\n *              \"user/surgery.write\": \"Write surgeries the user has access to (api:oemr)\",\n *              \"user/transaction.read\": \"Read transactions the user has access to (api:oemr)\",\n *              \"user/transaction.write\": \"Write transactions the user has access to (api:oemr)\",\n *              \"user/user.read\": \"Read users the current user has access to (api:oemr)\",\n *              \"user/vital.read\": \"Read vitals the user has access to (api:oemr)\",\n *              \"user/vital.write\": \"Write vitals the user has access to (api:oemr)\",\n *              \"api:port\": \"Standard Patient Portal OpenEMR API\",\n *              \"patient/encounter.read\": \"Read encounters the patient has access to (api:port)\",\n *              \"patient/patient.read\": \"Write encounters the patient has access to (api:port)\",\n *              \"patient/appointment.read\": \"Read appointments the patient has access to (api:port)\"\n *          }\n *      )\n *  )\n *  @OA\\Tag(\n *      name=\"fhir\",\n *      description=\"FHIR R4 API\"\n *  )\n *  @OA\\Tag(\n *      name=\"standard\",\n *      description=\"Standard OpenEMR API\"\n *  )\n *  @OA\\Tag(\n *      name=\"standard-patient\",\n *      description=\"Standard Patient Portal OpenEMR API\"\n *  )\n *  @OA\\Parameter(\n *          name=\"_sort\",\n *          in=\"query\",\n *          parameter=\"_sort\",\n *          description=\"The sort criteria specified in comma separated order with Descending order being specified by a dash before the search parameter name. (Example: name,-category)\",\n *          required=false,\n *          @OA\\Schema(\n *              type=\"string\"\n *          )\n *  )\n *  @OA\\Parameter(\n *          name=\"_lastUpdated\",\n *          in=\"query\",\n *          parameter=\"_lastUpdated\",\n *          description=\"The date the resource was last updated.\",\n *          required=false,\n *          @OA\\Schema(\n *              type=\"string\"\n *          )\n *  )\n *  @OA\\Response(\n *      response=\"standard\",\n *      description=\"Standard Response\",\n *      @OA\\MediaType(\n *          mediaType=\"application/json\",\n *          @OA\\Schema(\n *              @OA\\Property(\n *                  property=\"validationErrors\",\n *                  description=\"Validation errors.\",\n *                  type=\"array\",\n *                  @OA\\Items(\n *                      type=\"object\",\n *                  ),\n *              ),\n *              @OA\\Property(\n *                  property=\"internalErrors\",\n *                  description=\"Internal errors.\",\n *                  type=\"array\",\n *                  @OA\\Items(\n *                      type=\"object\",\n *                  ),\n *              ),\n *              @OA\\Property(\n *                  property=\"data\",\n *                  description=\"Returned data.\",\n *                  type=\"array\",\n *                  @OA\\Items(\n *                      type=\"object\",\n *                  ),\n *              ),\n *              example={\n *                  \"validationErrors\": {},\n *                  \"error_description\": {},\n *                  \"data\": {}\n *              }\n *          )\n *      )\n *  )\n *  @OA\\Response(\n *      response=\"badrequest\",\n *      description=\"Bad Request\",\n *      @OA\\MediaType(\n *          mediaType=\"application/json\",\n *          @OA\\Schema(\n *              @OA\\Property(\n *                  property=\"validationErrors\",\n *                  description=\"Validation errors.\",\n *                  type=\"object\"\n *              ),\n *              example={\n *                  \"validationErrors\":\n *                  {\n *                      \"_id\": \"The search field argument was invalid, improperly formatted, or could not be parsed.  Inner message: UUID columns must be a valid UUID string\"\n *                  }\n *              }\n *          )\n *      )\n *  )\n *  @OA\\Response(\n *      response=\"unauthorized\",\n *      description=\"Unauthorized\",\n *      @OA\\MediaType(\n *          mediaType=\"application/json\",\n *          @OA\\Schema(\n *              @OA\\Property(\n *                  property=\"error\",\n *                  description=\"The error.\",\n *                  type=\"string\"\n *              ),\n *              @OA\\Property(\n *                  property=\"error_description\",\n *                  description=\"The description of the error.\",\n *                  type=\"string\"\n *              ),\n *              @OA\\Property(\n *                  property=\"hint\",\n *                  description=\"More specific information on the error.\",\n *                  type=\"string\"\n *              ),\n *              @OA\\Property(\n *                  property=\"message\",\n *                  description=\"Message regarding the error.\",\n *                  type=\"string\"\n *              ),\n *              example={\n *                  \"error\": \"access_denied\",\n *                  \"error_description\": \"The resource owner or authorization server denied the request.\",\n *                  \"hint\": \"Missing \"\"Authorization\"\" header\",\n *                  \"message\": \"The resource owner or authorization server denied the request.\"\n *              }\n *          )\n *      )\n *  )\n *  @OA\\Response(\n *      response=\"uuidnotfound\",\n *      description=\"Not Found\",\n *      @OA\\MediaType(\n *          mediaType=\"application/json\",\n *          @OA\\Schema(\n *              @OA\\Property(\n *                  property=\"empty\",\n *                  description=\"empty\",\n *                  type=\"object\"\n *              ),\n *              example={}\n *          )\n *      )\n *  )\n */\n\n// Lets keep our controller classes with the routes.\n//\nuse OpenEMR\\Common\\Acl\\AccessDeniedException;\nuse OpenEMR\\Common\\Http\\HttpRestRequest;\nuse OpenEMR\\RestControllers\\AllergyIntoleranceRestController;\nuse OpenEMR\\RestControllers\\FacilityRestController;\nuse OpenEMR\\RestControllers\\VersionRestController;\nuse OpenEMR\\RestControllers\\ProductRegistrationRestController;\nuse OpenEMR\\RestControllers\\PatientRestController;\nuse OpenEMR\\RestControllers\\EncounterRestController;\nuse OpenEMR\\RestControllers\\PractitionerRestController;\nuse OpenEMR\\RestControllers\\ListRestController;\nuse OpenEMR\\RestControllers\\InsuranceCompanyRestController;\nuse OpenEMR\\RestControllers\\AppointmentRestController;\nuse OpenEMR\\RestControllers\\ConditionRestController;\nuse OpenEMR\\RestControllers\\ONoteRestController;\nuse OpenEMR\\RestControllers\\DocumentRestController;\nuse OpenEMR\\RestControllers\\DrugRestController;\nuse OpenEMR\\RestControllers\\EmployerRestController;\nuse OpenEMR\\RestControllers\\ImmunizationRestController;\nuse OpenEMR\\RestControllers\\InsuranceRestController;\nuse OpenEMR\\RestControllers\\MessageRestController;\nuse OpenEMR\\RestControllers\\PrescriptionRestController;\nuse OpenEMR\\RestControllers\\ProcedureRestController;\nuse OpenEMR\\RestControllers\\TransactionRestController;\nuse OpenEMR\\RestControllers\\UserRestController;\nuse OpenEMR\\Services\\Search\\SearchQueryConfig;\n\n// Note some Http clients may not send auth as json so a function\n// is implemented to determine and parse encoding on auth route's.\n\n// Note that the api route is only for users role\n//  (there is a mechanism in place to ensure only user role can access the api route)\nRestConfig::$ROUTE_MAP = array(\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/facility\",\n     *      description=\"Returns a single facility.\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"name\",\n     *          in=\"query\",\n     *          description=\"The name for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"facility_npi\",\n     *          in=\"query\",\n     *          description=\"The facility_npi for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"phone\",\n     *          in=\"query\",\n     *          description=\"The phone for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *         )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"fax\",\n     *          in=\"query\",\n     *          description=\"The fax for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"street\",\n     *          in=\"query\",\n     *          description=\"The street for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"city\",\n     *          in=\"query\",\n     *          description=\"The city for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"state\",\n     *          in=\"query\",\n     *          description=\"The state for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"postal_code\",\n     *          in=\"query\",\n     *          description=\"The postal_code for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"country_code\",\n     *          in=\"query\",\n     *          description=\"The country_code for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"federal_ein\",\n     *          in=\"query\",\n     *          description=\"The federal_ein for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"website\",\n     *          in=\"query\",\n     *          description=\"The website for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"email\",\n     *          in=\"query\",\n     *          description=\"The email for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *           type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"domain_identifier\",\n     *          in=\"query\",\n     *          description=\"The domain_identifier for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"facility_taxonomy\",\n     *          in=\"query\",\n     *          description=\"The facility_taxonomy for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"facility_code\",\n     *          in=\"query\",\n     *          description=\"The facility_code for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"billing_location\",\n     *          in=\"query\",\n     *          description=\"The billing_location setting for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"accepts_assignment\",\n     *          in=\"query\",\n     *          description=\"The accepts_assignment setting for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"oid\",\n     *          in=\"query\",\n     *          description=\"The oid for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"service_location\",\n     *          in=\"query\",\n     *          description=\"The service_location setting for the facility.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/facility\" => function () {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $return = (new FacilityRestController())->getAll($_GET);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/facility/{fuuid}\",\n     *      description=\"Returns a single facility.\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"fuuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the facility.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/facility/:fuuid\" => function ($fuuid) {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $return = (new FacilityRestController())->getOne($fuuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/facility\",\n     *      description=\"Creates a facility in the system\",\n     *      tags={\"standard\"},\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"name\",\n     *                      description=\"The name for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"facility_npi\",\n     *                      description=\"The facility_npi for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"phone\",\n     *                      description=\"The phone for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"fax\",\n     *                      description=\"The fax for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"street\",\n     *                      description=\"The street for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"city\",\n     *                      description=\"The city for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"state\",\n     *                      description=\"The state for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"postal_code\",\n     *                      description=\"The postal_code for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"country_code\",\n     *                      description=\"The country_code for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"federal_ein\",\n     *                      description=\"The federal_ein for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"website\",\n     *                      description=\"The website for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"email\",\n     *                      description=\"The email for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"domain_identifier\",\n     *                      description=\"The domain_identifier for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"facility_taxonomy\",\n     *                      description=\"The facility_taxonomy for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"facility_code\",\n     *                      description=\"The facility_code for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"billing_location\",\n     *                      description=\"The billing_location setting for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"accepts_assignment\",\n     *                      description=\"The accepts_assignment setting for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"oid\",\n     *                      description=\"The oid for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"service_location\",\n     *                      description=\"The service_location setting for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  required={\"name\", \"facility_npi\"},\n     *                  example={\n     *                      \"name\": \"Aquaria\",\n     *                      \"facility_npi\": \"123456789123\",\n     *                      \"phone\": \"808-606-3030\",\n     *                      \"fax\": \"808-606-3031\",\n     *                      \"street\": \"1337 Bit Shifter Ln\",\n     *                      \"city\": \"San Lorenzo\",\n     *                      \"state\": \"ZZ\",\n     *                      \"postal_code\": \"54321\",\n     *                      \"country_code\": \"US\",\n     *                      \"federal_ein\": \"4343434\",\n     *                      \"website\": \"https://example.com\",\n     *                      \"email\": \"foo@bar.com\",\n     *                      \"domain_identifier\": \"\",\n     *                      \"facility_taxonomy\": \"\",\n     *                      \"facility_code\": \"\",\n     *                      \"billing_location\": \"1\",\n     *                      \"accepts_assignment\": \"1\",\n     *                      \"oid\": \"\",\n     *                      \"service_location\": \"1\"\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     * )\n     */\n    \"POST /api/facility\" => function () {\n        RestConfig::authorization_check(\"admin\", \"super\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new FacilityRestController())->post($data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Put(\n     *      path=\"/api/facility/{fuuid}\",\n     *      description=\"Updates a facility in the system\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"fuuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the facility.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"name\",\n     *                      description=\"The name for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"facility_npi\",\n     *                      description=\"The facility_npi for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"phone\",\n     *                      description=\"The phone for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"fax\",\n     *                      description=\"The fax for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"street\",\n     *                      description=\"The street for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"city\",\n     *                      description=\"The city for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"state\",\n     *                      description=\"The state for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"postal_code\",\n     *                      description=\"The postal_code for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"country_code\",\n     *                      description=\"The country_code for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"federal_ein\",\n     *                      description=\"The federal_ein for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"website\",\n     *                      description=\"The website for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"email\",\n     *                      description=\"The email for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"domain_identifier\",\n     *                      description=\"The domain_identifier for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"facility_taxonomy\",\n     *                      description=\"The facility_taxonomy for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"facility_code\",\n     *                      description=\"The facility_code for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"billing_location\",\n     *                      description=\"The billing_location setting for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"accepts_assignment\",\n     *                      description=\"The accepts_assignment setting for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"oid\",\n     *                      description=\"The oid for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"service_location\",\n     *                      description=\"The service_location setting for the facility.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  example={\n     *                      \"name\": \"Aquaria\",\n     *                      \"facility_npi\": \"123456789123\",\n     *                      \"phone\": \"808-606-3030\",\n     *                      \"fax\": \"808-606-3031\",\n     *                      \"street\": \"1337 Bit Shifter Ln\",\n     *                      \"city\": \"San Lorenzo\",\n     *                      \"state\": \"ZZ\",\n     *                      \"postal_code\": \"54321\",\n     *                      \"country_code\": \"US\",\n     *                      \"federal_ein\": \"4343434\",\n     *                      \"website\": \"https://example.com\",\n     *                      \"email\": \"foo@bar.com\",\n     *                      \"domain_identifier\": \"\",\n     *                      \"facility_taxonomy\": \"\",\n     *                      \"facility_code\": \"\",\n     *                      \"billing_location\": \"1\",\n     *                      \"accepts_assignment\": \"1\",\n     *                      \"oid\": \"\",\n     *                      \"service_location\": \"1\"\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /api/facility/:fuuid\" => function ($fuuid) {\n        RestConfig::authorization_check(\"admin\", \"super\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return =  (new FacilityRestController())->patch($fuuid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient\",\n     *      description=\"Retrieves a list of patients\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *        ref=\"#/components/parameters/_sort\"\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"fname\",\n     *          in=\"query\",\n     *          description=\"The first name for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"lname\",\n     *          in=\"query\",\n     *          description=\"The last name for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"ss\",\n     *          in=\"query\",\n     *          description=\"The social security number for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"street\",\n     *          in=\"query\",\n     *          description=\"The street for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"postal_code\",\n     *          in=\"query\",\n     *          description=\"The postal code for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"city\",\n     *          in=\"query\",\n     *          description=\"The city for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"state\",\n     *          in=\"query\",\n     *          description=\"The state for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"phone_home\",\n     *          in=\"query\",\n     *          description=\"The home phone for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"phone_biz\",\n     *          in=\"query\",\n     *          description=\"The business phone for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"phone_cell\",\n     *          in=\"query\",\n     *          description=\"The cell phone for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"postal_contact\",\n     *          in=\"query\",\n     *          description=\"The postal_contact for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"sex\",\n     *          in=\"query\",\n     *          description=\"The gender for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"country_code\",\n     *          in=\"query\",\n     *          description=\"The country code for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"email\",\n     *          in=\"query\",\n     *          description=\"The email for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"DOB\",\n     *          in=\"query\",\n     *          description=\"The DOB for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"date\",\n     *          in=\"query\",\n     *          description=\"The date this patient resource was last modified.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_offset\",\n     *          in=\"query\",\n     *          description=\"The number of records to offset from this index in the search result.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"integer\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_limit\",\n     *          in=\"query\",\n     *          description=\"The maximum number of resources to return in the result set. 0 means unlimited.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"integer\"\n     *              ,minimum=0\n     *              ,maximum=200\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient\" => function () {\n        RestConfig::authorization_check(\"patients\", \"demo\");\n        $config = SearchQueryConfig::createConfigFromQueryParams($_GET);\n        $return = (new PatientRestController())->getAll($_GET, $config);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     * Schema for the patient request\n     *\n     *  @OA\\Schema(\n     *      schema=\"api_patient_request\",\n     *      @OA\\Property(\n     *          property=\"title\",\n     *          description=\"The title of patient.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"fname\",\n     *          description=\"The fname of patient.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"mname\",\n     *          description=\"The mname of patient.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"lname\",\n     *          description=\"The lname of patient.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"street\",\n     *          description=\"The street address of patient.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"postal_code\",\n     *          description=\"The postal code of patient.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"city\",\n     *          description=\"The city of patient.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"state\",\n     *          description=\"The state of patient.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"country_code\",\n     *          description=\"The country code of patient.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"phone_contact\",\n     *          description=\"The phone contact of patient.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"DOB\",\n     *          description=\"The DOB of patient.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"sex\",\n     *          description=\"The lname of patient.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"race\",\n     *          description=\"The race of patient.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"ethnicity\",\n     *          description=\"The ethnicity of patient.\",\n     *          type=\"string\"\n     *      ),\n     *      required={\"fname\", \"lname\", \"DOB\", \"sex\"},\n     *      example={\n     *          \"title\": \"Mr\",\n     *          \"fname\": \"Foo\",\n     *          \"mname\": \"\",\n     *          \"lname\": \"Bar\",\n     *          \"street\": \"456 Tree Lane\",\n     *          \"postal_code\": \"08642\",\n     *          \"city\": \"FooTown\",\n     *          \"state\": \"FL\",\n     *          \"country_code\": \"US\",\n     *          \"phone_contact\": \"123-456-7890\",\n     *          \"DOB\": \"1992-02-02\",\n     *          \"sex\": \"Male\",\n     *          \"race\": \"\",\n     *          \"ethnicity\": \"\"\n     *      }\n     *  )\n     */\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/patient\",\n     *      description=\"Creates a new patient\",\n     *      tags={\"standard\"},\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_patient_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"validationErrors\",\n     *                      description=\"Validation errors.\",\n     *                      type=\"array\",\n     *                      @OA\\Items(\n     *                          type=\"object\",\n     *                      ),\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"internalErrors\",\n     *                      description=\"Internal errors.\",\n     *                      type=\"array\",\n     *                      @OA\\Items(\n     *                          type=\"object\",\n     *                      ),\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"data\",\n     *                      description=\"Returned data.\",\n     *                      type=\"array\",\n     *                      @OA\\Items(\n     *                          @OA\\Property(\n     *                              property=\"pid\",\n     *                              description=\"patient pid\",\n     *                              type=\"integer\",\n     *                          )\n     *                      ),\n     *                  ),\n     *                  example={\n     *                      \"validationErrors\": {},\n     *                      \"error_description\": {},\n     *                      \"data\": {\n     *                          \"pid\": 1\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/patient\" => function () {\n        RestConfig::authorization_check(\"patients\", \"demo\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new PatientRestController())->post($data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     * Schema for the patient response\n     *\n     *  @OA\\Schema(\n     *      schema=\"api_patient_response\",\n     *      @OA\\Property(\n     *          property=\"validationErrors\",\n     *          description=\"Validation errors.\",\n     *          type=\"array\",\n     *          @OA\\Items(\n     *              type=\"object\",\n     *          ),\n     *      ),\n     *      @OA\\Property(\n     *          property=\"internalErrors\",\n     *          description=\"Internal errors.\",\n     *          type=\"array\",\n     *          @OA\\Items(\n     *              type=\"object\",\n     *          ),\n     *      ),\n     *      @OA\\Property(\n     *          property=\"data\",\n     *          description=\"Returned data.\",\n     *          type=\"array\",\n     *          @OA\\Items(\n     *              @OA\\Property(\n     *                  property=\"id\",\n     *                  description=\"patient id\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"pid\",\n     *                  description=\"patient pid\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"pubpid\",\n     *                  description=\"patient public id\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"title\",\n     *                  description=\"patient title\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"fname\",\n     *                  description=\"patient first name\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"mname\",\n     *                  description=\"patient middle name\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"lname\",\n     *                  description=\"patient last name\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"ss\",\n     *                  description=\"patient social security number\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"street\",\n     *                  description=\"patient street address\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"postal_code\",\n     *                  description=\"patient postal code\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"city\",\n     *                  description=\"patient city\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"state\",\n     *                  description=\"patient state\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"county\",\n     *                  description=\"patient county\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"country_code\",\n     *                  description=\"patient country code\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"drivers_license\",\n     *                  description=\"patient drivers license id\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"contact_relationship\",\n     *                  description=\"patient contact relationship\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"phone_contact\",\n     *                  description=\"patient phone contact\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"phone_home\",\n     *                  description=\"patient home phone\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"phone_biz\",\n     *                  description=\"patient work phone\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"phone_cell\",\n     *                  description=\"patient mobile phone\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"email\",\n     *                  description=\"patient email\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"DOB\",\n     *                  description=\"patient DOB\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"sex\",\n     *                  description=\"patient sex (gender)\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"race\",\n     *                  description=\"patient race\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"ethnicity\",\n     *                  description=\"patient ethnicity\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"status\",\n     *                  description=\"patient status\",\n     *                  type=\"string\",\n     *              ),\n     *          ),\n     *      ),\n     *      example={\n     *          \"validationErrors\": {},\n     *          \"error_description\": {},\n     *          \"data\": {\n     *              \"id\": \"193\",\n     *              \"pid\": \"1\",\n     *              \"pubpid\": \"\",\n     *              \"title\": \"Mr\",\n     *              \"fname\": \"Baz\",\n     *              \"mname\": \"\",\n     *              \"lname\": \"Bop\",\n     *              \"ss\": \"\",\n     *              \"street\": \"456 Tree Lane\",\n     *              \"postal_code\": \"08642\",\n     *              \"city\": \"FooTown\",\n     *              \"state\": \"FL\",\n     *              \"county\": \"\",\n     *              \"country_code\": \"US\",\n     *              \"drivers_license\": \"\",\n     *              \"contact_relationship\": \"\",\n     *              \"phone_contact\": \"123-456-7890\",\n     *              \"phone_home\": \"\",\n     *              \"phone_biz\": \"\",\n     *              \"phone_cell\": \"\",\n     *              \"email\": \"\",\n     *              \"DOB\": \"1992-02-03\",\n     *              \"sex\": \"Male\",\n     *              \"race\": \"\",\n     *              \"ethnicity\": \"\",\n     *              \"status\": \"\"\n     *          }\n     *      }\n     *  )\n     */\n    /**\n     *  @OA\\Put(\n     *      path=\"/api/patient/{puuid}\",\n     *      description=\"Updates a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_patient_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_patient_response\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /api/patient/:puuid\" => function ($puuid) {\n        RestConfig::authorization_check(\"patients\", \"demo\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new PatientRestController())->put($puuid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{puuid}\",\n     *      description=\"Retrieves a single patient by their uuid\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_patient_response\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:puuid\" => function ($puuid) {\n        RestConfig::authorization_check(\"patients\", \"demo\");\n        $return = (new PatientRestController())->getOne($puuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{puuid}/encounter\",\n     *      description=\"Retrieves a list of encounters for a single patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:puuid/encounter\" => function ($puuid) {\n        RestConfig::authorization_check(\"encounters\", \"auth_a\");\n        $return = (new EncounterRestController())->getAll($puuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     * Schema for the encounter request\n     *\n     *  @OA\\Schema(\n     *      schema=\"api_encounter_request\",\n     *      @OA\\Property(\n     *          property=\"date\",\n     *          description=\"The date of encounter.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"onset_date\",\n     *          description=\"The onset date of encounter.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"reason\",\n     *          description=\"The reason of encounter.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"facility\",\n     *          description=\"The facility of encounter.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"pc_catid\",\n     *          description=\"The pc_catid of encounter.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"facility_id\",\n     *          description=\"The facility id of encounter.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"billing_facility\",\n     *          description=\"The billing facility id of encounter.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"sensitivity\",\n     *          description=\"The sensitivity of encounter.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"referral_source\",\n     *          description=\"The referral source of encounter.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"pos_code\",\n     *          description=\"The pos_code of encounter.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"external_id\",\n     *          description=\"The external id of encounter.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"provider_id\",\n     *          description=\"The provider id of encounter.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"class_code\",\n     *          description=\"The class_code of encounter.\",\n     *          type=\"string\"\n     *      ),\n     *      required={\"pc_catid\", \"class_code\"},\n     *      example={\n     *          \"date\":\"2020-11-10\",\n     *          \"onset_date\": \"\",\n     *          \"reason\": \"Pregnancy Test\",\n     *          \"facility\": \"Owerri General Hospital\",\n     *          \"pc_catid\": \"5\",\n     *          \"facility_id\": \"3\",\n     *          \"billing_facility\": \"3\",\n     *          \"sensitivity\": \"normal\",\n     *          \"referral_source\": \"\",\n     *          \"pos_code\": \"0\",\n     *          \"external_id\": \"\",\n     *          \"provider_id\": \"1\",\n     *          \"class_code\" : \"AMB\"\n     *      }\n     *  )\n     */\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/patient/{puuid}/encounter\",\n     *      description=\"Creates a new encounter\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_encounter_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"validationErrors\",\n     *                      description=\"Validation errors.\",\n     *                      type=\"array\",\n     *                      @OA\\Items(\n     *                          type=\"object\",\n     *                      ),\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"internalErrors\",\n     *                      description=\"Internal errors.\",\n     *                      type=\"array\",\n     *                      @OA\\Items(\n     *                          type=\"object\",\n     *                      ),\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"data\",\n     *                      description=\"Returned data.\",\n     *                      type=\"array\",\n     *                      @OA\\Items(\n     *                          @OA\\Property(\n     *                              property=\"encounter\",\n     *                              description=\"encounter id\",\n     *                              type=\"integer\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"uuid\",\n     *                              description=\"encounter uuid\",\n     *                              type=\"string\",\n     *                          )\n     *                      ),\n     *                  ),\n     *                  example={\n     *                      \"validationErrors\": {},\n     *                      \"error_description\": {},\n     *                      \"data\": {\n     *                          \"encounter\": 1,\n     *                          \"uuid\": \"90c196f2-51cc-4655-8858-3a80aebff3ef\"\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/patient/:puuid/encounter\" => function ($puuid) {\n        RestConfig::authorization_check(\"encounters\", \"auth_a\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new EncounterRestController())->post($puuid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     * Schema for the encounter response\n     *\n     *  @OA\\Schema(\n     *      schema=\"api_encounter_response\",\n     *      @OA\\Property(\n     *          property=\"validationErrors\",\n     *          description=\"Validation errors.\",\n     *          type=\"array\",\n     *          @OA\\Items(\n     *              type=\"object\",\n     *          ),\n     *      ),\n     *      @OA\\Property(\n     *          property=\"internalErrors\",\n     *          description=\"Internal errors.\",\n     *          type=\"array\",\n     *          @OA\\Items(\n     *              type=\"object\",\n     *          ),\n     *      ),\n     *      @OA\\Property(\n     *          property=\"data\",\n     *          description=\"Returned data.\",\n     *          type=\"array\",\n     *          @OA\\Items(\n     *              @OA\\Property(\n     *                  property=\"id\",\n     *                  description=\"encounter id\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"uuid\",\n     *                  description=\"encounter uuid\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"date\",\n     *                  description=\"encounter date\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"reason\",\n     *                  description=\"encounter reason\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"facility\",\n     *                  description=\"encounter facility name\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"facility_id\",\n     *                  description=\"encounter facility id name\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"pid\",\n     *                  description=\"encounter for patient pid\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"onset_date\",\n     *                  description=\"encounter onset date\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"sensitivity\",\n     *                  description=\"encounter sensitivity\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"billing_note\",\n     *                  description=\"encounter billing note\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"pc_catid\",\n     *                  description=\"encounter pc_catid\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"last_level_billed\",\n     *                  description=\"encounter last_level_billed\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"last_level_closed\",\n     *                  description=\"encounter last_level_closed\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"last_stmt_date\",\n     *                  description=\"encounter last_stmt_date\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"stmt_count\",\n     *                  description=\"encounter stmt_count\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"provider_id\",\n     *                  description=\"provider id\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"supervisor_id\",\n     *                  description=\"encounter supervisor id\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"invoice_refno\",\n     *                  description=\"encounter invoice_refno\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"referral_source\",\n     *                  description=\"encounter referral source\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"billing_facility\",\n     *                  description=\"encounter billing facility id\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"external_id\",\n     *                  description=\"encounter external id\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"pos_code\",\n     *                  description=\"encounter pos_code\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"class_code\",\n     *                  description=\"encounter class_code\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"class_title\",\n     *                  description=\"encounter class_title\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"pc_catname\",\n     *                  description=\"encounter pc_catname\",\n     *                  type=\"string\",\n     *              ),\n     *              @OA\\Property(\n     *                  property=\"billing_facility_name\",\n     *                  description=\"encounter billing facility name\",\n     *                  type=\"string\",\n     *              ),\n     *          ),\n     *      ),\n     *      example={\n     *          \"validationErrors\": {},\n     *          \"error_description\": {},\n     *          \"data\": {\n     *              \"id\": \"1\",\n     *              \"uuid\": \"90c196f2-51cc-4655-8858-3a80aebff3ef\",\n     *              \"date\": \"2019-09-14 00:00:00\",\n     *              \"reason\": \"Pregnancy Test\",\n     *              \"facility\": \"Owerri General Hospital\",\n     *              \"facility_id\": \"3\",\n     *              \"pid\": \"1\",\n     *              \"onset_date\": \"2019-04-20 00:00:00\",\n     *              \"sensitivity\": \"normal\",\n     *              \"billing_note\": null,\n     *              \"pc_catid\": \"5\",\n     *              \"last_level_billed\": \"0\",\n     *              \"last_level_closed\": \"0\",\n     *              \"last_stmt_date\": null,\n     *              \"stmt_count\": \"0\",\n     *              \"provider_id\": \"1\",\n     *              \"supervisor_id\": \"0\",\n     *              \"invoice_refno\": \"\",\n     *              \"referral_source\": \"\",\n     *              \"billing_facility\": \"3\",\n     *              \"external_id\": \"\",\n     *              \"pos_code\": \"0\",\n     *              \"class_code\": \"AMB\",\n     *              \"class_title\": \"ambulatory\",\n     *              \"pc_catname\": \"Office Visit\",\n     *              \"billing_facility_name\": \"Owerri General Hospital\"\n     *          }\n     *      }\n     *  )\n     */\n    /**\n     *  @OA\\Put(\n     *      path=\"/api/patient/{puuid}/encounter/{euuid}\",\n     *      description=\"Modify a encounter\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"euuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the encounter.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_encounter_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_encounter_response\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /api/patient/:puuid/encounter/:euuid\" => function ($puuid, $euuid) {\n        RestConfig::authorization_check(\"encounters\", \"auth_a\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new EncounterRestController())->put($puuid, $euuid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{puuid}/encounter/{euuid}\",\n     *      description=\"Retrieves a single encounter for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"euuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the encounter.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_encounter_response\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:puuid/encounter/:euuid\" => function ($puuid, $euuid) {\n        RestConfig::authorization_check(\"encounters\", \"auth_a\");\n        $return = (new EncounterRestController())->getOne($puuid, $euuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{pid}/encounter/{eid}/soap_note\",\n     *      description=\"Retrieves soap notes from an encounter for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"eid\",\n     *          in=\"path\",\n     *          description=\"The id for the encounter.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:pid/encounter/:eid/soap_note\" => function ($pid, $eid) {\n        RestConfig::authorization_check(\"encounters\", \"notes\");\n        $return = (new EncounterRestController())->getSoapNotes($pid, $eid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     * Schema for the vital request\n     *\n     *  @OA\\Schema(\n     *      schema=\"api_vital_request\",\n     *      @OA\\Property(\n     *          property=\"bps\",\n     *          description=\"The bps of vitals.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"bpd\",\n     *          description=\"The bpd of vitals.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"weight\",\n     *          description=\"The weight of vitals. (unit is lb)\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"height\",\n     *          description=\"The height of vitals. (unit is inches)\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"temperature\",\n     *          description=\"The temperature of temperature. (unit is F)\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"temp_method\",\n     *          description=\"The temp_method of vitals.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"pulse\",\n     *          description=\"The pulse of vitals.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"respiration\",\n     *          description=\"The respiration of vitals.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"note\",\n     *          description=\"The note (ie. comments) of vitals.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"waist_circ\",\n     *          description=\"The waist circumference of vitals. (unit is inches)\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"head_circ\",\n     *          description=\"The head circumference of vitals. (unit is inches)\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"oxygen_saturation\",\n     *          description=\"The oxygen_saturation of vitals.\",\n     *          type=\"string\"\n     *      ),\n     *      example={\n     *          \"bps\": \"130\",\n     *          \"bpd\": \"80\",\n     *          \"weight\": \"220\",\n     *          \"height\": \"70\",\n     *          \"temperature\": \"98\",\n     *          \"temp_method\": \"Oral\",\n     *          \"pulse\": \"60\",\n     *          \"respiration\": \"20\",\n     *          \"note\": \"Patient with difficulty standing, which made weight measurement difficult.\",\n     *          \"waist_circ\": \"37\",\n     *          \"head_circ\": \"22.2\",\n     *          \"oxygen_saturation\": \"96\"\n     *      }\n     *  )\n     */\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/patient/{pid}/encounter/{eid}/vital\",\n     *      description=\"Submits a new vitals form\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"eid\",\n     *          in=\"path\",\n     *          description=\"The id for the encounter.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_vital_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/patient/:pid/encounter/:eid/vital\" => function ($pid, $eid) {\n        RestConfig::authorization_check(\"encounters\", \"notes\");\n        $data = json_decode(file_get_contents(\"php://input\"), true) ?? [];\n        $return = (new EncounterRestController())->postVital($pid, $eid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Put(\n     *      path=\"/api/patient/{pid}/encounter/{eid}/vital/{vid}\",\n     *      description=\"Edit a vitals form\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"eid\",\n     *          in=\"path\",\n     *          description=\"The id for the encounter.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"vid\",\n     *          in=\"path\",\n     *          description=\"The id for the vitalss form.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_vital_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /api/patient/:pid/encounter/:eid/vital/:vid\" => function ($pid, $eid, $vid) {\n        RestConfig::authorization_check(\"encounters\", \"notes\");\n        $data = json_decode(file_get_contents(\"php://input\"), true) ?? [];\n        $return = (new EncounterRestController())->putVital($pid, $eid, $vid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{pid}/encounter/{eid}/vital\",\n     *      description=\"Retrieves all vitals from an encounter for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"eid\",\n     *          in=\"path\",\n     *          description=\"The id for the encounter.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:pid/encounter/:eid/vital\" => function ($pid, $eid) {\n        RestConfig::authorization_check(\"encounters\", \"notes\");\n        $return = (new EncounterRestController())->getVitals($pid, $eid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{pid}/encounter/{eid}/vital/{vid}\",\n     *      description=\"Retrieves a vitals form from an encounter for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *       )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"eid\",\n     *          in=\"path\",\n     *          description=\"The id for the encounter.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"vid\",\n     *          in=\"path\",\n     *          description=\"The id for the vitals form.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:pid/encounter/:eid/vital/:vid\" => function ($pid, $eid, $vid) {\n        RestConfig::authorization_check(\"encounters\", \"notes\");\n        $return = (new EncounterRestController())->getVital($pid, $eid, $vid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{pid}/encounter/{eid}/soap_note/{sid}\",\n     *      description=\"Retrieves a soap note from an encounter for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"eid\",\n     *          in=\"path\",\n     *          description=\"The id for the encounter.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"sid\",\n     *          in=\"path\",\n     *          description=\"The id for the soap note.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:pid/encounter/:eid/soap_note/:sid\" => function ($pid, $eid, $sid) {\n        RestConfig::authorization_check(\"encounters\", \"notes\");\n        $return = (new EncounterRestController())->getSoapNote($pid, $eid, $sid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     * Schema for the soap_note request\n     *\n     *  @OA\\Schema(\n     *      schema=\"api_soap_note_request\",\n     *      @OA\\Property(\n     *          property=\"subjective\",\n     *          description=\"The subjective of soap note.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"objective\",\n     *          description=\"The objective of soap note.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"assessment\",\n     *          description=\"The assessment of soap note.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"plan\",\n     *          description=\"The plan of soap note.\",\n     *          type=\"string\"\n     *      ),\n     *      example={\n     *          \"subjective\": \"The patient with mechanical fall and cut finger.\",\n     *          \"objective\": \"The patient with finger laceration on exam.\",\n     *          \"assessment\": \"The patient with finger laceration requiring sutures.\",\n     *          \"plan\": \"Sutured finger laceration.\"\n     *      }\n     *  )\n     */\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/patient/{pid}/encounter/{eid}/soap_note\",\n     *      description=\"Submits a new soap note\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"eid\",\n     *          in=\"path\",\n     *          description=\"The id for the encounter.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_soap_note_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/patient/:pid/encounter/:eid/soap_note\" => function ($pid, $eid) {\n        RestConfig::authorization_check(\"encounters\", \"notes\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new EncounterRestController())->postSoapNote($pid, $eid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Put(\n     *      path=\"/api/patient/{pid}/encounter/{eid}/soap_note/{sid}\",\n     *      description=\"Edit a soap note\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"eid\",\n     *          in=\"path\",\n     *          description=\"The id for the encounter.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"sid\",\n     *          in=\"path\",\n     *          description=\"The id for the soap noted.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_soap_note_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /api/patient/:pid/encounter/:eid/soap_note/:sid\" => function ($pid, $eid, $sid) {\n        RestConfig::authorization_check(\"encounters\", \"notes\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new EncounterRestController())->putSoapNote($pid, $eid, $sid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/practitioner\",\n     *      description=\"Retrieves a list of practitioners\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"title\",\n     *          in=\"query\",\n     *          description=\"The title for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"fname\",\n     *          in=\"query\",\n     *          description=\"The first name for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"lname\",\n     *          in=\"query\",\n     *          description=\"The last name for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"mname\",\n     *          in=\"query\",\n     *          description=\"The middle name for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"federaltaxid\",\n     *          in=\"query\",\n     *          description=\"The federal tax id for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"federaldrugid\",\n     *          in=\"query\",\n     *          description=\"The federal drug id for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"upin\",\n     *          in=\"query\",\n     *          description=\"The upin for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"facility_id\",\n     *          in=\"query\",\n     *          description=\"The facility id for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"facility\",\n     *          in=\"query\",\n     *          description=\"The facility for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"npi\",\n     *          in=\"query\",\n     *          description=\"The npi for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"email\",\n     *          in=\"query\",\n     *          description=\"The email for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"specialty\",\n     *          in=\"query\",\n     *          description=\"The specialty for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"billname\",\n     *          in=\"query\",\n     *          description=\"The billname for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"url\",\n     *          in=\"query\",\n     *          description=\"The url for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"assistant\",\n     *          in=\"query\",\n     *          description=\"The assistant for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"organization\",\n     *          in=\"query\",\n     *          description=\"The organization for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"valedictory\",\n     *          in=\"query\",\n     *          description=\"The valedictory for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"street\",\n     *          in=\"query\",\n     *          description=\"The street for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"streetb\",\n     *          in=\"query\",\n     *          description=\"The street (line 2) for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"city\",\n     *          in=\"query\",\n     *          description=\"The city for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"state\",\n     *          in=\"query\",\n     *          description=\"The state for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"zip\",\n     *          in=\"query\",\n     *          description=\"The zip for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"phone\",\n     *          in=\"query\",\n     *          description=\"The phone for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"fax\",\n     *          in=\"query\",\n     *          description=\"The fax for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"phonew1\",\n     *          in=\"query\",\n     *          description=\"The phonew1 for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *         name=\"phonecell\",\n     *          in=\"query\",\n     *          description=\"The phonecell for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"notes\",\n     *          in=\"query\",\n     *          description=\"The notes for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"state_license_number2\",\n     *          in=\"query\",\n     *          description=\"The state license number for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"username\",\n     *          in=\"query\",\n     *          description=\"The username for the practitioner.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/practitioner\" => function () {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $return = (new PractitionerRestController())->getAll($_GET);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/practitioner/{pruuid}\",\n     *      description=\"Retrieves a single practitioner by their uuid\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pruuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the practitioner.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/practitioner/:pruuid\" => function ($pruuid) {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $return = (new PractitionerRestController())->getOne($pruuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/practitioner\",\n     *      description=\"Submits a new practitioner\",\n     *      tags={\"standard\"},\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"title\",\n     *                      description=\"The title for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"fname\",\n     *                      description=\"The first name for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"mname\",\n     *                      description=\"The middle name for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"lname\",\n     *                      description=\"The last name for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"federaltaxid\",\n     *                      description=\"The federal tax id for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"federaldrugid\",\n     *                      description=\"The federal drug id for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"upin\",\n     *                      description=\"The upin for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"facility_id\",\n     *                      description=\"The facility_id for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"facility\",\n     *                      description=\"The facility name for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"npi\",\n     *                      description=\"The npi for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"email\",\n     *                      description=\"The email for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"specialty\",\n     *                      description=\"The specialty for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"billname\",\n     *                      description=\"The billname for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"url\",\n     *                      description=\"The url for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"assistant\",\n     *                      description=\"The assistant for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"valedictory\",\n     *                      description=\"The valedictory for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"street\",\n     *                      description=\"The street address for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"streetb\",\n     *                      description=\"The streetb address for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"city\",\n     *                      description=\"The city for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"state\",\n     *                      description=\"The state for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"zip\",\n     *                      description=\"The zip for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"phone\",\n     *                      description=\"The phone for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"fax\",\n     *                      description=\"The fax for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"phonew1\",\n     *                      description=\"The phonew1 for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"phonecell\",\n     *                      description=\"The phonecell for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"notes\",\n     *                      description=\"The notes for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"state_license_number\",\n     *                      description=\"The state license number for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"username\",\n     *                      description=\"The username for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  required={\"fname\", \"lname\", \"npi\"},\n     *                  example={\n     *                      \"title\": \"Mrs.\",\n     *                      \"fname\": \"Eduardo\",\n     *                      \"mname\": \"Kathy\",\n     *                      \"lname\": \"Perez\",\n     *                      \"federaltaxid\": \"\",\n     *                      \"federaldrugid\": \"\",\n     *                      \"upin\": \"\",\n     *                      \"facility_id\": \"3\",\n     *                      \"facility\": \"Your Clinic Name Here\",\n     *                      \"npi\": \"12345678901\",\n     *                      \"email\": \"info@pennfirm.com\",\n     *                      \"specialty\": \"\",\n     *                      \"billname\": null,\n     *                      \"url\": null,\n     *                      \"assistant\": null,\n     *                      \"organization\": null,\n     *                      \"valedictory\": null,\n     *                      \"street\": \"789 Third Avenue\",\n     *                      \"streetb\": \"123 Cannaut Street\",\n     *                      \"city\": \"San Diego\",\n     *                      \"state\": \"CA\",\n     *                      \"zip\": \"90210\",\n     *                      \"phone\": \"(619) 555-9827\",\n     *                      \"fax\": null,\n     *                      \"phonew1\": \"(619) 555-7822\",\n     *                      \"phonecell\": \"(619) 555-7821\",\n     *                      \"notes\": null,\n     *                      \"state_license_number\": \"123456\",\n     *                      \"username\": \"eduardoperez\"\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"validationErrors\",\n     *                      description=\"Validation errors.\",\n     *                      type=\"array\",\n     *                      @OA\\Items(\n     *                          type=\"object\",\n     *                      ),\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"internalErrors\",\n     *                      description=\"Internal errors.\",\n     *                      type=\"array\",\n     *                      @OA\\Items(\n     *                          type=\"object\",\n     *                      ),\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"data\",\n     *                      description=\"Returned data.\",\n     *                      type=\"array\",\n     *                      @OA\\Items(\n     *                          @OA\\Property(\n     *                              property=\"id\",\n     *                              description=\"practitioner id\",\n     *                              type=\"integer\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"uuid\",\n     *                              description=\"practitioner uuid\",\n     *                              type=\"string\",\n     *                          ),\n     *                      ),\n     *                  ),\n     *                  example={\n     *                      \"validationErrors\": {},\n     *                      \"error_description\": {},\n     *                      \"data\": {\n     *                          \"id\": 7,\n     *                          \"uuid\": \"90d453fb-0248-4c0d-9575-d99d02b169f5\"\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/practitioner\" => function () {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new PractitionerRestController())->post($data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Put(\n     *      path=\"/api/practitioner/{pruuid}\",\n     *      description=\"Edit a practitioner\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pruuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the practitioner.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *          type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"title\",\n     *                      description=\"The title for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"fname\",\n     *                      description=\"The first name for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"mname\",\n     *                      description=\"The middle name for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"lname\",\n     *                      description=\"The last name for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"federaltaxid\",\n     *                      description=\"The federal tax id for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"federaldrugid\",\n     *                      description=\"The federal drug id for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"upin\",\n     *                      description=\"The upin for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"facility_id\",\n     *                      description=\"The facility_id for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"facility\",\n     *                      description=\"The facility name for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"npi\",\n     *                      description=\"The npi for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"email\",\n     *                      description=\"The email for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"specialty\",\n     *                      description=\"The specialty for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"billname\",\n     *                      description=\"The billname for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"url\",\n     *                      description=\"The url for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"assistant\",\n     *                      description=\"The assistant for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"valedictory\",\n     *                      description=\"The valedictory for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"street\",\n     *                      description=\"The street address for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"streetb\",\n     *                      description=\"The streetb address for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"city\",\n     *                      description=\"The city for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"state\",\n     *                      description=\"The state for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"zip\",\n     *                      description=\"The zip for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"phone\",\n     *                      description=\"The phone for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"fax\",\n     *                      description=\"The fax for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"phonew1\",\n     *                      description=\"The phonew1 for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"phonecell\",\n     *                      description=\"The phonecell for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"notes\",\n     *                      description=\"The notes for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"state_license_number\",\n     *                      description=\"The state license number for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"username\",\n     *                      description=\"The username for the practitioner.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  example={\n     *                      \"title\": \"Mr\",\n     *                      \"fname\": \"Baz\",\n     *                      \"mname\": \"\",\n     *                      \"lname\": \"Bop\",\n     *                      \"street\": \"456 Tree Lane\",\n     *                      \"zip\": \"08642\",\n     *                      \"city\": \"FooTown\",\n     *                      \"state\": \"FL\",\n     *                      \"phone\": \"123-456-7890\"\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"validationErrors\",\n     *                      description=\"Validation errors.\",\n     *                      type=\"array\",\n     *                      @OA\\Items(\n     *                          type=\"object\",\n     *                      ),\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"internalErrors\",\n     *                      description=\"Internal errors.\",\n     *                      type=\"array\",\n     *                      @OA\\Items(\n     *                          type=\"object\",\n     *                      ),\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"data\",\n     *                      description=\"Returned data.\",\n     *                      type=\"array\",\n     *                      @OA\\Items(\n     *                          @OA\\Property(\n     *                              property=\"id\",\n     *                              description=\"practitioner id\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"uuid\",\n     *                              description=\"practitioner uuid\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"title\",\n     *                              description=\"practitioner title\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"fname\",\n     *                              description=\"practitioner fname\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"lname\",\n     *                              description=\"practitioner lname\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"mname\",\n     *                              description=\"practitioner mname\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"federaltaxid\",\n     *                              description=\"practitioner federaltaxid\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"federaldrugid\",\n     *                              description=\"practitioner federaldrugid\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"upin\",\n     *                              description=\"practitioner upin\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"facility_id\",\n     *                              description=\"practitioner facility_id\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"facility\",\n     *                              description=\"practitioner facility\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"npi\",\n     *                              description=\"practitioner npi\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"email\",\n     *                              description=\"practitioner email\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"active\",\n     *                              description=\"practitioner active setting\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"specialty\",\n     *                              description=\"practitioner specialty\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"billname\",\n     *                              description=\"practitioner billname\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"url\",\n     *                              description=\"practitioner url\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"assistant\",\n     *                              description=\"practitioner assistant\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"organization\",\n     *                              description=\"practitioner organization\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"valedictory\",\n     *                              description=\"practitioner valedictory\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"street\",\n     *                              description=\"practitioner street\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"streetb\",\n     *                              description=\"practitioner streetb\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"city\",\n     *                              description=\"practitioner city\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"state\",\n     *                              description=\"practitioner state\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"zip\",\n     *                              description=\"practitioner zip\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"phone\",\n     *                              description=\"practitioner phone\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"fax\",\n     *                              description=\"fax\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"phonew1\",\n     *                              description=\"practitioner phonew1\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"phonecell\",\n     *                              description=\"practitioner phonecell\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"notes\",\n     *                              description=\"practitioner notes\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"state_license_number\",\n     *                              description=\"practitioner state license number\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"abook_title\",\n     *                              description=\"practitioner abook title\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"physician_title\",\n     *                              description=\"practitioner physician title\",\n     *                              type=\"string\",\n     *                          ),\n     *                          @OA\\Property(\n     *                              property=\"physician_code\",\n     *                              description=\"practitioner physician code\",\n     *                              type=\"string\",\n     *                          )\n     *                      ),\n     *                  ),\n     *                  example={\n     *                      \"validationErrors\": {},\n     *                      \"error_description\": {},\n     *                      \"data\": {\n     *                          \"id\": 7,\n     *                          \"uuid\": \"90d453fb-0248-4c0d-9575-d99d02b169f5\",\n     *                          \"title\": \"Mr\",\n     *                          \"fname\": \"Baz\",\n     *                          \"lname\": \"Bop\",\n     *                          \"mname\": \"\",\n     *                          \"federaltaxid\": \"\",\n     *                          \"federaldrugid\": \"\",\n     *                          \"upin\": \"\",\n     *                          \"facility_id\": \"3\",\n     *                          \"facility\": \"Your Clinic Name Here\",\n     *                          \"npi\": \"0123456789\",\n     *                          \"email\": \"info@pennfirm.com\",\n     *                          \"active\": \"1\",\n     *                          \"specialty\": \"\",\n     *                          \"billname\": \"\",\n     *                          \"url\": \"\",\n     *                          \"assistant\": \"\",\n     *                          \"organization\": \"\",\n     *                          \"valedictory\": \"\",\n     *                          \"street\": \"456 Tree Lane\",\n     *                          \"streetb\": \"123 Cannaut Street\",\n     *                          \"city\": \"FooTown\",\n     *                          \"state\": \"FL\",\n     *                          \"zip\": \"08642\",\n     *                          \"phone\": \"123-456-7890\",\n     *                          \"fax\": \"\",\n     *                          \"phonew1\": \"(619) 555-7822\",\n     *                          \"phonecell\": \"(619) 555-7821\",\n     *                          \"notes\": \"\",\n     *                          \"state_license_number\": \"123456\",\n     *                          \"abook_title\": null,\n     *                          \"physician_title\": null,\n     *                          \"physician_code\": null\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /api/practitioner/:pruuid\" => function ($pruuid) {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new PractitionerRestController())->patch($pruuid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/medical_problem\",\n     *      description=\"Retrieves a list of medical problems\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"condition_uuid\",\n     *          in=\"query\",\n     *          description=\"The uuid for the medical problem.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"title\",\n     *          in=\"query\",\n     *          description=\"The title for the medical problem.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"begdate\",\n     *          in=\"query\",\n     *          description=\"The start date for the medical problem.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"enddate\",\n     *          in=\"query\",\n     *          description=\"The end date for the medical problem.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"diagnosis\",\n     *          in=\"query\",\n     *          description=\"The diagnosis for the medical problem.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/medical_problem\" => function () {\n        RestConfig::authorization_check(\"encounters\", \"notes\");\n        $return = (new ConditionRestController())->getAll();\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/medical_problem/{muuid}\",\n     *      description=\"Retrieves a single medical problem by their uuid\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"muuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the medical problem.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/medical_problem/:muuid\" => function ($muuid) {\n        RestConfig::authorization_check(\"encounters\", \"notes\");\n        $return = (new ConditionRestController())->getOne($muuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{puuid}/medical_problem\",\n     *      description=\"Retrieves all medical problems for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:puuid/medical_problem\" => function ($puuid) {\n        RestConfig::authorization_check(\"encounters\", \"notes\");\n        $return = (new ConditionRestController())->getAll(['puuid' => $puuid, 'condition_uuid' => $muuid], \"medical_problem\");\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{puuid}/medical_problem/{muuid}\",\n     *      description=\"Retrieves a medical problem for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"muuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the medical problem.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:puuid/medical_problem/:muuid\" => function ($puuid, $muuid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new ConditionRestController())->getAll(['puuid' => $puuid, 'condition_uuid' => $muuid]);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     * Schema for the medical_problem request\n     *\n     *  @OA\\Schema(\n     *      schema=\"api_medical_problem_request\",\n     *      @OA\\Property(\n     *          property=\"title\",\n     *          description=\"The title of medical problem.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"begdate\",\n     *          description=\"The beginning date of medical problem.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"enddate\",\n     *          description=\"The end date of medical problem.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"diagnosis\",\n     *          description=\"The diagnosis of medical problem. In format `<codetype>:<code>`\",\n     *          type=\"string\"\n     *      ),\n     *      required={\"title\", \"begdate\"},\n     *      example={\n     *          \"title\": \"Dermatochalasis\",\n     *          \"begdate\": \"2010-10-13\",\n     *          \"enddate\": null,\n     *          \"diagnosis\": \"ICD10:H02.839\"\n     *      }\n     *  )\n     */\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/patient/{puuid}/medical_problem\",\n     *      description=\"Submits a new medical problem\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_medical_problem_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/patient/:puuid/medical_problem\" => function ($puuid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new ConditionRestController())->post($puuid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Put(\n     *      path=\"/api/patient/{puuid}/medical_problem/{muuid}\",\n     *      description=\"Edit a medical problem\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"muuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the medical problem.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_medical_problem_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /api/patient/:puuid/medical_problem/:muuid\" => function ($puuid, $muuid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new ConditionRestController())->put($puuid, $muuid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Delete(\n     *      path=\"/api/patient/{puuid}/medical_problem/{muuid}\",\n     *      description=\"Delete a medical problem\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"muuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the medical problem.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"DELETE /api/patient/:puuid/medical_problem/:muuid\" => function ($puuid, $muuid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new ConditionRestController())->delete($puuid, $muuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/allergy\",\n     *      description=\"Retrieves a list of allergies\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"lists.pid\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"lists.id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the allergy.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"title\",\n     *          in=\"query\",\n     *          description=\"The title for the allergy.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"begdate\",\n     *          in=\"query\",\n     *          description=\"The start date for the allergy.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"enddate\",\n     *          in=\"query\",\n     *          description=\"The end date for the allergy.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"diagnosis\",\n     *          in=\"query\",\n     *          description=\"The diagnosis for the allergy.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/allergy\" => function () {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new AllergyIntoleranceRestController())->getAll();\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/allergy/{auuid}\",\n     *      description=\"Retrieves a single allergy by their uuid\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"auuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the allergy.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/allergy/:auuid\" => function ($auuid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new AllergyIntoleranceRestController())->getOne($auuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{puuid}/allergy\",\n     *      description=\"Retrieves all allergies for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:puuid/allergy\" => function ($puuid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new AllergyIntoleranceRestController())->getAll(['lists.pid' => $puuid]);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{puuid}/allergy/{auuid}\",\n     *      description=\"Retrieves a allergy for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"auuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the allergy.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:puuid/allergy/:auuid\" => function ($puuid, $auuid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new AllergyIntoleranceRestController())->getAll(['lists.pid' => $puuid, 'lists.id' => $auuid]);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     * Schema for the allergy request\n     *\n     *  @OA\\Schema(\n     *      schema=\"api_allergy_request\",\n     *      @OA\\Property(\n     *          property=\"title\",\n     *          description=\"The title of allergy.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"begdate\",\n     *          description=\"The beginning date of allergy.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"enddate\",\n     *          description=\"The end date of allergy.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"diagnosis\",\n     *          description=\"The diagnosis of allergy. In format `<codetype>:<code>`\",\n     *          type=\"string\"\n     *      ),\n     *      required={\"title\", \"begdate\"},\n     *      example={\n     *          \"title\": \"Iodine\",\n     *          \"begdate\": \"2010-10-13\",\n     *          \"enddate\": null\n     *      }\n     *  )\n     */\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/patient/{puuid}/allergy\",\n     *      description=\"Submits a new allergy\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_allergy_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/patient/:puuid/allergy\" => function ($puuid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new AllergyIntoleranceRestController())->post($puuid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Put(\n     *      path=\"/api/patient/{puuid}/allergy/{auuid}\",\n     *      description=\"Edit a allergy\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"auuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the allergy.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_allergy_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /api/patient/:puuid/allergy/:auuid\" => function ($puuid, $auuid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new AllergyIntoleranceRestController())->put($puuid, $auuid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Delete(\n     *      path=\"/api/patient/{puuid}/allergy/{auuid}\",\n     *      description=\"Delete a medical problem\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"auuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the allergy.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *      )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"DELETE /api/patient/:puuid/allergy/:auuid\" => function ($puuid, $auuid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new AllergyIntoleranceRestController())->delete($puuid, $auuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{pid}/medication\",\n     *      description=\"Retrieves all medications for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:pid/medication\" => function ($pid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new ListRestController())->getAll($pid, \"medication\");\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     * Schema for the medication request\n     *\n     *  @OA\\Schema(\n     *      schema=\"api_medication_request\",\n     *      @OA\\Property(\n     *          property=\"title\",\n     *          description=\"The title of medication.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"begdate\",\n     *          description=\"The beginning date of medication.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"enddate\",\n     *          description=\"The end date of medication.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"diagnosis\",\n     *          description=\"The diagnosis of medication. In format `<codetype>:<code>`\",\n     *          type=\"string\"\n     *      ),\n     *      required={\"title\", \"begdate\"},\n     *      example={\n     *          \"title\": \"Norvasc\",\n     *          \"begdate\": \"2013-04-13\",\n     *          \"enddate\": null\n     *      }\n     *  )\n     */\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/patient/{pid}/medication\",\n     *      description=\"Submits a new medication\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_medication_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/patient/:pid/medication\" => function ($pid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new ListRestController())->post($pid, \"medication\", $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Put(\n     *      path=\"/api/patient/{pid}/medication/{mid}\",\n     *      description=\"Edit a medication\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"mid\",\n     *          in=\"path\",\n     *          description=\"The id for the medication.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_medication_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /api/patient/:pid/medication/:mid\" => function ($pid, $mid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new ListRestController())->put($pid, $mid, \"medication\", $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{pid}/medication/{mid}\",\n     *      description=\"Retrieves a medication for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"mid\",\n     *          in=\"path\",\n     *          description=\"The id for the medication.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:pid/medication/:mid\" => function ($pid, $mid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new ListRestController())->getOne($pid, \"medication\", $mid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Delete(\n     *      path=\"/api/patient/{pid}/medication/{mid}\",\n     *      description=\"Delete a medication\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"mid\",\n     *          in=\"path\",\n     *          description=\"The id for the medication.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"DELETE /api/patient/:pid/medication/:mid\" => function ($pid, $mid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new ListRestController())->delete($pid, $mid, \"medication\");\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{pid}/surgery\",\n     *      description=\"Retrieves all surgeries for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:pid/surgery\" => function ($pid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new ListRestController())->getAll($pid, \"surgery\");\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{pid}/surgery/{sid}\",\n     *      description=\"Retrieves a surgery for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"sid\",\n     *          in=\"path\",\n     *          description=\"The id for the surgery.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:pid/surgery/:sid\" => function ($pid, $sid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new ListRestController())->getOne($pid, \"surgery\", $sid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Delete(\n     *      path=\"/api/patient/{pid}/surgery/{sid}\",\n     *      description=\"Delete a surgery\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"sid\",\n     *          in=\"path\",\n     *          description=\"The id for the surgery.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"DELETE /api/patient/:pid/surgery/:sid\" => function ($pid, $sid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new ListRestController())->delete($pid, $sid, \"surgery\");\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     * Schema for the surgery request\n     *\n     *  @OA\\Schema(\n     *      schema=\"api_surgery_request\",\n     *      @OA\\Property(\n     *          property=\"title\",\n     *          description=\"The title of surgery.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"begdate\",\n     *          description=\"The beginning date of surgery.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"enddate\",\n     *          description=\"The end date of surgery.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"diagnosis\",\n     *          description=\"The diagnosis of surgery. In format `<codetype>:<code>`\",\n     *          type=\"string\"\n     *      ),\n     *      required={\"title\", \"begdate\"},\n     *      example={\n     *          \"title\": \"Blepharoplasty\",\n     *          \"begdate\": \"2013-10-14\",\n     *          \"enddate\": null,\n     *          \"diagnosis\": \"CPT4:15823-50\"\n     *      }\n     *  )\n     */\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/patient/{pid}/surgery\",\n     *      description=\"Submits a new surgery\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_surgery_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/patient/:pid/surgery\" => function ($pid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new ListRestController())->post($pid, \"surgery\", $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Put(\n     *      path=\"/api/patient/{pid}/surgery/{sid}\",\n     *      description=\"Edit a surgery\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"sid\",\n     *          in=\"path\",\n     *          description=\"The id for the surgery.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_surgery_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /api/patient/:pid/surgery/:sid\" => function ($pid, $sid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new ListRestController())->put($pid, $sid, \"surgery\", $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{pid}/dental_issue\",\n     *      description=\"Retrieves all dental issues for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:pid/dental_issue\" => function ($pid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new ListRestController())->getAll($pid, \"dental\");\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{pid}/dental_issue/{did}\",\n     *      description=\"Retrieves a dental issue for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"did\",\n     *          in=\"path\",\n     *          description=\"The id for the dental issue.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:pid/dental_issue/:did\" => function ($pid, $did) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new ListRestController())->getOne($pid, \"dental\", $did);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Delete(\n     *      path=\"/api/patient/{pid}/dental_issue/{did}\",\n     *      description=\"Delete a dental issue\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"did\",\n     *          in=\"path\",\n     *          description=\"The id for the dental issue.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"DELETE /api/patient/:pid/dental_issue/:did\" => function ($pid, $did) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new ListRestController())->delete($pid, $did, \"dental\");\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     * Schema for the dental_issue request\n     *\n     *  @OA\\Schema(\n     *      schema=\"api_dental_issue_request\",\n     *      @OA\\Property(\n     *          property=\"title\",\n     *          description=\"The title of dental issue.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"begdate\",\n     *          description=\"The beginning date of dental issue.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"enddate\",\n     *          description=\"The end date of dental issue.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"diagnosis\",\n     *          description=\"The diagnosis of dental issue. In format `<codetype>:<code>`\",\n     *          type=\"string\"\n     *      ),\n     *      required={\"title\", \"begdate\"},\n     *      example={\n     *          \"title\": \"Halitosis\",\n     *          \"begdate\": \"2015-03-17\",\n     *          \"enddate\": null,\n     *      }\n     *  )\n     */\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/patient/{pid}/dental_issue\",\n     *      description=\"Submits a new dental issue\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_dental_issue_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/patient/:pid/dental_issue\" => function ($pid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new ListRestController())->post($pid, \"dental\", $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Put(\n     *      path=\"/api/patient/{pid}/dental_issue/{did}\",\n     *      description=\"Edit a dental issue\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"did\",\n     *          in=\"path\",\n     *          description=\"The id for the dental issue.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_dental_issue_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /api/patient/:pid/dental_issue/:did\" => function ($pid, $did) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new ListRestController())->put($pid, $did, \"dental\", $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{pid}/appointment\",\n     *      description=\"Retrieves all appointments for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:pid/appointment\" => function ($pid) {\n        RestConfig::authorization_check(\"patients\", \"appt\");\n        $return = (new AppointmentRestController())->getAllForPatient($pid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/patient/{pid}/appointment\",\n     *      description=\"Submits a new appointment\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"pc_catid\",\n     *                      description=\"The category of the appointment.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"pc_title\",\n     *                      description=\"The title of the appointment.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"pc_duration\",\n     *                      description=\"The duration of the appointment.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"pc_hometext\",\n     *                      description=\"Comments for the appointment.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"pc_apptstatus\",\n     *                      description=\"use an option from resource=/api/list/apptstat\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"pc_eventDate\",\n     *                      description=\"The date of the appointment.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"pc_startTime\",\n     *                      description=\"The time of the appointment.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"pc_facility\",\n     *                      description=\"The facility id of the appointment.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"pc_billing_location\",\n     *                      description=\"The billinag location id of the appointment.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  @OA\\Property(\n     *                      property=\"pc_aid\",\n     *                      description=\"The provider id for the appointment.\",\n     *                      type=\"string\"\n     *                  ),\n     *                  required={\"pc_catid\", \"pc_title\", \"pc_duration\", \"pc_hometext\", \"pc_apptstatus\", \"pc_eventDate\", \"pc_startTime\", \"pc_facility\", \"pc_billing_location\"},\n     *                  example={\n     *                      \"pc_catid\": \"5\",\n     *                      \"pc_title\": \"Office Visit\",\n     *                      \"pc_duration\": \"900\",\n     *                      \"pc_hometext\": \"Test\",\n     *                      \"pc_apptstatus\": \"-\",\n     *                      \"pc_eventDate\": \"2018-10-19\",\n     *                      \"pc_startTime\": \"09:00\",\n     *                      \"pc_facility\": \"9\",\n     *                      \"pc_billing_location\": \"10\",\n     *                      \"pc_aid\": \"1\"\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/patient/:pid/appointment\" => function ($pid) {\n        RestConfig::authorization_check(\"patients\", \"appt\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new AppointmentRestController())->post($pid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/appointment\",\n     *      description=\"Retrieves all appointments\",\n     *      tags={\"standard\"},\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/appointment\" => function () {\n        RestConfig::authorization_check(\"patients\", \"appt\");\n        $return = (new AppointmentRestController())->getAll();\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/appointment/{eid}\",\n     *      description=\"Retrieves an appointment\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"eid\",\n     *          in=\"path\",\n     *          description=\"The eid for the appointment.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/appointment/:eid\" => function ($eid) {\n        RestConfig::authorization_check(\"patients\", \"appt\");\n        $return = (new AppointmentRestController())->getOne($eid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Delete(\n     *      path=\"/api/patient/{pid}/appointment/{eid}\",\n     *      description=\"Delete a appointment\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"eid\",\n     *          in=\"path\",\n     *          description=\"The eid for the appointment.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"DELETE /api/patient/:pid/appointment/:eid\" => function ($pid, $eid) {\n        RestConfig::authorization_check(\"patients\", \"appt\");\n        $return = (new AppointmentRestController())->delete($eid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{pid}/appointment/{eid}\",\n     *      description=\"Retrieves a appointment for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"eid\",\n     *          in=\"path\",\n     *          description=\"The eid for the appointment.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:pid/appointment/:eid\" => function ($pid, $eid) {\n        RestConfig::authorization_check(\"patients\", \"appt\");\n        $return = (new AppointmentRestController())->getOne($eid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/list/{list_name}\",\n     *      description=\"Retrieves a list\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"list_name\",\n     *          in=\"path\",\n     *          description=\"The list_id of the list.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/list/:list_name\" => function ($list_name) {\n        RestConfig::authorization_check(\"lists\", \"default\");\n        $return = (new ListRestController())->getOptions($list_name);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/user\",\n     *      description=\"Retrieves a list of users\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"id\",\n     *          in=\"query\",\n     *          description=\"The id for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"title\",\n     *          in=\"query\",\n     *          description=\"The title for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"fname\",\n     *          in=\"query\",\n     *          description=\"The first name for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"lname\",\n     *          in=\"query\",\n     *          description=\"The last name for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"mname\",\n     *          in=\"query\",\n     *          description=\"The middle name for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"federaltaxid\",\n     *          in=\"query\",\n     *          description=\"The federal tax id for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"federaldrugid\",\n     *          in=\"query\",\n     *          description=\"The federal drug id for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"upin\",\n     *          in=\"query\",\n     *          description=\"The upin for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"facility_id\",\n     *          in=\"query\",\n     *          description=\"The facility id for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"facility\",\n     *          in=\"query\",\n     *          description=\"The facility for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"npi\",\n     *          in=\"query\",\n     *          description=\"The npi for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"email\",\n     *          in=\"query\",\n     *          description=\"The email for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"specialty\",\n     *          in=\"query\",\n     *          description=\"The specialty for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"billname\",\n     *          in=\"query\",\n     *          description=\"The billname for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"url\",\n     *          in=\"query\",\n     *          description=\"The url for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"assistant\",\n     *          in=\"query\",\n     *          description=\"The assistant for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"organization\",\n     *          in=\"query\",\n     *          description=\"The organization for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"valedictory\",\n     *          in=\"query\",\n     *          description=\"The valedictory for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"street\",\n     *          in=\"query\",\n     *          description=\"The street for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"streetb\",\n     *          in=\"query\",\n     *          description=\"The street (line 2) for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"city\",\n     *          in=\"query\",\n     *          description=\"The city for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"state\",\n     *          in=\"query\",\n     *          description=\"The state for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"zip\",\n     *          in=\"query\",\n     *          description=\"The zip for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"phone\",\n     *          in=\"query\",\n     *          description=\"The phone for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"fax\",\n     *          in=\"query\",\n     *          description=\"The fax for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"phonew1\",\n     *          in=\"query\",\n     *          description=\"The phonew1 for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *         name=\"phonecell\",\n     *          in=\"query\",\n     *          description=\"The phonecell for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"notes\",\n     *          in=\"query\",\n     *          description=\"The notes for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"state_license_number2\",\n     *          in=\"query\",\n     *          description=\"The state license number for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"username\",\n     *          in=\"query\",\n     *          description=\"The username for the user.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/user\" => function () {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $return = (new UserRestController())->getAll($_GET);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/user/{uuid}\",\n     *      description=\"Retrieves a single user by their uuid\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the user.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/user/:uuid\" => function ($uuid) {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $return = (new UserRestController())->getOne($uuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/version\",\n     *      description=\"Retrieves the OpenEMR version information\",\n     *      tags={\"standard\"},\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/version\" => function () {\n        $return = (new VersionRestController())->getOne();\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/product\",\n     *      description=\"Retrieves the OpenEMR product registration information\",\n     *      tags={\"standard\"},\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/product\" => function () {\n        $return = (new ProductRegistrationRestController())->getOne();\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/insurance_company\",\n     *      description=\"Retrieves all insurance companies\",\n     *      tags={\"standard\"},\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     * )\n     */\n    \"GET /api/insurance_company\" => function () {\n        $return = (new InsuranceCompanyRestController())->getAll();\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/insurance_company/{iid}\",\n     *      description=\"Retrieves insurance company\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"iid\",\n     *          in=\"path\",\n     *          description=\"The id of the insurance company.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/insurance_company/:iid\" => function ($iid) {\n        $return = (new InsuranceCompanyRestController())->getOne($iid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/insurance_type\",\n     *      description=\"Retrieves all insurance types\",\n     *      tags={\"standard\"},\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/insurance_type\" => function () {\n        $return = (new InsuranceCompanyRestController())->getInsuranceTypes();\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     * Schema for the insurance_company request\n     *\n     *  @OA\\Schema(\n     *      schema=\"api_insurance_company_request\",\n     *      @OA\\Property(\n     *          property=\"name\",\n     *          description=\"The name of insurance company.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"attn\",\n     *          description=\"The attn of insurance company.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"cms_id\",\n     *          description=\"The cms id of insurance company.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"ins_type_code\",\n     *          description=\"The insurance type code of insurance company. The insurance type code can be found by inspecting the route at (/api/insurance_type).\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"x12_receiver_id\",\n     *          description=\"The x12 receiver id of insurance company.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"x12_default_partner_id\",\n     *          description=\"The x12 default partner id of insurance company.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"alt_cms_id\",\n     *          description=\"The alternate cms id of insurance company.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"line1\",\n     *          description=\"The line1 address of insurance company.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"line2\",\n     *          description=\"The line2 address of insurance company.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"city\",\n     *          description=\"The city of insurance company.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"state\",\n     *          description=\"The state of insurance company.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"zip\",\n     *          description=\"The zip of insurance company.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"country\",\n     *          description=\"The country of insurance company.\",\n     *          type=\"string\"\n     *      ),\n     *      required={\"name\"},\n     *      example={\n     *          \"name\": \"Cool Insurance Company\",\n     *          \"attn\": null,\n     *          \"cms_id\": null,\n     *          \"ins_type_code\": \"2\",\n     *          \"x12_receiver_id\": null,\n     *          \"x12_default_partner_id\": null,\n     *          \"alt_cms_id\": \"\",\n     *          \"line1\": \"123 Cool Lane\",\n     *          \"line2\": \"Suite 123\",\n     *          \"city\": \"Cooltown\",\n     *          \"state\": \"CA\",\n     *          \"zip\": \"12245\",\n     *          \"country\": \"USA\"\n     *      }\n     *  )\n     */\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/insurance_company\",\n     *      description=\"Submits a new insurance company\",\n     *      tags={\"standard\"},\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_insurance_company_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/insurance_company\" => function () {\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new InsuranceCompanyRestController())->post($data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Put(\n     *      path=\"/api/insurance_company/{iid}\",\n     *      description=\"Edit a insurance company\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"iid\",\n     *          in=\"path\",\n     *          description=\"The id for the insurance company.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_insurance_company_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /api/insurance_company/:iid\" => function ($iid) {\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new InsuranceCompanyRestController())->put($iid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/patient/{pid}/document\",\n     *      description=\"Submits a new patient document\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"path\",\n     *          in=\"query\",\n     *          description=\"The category of the document.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"multipart/form-data\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"document\",\n     *                      description=\"document\",\n     *                      type=\"string\",\n     *                      format=\"binary\"\n     *                  ),\n     *              ),\n     *          ),\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/patient/:pid/document\" => function ($pid) {\n        $return = (new DocumentRestController())->postWithPath($pid, $_GET['path'], $_FILES['document']);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{pid}/document\",\n     *      description=\"Retrieves all file information of documents from a category for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"path\",\n     *          in=\"query\",\n     *          description=\"The category of the documents.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:pid/document\" => function ($pid) {\n        $return = (new DocumentRestController())->getAllAtPath($pid, $_GET['path']);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{pid}/document/{did}\",\n     *      description=\"Retrieves a document for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"did\",\n     *          in=\"path\",\n     *          description=\"The id for the patient document.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:pid/document/:did\" => function ($pid, $did) {\n        $return = (new DocumentRestController())->downloadFile($pid, $did);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{puuid}/employer\",\n     *      description=\"Retrieves all the employer data for a patient. Returns an array of the employer data for the patient.\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:puuid/employer\" => function ($puuid, HttpRestRequest $request) {\n        $searchParams = $request->getQueryParams();\n        $searchParams['puuid'] = $puuid;\n        if ($request->isPatientRequest()) {\n            $searchParams['puuid'] = $request->getPatientUUIDString();\n        }\n        $return = (new EmployerRestController())->getAll($searchParams);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{puuid}/insurance\",\n     *      description=\"Retrieves all insurances for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:puuid/insurance\" => function ($puuid, HttpRestRequest $request) {\n        $searchParams = $request->getQueryParams();\n        $searchParams['puuid'] = $puuid;\n        if ($request->isPatientRequest()) {\n            $searchParams['puuid'] = $request->getPatientUUIDString();\n        }\n        $return = (new InsuranceRestController())->getAll($searchParams);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{puuid}/insurance/$swap-insurance\",\n     *      description=\"Updates the insurance for the passed in uuid to be a policy of type `type` and updates (if one exists) the current or most recent insurance for the passed in `type` for a patient to be the `type` of the insurance for the given `uuid`. Validations on the swap operation are performed to make sure the effective `date` of the src and target policies being swapped can be received in each given policy `type` as a policy `type` and `date` must together be unique per patient.\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"type\",\n     *          in=\"query\",\n     *          description=\"The type or category of OpenEMR insurance policy, 'primary', 'secondary', or 'tertiary'.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"query\",\n     *          description=\"The insurance uuid that will be swapped into the list of insurances for the type query parameter\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    'GET /api/patient/:puuid/insurance/$swap-insurance' => function ($puuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            $puuid = $request->getPatientUUIDString();\n        }\n        $type = $request->getQueryParam('type');\n        $insuranceUuid = $request->getQueryParam('uuid');\n\n        $return = (new InsuranceRestController())->operationSwapInsurance($puuid, $type, $insuranceUuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{puuid}/insurance/{uuid}\",\n     *      description=\"Retrieves all insurances for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/patient/:puuid/insurance/:uuid\" => function ($puuid, $uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            $puuid = $request->getPatientUUIDString();\n        }\n        $return = (new InsuranceRestController())->getOne($uuid, $puuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     * Schema for the insurance request.  Note the following additional validation checks on the request.\n     * If the subscriber_relationship value is of type 'self' then the subscriber_fname and subscriber_lname fields\n     * must match the patient's first and last name or a patient's previous first and last name.\n     *\n     * If the subscriber_relationship value is of type 'self' then the subscriber_ss field must match the patient's\n     * social security number.\n     *\n     * If the subscriber_relationship value is not of type 'self' then the subscriber_ss field MUST not be the current patient's social security number.\n     *\n     * If the system's global configuration permits only a single insurance type option then any insurance rquest where the type is NOT 'primary' will fail.\n     *\n     * An insurance is considered the current policy for the policy type if the policy date_end field is null.  Only one of these records per policy type can exist for a patient.\n     *  @OA\\Schema(\n     *      schema=\"api_insurance_request\",\n     *      @OA\\Property(\n     *          property=\"provider\",\n     *          description=\"The insurance company id.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"plan_name\",\n     *          description=\"The plan name of insurance. (2-255 characters)\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"policy_number\",\n     *          description=\"The policy number of insurance. (2-255 characters)\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"group_number\",\n     *          description=\"The group number of insurance.(2-255 characters)\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_lname\",\n     *          description=\"The subscriber last name of insurance.(2-255 characters).\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_mname\",\n     *          description=\"The subscriber middle name of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_fname\",\n     *          description=\"The subscriber first name of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_relationship\",\n     *          description=\"The subscriber relationship of insurance. `subscriber_relationship` can be found by querying `resource=/api/list/subscriber_relationship`\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_ss\",\n     *          description=\"The subscriber ss number of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_DOB\",\n     *          description=\"The subscriber DOB of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_street\",\n     *          description=\"The subscriber street address of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_postal_code\",\n     *          description=\"The subscriber postal code of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_city\",\n     *          description=\"The subscriber city of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_state\",\n     *          description=\"The subscriber state of insurance. `state` can be found by querying `resource=/api/list/state`\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_country\",\n     *          description=\"The subscriber country of insurance. `country` can be found by querying `resource=/api/list/country`\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_phone\",\n     *          description=\"The subscriber phone of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_employer\",\n     *          description=\"The subscriber employer of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_employer_street\",\n     *          description=\"The subscriber employer street of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_employer_postal_code\",\n     *          description=\"The subscriber employer postal code of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_employer_state\",\n     *          description=\"The subscriber employer state of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_employer_country\",\n     *          description=\"The subscriber employer country of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_employer_city\",\n     *          description=\"The subscriber employer city of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"copay\",\n     *          description=\"The copay of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"date\",\n     *          description=\"The effective date of insurance in YYYY-MM-DD format.  This value cannot be after the date_end property and cannot be the same date as any other insurance policy for the same insurance type ('primary, 'secondary', etc).\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"date_end\",\n     *          description=\"The effective end date of insurance in YYYY-MM-DD format.  This value cannot be before the date property. If it is null then this policy is the current policy for this policy type for the patient.  There can only be one current policy per type and the request will fail if there is already a current policy for this type.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"subscriber_sex\",\n     *          description=\"The subscriber sex of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"accept_assignment\",\n     *          description=\"The accept_assignment of insurance.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"policy_type\",\n     *          description=\"The 837p list of policy types for an insurance.  See src/Billing/InsurancePolicyType.php for the list of valid values.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"type\",\n     *          description=\"The type or category of OpenEMR insurance policy, 'primary', 'secondary', or 'tertiary'. If this field is missing it will default to 'primary'.\",\n     *          type=\"string\"\n     *      ),\n     *      required={\"provider\", \"policy_number\", \"subscriber_fname\", \"subscriber_lname\", \"subscriber_relationship\", \"subscriber_ss\", \"subscriber_DOB\", \"subscriber_street\", \"subscriber_postal_code\", \"subscriber_city\", \"subscriber_state\", \"subscriber_sex\", \"accept_assignment\"},\n     *      example={\n     *          \"provider\": \"33\",\n     *          \"plan_name\": \"Some Plan\",\n     *          \"policy_number\": \"12345\",\n     *          \"group_number\": \"252412\",\n     *          \"subscriber_lname\": \"Tester\",\n     *          \"subscriber_mname\": \"Xi\",\n     *          \"subscriber_fname\": \"Foo\",\n     *          \"subscriber_relationship\": \"other\",\n     *          \"subscriber_ss\": \"234231234\",\n     *          \"subscriber_DOB\": \"2018-10-03\",\n     *          \"subscriber_street\": \"183 Cool St\",\n     *          \"subscriber_postal_code\": \"23418\",\n     *          \"subscriber_city\": \"Cooltown\",\n     *          \"subscriber_state\": \"AZ\",\n     *          \"subscriber_country\": \"USA\",\n     *          \"subscriber_phone\": \"234-598-2123\",\n     *          \"subscriber_employer\": \"Some Employer\",\n     *          \"subscriber_employer_street\": \"123 Heather Lane\",\n     *          \"subscriber_employer_postal_code\": \"23415\",\n     *          \"subscriber_employer_state\": \"AZ\",\n     *          \"subscriber_employer_country\": \"USA\",\n     *          \"subscriber_employer_city\": \"Cooltown\",\n     *          \"copay\": \"35\",\n     *          \"date\": \"2018-10-15\",\n     *          \"subscriber_sex\": \"Female\",\n     *          \"accept_assignment\": \"TRUE\",\n     *          \"policy_type\": \"a\",\n     *          \"type\": \"primary\"\n     *      }\n     *  )\n     */\n\n    /**\n     *  @OA\\Put(\n     *      path=\"/api/patient/{puuid}/insurance/{insuranceUuid}\",\n     *      description=\"Edit a specific patient insurance policy. Requires the patients/demo/write ACL to call. This method is the preferred method for updating a patient insurance policy. The {insuranceId} can be found by querying /api/patient/{pid}/insurance\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"insuranceUuid\",\n     *          in=\"path\",\n     *          description=\"The insurance policy uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_insurance_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /api/patient/:puuid/insurance/:insuranceUuid\" => function ($puuid, $insuranceUuid, HttpRestRequest $request) {\n        RestConfig::authorization_check(\"patients\", \"demo\", '', 'write');\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new InsuranceRestController())->put($puuid, $insuranceUuid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/patient/{puuid}/insurance\",\n     *      description=\"Submits a new patient insurance.\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"puuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_insurance_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/patient/:puuid/insurance\" => function ($puuid) {\n        RestConfig::authorization_check(\"patients\", \"demo\", '', ['write','addonly']);\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new InsuranceRestController())->post($puuid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n    /**\n     * Schema for the message request\n     *\n     *  @OA\\Schema(\n     *      schema=\"api_message_request\",\n     *      @OA\\Property(\n     *          property=\"body\",\n     *          description=\"The body of message.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"groupname\",\n     *          description=\"The group name (usually is 'Default').\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"from\",\n     *          description=\"The sender of the message.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"to\",\n     *          description=\"The recipient of the message.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"title\",\n     *          description=\"use an option from resource=/api/list/note_type\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"message_status\",\n     *          description=\"use an option from resource=/api/list/message_status\",\n     *          type=\"string\"\n     *      ),\n     *      required={\"body\", \"groupname\", \"from\", \"to\", \"title\", \"message_status\"},\n     *      example={\n     *          \"body\": \"Test 456\",\n     *          \"groupname\": \"Default\",\n     *          \"from\": \"Matthew\",\n     *          \"to\": \"admin\",\n     *          \"title\": \"Other\",\n     *          \"message_status\": \"New\"\n     *      }\n     *  )\n     */\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/patient/{pid}/message\",\n     *      description=\"Submits a pnote message\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_message_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/patient/:pid/message\" => function ($pid) {\n        RestConfig::authorization_check(\"patients\", \"notes\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new MessageRestController())->post($pid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/patient/{pid}/transaction\",\n     *      description=\"Get Transactions for a patient\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n\n    \"GET /api/patient/:pid/transaction\" => function ($pid) {\n        RestConfig::authorization_check(\"patients\", \"trans\");\n        $cont = new TransactionRestController();\n        $return = (new TransactionRestController())->GetPatientTransactions($pid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     * Schema for the transaction request\n     *\n     *  @OA\\Schema(\n     *      schema=\"api_transaction_request\",\n     *      @OA\\Property(\n     *          property=\"message\",\n     *          description=\"The message of the transaction.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"type\",\n     *          description=\"The type of transaction. Use an option from resource=/api/transaction_type\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"groupname\",\n     *          description=\"The group name (usually is 'Default').\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"referByNpi\",\n     *          description=\"NPI of the person creating the referral.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"referToNpi\",\n     *          description=\"NPI of the person getting the referral.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"referDiagnosis\",\n     *          description=\"The referral diagnosis.\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"riskLevel\",\n     *          description=\"The risk level. (Low, Medium, High)\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"includeVitals\",\n     *          description=\"Are vitals included (0,1)\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"referralDate\",\n     *          description=\"The date of the referral\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"authorization\",\n     *          description=\"The authorization for the referral\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"visits\",\n     *          description=\"The number of vists for the referral\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"validFrom\",\n     *          description=\"The date the referral is valid from\",\n     *          type=\"string\"\n     *      ),\n     *      @OA\\Property(\n     *          property=\"validThrough\",\n     *          description=\"The date the referral is valid through\",\n     *          type=\"string\"\n     *      ),\n     *      required={\"message\", \"groupname\", \"title\"},\n     *      example={\n     *          \"message\": \"Message\",\n     *          \"type\": \"LBTref\",\n     *          \"groupname\": \"Default\",\n     *          \"referByNpi\":\"9999999999\",\n     *          \"referToNpi\":\"9999999999\",\n     *          \"referDiagnosis\":\"Diag 1\",\n     *          \"riskLevel\":\"Low\",\n     *          \"includeVitals\":\"1\",\n     *          \"referralDate\":\"2022-01-01\",\n     *          \"authorization\":\"Auth_123\",\n     *          \"visits\": \"1\",\n     *          \"validFrom\": \"2022-01-02\",\n     *          \"validThrough\": \"2022-01-03\",\n     *          \"body\": \"Reason 1\"\n     *      }\n     *  )\n     */\n    /**\n     *  @OA\\Post(\n     *      path=\"/api/patient/{pid}/transaction\",\n     *      description=\"Submits a transaction\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The pid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_transaction_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /api/patient/:pid/transaction\" => function ($pid) {\n        RestConfig::authorization_check(\"patients\", \"trans\");\n         $data = (array) (json_decode(file_get_contents(\"php://input\")));\n         $return = (new TransactionRestController())->CreateTransaction($pid, $data);\n         RestConfig::apiLog($return, $data);\n         return $return;\n    },\n\n    /**\n     *  @OA\\PUT(\n     *      path=\"/api/transaction/{tid}\",\n     *      description=\"Updates a transaction\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"tid\",\n     *          in=\"path\",\n     *          description=\"The id for the transaction.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_transaction_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /api/transaction/:tid\" => function ($tid) {\n        RestConfig::authorization_check(\"patients\", \"trans\");\n         $data = (array) (json_decode(file_get_contents(\"php://input\")));\n         $return = (new TransactionRestController())->UpdateTransaction($tid, $data);\n         RestConfig::apiLog($return, $data);\n         return $return;\n    },\n\n    /**\n     *  @OA\\Put(\n     *      path=\"/api/patient/{pid}/message/{mid}\",\n     *      description=\"Edit a pnote message\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"mid\",\n     *          in=\"path\",\n     *          description=\"The id for the pnote message.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(ref=\"#/components/schemas/api_message_request\")\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /api/patient/:pid/message/:mid\" => function ($pid, $mid) {\n        RestConfig::authorization_check(\"patients\", \"notes\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\")));\n        $return = (new MessageRestController())->put($pid, $mid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Delete(\n     *      path=\"/api/patient/{pid}/message/{mid}\",\n     *      description=\"Delete a pnote message\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"pid\",\n     *          in=\"path\",\n     *          description=\"The id for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"mid\",\n     *          in=\"path\",\n     *          description=\"The id for the pnote message.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"DELETE /api/patient/:pid/message/:mid\" => function ($pid, $mid) {\n        RestConfig::authorization_check(\"patients\", \"notes\");\n        $return = (new MessageRestController())->delete($pid, $mid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/immunization\",\n     *      description=\"Retrieves a list of immunizations\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"patient_id\",\n     *          in=\"query\",\n     *          description=\"The pid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"id\",\n     *          in=\"query\",\n     *          description=\"The id for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"query\",\n     *          description=\"The uuid for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"administered_date\",\n     *          in=\"query\",\n     *          description=\"The administered date for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"immunization_id\",\n     *          in=\"query\",\n     *          description=\"The immunization list_id for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"cvx_code\",\n     *          in=\"query\",\n     *          description=\"The cvx code for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"manufacturer\",\n     *          in=\"query\",\n     *          description=\"The manufacturer for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"lot_number\",\n     *          in=\"query\",\n     *          description=\"The lot number for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"administered_by_id\",\n     *          in=\"query\",\n     *          description=\"The administered by id for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"administered_by\",\n     *          in=\"query\",\n     *          description=\"The administered by for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"education_date\",\n     *          in=\"query\",\n     *          description=\"The education date for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"vis_date\",\n     *          in=\"query\",\n     *          description=\"The vis date for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"note\",\n     *          in=\"query\",\n     *          description=\"The note for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"create_date\",\n     *          in=\"query\",\n     *          description=\"The create date for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"update_date\",\n     *          in=\"query\",\n     *          description=\"The update date for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"created_by\",\n     *          in=\"query\",\n     *          description=\"The created_by for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"updated_by\",\n     *          in=\"query\",\n     *          description=\"The updated_by for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"amount_administered\",\n     *          in=\"query\",\n     *          description=\"The amount administered for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"amount_administered_unit\",\n     *          in=\"query\",\n     *          description=\"The amount administered unit for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"expiration_date\",\n     *          in=\"query\",\n     *          description=\"The expiration date for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"route\",\n     *          in=\"query\",\n     *          description=\"The route for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"administration_site\",\n     *          in=\"query\",\n     *          description=\"The administration site for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"added_erroneously\",\n     *          in=\"query\",\n     *          description=\"The added_erroneously for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"external_id\",\n     *          in=\"query\",\n     *          description=\"The external_id for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"completion_status\",\n     *          in=\"query\",\n     *          description=\"The completion status for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"information_source\",\n     *          in=\"query\",\n     *          description=\"The information source for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"refusal_reason\",\n     *          in=\"query\",\n     *          description=\"The refusal reason for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"ordering_provider\",\n     *          in=\"query\",\n     *          description=\"The ordering provider for the immunization.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/immunization\" => function () {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new ImmunizationRestController())->getAll($_GET);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/immunization/{uuid}\",\n     *      description=\"Retrieves a immunization\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the immunization.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/immunization/:uuid\" => function ($uuid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new ImmunizationRestController())->getOne($uuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/procedure\",\n     *      description=\"Retrieves a list of all procedures\",\n     *      tags={\"standard\"},\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/procedure\" => function () {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new ProcedureRestController())->getAll();\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/procedure/{uuid}\",\n     *      description=\"Retrieves a procedure\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the procedure.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/procedure/:uuid\" => function ($uuid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new ProcedureRestController())->getOne($uuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/drug\",\n     *      description=\"Retrieves a list of all drugs\",\n     *      tags={\"standard\"},\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/drug\" => function () {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new DrugRestController())->getAll();\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/drug/{uuid}\",\n     *      description=\"Retrieves a drug\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the drug.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/drug/:uuid\" => function ($uuid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new DrugRestController())->getOne($uuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/prescription\",\n     *      description=\"Retrieves a list of all prescriptions\",\n     *      tags={\"standard\"},\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/prescription\" => function () {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new PrescriptionRestController())->getAll();\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/api/prescription/{uuid}\",\n     *      description=\"Retrieves a prescription\",\n     *      tags={\"standard\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the prescription.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          ref=\"#/components/responses/standard\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /api/prescription/:uuid\" => function ($uuid) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new PrescriptionRestController())->getOne($uuid);\n        RestConfig::apiLog($return);\n        return $return;\n    }\n);\n\nuse OpenEMR\\Common\\Http\\StatusCode;\nuse OpenEMR\\Common\\Http\\Psr17Factory;\nuse OpenEMR\\RestControllers\\FHIR\\FhirAllergyIntoleranceRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirAppointmentRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirCarePlanRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirCareTeamRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirConditionRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirCoverageRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirDeviceRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirDiagnosticReportRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirDocumentReferenceRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirEncounterRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirObservationRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirImmunizationRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirGoalRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirGroupRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirLocationRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirMedicationRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirMedicationRequestRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirOrganizationRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirPatientRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirPersonRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirPractitionerRoleRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirPractitionerRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirProcedureRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirProvenanceRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirValueSetRestController;\nuse OpenEMR\\RestControllers\\FHIR\\FhirMetaDataRestController;\nuse OpenEMR\\RestControllers\\FHIR\\Operations\\FhirOperationExportRestController;\nuse OpenEMR\\RestControllers\\FHIR\\Operations\\FhirOperationDocRefRestController;\nuse OpenEMR\\RestControllers\\FHIR\\Operations\\FhirOperationDefinitionRestController;\n\n// Note that the fhir route includes both user role and patient role\n//  (there is a mechanism in place to ensure patient role is binded\n//   to only see the data of the one patient)\nRestConfig::$FHIR_ROUTE_MAP = array(\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/AllergyIntolerance\",\n     *      description=\"Returns a list of AllergyIntolerance resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the AllergyIntolerance resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/AllergyIntolerance\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/AllergyIntolerance\" => function (HttpRestRequest $request) {\n        $getParams = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirAllergyIntoleranceRestController($request))->getAll($getParams, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirAllergyIntoleranceRestController($request))->getAll($getParams);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/AllergyIntolerance/{uuid}\",\n     *      description=\"Returns a single AllergyIntolerance resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the AllergyIntolerance resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"94682fe5-f383-4885-9505-64b02e34906f\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2021-09-16T00:27:32+00:00\"\n     *                      },\n     *                      \"resourceType\": \"AllergyIntolerance\",\n     *                      \"text\": {\n     *                          \"status\": \"additional\",\n     *                          \"div\": \"<div xmlns='http://www.w3.org/1999/xhtml'>penicillin</div>\"\n     *                      },\n     *                      \"clinicalStatus\": {\n     *                          \"coding\": {\n     *                              {\n     *                                  \"system\": \"http://terminology.hl7.org/CodeSystem/allergyintolerance-clinical\",\n     *                                  \"code\": \"active\",\n     *                                  \"display\": \"Active\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"verificationStatus\": {\n     *                          \"coding\": {\n     *                              {\n     *                                  \"system\": \"http://terminology.hl7.org/CodeSystem/allergyintolerance-verification\",\n     *                                  \"code\": \"confirmed\",\n     *                                  \"display\": \"Confirmed\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"category\": {\n     *                          \"medication\"\n     *                      },\n     *                      \"criticality\": \"low\",\n     *                      \"code\": {\n     *                          \"coding\": {\n     *                              {\n     *                                  \"system\": \"http://terminology.hl7.org/CodeSystem/data-absent-reason\",\n     *                                  \"code\": \"unknown\",\n     *                                  \"display\": \"Unknown\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"patient\": {\n     *                          \"reference\": \"Patient/94682ef5-b0e3-4289-b19a-11b9592e9c92\"\n     *                      },\n     *                      \"reaction\": {\n     *                          {\n     *                              \"manifestation\": {\n     *                                  {\n     *                                      \"coding\": {\n     *                                          {\n     *                                              \"system\": \"http://snomed.info/sct\",\n     *                                              \"code\": \"422587007\",\n     *                                              \"display\": \"Nausea\"\n     *                                          }\n     *                                      },\n     *                                      \"text\": \"Nausea\"\n     *                                  }\n     *                              }\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/AllergyIntolerance/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirAllergyIntoleranceRestController($request))->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirAllergyIntoleranceRestController($request))->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Appointment\",\n     *      description=\"Returns a list of Appointment resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Appointment resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/AllergyIntolerance\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Appointment\" => function (HttpRestRequest $request) {\n        $getParams = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirAppointmentRestController($request))->getAll($getParams, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"appt\");\n            $return = (new FhirAppointmentRestController($request))->getAll($getParams);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Appointment/{uuid}\",\n     *      description=\"Returns a single Appointment resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Appointment resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={}\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Appointment/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirAppointmentRestController($request))->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"appt\");\n            $return = (new FhirAppointmentRestController($request))->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/CarePlan\",\n     *      description=\"Returns a list of CarePlan resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the CarePlan resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"category\",\n     *          in=\"query\",\n     *          description=\"The category of the CarePlan resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/CarePlan\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/CarePlan\" => function (HttpRestRequest $request) {\n        $getParams = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirCarePlanRestController())->getAll($getParams, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirCarePlanRestController())->getAll($getParams);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/CarePlan/{uuid}\",\n     *      description=\"Returns a single CarePlan resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the CarePlan resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"94682f08-8fbc-451e-b1ec-f922d765c38f_1\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2021-09-16T00:54:18+00:00\"\n     *                      },\n     *                      \"resourceType\": \"CarePlan\",\n     *                      \"text\": {\n     *                          \"status\": \"generated\",\n     *                          \"div\": \"<div xmlns=\"\"http://www.w3.org/1999/xhtml\"\"><p>Treat flu.</p></div>\"\n     *                      },\n     *                      \"status\": \"active\",\n     *                      \"intent\": \"plan\",\n     *                      \"category\": {\n     *                          {\n     *                              \"coding\": {\n     *                                  {\n     *                                      \"system\": \"http://hl7.org/fhir/us/core/CodeSystem/careplan-category\",\n     *                                      \"code\": \"assess-plan\"\n     *                                  }\n     *                              }\n     *                          }\n     *                      },\n     *                      \"description\": \"Treat flu.\",\n     *                      \"subject\": {\n     *                          \"reference\": \"Patient/94682ef5-b0e3-4289-b19a-11b9592e9c92\",\n     *                          \"type\": \"Patient\"\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/CarePlan/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirCarePlanRestController())->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirCarePlanRestController())->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/CareTeam\",\n     *      description=\"Returns a list of CareTeam resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the CareTeam resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"status\",\n     *          in=\"query\",\n     *          description=\"The status of the CarePlan resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/CareTeam\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     * )\n     */\n    \"GET /fhir/CareTeam\" => function (HttpRestRequest $request) {\n        $getParams = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirCareTeamRestController())->getAll($getParams, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirCareTeamRestController())->getAll($getParams);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/CareTeam/{uuid}\",\n     *      description=\"Returns a single CareTeam resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the CareTeam resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"94682f09-69fe-4ada-8ea6-753a52bd1516\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2021-09-16T01:07:22+00:00\"\n     *                      },\n     *                      \"resourceType\": \"CareTeam\",\n     *                      \"status\": \"active\",\n     *                      \"subject\": {\n     *                          \"reference\": \"Patient/94682ef5-b0e3-4289-b19a-11b9592e9c92\",\n     *                          \"type\": \"Patient\"\n     *                      },\n     *                      \"participant\": {\n     *                          {\n     *                              \"role\": {\n     *                                  {\n     *                                      \"coding\": {\n     *                                          {\n     *                                              \"system\": \"http://nucc.org/provider-taxonomy\",\n     *                                              \"code\": \"102L00000X\",\n     *                                              \"display\": \"Psychoanalyst\"\n     *                                          }\n     *                                      }\n     *                                  }\n     *                              },\n     *                              \"member\": {\n     *                                  \"reference\": \"Practitioner/94682c68-f712-4c39-9158-ff132a08f26b\",\n     *                                  \"type\": \"Practitioner\"\n     *                              },\n     *                              \"onBehalfOf\": {\n     *                                  \"reference\": \"Organization/94682c62-b801-4498-84a1-13f158bb2a18\",\n     *                                  \"type\": \"Organization\"\n     *                              }\n     *                          },\n     *                          {\n     *                              \"role\": {\n     *                                  {\n     *                                      \"coding\": {\n     *                                          {\n     *                                              \"system\": \"http://terminology.hl7.org/CodeSystem/data-absent-reason\",\n     *                                              \"code\": \"unknown\",\n     *                                              \"display\": \"Unknown\"\n     *                                          }\n     *                                      }\n     *                                  }\n     *                              },\n     *                              \"member\": {\n     *                                  \"reference\": \"Organization/94682c62-b801-4498-84a1-13f158bb2a18\",\n     *                                  \"type\": \"Organization\"\n     *                              }\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/CareTeam/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirCareTeamRestController())->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirCareTeamRestController())->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Condition\",\n     *      description=\"Returns a list of Condition resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Condition resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Condition\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Condition\" => function (HttpRestRequest $request) {\n        $getParams = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirConditionRestController())->getAll($getParams, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirConditionRestController())->getAll($getParams);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Condition/{uuid}\",\n     *      description=\"Returns a single Condition resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Condition resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"94682c68-e5bb-4c5c-859a-cebaa5a1e582\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2021-09-16T02:41:53+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Condition\",\n     *                      \"clinicalStatus\": {\n     *                          \"coding\": {\n     *                              {\n     *                                  \"system\": \"http://terminology.hl7.org/CodeSystem/condition-clinical\",\n     *                                  \"code\": \"inactive\",\n     *                                  \"display\": \"Inactive\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"verificationStatus\": {\n     *                          \"coding\": {\n     *                              {\n     *                                  \"system\": \"http://terminology.hl7.org/CodeSystem/condition-ver-status\",\n     *                                  \"code\": \"unconfirmed\",\n     *                                  \"display\": \"Unconfirmed\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"category\": {\n     *                          {\n     *                              \"coding\": {\n     *                                  {\n     *                                      \"system\": \"http://terminology.hl7.org/CodeSystem/condition-category\",\n     *                                      \"code\": \"problem-list-item\",\n     *                                      \"display\": \"Problem List Item\"\n     *                                  }\n     *                              }\n     *                          }\n     *                      },\n     *                      \"code\": {\n     *                          \"coding\": {\n     *                              {\n     *                                  \"system\": \"http://snomed.info/sct\",\n     *                                  \"code\": \"444814009\",\n     *                                  \"display\": \"\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"subject\": {\n     *                          \"reference\": \"Patient/94682c62-d37e-48b5-8018-c5f6f3566609\"\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Condition/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirConditionRestController())->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirConditionRestController())->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Coverage\",\n     *      description=\"Returns a list of Coverage resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Coverage resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"payor\",\n     *          in=\"query\",\n     *          description=\"The payor of the Coverage resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Coverage\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Coverage\" => function (HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirCoverageRestController())->getAll($request->getQueryParams(), $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"admin\", \"super\");\n            $return = (new FhirCoverageRestController())->getAll($request->getQueryParams());\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Coverage/{uuid}\",\n     *      description=\"Returns a single Coverage resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Coverage resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"960d5f10-edc6-4c65-a6d4-39a1e1da87a8\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2022-04-14T07:58:45+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Coverage\",\n     *                      \"status\": \"active\",\n     *                      \"beneficiary\": {\n     *                          \"reference\": \"Patient/960d5f08-9fdf-4bdc-9108-84a149e28bac\"\n     *                      },\n     *                      \"relationship\": {\n     *                          \"coding\": {\n     *                              {\n     *                                  \"system\": \"http://terminology.hl7.org/CodeSystem/subscriber-relationship\",\n     *                                  \"code\": \"\"\n     *                              }\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Coverage/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirCoverageRestController())->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"admin\", \"super\");\n            $return = (new FhirCoverageRestController())->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Device\",\n     *      description=\"Returns a list of Device resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Device resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Device\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Device\" => function (HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirDeviceRestController())->getAll($request->getQueryParams(), $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"admin\", \"super\");\n            $return = (new FhirDeviceRestController())->getAll($request->getQueryParams());\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Device/{uuid}\",\n     *      description=\"Returns a single Device resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Device resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"946dce19-c80a-402c-862a-eadf3f2377f0\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2021-09-18T19:28:59+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Device\",\n     *                      \"udiCarrier\": {\n     *                          {\n     *                              \"deviceIdentifier\": \"08717648200274\",\n     *                              \"carrierHRF\": \"=/08717648200274=,000025=A99971312345600=>014032=}013032&,1000000000000XYZ123\"\n     *                          }\n     *                      },\n     *                      \"distinctIdentifier\": \"A99971312345600\",\n     *                      \"manufactureDate\": \"2013-02-01\",\n     *                      \"expirationDate\": \"2014-02-01\",\n     *                      \"lotNumber\": \"000000000000XYZ123\",\n     *                      \"serialNumber\": \"000025\",\n     *                      \"type\": {\n     *                          \"extension\": {\n     *                              {\n     *                                  \"valueCode\": \"unknown\",\n     *                                  \"url\": \"http://hl7.org/fhir/StructureDefinition/data-absent-reason\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"patient\": {\n     *                          \"reference\": \"Patient/946da619-c631-431a-a282-487cd6fb7802\",\n     *                          \"type\": \"Patient\"\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Device/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirDeviceRestController())->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"admin\", \"super\");\n            $return = (new FhirDeviceRestController())->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/DiagnosticReport\",\n     *      description=\"Returns a list of DiagnosticReport resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the DiagnosticReport resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"code\",\n     *          in=\"query\",\n     *          description=\"The code of the DiagnosticReport resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"category\",\n     *          in=\"query\",\n     *          description=\"The category of the DiagnosticReport resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"date\",\n     *          in=\"query\",\n     *          description=\"The datetime of the DiagnosticReport resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/DiagnosticReport\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/DiagnosticReport\" => function (HttpRestRequest $request) {\n        $getParams = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirDiagnosticReportRestController())->getAll($getParams, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"admin\", \"super\");\n            $return = (new FhirDiagnosticReportRestController())->getAll($getParams);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/DiagnosticReport/{uuid}\",\n     *      description=\"Returns a single DiagnosticReport resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the DiagnosticReport resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"93fb2d6a-77ac-48ca-a12d-1a17e40007e3\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2021-09-18T20:52:34+00:00\"\n     *                      },\n     *                      \"resourceType\": \"DiagnosticReport\",\n     *                      \"status\": \"final\",\n     *                      \"category\": {\n     *                          {\n     *                              \"coding\": {\n     *                                  {\n     *                                      \"system\": \"http://loinc.org\",\n     *                                      \"code\": \"LP7839-6\",\n     *                                      \"display\": \"Pathology\"\n     *                                  }\n     *                              }\n     *                          }\n     *                      },\n     *                      \"code\": {\n     *                          \"coding\": {\n     *                              {\n     *                                  \"system\": \"http://loinc.org\",\n     *                                  \"code\": \"11502-2\",\n     *                                  \"display\": \"Laboratory report\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"subject\": {\n     *                          \"reference\": \"Patient/9353b8f5-0a87-4e2a-afd4-25341fdb0fbc\",\n     *                          \"type\": \"Patient\"\n     *                      },\n     *                      \"encounter\": {\n     *                          \"reference\": \"Encounter/93540818-cb5f-49df-b73b-83901bb793b6\",\n     *                          \"type\": \"Encounter\"\n     *                      },\n     *                      \"effectiveDateTime\": \"2015-06-22T00:00:00+00:00\",\n     *                      \"issued\": \"2015-06-22T00:00:00+00:00\",\n     *                      \"performer\": {\n     *                          {\n     *                              \"reference\": \"Organization/935249b5-0ba6-4b5b-8863-a7a27d4c6350\",\n     *                              \"type\": \"Organization\"\n     *                          }\n     *                      },\n     *                      \"presentedForm\": {\n     *                          {\n     *                              \"contentType\": \"text/plain\",\n     *                              \"data\": \"TXMgQWxpY2UgTmV3bWFuIHdhcyB0ZXN0ZWQgZm9yIHRoZSBVcmluYW5hbHlzaXMgbWFjcm8gcGFuZWwgYW5kIHRoZSByZXN1bHRzIGhhdmUgYmVlbiBmb3VuZCB0byBiZSANCm5vcm1hbC4=\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/DiagnosticReport/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        $getParams = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirDiagnosticReportRestController())->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"admin\", \"super\");\n            $return = (new FhirDiagnosticReportRestController())->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/DocumentReference\",\n     *      description=\"Returns a list of DocumentReference resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the DocumentReference resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"type\",\n     *          in=\"query\",\n     *          description=\"The type of the DocumentReference resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"category\",\n     *          in=\"query\",\n     *          description=\"The category of the DocumentReference resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"date\",\n     *          in=\"query\",\n     *          description=\"The datetime of the DocumentReference resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/DocumentReference\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    'GET /fhir/DocumentReference' => function (HttpRestRequest $request) {\n        $getParams = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirDocumentReferenceRestController($request))->getAll($getParams, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"admin\", \"super\");\n            $return = (new FhirDocumentReferenceRestController($request))->getAll($getParams);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\POST(\n     *      path=\"/fhir/DocumentReference/$docref\",\n     *      description=\"The $docref operation is used to request the server generates a document based on the specified parameters. If no additional parameters are specified then a DocumentReference to the patient's most current Clinical Summary of Care Document (CCD) is returned. The document itself is retrieved using the DocumentReference.content.attachment.url element.  See <a href='http://hl7.org/fhir/us/core/OperationDefinition-docref.html' target='_blank' rel='noopener'>http://hl7.org/fhir/us/core/OperationDefinition-docref.html</a> for more details.\",\n     *      tags={\"fhir\"},\n     *      @OA\\ExternalDocumentation(description=\"Detailed documentation on this operation\", url=\"https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API\"),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"start\",\n     *          in=\"query\",\n     *          description=\"The datetime refers to care dates not record currency dates.  All records relating to care provided in a certain date range.  If no start date is provided then all documents prior to the end date are in scope.  If no start and end date are provided, the most recent or current document is in scope.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"end\",\n     *          in=\"query\",\n     *          description=\"The datetime refers to care dates not record currency dates.  All records relating to care provided in a certain date range.  If no end date is provided then all documents subsequent to the start date are in scope.  If no start and end date are provided, the most recent or current document is in scope.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"type\",\n     *          in=\"query\",\n     *          description=\"The type refers to the document type.  This is a LOINC code from the valueset of <a href='http://hl7.org/fhir/R4/valueset-c80-doc-typecodes.html' target='_blank' rel='noopener'>http://hl7.org/fhir/R4/valueset-c80-doc-typecodes.html</a>. The server currently only supports the LOINC code of 34133-9 (Summary of episode node).\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"A search bundle of DocumentReferences is returned\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    'POST /fhir/DocumentReference/$docref' => function (HttpRestRequest $request) {\n\n        // NOTE: The order of this route is IMPORTANT as it needs to come before the DocumentReference single request.\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirOperationDocRefRestController($request))->getAll($request->getQueryParams(), $request->getPatientUUIDString());\n        } else {\n            // TODO: it seems like regular users should be able to grab authorship / provenance information\n            RestConfig::authorization_check(\"patients\", \"demo\");\n            $return = (new FhirOperationDocRefRestController($request))->getAll($request->getQueryParams());\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/DocumentReference/{uuid}\",\n     *      description=\"Returns a single DocumentReference resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the DocumentReference resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"946e7553-1aaa-49f8-8f81-ae15ccaa9165\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2021-09-19T03:17:51+00:00\"\n     *                      },\n     *                      \"resourceType\": \"DocumentReference\",\n     *                      \"identifier\": {\n     *                          {\n     *                              \"value\": \"946e7553-1aaa-49f8-8f81-ae15ccaa9165\"\n     *                          }\n     *                      },\n     *                      \"status\": \"current\",\n     *                      \"type\": {\n     *                          \"coding\": {\n     *                              {\n     *                                  \"system\": \"http://terminology.hl7.org/CodeSystem/v3-NullFlavor\",\n     *                                  \"code\": \"UNK\",\n     *                                  \"display\": \"unknown\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"category\": {\n     *                          {\n     *                              \"coding\": {\n     *                                  {\n     *                                      \"system\": \"https://localhost:9300/apis/default/fhir/ValueSet/openemr-document-types\",\n     *                                      \"code\": \"openemr-document\",\n     *                                      \"display\": \"OpenEMR Document\"\n     *                                  }\n     *                              }\n     *                          }\n     *                      },\n     *                      \"subject\": {\n     *                          \"reference\": \"Patient/946da619-c631-431a-a282-487cd6fb7802\",\n     *                          \"type\": \"Patient\"\n     *                      },\n     *                      \"date\": \"2021-09-19T03:15:56+00:00\",\n     *                      \"author\": {\n     *                          null\n     *                      },\n     *                      \"content\": {\n     *                          {\n     *                              \"attachment\": {\n     *                                  \"contentType\": \"image/gif\",\n     *                                  \"url\": \"https://localhost:9300/apis/default/fhir/Binary/7\"\n     *                              },\n     *                              \"format\": {\n     *                                  \"system\": \"http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem\",\n     *                                  \"code\": \"urn:ihe:iti:xds:2017:mimeTypeSufficient\",\n     *                                  \"display\": \"mimeType Sufficient\"\n     *                              }\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/DocumentReference/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        $getParams = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirDocumentReferenceRestController($request))->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"admin\", \"super\");\n            $return = (new FhirDocumentReferenceRestController($request))->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Binary/{id}\",\n     *      description=\"Used for downloading binary documents generated either with BULK FHIR Export or with the $docref CCD export operation.  Documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"id\",\n     *          in=\"path\",\n     *          description=\"The id for the Document.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"The documentation for working with BULK FHIR or $docref document exports can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    'GET /fhir/Binary/:id' => function ($documentId, HttpRestRequest $request) {\n        $docController = new \\OpenEMR\\RestControllers\\FHIR\\FhirDocumentRestController($request);\n\n        if ($request->isPatientRequest()) {\n            $response = $docController->downloadDocument($documentId, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"admin\", \"users\");\n            $response = $docController->downloadDocument($documentId);\n        }\n\n        return $response;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Encounter\",\n     *      description=\"Returns a list of Encounter resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Encounter resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"date\",\n     *          in=\"query\",\n     *          description=\"The datetime of the Encounter resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Encounter\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Encounter\" => function (HttpRestRequest $request) {\n        $getParams = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirEncounterRestController())->getAll($getParams, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"encounters\", \"auth_a\");\n            $return = (new FhirEncounterRestController())->getAll($getParams);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Encounter/{uuid}\",\n     *      description=\"Returns a single Encounter resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Encounter resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"946da61d-6b95-4f8e-abe5-534a25913b71\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2021-09-19T06:27:41+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Encounter\",\n     *                      \"identifier\": {\n     *                          {\n     *                              \"system\": \"urn:ietf:rfc:3986\",\n     *                              \"value\": \"946da61d-6b95-4f8e-abe5-534a25913b71\"\n     *                          }\n     *                      },\n     *                      \"status\": \"finished\",\n     *                      \"class\": {\n     *                          \"system\": \"http://terminology.hl7.org/CodeSystem/v3-ActCode\",\n     *                          \"code\": \"AMB\",\n     *                          \"display\": \"ambulatory\"\n     *                      },\n     *                      \"type\": {\n     *                          {\n     *                              \"coding\": {\n     *                                  {\n     *                                      \"system\": \"http://snomed.info/sct\",\n     *                                      \"code\": \"185349003\",\n     *                                      \"display\": \"Encounter for check up (procedure)\"\n     *                                  }\n     *                              }\n     *                          }\n     *                      },\n     *                      \"subject\": {\n     *                          \"reference\": \"Patient/946da61b-626b-4f88-81e2-adfb88f4f0fe\",\n     *                          \"type\": \"Patient\"\n     *                      },\n     *                      \"participant\": {\n     *                          {\n     *                              \"type\": {\n     *                                  {\n     *                                      \"coding\": {\n     *                                          {\n     *                                              \"system\": \"http://terminology.hl7.org/CodeSystem/v3-ParticipationType\",\n     *                                              \"code\": \"PPRF\",\n     *                                              \"display\": \"Primary Performer\"\n     *                                          }\n     *                                      }\n     *                                  }\n     *                              },\n     *                              \"period\": {\n     *                                  \"start\": \"2012-08-13T00:00:00+00:00\"\n     *                              },\n     *                              \"individual\": {\n     *                                  \"reference\": \"Practitioner/946da61d-ac5f-4fdc-b3f2-7b58dc49976b\",\n     *                                  \"type\": \"Practitioner\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"period\": {\n     *                          \"start\": \"2012-08-13T00:00:00+00:00\"\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Encounter/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirEncounterRestController())->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"admin\", \"super\");\n            $return = (new FhirEncounterRestController())->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Goal\",\n     *      description=\"Returns a list of Condition resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Goal resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Goal\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Goal\" => function (HttpRestRequest $request) {\n        $getParams = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirGoalRestController())->getAll($getParams, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"admin\", \"super\");\n            $return = (new FhirGoalRestController())->getAll($getParams);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Goal/{uuid}\",\n     *      description=\"Returns a single Goal resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Goal resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"946da61d-6b88-4d54-bdd6-4029e2ad9e3f_1\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2021-09-19T06:45:58+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Goal\",\n     *                      \"lifecycleStatus\": \"active\",\n     *                      \"description\": {\n     *                          \"text\": \"Eating more vegetables.\"\n     *                      },\n     *                      \"subject\": {\n     *                          \"reference\": \"Patient/946da619-c631-431a-a282-487cd6fb7802\",\n     *                          \"type\": \"Patient\"\n     *                      },\n     *                      \"target\": {\n     *                          {\n     *                              \"measure\": {\n     *                                  \"extension\": {\n     *                                      {\n     *                                          \"valueCode\": \"unknown\",\n     *                                          \"url\": \"http://hl7.org/fhir/StructureDefinition/data-absent-reason\"\n     *                                      }\n     *                                  }\n     *                              },\n     *                              \"detailString\": \"Eating more vegetables.\",\n     *                              \"dueDate\": \"2021-09-09\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Goal/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirGoalRestController())->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"admin\", \"super\");\n            $return = (new FhirGoalRestController())->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Group\",\n     *      description=\"The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Group resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Group\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    'GET /fhir/Group' => function (HttpRestRequest $request) {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $getParams = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirGroupRestController())->getAll($getParams, $request->getPatientUUIDString());\n        } else {\n            $return = (new FhirGroupRestController())->getAll($getParams);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Group/{uuid}\",\n     *      description=\"The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Group resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Group/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirGroupRestController())->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            $return = (new FhirGroupRestController())->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Group/{id}/$export\",\n     *      description=\"The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"id\",\n     *          in=\"path\",\n     *          description=\"The id for the Group resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    'GET /fhir/Group/:id/$export' => function ($groupId, HttpRestRequest $request) {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $fhirExportService = new FhirOperationExportRestController($request);\n        $exportParams = $request->getQueryParams();\n        $exportParams['groupId'] = $groupId;\n        $return = $fhirExportService->processExport(\n            $exportParams,\n            'Group',\n            $request->getHeader('Accept')[0] ?? '',\n            $request->getHeader('Prefer')[0] ?? ''\n        );\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Immunization\",\n     *      description=\"Returns a list of Immunization resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Immunization resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Immunization\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Immunization\" => function (HttpRestRequest $request) {\n        $getParams = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirImmunizationRestController())->getAll($getParams, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirImmunizationRestController())->getAll($getParams);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Immunization/{uuid}\",\n     *      description=\"Returns a single Immunization resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Immunization resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"95e8d8b7-e3e2-4e03-8eb1-31e1d9097d8f\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2022-03-26T05:42:59+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Immunization\",\n     *                      \"status\": \"completed\",\n     *                      \"vaccineCode\": {\n     *                          \"coding\": {\n     *                              {\n     *                                  \"system\": \"http://hl7.org/fhir/sid/cvx\",\n     *                                  \"code\": \"207\",\n     *                                  \"display\": \"SARS-COV-2 (COVID-19) vaccine, mRNA, spike protein, LNP, preservative free, 100 mcg/0.5mL dose\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"patient\": {\n     *                          \"reference\": \"Patient/95e8d830-3068-48cf-930a-2fefb18c2bcf\"\n     *                      },\n     *                      \"occurrenceDateTime\": \"2022-03-26T05:35:00+00:00\",\n     *                      \"recorded\": \"2022-03-26T05:42:26+00:00\",\n     *                      \"primarySource\": false\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Immunization/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirImmunizationRestController())->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirImmunizationRestController())->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Location\",\n     *      description=\"Returns a list of Location resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Location resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Location\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Location\" => function (HttpRestRequest $request) {\n        $return = (new FhirLocationRestController())->getAll($request->getQueryParams(), $request->getPatientUUIDString());\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Location/{uuid}\",\n     *      description=\"Returns a single Location resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Location resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"946da61d-c4f2-4f03-a2a7-b571f6a24b65\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2021-09-19T08:14:58+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Location\",\n     *                      \"status\": \"active\",\n     *                      \"name\": \"Your Clinic Name Here\",\n     *                      \"telecom\": {\n     *                          {\n     *                              \"system\": \"phone\",\n     *                              \"value\": \"000-000-0000\"\n     *                          },\n     *                          {\n     *                              \"system\": \"fax\",\n     *                              \"value\": \"000-000-0000\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Location/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        $return = (new FhirLocationRestController())->getOne($uuid, $request->getPatientUUIDString());\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Medication\",\n     *      description=\"Returns a list of Medication resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Medication resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Medication\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Medication\" => function (HttpRestRequest $request) {\n        RestConfig::authorization_check(\"patients\", \"med\");\n        $return = (new FhirMedicationRestController())->getAll($request->getQueryParams());\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Medication/{uuid}\",\n     *      description=\"Returns a single Medication resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Medication resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"961aa334-9348-4145-8252-de665e3c4afa\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2022-04-19T23:42:14+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Medication\",\n     *                      \"code\": {\n     *                          \"coding\": {\n     *                              {\n     *                                  \"system\": \"http://www.nlm.nih.gov/research/umls/rxnorm\",\n     *                                  \"code\": 153165\n     *                              }\n     *                          }\n     *                      },\n     *                      \"status\": \"active\",\n     *                      \"batch\": {\n     *                          \"lotNumber\": \"132\",\n     *                          \"expirationDate\": \"0000-00-00\"\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Medication/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirMedicationRestController())->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirMedicationRestController())->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/MedicationRequest\",\n     *      description=\"Returns a list of MedicationRequest resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the MedicationRequest resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"intent\",\n     *          in=\"query\",\n     *          description=\"The intent of the MedicationRequest resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"status\",\n     *          in=\"query\",\n     *          description=\"The status of the MedicationRequest resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/MedicationRequest\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/MedicationRequest\" => function (HttpRestRequest $request) {\n        $getParams = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirMedicationRequestRestController())->getAll($getParams, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirMedicationRequestRestController())->getAll($getParams);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/MedicationRequest/{uuid}\",\n     *      description=\"Returns a single MedicationRequest resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the MedicationRequest resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"946da61d-9cff-4416-8d27-805f19f9d7d8\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2021-09-20T04:03:14+00:00\"\n     *                      },\n     *                      \"resourceType\": \"MedicationRequest\",\n     *                      \"status\": \"active\",\n     *                      \"intent\": \"order\",\n     *                      \"category\": {\n     *                          {\n     *                              \"coding\": {\n     *                                  {\n     *                                      \"system\": \"http://terminology.hl7.org/CodeSystem/medicationrequest-category\",\n     *                                      \"code\": \"community\",\n     *                                      \"display\": \"Home/Community\"\n     *                                  }\n     *                              }\n     *                          }\n     *                      },\n     *                      \"reportedBoolean\": false,\n     *                      \"medicationCodeableConcept\": {\n     *                          \"coding\": {\n     *                              {\n     *                                  \"system\": \"http://www.nlm.nih.gov/research/umls/rxnorm\",\n     *                                  \"code\": \"1738139\",\n     *                                  \"display\": \"Acetaminophen 325 MG Oral Tablet\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"subject\": {\n     *                          \"reference\": \"Patient/946da617-1a4a-4b2c-ae66-93b84377cb1e\",\n     *                          \"type\": \"Patient\"\n     *                      },\n     *                      \"authoredOn\": \"2021-09-18T00:00:00+00:00\",\n     *                      \"requester\": {\n     *                          \"reference\": \"Practitioner/946da61d-ac5f-4fdc-b3f2-7b58dc49976b\",\n     *                          \"type\": \"Practitioner\"\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/MedicationRequest/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirMedicationRequestRestController())->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirMedicationRequestRestController())->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Observation\",\n     *      description=\"Returns a list of Observation resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Observation resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"code\",\n     *          in=\"query\",\n     *          description=\"The code of the Observation resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"category\",\n     *          in=\"query\",\n     *          description=\"The category of the Observation resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"date\",\n     *          in=\"query\",\n     *          description=\"The datetime of the Observation resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Observation\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Observation\" => function (HttpRestRequest $request) {\n        $getParams = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirObservationRestController())->getAll($getParams, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirObservationRestController())->getAll($getParams);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Observation/{uuid}\",\n     *      description=\"Returns a single Observation resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Observation resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"946da61e-0597-485e-9dfd-a87205ea56b3\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2021-09-20T04:12:16+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Observation\",\n     *                      \"status\": \"final\",\n     *                      \"category\": {\n     *                          {\n     *                              \"coding\": {\n     *                                  {\n     *                                      \"system\": \"http://terminology.hl7.org/CodeSystem/observation-category\",\n     *                                      \"code\": \"vital-signs\"\n     *                                  }\n     *                              }\n     *                          }\n     *                      },\n     *                      \"code\": {\n     *                          \"coding\": {\n     *                              {\n     *                                  \"system\": \"http://loinc.org\",\n     *                                  \"code\": \"85354-9\",\n     *                                  \"display\": \"Blood pressure systolic and diastolic\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"subject\": {\n     *                          \"reference\": \"Patient/946da619-c631-431a-a282-487cd6fb7802\",\n     *                          \"type\": \"Patient\"\n     *                      },\n     *                      \"effectiveDateTime\": \"2015-08-31T00:00:00+00:00\",\n     *                      \"component\": {\n     *                          {\n     *                              \"code\": {\n     *                                  \"coding\": {\n     *                                      {\n     *                                          \"system\": \"http://loinc.org\",\n     *                                          \"code\": \"8480-6\",\n     *                                          \"display\": \"Systolic blood pressure\"\n     *                                      }\n     *                                  }\n     *                              },\n     *                              \"valueQuantity\": {\n     *                                  \"value\": 122,\n     *                                  \"unit\": \"mm[Hg]\",\n     *                                  \"system\": \"http://unitsofmeasure.org\",\n     *                                  \"code\": \"mm[Hg]\"\n     *                              }\n     *                          },\n     *                          {\n     *                              \"code\": {\n     *                                  \"coding\": {\n     *                                      {\n     *                                          \"system\": \"http://loinc.org\",\n     *                                          \"code\": \"8462-4\",\n     *                                          \"display\": \"Diastolic blood pressure\"\n     *                                      }\n     *                                  }\n     *                              },\n     *                              \"valueQuantity\": {\n     *                                  \"value\": 77,\n     *                                  \"unit\": \"mm[Hg]\",\n     *                                  \"system\": \"http://unitsofmeasure.org\",\n     *                                  \"code\": \"mm[Hg]\"\n     *                              }\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Observation/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirObservationRestController())->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirObservationRestController())->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Organization\",\n     *      description=\"Returns a list of Organization resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Organization resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"name\",\n     *          in=\"query\",\n     *          description=\"The name of the Organization resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"email\",\n     *          in=\"query\",\n     *          description=\"The email of the Organization resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"phone\",\n     *          in=\"query\",\n     *          description=\"The phone of the Organization resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"telecom\",\n     *          in=\"query\",\n     *          description=\"The telecom of the Organization resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address\",\n     *          in=\"query\",\n     *          description=\"The address of the Organization resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address-city\",\n     *          in=\"query\",\n     *          description=\"The address-city of the Organization resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address-postalcode\",\n     *          in=\"query\",\n     *          description=\"The address-postalcode of the Organization resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address-state\",\n     *          in=\"query\",\n     *          description=\"The address-state of the Organization resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Organization\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Organization\" => function (HttpRestRequest $request) {\n        if (!$request->isPatientRequest()) {\n            RestConfig::authorization_check(\"admin\", \"users\");\n        }\n        $return = (new FhirOrganizationRestController())->getAll($request->getQueryParams());\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Organization/{uuid}\",\n     *      description=\"Returns a single Organization resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Organization resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"95f0e672-be37-4c73-95c9-649c2d200018\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2022-03-30T07:43:23+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Organization\",\n     *                      \"text\": {\n     *                          \"status\": \"generated\",\n     *                          \"div\": \"<div xmlns='http://www.w3.org/1999/xhtml'> <p>Your Clinic Name Here</p></div>\"\n     *                      },\n     *                      \"identifier\": {\n     *                          {\n     *                              \"system\": \"http://hl7.org/fhir/sid/us-npi\",\n     *                              \"value\": \"1234567890\"\n     *                          }\n     *                       },\n     *                      \"active\": true,\n     *                      \"type\": {\n     *                          {\n     *                              \"coding\": {\n     *                                  {\n     *                                      \"system\": \"http://terminology.hl7.org/CodeSystem/organization-type\",\n     *                                      \"code\": \"prov\",\n     *                                      \"display\": \"Healthcare Provider\"\n     *                                  }\n     *                              }\n     *                          }\n     *                      },\n     *                      \"name\": \"Your Clinic Name Here\",\n     *                      \"telecom\": {\n     *                          {\n     *                              \"system\": \"phone\",\n     *                              \"value\": \"000-000-0000\",\n     *                             \"use\": \"work\"\n     *                          },\n     *                          {\n     *                              \"system\": \"fax\",\n     *                              \"value\": \"000-000-0000\",\n     *                              \"use\": \"work\"\n     *                          }\n     *                      },\n     *                      \"address\": {\n     *                          null\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Organization/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        $patientUUID = null;\n        if (!$request->isPatientRequest()) {\n            RestConfig::authorization_check(\"admin\", \"users\");\n        } else {\n            $patientUUID = $request->getPatientUUIDString();\n        }\n        $return = (new FhirOrganizationRestController())->getOne($uuid, $patientUUID);\n\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Post(\n     *      path=\"/fhir/Organization\",\n     *      description=\"Adds a Organization resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  description=\"The json object for the Organization resource.\",\n     *                  type=\"object\"\n     *              ),\n     *              example={\n     *                  \"id\": \"95f0e672-be37-4c73-95c9-649c2d200018\",\n     *                  \"meta\": {\n     *                      \"versionId\": \"1\",\n     *                      \"lastUpdated\": \"2022-03-30T07:43:23+00:00\"\n     *                  },\n     *                  \"resourceType\": \"Organization\",\n     *                  \"text\": {\n     *                      \"status\": \"generated\",\n     *                      \"div\": \"<div xmlns='http://www.w3.org/1999/xhtml'> <p>Your Clinic Name Here</p></div>\"\n     *                  },\n     *                  \"identifier\": {\n     *                      {\n     *                          \"system\": \"http://hl7.org/fhir/sid/us-npi\",\n     *                          \"value\": \"1234567890\"\n     *                      }\n     *                   },\n     *                  \"active\": true,\n     *                  \"type\": {\n     *                      {\n     *                          \"coding\": {\n     *                              {\n     *                                  \"system\": \"http://terminology.hl7.org/CodeSystem/organization-type\",\n     *                                  \"code\": \"prov\",\n     *                                  \"display\": \"Healthcare Provider\"\n     *                              }\n     *                          }\n     *                      }\n     *                  },\n     *                  \"name\": \"Your Clinic Name Here Hey\",\n     *                  \"telecom\": {\n     *                      {\n     *                          \"system\": \"phone\",\n     *                          \"value\": \"000-000-0000\",\n     *                          \"use\": \"work\"\n     *                      },\n     *                      {\n     *                          \"system\": \"fax\",\n     *                          \"value\": \"000-000-0000\",\n     *                          \"use\": \"work\"\n     *                      }\n     *                  },\n     *                  \"address\": {\n     *                      null\n     *                  }\n     *              }\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"95f0e672-be37-4c73-95c9-649c2d200018\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2022-03-30T07:43:23+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Organization\",\n     *                      \"text\": {\n     *                          \"status\": \"generated\",\n     *                          \"div\": \"<div xmlns='http://www.w3.org/1999/xhtml'> <p>Your Clinic Name Here</p></div>\"\n     *                      },\n     *                      \"identifier\": {\n     *                          {\n     *                              \"system\": \"http://hl7.org/fhir/sid/us-npi\",\n     *                              \"value\": \"1234567890\"\n     *                          }\n     *                       },\n     *                      \"active\": true,\n     *                      \"type\": {\n     *                          {\n     *                              \"coding\": {\n     *                                  {\n     *                                      \"system\": \"http://terminology.hl7.org/CodeSystem/organization-type\",\n     *                                      \"code\": \"prov\",\n     *                                      \"display\": \"Healthcare Provider\"\n     *                                  }\n     *                              }\n     *                          }\n     *                      },\n     *                      \"name\": \"Your Clinic Name Here Now\",\n     *                      \"telecom\": {\n     *                          {\n     *                              \"system\": \"phone\",\n     *                              \"value\": \"000-000-0000\",\n     *                             \"use\": \"work\"\n     *                          },\n     *                          {\n     *                              \"system\": \"fax\",\n     *                              \"value\": \"000-000-0000\",\n     *                              \"use\": \"work\"\n     *                          }\n     *                      },\n     *                      \"address\": {\n     *                          null\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /fhir/Organization\" => function (HttpRestRequest $request) {\n        RestConfig::authorization_check(\"admin\", \"super\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\"), true));\n        $return = (new FhirOrganizationRestController())->post($data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Put(\n     *      path=\"/fhir/Organization/{uuid}\",\n     *      description=\"Modifies a Organization resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the organization.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  description=\"The json object for the Organization resource.\",\n     *                  type=\"object\"\n     *              ),\n     *              example={\n     *                  \"id\": \"95f0e672-be37-4c73-95c9-649c2d200018\",\n     *                  \"meta\": {\n     *                      \"versionId\": \"1\",\n     *                      \"lastUpdated\": \"2022-03-30T07:43:23+00:00\"\n     *                  },\n     *                  \"resourceType\": \"Organization\",\n     *                  \"text\": {\n     *                      \"status\": \"generated\",\n     *                      \"div\": \"<div xmlns='http://www.w3.org/1999/xhtml'> <p>Your Clinic Name Here</p></div>\"\n     *                  },\n     *                  \"identifier\": {\n     *                      {\n     *                          \"system\": \"http://hl7.org/fhir/sid/us-npi\",\n     *                          \"value\": \"1234567890\"\n     *                      }\n     *                   },\n     *                  \"active\": true,\n     *                  \"type\": {\n     *                      {\n     *                          \"coding\": {\n     *                              {\n     *                                  \"system\": \"http://terminology.hl7.org/CodeSystem/organization-type\",\n     *                                  \"code\": \"prov\",\n     *                                  \"display\": \"Healthcare Provider\"\n     *                              }\n     *                          }\n     *                      }\n     *                  },\n     *                  \"name\": \"Your Clinic Name Here\",\n     *                  \"telecom\": {\n     *                      {\n     *                          \"system\": \"phone\",\n     *                          \"value\": \"000-000-0000\",\n     *                          \"use\": \"work\"\n     *                      },\n     *                      {\n     *                          \"system\": \"fax\",\n     *                          \"value\": \"000-000-0000\",\n     *                          \"use\": \"work\"\n     *                      }\n     *                  },\n     *                  \"address\": {\n     *                      null\n     *                  }\n     *              }\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"201\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  example={\n     *                      \"id\": 14,\n     *                      \"uuid\": \"95f217c1-258c-44ca-bf11-909dce369574\"\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /fhir/Organization/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        RestConfig::authorization_check(\"admin\", \"super\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\"), true));\n        $return = (new FhirOrganizationRestController())->patch($uuid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Post(\n     *      path=\"/fhir/Patient\",\n     *      description=\"Adds a Patient resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  description=\"The json object for the Patient resource.\",\n     *                  type=\"object\"\n     *              ),\n     *              example={\n     *                  \"id\": \"95f22ff4-dd25-4290-8b52-1dd2fedf8e54\",\n     *                  \"meta\": {\n     *                      \"versionId\": \"1\",\n     *                      \"lastUpdated\": \"2022-03-31T02:48:28+00:00\"\n     *                  },\n     *                  \"resourceType\": \"Patient\",\n     *                  \"text\": {\n     *                      \"status\": \"generated\",\n     *                      \"div\": \"<div xmlns='http://www.w3.org/1999/xhtml'> <p>Brenda Smith</p></div>\"\n     *                  },\n     *                  \"extension\": {\n     *                      {\n     *                          \"valueCode\": \"F\",\n     *                          \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex\"\n     *                      },\n     *                      {\n     *                          \"extension\": {\n     *                              {\n     *                                  \"valueCoding\": {\n     *                                      \"system\": \"http://terminology.hl7.org/CodeSystem/v3-NullFlavor\",\n     *                                      \"code\": \"UNK\",\n     *                                      \"display\": \"Unknown\"\n     *                                  },\n     *                                  \"url\": \"ombCategory\"\n     *                              },\n     *                              {\n     *                                  \"valueString\": \"Unknown\",\n     *                                  \"url\": \"text\"\n     *                              }\n     *                          },\n     *                          \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-race\"\n     *                      }\n     *                  },\n     *                  \"identifier\": {\n     *                      {\n     *                          \"use\": \"official\",\n     *                          \"type\": {\n     *                              \"coding\": {\n     *                                  {\n     *                                      \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n     *                                      \"code\": \"PT\"\n     *                                  }\n     *                              }\n     *                          },\n     *                         \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n     *                         \"value\": \"1\"\n     *                      }\n     *                  },\n     *                  \"active\": true,\n     *                  \"name\": {\n     *                      {\n     *                          \"use\": \"official\",\n     *                          \"family\": \"Smith\",\n     *                          \"given\": {\n     *                              \"Brenda\"\n     *                          }\n     *                      }\n     *                  },\n     *                  \"gender\": \"female\",\n     *                  \"birthDate\": \"2017-03-10\",\n     *                  \"communication\": {\n     *                      {\n     *                          \"language\": {\n     *                              \"coding\": {\n     *                                  {\n     *                                      \"system\": \"http://terminology.hl7.org/CodeSystem/data-absent-reason\",\n     *                                      \"code\": \"unknown\",\n     *                                      \"display\": \"Unknown\"\n     *                                  }\n     *                              }\n     *                          }\n     *                      }\n     *                  }\n     *              }\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"95f22ff4-dd25-4290-8b52-1dd2fedf8e54\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2022-03-31T02:48:28+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Patient\",\n     *                      \"text\": {\n     *                          \"status\": \"generated\",\n     *                          \"div\": \"<div xmlns='http://www.w3.org/1999/xhtml'> <p>Brenda Smith</p></div>\"\n     *                      },\n     *                      \"extension\": {\n     *                          {\n     *                              \"valueCode\": \"F\",\n     *                              \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex\"\n     *                          },\n     *                          {\n     *                              \"extension\": {\n     *                                  {\n     *                                      \"valueCoding\": {\n     *                                          \"system\": \"http://terminology.hl7.org/CodeSystem/v3-NullFlavor\",\n     *                                          \"code\": \"UNK\",\n     *                                          \"display\": \"Unknown\"\n     *                                      },\n     *                                      \"url\": \"ombCategory\"\n     *                                  },\n     *                                  {\n     *                                      \"valueString\": \"Unknown\",\n     *                                      \"url\": \"text\"\n     *                                  }\n     *                              },\n     *                              \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-race\"\n     *                          }\n     *                      },\n     *                      \"identifier\": {\n     *                          {\n     *                              \"use\": \"official\",\n     *                              \"type\": {\n     *                                  \"coding\": {\n     *                                      {\n     *                                          \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n     *                                          \"code\": \"PT\"\n     *                                      }\n     *                                  }\n     *                              },\n     *                             \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n     *                             \"value\": \"1\"\n     *                          }\n     *                      },\n     *                      \"active\": true,\n     *                      \"name\": {\n     *                          {\n     *                              \"use\": \"official\",\n     *                              \"family\": \"Smith\",\n     *                              \"given\": {\n     *                                  \"Brenda\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"gender\": \"female\",\n     *                      \"birthDate\": \"2017-03-10\",\n     *                      \"communication\": {\n     *                          {\n     *                              \"language\": {\n     *                                  \"coding\": {\n     *                                      {\n     *                                          \"system\": \"http://terminology.hl7.org/CodeSystem/data-absent-reason\",\n     *                                          \"code\": \"unknown\",\n     *                                          \"display\": \"Unknown\"\n     *                                      }\n     *                                  }\n     *                              }\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /fhir/Patient\" => function (HttpRestRequest $request) {\n        RestConfig::authorization_check(\"patients\", \"demo\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\"), true));\n        $return = (new FhirPatientRestController())->post($data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Put(\n     *      path=\"/fhir/Patient/{uuid}\",\n     *      description=\"Modifies a Patient resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Patient resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  description=\"The json object for the Patient resource.\",\n     *                  type=\"object\"\n     *              ),\n     *              example={\n     *                  \"id\": \"95f22ff4-dd25-4290-8b52-1dd2fedf8e54\",\n     *                  \"meta\": {\n     *                      \"versionId\": \"1\",\n     *                      \"lastUpdated\": \"2022-03-31T02:48:28+00:00\"\n     *                  },\n     *                  \"resourceType\": \"Patient\",\n     *                  \"text\": {\n     *                      \"status\": \"generated\",\n     *                      \"div\": \"<div xmlns='http://www.w3.org/1999/xhtml'> <p>Brenda Smith</p></div>\"\n     *                  },\n     *                  \"extension\": {\n     *                      {\n     *                          \"valueCode\": \"F\",\n     *                          \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex\"\n     *                      },\n     *                      {\n     *                          \"extension\": {\n     *                              {\n     *                                  \"valueCoding\": {\n     *                                      \"system\": \"http://terminology.hl7.org/CodeSystem/v3-NullFlavor\",\n     *                                      \"code\": \"UNK\",\n     *                                      \"display\": \"Unknown\"\n     *                                  },\n     *                                  \"url\": \"ombCategory\"\n     *                              },\n     *                              {\n     *                                  \"valueString\": \"Unknown\",\n     *                                  \"url\": \"text\"\n     *                              }\n     *                          },\n     *                          \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-race\"\n     *                      }\n     *                  },\n     *                  \"identifier\": {\n     *                      {\n     *                          \"use\": \"official\",\n     *                          \"type\": {\n     *                              \"coding\": {\n     *                                  {\n     *                                      \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n     *                                      \"code\": \"PT\"\n     *                                  }\n     *                              }\n     *                          },\n     *                         \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n     *                         \"value\": \"1\"\n     *                      }\n     *                  },\n     *                  \"active\": true,\n     *                  \"name\": {\n     *                      {\n     *                          \"use\": \"official\",\n     *                          \"family\": \"Smith\",\n     *                          \"given\": {\n     *                              \"Brenda\"\n     *                          }\n     *                      }\n     *                  },\n     *                  \"gender\": \"female\",\n     *                  \"birthDate\": \"2017-03-10\",\n     *                  \"communication\": {\n     *                      {\n     *                          \"language\": {\n     *                              \"coding\": {\n     *                                  {\n     *                                      \"system\": \"http://terminology.hl7.org/CodeSystem/data-absent-reason\",\n     *                                      \"code\": \"unknown\",\n     *                                      \"display\": \"Unknown\"\n     *                                  }\n     *                              }\n     *                          }\n     *                      }\n     *                  }\n     *              }\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"201\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  example={\n     *                      \"id\": 2,\n     *                      \"uuid\": \"95f2ad04-5834-4243-8838-e396a7faadbf\"\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /fhir/Patient/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        RestConfig::authorization_check(\"patients\", \"demo\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\"), true));\n        $return = (new FhirPatientRestController())->put($uuid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Patient\",\n     *      description=\"Returns a list of Patient resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Patient resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"identifier\",\n     *          in=\"query\",\n     *          description=\"The identifier of the Patient resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"name\",\n     *          in=\"query\",\n     *          description=\"The name of the Patient resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"birthdate\",\n     *          in=\"query\",\n     *          description=\"The birthdate of the Patient resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"gender\",\n     *          in=\"query\",\n     *          description=\"The gender of the Patient resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address\",\n     *          in=\"query\",\n     *          description=\"The address of the Patient resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address-city\",\n     *          in=\"query\",\n     *          description=\"The address-city of the Patient resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address-postalcode\",\n     *          in=\"query\",\n     *          description=\"The address-postalcode of the Patient resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *          type=\"string\"\n     *      )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address-state\",\n     *          in=\"query\",\n     *          description=\"The address-state of the Patient resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"email\",\n     *          in=\"query\",\n     *          description=\"The email of the Patient resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"family\",\n     *          in=\"query\",\n     *          description=\"The family name of the Patient resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"given\",\n     *          in=\"query\",\n     *          description=\"The given name of the Patient resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"phone\",\n     *          in=\"query\",\n     *          description=\"The phone number of the Patient resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"telecom\",\n     *          in=\"query\",\n     *          description=\"The fax number of the Patient resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *        ref=\"#/components/parameters/_lastUpdated\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Patient\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Patient\" => function (HttpRestRequest $request) {\n        $params = $request->getQueryParams();\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            //  Note in Patient context still have to return a bundle even if it is just one resource. (ie.\n            //   need to use getAll rather than getOne)\n            $params['_id'] = $request->getPatientUUIDString();\n            $return = (new FhirPatientRestController())->getAll($params, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"demo\");\n            $return = (new FhirPatientRestController())->getAll($params);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Patient/$export\",\n     *      description=\"The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>\",\n     *      tags={\"fhir\"},\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    // we have to have the bulk fhir export operation here otherwise it will match $export to the patient $id\n    'GET /fhir/Patient/$export' => function (HttpRestRequest $request) {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $fhirExportService = new FhirOperationExportRestController($request);\n        $return = $fhirExportService->processExport(\n            $request->getQueryParams(),\n            'Patient',\n            $request->getHeader('Accept')[0] ?? '',\n            $request->getHeader('Prefer')[0] ?? ''\n        );\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Patient/{uuid}\",\n     *      description=\"Returns a single Patient resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Patient resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"946da617-1a4a-4b2c-ae66-93b84377cb1e\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2021-09-21T17:08:03+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Patient\",\n     *                      \"text\": {\n     *                          \"status\": \"generated\",\n     *                          \"div\": \"<div xmlns=\"\"http://www.w3.org/1999/xhtml\"\"> <p>Aurore252 Von197</p></div>\"\n     *                      },\n     *                      \"extension\": {\n     *                          {\n     *                              \"valueCode\": \"F\",\n     *                              \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex\"\n     *                          },\n     *                          {\n     *                              \"extension\": {\n     *                                  {\n     *                                      \"valueCoding\": {\n     *                                          \"system\": \"urn:oid:2.16.840.1.113883.6.238\",\n     *                                          \"code\": \"1006-6\",\n     *                                          \"display\": \"Abenaki\"\n     *                                      },\n     *                                      \"url\": \"ombCategory\"\n     *                                  },\n     *                                  {\n     *                                      \"valueString\": \"Abenaki\",\n     *                                      \"url\": \"text\"\n     *                                  }\n     *                              },\n     *                              \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-race\"\n     *                          },\n     *                          {\n     *                              \"extension\": {\n     *                                  {\n     *                                      \"valueString\": \"Declined To Specify\",\n     *                                      \"url\": \"text\"\n     *                                  }\n     *                              },\n     *                              \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity\"\n     *                          }\n     *                      },\n     *                      \"identifier\": {\n     *                          {\n     *                              \"use\": \"official\",\n     *                              \"type\": {\n     *                                  \"coding\": {\n     *                                      {\n     *                                          \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n     *                                          \"code\": \"PT\"\n     *                                      }\n     *                                  }\n     *                              },\n     *                              \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n     *                              \"value\": \"1\"\n     *                          }\n     *                      },\n     *                      \"active\": true,\n     *                      \"name\": {\n     *                          {\n     *                              \"use\": \"official\",\n     *                              \"family\": \"Von197\",\n     *                              \"given\": {\n     *                                  \"Aurore252\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"gender\": \"female\",\n     *                      \"birthDate\": \"1970-07-03\",\n     *                      \"address\": {\n     *                          {\n     *                              \"line\": {\n     *                                  \"245 Crona Wall\"\n     *                              },\n     *                              \"city\": \"Boston\",\n     *                              \"state\": \"Massachusetts\",\n     *                              \"postalCode\": \"02215\",\n     *                              \"period\": {\n     *                                  \"start\": \"2020-09-21T17:08:03.532+00:00\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"communication\": {\n     *                          {\n     *                              \"language\": {\n     *                                  \"coding\": {\n     *                                      {\n     *                                          \"system\": \"http://terminology.hl7.org/CodeSystem/data-absent-reason\",\n     *                                          \"code\": \"unknown\",\n     *                                          \"display\": \"Unknown\"\n     *                                      }\n     *                                  }\n     *                              }\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Patient/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            if (empty($uuid) || ($uuid != $request->getPatientUUIDString())) {\n                throw new AccessDeniedException(\"patients\", \"demo\", \"patient id invalid\");\n            }\n            $uuid = $request->getPatientUUIDString();\n        } else {\n            RestConfig::authorization_check(\"patients\", \"demo\");\n        }\n        $return = (new FhirPatientRestController())->getOne($uuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Person\",\n     *      description=\"Returns a list of Person resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Person resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"name\",\n     *          in=\"query\",\n     *          description=\"The name of the Person resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"active\",\n     *          in=\"query\",\n     *          description=\"The active status of the Person resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address\",\n     *          in=\"query\",\n     *          description=\"The address of the Person resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address-city\",\n     *          in=\"query\",\n     *          description=\"The address-city of the Person resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address-postalcode\",\n     *          in=\"query\",\n     *          description=\"The address-postalcode of the Person resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address-state\",\n     *          in=\"query\",\n     *          description=\"The address-state of the Person resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"email\",\n     *          in=\"query\",\n     *          description=\"The email of the Person resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"family\",\n     *          in=\"query\",\n     *          description=\"The family name of the Person resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"given\",\n     *          in=\"query\",\n     *          description=\"The given name of the Person resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"phone\",\n     *          in=\"query\",\n     *          description=\"The phone number of the Person resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"telecom\",\n     *          in=\"query\",\n     *          description=\"The fax number of the Person resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Person\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Person\" => function (HttpRestRequest $request) {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $return = (new FhirPersonRestController())->getAll($request->getQueryParams());\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Person/{uuid}\",\n     *      description=\"Returns a single Person resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Person resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"960c7cd6-187a-4119-8cd4-85389d80efb9\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2022-04-13T08:57:32+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Person\",\n     *                      \"text\": {\n     *                          \"status\": \"generated\",\n     *                          \"div\": \"<div xmlns='http://www.w3.org/1999/xhtml'> <p>Administrator Administrator</p></div>\"\n     *                      },\n     *                      \"name\": {\n     *                          {\n     *                              \"use\": \"official\",\n     *                              \"family\": \"Administrator\",\n     *                              \"given\": {\n     *                                  \"Administrator\",\n     *                                  \"Larry\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"telecom\": {\n     *                          {\n     *                              \"system\": \"phone\",\n     *                              \"value\": \"1234567890\",\n     *                              \"use\": \"home\"\n     *                          },\n     *                          {\n     *                              \"system\": \"phone\",\n     *                              \"value\": \"1234567890\",\n     *                              \"use\": \"work\"\n     *                          },\n     *                          {\n     *                              \"system\": \"phone\",\n     *                              \"value\": \"1234567890\",\n     *                              \"use\": \"mobile\"\n     *                          },\n     *                          {\n     *                              \"system\": \"email\",\n     *                              \"value\": \"hey@hey.com\",\n     *                              \"use\": \"home\"\n     *                          }\n     *                      },\n     *                      \"address\": {\n     *                          {\n     *                              \"line\": {\n     *                                  \"123 Lane Street\"\n     *                              },\n     *                              \"city\": \"Bellevue\",\n     *                              \"state\": \"WA\",\n     *                              \"period\": {\n     *                                  \"start\": \"2021-04-13T08:57:32.146+00:00\"\n     *                              }\n     *                          }\n     *                      },\n     *                      \"active\": true\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Person/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        // if the api user is requesting their own user we need to let it through\n        // this is because the /Person endpoint needs to be responsive to the fhirUser return value\n        // for the currently logged in user\n        if ($request->getRequestUserUUIDString() == $uuid) {\n            $return = (new FhirPersonRestController())->getOne($uuid);\n        } elseif (!$request->isPatientRequest()) {\n            // not a patient ,make sure we have access to the users ACL\n            RestConfig::authorization_check(\"admin\", \"users\");\n            $return = (new FhirPersonRestController())->getOne($uuid);\n        } else {\n            // if we are a patient bound request we need to make sure we are only bound to the patient\n            $return = (new FhirPersonRestController())->getOne($uuid, $request->getPatientUUIDString());\n        }\n\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Practitioner\",\n     *      description=\"Returns a list of Practitioner resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Practitioner resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"name\",\n     *          in=\"query\",\n     *          description=\"The name of the Practitioner resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"active\",\n     *          in=\"query\",\n     *          description=\"The active status of the Practitioner resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address\",\n     *          in=\"query\",\n     *          description=\"The address of the Practitioner resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address-city\",\n     *          in=\"query\",\n     *          description=\"The address-city of the Practitioner resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address-postalcode\",\n     *          in=\"query\",\n     *          description=\"The address-postalcode of the Practitioner resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"address-state\",\n     *          in=\"query\",\n     *          description=\"The address-state of the Practitioner resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"email\",\n     *          in=\"query\",\n     *          description=\"The email of the Practitioner resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"family\",\n     *          in=\"query\",\n     *          description=\"The family name of the Practitioner resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"given\",\n     *          in=\"query\",\n     *          description=\"The given name of the Practitioner resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"phone\",\n     *          in=\"query\",\n     *          description=\"The phone number of the Practitioner resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"telecom\",\n     *          in=\"query\",\n     *          description=\"The fax number of the Practitioner resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Practitioner\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Practitioner\" => function (HttpRestRequest $request) {\n\n        // TODO: @adunsulag talk with brady.miller about patients needing access to any practitioner resource\n        // that is referenced in connected patient resources -- such as AllergyIntollerance.\n        // I don't believe patients are assigned to a particular practitioner\n        // should we allow just open api access to admin information?  Should we restrict particular pieces\n        // of data in the practitioner side (phone number, address information) based on a permission set?\n        if (!$request->isPatientRequest()) {\n            RestConfig::authorization_check(\"admin\", \"users\");\n        }\n        $return = (new FhirPractitionerRestController())->getAll($request->getQueryParams());\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Practitioner/{uuid}\",\n     *      description=\"Returns a single Practitioner resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Practitioner resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"9473b0cf-e969-4eaa-8044-51037767fa4f\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2021-09-21T17:41:57+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Practitioner\",\n     *                      \"text\": {\n     *                          \"status\": \"generated\",\n     *                          \"div\": \"<div xmlns=\"\"http://www.w3.org/1999/xhtml\"\"> <p>Billy Smith</p></div>\"\n     *                      },\n     *                      \"identifier\": {\n     *                          {\n     *                              \"system\": \"http://hl7.org/fhir/sid/us-npi\",\n     *                              \"value\": \"11223344554543\"\n     *                          }\n     *                      },\n     *                      \"active\": true,\n     *                      \"name\": {\n     *                          {\n     *                              \"use\": \"official\",\n     *                              \"family\": \"Smith\",\n     *                              \"given\": {\n     *                                  \"Billy\"\n     *                              }\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Practitioner/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        // TODO: @adunsulag talk with brady.miller about patients needing access to any practitioner resource\n        // that is referenced in connected patient resources -- such as AllergyIntollerance.\n        // I don't believe patients are assigned to a particular practitioner\n        // should we allow just open api access to admin information?  Should we restrict particular pieces\n        // of data in the practitioner side (phone number, address information) based on a permission set?\n        if (!$request->isPatientRequest()) {\n            RestConfig::authorization_check(\"admin\", \"users\");\n        }\n        $return = (new FhirPractitionerRestController())->getOne($uuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Post(\n     *      path=\"/fhir/Practitioner\",\n     *      description=\"Adds a Practitioner resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  description=\"The json object for the Practitioner resource.\",\n     *                  type=\"object\"\n     *              ),\n     *              example={\n     *                  \"id\": \"9473b0cf-e969-4eaa-8044-51037767fa4f\",\n     *                  \"meta\": {\n     *                      \"versionId\": \"1\",\n     *                      \"lastUpdated\": \"2021-09-21T17:41:57+00:00\"\n     *                  },\n     *                  \"resourceType\": \"Practitioner\",\n     *                  \"text\": {\n     *                      \"status\": \"generated\",\n     *                      \"div\": \"<div xmlns=\"\"http://www.w3.org/1999/xhtml\"\"> <p>Billy Smith</p></div>\"\n     *                  },\n     *                  \"identifier\": {\n     *                      {\n     *                          \"system\": \"http://hl7.org/fhir/sid/us-npi\",\n     *                          \"value\": \"11223344554543\"\n     *                      }\n     *                  },\n     *                  \"active\": true,\n     *                  \"name\": {\n     *                      {\n     *                          \"use\": \"official\",\n     *                          \"family\": \"Smith\",\n     *                          \"given\": {\n     *                              \"Danny\"\n     *                          }\n     *                      }\n     *                  }\n     *              }\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"9473b0cf-e969-4eaa-8044-51037767fa4f\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2021-09-21T17:41:57+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Practitioner\",\n     *                      \"text\": {\n     *                          \"status\": \"generated\",\n     *                          \"div\": \"<div xmlns=\"\"http://www.w3.org/1999/xhtml\"\"> <p>Billy Smith</p></div>\"\n     *                      },\n     *                      \"identifier\": {\n     *                          {\n     *                              \"system\": \"http://hl7.org/fhir/sid/us-npi\",\n     *                              \"value\": \"11223344554543\"\n     *                          }\n     *                      },\n     *                      \"active\": true,\n     *                      \"name\": {\n     *                          {\n     *                              \"use\": \"official\",\n     *                              \"family\": \"Smith\",\n     *                              \"given\": {\n     *                                  \"Danny\"\n     *                              }\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"POST /fhir/Practitioner\" => function (HttpRestRequest $request) {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\"), true));\n        $return = (new FhirPractitionerRestController())->post($data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Put(\n     *      path=\"/fhir/Practitioner/{uuid}\",\n     *      description=\"Modify a Practitioner resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Practitioner resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  description=\"The json object for the Practitioner resource.\",\n     *                  type=\"object\"\n     *              ),\n     *              example={\n     *                  \"id\": \"9473b0cf-e969-4eaa-8044-51037767fa4f\",\n     *                  \"meta\": {\n     *                      \"versionId\": \"1\",\n     *                      \"lastUpdated\": \"2021-09-21T17:41:57+00:00\"\n     *                  },\n     *                  \"resourceType\": \"Practitioner\",\n     *                  \"text\": {\n     *                      \"status\": \"generated\",\n     *                      \"div\": \"<div xmlns=\"\"http://www.w3.org/1999/xhtml\"\"> <p>Billy Smith</p></div>\"\n     *                  },\n     *                  \"identifier\": {\n     *                      {\n     *                          \"system\": \"http://hl7.org/fhir/sid/us-npi\",\n     *                          \"value\": \"11223344554543\"\n     *                      }\n     *                  },\n     *                  \"active\": true,\n     *                  \"name\": {\n     *                      {\n     *                          \"use\": \"official\",\n     *                          \"family\": \"Smith\",\n     *                          \"given\": {\n     *                              \"Billy\"\n     *                          }\n     *                      }\n     *                  }\n     *              }\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"201\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  example={\n     *                      \"id\": 5,\n     *                      \"uuid\": \"95f294d7-e14c-441d-81a6-309fe369ee21\"\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"PUT /fhir/Practitioner/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $data = (array) (json_decode(file_get_contents(\"php://input\"), true));\n        $return = (new FhirPractitionerRestController())->patch($uuid, $data);\n        RestConfig::apiLog($return, $data);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/PractitionerRole\",\n     *      description=\"Returns a list of PractitionerRole resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the PractitionerRole resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"specialty\",\n     *          in=\"query\",\n     *          description=\"The specialty of the PractitionerRole resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"practitioner\",\n     *          in=\"query\",\n     *          description=\"The practitioner of the PractitionerRole resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/PractitionerRole\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/PractitionerRole\" => function (HttpRestRequest $request) {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $return = (new FhirPractitionerRoleRestController())->getAll($request->getQueryParams());\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/PractitionerRole/{uuid}\",\n     *      description=\"Returns a single PractitionerRole resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the PractitionerRole resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"960c806f-9463-482e-b228-67b5be1fed55\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2022-04-13T06:18:17+00:00\"\n     *                      },\n     *                      \"resourceType\": \"PractitionerRole\",\n     *                      \"practitioner\": {\n     *                          \"reference\": \"Practitioner/960c7cd6-187a-4119-8cd4-85389d80efb9\",\n     *                          \"display\": \"Administrator Administrator\"\n     *                      },\n     *                      \"organization\": {\n     *                          \"reference\": \"Organization/960c7cc6-b4ae-49bc-877b-1a2913271c43\",\n     *                          \"display\": \"Your Clinic Name Here\"\n     *                      },\n     *                      \"code\": {\n     *                          {\n     *                              \"coding\": {\n     *                                  \"102L00000X\"\n     *                              },\n     *                              \"text\": \"Psychoanalyst\"\n     *                          },\n     *                          {\n     *                              \"coding\": {\n     *                                  \"101Y00000X\"\n     *                              },\n     *                              \"text\": \"Counselor\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/PractitionerRole/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        RestConfig::authorization_check(\"admin\", \"users\");\n        $return = (new FhirPractitionerRoleRestController())->getOne($uuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Procedure\",\n     *      description=\"Returns a list of Procedure resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the Procedure resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"patient\",\n     *          in=\"query\",\n     *          description=\"The uuid for the patient.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"date\",\n     *          in=\"query\",\n     *          description=\"The datetime of the Procedure resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Procedure\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Procedure\" => function (HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirProcedureRestController())->getAll($request->getQueryParams(), $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirProcedureRestController())->getAll($request->getQueryParams());\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Procedure/{uuid}\",\n     *      description=\"Returns a single Procedure resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the Procedure resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"95e9d3fb-fe7b-448a-aa60-d40b11b486a5\",\n     *                      \"meta\": {\n     *                          \"versionId\": \"1\",\n     *                          \"lastUpdated\": \"2022-03-26T17:20:14+00:00\"\n     *                      },\n     *                      \"resourceType\": \"Procedure\",\n     *                      \"status\": \"in-progress\",\n     *                      \"subject\": {\n     *                          \"reference\": \"Patient/95e8d830-3068-48cf-930a-2fefb18c2bcf\",\n     *                          \"type\": \"Patient\"\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Procedure/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirProcedureRestController())->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"patients\", \"med\");\n            $return = (new FhirProcedureRestController())->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Provenance/{uuid}\",\n     *      description=\"Returns a single Provenance resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The id for the Provenance resource. Format is \\<resource name\\>:\\<uuid\\> (Example: AllergyIntolerance:95ea43f3-1066-4bc7-b224-6c23b985f145).\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"id\": \"AllergyIntolerance:95ea43f3-1066-4bc7-b224-6c23b985f145\",\n     *                      \"resourceType\": \"Provenance\",\n     *                      \"target\": {\n     *                          {\n     *                              \"reference\": \"AllergyIntolerance/95ea43f3-1066-4bc7-b224-6c23b985f145\",\n     *                              \"type\": \"AllergyIntolerance\"\n     *                          }\n     *                      },\n     *                      \"recorded\": \"2022-03-26T22:43:30+00:00\",\n     *                      \"agent\": {\n     *                          {\n     *                              \"type\": {\n     *                                  \"coding\": {\n     *                                      {\n     *                                          \"system\": \"http://terminology.hl7.org/CodeSystem/provenance-participant-type\",\n     *                                          \"code\": \"author\",\n     *                                          \"display\": \"Author\"\n     *                                      }\n     *                                  }\n     *                              },\n     *                              \"who\": {\n     *                                  \"reference\": \"Organization/95e8d810-7e55-44aa-bb48-fecd5b0d88c7\",\n     *                                  \"type\": \"Organization\"\n     *                              },\n     *                              \"onBehalfOf\": {\n     *                                  \"reference\": \"Organization/95e8d810-7e55-44aa-bb48-fecd5b0d88c7\",\n     *                                  \"type\": \"Organization\"\n     *                              }\n     *                          },\n     *                          {\n     *                              \"type\": {\n     *                                  \"coding\": {\n     *                                      {\n     *                                          \"system\": \"http://hl7.org/fhir/us/core/CodeSystem/us-core-provenance-participant-type\",\n     *                                          \"code\": \"transmitter\",\n     *                                          \"display\": \"Transmitter\"\n     *                                      }\n     *                                  }\n     *                              }\n     *                          },\n     *                          \"who\": {\n     *                              \"reference\": \"Organization/95e8d810-7e55-44aa-bb48-fecd5b0d88c7\",\n     *                              \"type\": \"Organization\"\n     *                          },\n     *                          \"onBehalfOf\": {\n     *                              \"reference\": \"Organization/95e8d810-7e55-44aa-bb48-fecd5b0d88c7\",\n     *                              \"type\": \"Organization\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/Provenance/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirProvenanceRestController($request))->getOne($uuid, $request->getPatientUUIDString());\n        } else {\n            RestConfig::authorization_check(\"admin\", \"super\");\n            $return = (new FhirProvenanceRestController($request))->getOne($uuid);\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/Provenance\",\n     *      description=\"Returns a list of Provenance resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The id for the Provenance resource. Format is \\<resource name\\>:\\<uuid\\> (Example: AllergyIntolerance:95ea43f3-1066-4bc7-b224-6c23b985f145).\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/Provenance\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    // NOTE: this GET request only supports requests with an _id parameter.  FHIR inferno test tool requires the 'search'\n    // property to support which is why this endpoint exists.\n    \"GET /fhir/Provenance\" => function (HttpRestRequest $request) {\n        if ($request->isPatientRequest()) {\n            // only allow access to data of binded patient\n            $return = (new FhirProvenanceRestController($request))->getAll($request->getQueryParams(), $request->getPatientUUIDString());\n        } else {\n            // TODO: it seems like regular users should be able to grab authorship / provenance information\n            RestConfig::authorization_check(\"admin\", \"super\");\n            $return = (new FhirProvenanceRestController($request))->getAll($request->getQueryParams());\n        }\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/ValueSet\",\n     *      description=\"Returns a list of ValueSet resources.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"_id\",\n     *          in=\"query\",\n     *          description=\"The uuid for the ValueSet resource.\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Parameter(\n     *          name=\"_lastUpdated\",\n     *          in=\"query\",\n     *          description=\"Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)\",\n     *          required=false,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"meta\": {\n     *                          \"lastUpdated\": \"2021-09-14T09:13:51\"\n     *                      },\n     *                      \"resourceType\": \"Bundle\",\n     *                      \"type\": \"collection\",\n     *                      \"total\": 0,\n     *                      \"link\": {\n     *                          {\n     *                              \"relation\": \"self\",\n     *                              \"url\": \"https://localhost:9300/apis/default/fhir/ValueSet\"\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/ValueSet\" => function (HttpRestRequest $request) {\n        RestConfig::authorization_check(\"admin\", \"super\");\n        $return = (new FhirValueSetRestController())->getAll($request->getQueryParams());\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/ValueSet/{uuid}\",\n     *      description=\"Returns a single ValueSet resource.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Parameter(\n     *          name=\"uuid\",\n     *          in=\"path\",\n     *          description=\"The uuid for the ValueSet resource.\",\n     *          required=true,\n     *          @OA\\Schema(\n     *              type=\"string\"\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Standard Response\",\n     *          @OA\\MediaType(\n     *              mediaType=\"application/json\",\n     *              @OA\\Schema(\n     *                  @OA\\Property(\n     *                      property=\"json object\",\n     *                      description=\"FHIR Json object.\",\n     *                      type=\"object\"\n     *                  ),\n     *                  example={\n     *                      \"resourceType\": \"ValueSet\",\n     *                      \"id\": \"appointment-type\",\n     *                      \"compose\": {\n     *                          \"include\": {\n     *                              {\n     *                                  \"concept\": {\n     *                                      {\n     *                                          \"code\": \"no_show\",\n     *                                          \"display\": \"No Show\"\n     *                                      },\n     *                                      {\n     *                                          \"code\": \"office_visit\",\n     *                                          \"display\": \"Office Visit\"\n     *                                      },\n     *                                      {\n     *                                          \"code\": \"established_patient\",\n     *                                          \"display\": \"Established Patient\"\n     *                                      },\n     *                                      {\n     *                                          \"code\": \"new_patient\",\n     *                                          \"display\": \"New Patient\"\n     *                                      },\n     *                                      {\n     *                                          \"code\": \"health_and_behavioral_assessment\",\n     *                                          \"display\": \"Health and Behavioral Assessment\"\n     *                                      },\n     *                                      {\n     *                                          \"code\": \"preventive_care_services\",\n     *                                          \"display\": \"Preventive Care Services\"\n     *                                      },\n     *                                      {\n     *                                          \"code\": \"ophthalmological_services\",\n     *                                          \"display\": \"Ophthalmological Services\"\n     *                                      }\n     *                                  }\n     *                              }\n     *                          }\n     *                      }\n     *                  }\n     *              )\n     *          )\n     *      ),\n     *      @OA\\Response(\n     *          response=\"400\",\n     *          ref=\"#/components/responses/badrequest\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"401\",\n     *          ref=\"#/components/responses/unauthorized\"\n     *      ),\n     *      @OA\\Response(\n     *          response=\"404\",\n     *          ref=\"#/components/responses/uuidnotfound\"\n     *      ),\n     *      security={{\"openemr_auth\":{}}}\n     *  )\n     */\n    \"GET /fhir/ValueSet/:uuid\" => function ($uuid, HttpRestRequest $request) {\n        RestConfig::authorization_check(\"admin\", \"super\");\n        $return = (new FhirValueSetRestController())->getOne($uuid);\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    // other endpoints\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/metadata\",\n     *      description=\"Returns metadata (ie. CapabilityStatement resource) of the fhir server.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Return CapabilityStatement resource of the fhir server\"\n     *      )\n     *  )\n     */\n    \"GET /fhir/metadata\" => function () {\n        $return = (new FhirMetaDataRestController())->getMetaData();\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/.well-known/smart-configuration\",\n     *      description=\"Returns smart configuration of the fhir server.\",\n     *      tags={\"fhir\"},\n     *      @OA\\Response(\n     *          response=\"200\",\n     *          description=\"Return smart configuration of the fhir server\"\n     *      )\n     *  )\n     */\n    \"GET /fhir/.well-known/smart-configuration\" => function () {\n        $authController = new \\OpenEMR\\RestControllers\\AuthorizationController();\n        $return = (new \\OpenEMR\\RestControllers\\SMART\\SMARTConfigurationController($authController))->getConfig();\n        RestConfig::apiLog($return);\n        return $return;\n    },\n\n    /**\n     *  @OA\\Get(\n     *      path=\"/fhir/OperationDefinition\",\n     *      description=\"Returns a list of the O"
        },
        {
          "name": "acknowledge_license_cert.html",
          "type": "blob",
          "size": 21.640625,
          "content": "<!DOCTYPE html>\n<html>\n\n<head>\n    <title>Acknowledgments, Licensing and Certification</title>\n    <link href=\"public/assets/bootstrap/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n</head>\n\n<body>\n    <div class=\"container\">\n        <h1 class=\"my-3 border-bottom\">Acknowledgments, Licensing and Certification</h1>\n        <h3>License information</h3>\n        <p>\n            Unless otherwise stated, this code is subject to the terms of the <a href=\"LICENSE\">\nGNU General Public License version 3 or higher (GPL)</a>, a copy of which is included here for your convenience.<br />\n\n            This code is also distributed under the terms of the <a href=\"#healthcare_disclaimer\">Healthcare Disclaimer</a>, which can be found at the bottom of this page.\n        </p>\n        <h3>Websites</h3>\n        <p>\n            <a href=\"https://www.open-emr.org/\">OpenEMR</a> - The OpenEMR website: <a href=\"https://www.open-emr.org/\">www.open-emr.org</a>\n            <br />\n            <a href=\"https://www.open-emr.org/foundation/\">OpenEMR Foundation</a> - The OpenEMR Foundation website: <a href=\"https://www.open-emr.org/foundation/\">www.open-emr.org/foundation</a>\n        </p>\n        <h3>List of Contributors</h3>\n        <!-- To add your information, please edit http://open-emr.org/wiki/index.php/OpenEMR_Acknowledgments . This file is built from the contents of that wiki page. -->\n        <table class=\"table table-bordered table-striped\">\n            <thead>\n                <tr>\n                    <th>Contributor</th>\n                    <th>Contact</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Abdulrahman Jabour</td>\n                    <td>ajabour@iupui.edu</td>\n                </tr>\n                <tr>\n                    <td>Andres Paglayan</td>\n                    <td>andres@paglayan.com</td>\n                </tr>\n                <tr>\n                    <td>Andrew Moore</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>Arnab Naha</td>\n                    <td>superarnab@gmail.com\n                        <br />\n                        <a href=\"https://www.nahahealthclinic.com\">www.nahahealthclinic.com</a></td>\n                </tr>\n                <tr>\n                    <td> <a href=\"http://avantsys.gr\">AvantSys Informatics</a></td>\n                    <td>contact@avantsys.gr\n                        <br /> Mpatzilioti Str., Terpsithea,\n                        <br /> Larissa 41500,\n                        <br /> Greece\n                        <br /> Tel: +302410287058\n                        <br /> Konstantinos Tzoannopoulos\n                        <br /> Konstantinos Xatzaras\n                        <br /> George Vasilakos</td>\n                </tr>\n                <tr>\n                    <td><a href=\"http://www.bowenmd.com\">Bowen Primary & Urgent Care</a> </td>\n                    <td>2365 Springs Rd NE, Hickory, NC 28601\n                        <br /> Emily Killian\n                        <br /> Nikolai Vitsyn\n                        <br /> Samuel T. Bowen, MD\n                        <br />\n                        <a href=\"mailto:drbowen@bowenmd.com\">drbowen@bowenmd.com</a>\n                        <br />\n                    </td>\n                </tr>\n                <tr>\n                    <td>Boyd Stephen Smith Jr.</td>\n                    <td>bss@iguanasuicide.net</td>\n                </tr>\n                <tr>\n                    <td>Brady Miller</td>\n                    <td>brady.g.miller@gmail.com</td>\n                </tr>\n                <tr>\n                    <td>CapMinds Private Ltd</td>\n                    <td><a href=\"http://www.capminds.com/\">www.capminds.com</a>\n                        <br /> 7/3, 2nd Floor, Madley Road,\n                        <br /> T.Nagar, Chennai, TamilNadu - INDIA,\n                        <br /> Phone: +91 975.127.6555, FAX:+1 512-853-3013\n                        <br /> Pandi Paramasivan : pandi.param@capminds.com</td>\n                </tr>\n                <tr>\n                    <td>CapMinds Technologies Corp</td>\n                    <td><a href=\"http://www.capminds.com/\">www.capminds.com</a>\n                        <br /> 1853, Old Meadow RD, Suite #103,\n                        <br /> McLean VA 22102 - USA\n                        <br /> Phone: +1 571.213.3245, FAX:+1 512-853-3013\n                        <br /> Pandi Paramasivan : pandi.param@capminds.com</td>\n                </tr>\n                <tr>\n                    <td>Care Management Solutions, Inc.</td>\n                    <td><a href=\"http://www.cmsvt.com/\">www.cmsvt.com</a>\n                        <br /> 25 East Center St\n                        <br /> Rutland, VT 05701\n                        <br /> Phone: (800) 371-8685, FAX: (802) 770-5175\n                        <br /> stephen.waite@cmsvt.com\n                    </td>\n                </tr>\n                <tr>\n                    <td>Comlink Inc.</td>\n                    <td><a href=\"http://www.comlinkinc.com\">www.comlinkinc.com</a>\n                        <br /> Amit Panjwani amit@comlinkinc.com\n                    </td>\n                </tr>\n                <tr>\n                    <td>Community Behavioral Health</td>\n                    <td><a href=\"http://www.communitybehavioralhealth.net\">www.communitybehavioralhealth.net</a>\n                        <br /> Shyam Bayani sbhayani@communitybehavioralhealth.net\n                    </td>\n                </tr>\n                <tr>\n                    <td>David Eschelbacher MD</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>EnSoftek, Inc.</td>\n                    <td><a href=\"http://www.ensoftek.com/\">www.ensoftek.com</a>\n                        <br /> 7861 SW Cirrus Dr, Bldg 24B, Beaverton OR 97008, USA\n                        <br /> Phone: +1 503 643 1226 FAX:+1 503 626 1769\n                        <br /> Ramesh Nagul: ramesh@ensoftek.com</td>\n                </tr>\n                <tr>\n                    <td>GATMAN</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>George Tye</td>\n                    <td>george.tye@gmail.com</td>\n                </tr>\n                <tr>\n                    <td>Ian Jardine</td>\n                    <td><a href=\"https://github.com/epsdky\">github.com/epsdky</a></td>\n                </tr>\n                <tr>\n                    <td>International Planned Parenthood Federation</td>\n                    <td><a href='http://www.ippf.org/'>www.ippf.org</a></td>\n                </tr>\n                <tr>\n                    <td>James Buchmiller</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>James R. Stone</td>\n                    <td>stone@annashaegrp.com\n                        <br /> fndtn357@gmail.com\n                    </td>\n                </tr>\n                <tr>\n                    <td>Juggernaut Systems Express</td>\n                    <td><a href=\"https://www.affordablecustomehr.com/\">www.affordablecustomehr.com</a>\n                        <br /> 505 Independance Pkwy, Chesapeake, VA 23320\n                        <br /> Phone: +1 757 328 2736\n                        <br /> Sherwin Gaddis: sherwin@affordablecustomehr.com</td>\n                </tr>\n                <tr>\n                    <td>Julia Longtin</td>\n                    <td>julia.longtin@gmail.com</td>\n                </tr>\n                <tr>\n                    <td>Kanoberson Asher</td>\n                    <td>Pohnpei Community Health Center\n                        <br /> PO BOX DRAWER 0\n                        <br /> POHNPEI, FM 96941\n                        <br /> Federated States of Micronesia\n                        <br /> ptspohnpei@gmail.com\n                        <br /> +691 320-2438</td>\n                </tr>\n                <tr>\n                    <td>Kevin Yeh</td>\n                    <td>kevin.y@integralemr.com</td>\n                </tr>\n                <tr>\n                    <td>Lilly Systems & Solutions</td>\n                    <td><a href=\"http://www.lillysystems.com/\">www.lillysystems.com</a>\n                        <br /> openemr@lillysystems.com\n                        <br /> Including:\n                        <br /> Jim Lilly\n                        <br /> Debbie Lilly\n                        <br /> Paul Spilman\n                        <br /> Jacob Harrison\n                        <br /> Terry Hill</td>\n                </tr>\n                <tr>\n                    <td>Linda E. Hungerford, M.D.</td>\n                    <td>General and Medical Psychiatry\n                        <br /> Maple Street Clinic, Ltd.\n                        <br /> 1401 15th Street\n                        <br /> Lawrenceville IL 62439\n                        <br /> mscltd@earthlink.net\n                    </td>\n                </tr>\n                <tr>\n                  <td>Matthew Vita</td>\n                  <td>www.matthewvita.com</td>\n                </tr>\n                <tr>\n                    <td>MD Support</td>\n                    <td>mdsupport@users.sf.net</td>\n                </tr>\n                <tr>\n                    <td>MD-Technologies, Inc.</td>\n                    <td><a href=\"http://www.MD-Technologies.net/\">www.MD-Technologies.net</a>\n                        <br /> 393 Calle Mendez Vigo, Dorado, PR\n                        <br /> Phone: 787-368-2321\n                        <br /> Alfonso Perez: aperez@MD-Technologies.net</td>\n                </tr>\n                <tr>\n                    <td>MedFetch, LLC</td>\n                    <td><a href=\"http://www.MedFetch.com/\">www.MedFetch.com</a>\n                        <br /> 275 Bicentennial Highway\n                        <br /> Springfield, MA 01118\n                        <br /> Phone: (413) 783-3100\n                        <br /> magauran@medfetch.com\n                    </td>\n                </tr>\n                <tr>\n                    <td>Medical Information Integration, LLC</td>\n                    <td><a href=\"http://www.mi-squared.com/\">www.mi-squared.com</a>\n                        <br /> info@mi-squared.com\n                        <br /> Aron Racho\n                        <br /> Jeremy Wallace\n                        <br /> Ken Chapple\n                        <br /> Tony McCormick</td>\n                </tr>\n                <tr>\n                    <td>MMD Data Corporation</td>\n                    <td>inquire@mmddata.ca - 1-877-462-5292\n                        <br />\n                        <a href=\"http://www.mmddata.ca/\">www.mmddata.ca</a>\n                        <br /> St. Thomas, Ontario, Canada\n                        <br /> Daniel Pfingstgraef: daniel@mmddata.ca</td>\n                </tr>\n                <tr>\n                    <td>Mohammed Bamajboor</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>Netic Infoservices - Argentina</td>\n                    <td><a href=\"http://openemr.com.ar\">openemr.com.ar</a> (Spanish) or <a href=\"http://medical-records.net\">medical-records.net</a> (English)\n                        <br /> Sergio Samoilovich</td>\n                </tr>\n                <tr>\n                    <td>Nilvio Aquino</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>Niru Jani MD</td>\n                    <td><a href=\"http://maple-shade.org\"></a></td>\n                </tr>\n                <tr>\n                    <td>Oak Street Health</td>\n                    <td><a href=\"www.oakstreethealth.com\">www.oakstreethealth.com</a>\n                        <br /> Jason Van Den Eeden \n                        <br /> jason.vandeneeden@oakstreethealth.com\n                    </td>\n                </tr>\n                <tr>\n                    <td>OEMR Non Profit Organization</td>\n                    <td><a href=\"https://www.oemr.org\">www.oemr.org</a>\n                    </td>\n                </tr>\n                <tr>\n                    <td>OpenEMR Foundation</td>\n                    <td><a href=\"https://www.open-emr.org/foundation/\">www.open-emr.org/foundation</a>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Open Source Medical Software</td>\n                    <td><a href=\"http://www.openmedsoftware.org/\">www.openmedsoftware.org</a>\n                        <br /> 1470 9th Ave. Dr. NE; Hickory, NC 28601\n                        <br /> 1-828-325-0950\n                    </td>\n                </tr>\n                <tr>\n                    <td>Patient Healthcare Analytics, Inc.\n                        <br /> Kevin McAloon (Mac)</td>\n                    <td>mcaloon@patienthealthcareanalytics.com\n                        <br /> 1-401-345-4665\n                    </td>\n                </tr>\n                <tr>\n                    <td>Pennington Firm</td>\n                    <td>402 West Broadway; 4th Floor; San Diego, CA 92101</td>\n                </tr>\n                <tr>\n                    <td>Phyaura, LLC\n                        <br /> </td>\n                    <td>5290 Applegate Drive\n                        <br /> Spring Hill, Florida 34606\n                        <br /> (888) PHYAURA 749-2872\n                        <br />\n                        <a href=\"http://www.phyaura.com/\">www.phyaura.com</a></td>\n                </tr>\n                <tr>\n                    <td>Pieter W. Blankevoort</td>\n                    <td>pimmblankevoort at hotmail dot com\n                        <br />\n                        <a href=\"http://dokteratcuracao.com/\">dokteratcuracao.com</a></td>\n                </tr>\n                <tr>\n                    <td>Pro Care Medical Centers</td>\n                    <td><a href=\"http://www.procaremedcenter.com/\">www.procaremedcenter.com</a>\n                        <br /> brent@procaremedcenter.com</td>\n                </tr>\n                <tr>\n                    <td>Richard Mishler\n                        <br /> Eclectic Domain</td>\n                    <td><a href=\"http://www.rmishler.com/\">www.rmishler.com</a></td>\n                </tr>\n                <tr>\n                    <td>Robert Down</td>\n                    <td>robertdown@live.com</td>\n                </tr>\n                <tr>\n                    <td>Roberto Vasquez</td>\n                    <td>robertogagliotta@gmail.com</td>\n                </tr>\n                <tr>\n                    <td>Rosion Versace Dzian</td>\n                    <td>rozion_dzian@yahoo.fr</td>\n                </tr>\n                <tr>\n                    <td>Scott Wakefield</td>\n                    <td>scott@npclinics.com.au</td>\n                </tr>\n                <tr>\n                    <td>Suliman Alomran</td>\n                    <td><a href=\"http://sulimanalomran.com/\">sulimanalomran.com</a></td>\n                </tr>\n                <tr>\n                    <td>Sunset Systems</td>\n                    <td><a href=\"http://www.sunsetsystems.com/\">www.sunsetsystems.com</a>\n                        <br /> Rod Roark &lt;rod@sunsetsystems.com&gt;</td>\n                </tr>\n                <tr>\n                    <td>Sushma Jani MD LLC</td>\n                    <td>&lt;sjmdllc@gmail.com&gt;</td>\n                </tr>\n                <tr>\n                    <td>Synergy Infoconnect</td>\n                    <td><a href=\"http://www.synergyinfoconnect.com\">www.synergyinfoconnect.com</a>\n                        <br /> Michael J. Blaho: mblaho@synergyinfoconnect.com</td>\n                </tr>\n                <tr>\n                    <td>Synitech, Incorporated\n                        <br />\n                    <td><a href=\"http://www.synitech.com/\">www.synitech.com</a>\n                        <br /> 145 Brick Kiln Place; Cheshire, CT 06410</td>\n                </tr>\n                <tr>\n                    <td>TajEmo Enterprises</td>\n                    <td><a href=\"http://www.tajemo.co.za/\">www.tajemo.co.za</a>\n                        <br /> Port Elizabeth, South Africa\n                        <br /> Phone: +27 43 7222356\n                        <br /> SMS: +27 79 268 7754\n                        <br /> info@tajemo.co.za\n                    </td>\n                </tr>\n                <tr>\n                    <td>Tekkno Genius</td>\n                    <td>tekknogenius@yahoo.com</td>\n                </tr>\n                <tr>\n                    <td>Ternopil State Medical University</td>\n                    <td><a href=\"http://www.tdmu.edu.ua/\">www.tdmu.edu.ua</a>\n                        <br /> m.Voli, 1, Ternopil, 46001, Ukraine\n                        <br /> Medical Informatics Department\n                        <br /> Andriy Semenets: semteacher@gmail.com</td>\n                </tr>\n                <tr>\n                    <td>Tsilibotis Dimitrios MD</td>\n                    <td>Greece</td>\n                </tr>\n                <tr>\n                    <td>ViSolve</td>\n                    <td><a href=\"http://www.visolve.com/\">www.visolve.com</a>\n                        <br /> Email: services@visolve.com\n                        <br /> Phone: (408) - 850 - 2243\n                        <br /> 6559, Springpath lane, San Jose, California - 95120.</td>\n                </tr>\n                <tr>\n                    <td>Z&amp;H Consultancy Services (Pvt) LTD.</td>\n                    <td><a href=\"http://www.zhservices.com/\">www.zhservices.com</a>\n                        <br /> 33/2165 Zaiham Towers, Vennala PO, Cochin, 682028, India\n                        <br /> Phone: +91 989 510 1355 FAX:+91 484 406 7873\n                        <br /> Mohamed Shahzad: shah@zhservices.com</td>\n                </tr>\n                <tr>\n                    <td>Z&amp;H Healthcare Solutions, LLC.</td>\n                    <td><a href=\"http://www.zhservices.com/\">www.zhservices.com</a>\n                        <br /> 2010 Corporate Ridge, Ste 700, McLean VA 22102, USA\n                        <br /> Phone: +1 571 766 8074 FAX:+1 703 345 0512\n                        <br /> Shameem C Hameed: sam@zhservices.com</td>\n                </tr>\n            </tbody>\n        </table>\n        <h3 class=\"mt-4\">Copyright</h3>\n        <p>\n            Copyright information for most files in the distribution can be found within each file. An exception is for code written prior to 2005 that is not accompanied by explicit copyright statements; the copyright of these files are held by their respective authors, which include:\n        </p>\n        <!-- To add your information, please edit http://open-emr.org/wiki/index.php/OpenEMR_Acknowledgments . This file is built from the contents of that wiki page. -->\n        <table class=\"table table-bordered table-striped\">\n            <thead>\n                <tr>\n                    <th>Contributor</th>\n                    <th>Contact</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Synitech, Incorporated (Copyright 2002-2003)</td>\n                    <td><a href=\"http://www.synitech.com/\">www.synitech.com</a>\n                        <br /> 145 Brick Kiln Place; Cheshire, CT 06410</td>\n                </tr>\n                <tr>\n                    <td>Pennington Firm (Copyright 2003-2004)</td>\n                    <td>402 West Broadway; 4th Floor; San Diego, CA 92101</td>\n                </tr>\n                <tr>\n                    <td>Andres Paglayan</td>\n                    <td>andres@paglayan.com</td>\n                </tr>\n                <tr>\n                    <td>GATMAN</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>James Buchmiller</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>Tekkno Genius</td>\n                    <td>tekknogenius@yahoo.com</td>\n                </tr>\n            </tbody>\n        </table>\n        <h3 class=\"mt-4\">Healthcare Disclaimer</h3>\n        <a name=\"healthcare_disclaimer\"></a>\n        <p>\n        In the United States, or any other jurisdictions where they may apply, the following additional disclaimer of warranty and limitation of liability are hereby incorporated into the terms and conditions of GPL:\n            <ol>\n                <li>No warranties of any kind whatsoever are made as to the results that You will obtain from relying upon the covered code (or any information or content obtained by way of the covered code), including but not limited to compliance with privacy laws or regulations or clinical care industry standards and protocols. Use of the covered code is not a substitute for a health care provider's standard practice or professional judgment. Any decision with regard to the appropriateness of treatment, or the validity or reliability of information or content made available by the covered code, is the sole responsibility of the health care provider. Consequently, it is incumbent upon each health care provider to verify all medical history and treatment plans with each patient.</li>\n                <li>Under no circumstances and under no legal theory, whether tort (including negligence), contract, or otherwise, shall any Contributor, or anyone who distributes Covered Software as permitted by the license, be liable to You for any indirect, special, incidental, consequential damages of any character including, without limitation, damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other damages or losses, of any nature whatsoever (direct or otherwise) on account of or associated with the use or inability to use the covered content (including, without limitation, the use of information or content made available by the covered code, all documentation associated therewith, and the failure of the covered code to comply with privacy laws and regulations or clinical care industry standards and protocols), even if such party shall have been informed of the possibility of such damages.</li>\n            </ol>\n        </p>\n    </div>\n</body>\n</html>\n\n"
        },
        {
          "name": "acl_upgrade.php",
          "type": "blob",
          "size": 53.6279296875,
          "content": "<?php\n\n/**\n * Upgrade script for access controls.\n *\n * This script will update the phpGACL database, which include\n * Access Control Objects(ACO), Groups(ARO), and Access Control\n * Lists(ACL) to the most recent version.\n * It will display whether each update already exist\n * or if it was updated successfully.\n * To avoid reversing customizations, upgrade is done in versions,\n * which are recorded in the database. To add another version of\n * changes, use the following template:\n * <pre>// Upgrade for acl_version <acl_version_here>\n * $upgrade_acl = <acl_version_here>;\n * if ($acl_version < $upgrade_acl) {\n *   echo \"<B>UPGRADING ACCESS CONTROLS TO VERSION \".$upgrade_acl.\":</B></BR>\";\n *\n *   //Collect the ACL ID numbers.\n *   echo \"<B>Checking to ensure all the proper ACL(access control list) are present:</B></BR>\";\n *\n *   //Add new object Sections\n *   echo \"<BR/><B>Adding new object sections</B><BR/>\";\n *\n *   //Add new Objects\n *   echo \"<BR/><B>Adding new objects</B><BR/>\";\n *\n *   //Update already existing Objects\n *   echo \"<BR/><B>Upgrading objects</B><BR/>\";\n *\n *   //Add new ACLs here (will return the ACL ID of newly created or already existant ACL)\n *   // (will also place in the appropriate group and CREATE a new group if needed)\n *   echo \"<BR/><B>Adding ACLs(Access Control Lists) and groups</B><BR/>\";\n *\n *   //Update the ACLs\n *   echo \"<BR/><B>Updating the ACLs(Access Control Lists)</B><BR/>\";\n *\n *   //DONE with upgrading to this version\n *   $acl_version = $upgrade_acl;\n * }\n * </pre>\n *\n * See header in src/Common/Acl/AclMain.php for list of ACOs\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2012-2017 Brady Miller <brady.g.miller@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\n// Checks if the server's PHP version is compatible with OpenEMR:\nrequire_once(dirname(__FILE__) . \"/src/Common/Compatibility/Checker.php\");\n$response = OpenEMR\\Common\\Compatibility\\Checker::checkPhpVersion();\nif ($response !== true) {\n    die(htmlspecialchars($response));\n}\n\n$ignoreAuth = true; // no login required\n\nrequire_once('interface/globals.php');\n\nuse OpenEMR\\Common\\Acl\\AclExtended;\n\n$acl_version = AclExtended::getAclVersion();\nif (empty($acl_version)) {\n    $acl_version = 0;\n}\n\n// Upgrade for acl_version 1\n$upgrade_acl = 1;\nif ($acl_version < $upgrade_acl) {\n    echo \"<B>UPGRADING ACCESS CONTROLS TO VERSION \" . $upgrade_acl . \":</B></BR>\";\n\n    //Collect the ACL ID numbers.\n    echo \"<B>Checking to ensure all the proper ACL(access control list) are present:</B></BR>\";\n    //Get Administrator ACL ID number\n    $admin_write = AclExtended::getAclIdNumber('Administrators', 'write');\n    //Get Doctor ACL ID Number\n    $doc_write = AclExtended::getAclIdNumber('Physicians', 'write');\n    //Get Clinician ACL with write access ID number\n    $clin_write = AclExtended::getAclIdNumber('Clinicians', 'write');\n    //Get Clinician ACL with addonly access ID number\n    $clin_addonly = AclExtended::getAclIdNumber('Clinicians', 'addonly');\n    //Get Receptionist ACL ID number\n    $front_write = AclExtended::getAclIdNumber('Front Office', 'write');\n    //Get Accountant ACL ID number\n    $back_write = AclExtended::getAclIdNumber('Accounting', 'write');\n\n    //Add new object Sections\n    echo \"<BR/><B>Adding new object sections</B><BR/>\";\n    //Add 'Sensitivities' object section (added in 2.8.2)\n    AclExtended::addObjectSectionAcl('sensitivities', 'Sensitivities');\n    //Add 'Lists' object section (added in 3.0.2)\n    AclExtended::addObjectSectionAcl('lists', 'Lists');\n    //Add 'Placeholder' object section (added in 3.0.2)\n    AclExtended::addObjectSectionAcl('placeholder', 'Placeholder');\n    //Add 'Nation Notes' object section (added in 4.1.0)\n    AclExtended::addObjectSectionAcl('nationnotes', 'Nation Notes');\n    //Add 'Patient Portal' object section (added in 4.1.0)\n    AclExtended::addObjectSectionAcl('patientportal', 'Patient Portal');\n\n    //Add new Objects\n    echo \"<BR/><B>Adding new objects</B><BR/>\";\n    //Add 'Normal' sensitivity object, order variable is default 10 (added in 2.8.2)\n    AclExtended::addObjectAcl('sensitivities', 'Sensitivities', 'normal', 'Normal');\n    //Add 'High' sensitivity object, order variable is set to 20 (added in 2.8.2)\n    AclExtended::addObjectAclWithOrder('sensitivities', 'Sensitivities', 'high', 'High', 20);\n    //Add 'Pharmacy Dispensary' object (added in 2.8.4)\n    AclExtended::addObjectAcl('admin', 'Administration', 'drugs', 'Pharmacy Dispensary');\n    //Add 'ACL Administration' object (added in 2.8.4)\n    AclExtended::addObjectAcl('admin', 'Administration', 'acl', 'ACL Administration');\n    //Add 'Price Discounting' object (added in 2.8.4)\n    AclExtended::addObjectAcl('acct', 'Accounting', 'disc', 'Price Discounting');\n    //Add 'Default List (write,addonly optional)' object (added in 3.0.2)\n    AclExtended::addObjectAcl('lists', 'Lists', 'default', 'Default List (write,addonly optional)');\n    //Add 'State List (write,addonly optional)' object (added in 3.0.2)\n    AclExtended::addObjectAcl('lists', 'Lists', 'state', 'State List (write,addonly optional)');\n    //Add 'Country List (write,addonly optional)' object (added in 3.0.2)\n    AclExtended::addObjectAcl('lists', 'Lists', 'country', 'Country List (write,addonly optional)');\n    //Add 'Language List (write,addonly optional)' object (added in 3.0.2)\n    AclExtended::addObjectAcl('lists', 'Lists', 'language', 'Language List (write,addonly optional)');\n    //Add 'Ethnicity-Race List (write,addonly optional)' object (added in 3.0.2)\n    AclExtended::addObjectAcl('lists', 'Lists', 'ethrace', 'Ethnicity-Race List (write,addonly optional)');\n    //Add 'Placeholder (Maintains empty ACLs)' object (added in 3.0.2)\n    AclExtended::addObjectAcl('placeholder', 'Placeholder', 'filler', 'Placeholder (Maintains empty ACLs)');\n    //Add 'Sign Lab Results (write,addonly optional)' object (added in 3.3.0)\n    AclExtended::addObjectAcl('patients', 'Patients', 'sign', 'Sign Lab Results (write,addonly optional)');\n    //Add 'nationnotes' object (added in 4.1.0)\n    AclExtended::addObjectAcl('nationnotes', 'Nation Notes', 'nn_configure', 'Nation Notes Configure');\n    //Add 'patientportal' object (added in 4.1.0)\n    AclExtended::addObjectAcl('patientportal', 'Patient Portal', 'portal', 'Patient Portal');\n\n    //Update already existing Objects\n    echo \"<BR/><B>Upgrading objects</B><BR/>\";\n    //Ensure that 'High' sensitivity object order variable is set to 20\n    AclExtended::editObjectAcl('sensitivities', 'Sensitivities', 'high', 'High', 20);\n\n    //Add new ACLs here (will return the ACL ID of newly created or already existant ACL)\n    // (will also place in the appropriate group and CREATE a new group if needed)\n    echo \"<BR/><B>Adding ACLs(Access Control Lists) and groups</B><BR/>\";\n    //Add 'Physicians' ACL with 'addonly' and collect the ID number (added in 3.0.2)\n    $doc_addonly = AclExtended::addNewACL('Physicians', 'doc', 'addonly', 'Things that physicians can read and enter but not modify');\n    //Add 'Front Office' ACL with 'addonly' and collect the ID number (added in 3.0.2)\n    $front_addonly = AclExtended::addNewACL('Front Office', 'front', 'addonly', 'Things that front office can read and enter but not modify');\n    //Add 'Accounting' ACL with 'addonly' and collect the ID number (added in 3.0.2)\n    $back_addonly = AclExtended::addNewACL('Accounting', 'back', 'addonly', 'Things that back office can read and enter but not modify');\n    //Add 'Emergency Login' ACL with 'write' and collect the ID number (added in 3.3.0)\n    $emergency_write = AclExtended::addNewACL('Emergency Login', 'breakglass', 'write', 'Things that can use for emergency login, can read and modify');\n\n    //Update the ACLs\n    echo \"<BR/><B>Updating the ACLs(Access Control Lists)</B><BR/>\";\n    //Insert the 'super' object from the 'admin' section into the Administrators group write ACL (added in 2.8.2)\n    AclExtended::updateAcl($admin_write, 'Administrators', 'admin', 'Administration', 'super', 'Superuser', 'write');\n    //Insert the 'high' object from the 'sensitivities' section into the Administrators group write ACL (added in 2.8.2)\n    AclExtended::updateAcl($admin_write, 'Administrators', 'sensitivities', 'Sensitivities', 'high', 'High', 'write');\n    //Insert the 'normal' object from the 'sensitivities' section into the Administrators group write ACL (added in 2.8.2)\n    AclExtended::updateAcl($admin_write, 'Administrators', 'sensitivities', 'Sensitivities', 'normal', 'Normal', 'write');\n    //Insert the 'high' object from the 'sensitivities' section into the Physicians group write ACL (added in 2.8.2)\n    AclExtended::updateAcl($doc_write, 'Physicians', 'sensitivities', 'Sensitivities', 'high', 'High', 'write');\n    //Insert the 'normal' object from the 'sensitivities' section into the Physicians group write ACL (added in 2.8.2)\n    AclExtended::updateAcl($doc_write, 'Physicians', 'sensitivities', 'Sensitivities', 'normal', 'Normal', 'write');\n    //Insert the 'normal' object from the 'sensitivities' section into the Clinicians group  addonly ACL (added in 2.8.2)\n    AclExtended::updateAcl($clin_addonly, 'Clinicians', 'sensitivities', 'Sensitivities', 'normal', 'Normal', 'addonly');\n    //Insert the 'drugs' object from the 'admin' section into the Administrators group write ACL (added in 2.8.4)\n    AclExtended::updateAcl($admin_write, 'Administrators', 'admin', 'Administration', 'drugs', 'Pharmacy Dispensary', 'write');\n    //Insert the 'drugs' object from the 'admin' section into the Physicians group write ACL (added in 2.8.4)\n    AclExtended::updateAcl($doc_write, 'Physicians', 'admin', 'Administration', 'drugs', 'Pharmacy Dispensary', 'write');\n    //Insert the 'drugs' object from the 'admin' section into the Clinicians group write ACL (added in 2.8.4)\n    AclExtended::updateAcl($clin_write, 'Clinicians', 'admin', 'Administration', 'drugs', 'Pharmacy Dispensary', 'write');\n    //Insert the 'acl' object from the 'admin' section into the Administrators group write ACL (added in 2.8.4)\n    AclExtended::updateAcl($admin_write, 'Administrators', 'admin', 'Administration', 'acl', 'ACL Administration', 'write');\n    //Insert the 'disc' object from the 'acct' section into the Administrators group write ACL (added in 2.8.4)\n    AclExtended::updateAcl($admin_write, 'Administrators', 'acct', 'Accounting', 'disc', 'Price Discounting', 'write');\n    //Insert the 'disc' object from the 'acct' section into the Accounting group write ACL (added in 2.8.4)\n    AclExtended::updateAcl($back_write, 'Accounting', 'acct', 'Accounting', 'disc', 'Price Discounting', 'write');\n    //Insert the 'disc' object from the 'acct' section into the Physicians group write ACL (added in 2.8.4)\n    AclExtended::updateAcl($doc_write, 'Physicians', 'acct', 'Accounting', 'disc', 'Price Discounting', 'write');\n    //Insert the 'default' object from the 'lists' section into the Administrators group write ACL (added in 3.0.2)\n    AclExtended::updateAcl($admin_write, 'Administrators', 'lists', 'Lists', 'default', 'Default List (write,addonly optional)', 'write');\n    //Insert the 'state' object from the 'lists' section into the Administrators group write ACL (added in 3.0.2)\n    AclExtended::updateAcl($admin_write, 'Administrators', 'lists', 'Lists', 'state', 'State List (write,addonly optional)', 'write');\n    //Insert the 'country' object from the 'lists' section into the Administrators group write ACL (added in 3.0.2)\n    AclExtended::updateAcl($admin_write, 'Administrators', 'lists', 'Lists', 'country', 'Country List (write,addonly optional)', 'write');\n    //Insert the 'language' object from the 'lists' section into the Administrators group write ACL (added in 3.0.2)\n    AclExtended::updateAcl($admin_write, 'Administrators', 'lists', 'Lists', 'language', 'Language List (write,addonly optional)', 'write');\n    //Insert the 'race' object from the 'lists' section into the Administrators group write ACL (added in 3.0.2)\n    AclExtended::updateAcl($admin_write, 'Administrators', 'lists', 'Lists', 'ethrace', 'Ethnicity-Race List (write,addonly optional)', 'write');\n    //Update ACLs for Emergency Login\n    //Insert the 'disc' object from the 'acct' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'acct', 'Accounting', 'disc', 'Price Discounting', 'write');\n    //Insert the 'bill' object from the 'acct' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'acct', 'Accounting', 'bill', 'Billing (write optional)', 'write');\n    //Insert the 'eob' object from the 'acct' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'acct', 'Accounting', 'eob', 'EOB Data Entry', 'write');\n    //Insert the 'rep' object from the 'acct' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'acct', 'Accounting', 'rep', 'Financial Reporting - my encounters', 'write');\n    //Insert the 'rep_a' object from the 'acct' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'acct', 'Accounting', 'rep_a', 'Financial Reporting - anything', 'write');\n    //Insert the 'calendar' object from the 'admin' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'admin', 'Administration', 'calendar', 'Calendar Settings', 'write');\n    //Insert the 'database' object from the 'admin' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'admin', 'Administration', 'database', 'Database Reporting', 'write');\n    //Insert the 'forms' object from the 'admin' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'admin', 'Administration', 'forms', 'Forms Administration', 'write');\n    //Insert the 'practice' object from the 'admin' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'admin', 'Administration', 'practice', 'Practice Settings', 'write');\n    //Insert the 'superbill' object from the 'admin' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'admin', 'Administration', 'superbill', 'Superbill Codes Administration', 'write');\n    //Insert the 'users' object from the 'admin' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'admin', 'Administration', 'users', 'Users/Groups/Logs Administration', 'write');\n    //Insert the 'batchcom' object from the 'admin' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'admin', 'Administration', 'batchcom', 'Batch Communication Tool', 'write');\n    //Insert the 'language' object from the 'admin' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'admin', 'Administration', 'language', 'Language Interface Tool', 'write');\n    //Insert the 'super' object from the 'admin' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'admin', 'Administration', 'super', 'Superuser', 'write');\n    //Insert the 'drugs' object from the 'admin' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'admin', 'Administration', 'drugs', 'Pharmacy Dispensary', 'write');\n    //Insert the 'acl' object from the 'admin' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'admin', 'Administration', 'acl', 'ACL Administration', 'write');\n    //Insert the 'auth_a' object from the 'encounters' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'encounters', 'Encounters', 'auth_a', 'Authorize - any encounters', 'write');\n    //Insert the 'coding_a' object from the 'encounters' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'encounters', 'Encounters', 'coding_a', 'Coding - any encounters (write,wsome optional)', 'write');\n    //Insert the 'notes_a' object from the 'encounters' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'encounters', 'Encounters', 'notes_a', 'Notes - any encounters (write,addonly optional)', 'write');\n    //Insert the 'date_a' object from the 'encounters' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'encounters', 'Encounters', 'date_a', 'Fix encounter dates - any encounters', 'write');\n    //Insert the 'default' object from the 'lists' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'lists', 'Lists', 'default', 'Default List (write,addonly optional)', 'write');\n    //Insert the 'state' object from the 'lists' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'lists', 'Lists', 'state', 'State List (write,addonly optional)', 'write');\n    //Insert the 'country' object from the 'lists' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'lists', 'Lists', 'country', 'Country List (write,addonly optional)', 'write');\n    //Insert the 'language' object from the 'lists' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'lists', 'Lists', 'language', 'Language List (write,addonly optional)', 'write');\n    //Insert the 'ethrace' object from the 'lists' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'lists', 'Lists', 'ethrace', 'Ethnicity-Race List (write,addonly optional)', 'write');\n    //Insert the 'appt' object from the 'patients' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patients', 'Patients', 'appt', 'Appointments (write,wsome optional)', 'write');\n    //Insert the 'demo' object from the 'patients' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patients', 'Patients', 'demo', 'Demographics (write,addonly optional)', 'write');\n    //Insert the 'med' object from the 'patients' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patients', 'Patients', 'med', 'Medical/History (write,addonly optional)', 'write');\n    //Insert the 'trans' object from the 'patients' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patients', 'Patients', 'trans', 'Transactions (write optional)', 'write');\n    //Insert the 'docs' object from the 'patients' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patients', 'Patients', 'docs', 'Documents (write,addonly optional)', 'write');\n    //Insert the 'notes' object from the 'patients' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patients', 'Patients', 'notes', 'Patient Notes (write,addonly optional)', 'write');\n    //Insert the 'high' object from the 'sensitivities' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'sensitivities', 'Sensitivities', 'high', 'High', 'write');\n    //Insert the 'normal' object from the 'sensitivities' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'sensitivities', 'Sensitivities', 'normal', 'Normal', 'write');\n    //Insert the 'sign' object from the 'patients' section into the Physicians group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($doc_write, 'Physicians', 'patients', 'Patients', 'sign', 'Sign Lab Results (write,addonly optional)', 'write');\n    //Insert the 'sign' object from the 'nationnotes' section into the Administrators group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($admin_write, 'Administrators', 'nationnotes', 'Nation Notes', 'nn_configure', 'Nation Notes Configure', 'write');\n    //Insert the 'sign' object from the 'nationnotes' section into the Emergency Login group write ACL (added in 3.3.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'nationnotes', 'Nation Notes', 'nn_configure', 'Nation Notes Configure', 'write');\n    //Insert the 'patientportal' object from the 'patientportal' section into the Administrators group write ACL (added in 4.1.0)\n    AclExtended::updateAcl($admin_write, 'Administrators', 'patientportal', 'Patient Portal', 'portal', 'Patient Portal', 'write');\n    //Insert the 'patientportal' object from the 'patientportal' section into the Emergency Login group write ACL (added in 4.1.0)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patientportal', 'Patient Portal', 'portal', 'Patient Portal', 'write');\n\n    //DONE with upgrading to this version\n    $acl_version = $upgrade_acl;\n}\n\n// Upgrade for acl_version 2\n$upgrade_acl = 2;\nif ($acl_version < $upgrade_acl) {\n    echo \"<B>UPGRADING ACCESS CONTROLS TO VERSION \" . $upgrade_acl . \":</B></BR>\";\n\n    //Collect the ACL ID numbers.\n    echo \"<B>Checking to ensure all the proper ACL(access control list) are present:</B></BR>\";\n\n    //Add new object Sections\n    echo \"<BR/><B>Adding new object sections</B><BR/>\";\n\n    //Add new Objects\n    echo \"<BR/><B>Adding new objects</B><BR/>\";\n\n    //Update already existing Objects\n    echo \"<BR/><B>Upgrading objects</B><BR/>\";\n\n    //Add new ACLs here (will return the ACL ID of newly created or already existant ACL)\n    // (will also place in the appropriate group and CREATE a new group if needed)\n    echo \"<BR/><B>Adding ACLs(Access Control Lists) and groups</B><BR/>\";\n    AclExtended::addNewACL('Physicians', 'doc', 'wsome', 'Things that physicians can read and partly modify');\n    AclExtended::addNewACL('Clinicians', 'clin', 'wsome', 'Things that clinicians can read and partly modify');\n    AclExtended::addNewACL('Front Office', 'front', 'wsome', 'Things that front office can read and partly modify');\n    AclExtended::addNewACL('Accounting', 'back', 'wsome', 'Things that back office can read and partly modify');\n    AclExtended::addNewACL('Physicians', 'doc', 'view', 'Things that physicians can only read');\n    AclExtended::addNewACL('Clinicians', 'clin', 'view', 'Things that clinicians can only read');\n    AclExtended::addNewACL('Front Office', 'front', 'view', 'Things that front office can only read');\n    AclExtended::addNewACL('Accounting', 'back', 'view', 'Things that back office can only read');\n\n    //Update the ACLs\n    echo \"<BR/><B>Updating the ACLs(Access Control Lists)</B><BR/>\";\n\n    //DONE with upgrading to this version\n    $acl_version = $upgrade_acl;\n}\n\n// Upgrade for acl_version 3\n$upgrade_acl = 3;\nif ($acl_version < $upgrade_acl) {\n    echo \"<B>UPGRADING ACCESS CONTROLS TO VERSION \" . $upgrade_acl . \":</B></BR>\";\n\n    //Collect the ACL ID numbers.\n    echo \"<B>Checking to ensure all the proper ACL(access control list) are present:</B></BR>\";\n    //Get Administrator ACL ID number\n    $admin_write = AclExtended::getAclIdNumber('Administrators', 'write');\n    //Get Emergency ACL ID number\n    $emergency_write = AclExtended::getAclIdNumber('Emergency Login', 'write');\n\n    //Add new object Sections\n    echo \"<BR/><B>Adding new object sections</B><BR/>\";\n    //Add 'Menus' object section (added in 4.1.3)\n    AclExtended::addObjectSectionAcl('menus', 'Menus');\n\n    //Add new Objects\n    echo \"<BR/><B>Adding new objects</B><BR/>\";\n    //Add 'modules' object (added in 4.1.3)\n    AclExtended::addObjectAcl('menus', 'Menus', 'modle', 'Modules');\n\n    //Update already existing Objects\n    echo \"<BR/><B>Upgrading objects</B><BR/>\";\n\n    //Add new ACLs here (will return the ACL ID of newly created or already existant ACL)\n    // (will also place in the appropriate group and CREATE a new group if needed)\n    echo \"<BR/><B>Adding ACLs(Access Control Lists) and groups</B><BR/>\";\n\n    //Update the ACLs\n    echo \"<BR/><B>Updating the ACLs(Access Control Lists)</B><BR/>\";\n    //Insert the 'Modules' object from the 'Menus' section into the Administrators group write ACL (added in 4.1.3)\n    AclExtended::updateAcl($admin_write, 'Administrators', 'menus', 'Menus', 'modle', 'Modules', 'write');\n    //Insert the 'Modules' object from the 'Menus' section into the Emergency Login group write ACL (added in 4.1.3)\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'menus', 'Menus', 'modle', 'Modules', 'write');\n\n    //DONE with upgrading to this version\n    $acl_version = $upgrade_acl;\n}\n\n// Upgrade for acl_version 4\n$upgrade_acl = 4;\nif ($acl_version < $upgrade_acl) {\n    echo \"<B>UPGRADING ACCESS CONTROLS TO VERSION \" . $upgrade_acl . \":</B></BR>\";\n\n    //Collect the ACL ID numbers.\n    echo \"<B>Checking to ensure all the proper ACL(access control list) are present:</B></BR>\";\n    //Get Administrator ACL ID number\n    $admin_write = AclExtended::getAclIdNumber('Administrators', 'write');\n    //Get Doctor ACL ID Number\n    $doc_write = AclExtended::getAclIdNumber('Physicians', 'write');\n    //Get Clinician ACL with write access ID number\n    $clin_write = AclExtended::getAclIdNumber('Clinicians', 'write');\n    //Get Clinician ACL with addonly access ID number\n    $clin_addonly = AclExtended::getAclIdNumber('Clinicians', 'addonly');\n    //Get Receptionist ACL ID number\n    $front_write = AclExtended::getAclIdNumber('Front Office', 'write');\n    //Get Accountant ACL ID number\n    $back_write = AclExtended::getAclIdNumber('Accounting', 'write');\n\n    //Add new object Sections\n    // echo \"<BR/><B>Adding new object sections</B><BR/>\";\n\n    //Add new Objects\n    echo \"<BR/><B>Adding new objects</B><BR/>\";\n    // Add 'Patient Reminders (write,addonly optional)' object (added in 5.0.1)\n    AclExtended::addObjectAcl('patients', 'Patients', 'reminder', 'Patient Reminders (write,addonly optional)');\n    // Add 'Clinical Reminders/Alerts (write,addonly optional)' object (added in 5.0.1)\n    AclExtended::addObjectAcl('patients', 'Patients', 'alert', 'Clinical Reminders/Alerts (write,addonly optional)');\n    // Add 'Disclosures (write,addonly optional)' object (added in 5.0.1)\n    AclExtended::addObjectAcl('patients', 'Patients', 'disclosure', 'Disclosures (write,addonly optional)');\n    // Add 'Prescriptions (write,addonly optional)' object (added in 5.0.1)\n    AclExtended::addObjectAcl('patients', 'Patients', 'rx', 'Prescriptions (write,addonly optional)');\n    // Add 'Amendments (write,addonly optional)' object (added in 5.0.1)\n    AclExtended::addObjectAcl('patients', 'Patients', 'amendment', 'Amendments (write,addonly optional)');\n    // Add 'Lab Results (write,addonly optional)' object (added in 5.0.1)\n    AclExtended::addObjectAcl('patients', 'Patients', 'lab', 'Lab Results (write,addonly optional)');\n\n    //Update already existing Objects\n    // echo \"<BR/><B>Upgrading objects</B><BR/>\";\n\n    //Add new ACLs here (will return the ACL ID of newly created or already existant ACL)\n    // (will also place in the appropriate group and CREATE a new group if needed)\n    // echo \"<BR/><B>Adding ACLs(Access Control Lists) and groups</B><BR/>\";\n\n    //Update the ACLs\n    echo \"<BR/><B>Updating the ACLs(Access Control Lists)</B><BR/>\";\n    //Insert the 'reminder' object from the 'patients' section into the Physicians group write ACL (added in 5.0.1)\n    AclExtended::updateAcl($doc_write, 'Physicians', 'patients', 'Patients', 'reminder', 'Patient Reminders (write,addonly optional)', 'write');\n    //Insert the 'alert' object from the 'patients' section into the Physicians group write ACL (added in 5.0.1)\n    AclExtended::updateAcl($doc_write, 'Physicians', 'patients', 'Patients', 'alert', 'Clinical Reminders/Alerts (write,addonly optional)', 'write');\n    //Insert the 'disclosure' object from the 'patients' section into the Physicians group write ACL (added in 5.0.1)\n    AclExtended::updateAcl($doc_write, 'Physicians', 'patients', 'Patients', 'disclosure', 'Disclosures (write,addonly optional)', 'write');\n    //Insert the 'rx' object from the 'patients' section into the Physicians group write ACL (added in 5.0.1)\n    AclExtended::updateAcl($doc_write, 'Physicians', 'patients', 'Patients', 'rx', 'Prescriptions (write,addonly optional)', 'write');\n    //Insert the 'amendment' object from the 'patients' section into the Physicians group write ACL (added in 5.0.1)\n    AclExtended::updateAcl($doc_write, 'Physicians', 'patients', 'Patients', 'amendment', 'Amendments (write,addonly optional)', 'write');\n    //Insert the 'lab' object from the 'patients' section into the Physicians group write ACL (added in 5.0.1)\n    AclExtended::updateAcl($doc_write, 'Physicians', 'patients', 'Patients', 'lab', 'Lab Results (write,addonly optional)', 'write');\n    //DONE with upgrading to this version\n    $acl_version = $upgrade_acl;\n}\n\n //This is a template for a new revision, when needed\n// Upgrade for acl_version 5\n$upgrade_acl = 5;\nif ($acl_version < $upgrade_acl) {\n    echo \"<B>UPGRADING ACCESS CONTROLS TO VERSION \" . $upgrade_acl . \":</B></BR>\";\n\n    //Collect the ACL ID numbers.\n    echo \"<B>Checking to ensure all the proper ACL(access control list) are present:</B></BR>\";\n    //Get Accountant ACL ID number\n    $admin_write = AclExtended::getAclIdNumber('Administrators', 'write');\n\n\n    //Add new object Sections\n    echo \"<BR/><B>Adding new object sections</B><BR/>\";\n    // Add 'Groups' object (added in 5.0.1)\n    AclExtended::addObjectSectionAcl('groups', 'Groups');\n\n\n    //Add new Objects\n    echo \"<BR/><B>Adding new objects</B><BR/>\";\n    // Add 'Multipledb' object (added in 5.0.1)\n    AclExtended::addObjectAcl('admin', 'Administration', 'multipledb', 'Multipledb');\n    AclExtended::addObjectAcl('groups', 'Groups', 'gadd', 'View/Add/Update groups');\n    AclExtended::addObjectAcl('groups', 'Groups', 'gcalendar', 'View/Create/Update groups appointment in calendar');\n    AclExtended::addObjectAcl('groups', 'Groups', 'glog', 'Group encounter log');\n    AclExtended::addObjectAcl('groups', 'Groups', 'gdlog', 'Group detailed log of appointment in patient record');\n    AclExtended::addObjectAcl('groups', 'Groups', 'gm', 'Send message from the permanent group therapist to the personal therapist');\n    //Update already existing Objects\n    echo \"<BR/><B>Upgrading objects</B><BR/>\";\n\n    //Add new ACLs here (will return the ACL ID of newly created or already existant ACL)\n    // (will also place in the appropriate group and CREATE a new group if needed)\n    echo \"<BR/><B>Adding ACLs(Access Control Lists) and groups</B><BR/>\";\n\n    //Update the ACLs\n    echo \"<BR/><B>Updating the ACLs(Access Control Lists)</B><BR/>\";\n    AclExtended::updateAcl($admin_write, 'Administrators', 'groups', 'Groups', 'gadd', 'View/Add/Update groups', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'groups', 'Groups', 'gcalendar', 'View/Create/Update groups appointment in calendar', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'groups', 'Groups', 'glog', 'Group encounter log', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'groups', 'Groups', 'gdlog', 'Group detailed log of appointment in patient record', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'groups', 'Groups', 'gm', 'Send message from the permanent group therapist to the personal therapist', 'write');\n    //Insert the 'Multipledb' object from the 'admin' section into the Administrators group write ACL (added in 5.0.1)\n    AclExtended::updateAcl($admin_write, 'Administrators', 'admin', 'Administration', 'multipledb', 'Multipledb', 'write');\n    //DONE with upgrading to this version\n    $acl_version = $upgrade_acl;\n}\n\n// Upgrade for acl_version 6\n$upgrade_acl = 6;\nif ($acl_version < $upgrade_acl) {\n    echo \"<B>UPGRADING ACCESS CONTROLS TO VERSION \" . $upgrade_acl . \":</B></BR>\";\n\n    //Collect the ACL ID numbers.\n    echo \"<B>Checking to ensure all the proper ACL(access control list) are present:</B></BR>\";\n    $admin_write = AclExtended::getAclIdNumber('Administrators', 'write');\n    $doc_write = AclExtended::getAclIdNumber('Physicians', 'write');\n    $clin_addonly = AclExtended::getAclIdNumber('Clinicians', 'addonly');\n    $clin_write = AclExtended::getAclIdNumber('Clinicians', 'write');\n    $front_view = AclExtended::getAclIdNumber('Front Office', 'view');\n    $front_write = AclExtended::getAclIdNumber('Front Office', 'write');\n    $back_view = AclExtended::getAclIdNumber('Accounting', 'view');\n    $emergency_write = AclExtended::getAclIdNumber('Emergency Login', 'write');\n\n    //Add new object Sections\n    echo \"<BR/><B>Adding new object sections</B><BR/>\";\n    AclExtended::addObjectAcl('admin', 'Administration', 'menu', 'Menu');\n\n    //Add new Objects\n    echo \"<BR/><B>Adding new objects</B><BR/>\";\n\n    //Update already existing Objects\n    echo \"<BR/><B>Upgrading objects</B><BR/>\";\n\n    //Add new ACLs here (will return the ACL ID of newly created or already existant ACL)\n    // (will also place in the appropriate group and CREATE a new group if needed)\n    echo \"<BR/><B>Adding ACLs(Access Control Lists) and groups</B><BR/>\";\n\n    //Update the ACLs\n    echo \"<BR/><B>Updating the ACLs(Access Control Lists)</B><BR/>\";\n    AclExtended::updateAcl($admin_write, 'Administrators', 'admin', 'Administration', 'menu', 'Menu', 'write');\n\n    AclExtended::updateAcl($admin_write, 'Administrators', 'encounters', 'Encounters', 'auth', 'Authorize - my encounters', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'encounters', 'Encounters', 'coding', 'Coding - my encounters (write,wsome optional)', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'encounters', 'Encounters', 'notes', 'Notes - my encounters (write,addonly optional)', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'encounters', 'Encounters', 'relaxed', 'Less-private information (write,addonly optional)', 'write');\n\n    AclExtended::updateAcl($admin_write, 'Administrators', 'patients', 'Patients', 'sign', 'Sign Lab Results (write,addonly optional)', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'patients', 'Patients', 'reminder', 'Patient Reminders (write,addonly optional)', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'patients', 'Patients', 'alert', 'Clinical Reminders/Alerts (write,addonly optional)', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'patients', 'Patients', 'disclosure', 'Disclosures (write,addonly optional)', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'patients', 'Patients', 'rx', 'Prescriptions (write,addonly optional)', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'patients', 'Patients', 'amendment', 'Amendments (write,addonly optional)', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'patients', 'Patients', 'lab', 'Lab Results (write,addonly optional)', 'write');\n\n    AclExtended::updateAcl($doc_write, 'Physicians', 'encounters', 'Encounters', 'auth', 'Authorize - my encounters', 'write');\n    AclExtended::updateAcl($doc_write, 'Physicians', 'encounters', 'Encounters', 'coding', 'Coding - my encounters (write,wsome optional)', 'write');\n    AclExtended::updateAcl($doc_write, 'Physicians', 'encounters', 'Encounters', 'notes', 'Notes - my encounters (write,addonly optional)', 'write');\n    AclExtended::updateAcl($doc_write, 'Physicians', 'encounters', 'Encounters', 'relaxed', 'Less-private information (write,addonly optional)', 'write');\n\n    AclExtended::updateAcl($doc_write, 'Physicians', 'groups', 'Groups', 'gcalendar', 'View/Create/Update groups appointment in calendar', 'write');\n    AclExtended::updateAcl($doc_write, 'Physicians', 'groups', 'Groups', 'glog', 'Group encounter log', 'write');\n\n    AclExtended::updateAcl($clin_addonly, 'Clinicians', 'patients', 'Patients', 'trans', 'Transactions (write optional)', 'addonly');\n    AclExtended::updateAcl($clin_addonly, 'Clinicians', 'patients', 'Patients', 'reminder', 'Patient Reminders (write,addonly optional)', 'addonly');\n    AclExtended::updateAcl($clin_addonly, 'Clinicians', 'patients', 'Patients', 'alert', 'Clinical Reminders/Alerts (write,addonly optional)', 'addonly');\n    AclExtended::updateAcl($clin_addonly, 'Clinicians', 'patients', 'Patients', 'disclosure', 'Disclosures (write,addonly optional)', 'addonly');\n    AclExtended::updateAcl($clin_addonly, 'Clinicians', 'patients', 'Patients', 'rx', 'Prescriptions (write,addonly optional)', 'addonly');\n    AclExtended::updateAcl($clin_addonly, 'Clinicians', 'patients', 'Patients', 'amendment', 'Amendments (write,addonly optional)', 'addonly');\n    AclExtended::updateAcl($clin_addonly, 'Clinicians', 'patients', 'Patients', 'lab', 'Lab Results (write,addonly optional)', 'addonly');\n\n    AclExtended::updateAcl($clin_write, 'Clinicians', 'groups', 'Groups', 'gcalendar', 'View/Create/Update groups appointment in calendar', 'write');\n    AclExtended::updateAcl($clin_write, 'Clinicians', 'groups', 'Groups', 'glog', 'Group encounter log', 'write');\n\n    AclExtended::updateAcl($front_view, 'Front Office', 'patients', 'Patients', 'alert', 'Clinical Reminders/Alerts (write,addonly optional)', 'view');\n\n    AclExtended::updateAcl($front_write, 'Front Office', 'groups', 'Groups', 'gcalendar', 'View/Create/Update groups appointment in calendar', 'write');\n\n    AclExtended::updateAcl($back_view, 'Accounting', 'patients', 'Patients', 'alert', 'Clinical Reminders/Alerts (write,addonly optional)', 'view');\n\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'admin', 'Administration', 'multipledb', 'Multipledb', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'admin', 'Administration', 'menu', 'Menu', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'encounters', 'Encounters', 'auth', 'Authorize - my encounters', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'encounters', 'Encounters', 'coding', 'Coding - my encounters (write,wsome optional)', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'encounters', 'Encounters', 'notes', 'Notes - my encounters (write,addonly optional)', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'encounters', 'Encounters', 'relaxed', 'Less-private information (write,addonly optional)', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patients', 'Patients', 'sign', 'Sign Lab Results (write,addonly optional)', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patients', 'Patients', 'reminder', 'Patient Reminders (write,addonly optional)', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patients', 'Patients', 'alert', 'Clinical Reminders/Alerts (write,addonly optional)', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patients', 'Patients', 'disclosure', 'Disclosures (write,addonly optional)', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patients', 'Patients', 'rx', 'Prescriptions (write,addonly optional)', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patients', 'Patients', 'amendment', 'Amendments (write,addonly optional)', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patients', 'Patients', 'lab', 'Lab Results (write,addonly optional)', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'groups', 'Groups', 'gadd', 'View/Add/Update groups', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'groups', 'Groups', 'gcalendar', 'View/Create/Update groups appointment in calendar', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'groups', 'Groups', 'glog', 'Group encounter log', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'groups', 'Groups', 'gdlog', 'Group detailed log of appointment in patient record', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'groups', 'Groups', 'gm', 'Send message from the permanent group therapist to the personal therapist', 'write');\n\n    //DONE with upgrading to this version\n    $acl_version = $upgrade_acl;\n}\n\n\n// Upgrade for acl_version 7\n$upgrade_acl = 7;\nif ($acl_version < $upgrade_acl) {\n    echo \"<B>UPGRADING ACCESS CONTROLS TO VERSION \" . $upgrade_acl . \":</B></BR>\";\n\n    //Collect the ACL ID numbers.\n    echo \"<B>Checking to ensure all the proper ACL(access control list) are present:</B></BR>\";\n    $admin_write = AclExtended::getAclIdNumber('Administrators', 'write');\n    $emergency_write = AclExtended::getAclIdNumber('Emergency Login', 'write');\n\n    //Add new object Sections\n    echo \"<BR/><B>Adding new object sections</B><BR/>\";\n    AclExtended::addObjectAcl('admin', 'Administration', 'manage_modules', 'Manage modules');\n\n    //Add new Objects\n    echo \"<BR/><B>Adding new objects</B><BR/>\";\n\n    //Update already existing Objects\n    echo \"<BR/><B>Upgrading objects</B><BR/>\";\n\n    //Add new ACLs here (will return the ACL ID of newly created or already existant ACL)\n    // (will also place in the appropriate group and CREATE a new group if needed)\n    echo \"<BR/><B>Adding ACLs(Access Control Lists) and groups</B><BR/>\";\n    AclExtended::updateAcl($admin_write, 'Administrators', 'admin', 'Administration', 'manage_modules', 'Manage modules', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'admin', 'Administration', 'manage_modules', 'Manage modules', 'write');\n\n    //Update the ACLs\n    echo \"<BR/><B>Updating the ACLs(Access Control Lists)</B><BR/>\";\n\n    //DONE with upgrading to this version\n    $acl_version = $upgrade_acl;\n}\n\n// Upgrade for acl_version 8\n$upgrade_acl = 8;\nif ($acl_version < $upgrade_acl) {\n    echo \"<B>UPGRADING ACCESS CONTROLS TO VERSION \" . $upgrade_acl . \":</B></BR>\";\n\n    //Collect the ACL ID numbers.\n    echo \"<B>Checking to ensure all the proper ACL(access control list) are present:</B></BR>\";\n    $admin_write = AclExtended::getAclIdNumber('Administrators', 'write');\n    $emergency_write = AclExtended::getAclIdNumber('Emergency Login', 'write');\n\n    //Add new object Sections\n    echo \"<BR/><B>Adding new object sections</B><BR/>\";\n    AclExtended::addObjectAcl('patients', 'Patients', 'docs_rm', 'Documents Delete');\n\n    //Add new Objects\n    echo \"<BR/><B>Adding new objects</B><BR/>\";\n\n    //Update already existing Objects\n    echo \"<BR/><B>Upgrading objects</B><BR/>\";\n\n    //Add new ACLs here (will return the ACL ID of newly created or already existant ACL)\n    // (will also place in the appropriate group and CREATE a new group if needed)\n    echo \"<BR/><B>Adding ACLs(Access Control Lists) and groups</B><BR/>\";\n    AclExtended::updateAcl($admin_write, 'Administrators', 'patients', 'Patients', 'docs_rm', 'Documents Delete', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patients', 'Patients', 'docs_rm', 'Documents Delete', 'write');\n\n\n    //Update the ACLs\n    echo \"<BR/><B>Updating the ACLs(Access Control Lists)</B><BR/>\";\n\n    //DONE with upgrading to this version\n    $acl_version = $upgrade_acl;\n}\n\n// Upgrade for acl_version 9\n$upgrade_acl = 9;\nif ($acl_version < $upgrade_acl) {\n    echo \"<B>UPGRADING ACCESS CONTROLS TO VERSION \" . $upgrade_acl . \":</B></BR>\";\n\n    //Collect the ACL ID numbers.\n    echo \"<B>Checking to ensure all the proper ACL(access control list) are present:</B></BR>\";\n    $admin_write = AclExtended::getAclIdNumber('Administrators', 'write');\n    $accounting_view = AclExtended::getAclIdNumber('Accounting', 'view');\n    $clinicians_view = AclExtended::getAclIdNumber('Clinicians', 'view');\n    $emergency_write = AclExtended::getAclIdNumber('Emergency Login', 'write');\n    $frontoffice_view = AclExtended::getAclIdNumber('Front Office', 'view');\n    $physicians_view = AclExtended::getAclIdNumber('Physicians', 'view');\n\n    //Add new object Sections\n    echo \"<BR/><B>Adding new object sections</B><BR/>\";\n\n    //Add new Objects\n    echo \"<BR/><B>Adding new objects</B><BR/>\";\n    AclExtended::addObjectAcl('patients', 'Patients', 'pat_rep', 'Patient Report');\n\n    //Update already existing Objects\n    echo \"<BR/><B>Upgrading objects</B><BR/>\";\n\n    //Add new ACLs here (will return the ACL ID of newly created or already existant ACL)\n    // (will also place in the appropriate group and CREATE a new group if needed)\n    echo \"<BR/><B>Adding ACLs(Access Control Lists) and groups</B><BR/>\";\n    AclExtended::updateAcl($admin_write, 'Administrators', 'patients', 'Patients', 'pat_rep', 'Patient Report', 'write');\n    AclExtended::updateAcl($accounting_view, 'Accounting', 'patients', 'Patients', 'pat_rep', 'Patient Report', 'view');\n    AclExtended::updateAcl($clinicians_view, 'Clinicians', 'patients', 'Patients', 'pat_rep', 'Patient Report', 'view');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'patients', 'Patients', 'pat_rep', 'Patient Report', 'write');\n    AclExtended::updateAcl($frontoffice_view, 'Front Office', 'patients', 'Patients', 'pat_rep', 'Patient Report', 'view');\n    AclExtended::updateAcl($physicians_view, 'Physicians', 'patients', 'Patients', 'pat_rep', 'Patient Report', 'view');\n\n    //Update the ACLs\n    echo \"<BR/><B>Updating the ACLs(Access Control Lists)</B><BR/>\";\n\n    //DONE with upgrading to this version\n    $acl_version = $upgrade_acl;\n}\n\n// Upgrade for acl_version 10\n$upgrade_acl = 10;\nif ($acl_version < $upgrade_acl) {\n    echo \"<B>UPGRADING ACCESS CONTROLS TO VERSION \" . $upgrade_acl . \":</B></BR>\";\n\n    //Collect the ACL ID numbers.\n    echo \"<B>Checking to ensure all the proper ACL(access control list) are present:</B></BR>\";\n    $admin_write = AclExtended::getAclIdNumber('Administrators', 'write');\n    $emergency_write = AclExtended::getAclIdNumber('Emergency Login', 'write');\n\n    //Add new object Sections\n    echo \"<BR/><B>Adding new object sections</B><BR/>\";\n    AclExtended::addObjectSectionAcl('inventory', 'Inventory');\n\n    //Add new Objects\n    echo \"<BR/><B>Adding new objects</B><BR/>\";\n    AclExtended::addObjectAcl('inventory', 'Inventory', 'lots', 'Lots');\n    AclExtended::addObjectAcl('inventory', 'Inventory', 'sales', 'Sales');\n    AclExtended::addObjectAcl('inventory', 'Inventory', 'purchases', 'Purchases');\n    AclExtended::addObjectAcl('inventory', 'Inventory', 'transfers', 'Transfers');\n    AclExtended::addObjectAcl('inventory', 'Inventory', 'adjustments', 'Adjustments');\n    AclExtended::addObjectAcl('inventory', 'Inventory', 'consumption', 'Consumption');\n    AclExtended::addObjectAcl('inventory', 'Inventory', 'destruction', 'Destruction');\n    AclExtended::addObjectAcl('inventory', 'Inventory', 'reporting', 'Reporting');\n\n    //Update already existing Objects\n    echo \"<BR/><B>Upgrading objects</B><BR/>\";\n    //Rename \"Pharmacy Dispensary\" to \"Inventory Administration\".\n    AclExtended::editObjectAcl('admin', 'Administration', 'drugs', 'Inventory Administration', 10);\n\n    //Add new ACLs here (will return the ACL ID of newly created or already existant ACL)\n    // (will also place in the appropriate group and CREATE a new group if needed)\n    echo \"<BR/><B>Adding ACLs(Access Control Lists) and groups</B><BR/>\";\n\n    //Update the ACLs\n    echo \"<BR/><B>Updating the ACLs(Access Control Lists)</B><BR/>\";\n    AclExtended::updateAcl($admin_write, 'Administrators', 'inventory', 'Inventory', 'lots', 'Lots', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'inventory', 'Inventory', 'sales', 'Sales', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'inventory', 'Inventory', 'purchases', 'Purchases', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'inventory', 'Inventory', 'transfers', 'Transfers', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'inventory', 'Inventory', 'adjustments', 'Adjustments', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'inventory', 'Inventory', 'consumption', 'Consumption', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'inventory', 'Inventory', 'destruction', 'Destruction', 'write');\n    AclExtended::updateAcl($admin_write, 'Administrators', 'inventory', 'Inventory', 'reporting', 'Reporting', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'inventory', 'Inventory', 'lots', 'Lots', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'inventory', 'Inventory', 'sales', 'Sales', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'inventory', 'Inventory', 'purchases', 'Purchases', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'inventory', 'Inventory', 'transfers', 'Transfers', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'inventory', 'Inventory', 'adjustments', 'Adjustments', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'inventory', 'Inventory', 'consumption', 'Consumption', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'inventory', 'Inventory', 'destruction', 'Destruction', 'write');\n    AclExtended::updateAcl($emergency_write, 'Emergency Login', 'inventory', 'Inventory', 'reporting', 'Reporting', 'write');\n\n    //DONE with upgrading to this version\n    $acl_version = $upgrade_acl;\n}\n\n// Upgrade for acl_version 11\n$upgrade_acl = 11;\nif ($acl_version < $upgrade_acl) {\n    echo \"<B>UPGRADING ACCESS CONTROLS TO VERSION \" . $upgrade_acl . \":</B></BR>\";\n\n    //Collect the ACL ID numbers.\n    echo \"<B>Checking to ensure all the proper ACL(access control list) are present:</B></BR>\";\n    $clin_write = AclExtended::getAclIdNumber('Clinicians', 'write');\n\n    //Add new object Sections\n    echo \"<BR/><B>Adding new object sections</B><BR/>\";\n\n    //Add new Objects\n    echo \"<BR/><B>Adding new objects</B><BR/>\";\n\n    //Update already existing Objects\n    echo \"<BR/><B>Upgrading objects</B><BR/>\";\n\n    //Add new ACLs here (will return the ACL ID of newly created or already existant ACL)\n    // (will also place in the appropriate group and CREATE a new group if needed)\n    echo \"<BR/><B>Adding ACLs(Access Control Lists) and groups</B><BR/>\";\n\n    //Update the ACLs\n    echo \"<BR/><B>Updating the ACLs(Access Control Lists)</B><BR/>\";\n    AclExtended::updateAcl($clin_write, 'Clinicians', 'encounters', 'Encounters', 'auth', 'Authorize - my encounters', 'write');\n    AclExtended::updateAcl($clin_write, 'Clinicians', 'encounters', 'Encounters', 'notes', 'Notes - my encounters (write,addonly optional)', 'write');\n\n    //DONE with upgrading to this version\n    $acl_version = $upgrade_acl;\n}\n\n// Upgrade for acl_version 12\n$upgrade_acl = 12;\nif ($acl_version < $upgrade_acl) {\n    echo \"<B>UPGRADING ACCESS CONTROLS TO VERSION \" . $upgrade_acl . \":</B></BR>\";\n\n    //Collect the ACL ID numbers.\n    echo \"<B>Checking to ensure all the proper ACL(access control list) are present:</B></BR>\";\n    $accounting_view = AclExtended::getAclIdNumber('Accounting', 'view');\n    $frontoffice_view = AclExtended::getAclIdNumber('Front Office', 'view');\n    $frontoffice_write = AclExtended::getAclIdNumber('Front Office', 'write');\n\n    //Add new object Sections\n    echo \"<BR/><B>Adding new object sections</B><BR/>\";\n\n    //Add new Objects\n    echo \"<BR/><B>Adding new objects</B><BR/>\";\n\n    //Update already existing Objects\n    echo \"<BR/><B>Upgrading objects</B><BR/>\";\n\n    //Add new ACLs here (will return the ACL ID of newly created or already existant ACL)\n    // (will also place in the appropriate group and CREATE a new group if needed)\n    echo \"<BR/><B>Adding ACLs(Access Control Lists) and groups</B><BR/>\";\n\n    //Update the ACLs\n    echo \"<BR/><B>Updating the ACLs(Access Control Lists)</B><BR/>\";\n    AclExtended::shiftAcl($accounting_view, 'Accounting', 'patients', 'Patients', 'pat_rep', 'Patient Report', 'view');\n    AclExtended::shiftAcl($frontoffice_view, 'Front Office', 'patients', 'Patients', 'pat_rep', 'Patient Report', 'view');\n    AclExtended::shiftAcl($frontoffice_write, 'Front Office', 'patients', 'Patients', 'trans', 'Transactions (write,wsome optional)', 'write');\n    AclExtended::shiftAcl($frontoffice_write, 'Front Office', 'patients', 'Patients', 'notes', 'Patient Notes (write,wsome optional)', 'write');\n\n\n    //DONE with upgrading to this version\n    $acl_version = $upgrade_acl;\n}\n\n/* This is a template for a new revision, when needed\n// Upgrade for acl_version 13\n$upgrade_acl = 13;\nif ($acl_version < $upgrade_acl) {\n    echo \"<B>UPGRADING ACCESS CONTROLS TO VERSION \" . $upgrade_acl . \":</B></BR>\";\n\n    //Collect the ACL ID numbers.\n    echo \"<B>Checking to ensure all the proper ACL(access control list) are present:</B></BR>\";\n\n    //Add new object Sections\n    echo \"<BR/><B>Adding new object sections</B><BR/>\";\n\n    //Add new Objects\n    echo \"<BR/><B>Adding new objects</B><BR/>\";\n\n    //Update already existing Objects\n    echo \"<BR/><B>Upgrading objects</B><BR/>\";\n\n    //Add new ACLs here (will return the ACL ID of newly created or already existant ACL)\n    // (will also place in the appropriate group and CREATE a new group if needed)\n    echo \"<BR/><B>Adding ACLs(Access Control Lists) and groups</B><BR/>\";\n\n    //Update the ACLs\n    echo \"<BR/><B>Updating the ACLs(Access Control Lists)</B><BR/>\";\n\n    //DONE with upgrading to this version\n    $acl_version = $upgrade_acl;\n}\n*/\n\n//All done\nAclExtended::setAclVersion($acl_version);\necho \"DONE upgrading access controls\";\n"
        },
        {
          "name": "admin.php",
          "type": "blob",
          "size": 11.376953125,
          "content": "<?php\n\n/**\n *\n * Multi Site Administration script.\n *\n * @package OpenEMR\n * @link    https://www.open-emr.org\n * @author Rod Roark <rod@sunsetsystems.com>\n * @author Ranganath Pathak <pathak@scrs1.org>\n * @copyright Copyright (C) 2010 Rod Roark <rod@sunsetsystems.com>\n * @copyright Copyright (c) 2019 Ranganath Pathak <pathak@scrs1.org>\n * @license https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\n// Checks if the server's PHP version is compatible with OpenEMR:\nrequire_once(dirname(__FILE__) . \"/src/Common/Compatibility/Checker.php\");\n$response = OpenEMR\\Common\\Compatibility\\Checker::checkPhpVersion();\nif ($response !== true) {\n    die(htmlspecialchars($response));\n}\n\nrequire_once \"version.php\";\n\n$webserver_root = dirname(__FILE__);\nif (stripos(PHP_OS, 'WIN') === 0) {\n    $webserver_root = str_replace(\"\\\\\", \"/\", $webserver_root);\n}\n\n$OE_SITES_BASE = \"$webserver_root/sites\";\n\nfunction sqlQuery($statement, $link)\n{\n    $row = mysqli_fetch_array(mysqli_query($link, $statement), MYSQLI_ASSOC);\n    return $row;\n}\n?>\n<html>\n<head>\n    <title>OpenEMR Site Administration</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"public/assets/bootstrap/dist/css/bootstrap.min.css\">\n    <script src=\"public/assets/jquery/dist/jquery.min.js\"></script>\n    <script src=\"public/assets/bootstrap/dist/js/bootstrap.bundle.min.js\"></script>\n    <link rel=\"stylesheet\" href=\"public/assets/@fortawesome/fontawesome-free/css/all.min.css\">\n    <link rel=\"shortcut icon\" href=\"public/images/favicon.ico\" />\n</head>\n<body>\n    <div class='container mt-3'>\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"d-flex justify-content-between align-items-center\">\n                    <h2>OpenEMR Multi Site Administration</h2>\n                    <a class=\"text-secondary\" data-target=\"#myModal\" data-toggle=\"modal\" href=\"#\" id=\"help-href\" name=\"help-href\">\n                        <i class=\"fa fa-question-circle fa-lg\" aria-hidden=\"true\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Click to view Help\"></i>\n                    </a>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"table-responsive\">\n                    <table class='table table-striped text-center'>\n                        <tr>\n                            <th>Site ID</th>\n                            <th>DB Name</th>\n                            <th>Site Name</th>\n                            <th>Version</th>\n                            <th>Is Current</th>\n                            <th>Log In</th>\n                            <th>Patient Portal</th>\n                        </tr>\n                        <?php\n                        $dh = opendir($OE_SITES_BASE);\n                        if (!$dh) {\n                            die(\"Cannot read directory '$OE_SITES_BASE'.\");\n                        }\n\n                        $siteslist = array();\n\n                        while (false !== ($sfname = readdir($dh))) {\n                            if (substr($sfname, 0, 1) == '.') {\n                                continue;\n                            }\n\n                            if ($sfname == 'CVS') {\n                                continue;\n                            }\n\n                            $sitedir = \"$OE_SITES_BASE/$sfname\";\n                            if (!is_dir($sitedir)) {\n                                continue;\n                            }\n\n                            if (!is_file(\"$sitedir/sqlconf.php\")) {\n                                continue;\n                            }\n\n                            $siteslist[$sfname] = $sfname;\n                        }\n\n                        closedir($dh);\n                        ksort($siteslist);\n\n                        $encount = 0;\n                        foreach ($siteslist as $sfname) {\n                            $sitedir = \"$OE_SITES_BASE/$sfname\";\n                            $errmsg = '';\n                            ++$encount;\n\n                            echo \" <tr>\\n\";\n\n                        // Access the site's database.\n                            include \"$sitedir/sqlconf.php\";\n\n                            if ($config) {\n                                $dbh = mysqli_connect(\"$host\", \"$login\", \"$pass\", $dbase, $port);\n                                if (!$dbh) {\n                                    $errmsg = \"MySQL connect failed\";\n                                }\n                            }\n\n                            echo \"  <td>\" . htmlspecialchars($sfname, ENT_NOQUOTES) . \"</td>\\n\";\n                            echo \"  <td>\" . htmlspecialchars($dbase, ENT_NOQUOTES) . \"</td>\\n\";\n\n                            if (!$config) {\n                                echo \"  <td colspan='3'><a href='setup.php?site=\" . htmlspecialchars(urlencode($sfname), ENT_QUOTES) . \"' class='text-decoration-none'>Needs setup, click here to run it</a></td>\\n\";\n                            } elseif ($errmsg) {\n                                echo \"  <td colspan='3' class='text-danger'>\" . htmlspecialchars($errmsg, ENT_NOQUOTES) . \"</td>\\n\";\n                            } else {\n                                // Get site name for display.\n                                $row = sqlQuery(\"SELECT gl_value FROM globals WHERE gl_name = 'openemr_name' LIMIT 1\", $dbh);\n                                $openemr_name = $row ? $row['gl_value'] : '';\n\n                                // Get version indicators from the database.\n                                $row = sqlQuery(\"SHOW TABLES LIKE 'version'\", $dbh);\n                                if (empty($row)) {\n                                    $openemr_version = 'Unknown';\n                                    $database_version = 0;\n                                } else {\n                                    $row = sqlQuery(\"SELECT * FROM version LIMIT 1\", $dbh);\n                                    $database_patch_txt = \"\";\n                                    if (!(empty($row['v_realpatch'])) && $row['v_realpatch'] != 0) {\n                                        $database_patch_txt = \" (\" . $row['v_realpatch'] . \")\";\n                                    }\n\n                                    $openemr_version = $row['v_major'] . \".\" . $row['v_minor'] . \".\" .\n                                    $row['v_patch'] . $row['v_tag'] . $database_patch_txt;\n                                    $database_version = 0 + $row['v_database'];\n                                    $database_acl = 0 + $row['v_acl'];\n                                    $database_patch = 0 + $row['v_realpatch'];\n                                }\n\n                                // Display relevant columns.\n                                echo \"  <td>\" . htmlspecialchars($openemr_name, ENT_NOQUOTES) . \"</td>\\n\";\n                                echo \"  <td>\" . htmlspecialchars($openemr_version, ENT_NOQUOTES) . \"</td>\\n\";\n                                if ($v_database != $database_version) {\n                                    echo \"  <td><a href='sql_upgrade.php?site=\" . htmlspecialchars(urlencode($sfname), ENT_QUOTES) . \"' class='text-decoration-none'>Upgrade Database</a></td>\\n\";\n                                } elseif (($v_acl > $database_acl)) {\n                                    echo \"  <td><a href='acl_upgrade.php?site=\" . htmlspecialchars(urlencode($sfname), ENT_QUOTES) . \"' class='text-decoration-none'>Upgrade Access Controls</a></td>\\n\";\n                                } elseif (($v_realpatch != $database_patch)) {\n                                    echo \"  <td><a href='sql_patch.php?site=\" . htmlspecialchars(urlencode($sfname), ENT_QUOTES) . \"' class='text-decoration-none'>Patch Database</a></td>\\n\";\n                                } else {\n                                    echo \"  <td><i class='fa fa-check fa-lg text-success' aria-hidden='true' ></i></a></td>\\n\";\n                                }\n                                if (($v_database == $database_version) && ($v_acl <= $database_acl) && ($v_realpatch == $database_patch)) {\n                                    echo \"  <td><a href='interface/login/login.php?site=\" . htmlspecialchars(urlencode($sfname), ENT_QUOTES) . \"' class='text-decoration-none'><i class='fa fa-sign-in-alt fa-lg' aria-hidden='true' data-toggle='tooltip' data-placement='top' title ='Login to site \" . htmlspecialchars($sfname, ENT_QUOTES) . \"'></i></a></td>\\n\";\n                                    echo \"  <td><a href='portal/index.php?site=\" . htmlspecialchars(urlencode($sfname), ENT_QUOTES) . \"' class='text-decoration-none'><i class='fa fa-sign-in-alt fa-lg' aria-hidden='true' data-toggle='tooltip' data-placement='top' title ='Login to site \" . htmlspecialchars($sfname, ENT_QUOTES) . \"'></i></a></td>\\n\";\n                                } else {\n                                    echo \"  <td><i class='fa fa-ban fa-lg text-secondary' aria-hidden='true'></i></td>\\n\";\n                                    echo \"  <td><i class='fa fa-ban fa-lg text-secondary' aria-hidden='true'></i></td>\\n\";\n                                }\n                            }\n\n                            echo \" </tr>\\n\";\n\n                            if ($config && $dbh !== false) {\n                                mysqli_close($dbh);\n                            }\n                        }\n                        ?>\n                    </table>\n                </div>\n                <form method='post' action='setup.php'>\n                    <button type='submit' class='btn btn-primary font-weight-bold' name='form_submit' value='Add New Site'>Add New Site</button>\n                </form>\n            </div>\n        </div>\n    </div><!--end of container div-->\n\n    <div class=\"row\">\n        <div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-lg\">\n                <div class=\"modal-content\" style=\"height:700px\">\n                    <div class=\"modal-header clearfix\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\" style=\"color:var(--black); font-size:1.5em;\">×</span>\n                        </button>\n                    </div>\n                        <div class=\"modal-body\" style=\"height:80%;\">\n                            <iframe src=\"\" id=\"targetiframe\" class=\"h-100 w-100\" style=\"overflow-x: hidden; border:none\"\n                                allowtransparency=\"true\"></iframe>\n                        </div>\n                    <div class=\"modal-footer mt-0\">\n                        <button class=\"btn btn-secondary\" data-dismiss=\"modal\" type=\"button\">Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <script>\n        $(function () {\n            $('#help-href').click (function() {\n                document.getElementById('targetiframe').src = \"Documentation/help_files/openemr_multisite_admin_help.php\";\n            });\n        });\n        $(function () {\n            $('#print-help-href').click (function(){\n                $(\"#targetiframe\").get(0).contentWindow.print();\n            });\n        });\n        $(function () {\n            $('[data-toggle=\"tooltip\"]').tooltip();\n        });\n        // Jquery draggable\n        $(\".modal-dialog\").addClass('drag-action');\n        $(\".modal-content\").addClass('resize-action');\n    </script>\n</body>\n</html>\n"
        },
        {
          "name": "apis",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.xml",
          "type": "blob",
          "size": 5.1455078125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<project name=\"OpenEMR\"\n         description=\"OpenEMR is a Free and Open Source electronic health records and medical practice management application\"\n         default=\"dist\" basedir=\".\">\n\n    <property name=\"dir.src\" value=\"${project.basedir}\"/>\n    <property name=\"dir.vendor\" value=\"${project.basedir}/vendor\"/>\n    <property name=\"dir.assets\" value=\"${project.basedir}/public/assets\"/>\n\n    <target name=\"vendor-clean\">\n        <echo msg=\"Trying to clean up vendor dir\"/>\n        <phingcall target=\"clean-vendor-dir\">\n        </phingcall>\n    </target>\n\n    <target name=\"assets-clean\">\n        <echo msg=\"Trying to clean up assets dir\"/>\n        <phingcall target=\"clean-assets-dir\">\n        </phingcall>\n    </target>\n\n\n    <target name=\"clean-vendor-dir\">\n        <!-- Delete git files from vendor  -->\n        <delete verbose=\"true\">\n            <fileset dir=\"${dir.vendor}\" includes=\"**/*.git*\" defaultexcludes=\"false\"/>\n            <fileset dir=\"${dir.vendor}\" includes=\"**/*.cvs*\" defaultexcludes=\"false\"/>\n        </delete>\n\n        <delete dir=\"${dir.vendor}/adldap2/adldap2/docs\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/adodb/adodb-php/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/adodb/adodb-php/docs\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/container-interop/container-interop/docs\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/ezyang/htmlpurifier/test\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/ezyang/htmlpurifier/maintenance\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/ezyang/htmlpurifier/plugins\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/illuminate/support/Testing\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/knplabs/knp-snappy/doc\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/markbaker/complex/examples\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/mobiledetect/mobiledetectlib/docs\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/myclabs/deep-copy/doc\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/phenx/php-font-lib/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/phenx/php-svg-lib/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/phpoffice/phpspreadsheet/docs\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/phpoffice/phpspreadsheet/samples\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/phpunit/php-code-coverage/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/phpunit/php-timer/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/phpunit/php-token-stream/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/phpunit/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/phpunit/phpunit-mock-objects/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/rospdf/pdf-php/examples\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/rospdf/pdf-php/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/sabberworm/php-css-parser/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/sebastian/code-unit-reverse-lookup/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/sebastian/comparator/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/sebastian/diff/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/sebastian/environment/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/sebastian/exporter/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/sebastian/global-state/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/sebastian/object-enumerator/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/sebastian/recursion-context/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/smarty/smarty/demo\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/symfony/config/Tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/symfony/console/Tester\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/symfony/console/Tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/symfony/debug/Resources/ext/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/symfony/debug/Tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/symfony/dependency-injection/Tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/symfony/event-dispatcher/Tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/symfony/filesystem/Tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/symfony/http-foundation/Tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/symfony/process/Tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/symfony/translation/Tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/symfony/yaml/Tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/twig/twig/doc\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/twig/twig/test\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/yubico/u2flib-server/examples\" verbose=\"true\"/>\n        <delete dir=\"${dir.vendor}/yubico/u2flib-server/tests\" verbose=\"true\"/>\n    </target>\n\n\n    <target name=\"clean-assets-dir\">\n        <delete dir=\"${dir.assets}/flot/examples\" verbose=\"true\"/>\n        <delete dir=\"${dir.assets}/jquery-datetimepicker/tests\" verbose=\"true\"/>\n        <delete dir=\"${dir.assets}/numeral/tests\" verbose=\"true\"/>\n    </target>\n\n\n</project>\n"
        },
        {
          "name": "ccdaservice",
          "type": "tree",
          "content": null
        },
        {
          "name": "ccr",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "cloudbuild.yaml",
          "type": "blob",
          "size": 0.12109375,
          "content": "steps:\n- name: 'gcr.io/cloud-builders/npm'\n  args: ['install']\n- name: 'gcr.io/cloud-builders/npm'\n  args: ['run', 'build']\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 4.6259765625,
          "content": "{\n    \"name\": \"openemr/openemr\",\n    \"version\": \"7.0.3\",\n    \"description\": \"OpenEMR is a Free and Open Source electronic health records and medical practice management application\",\n    \"license\": \"GPL\",\n    \"support\": {\n        \"website\": \"https://www.open-emr.org/\",\n        \"issues\": \"https://github.com/openemr/openemr/issues\",\n        \"forum\": \"https://community.open-emr.org/\",\n        \"wiki\": \"https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page\",\n        \"source\": \"https://github.com/openemr/openemr\"\n    },\n    \"require\": {\n        \"php\": \">=8.1.0\",\n        \"academe/omnipay-authorizenetapi\": \"3.1.2\",\n        \"adodb/adodb-php\": \"5.22.7\",\n        \"aranyasen/hl7\": \"3.1.7\",\n        \"bacon/bacon-qr-code\": \"3.0.1\",\n        \"digitickets/lalit\": \"3.4.0\",\n        \"dompdf/dompdf\": \"3.0.1\",\n        \"ezyang/htmlpurifier\": \"4.18.0\",\n        \"google/apiclient\": \"2.18.2\",\n        \"guzzlehttp/guzzle\": \"7.9.2\",\n        \"html2text/html2text\": \"4.3.2\",\n        \"kamermans/guzzle-oauth2-subscriber\": \"1.1.0\",\n        \"knplabs/knp-snappy\": \"1.5.0\",\n        \"laminas/laminas-config\": \"3.10.1\",\n        \"laminas/laminas-db\": \"2.20.0\",\n        \"laminas/laminas-eventmanager\": \"3.14.0\",\n        \"laminas/laminas-escaper\": \"2.15.0\",\n        \"laminas/laminas-filter\": \"2.39.0\",\n        \"laminas/laminas-form\": \"3.21.0\",\n        \"laminas/laminas-inputfilter\": \"2.31.0\",\n        \"laminas/laminas-json\": \"3.7.1\",\n        \"laminas/laminas-json-server\": \"3.9.0\",\n        \"laminas/laminas-loader\": \"2.11.1\",\n        \"laminas/laminas-mvc\": \"3.8.0\",\n        \"laminas/laminas-mvc-i18n\": \"1.9.0\",\n        \"laminas/laminas-servicemanager\": \"3.23.0\",\n        \"laminas/laminas-soap\": \"2.14.0\",\n        \"laminas/laminas-stdlib\": \"3.20.0\",\n        \"laminas/laminas-xmlrpc\": \"2.20.0\",\n        \"lcobucci/jwt\": \"4.2.1\",\n        \"league/csv\": \"9.8.0\",\n        \"league/omnipay\": \"3.2.1\",\n        \"mobiledetect/mobiledetectlib\": \"4.8.09\",\n        \"monolog/monolog\": \"3.8.1\",\n        \"mpdf/mpdf\": \"8.2.5\",\n        \"nyholm/psr7\": \"1.8.2\",\n        \"nyholm/psr7-server\": \"1.1.0\",\n        \"omnipay/stripe\": \"3.2.0\",\n        \"openemr/mustache\": \"2.15.2\",\n        \"particle/validator\": \"2.3.5\",\n        \"pear/archive_tar\": \"1.5.0\",\n        \"phpmailer/phpmailer\": \"6.9.3\",\n        \"phpoffice/phpspreadsheet\": \"3.6.0\",\n        \"phpseclib/phpseclib\": \"3.0.43\",\n        \"php81_bc/strftime\": \"0.7.6\",\n        \"php-http/discovery\": \"1.20.0\",\n        \"psr/log\": \"3.0.2\",\n        \"ramsey/uuid\": \"4.7.6\",\n        \"robthree/twofactorauth\": \"2.1.0\",\n        \"rospdf/pdf-php\": \"0.12.67\",\n        \"smarty/smarty\": \"4.5.5\",\n        \"steverhoades/oauth2-openid-connect-server\": \"2.6.1\",\n        \"stripe/stripe-php\": \"15.10.0\",\n        \"symfony/config\": \"6.4.14\",\n        \"symfony/console\": \"6.4.15\",\n        \"symfony/dependency-injection\": \"6.4.16\",\n        \"symfony/event-dispatcher\": \"6.4.13\",\n        \"symfony/finder\": \"6.4.13\",\n        \"symfony/filesystem\": \"6.4.13\",\n        \"symfony/http-client\": \"6.4.16\",\n        \"symfony/http-foundation\": \"6.4.16\",\n        \"symfony/yaml\": \"6.4.13\",\n        \"twig/twig\": \"3.17.1\",\n        \"vlucas/phpdotenv\": \"5.6.1\",\n        \"waryway/php-traits-library\": \"1.0.4\",\n        \"yubico/u2flib-server\": \"1.0.2\",\n        \"twilio/sdk\": \"8.3.9\",\n        \"ringcentral/ringcentral-php\": \"3.0.3\"\n    },\n    \"config\": {\n        \"platform\": {\n            \"php\": \"8.1\",\n            \"ext-intl\": \"8.1\"\n        },\n        \"allow-plugins\": {\n            \"openemr/oe-module-installer-plugin\": true,\n            \"php-http/discovery\": false\n        }\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"10.*\",\n        \"symfony/panther\": \"2.*\",\n        \"zircote/swagger-php\": \"3.*\"\n    },\n    \"repositories\": [\n        {\n            \"type\": \"vcs\",\n            \"url\": \"https://github.com/openemr/wkhtmltopdf-openemr\"\n        },\n        {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/openemr/oe-module-cqm\"\n        }\n    ],\n    \"autoload\": {\n        \"exclude-from-classmap\": [\n            \"src/Common/Compatibility/Checker.php\",\n            \"library/classes/ClinicalTypes/\",\n            \"library/classes/rulesets/\",\n            \"library/classes/smtp/\"\n        ],\n        \"classmap\": [\n            \"library/classes\"\n        ],\n        \"files\": [\n            \"library/htmlspecialchars.inc.php\",\n            \"library/formdata.inc.php\",\n            \"library/sanitize.inc.php\",\n            \"library/formatting.inc.php\",\n            \"library/date_functions.php\",\n            \"library/validation/validate_core.php\",\n            \"library/translation.inc.php\"\n        ],\n        \"psr-4\": {\n            \"OpenEMR\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"OpenEMR\\\\Tests\\\\\": \"tests\\\\Tests\"\n        }\n    }\n}\n"
        },
        {
          "name": "composer.lock",
          "type": "blob",
          "size": 491.162109375,
          "content": "{\n    \"_readme\": [\n        \"This file locks the dependencies of your project to a known state\",\n        \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies\",\n        \"This file is @generated automatically\"\n    ],\n    \"content-hash\": \"c38bd64e5c27acbdc3081f0d65211b2b\",\n    \"packages\": [\n        {\n            \"name\": \"academe/authorizenet-objects\",\n            \"version\": \"0.7.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/academe/authorizenet-objects.git\",\n                \"reference\": \"711d1f10f9bb6eb685a0851187ca62d808e4ee53\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/academe/authorizenet-objects/zipball/711d1f10f9bb6eb685a0851187ca62d808e4ee53\",\n                \"reference\": \"711d1f10f9bb6eb685a0851187ca62d808e4ee53\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.6.0\"\n            },\n            \"require-dev\": {\n                \"moneyphp/money\": \"^3.0\",\n                \"phpunit/phpunit\": \"^5.7 || ^6.4 || ^7.0\",\n                \"squizlabs/php_codesniffer\": \"^3\"\n            },\n            \"suggest\": {\n                \"moneyphp/money\": \"^3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Academe\\\\AuthorizeNet\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jason Judge\",\n                    \"homepage\": \"https://github.com/judgej\"\n                }\n            ],\n            \"description\": \"Authorize.Net API Message Value Objects\",\n            \"homepage\": \"https://github.com/academe/authorizenet-objects\",\n            \"keywords\": [\n                \"authorize\",\n                \"authorize net\",\n                \"authorize.net\",\n                \"gateway\",\n                \"merchant\",\n                \"omnipay\",\n                \"pay\",\n                \"payment\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/academe/authorizenet-objects/issues\",\n                \"source\": \"https://github.com/academe/authorizenet-objects/tree/master\"\n            },\n            \"time\": \"2019-06-22T22:33:01+00:00\"\n        },\n        {\n            \"name\": \"academe/omnipay-authorizenetapi\",\n            \"version\": \"3.1.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/academe/omnipay-authorizenetapi.git\",\n                \"reference\": \"b72eae92d254bc65b09c7e0147861d1fe5ea1e5e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/academe/omnipay-authorizenetapi/zipball/b72eae92d254bc65b09c7e0147861d1fe5ea1e5e\",\n                \"reference\": \"b72eae92d254bc65b09c7e0147861d1fe5ea1e5e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"academe/authorizenet-objects\": \"~0.7\",\n                \"omnipay/common\": \"^3\",\n                \"symfony/property-access\": \"^3.2 || ^4.0\"\n            },\n            \"require-dev\": {\n                \"omnipay/tests\": \"^3\",\n                \"squizlabs/php_codesniffer\": \"^3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Omnipay\\\\AuthorizeNetApi\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jason Judge\",\n                    \"email\": \"jason@academe.co.uk\"\n                }\n            ],\n            \"description\": \"Authorize.Net payment gateway driver for the Omnipay 3.x payment processing library\",\n            \"homepage\": \"https://github.com/academe/omnipay-authorizenetapi\",\n            \"keywords\": [\n                \"authorize.net\",\n                \"gateway\",\n                \"merchant\",\n                \"omnipay\",\n                \"pay\",\n                \"payment\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/academe/omnipay-authorizenetapi/issues\",\n                \"source\": \"https://github.com/academe/omnipay-authorizenetapi/tree/3.1.2\"\n            },\n            \"time\": \"2019-08-20T22:09:44+00:00\"\n        },\n        {\n            \"name\": \"adodb/adodb-php\",\n            \"version\": \"v5.22.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ADOdb/ADOdb.git\",\n                \"reference\": \"e7150539d5707ae556172532e2b25ac4e88cb2a6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ADOdb/ADOdb/zipball/e7150539d5707ae556172532e2b25ac4e88cb2a6\",\n                \"reference\": \"e7150539d5707ae556172532e2b25ac4e88cb2a6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.0 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"adodb.inc.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\",\n                \"LGPL-2.1-or-later\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"John Lim\",\n                    \"email\": \"jlim@natsoft.com\",\n                    \"role\": \"Author\"\n                },\n                {\n                    \"name\": \"Damien Regad\",\n                    \"role\": \"Current maintainer\"\n                },\n                {\n                    \"name\": \"Mark Newnham\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"ADOdb is a PHP database abstraction layer library\",\n            \"homepage\": \"https://adodb.org/\",\n            \"keywords\": [\n                \"abstraction\",\n                \"database\",\n                \"layer\",\n                \"library\",\n                \"php\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/ADOdb/ADOdb/issues\",\n                \"source\": \"https://github.com/ADOdb/ADOdb\"\n            },\n            \"time\": \"2023-11-04T22:25:49+00:00\"\n        },\n        {\n            \"name\": \"aranyasen/hl7\",\n            \"version\": \"3.1.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/senaranya/HL7.git\",\n                \"reference\": \"98c0053697851ebb6c49bf9cdd3a855f09fcbfc2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/senaranya/HL7/zipball/98c0053697851ebb6c49bf9cdd3a855f09fcbfc2\",\n                \"reference\": \"98c0053697851ebb6c49bf9cdd3a855f09fcbfc2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-mbstring\": \"*\",\n                \"php\": \"^8.0\"\n            },\n            \"require-dev\": {\n                \"dms/phpunit-arraysubset-asserts\": \"^0.2\",\n                \"ext-pcntl\": \"*\",\n                \"ext-sockets\": \"*\",\n                \"phpunit/phpunit\": \"^9\",\n                \"squizlabs/php_codesniffer\": \"^3.6\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"0.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Aranyasen\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Aranya Sen\",\n                    \"email\": \"sen.aranya@gmail.com\",\n                    \"role\": \"Owner\"\n                }\n            ],\n            \"description\": \"HL7 parser, generator and sender.\",\n            \"support\": {\n                \"issues\": \"https://github.com/senaranya/HL7/issues\",\n                \"source\": \"https://github.com/senaranya/HL7/tree/3.1.7\"\n            },\n            \"time\": \"2024-12-22T07:15:33+00:00\"\n        },\n        {\n            \"name\": \"bacon/bacon-qr-code\",\n            \"version\": \"v3.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Bacon/BaconQrCode.git\",\n                \"reference\": \"f9cc1f52b5a463062251d666761178dbdb6b544f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Bacon/BaconQrCode/zipball/f9cc1f52b5a463062251d666761178dbdb6b544f\",\n                \"reference\": \"f9cc1f52b5a463062251d666761178dbdb6b544f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"dasprid/enum\": \"^1.0.3\",\n                \"ext-iconv\": \"*\",\n                \"php\": \"^8.1\"\n            },\n            \"require-dev\": {\n                \"phly/keep-a-changelog\": \"^2.12\",\n                \"phpunit/phpunit\": \"^10.5.11 || 11.0.4\",\n                \"spatie/phpunit-snapshot-assertions\": \"^5.1.5\",\n                \"squizlabs/php_codesniffer\": \"^3.9\"\n            },\n            \"suggest\": {\n                \"ext-imagick\": \"to generate QR code images\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"BaconQrCode\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-2-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ben Scholzen 'DASPRiD'\",\n                    \"email\": \"mail@dasprids.de\",\n                    \"homepage\": \"https://dasprids.de/\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"BaconQrCode is a QR code generator for PHP.\",\n            \"homepage\": \"https://github.com/Bacon/BaconQrCode\",\n            \"support\": {\n                \"issues\": \"https://github.com/Bacon/BaconQrCode/issues\",\n                \"source\": \"https://github.com/Bacon/BaconQrCode/tree/v3.0.1\"\n            },\n            \"time\": \"2024-10-01T13:55:55+00:00\"\n        },\n        {\n            \"name\": \"brick/math\",\n            \"version\": \"0.12.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/brick/math.git\",\n                \"reference\": \"f510c0a40911935b77b86859eb5223d58d660df1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/brick/math/zipball/f510c0a40911935b77b86859eb5223d58d660df1\",\n                \"reference\": \"f510c0a40911935b77b86859eb5223d58d660df1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^8.1\"\n            },\n            \"require-dev\": {\n                \"php-coveralls/php-coveralls\": \"^2.2\",\n                \"phpunit/phpunit\": \"^10.1\",\n                \"vimeo/psalm\": \"5.16.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Brick\\\\Math\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"Arbitrary-precision arithmetic library\",\n            \"keywords\": [\n                \"Arbitrary-precision\",\n                \"BigInteger\",\n                \"BigRational\",\n                \"arithmetic\",\n                \"bigdecimal\",\n                \"bignum\",\n                \"bignumber\",\n                \"brick\",\n                \"decimal\",\n                \"integer\",\n                \"math\",\n                \"mathematics\",\n                \"rational\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/brick/math/issues\",\n                \"source\": \"https://github.com/brick/math/tree/0.12.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/BenMorel\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-11-29T23:19:16+00:00\"\n        },\n        {\n            \"name\": \"brick/varexporter\",\n            \"version\": \"0.5.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/brick/varexporter.git\",\n                \"reference\": \"84b2a7a91f69aa5d079aec5a0a7256ebf2dceb6b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/brick/varexporter/zipball/84b2a7a91f69aa5d079aec5a0a7256ebf2dceb6b\",\n                \"reference\": \"84b2a7a91f69aa5d079aec5a0a7256ebf2dceb6b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"nikic/php-parser\": \"^5.0\",\n                \"php\": \"^7.4 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"php-coveralls/php-coveralls\": \"^2.2\",\n                \"phpunit/phpunit\": \"^9.3\",\n                \"psalm/phar\": \"5.21.1\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Brick\\\\VarExporter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"A powerful alternative to var_export(), which can export closures and objects without __set_state()\",\n            \"keywords\": [\n                \"var_export\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/brick/varexporter/issues\",\n                \"source\": \"https://github.com/brick/varexporter/tree/0.5.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/BenMorel\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-05-10T17:15:19+00:00\"\n        },\n        {\n            \"name\": \"clue/stream-filter\",\n            \"version\": \"v1.7.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/clue/stream-filter.git\",\n                \"reference\": \"049509fef80032cb3f051595029ab75b49a3c2f7\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/clue/stream-filter/zipball/049509fef80032cb3f051595029ab75b49a3c2f7\",\n                \"reference\": \"049509fef80032cb3f051595029ab75b49a3c2f7\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.6 || ^5.7 || ^4.8.36\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/functions_include.php\"\n                ],\n                \"psr-4\": {\n                    \"Clue\\\\StreamFilter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Christian Lück\",\n                    \"email\": \"christian@clue.engineering\"\n                }\n            ],\n            \"description\": \"A simple and modern approach to stream filtering in PHP\",\n            \"homepage\": \"https://github.com/clue/stream-filter\",\n            \"keywords\": [\n                \"bucket brigade\",\n                \"callback\",\n                \"filter\",\n                \"php_user_filter\",\n                \"stream\",\n                \"stream_filter_append\",\n                \"stream_filter_register\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/clue/stream-filter/issues\",\n                \"source\": \"https://github.com/clue/stream-filter/tree/v1.7.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://clue.engineering/support\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/clue\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-12-20T15:40:13+00:00\"\n        },\n        {\n            \"name\": \"dasprid/enum\",\n            \"version\": \"1.0.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/DASPRiD/Enum.git\",\n                \"reference\": \"8dfd07c6d2cf31c8da90c53b83c026c7696dda90\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/DASPRiD/Enum/zipball/8dfd07c6d2cf31c8da90c53b83c026c7696dda90\",\n                \"reference\": \"8dfd07c6d2cf31c8da90c53b83c026c7696dda90\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1 <9.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^7 || ^8 || ^9 || ^10 || ^11\",\n                \"squizlabs/php_codesniffer\": \"*\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"DASPRiD\\\\Enum\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-2-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ben Scholzen 'DASPRiD'\",\n                    \"email\": \"mail@dasprids.de\",\n                    \"homepage\": \"https://dasprids.de/\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"PHP 7.1 enum implementation\",\n            \"keywords\": [\n                \"enum\",\n                \"map\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/DASPRiD/Enum/issues\",\n                \"source\": \"https://github.com/DASPRiD/Enum/tree/1.0.6\"\n            },\n            \"time\": \"2024-08-09T14:30:48+00:00\"\n        },\n        {\n            \"name\": \"defuse/php-encryption\",\n            \"version\": \"v2.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/defuse/php-encryption.git\",\n                \"reference\": \"f53396c2d34225064647a05ca76c1da9d99e5828\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/defuse/php-encryption/zipball/f53396c2d34225064647a05ca76c1da9d99e5828\",\n                \"reference\": \"f53396c2d34225064647a05ca76c1da9d99e5828\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-openssl\": \"*\",\n                \"paragonie/random_compat\": \">= 2\",\n                \"php\": \">=5.6.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^5|^6|^7|^8|^9|^10\",\n                \"yoast/phpunit-polyfills\": \"^2.0.0\"\n            },\n            \"bin\": [\n                \"bin/generate-defuse-key\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Defuse\\\\Crypto\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Taylor Hornby\",\n                    \"email\": \"taylor@defuse.ca\",\n                    \"homepage\": \"https://defuse.ca/\"\n                },\n                {\n                    \"name\": \"Scott Arciszewski\",\n                    \"email\": \"info@paragonie.com\",\n                    \"homepage\": \"https://paragonie.com\"\n                }\n            ],\n            \"description\": \"Secure PHP Encryption Library\",\n            \"keywords\": [\n                \"aes\",\n                \"authenticated encryption\",\n                \"cipher\",\n                \"crypto\",\n                \"cryptography\",\n                \"encrypt\",\n                \"encryption\",\n                \"openssl\",\n                \"security\",\n                \"symmetric key cryptography\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/defuse/php-encryption/issues\",\n                \"source\": \"https://github.com/defuse/php-encryption/tree/v2.4.0\"\n            },\n            \"time\": \"2023-06-19T06:10:36+00:00\"\n        },\n        {\n            \"name\": \"digitickets/lalit\",\n            \"version\": \"3.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/digitickets/lalit.git\",\n                \"reference\": \"b88856d0434bf3eb465b4ad872ee4eea6ccb582a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/digitickets/lalit/zipball/b88856d0434bf3eb465b4ad872ee4eea6ccb582a\",\n                \"reference\": \"b88856d0434bf3eb465b4ad872ee4eea6ccb582a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"php\": \">=7\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"*\",\n                \"yetanotherape/diff-match-patch\": \"*\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"LaLit\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"CC0-1.0\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Lalit Patel\",\n                    \"role\": \"Lead Developer\"\n                },\n                {\n                    \"name\": \"Richard Quadling\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"GitHub copy of LaLit's XML2Array and Array2XML\",\n            \"homepage\": \"http://www.lalit.org/lab\",\n            \"keywords\": [\n                \"array\",\n                \"xml\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/digitickets/lalit/issues\",\n                \"source\": \"https://github.com/digitickets/lalit/tree/3.4.0\"\n            },\n            \"time\": \"2024-03-08T20:59:04+00:00\"\n        },\n        {\n            \"name\": \"dompdf/dompdf\",\n            \"version\": \"v3.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/dompdf/dompdf.git\",\n                \"reference\": \"2d622faf9aa1f8f7f24dd094e49b5cf6c0c5d4e6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/dompdf/dompdf/zipball/2d622faf9aa1f8f7f24dd094e49b5cf6c0c5d4e6\",\n                \"reference\": \"2d622faf9aa1f8f7f24dd094e49b5cf6c0c5d4e6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"dompdf/php-font-lib\": \"^1.0.0\",\n                \"dompdf/php-svg-lib\": \"^1.0.0\",\n                \"ext-dom\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"masterminds/html5\": \"^2.0\",\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"ext-gd\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-zip\": \"*\",\n                \"mockery/mockery\": \"^1.3\",\n                \"phpunit/phpunit\": \"^7.5 || ^8 || ^9 || ^10\",\n                \"squizlabs/php_codesniffer\": \"^3.5\",\n                \"symfony/process\": \"^4.4 || ^5.4 || ^6.2 || ^7.0\"\n            },\n            \"suggest\": {\n                \"ext-gd\": \"Needed to process images\",\n                \"ext-gmagick\": \"Improves image processing performance\",\n                \"ext-imagick\": \"Improves image processing performance\",\n                \"ext-zlib\": \"Needed for pdf stream compression\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Dompdf\\\\\": \"src/\"\n                },\n                \"classmap\": [\n                    \"lib/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-2.1\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"The Dompdf Community\",\n                    \"homepage\": \"https://github.com/dompdf/dompdf/blob/master/AUTHORS.md\"\n                }\n            ],\n            \"description\": \"DOMPDF is a CSS 2.1 compliant HTML to PDF converter\",\n            \"homepage\": \"https://github.com/dompdf/dompdf\",\n            \"support\": {\n                \"issues\": \"https://github.com/dompdf/dompdf/issues\",\n                \"source\": \"https://github.com/dompdf/dompdf/tree/v3.0.1\"\n            },\n            \"time\": \"2024-12-05T14:59:38+00:00\"\n        },\n        {\n            \"name\": \"dompdf/php-font-lib\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/dompdf/php-font-lib.git\",\n                \"reference\": \"6137b7d4232b7f16c882c75e4ca3991dbcf6fe2d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/dompdf/php-font-lib/zipball/6137b7d4232b7f16c882c75e4ca3991dbcf6fe2d\",\n                \"reference\": \"6137b7d4232b7f16c882c75e4ca3991dbcf6fe2d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-mbstring\": \"*\",\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"symfony/phpunit-bridge\": \"^3 || ^4 || ^5 || ^6\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"FontLib\\\\\": \"src/FontLib\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-2.1-or-later\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"The FontLib Community\",\n                    \"homepage\": \"https://github.com/dompdf/php-font-lib/blob/master/AUTHORS.md\"\n                }\n            ],\n            \"description\": \"A library to read, parse, export and make subsets of different types of font files.\",\n            \"homepage\": \"https://github.com/dompdf/php-font-lib\",\n            \"support\": {\n                \"issues\": \"https://github.com/dompdf/php-font-lib/issues\",\n                \"source\": \"https://github.com/dompdf/php-font-lib/tree/1.0.1\"\n            },\n            \"time\": \"2024-12-02T14:37:59+00:00\"\n        },\n        {\n            \"name\": \"dompdf/php-svg-lib\",\n            \"version\": \"1.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/dompdf/php-svg-lib.git\",\n                \"reference\": \"eb045e518185298eb6ff8d80d0d0c6b17aecd9af\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/dompdf/php-svg-lib/zipball/eb045e518185298eb6ff8d80d0d0c6b17aecd9af\",\n                \"reference\": \"eb045e518185298eb6ff8d80d0d0c6b17aecd9af\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-mbstring\": \"*\",\n                \"php\": \"^7.1 || ^8.0\",\n                \"sabberworm/php-css-parser\": \"^8.4\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Svg\\\\\": \"src/Svg\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-3.0-or-later\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"The SvgLib Community\",\n                    \"homepage\": \"https://github.com/dompdf/php-svg-lib/blob/master/AUTHORS.md\"\n                }\n            ],\n            \"description\": \"A library to read, parse and export to PDF SVG files.\",\n            \"homepage\": \"https://github.com/dompdf/php-svg-lib\",\n            \"support\": {\n                \"issues\": \"https://github.com/dompdf/php-svg-lib/issues\",\n                \"source\": \"https://github.com/dompdf/php-svg-lib/tree/1.0.0\"\n            },\n            \"time\": \"2024-04-29T13:26:35+00:00\"\n        },\n        {\n            \"name\": \"evenement/evenement\",\n            \"version\": \"v3.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/igorw/evenement.git\",\n                \"reference\": \"0a16b0d71ab13284339abb99d9d2bd813640efbc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/igorw/evenement/zipball/0a16b0d71ab13284339abb99d9d2bd813640efbc\",\n                \"reference\": \"0a16b0d71ab13284339abb99d9d2bd813640efbc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9 || ^6\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Evenement\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Igor Wiedler\",\n                    \"email\": \"igor@wiedler.ch\"\n                }\n            ],\n            \"description\": \"Événement is a very simple event dispatching library for PHP\",\n            \"keywords\": [\n                \"event-dispatcher\",\n                \"event-emitter\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/igorw/evenement/issues\",\n                \"source\": \"https://github.com/igorw/evenement/tree/v3.0.2\"\n            },\n            \"time\": \"2023-08-08T05:53:35+00:00\"\n        },\n        {\n            \"name\": \"ezyang/htmlpurifier\",\n            \"version\": \"v4.18.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ezyang/htmlpurifier.git\",\n                \"reference\": \"cb56001e54359df7ae76dc522d08845dc741621b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ezyang/htmlpurifier/zipball/cb56001e54359df7ae76dc522d08845dc741621b\",\n                \"reference\": \"cb56001e54359df7ae76dc522d08845dc741621b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"~5.6.0 || ~7.0.0 || ~7.1.0 || ~7.2.0 || ~7.3.0 || ~7.4.0 || ~8.0.0 || ~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"require-dev\": {\n                \"cerdic/css-tidy\": \"^1.7 || ^2.0\",\n                \"simpletest/simpletest\": \"dev-master\"\n            },\n            \"suggest\": {\n                \"cerdic/css-tidy\": \"If you want to use the filter 'Filter.ExtractStyleBlocks'.\",\n                \"ext-bcmath\": \"Used for unit conversion and imagecrash protection\",\n                \"ext-iconv\": \"Converts text to and from non-UTF-8 encodings\",\n                \"ext-tidy\": \"Used for pretty-printing HTML\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"library/HTMLPurifier.composer.php\"\n                ],\n                \"psr-0\": {\n                    \"HTMLPurifier\": \"library/\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/library/HTMLPurifier/Language/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-2.1-or-later\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Edward Z. Yang\",\n                    \"email\": \"admin@htmlpurifier.org\",\n                    \"homepage\": \"http://ezyang.com\"\n                }\n            ],\n            \"description\": \"Standards compliant HTML filter written in PHP\",\n            \"homepage\": \"http://htmlpurifier.org/\",\n            \"keywords\": [\n                \"html\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/ezyang/htmlpurifier/issues\",\n                \"source\": \"https://github.com/ezyang/htmlpurifier/tree/v4.18.0\"\n            },\n            \"time\": \"2024-11-01T03:51:45+00:00\"\n        },\n        {\n            \"name\": \"firebase/php-jwt\",\n            \"version\": \"v6.10.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/firebase/php-jwt.git\",\n                \"reference\": \"30c19ed0f3264cb660ea496895cfb6ef7ee3653b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/firebase/php-jwt/zipball/30c19ed0f3264cb660ea496895cfb6ef7ee3653b\",\n                \"reference\": \"30c19ed0f3264cb660ea496895cfb6ef7ee3653b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^8.0\"\n            },\n            \"require-dev\": {\n                \"guzzlehttp/guzzle\": \"^7.4\",\n                \"phpspec/prophecy-phpunit\": \"^2.0\",\n                \"phpunit/phpunit\": \"^9.5\",\n                \"psr/cache\": \"^2.0||^3.0\",\n                \"psr/http-client\": \"^1.0\",\n                \"psr/http-factory\": \"^1.0\"\n            },\n            \"suggest\": {\n                \"ext-sodium\": \"Support EdDSA (Ed25519) signatures\",\n                \"paragonie/sodium_compat\": \"Support EdDSA (Ed25519) signatures when libsodium is not present\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Firebase\\\\JWT\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Neuman Vong\",\n                    \"email\": \"neuman+pear@twilio.com\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Anant Narayanan\",\n                    \"email\": \"anant@php.net\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"A simple library to encode and decode JSON Web Tokens (JWT) in PHP. Should conform to the current spec.\",\n            \"homepage\": \"https://github.com/firebase/php-jwt\",\n            \"keywords\": [\n                \"jwt\",\n                \"php\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/firebase/php-jwt/issues\",\n                \"source\": \"https://github.com/firebase/php-jwt/tree/v6.10.2\"\n            },\n            \"time\": \"2024-11-24T11:22:49+00:00\"\n        },\n        {\n            \"name\": \"google/apiclient\",\n            \"version\": \"v2.18.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/googleapis/google-api-php-client.git\",\n                \"reference\": \"d8d201ba8a189a3cd7fb34e4da569f2ed440eee7\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/googleapis/google-api-php-client/zipball/d8d201ba8a189a3cd7fb34e4da569f2ed440eee7\",\n                \"reference\": \"d8d201ba8a189a3cd7fb34e4da569f2ed440eee7\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"firebase/php-jwt\": \"^6.0\",\n                \"google/apiclient-services\": \"~0.350\",\n                \"google/auth\": \"^1.37\",\n                \"guzzlehttp/guzzle\": \"^7.4.5\",\n                \"guzzlehttp/psr7\": \"^2.6\",\n                \"monolog/monolog\": \"^2.9||^3.0\",\n                \"php\": \"^8.0\",\n                \"phpseclib/phpseclib\": \"^3.0.36\"\n            },\n            \"require-dev\": {\n                \"cache/filesystem-adapter\": \"^1.1\",\n                \"composer/composer\": \"^1.10.23\",\n                \"phpcompatibility/php-compatibility\": \"^9.2\",\n                \"phpspec/prophecy-phpunit\": \"^2.1\",\n                \"phpunit/phpunit\": \"^9.6\",\n                \"squizlabs/php_codesniffer\": \"^3.8\",\n                \"symfony/css-selector\": \"~2.1\",\n                \"symfony/dom-crawler\": \"~2.1\"\n            },\n            \"suggest\": {\n                \"cache/filesystem-adapter\": \"For caching certs and tokens (using Google\\\\Client::setCache)\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/aliases.php\"\n                ],\n                \"psr-4\": {\n                    \"Google\\\\\": \"src/\"\n                },\n                \"classmap\": [\n                    \"src/aliases.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"Apache-2.0\"\n            ],\n            \"description\": \"Client library for Google APIs\",\n            \"homepage\": \"http://developers.google.com/api-client-library/php\",\n            \"keywords\": [\n                \"google\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/googleapis/google-api-php-client/issues\",\n                \"source\": \"https://github.com/googleapis/google-api-php-client/tree/v2.18.2\"\n            },\n            \"time\": \"2024-12-16T22:52:40+00:00\"\n        },\n        {\n            \"name\": \"google/apiclient-services\",\n            \"version\": \"v0.387.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/googleapis/google-api-php-client-services.git\",\n                \"reference\": \"89b7126578e0aaf6d5584d6ef7c7af165766c850\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/googleapis/google-api-php-client-services/zipball/89b7126578e0aaf6d5584d6ef7c7af165766c850\",\n                \"reference\": \"89b7126578e0aaf6d5584d6ef7c7af165766c850\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^8.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.6\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"autoload.php\"\n                ],\n                \"psr-4\": {\n                    \"Google\\\\Service\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"Apache-2.0\"\n            ],\n            \"description\": \"Client library for Google APIs\",\n            \"homepage\": \"http://developers.google.com/api-client-library/php\",\n            \"keywords\": [\n                \"google\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/googleapis/google-api-php-client-services/issues\",\n                \"source\": \"https://github.com/googleapis/google-api-php-client-services/tree/v0.387.0\"\n            },\n            \"time\": \"2024-12-21T01:06:13+00:00\"\n        },\n        {\n            \"name\": \"google/auth\",\n            \"version\": \"v1.45.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/googleapis/google-auth-library-php.git\",\n                \"reference\": \"cfcb93162341ed5022fa976e621f0fa2b05ba6ad\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/googleapis/google-auth-library-php/zipball/cfcb93162341ed5022fa976e621f0fa2b05ba6ad\",\n                \"reference\": \"cfcb93162341ed5022fa976e621f0fa2b05ba6ad\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"firebase/php-jwt\": \"^6.0\",\n                \"guzzlehttp/guzzle\": \"^7.4.5\",\n                \"guzzlehttp/psr7\": \"^2.4.5\",\n                \"php\": \"^8.0\",\n                \"psr/cache\": \"^2.0||^3.0\",\n                \"psr/http-message\": \"^1.1||^2.0\",\n                \"psr/log\": \"^3.0\"\n            },\n            \"require-dev\": {\n                \"guzzlehttp/promises\": \"^2.0\",\n                \"kelvinmo/simplejwt\": \"0.7.1\",\n                \"phpseclib/phpseclib\": \"^3.0.35\",\n                \"phpspec/prophecy-phpunit\": \"^2.1\",\n                \"phpunit/phpunit\": \"^9.6\",\n                \"sebastian/comparator\": \">=1.2.3\",\n                \"squizlabs/php_codesniffer\": \"^3.5\",\n                \"symfony/process\": \"^6.0||^7.0\",\n                \"webmozart/assert\": \"^1.11\"\n            },\n            \"suggest\": {\n                \"phpseclib/phpseclib\": \"May be used in place of OpenSSL for signing strings or for token management. Please require version ^2.\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Google\\\\Auth\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"Apache-2.0\"\n            ],\n            \"description\": \"Google Auth Library for PHP\",\n            \"homepage\": \"http://github.com/google/google-auth-library-php\",\n            \"keywords\": [\n                \"Authentication\",\n                \"google\",\n                \"oauth2\"\n            ],\n            \"support\": {\n                \"docs\": \"https://googleapis.github.io/google-auth-library-php/main/\",\n                \"issues\": \"https://github.com/googleapis/google-auth-library-php/issues\",\n                \"source\": \"https://github.com/googleapis/google-auth-library-php/tree/v1.45.0\"\n            },\n            \"time\": \"2024-12-11T02:10:48+00:00\"\n        },\n        {\n            \"name\": \"graham-campbell/result-type\",\n            \"version\": \"v1.1.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/GrahamCampbell/Result-Type.git\",\n                \"reference\": \"3ba905c11371512af9d9bdd27d99b782216b6945\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/GrahamCampbell/Result-Type/zipball/3ba905c11371512af9d9bdd27d99b782216b6945\",\n                \"reference\": \"3ba905c11371512af9d9bdd27d99b782216b6945\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"phpoption/phpoption\": \"^1.9.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5.39 || ^9.6.20 || ^10.5.28\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GrahamCampbell\\\\ResultType\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                }\n            ],\n            \"description\": \"An Implementation Of The Result Type\",\n            \"keywords\": [\n                \"Graham Campbell\",\n                \"GrahamCampbell\",\n                \"Result Type\",\n                \"Result-Type\",\n                \"result\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/GrahamCampbell/Result-Type/issues\",\n                \"source\": \"https://github.com/GrahamCampbell/Result-Type/tree/v1.1.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/graham-campbell/result-type\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-07-20T21:45:45+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/guzzle\",\n            \"version\": \"7.9.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/guzzle.git\",\n                \"reference\": \"d281ed313b989f213357e3be1a179f02196ac99b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/guzzle/zipball/d281ed313b989f213357e3be1a179f02196ac99b\",\n                \"reference\": \"d281ed313b989f213357e3be1a179f02196ac99b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"guzzlehttp/promises\": \"^1.5.3 || ^2.0.3\",\n                \"guzzlehttp/psr7\": \"^2.7.0\",\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"psr/http-client\": \"^1.0\",\n                \"symfony/deprecation-contracts\": \"^2.2 || ^3.0\"\n            },\n            \"provide\": {\n                \"psr/http-client-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"ext-curl\": \"*\",\n                \"guzzle/client-integration-tests\": \"3.0.2\",\n                \"php-http/message-factory\": \"^1.1\",\n                \"phpunit/phpunit\": \"^8.5.39 || ^9.6.20\",\n                \"psr/log\": \"^1.1 || ^2.0 || ^3.0\"\n            },\n            \"suggest\": {\n                \"ext-curl\": \"Required for CURL handler support\",\n                \"ext-intl\": \"Required for Internationalized Domain Name (IDN) support\",\n                \"psr/log\": \"Required for using the Log middleware\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/functions_include.php\"\n                ],\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"Jeremy Lindblom\",\n                    \"email\": \"jeremeamia@gmail.com\",\n                    \"homepage\": \"https://github.com/jeremeamia\"\n                },\n                {\n                    \"name\": \"George Mponos\",\n                    \"email\": \"gmponos@gmail.com\",\n                    \"homepage\": \"https://github.com/gmponos\"\n                },\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\",\n                    \"homepage\": \"https://github.com/Nyholm\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://github.com/sagikazarmark\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"email\": \"webmaster@tubo-world.de\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                }\n            ],\n            \"description\": \"Guzzle is a PHP HTTP client library\",\n            \"keywords\": [\n                \"client\",\n                \"curl\",\n                \"framework\",\n                \"http\",\n                \"http client\",\n                \"psr-18\",\n                \"psr-7\",\n                \"rest\",\n                \"web service\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guzzle/guzzle/issues\",\n                \"source\": \"https://github.com/guzzle/guzzle/tree/7.9.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/guzzlehttp/guzzle\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-07-24T11:22:20+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/promises\",\n            \"version\": \"2.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/promises.git\",\n                \"reference\": \"f9c436286ab2892c7db7be8c8da4ef61ccf7b455\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/promises/zipball/f9c436286ab2892c7db7be8c8da4ef61ccf7b455\",\n                \"reference\": \"f9c436286ab2892c7db7be8c8da4ef61ccf7b455\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2.5 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"phpunit/phpunit\": \"^8.5.39 || ^9.6.20\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\Promise\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\",\n                    \"homepage\": \"https://github.com/Nyholm\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"email\": \"webmaster@tubo-world.de\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                }\n            ],\n            \"description\": \"Guzzle promises library\",\n            \"keywords\": [\n                \"promise\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guzzle/promises/issues\",\n                \"source\": \"https://github.com/guzzle/promises/tree/2.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/guzzlehttp/promises\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-10-17T10:06:22+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/psr7\",\n            \"version\": \"2.7.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/psr7.git\",\n                \"reference\": \"a70f5c95fb43bc83f07c9c948baa0dc1829bf201\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/psr7/zipball/a70f5c95fb43bc83f07c9c948baa0dc1829bf201\",\n                \"reference\": \"a70f5c95fb43bc83f07c9c948baa0dc1829bf201\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"psr/http-factory\": \"^1.0\",\n                \"psr/http-message\": \"^1.1 || ^2.0\",\n                \"ralouphie/getallheaders\": \"^3.0\"\n            },\n            \"provide\": {\n                \"psr/http-factory-implementation\": \"1.0\",\n                \"psr/http-message-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"http-interop/http-factory-tests\": \"0.9.0\",\n                \"phpunit/phpunit\": \"^8.5.39 || ^9.6.20\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-httphandlerrunner\": \"Emit PSR-7 responses\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\Psr7\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"George Mponos\",\n                    \"email\": \"gmponos@gmail.com\",\n                    \"homepage\": \"https://github.com/gmponos\"\n                },\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\",\n                    \"homepage\": \"https://github.com/Nyholm\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://github.com/sagikazarmark\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"email\": \"webmaster@tubo-world.de\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://sagikazarmark.hu\"\n                }\n            ],\n            \"description\": \"PSR-7 message implementation that also provides common utility methods\",\n            \"keywords\": [\n                \"http\",\n                \"message\",\n                \"psr-7\",\n                \"request\",\n                \"response\",\n                \"stream\",\n                \"uri\",\n                \"url\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guzzle/psr7/issues\",\n                \"source\": \"https://github.com/guzzle/psr7/tree/2.7.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/guzzlehttp/psr7\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-07-18T11:15:46+00:00\"\n        },\n        {\n            \"name\": \"html2text/html2text\",\n            \"version\": \"4.3.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/mtibben/html2text.git\",\n                \"reference\": \"3b443cbe302b52eb5806a21a9dbd79524203970a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/mtibben/html2text/zipball/3b443cbe302b52eb5806a21a9dbd79524203970a\",\n                \"reference\": \"3b443cbe302b52eb5806a21a9dbd79524203970a\",\n                \"shasum\": \"\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"~4|^9.0\"\n            },\n            \"suggest\": {\n                \"ext-mbstring\": \"For best performance\",\n                \"symfony/polyfill-mbstring\": \"If you can't install ext-mbstring\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Html2Text\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"GPL-2.0-or-later\"\n            ],\n            \"description\": \"Converts HTML to formatted plain text\",\n            \"support\": {\n                \"issues\": \"https://github.com/mtibben/html2text/issues\",\n                \"source\": \"https://github.com/mtibben/html2text/tree/4.3.2\"\n            },\n            \"time\": \"2024-08-20T02:43:29+00:00\"\n        },\n        {\n            \"name\": \"kamermans/guzzle-oauth2-subscriber\",\n            \"version\": \"v1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/kamermans/guzzle-oauth2-subscriber.git\",\n                \"reference\": \"16f2fb28fa6803c519c6339ff6270cdd7a365abf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/kamermans/guzzle-oauth2-subscriber/zipball/16f2fb28fa6803c519c6339ff6270cdd7a365abf\",\n                \"reference\": \"16f2fb28fa6803c519c6339ff6270cdd7a365abf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1.0\"\n            },\n            \"suggest\": {\n                \"guzzlehttp/guzzle\": \"Guzzle ~4.0|~5.0|~6.0|~7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"kamermans\\\\OAuth2\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Steve Kamerman\",\n                    \"email\": \"stevekamerman@gmail.com\"\n                }\n            ],\n            \"description\": \"OAuth 2.0 client for Guzzle 4, 5, 6 and 7+\",\n            \"keywords\": [\n                \"Guzzle\",\n                \"oauth\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/kamermans/guzzle-oauth2-subscriber/issues\",\n                \"source\": \"https://github.com/kamermans/guzzle-oauth2-subscriber/tree/v1.1.0\"\n            },\n            \"time\": \"2024-05-02T18:45:14+00:00\"\n        },\n        {\n            \"name\": \"knplabs/knp-snappy\",\n            \"version\": \"v1.5.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/KnpLabs/snappy.git\",\n                \"reference\": \"98468898b50c09f26d56d905b79b0f52a2215da6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/KnpLabs/snappy/zipball/98468898b50c09f26d56d905b79b0f52a2215da6\",\n                \"reference\": \"98468898b50c09f26d56d905b79b0f52a2215da6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"psr/log\": \"^2.0||^3.0\",\n                \"symfony/process\": \"^5.0||^6.0||^7.0\"\n            },\n            \"require-dev\": {\n                \"friendsofphp/php-cs-fixer\": \"^3.0\",\n                \"pedrotroller/php-cs-custom-fixer\": \"^2.19\",\n                \"phpstan/phpstan\": \"^1.0.0\",\n                \"phpstan/phpstan-phpunit\": \"^1.0.0\",\n                \"phpunit/phpunit\": \"^8.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Knp\\\\Snappy\\\\\": \"src/Knp/Snappy\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"KNP Labs Team\",\n                    \"homepage\": \"http://knplabs.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"http://github.com/KnpLabs/snappy/contributors\"\n                }\n            ],\n            \"description\": \"PHP library allowing thumbnail, snapshot or PDF generation from a url or a html page. Wrapper for wkhtmltopdf/wkhtmltoimage.\",\n            \"homepage\": \"http://github.com/KnpLabs/snappy\",\n            \"keywords\": [\n                \"knp\",\n                \"knplabs\",\n                \"pdf\",\n                \"snapshot\",\n                \"thumbnail\",\n                \"wkhtmltopdf\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/KnpLabs/snappy/issues\",\n                \"source\": \"https://github.com/KnpLabs/snappy/tree/v1.5.0\"\n            },\n            \"time\": \"2023-12-18T09:12:11+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-code\",\n            \"version\": \"4.16.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-code.git\",\n                \"reference\": \"1793e78dad4108b594084d05d1fb818b85b110af\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-code/zipball/1793e78dad4108b594084d05d1fb818b85b110af\",\n                \"reference\": \"1793e78dad4108b594084d05d1fb818b85b110af\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/annotations\": \"^2.0.1\",\n                \"ext-phar\": \"*\",\n                \"laminas/laminas-coding-standard\": \"^3.0.0\",\n                \"laminas/laminas-stdlib\": \"^3.18.0\",\n                \"phpunit/phpunit\": \"^10.5.37\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"vimeo/psalm\": \"^5.15.0\"\n            },\n            \"suggest\": {\n                \"doctrine/annotations\": \"Doctrine\\\\Common\\\\Annotations >=1.0 for annotation features\",\n                \"laminas/laminas-stdlib\": \"Laminas\\\\Stdlib component\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Code\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Extensions to the PHP Reflection API, static code scanning, and code generation\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"code\",\n                \"laminas\",\n                \"laminasframework\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-code/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-code/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-code/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-code\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-11-20T13:15:13+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-config\",\n            \"version\": \"3.10.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-config.git\",\n                \"reference\": \"0f50adbf2b2e01e0fe99c13e37d3a6c1ef645185\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-config/zipball/0f50adbf2b2e01e0fe99c13e37d3a6c1ef645185\",\n                \"reference\": \"0f50adbf2b2e01e0fe99c13e37d3a6c1ef645185\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"laminas/laminas-stdlib\": \"^3.6\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\",\n                \"psr/container\": \"^1.0\"\n            },\n            \"conflict\": {\n                \"container-interop/container-interop\": \"<1.2.0\",\n                \"zendframework/zend-config\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"^3.0.1\",\n                \"laminas/laminas-filter\": \"^2.39.0\",\n                \"laminas/laminas-i18n\": \"^2.29.0\",\n                \"laminas/laminas-servicemanager\": \"^3.23.0\",\n                \"phpunit/phpunit\": \"^10.5.38\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-filter\": \"^2.7.2; install if you want to use the Filter processor\",\n                \"laminas/laminas-i18n\": \"^2.7.4; install if you want to use the Translator processor\",\n                \"laminas/laminas-servicemanager\": \"^2.7.8 || ^3.3; if you need an extensible plugin manager for use with the Config Factory\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Config\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"provides a nested object property based user interface for accessing this configuration data within application code\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"config\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-config/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-config/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-config/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-config\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2024-12-05T14:32:05+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-db\",\n            \"version\": \"2.20.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-db.git\",\n                \"reference\": \"207b9ee70a8b518913c1fad688d7a64fe89a8b91\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-db/zipball/207b9ee70a8b518913c1fad688d7a64fe89a8b91\",\n                \"reference\": \"207b9ee70a8b518913c1fad688d7a64fe89a8b91\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-stdlib\": \"^3.7.1\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-db\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"^2.4.0\",\n                \"laminas/laminas-eventmanager\": \"^3.6.0\",\n                \"laminas/laminas-hydrator\": \"^4.7\",\n                \"laminas/laminas-servicemanager\": \"^3.19.0\",\n                \"phpunit/phpunit\": \"^9.5.25\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-eventmanager\": \"Laminas\\\\EventManager component\",\n                \"laminas/laminas-hydrator\": \"(^3.2 || ^4.3) Laminas\\\\Hydrator component for using HydratingResultSets\",\n                \"laminas/laminas-servicemanager\": \"Laminas\\\\ServiceManager component\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"component\": \"Laminas\\\\Db\",\n                    \"config-provider\": \"Laminas\\\\Db\\\\ConfigProvider\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Db\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Database abstraction layer, SQL abstraction, result set abstraction, and RowDataGateway and TableDataGateway implementations\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"db\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-db/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-db/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-db/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-db\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-04-02T01:04:56+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-escaper\",\n            \"version\": \"2.15.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-escaper.git\",\n                \"reference\": \"c612b0488ae486284c39885efca494c180f16351\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-escaper/zipball/c612b0488ae486284c39885efca494c180f16351\",\n                \"reference\": \"c612b0488ae486284c39885efca494c180f16351\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-escaper\": \"*\"\n            },\n            \"require-dev\": {\n                \"infection/infection\": \"^0.27.11\",\n                \"laminas/laminas-coding-standard\": \"~3.0.1\",\n                \"maglnet/composer-require-checker\": \"^3.8.0\",\n                \"phpunit/phpunit\": \"^9.6.22\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"vimeo/psalm\": \"^5.26.1\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Escaper\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Securely and safely escape HTML, HTML attributes, JavaScript, CSS, and URLs\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"escaper\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-escaper/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-escaper/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-escaper/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-escaper\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-12-17T19:39:54+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-eventmanager\",\n            \"version\": \"3.14.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-eventmanager.git\",\n                \"reference\": \"1837cafaaaee74437f6d8ec9ff7da03e6f81d809\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-eventmanager/zipball/1837cafaaaee74437f6d8ec9ff7da03e6f81d809\",\n                \"reference\": \"1837cafaaaee74437f6d8ec9ff7da03e6f81d809\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"container-interop/container-interop\": \"<1.2\",\n                \"zendframework/zend-eventmanager\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~3.0.0\",\n                \"laminas/laminas-stdlib\": \"^3.20\",\n                \"phpbench/phpbench\": \"^1.3.1\",\n                \"phpunit/phpunit\": \"^10.5.38\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"psr/container\": \"^1.1.2 || ^2.0.2\",\n                \"vimeo/psalm\": \"^5.26.1\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-stdlib\": \"^2.7.3 || ^3.0, to use the FilterChain feature\",\n                \"psr/container\": \"^1.1.2 || ^2.0.2, to use the lazy listeners feature\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\EventManager\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Trigger and listen to events within a PHP application\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"event\",\n                \"eventmanager\",\n                \"events\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-eventmanager/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-eventmanager/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-eventmanager/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-eventmanager\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-11-21T11:31:22+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-filter\",\n            \"version\": \"2.39.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-filter.git\",\n                \"reference\": \"515f081cdbea90721bfbffdd15184564b256478e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-filter/zipball/515f081cdbea90721bfbffdd15184564b256478e\",\n                \"reference\": \"515f081cdbea90721bfbffdd15184564b256478e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-mbstring\": \"*\",\n                \"laminas/laminas-servicemanager\": \"^3.21.0\",\n                \"laminas/laminas-stdlib\": \"^3.19.0\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-validator\": \"<2.10.1\",\n                \"zendframework/zend-filter\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~3.0\",\n                \"laminas/laminas-crypt\": \"^3.12\",\n                \"laminas/laminas-i18n\": \"^2.28.1\",\n                \"laminas/laminas-uri\": \"^2.12\",\n                \"pear/archive_tar\": \"^1.5.0\",\n                \"phpunit/phpunit\": \"^10.5.36\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"psr/http-factory\": \"^1.1.0\",\n                \"vimeo/psalm\": \"^5.26.1\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-crypt\": \"Laminas\\\\Crypt component, for encryption filters\",\n                \"laminas/laminas-i18n\": \"Laminas\\\\I18n component for filters depending on i18n functionality\",\n                \"laminas/laminas-uri\": \"Laminas\\\\Uri component, for the UriNormalize filter\",\n                \"psr/http-factory-implementation\": \"psr/http-factory-implementation, for creating file upload instances when consuming PSR-7 in file upload filters\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"component\": \"Laminas\\\\Filter\",\n                    \"config-provider\": \"Laminas\\\\Filter\\\\ConfigProvider\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Filter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Programmatically filter and normalize data and files\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"filter\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-filter/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-filter/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-filter/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-filter\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-10-31T21:18:49+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-form\",\n            \"version\": \"3.21.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-form.git\",\n                \"reference\": \"653c869d10c361027ae6c660c991ec3e3f38ed65\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-form/zipball/653c869d10c361027ae6c660c991ec3e3f38ed65\",\n                \"reference\": \"653c869d10c361027ae6c660c991ec3e3f38ed65\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-hydrator\": \"^4.13.0\",\n                \"laminas/laminas-inputfilter\": \"^2.24.0\",\n                \"laminas/laminas-stdlib\": \"^3.16.1\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"doctrine/annotations\": \"<1.14.0\",\n                \"laminas/laminas-captcha\": \"<2.16.0\",\n                \"laminas/laminas-eventmanager\": \"<3.10.0\",\n                \"laminas/laminas-i18n\": \"<2.21.0\",\n                \"laminas/laminas-recaptcha\": \"<3.6.0\",\n                \"laminas/laminas-servicemanager\": \"<3.20.0\",\n                \"laminas/laminas-view\": \"<2.27.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/annotations\": \"^1.14.3 || ^2.0.1\",\n                \"ext-intl\": \"*\",\n                \"laminas/laminas-captcha\": \"^2.17\",\n                \"laminas/laminas-coding-standard\": \"^2.5\",\n                \"laminas/laminas-db\": \"^2.20\",\n                \"laminas/laminas-escaper\": \"^2.13\",\n                \"laminas/laminas-eventmanager\": \"^3.13.1\",\n                \"laminas/laminas-filter\": \"^2.36\",\n                \"laminas/laminas-i18n\": \"^2.28.0\",\n                \"laminas/laminas-modulemanager\": \"^2.16.0\",\n                \"laminas/laminas-recaptcha\": \"^3.7\",\n                \"laminas/laminas-servicemanager\": \"^3.22.1\",\n                \"laminas/laminas-session\": \"^2.21\",\n                \"laminas/laminas-text\": \"^2.11.0\",\n                \"laminas/laminas-validator\": \"^2.64.1\",\n                \"laminas/laminas-view\": \"^2.35\",\n                \"phpunit/phpunit\": \"^10.5.29\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"vimeo/psalm\": \"^5.25\"\n            },\n            \"suggest\": {\n                \"doctrine/annotations\": \"^1.14, required to use laminas-form annotations support\",\n                \"laminas/laminas-captcha\": \"^2.16, required for using CAPTCHA form elements\",\n                \"laminas/laminas-eventmanager\": \"^3.10, reuired for laminas-form annotations support\",\n                \"laminas/laminas-i18n\": \"^2.21, required when using laminas-form view helpers\",\n                \"laminas/laminas-recaptcha\": \"^3.6, in order to use the ReCaptcha form element\",\n                \"laminas/laminas-servicemanager\": \"^3.20, required to use the form factories or provide services\",\n                \"laminas/laminas-view\": \"^2.27, required for using the laminas-form view helpers\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"component\": \"Laminas\\\\Form\",\n                    \"config-provider\": \"Laminas\\\\Form\\\\ConfigProvider\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Form\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Validate and display simple and complex forms, casting forms to business objects and vice versa\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"form\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-form/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-form/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-form/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-form\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-10-09T08:28:30+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-http\",\n            \"version\": \"2.21.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-http.git\",\n                \"reference\": \"a9867e4d1cda3dbad208903239c83a3d670cce10\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-http/zipball/a9867e4d1cda3dbad208903239c83a3d670cce10\",\n                \"reference\": \"a9867e4d1cda3dbad208903239c83a3d670cce10\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-loader\": \"^2.10\",\n                \"laminas/laminas-stdlib\": \"^3.6\",\n                \"laminas/laminas-uri\": \"^2.11\",\n                \"laminas/laminas-validator\": \"^2.15 || ^3.0\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-http\": \"*\"\n            },\n            \"require-dev\": {\n                \"ext-curl\": \"*\",\n                \"laminas/laminas-coding-standard\": \"~2.4.0\",\n                \"phpunit/phpunit\": \"^9.6.21\"\n            },\n            \"suggest\": {\n                \"paragonie/certainty\": \"For automated management of cacert.pem\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Http\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Provides an easy interface for performing Hyper-Text Transfer Protocol (HTTP) requests\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"http\",\n                \"http client\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-http/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-http/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-http/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-http\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-12-04T09:17:39+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-hydrator\",\n            \"version\": \"4.16.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-hydrator.git\",\n                \"reference\": \"a162bd571924968d67ef1f43aed044b8f9c108ef\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-hydrator/zipball/a162bd571924968d67ef1f43aed044b8f9c108ef\",\n                \"reference\": \"a162bd571924968d67ef1f43aed044b8f9c108ef\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-stdlib\": \"^3.20\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\",\n                \"webmozart/assert\": \"^1.11\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-servicemanager\": \"<3.14.0\",\n                \"zendframework/zend-hydrator\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~3.0\",\n                \"laminas/laminas-eventmanager\": \"^3.13.1\",\n                \"laminas/laminas-modulemanager\": \"^2.16.0\",\n                \"laminas/laminas-serializer\": \"^2.17.0\",\n                \"laminas/laminas-servicemanager\": \"^3.23.0\",\n                \"phpbench/phpbench\": \"^1.3.1\",\n                \"phpunit/phpunit\": \"^10.5.38\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"vimeo/psalm\": \"^5.26.1\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-eventmanager\": \"^3.13, to support aggregate hydrator usage\",\n                \"laminas/laminas-serializer\": \"^2.17, to use the SerializableStrategy\",\n                \"laminas/laminas-servicemanager\": \"^3.22, to support hydrator plugin manager usage\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"component\": \"Laminas\\\\Hydrator\",\n                    \"config-provider\": \"Laminas\\\\Hydrator\\\\ConfigProvider\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Hydrator\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Serialize objects to arrays, and vice versa\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"hydrator\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-hydrator/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-hydrator/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-hydrator/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-hydrator\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-11-13T14:04:02+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-i18n\",\n            \"version\": \"2.29.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-i18n.git\",\n                \"reference\": \"9aa7ef6073556e9b4cfd8d9a0cb8e41cd3883454\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-i18n/zipball/9aa7ef6073556e9b4cfd8d9a0cb8e41cd3883454\",\n                \"reference\": \"9aa7ef6073556e9b4cfd8d9a0cb8e41cd3883454\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-intl\": \"*\",\n                \"laminas/laminas-servicemanager\": \"^3.21.0\",\n                \"laminas/laminas-stdlib\": \"^3.0\",\n                \"laminas/laminas-translator\": \"^1.0\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-view\": \"<2.20.0\",\n                \"zendframework/zend-i18n\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^3.12.1\",\n                \"laminas/laminas-cache-storage-adapter-memory\": \"^2.3.0\",\n                \"laminas/laminas-cache-storage-deprecated-factory\": \"^1.2\",\n                \"laminas/laminas-coding-standard\": \"~2.5.0\",\n                \"laminas/laminas-config\": \"^3.9.0\",\n                \"laminas/laminas-eventmanager\": \"^3.13\",\n                \"laminas/laminas-filter\": \"^2.34\",\n                \"laminas/laminas-validator\": \"^2.49\",\n                \"laminas/laminas-view\": \"^2.34\",\n                \"phpunit/phpunit\": \"^10.5.11\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"vimeo/psalm\": \"^5.22.2\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-cache\": \"You should install this package to cache the translations\",\n                \"laminas/laminas-config\": \"You should install this package to use the INI translation format\",\n                \"laminas/laminas-eventmanager\": \"You should install this package to use the events in the translator\",\n                \"laminas/laminas-filter\": \"You should install this package to use the provided filters\",\n                \"laminas/laminas-i18n-resources\": \"This package provides validator and captcha translations\",\n                \"laminas/laminas-validator\": \"You should install this package to use the provided validators\",\n                \"laminas/laminas-view\": \"You should install this package to use the provided view helpers\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"component\": \"Laminas\\\\I18n\",\n                    \"config-provider\": \"Laminas\\\\I18n\\\\ConfigProvider\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\I18n\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Provide translations for your application, and filter and validate internationalized values\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"i18n\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-i18n/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-i18n/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-i18n/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-i18n\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-10-11T09:44:53+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-inputfilter\",\n            \"version\": \"2.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-inputfilter.git\",\n                \"reference\": \"214b033769616f4211ffb63b432b716d786622c9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-inputfilter/zipball/214b033769616f4211ffb63b432b716d786622c9\",\n                \"reference\": \"214b033769616f4211ffb63b432b716d786622c9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-filter\": \"^2.19\",\n                \"laminas/laminas-servicemanager\": \"^3.21.0\",\n                \"laminas/laminas-stdlib\": \"^3.19\",\n                \"laminas/laminas-validator\": \"^2.60.0\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-inputfilter\": \"*\"\n            },\n            \"require-dev\": {\n                \"ext-json\": \"*\",\n                \"laminas/laminas-coding-standard\": \"~3.0\",\n                \"phpunit/phpunit\": \"^10.5.20\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"psr/http-message\": \"^2.0\",\n                \"vimeo/psalm\": \"^5.24.0\",\n                \"webmozart/assert\": \"^1.11\"\n            },\n            \"suggest\": {\n                \"psr/http-message-implementation\": \"PSR-7 is required if you wish to validate PSR-7 UploadedFileInterface payloads\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"component\": \"Laminas\\\\InputFilter\",\n                    \"config-provider\": \"Laminas\\\\InputFilter\\\\ConfigProvider\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\InputFilter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Normalize and validate input sets from the web, APIs, the CLI, and more, including files\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"inputfilter\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-inputfilter/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-inputfilter/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-inputfilter/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-inputfilter\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-11-15T20:17:41+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-json\",\n            \"version\": \"3.7.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-json.git\",\n                \"reference\": \"a0f9dca08e28f39a7a7a7a04370eb2f017369277\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-json/zipball/a0f9dca08e28f39a7a7a7a04370eb2f017369277\",\n                \"reference\": \"a0f9dca08e28f39a7a7a7a04370eb2f017369277\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-json\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~2.4.0\",\n                \"laminas/laminas-stdlib\": \"^2.7.7 || ^3.19\",\n                \"phpunit/phpunit\": \"^9.5.25\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-json-server\": \"For implementing JSON-RPC servers\",\n                \"laminas/laminas-xml2json\": \"For converting XML documents to JSON\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Json\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"provides convenience methods for serializing native PHP to JSON and decoding JSON to native PHP\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"json\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-json/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-json/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-json/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-json\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2024-12-05T14:51:57+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-json-server\",\n            \"version\": \"3.9.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-json-server.git\",\n                \"reference\": \"08fd8019d03fdd91ea4a60c8ede3af32fd97d15c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-json-server/zipball/08fd8019d03fdd91ea4a60c8ede3af32fd97d15c\",\n                \"reference\": \"08fd8019d03fdd91ea4a60c8ede3af32fd97d15c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-http\": \"^2.19.0\",\n                \"laminas/laminas-json\": \"^3.6.0\",\n                \"laminas/laminas-server\": \"^2.16.0\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-stdlib\": \"<3.2.1\"\n            },\n            \"replace\": {\n                \"zendframework/zend-json-server\": \"^3.2.0\"\n            },\n            \"require-dev\": {\n                \"ext-json\": \"*\",\n                \"laminas/laminas-coding-standard\": \"^2.4.0\",\n                \"phpunit/phpunit\": \"^9.5.26\",\n                \"psalm/plugin-phpunit\": \"^0.18.0\",\n                \"vimeo/psalm\": \"^5.17\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Json\\\\Server\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas Json-Server is a JSON-RPC server implementation.\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"json\",\n                \"json-server\",\n                \"laminas\",\n                \"server\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-json-server/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-json-server/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-json-server/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-json-server\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2023-12-06T00:06:51+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-loader\",\n            \"version\": \"2.11.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-loader.git\",\n                \"reference\": \"c507d5eccb969f7208434e3980680a1f6c0b1d8d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-loader/zipball/c507d5eccb969f7208434e3980680a1f6c0b1d8d\",\n                \"reference\": \"c507d5eccb969f7208434e3980680a1f6c0b1d8d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"~8.0.0 || ~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-loader\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~2.4.0\",\n                \"phpunit/phpunit\": \"~9.5.25\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Loader\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Autoloading and plugin loading strategies\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"laminas\",\n                \"loader\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-loader/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-loader/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-loader/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-loader\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2024-12-05T14:43:32+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-math\",\n            \"version\": \"3.8.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-math.git\",\n                \"reference\": \"a9e54f68accf5f8a3e66dd01fc6b32180e520018\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-math/zipball/a9e54f68accf5f8a3e66dd01fc6b32180e520018\",\n                \"reference\": \"a9e54f68accf5f8a3e66dd01fc6b32180e520018\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-mbstring\": \"*\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-math\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~2.4.0\",\n                \"phpunit/phpunit\": \"~9.5.25\"\n            },\n            \"suggest\": {\n                \"ext-bcmath\": \"If using the bcmath functionality\",\n                \"ext-gmp\": \"If using the gmp functionality\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.2.x-dev\",\n                    \"dev-develop\": \"3.3.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Math\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Create cryptographically secure pseudo-random numbers, and manage big integers\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"laminas\",\n                \"math\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-math/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-math/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-math/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-math\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2024-12-05T13:49:56+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-modulemanager\",\n            \"version\": \"2.17.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-modulemanager.git\",\n                \"reference\": \"3cd6e84ba767b43a47c6c4245a56b30ac3738c6a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-modulemanager/zipball/3cd6e84ba767b43a47c6c4245a56b30ac3738c6a\",\n                \"reference\": \"3cd6e84ba767b43a47c6c4245a56b30ac3738c6a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"brick/varexporter\": \"^0.3.2 || ^0.4 || ^0.5\",\n                \"laminas/laminas-config\": \"^3.7\",\n                \"laminas/laminas-eventmanager\": \"^3.4\",\n                \"laminas/laminas-stdlib\": \"^3.6\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\",\n                \"webimpress/safe-writer\": \"^1.0.2 || ^2.1\"\n            },\n            \"conflict\": {\n                \"amphp/amp\": \"<2.6.4\",\n                \"zendframework/zend-modulemanager\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"^3.0.1\",\n                \"laminas/laminas-loader\": \"^2.11\",\n                \"laminas/laminas-mvc\": \"^3.7.0\",\n                \"laminas/laminas-servicemanager\": \"^3.23.0\",\n                \"phpunit/phpunit\": \"^10.5.38\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"vimeo/psalm\": \"^5.26.1\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-console\": \"Laminas\\\\Console component\",\n                \"laminas/laminas-loader\": \"Laminas\\\\Loader component if you are not using Composer autoloading for your modules\",\n                \"laminas/laminas-mvc\": \"Laminas\\\\Mvc component\",\n                \"laminas/laminas-servicemanager\": \"Laminas\\\\ServiceManager component\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\ModuleManager\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Modular application system for laminas-mvc applications\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"laminas\",\n                \"modulemanager\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-modulemanager/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-modulemanager/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-modulemanager/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-modulemanager\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-11-17T22:29:29+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-mvc\",\n            \"version\": \"3.8.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-mvc.git\",\n                \"reference\": \"53ba28b7222d3a3b49747a26babef43d1b17fb6f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-mvc/zipball/53ba28b7222d3a3b49747a26babef43d1b17fb6f\",\n                \"reference\": \"53ba28b7222d3a3b49747a26babef43d1b17fb6f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"container-interop/container-interop\": \"^1.2\",\n                \"laminas/laminas-eventmanager\": \"^3.4\",\n                \"laminas/laminas-http\": \"^2.15\",\n                \"laminas/laminas-modulemanager\": \"^2.16\",\n                \"laminas/laminas-router\": \"^3.11.1\",\n                \"laminas/laminas-servicemanager\": \"^3.20.0\",\n                \"laminas/laminas-stdlib\": \"^3.19\",\n                \"laminas/laminas-view\": \"^2.18.0\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-mvc\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"^2.5.0\",\n                \"laminas/laminas-json\": \"^3.6\",\n                \"phpunit/phpunit\": \"^10.5.38\",\n                \"webmozart/assert\": \"^1.11\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-json\": \"(^2.6.1 || ^3.0) To auto-deserialize JSON body content in AbstractRestfulController extensions, when json_decode is unavailable\",\n                \"laminas/laminas-log\": \"^2.9.1  To provide log functionality via LogFilterManager, LogFormatterManager, and LogProcessorManager\",\n                \"laminas/laminas-mvc-console\": \"laminas-mvc-console provides the ability to expose laminas-mvc as a console application\",\n                \"laminas/laminas-mvc-i18n\": \"laminas-mvc-i18n provides integration with laminas-i18n, including a translation bridge and translatable route segments\",\n                \"laminas/laminas-mvc-middleware\": \"To dispatch middleware in your laminas-mvc application\",\n                \"laminas/laminas-mvc-plugin-fileprg\": \"To provide Post/Redirect/Get functionality around forms that container file uploads\",\n                \"laminas/laminas-mvc-plugin-flashmessenger\": \"To provide flash messaging capabilities between requests\",\n                \"laminas/laminas-mvc-plugin-identity\": \"To access the authenticated identity (per laminas-authentication) in controllers\",\n                \"laminas/laminas-mvc-plugin-prg\": \"To provide Post/Redirect/Get functionality within controllers\",\n                \"laminas/laminas-paginator\": \"^2.7 To provide pagination functionality via PaginatorPluginManager\",\n                \"laminas/laminas-servicemanager-di\": \"laminas-servicemanager-di provides utilities for integrating laminas-di and laminas-servicemanager in your laminas-mvc application\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Mvc\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas's event-driven MVC layer, including MVC Applications, Controllers, and Plugins\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"laminas\",\n                \"mvc\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-mvc/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-mvc/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-mvc/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-mvc\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-11-18T00:14:29+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-mvc-i18n\",\n            \"version\": \"1.9.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-mvc-i18n.git\",\n                \"reference\": \"433e71e949438239cce814536711914a37544c42\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-mvc-i18n/zipball/433e71e949438239cce814536711914a37544c42\",\n                \"reference\": \"433e71e949438239cce814536711914a37544c42\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"container-interop/container-interop\": \"^1.1\",\n                \"ext-intl\": \"*\",\n                \"laminas/laminas-i18n\": \"^2.13.0\",\n                \"laminas/laminas-router\": \"^3.5.0\",\n                \"laminas/laminas-servicemanager\": \"^3.15.1\",\n                \"laminas/laminas-stdlib\": \"^3.10.1\",\n                \"laminas/laminas-validator\": \"^2.19.0\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-mvc\": \"<3.0.0\",\n                \"phpspec/prophecy\": \"<1.8.0\",\n                \"zendframework/zend-mvc-i18n\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~2.5.0\",\n                \"phpspec/prophecy-phpunit\": \"^2.0.2\",\n                \"phpunit/phpunit\": \"^9.6.13\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"vimeo/psalm\": \"^5.15\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-cache\": \"To enable caching of translation strings\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"component\": \"Laminas\\\\Mvc\\\\I18n\",\n                    \"config-provider\": \"Laminas\\\\Mvc\\\\I18n\\\\ConfigProvider\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Mvc\\\\I18n\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Integration between laminas-mvc and laminas-i18n\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"i18n\",\n                \"laminas\",\n                \"mvc\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-mvc-i18n/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-mvc-i18n/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-mvc-i18n/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-mvc-i18n\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-10-11T09:36:44+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-router\",\n            \"version\": \"3.14.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-router.git\",\n                \"reference\": \"5e1f5ca7fe95200661b50235c891ed3eee02d3f0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-router/zipball/5e1f5ca7fe95200661b50235c891ed3eee02d3f0\",\n                \"reference\": \"5e1f5ca7fe95200661b50235c891ed3eee02d3f0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-http\": \"^2.15\",\n                \"laminas/laminas-servicemanager\": \"^3.14.0\",\n                \"laminas/laminas-stdlib\": \"^3.10.1\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-router\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~2.5.0\",\n                \"laminas/laminas-i18n\": \"^2.29.0\",\n                \"phpunit/phpunit\": \"^10.5.36\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"vimeo/psalm\": \"^5.26.1\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-i18n\": \"^2.15.0 if defining translatable HTTP path segments\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"component\": \"Laminas\\\\Router\",\n                    \"config-provider\": \"Laminas\\\\Router\\\\ConfigProvider\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Router\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Flexible routing system for HTTP and console applications\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"laminas\",\n                \"routing\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-router/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-router/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-router/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-router\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-10-11T11:18:03+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-server\",\n            \"version\": \"2.18.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-server.git\",\n                \"reference\": \"6fc7d10e289bfc82dd7ed66102f24a66c18c3d85\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-server/zipball/6fc7d10e289bfc82dd7ed66102f24a66c18c3d85\",\n                \"reference\": \"6fc7d10e289bfc82dd7ed66102f24a66c18c3d85\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-code\": \"^4.7.1\",\n                \"laminas/laminas-stdlib\": \"^3.3.1\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-server\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~3.0.1\",\n                \"phpunit/phpunit\": \"^10.5.38\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"vimeo/psalm\": \"^5.26.1\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Server\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Create Reflection-based RPC servers\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"laminas\",\n                \"server\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-server/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-server/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-server/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-server\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-12-09T14:18:59+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-servicemanager\",\n            \"version\": \"3.23.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-servicemanager.git\",\n                \"reference\": \"a8640182b892b99767d54404d19c5c3b3699f79b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-servicemanager/zipball/a8640182b892b99767d54404d19c5c3b3699f79b\",\n                \"reference\": \"a8640182b892b99767d54404d19c5c3b3699f79b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-stdlib\": \"^3.19\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\",\n                \"psr/container\": \"^1.0\"\n            },\n            \"conflict\": {\n                \"ext-psr\": \"*\",\n                \"laminas/laminas-code\": \"<4.10.0\",\n                \"zendframework/zend-code\": \"<3.3.1\",\n                \"zendframework/zend-servicemanager\": \"*\"\n            },\n            \"provide\": {\n                \"psr/container-implementation\": \"^1.0\"\n            },\n            \"replace\": {\n                \"container-interop/container-interop\": \"^1.2.0\"\n            },\n            \"require-dev\": {\n                \"composer/package-versions-deprecated\": \"^1.11.99.5\",\n                \"friendsofphp/proxy-manager-lts\": \"^1.0.18\",\n                \"laminas/laminas-code\": \"^4.14.0\",\n                \"laminas/laminas-coding-standard\": \"~2.5.0\",\n                \"laminas/laminas-container-config-test\": \"^0.8\",\n                \"mikey179/vfsstream\": \"^1.6.12\",\n                \"phpbench/phpbench\": \"^1.3.1\",\n                \"phpunit/phpunit\": \"^10.5.36\",\n                \"psalm/plugin-phpunit\": \"^0.18.4\",\n                \"vimeo/psalm\": \"^5.26.1\"\n            },\n            \"suggest\": {\n                \"friendsofphp/proxy-manager-lts\": \"ProxyManager ^2.1.1 to handle lazy initialization of services\"\n            },\n            \"bin\": [\n                \"bin/generate-deps-for-config-factory\",\n                \"bin/generate-factory-for-class\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/autoload.php\"\n                ],\n                \"psr-4\": {\n                    \"Laminas\\\\ServiceManager\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Factory-Driven Dependency Injection Container\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"PSR-11\",\n                \"dependency-injection\",\n                \"di\",\n                \"dic\",\n                \"laminas\",\n                \"service-manager\",\n                \"servicemanager\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-servicemanager/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-servicemanager/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-servicemanager/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-servicemanager\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-10-28T21:32:16+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-soap\",\n            \"version\": \"2.14.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-soap.git\",\n                \"reference\": \"f8a7844803cc931c4233f6b1cfbcf7b8272f59e5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-soap/zipball/f8a7844803cc931c4233f6b1cfbcf7b8272f59e5\",\n                \"reference\": \"f8a7844803cc931c4233f6b1cfbcf7b8272f59e5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-soap\": \"*\",\n                \"laminas/laminas-server\": \"^2.15\",\n                \"laminas/laminas-stdlib\": \"^3.16\",\n                \"laminas/laminas-uri\": \"^2.10\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"amphp/amp\": \"<2.6.4\",\n                \"laminas/laminas-code\": \"<4.4\",\n                \"zendframework/zend-soap\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"^2.5\",\n                \"laminas/laminas-config\": \"^3.9\",\n                \"laminas/laminas-http\": \"^2.18\",\n                \"phpspec/prophecy-phpunit\": \"^2.0.2\",\n                \"phpunit/phpunit\": \"^9.6.21\",\n                \"psalm/plugin-phpunit\": \"^0.18.4\",\n                \"vimeo/psalm\": \"^4.30\"\n            },\n            \"suggest\": {\n                \"ext-curl\": \"Curl is required when .NET compatibility is required\",\n                \"laminas/laminas-http\": \"Laminas\\\\Http component\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Soap\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"laminas\",\n                \"soap\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-soap/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-soap/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-soap/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-soap\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-11-29T09:45:43+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-stdlib\",\n            \"version\": \"3.20.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-stdlib.git\",\n                \"reference\": \"8974a1213be42c3e2f70b2c27b17f910291ab2f4\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-stdlib/zipball/8974a1213be42c3e2f70b2c27b17f910291ab2f4\",\n                \"reference\": \"8974a1213be42c3e2f70b2c27b17f910291ab2f4\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-stdlib\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"^3.0\",\n                \"phpbench/phpbench\": \"^1.3.1\",\n                \"phpunit/phpunit\": \"^10.5.38\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"vimeo/psalm\": \"^5.26.1\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Stdlib\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"SPL extensions, array utilities, error handlers, and more\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"laminas\",\n                \"stdlib\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-stdlib/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-stdlib/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-stdlib/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-stdlib\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-10-29T13:46:07+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-translator\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-translator.git\",\n                \"reference\": \"12897e710e21413c1f93fc38fe9dead6b51c5218\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-translator/zipball/12897e710e21413c1f93fc38fe9dead6b51c5218\",\n                \"reference\": \"12897e710e21413c1f93fc38fe9dead6b51c5218\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~3.0.0\",\n                \"vimeo/psalm\": \"^5.24.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Translator\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Interfaces for the Translator component of laminas-i18n\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"i18n\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-i18n/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-translator/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-translator/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-translator\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-10-21T15:33:01+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-uri\",\n            \"version\": \"2.13.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-uri.git\",\n                \"reference\": \"de53600ae8153b3605bb6edce8aeeef524eaafba\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-uri/zipball/de53600ae8153b3605bb6edce8aeeef524eaafba\",\n                \"reference\": \"de53600ae8153b3605bb6edce8aeeef524eaafba\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-escaper\": \"^2.9\",\n                \"laminas/laminas-validator\": \"^2.39 || ^3.0\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-uri\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~2.4.0\",\n                \"phpunit/phpunit\": \"^9.6.20\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Uri\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"A component that aids in manipulating and validating » Uniform Resource Identifiers (URIs)\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"laminas\",\n                \"uri\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-uri/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-uri/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-uri/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-uri\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-12-03T12:27:51+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-validator\",\n            \"version\": \"2.64.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-validator.git\",\n                \"reference\": \"771e504760448ac7af660710237ceb93be602e08\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-validator/zipball/771e504760448ac7af660710237ceb93be602e08\",\n                \"reference\": \"771e504760448ac7af660710237ceb93be602e08\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-servicemanager\": \"^3.21.0\",\n                \"laminas/laminas-stdlib\": \"^3.19\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\",\n                \"psr/http-message\": \"^1.0.1 || ^2.0.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-validator\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"^2.5\",\n                \"laminas/laminas-db\": \"^2.20\",\n                \"laminas/laminas-filter\": \"^2.35.2\",\n                \"laminas/laminas-i18n\": \"^2.26.0\",\n                \"laminas/laminas-session\": \"^2.20\",\n                \"laminas/laminas-uri\": \"^2.11.0\",\n                \"phpunit/phpunit\": \"^10.5.20\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"psr/http-client\": \"^1.0.3\",\n                \"psr/http-factory\": \"^1.1.0\",\n                \"vimeo/psalm\": \"^5.24.0\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-db\": \"Laminas\\\\Db component, required by the (No)RecordExists validator\",\n                \"laminas/laminas-filter\": \"Laminas\\\\Filter component, required by the Digits validator\",\n                \"laminas/laminas-i18n\": \"Laminas\\\\I18n component to allow translation of validation error messages\",\n                \"laminas/laminas-i18n-resources\": \"Translations of validator messages\",\n                \"laminas/laminas-servicemanager\": \"Laminas\\\\ServiceManager component to allow using the ValidatorPluginManager and validator chains\",\n                \"laminas/laminas-session\": \"Laminas\\\\Session component, ^2.8; required by the Csrf validator\",\n                \"laminas/laminas-uri\": \"Laminas\\\\Uri component, required by the Uri and Sitemap\\\\Loc validators\",\n                \"psr/http-message\": \"psr/http-message, required when validating PSR-7 UploadedFileInterface instances via the Upload and UploadFile validators\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"component\": \"Laminas\\\\Validator\",\n                    \"config-provider\": \"Laminas\\\\Validator\\\\ConfigProvider\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Validator\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Validation classes for a wide range of domains, and the ability to chain validators to create complex validation criteria\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"laminas\",\n                \"validator\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-validator/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-validator/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-validator/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-validator\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-11-26T21:29:17+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-view\",\n            \"version\": \"2.36.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-view.git\",\n                \"reference\": \"ddc9207725cb50508ea48fcf1210dc8480264196\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-view/zipball/ddc9207725cb50508ea48fcf1210dc8480264196\",\n                \"reference\": \"ddc9207725cb50508ea48fcf1210dc8480264196\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-filter\": \"*\",\n                \"ext-json\": \"*\",\n                \"laminas/laminas-escaper\": \"^2.5\",\n                \"laminas/laminas-eventmanager\": \"^3.4\",\n                \"laminas/laminas-json\": \"^3.3\",\n                \"laminas/laminas-servicemanager\": \"^3.21.0\",\n                \"laminas/laminas-stdlib\": \"^3.10.1\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\",\n                \"psr/container\": \"^1 || ^2\"\n            },\n            \"conflict\": {\n                \"container-interop/container-interop\": \"<1.2\",\n                \"laminas/laminas-router\": \"<3.0.1\",\n                \"laminas/laminas-session\": \"<2.12\",\n                \"zendframework/zend-view\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-authentication\": \"^2.18\",\n                \"laminas/laminas-coding-standard\": \"~2.5.0\",\n                \"laminas/laminas-feed\": \"^2.23\",\n                \"laminas/laminas-filter\": \"^2.39\",\n                \"laminas/laminas-http\": \"^2.20\",\n                \"laminas/laminas-i18n\": \"^2.29.0\",\n                \"laminas/laminas-modulemanager\": \"^2.17\",\n                \"laminas/laminas-mvc\": \"^3.8.0\",\n                \"laminas/laminas-mvc-i18n\": \"^1.9\",\n                \"laminas/laminas-mvc-plugin-flashmessenger\": \"^1.10.1\",\n                \"laminas/laminas-navigation\": \"^2.20.0\",\n                \"laminas/laminas-paginator\": \"^2.19.0\",\n                \"laminas/laminas-permissions-acl\": \"^2.16\",\n                \"laminas/laminas-router\": \"^3.14.0\",\n                \"laminas/laminas-uri\": \"^2.12\",\n                \"phpunit/phpunit\": \"^10.5.38\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"vimeo/psalm\": \"^5.26.1\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-authentication\": \"Laminas\\\\Authentication component\",\n                \"laminas/laminas-feed\": \"Laminas\\\\Feed component\",\n                \"laminas/laminas-filter\": \"Laminas\\\\Filter component\",\n                \"laminas/laminas-http\": \"Laminas\\\\Http component\",\n                \"laminas/laminas-i18n\": \"Laminas\\\\I18n component\",\n                \"laminas/laminas-mvc\": \"Laminas\\\\Mvc component\",\n                \"laminas/laminas-mvc-plugin-flashmessenger\": \"laminas-mvc-plugin-flashmessenger component, if you want to use the FlashMessenger view helper with laminas-mvc versions 3 and up\",\n                \"laminas/laminas-navigation\": \"Laminas\\\\Navigation component\",\n                \"laminas/laminas-paginator\": \"Laminas\\\\Paginator component\",\n                \"laminas/laminas-permissions-acl\": \"Laminas\\\\Permissions\\\\Acl component\",\n                \"laminas/laminas-uri\": \"Laminas\\\\Uri component\"\n            },\n            \"bin\": [\n                \"bin/templatemap_generator.php\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\View\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Flexible view layer supporting and providing multiple view layers, helpers, and more\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"laminas\",\n                \"view\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-view/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-view/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-view/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-view\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-11-21T17:42:20+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-xml\",\n            \"version\": \"1.7.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-xml.git\",\n                \"reference\": \"3a7850dec668a89807accfa4826a2ff11497fe74\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-xml/zipball/3a7850dec668a89807accfa4826a2ff11497fe74\",\n                \"reference\": \"3a7850dec668a89807accfa4826a2ff11497fe74\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-simplexml\": \"*\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zendxml\": \"*\"\n            },\n            \"require-dev\": {\n                \"ext-iconv\": \"*\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"phpunit/phpunit\": \"^10.5.35 || ^11.4\",\n                \"squizlabs/php_codesniffer\": \"3.10.3 as 2.9999999.9999999\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Xml\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Utility library for XML usage, best practices, and security in PHP\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"laminas\",\n                \"security\",\n                \"xml\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-xml/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-xml/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-xml\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-10-11T08:45:59+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-xmlrpc\",\n            \"version\": \"2.20.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-xmlrpc.git\",\n                \"reference\": \"466f388434a7f5fbe04d8c53ba44314c1b6379bd\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-xmlrpc/zipball/466f388434a7f5fbe04d8c53ba44314c1b6379bd\",\n                \"reference\": \"466f388434a7f5fbe04d8c53ba44314c1b6379bd\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-simplexml\": \"*\",\n                \"laminas/laminas-code\": \"^4.4\",\n                \"laminas/laminas-http\": \"^2.15\",\n                \"laminas/laminas-math\": \"^3.4.0\",\n                \"laminas/laminas-server\": \"^2.11\",\n                \"laminas/laminas-stdlib\": \"^3.10.1\",\n                \"laminas/laminas-xml\": \"^1.4.0\",\n                \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-xmlrpc\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~3.0.0\",\n                \"phpunit/phpunit\": \"^10.5.36\",\n                \"psalm/plugin-phpunit\": \"^0.19.0\",\n                \"vimeo/psalm\": \"^5.26.1\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-cache\": \"To support Laminas\\\\XmlRpc\\\\Server\\\\Cache usage\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\XmlRpc\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Fully-featured XML-RPC server and client implementations\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"laminas\",\n                \"xmlrpc\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-xmlrpc/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-xmlrpc/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-xmlrpc/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-xmlrpc\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2024-10-18T14:39:30+00:00\"\n        },\n        {\n            \"name\": \"lcobucci/clock\",\n            \"version\": \"2.3.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/lcobucci/clock.git\",\n                \"reference\": \"c7aadcd6fd97ed9e199114269c0be3f335e38876\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/lcobucci/clock/zipball/c7aadcd6fd97ed9e199114269c0be3f335e38876\",\n                \"reference\": \"c7aadcd6fd97ed9e199114269c0be3f335e38876\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"~8.1.0 || ~8.2.0\",\n                \"stella-maris/clock\": \"^0.1.7\"\n            },\n            \"provide\": {\n                \"psr/clock-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"infection/infection\": \"^0.26\",\n                \"lcobucci/coding-standard\": \"^9.0\",\n                \"phpstan/extension-installer\": \"^1.2\",\n                \"phpstan/phpstan\": \"^1.9.4\",\n                \"phpstan/phpstan-deprecation-rules\": \"^1.1.1\",\n                \"phpstan/phpstan-phpunit\": \"^1.3.2\",\n                \"phpstan/phpstan-strict-rules\": \"^1.4.4\",\n                \"phpunit/phpunit\": \"^9.5.27\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Lcobucci\\\\Clock\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Luís Cobucci\",\n                    \"email\": \"lcobucci@gmail.com\"\n                }\n            ],\n            \"description\": \"Yet another clock abstraction\",\n            \"support\": {\n                \"issues\": \"https://github.com/lcobucci/clock/issues\",\n                \"source\": \"https://github.com/lcobucci/clock/tree/2.3.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/lcobucci\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/lcobucci\",\n                    \"type\": \"patreon\"\n                }\n            ],\n            \"time\": \"2022-12-19T14:38:11+00:00\"\n        },\n        {\n            \"name\": \"lcobucci/jwt\",\n            \"version\": \"4.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/lcobucci/jwt.git\",\n                \"reference\": \"72ac6d807ee51a70ad376ee03a2387e8646e10f3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/lcobucci/jwt/zipball/72ac6d807ee51a70ad376ee03a2387e8646e10f3\",\n                \"reference\": \"72ac6d807ee51a70ad376ee03a2387e8646e10f3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-hash\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"ext-openssl\": \"*\",\n                \"ext-sodium\": \"*\",\n                \"lcobucci/clock\": \"^2.0\",\n                \"php\": \"^7.4 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"infection/infection\": \"^0.21\",\n                \"lcobucci/coding-standard\": \"^6.0\",\n                \"mikey179/vfsstream\": \"^1.6.7\",\n                \"phpbench/phpbench\": \"^1.2\",\n                \"phpstan/extension-installer\": \"^1.0\",\n                \"phpstan/phpstan\": \"^1.4\",\n                \"phpstan/phpstan-deprecation-rules\": \"^1.0\",\n                \"phpstan/phpstan-phpunit\": \"^1.0\",\n                \"phpstan/phpstan-strict-rules\": \"^1.0\",\n                \"phpunit/php-invoker\": \"^3.1\",\n                \"phpunit/phpunit\": \"^9.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Lcobucci\\\\JWT\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Luís Cobucci\",\n                    \"email\": \"lcobucci@gmail.com\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"A simple library to work with JSON Web Token and JSON Web Signature\",\n            \"keywords\": [\n                \"JWS\",\n                \"jwt\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/lcobucci/jwt/issues\",\n                \"source\": \"https://github.com/lcobucci/jwt/tree/4.2.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/lcobucci\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/lcobucci\",\n                    \"type\": \"patreon\"\n                }\n            ],\n            \"time\": \"2022-08-19T23:14:07+00:00\"\n        },\n        {\n            \"name\": \"league/csv\",\n            \"version\": \"9.8.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/csv.git\",\n                \"reference\": \"9d2e0265c5d90f5dd601bc65ff717e05cec19b47\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/csv/zipball/9d2e0265c5d90f5dd601bc65ff717e05cec19b47\",\n                \"reference\": \"9d2e0265c5d90f5dd601bc65ff717e05cec19b47\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"php\": \"^7.4 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"ext-curl\": \"*\",\n                \"ext-dom\": \"*\",\n                \"friendsofphp/php-cs-fixer\": \"^v3.4.0\",\n                \"phpstan/phpstan\": \"^1.3.0\",\n                \"phpstan/phpstan-phpunit\": \"^1.0.0\",\n                \"phpstan/phpstan-strict-rules\": \"^1.1.0\",\n                \"phpunit/phpunit\": \"^9.5.11\"\n            },\n            \"suggest\": {\n                \"ext-dom\": \"Required to use the XMLConverter and or the HTMLConverter classes\",\n                \"ext-iconv\": \"Needed to ease transcoding CSV using iconv stream filters\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"9.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/functions_include.php\"\n                ],\n                \"psr-4\": {\n                    \"League\\\\Csv\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ignace Nyamagana Butera\",\n                    \"email\": \"nyamsprod@gmail.com\",\n                    \"homepage\": \"https://github.com/nyamsprod/\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"CSV data manipulation made easy in PHP\",\n            \"homepage\": \"https://csv.thephpleague.com\",\n            \"keywords\": [\n                \"convert\",\n                \"csv\",\n                \"export\",\n                \"filter\",\n                \"import\",\n                \"read\",\n                \"transform\",\n                \"write\"\n            ],\n            \"support\": {\n                \"docs\": \"https://csv.thephpleague.com\",\n                \"issues\": \"https://github.com/thephpleague/csv/issues\",\n                \"rss\": \"https://github.com/thephpleague/csv/releases.atom\",\n                \"source\": \"https://github.com/thephpleague/csv\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sponsors/nyamsprod\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2022-01-04T00:13:07+00:00\"\n        },\n        {\n            \"name\": \"league/event\",\n            \"version\": \"2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/event.git\",\n                \"reference\": \"d2cc124cf9a3fab2bb4ff963307f60361ce4d119\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/event/zipball/d2cc124cf9a3fab2bb4ff963307f60361ce4d119\",\n                \"reference\": \"d2cc124cf9a3fab2bb4ff963307f60361ce4d119\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.4.0\"\n            },\n            \"require-dev\": {\n                \"henrikbjorn/phpspec-code-coverage\": \"~1.0.1\",\n                \"phpspec/phpspec\": \"^2.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\Event\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Frank de Jonge\",\n                    \"email\": \"info@frenky.net\"\n                }\n            ],\n            \"description\": \"Event package\",\n            \"keywords\": [\n                \"emitter\",\n                \"event\",\n                \"listener\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/thephpleague/event/issues\",\n                \"source\": \"https://github.com/thephpleague/event/tree/master\"\n            },\n            \"time\": \"2018-11-26T11:52:41+00:00\"\n        },\n        {\n            \"name\": \"league/oauth2-server\",\n            \"version\": \"8.4.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/oauth2-server.git\",\n                \"reference\": \"8a59a84450f0f64adcea8e1f8c0e0d9dfc8887d1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/oauth2-server/zipball/8a59a84450f0f64adcea8e1f8c0e0d9dfc8887d1\",\n                \"reference\": \"8a59a84450f0f64adcea8e1f8c0e0d9dfc8887d1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"defuse/php-encryption\": \"^2.2.1\",\n                \"ext-json\": \"*\",\n                \"ext-openssl\": \"*\",\n                \"lcobucci/jwt\": \"^3.4.6 || ^4.0.4\",\n                \"league/event\": \"^2.2\",\n                \"league/uri\": \"^6.4\",\n                \"php\": \"^7.2 || ^8.0\",\n                \"psr/http-message\": \"^1.0.1\"\n            },\n            \"replace\": {\n                \"league/oauth2server\": \"*\",\n                \"lncd/oauth2\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-diactoros\": \"^2.4.1\",\n                \"phpstan/phpstan\": \"^0.12.57\",\n                \"phpstan/phpstan-phpunit\": \"^0.12.16\",\n                \"phpunit/phpunit\": \"^8.5.13\",\n                \"roave/security-advisories\": \"dev-master\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\OAuth2\\\\Server\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Alex Bilbie\",\n                    \"email\": \"hello@alexbilbie.com\",\n                    \"homepage\": \"http://www.alexbilbie.com\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Andy Millington\",\n                    \"email\": \"andrew@noexceptions.io\",\n                    \"homepage\": \"https://www.noexceptions.io\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"A lightweight and powerful OAuth 2.0 authorization and resource server library with support for all the core specification grants. This library will allow you to secure your API with OAuth and allow your applications users to approve apps that want to access their data from your API.\",\n            \"homepage\": \"https://oauth2.thephpleague.com/\",\n            \"keywords\": [\n                \"Authentication\",\n                \"api\",\n                \"auth\",\n                \"authorisation\",\n                \"authorization\",\n                \"oauth\",\n                \"oauth 2\",\n                \"oauth 2.0\",\n                \"oauth2\",\n                \"protect\",\n                \"resource\",\n                \"secure\",\n                \"server\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/thephpleague/oauth2-server/issues\",\n                \"source\": \"https://github.com/thephpleague/oauth2-server/tree/8.4.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sephster\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-12-18T00:21:54+00:00\"\n        },\n        {\n            \"name\": \"league/omnipay\",\n            \"version\": \"v3.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/omnipay.git\",\n                \"reference\": \"38f66a0cc043ed51d6edf7956d6439a2f263501f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/omnipay/zipball/38f66a0cc043ed51d6edf7956d6439a2f263501f\",\n                \"reference\": \"38f66a0cc043ed51d6edf7956d6439a2f263501f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"omnipay/common\": \"^3.1\",\n                \"php\": \"^7.2|^8.0\",\n                \"php-http/discovery\": \"^1.14\",\n                \"php-http/guzzle7-adapter\": \"^1\"\n            },\n            \"require-dev\": {\n                \"omnipay/tests\": \"^3|^4\"\n            },\n            \"type\": \"metapackage\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.2.x-dev\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Adrian Macneil\",\n                    \"email\": \"adrian@adrianmacneil.com\"\n                },\n                {\n                    \"name\": \"Barry vd. Heuvel\",\n                    \"email\": \"barryvdh@gmail.com\"\n                }\n            ],\n            \"description\": \"Omnipay payment processing library\",\n            \"homepage\": \"https://omnipay.thephpleague.com/\",\n            \"keywords\": [\n                \"checkout\",\n                \"creditcard\",\n                \"omnipay\",\n                \"payment\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/thephpleague/omnipay/issues\",\n                \"source\": \"https://github.com/thephpleague/omnipay/tree/v3.2.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/barryvdh\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2021-06-05T11:34:12+00:00\"\n        },\n        {\n            \"name\": \"league/uri\",\n            \"version\": \"6.8.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/uri.git\",\n                \"reference\": \"a700b4656e4c54371b799ac61e300ab25a2d1d39\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/uri/zipball/a700b4656e4c54371b799ac61e300ab25a2d1d39\",\n                \"reference\": \"a700b4656e4c54371b799ac61e300ab25a2d1d39\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"league/uri-interfaces\": \"^2.3\",\n                \"php\": \"^8.1\",\n                \"psr/http-message\": \"^1.0.1\"\n            },\n            \"conflict\": {\n                \"league/uri-schemes\": \"^1.0\"\n            },\n            \"require-dev\": {\n                \"friendsofphp/php-cs-fixer\": \"^v3.9.5\",\n                \"nyholm/psr7\": \"^1.5.1\",\n                \"php-http/psr7-integration-tests\": \"^1.1.1\",\n                \"phpbench/phpbench\": \"^1.2.6\",\n                \"phpstan/phpstan\": \"^1.8.5\",\n                \"phpstan/phpstan-deprecation-rules\": \"^1.0\",\n                \"phpstan/phpstan-phpunit\": \"^1.1.1\",\n                \"phpstan/phpstan-strict-rules\": \"^1.4.3\",\n                \"phpunit/phpunit\": \"^9.5.24\",\n                \"psr/http-factory\": \"^1.0.1\"\n            },\n            \"suggest\": {\n                \"ext-fileinfo\": \"Needed to create Data URI from a filepath\",\n                \"ext-intl\": \"Needed to improve host validation\",\n                \"league/uri-components\": \"Needed to easily manipulate URI objects\",\n                \"psr/http-factory\": \"Needed to use the URI factory\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"6.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\Uri\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ignace Nyamagana Butera\",\n                    \"email\": \"nyamsprod@gmail.com\",\n                    \"homepage\": \"https://nyamsprod.com\"\n                }\n            ],\n            \"description\": \"URI manipulation library\",\n            \"homepage\": \"https://uri.thephpleague.com\",\n            \"keywords\": [\n                \"data-uri\",\n                \"file-uri\",\n                \"ftp\",\n                \"hostname\",\n                \"http\",\n                \"https\",\n                \"middleware\",\n                \"parse_str\",\n                \"parse_url\",\n                \"psr-7\",\n                \"query-string\",\n                \"querystring\",\n                \"rfc3986\",\n                \"rfc3987\",\n                \"rfc6570\",\n                \"uri\",\n                \"uri-template\",\n                \"url\",\n                \"ws\"\n            ],\n            \"support\": {\n                \"docs\": \"https://uri.thephpleague.com\",\n                \"forum\": \"https://thephpleague.slack.com\",\n                \"issues\": \"https://github.com/thephpleague/uri/issues\",\n                \"source\": \"https://github.com/thephpleague/uri/tree/6.8.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sponsors/nyamsprod\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2022-09-13T19:58:47+00:00\"\n        },\n        {\n            \"name\": \"league/uri-interfaces\",\n            \"version\": \"2.3.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/uri-interfaces.git\",\n                \"reference\": \"00e7e2943f76d8cb50c7dfdc2f6dee356e15e383\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/uri-interfaces/zipball/00e7e2943f76d8cb50c7dfdc2f6dee356e15e383\",\n                \"reference\": \"00e7e2943f76d8cb50c7dfdc2f6dee356e15e383\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"friendsofphp/php-cs-fixer\": \"^2.19\",\n                \"phpstan/phpstan\": \"^0.12.90\",\n                \"phpstan/phpstan-phpunit\": \"^0.12.19\",\n                \"phpstan/phpstan-strict-rules\": \"^0.12.9\",\n                \"phpunit/phpunit\": \"^8.5.15 || ^9.5\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"to use the IDNA feature\",\n                \"symfony/intl\": \"to use the IDNA feature via Symfony Polyfill\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\Uri\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ignace Nyamagana Butera\",\n                    \"email\": \"nyamsprod@gmail.com\",\n                    \"homepage\": \"https://nyamsprod.com\"\n                }\n            ],\n            \"description\": \"Common interface for URI representation\",\n            \"homepage\": \"http://github.com/thephpleague/uri-interfaces\",\n            \"keywords\": [\n                \"rfc3986\",\n                \"rfc3987\",\n                \"uri\",\n                \"url\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/thephpleague/uri-interfaces/issues\",\n                \"source\": \"https://github.com/thephpleague/uri-interfaces/tree/2.3.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sponsors/nyamsprod\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2021-06-28T04:27:21+00:00\"\n        },\n        {\n            \"name\": \"maennchen/zipstream-php\",\n            \"version\": \"3.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/maennchen/ZipStream-PHP.git\",\n                \"reference\": \"6187e9cc4493da94b9b63eb2315821552015fca9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/maennchen/ZipStream-PHP/zipball/6187e9cc4493da94b9b63eb2315821552015fca9\",\n                \"reference\": \"6187e9cc4493da94b9b63eb2315821552015fca9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-mbstring\": \"*\",\n                \"ext-zlib\": \"*\",\n                \"php-64bit\": \"^8.1\"\n            },\n            \"require-dev\": {\n                \"ext-zip\": \"*\",\n                \"friendsofphp/php-cs-fixer\": \"^3.16\",\n                \"guzzlehttp/guzzle\": \"^7.5\",\n                \"mikey179/vfsstream\": \"^1.6\",\n                \"php-coveralls/php-coveralls\": \"^2.5\",\n                \"phpunit/phpunit\": \"^10.0\",\n                \"vimeo/psalm\": \"^5.0\"\n            },\n            \"suggest\": {\n                \"guzzlehttp/psr7\": \"^2.4\",\n                \"psr/http-message\": \"^2.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"ZipStream\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Paul Duncan\",\n                    \"email\": \"pabs@pablotron.org\"\n                },\n                {\n                    \"name\": \"Jonatan Männchen\",\n                    \"email\": \"jonatan@maennchen.ch\"\n                },\n                {\n                    \"name\": \"Jesse Donat\",\n                    \"email\": \"donatj@gmail.com\"\n                },\n                {\n                    \"name\": \"András Kolesár\",\n                    \"email\": \"kolesar@kolesar.hu\"\n                }\n            ],\n            \"description\": \"ZipStream is a library for dynamically streaming dynamic zip files from PHP without writing to the disk at all on the server.\",\n            \"keywords\": [\n                \"stream\",\n                \"zip\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/maennchen/ZipStream-PHP/issues\",\n                \"source\": \"https://github.com/maennchen/ZipStream-PHP/tree/3.1.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/maennchen\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-10-10T12:33:01+00:00\"\n        },\n        {\n            \"name\": \"markbaker/complex\",\n            \"version\": \"3.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/MarkBaker/PHPComplex.git\",\n                \"reference\": \"95c56caa1cf5c766ad6d65b6344b807c1e8405b9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/MarkBaker/PHPComplex/zipball/95c56caa1cf5c766ad6d65b6344b807c1e8405b9\",\n                \"reference\": \"95c56caa1cf5c766ad6d65b6344b807c1e8405b9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"dev-master\",\n                \"phpcompatibility/php-compatibility\": \"^9.3\",\n                \"phpunit/phpunit\": \"^7.0 || ^8.0 || ^9.0\",\n                \"squizlabs/php_codesniffer\": \"^3.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Complex\\\\\": \"classes/src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mark Baker\",\n                    \"email\": \"mark@lange.demon.co.uk\"\n                }\n            ],\n            \"description\": \"PHP Class for working with complex numbers\",\n            \"homepage\": \"https://github.com/MarkBaker/PHPComplex\",\n            \"keywords\": [\n                \"complex\",\n                \"mathematics\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/MarkBaker/PHPComplex/issues\",\n                \"source\": \"https://github.com/MarkBaker/PHPComplex/tree/3.0.2\"\n            },\n            \"time\": \"2022-12-06T16:21:08+00:00\"\n        },\n        {\n            \"name\": \"markbaker/matrix\",\n            \"version\": \"3.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/MarkBaker/PHPMatrix.git\",\n                \"reference\": \"728434227fe21be27ff6d86621a1b13107a2562c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/MarkBaker/PHPMatrix/zipball/728434227fe21be27ff6d86621a1b13107a2562c\",\n                \"reference\": \"728434227fe21be27ff6d86621a1b13107a2562c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"dev-master\",\n                \"phpcompatibility/php-compatibility\": \"^9.3\",\n                \"phpdocumentor/phpdocumentor\": \"2.*\",\n                \"phploc/phploc\": \"^4.0\",\n                \"phpmd/phpmd\": \"2.*\",\n                \"phpunit/phpunit\": \"^7.0 || ^8.0 || ^9.0\",\n                \"sebastian/phpcpd\": \"^4.0\",\n                \"squizlabs/php_codesniffer\": \"^3.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Matrix\\\\\": \"classes/src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mark Baker\",\n                    \"email\": \"mark@demon-angel.eu\"\n                }\n            ],\n            \"description\": \"PHP Class for working with matrices\",\n            \"homepage\": \"https://github.com/MarkBaker/PHPMatrix\",\n            \"keywords\": [\n                \"mathematics\",\n                \"matrix\",\n                \"vector\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/MarkBaker/PHPMatrix/issues\",\n                \"source\": \"https://github.com/MarkBaker/PHPMatrix/tree/3.0.1\"\n            },\n            \"time\": \"2022-12-02T22:17:43+00:00\"\n        },\n        {\n            \"name\": \"masterminds/html5\",\n            \"version\": \"2.9.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Masterminds/html5-php.git\",\n                \"reference\": \"f5ac2c0b0a2eefca70b2ce32a5809992227e75a6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Masterminds/html5-php/zipball/f5ac2c0b0a2eefca70b2ce32a5809992227e75a6\",\n                \"reference\": \"f5ac2c0b0a2eefca70b2ce32a5809992227e75a6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"php\": \">=5.3.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.8.35 || ^5.7.21 || ^6 || ^7 || ^8 || ^9\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.7-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Masterminds\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Matt Butcher\",\n                    \"email\": \"technosophos@gmail.com\"\n                },\n                {\n                    \"name\": \"Matt Farina\",\n                    \"email\": \"matt@mattfarina.com\"\n                },\n                {\n                    \"name\": \"Asmir Mustafic\",\n                    \"email\": \"goetas@gmail.com\"\n                }\n            ],\n            \"description\": \"An HTML5 parser and serializer.\",\n            \"homepage\": \"http://masterminds.github.io/html5-php\",\n            \"keywords\": [\n                \"HTML5\",\n                \"dom\",\n                \"html\",\n                \"parser\",\n                \"querypath\",\n                \"serializer\",\n                \"xml\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/Masterminds/html5-php/issues\",\n                \"source\": \"https://github.com/Masterminds/html5-php/tree/2.9.0\"\n            },\n            \"time\": \"2024-03-31T07:05:07+00:00\"\n        },\n        {\n            \"name\": \"mobiledetect/mobiledetectlib\",\n            \"version\": \"4.8.09\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/serbanghita/Mobile-Detect.git\",\n                \"reference\": \"a06fe2e546a06bb8c2639d6823d5250b2efb3209\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/serbanghita/Mobile-Detect/zipball/a06fe2e546a06bb8c2639d6823d5250b2efb3209\",\n                \"reference\": \"a06fe2e546a06bb8c2639d6823d5250b2efb3209\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0\",\n                \"psr/cache\": \"^3.0\",\n                \"psr/simple-cache\": \"^3\"\n            },\n            \"require-dev\": {\n                \"friendsofphp/php-cs-fixer\": \"^v3.65.0\",\n                \"phpbench/phpbench\": \"^1.2\",\n                \"phpstan/phpstan\": \"^1.12.x-dev\",\n                \"phpunit/phpunit\": \"^9.6.18\",\n                \"squizlabs/php_codesniffer\": \"^3.11.1\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Detection\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Serban Ghita\",\n                    \"email\": \"serbanghita@gmail.com\",\n                    \"homepage\": \"http://mobiledetect.net\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Mobile_Detect is a lightweight PHP class for detecting mobile devices. It uses the User-Agent string combined with specific HTTP headers to detect the mobile environment.\",\n            \"homepage\": \"https://github.com/serbanghita/Mobile-Detect\",\n            \"keywords\": [\n                \"detect mobile devices\",\n                \"mobile\",\n                \"mobile detect\",\n                \"mobile detector\",\n                \"php mobile detect\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/serbanghita/Mobile-Detect/issues\",\n                \"source\": \"https://github.com/serbanghita/Mobile-Detect/tree/4.8.09\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/serbanghita\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-12-10T15:32:06+00:00\"\n        },\n        {\n            \"name\": \"moneyphp/money\",\n            \"version\": \"v3.3.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/moneyphp/money.git\",\n                \"reference\": \"0dc40e3791c67e8793e3aa13fead8cf4661ec9cd\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/moneyphp/money/zipball/0dc40e3791c67e8793e3aa13fead8cf4661ec9cd\",\n                \"reference\": \"0dc40e3791c67e8793e3aa13fead8cf4661ec9cd\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"php\": \">=5.6\"\n            },\n            \"require-dev\": {\n                \"cache/taggable-cache\": \"^0.4.0\",\n                \"doctrine/instantiator\": \"^1.0.5\",\n                \"ext-bcmath\": \"*\",\n                \"ext-gmp\": \"*\",\n                \"ext-intl\": \"*\",\n                \"florianv/exchanger\": \"^1.0\",\n                \"florianv/swap\": \"^3.0\",\n                \"friends-of-phpspec/phpspec-code-coverage\": \"^3.1.1 || ^4.3\",\n                \"moneyphp/iso-currencies\": \"^3.2.1\",\n                \"php-http/message\": \"^1.4\",\n                \"php-http/mock-client\": \"^1.0.0\",\n                \"phpspec/phpspec\": \"^3.4.3\",\n                \"phpunit/phpunit\": \"^5.7.27 || ^6.5.14 || ^7.5.18 || ^8.5\",\n                \"psr/cache\": \"^1.0\",\n                \"symfony/phpunit-bridge\": \"^4\"\n            },\n            \"suggest\": {\n                \"ext-bcmath\": \"Calculate without integer limits\",\n                \"ext-gmp\": \"Calculate without integer limits\",\n                \"ext-intl\": \"Format Money objects with intl\",\n                \"florianv/exchanger\": \"Exchange rates library for PHP\",\n                \"florianv/swap\": \"Exchange rates library for PHP\",\n                \"psr/cache-implementation\": \"Used for Currency caching\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Money\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mathias Verraes\",\n                    \"email\": \"mathias@verraes.net\",\n                    \"homepage\": \"http://verraes.net\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\"\n                },\n                {\n                    \"name\": \"Frederik Bosch\",\n                    \"email\": \"f.bosch@genkgo.nl\"\n                }\n            ],\n            \"description\": \"PHP implementation of Fowler's Money pattern\",\n            \"homepage\": \"http://moneyphp.org\",\n            \"keywords\": [\n                \"Value Object\",\n                \"money\",\n                \"vo\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/moneyphp/money/issues\",\n                \"source\": \"https://github.com/moneyphp/money/tree/v3.3.3\"\n            },\n            \"time\": \"2022-09-21T07:43:36+00:00\"\n        },\n        {\n            \"name\": \"monolog/monolog\",\n            \"version\": \"3.8.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Seldaek/monolog.git\",\n                \"reference\": \"aef6ee73a77a66e404dd6540934a9ef1b3c855b4\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Seldaek/monolog/zipball/aef6ee73a77a66e404dd6540934a9ef1b3c855b4\",\n                \"reference\": \"aef6ee73a77a66e404dd6540934a9ef1b3c855b4\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"psr/log\": \"^2.0 || ^3.0\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"3.0.0\"\n            },\n            \"require-dev\": {\n                \"aws/aws-sdk-php\": \"^3.0\",\n                \"doctrine/couchdb\": \"~1.0@dev\",\n                \"elasticsearch/elasticsearch\": \"^7 || ^8\",\n                \"ext-json\": \"*\",\n                \"graylog2/gelf-php\": \"^1.4.2 || ^2.0\",\n                \"guzzlehttp/guzzle\": \"^7.4.5\",\n                \"guzzlehttp/psr7\": \"^2.2\",\n                \"mongodb/mongodb\": \"^1.8\",\n                \"php-amqplib/php-amqplib\": \"~2.4 || ^3\",\n                \"php-console/php-console\": \"^3.1.8\",\n                \"phpstan/phpstan\": \"^2\",\n                \"phpstan/phpstan-deprecation-rules\": \"^2\",\n                \"phpstan/phpstan-strict-rules\": \"^2\",\n                \"phpunit/phpunit\": \"^10.5.17 || ^11.0.7\",\n                \"predis/predis\": \"^1.1 || ^2\",\n                \"rollbar/rollbar\": \"^4.0\",\n                \"ruflin/elastica\": \"^7 || ^8\",\n                \"symfony/mailer\": \"^5.4 || ^6\",\n                \"symfony/mime\": \"^5.4 || ^6\"\n            },\n            \"suggest\": {\n                \"aws/aws-sdk-php\": \"Allow sending log messages to AWS services like DynamoDB\",\n                \"doctrine/couchdb\": \"Allow sending log messages to a CouchDB server\",\n                \"elasticsearch/elasticsearch\": \"Allow sending log messages to an Elasticsearch server via official client\",\n                \"ext-amqp\": \"Allow sending log messages to an AMQP server (1.0+ required)\",\n                \"ext-curl\": \"Required to send log messages using the IFTTTHandler, the LogglyHandler, the SendGridHandler, the SlackWebhookHandler or the TelegramBotHandler\",\n                \"ext-mbstring\": \"Allow to work properly with unicode symbols\",\n                \"ext-mongodb\": \"Allow sending log messages to a MongoDB server (via driver)\",\n                \"ext-openssl\": \"Required to send log messages using SSL\",\n                \"ext-sockets\": \"Allow sending log messages to a Syslog server (via UDP driver)\",\n                \"graylog2/gelf-php\": \"Allow sending log messages to a GrayLog2 server\",\n                \"mongodb/mongodb\": \"Allow sending log messages to a MongoDB server (via library)\",\n                \"php-amqplib/php-amqplib\": \"Allow sending log messages to an AMQP server using php-amqplib\",\n                \"rollbar/rollbar\": \"Allow sending log messages to Rollbar\",\n                \"ruflin/elastica\": \"Allow sending log messages to an Elastic Search server\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Monolog\\\\\": \"src/Monolog\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jordi Boggiano\",\n                    \"email\": \"j.boggiano@seld.be\",\n                    \"homepage\": \"https://seld.be\"\n                }\n            ],\n            \"description\": \"Sends your logs to files, sockets, inboxes, databases and various web services\",\n            \"homepage\": \"https://github.com/Seldaek/monolog\",\n            \"keywords\": [\n                \"log\",\n                \"logging\",\n                \"psr-3\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/Seldaek/monolog/issues\",\n                \"source\": \"https://github.com/Seldaek/monolog/tree/3.8.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Seldaek\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/monolog/monolog\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-12-05T17:15:07+00:00\"\n        },\n        {\n            \"name\": \"mpdf/mpdf\",\n            \"version\": \"v8.2.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/mpdf/mpdf.git\",\n                \"reference\": \"e175b05e3e00977b85feb96a8cccb174ac63621f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/mpdf/mpdf/zipball/e175b05e3e00977b85feb96a8cccb174ac63621f\",\n                \"reference\": \"e175b05e3e00977b85feb96a8cccb174ac63621f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-gd\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"mpdf/psr-http-message-shim\": \"^1.0 || ^2.0\",\n                \"mpdf/psr-log-aware-trait\": \"^2.0 || ^3.0\",\n                \"myclabs/deep-copy\": \"^1.7\",\n                \"paragonie/random_compat\": \"^1.4|^2.0|^9.99.99\",\n                \"php\": \"^5.6 || ^7.0 || ~8.0.0 || ~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\",\n                \"psr/http-message\": \"^1.0 || ^2.0\",\n                \"psr/log\": \"^1.0 || ^2.0 || ^3.0\",\n                \"setasign/fpdi\": \"^2.1\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"^1.3.0\",\n                \"mpdf/qrcode\": \"^1.1.0\",\n                \"squizlabs/php_codesniffer\": \"^3.5.0\",\n                \"tracy/tracy\": \"~2.5\",\n                \"yoast/phpunit-polyfills\": \"^1.0\"\n            },\n            \"suggest\": {\n                \"ext-bcmath\": \"Needed for generation of some types of barcodes\",\n                \"ext-xml\": \"Needed mainly for SVG manipulation\",\n                \"ext-zlib\": \"Needed for compression of embedded resources, such as fonts\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/functions.php\"\n                ],\n                \"psr-4\": {\n                    \"Mpdf\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"GPL-2.0-only\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Matěj Humpál\",\n                    \"role\": \"Developer, maintainer\"\n                },\n                {\n                    \"name\": \"Ian Back\",\n                    \"role\": \"Developer (retired)\"\n                }\n            ],\n            \"description\": \"PHP library generating PDF files from UTF-8 encoded HTML\",\n            \"homepage\": \"https://mpdf.github.io\",\n            \"keywords\": [\n                \"pdf\",\n                \"php\",\n                \"utf-8\"\n            ],\n            \"support\": {\n                \"docs\": \"https://mpdf.github.io\",\n                \"issues\": \"https://github.com/mpdf/mpdf/issues\",\n                \"source\": \"https://github.com/mpdf/mpdf\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.paypal.me/mpdf\",\n                    \"type\": \"custom\"\n                }\n            ],\n            \"time\": \"2024-11-18T15:30:42+00:00\"\n        },\n        {\n            \"name\": \"mpdf/psr-http-message-shim\",\n            \"version\": \"1.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/mpdf/psr-http-message-shim.git\",\n                \"reference\": \"3206e6b80b6d2479e148ee497e9f2bebadc919db\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/mpdf/psr-http-message-shim/zipball/3206e6b80b6d2479e148ee497e9f2bebadc919db\",\n                \"reference\": \"3206e6b80b6d2479e148ee497e9f2bebadc919db\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"psr/http-message\": \"^1.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Mpdf\\\\PsrHttpMessageShim\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mark Dorison\",\n                    \"email\": \"mark@chromatichq.com\"\n                },\n                {\n                    \"name\": \"Kristofer Widholm\",\n                    \"email\": \"kristofer@chromatichq.com\"\n                },\n                {\n                    \"name\": \"Nigel Cunningham\",\n                    \"email\": \"nigel.cunningham@technocrat.com.au\"\n                }\n            ],\n            \"description\": \"Shim to allow support of different psr/message versions.\",\n            \"support\": {\n                \"issues\": \"https://github.com/mpdf/psr-http-message-shim/issues\",\n                \"source\": \"https://github.com/mpdf/psr-http-message-shim/tree/1.0.0\"\n            },\n            \"time\": \"2023-09-01T05:59:47+00:00\"\n        },\n        {\n            \"name\": \"mpdf/psr-log-aware-trait\",\n            \"version\": \"v3.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/mpdf/psr-log-aware-trait.git\",\n                \"reference\": \"a633da6065e946cc491e1c962850344bb0bf3e78\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/mpdf/psr-log-aware-trait/zipball/a633da6065e946cc491e1c962850344bb0bf3e78\",\n                \"reference\": \"a633da6065e946cc491e1c962850344bb0bf3e78\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"psr/log\": \"^3.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Mpdf\\\\PsrLogAwareTrait\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mark Dorison\",\n                    \"email\": \"mark@chromatichq.com\"\n                },\n                {\n                    \"name\": \"Kristofer Widholm\",\n                    \"email\": \"kristofer@chromatichq.com\"\n                }\n            ],\n            \"description\": \"Trait to allow support of different psr/log versions.\",\n            \"support\": {\n                \"issues\": \"https://github.com/mpdf/psr-log-aware-trait/issues\",\n                \"source\": \"https://github.com/mpdf/psr-log-aware-trait/tree/v3.0.0\"\n            },\n            \"time\": \"2023-05-03T06:19:36+00:00\"\n        },\n        {\n            \"name\": \"myclabs/deep-copy\",\n            \"version\": \"1.12.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/myclabs/DeepCopy.git\",\n                \"reference\": \"123267b2c49fbf30d78a7b2d333f6be754b94845\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/myclabs/DeepCopy/zipball/123267b2c49fbf30d78a7b2d333f6be754b94845\",\n                \"reference\": \"123267b2c49fbf30d78a7b2d333f6be754b94845\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"conflict\": {\n                \"doctrine/collections\": \"<1.6.8\",\n                \"doctrine/common\": \"<2.13.3 || >=3 <3.2.2\"\n            },\n            \"require-dev\": {\n                \"doctrine/collections\": \"^1.6.8\",\n                \"doctrine/common\": \"^2.13.3 || ^3.2.2\",\n                \"phpspec/prophecy\": \"^1.10\",\n                \"phpunit/phpunit\": \"^7.5.20 || ^8.5.23 || ^9.5.13\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/DeepCopy/deep_copy.php\"\n                ],\n                \"psr-4\": {\n                    \"DeepCopy\\\\\": \"src/DeepCopy/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"Create deep copies (clones) of your objects\",\n            \"keywords\": [\n                \"clone\",\n                \"copy\",\n                \"duplicate\",\n                \"object\",\n                \"object graph\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/myclabs/DeepCopy/issues\",\n                \"source\": \"https://github.com/myclabs/DeepCopy/tree/1.12.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/myclabs/deep-copy\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-08T17:47:46+00:00\"\n        },\n        {\n            \"name\": \"nikic/php-parser\",\n            \"version\": \"v5.3.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/nikic/PHP-Parser.git\",\n                \"reference\": \"8eea230464783aa9671db8eea6f8c6ac5285794b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/nikic/PHP-Parser/zipball/8eea230464783aa9671db8eea6f8c6ac5285794b\",\n                \"reference\": \"8eea230464783aa9671db8eea6f8c6ac5285794b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-tokenizer\": \"*\",\n                \"php\": \">=7.4\"\n            },\n            \"require-dev\": {\n                \"ircmaxell/php-yacc\": \"^0.0.7\",\n                \"phpunit/phpunit\": \"^9.0\"\n            },\n            \"bin\": [\n                \"bin/php-parse\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PhpParser\\\\\": \"lib/PhpParser\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nikita Popov\"\n                }\n            ],\n            \"description\": \"A PHP parser written in PHP\",\n            \"keywords\": [\n                \"parser\",\n                \"php\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/nikic/PHP-Parser/issues\",\n                \"source\": \"https://github.com/nikic/PHP-Parser/tree/v5.3.1\"\n            },\n            \"time\": \"2024-10-08T18:51:32+00:00\"\n        },\n        {\n            \"name\": \"nyholm/psr7\",\n            \"version\": \"1.8.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Nyholm/psr7.git\",\n                \"reference\": \"a71f2b11690f4b24d099d6b16690a90ae14fc6f3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Nyholm/psr7/zipball/a71f2b11690f4b24d099d6b16690a90ae14fc6f3\",\n                \"reference\": \"a71f2b11690f4b24d099d6b16690a90ae14fc6f3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\",\n                \"psr/http-factory\": \"^1.0\",\n                \"psr/http-message\": \"^1.1 || ^2.0\"\n            },\n            \"provide\": {\n                \"php-http/message-factory-implementation\": \"1.0\",\n                \"psr/http-factory-implementation\": \"1.0\",\n                \"psr/http-message-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"http-interop/http-factory-tests\": \"^0.9\",\n                \"php-http/message-factory\": \"^1.0\",\n                \"php-http/psr7-integration-tests\": \"^1.0\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.4\",\n                \"symfony/error-handler\": \"^4.4\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.8-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Nyholm\\\\Psr7\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\"\n                },\n                {\n                    \"name\": \"Martijn van der Ven\",\n                    \"email\": \"martijn@vanderven.se\"\n                }\n            ],\n            \"description\": \"A fast PHP7 implementation of PSR-7\",\n            \"homepage\": \"https://tnyholm.se\",\n            \"keywords\": [\n                \"psr-17\",\n                \"psr-7\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/Nyholm/psr7/issues\",\n                \"source\": \"https://github.com/Nyholm/psr7/tree/1.8.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Zegnat\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/nyholm\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-09-09T07:06:30+00:00\"\n        },\n        {\n            \"name\": \"nyholm/psr7-server\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Nyholm/psr7-server.git\",\n                \"reference\": \"4335801d851f554ca43fa6e7d2602141538854dc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Nyholm/psr7-server/zipball/4335801d851f554ca43fa6e7d2602141538854dc\",\n                \"reference\": \"4335801d851f554ca43fa6e7d2602141538854dc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\",\n                \"psr/http-factory\": \"^1.0\",\n                \"psr/http-message\": \"^1.0 || ^2.0\"\n            },\n            \"require-dev\": {\n                \"nyholm/nsa\": \"^1.1\",\n                \"nyholm/psr7\": \"^1.3\",\n                \"phpunit/phpunit\": \"^7.0 || ^8.5 || ^9.3\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Nyholm\\\\Psr7Server\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\"\n                },\n                {\n                    \"name\": \"Martijn van der Ven\",\n                    \"email\": \"martijn@vanderven.se\"\n                }\n            ],\n            \"description\": \"Helper classes to handle PSR-7 server requests\",\n            \"homepage\": \"http://tnyholm.se\",\n            \"keywords\": [\n                \"psr-17\",\n                \"psr-7\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/Nyholm/psr7-server/issues\",\n                \"source\": \"https://github.com/Nyholm/psr7-server/tree/1.1.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Zegnat\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/nyholm\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-11-08T09:30:43+00:00\"\n        },\n        {\n            \"name\": \"omnipay/common\",\n            \"version\": \"v3.3.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/omnipay-common.git\",\n                \"reference\": \"2eca3823e9069e2c36b6007a090577d5584f9518\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/omnipay-common/zipball/2eca3823e9069e2c36b6007a090577d5584f9518\",\n                \"reference\": \"2eca3823e9069e2c36b6007a090577d5584f9518\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"moneyphp/money\": \"^3.1|^4.0.3\",\n                \"php\": \"^7.2|^8\",\n                \"php-http/client-implementation\": \"^1\",\n                \"php-http/discovery\": \"^1.14\",\n                \"php-http/message\": \"^1.5\",\n                \"php-http/message-factory\": \"^1.1\",\n                \"symfony/http-foundation\": \"^2.1|^3|^4|^5|^6|^7\"\n            },\n            \"require-dev\": {\n                \"http-interop/http-factory-guzzle\": \"^1.1\",\n                \"omnipay/tests\": \"^4.1\",\n                \"php-http/guzzle7-adapter\": \"^1\",\n                \"php-http/mock-client\": \"^1.6\",\n                \"squizlabs/php_codesniffer\": \"^3.8.1\"\n            },\n            \"suggest\": {\n                \"league/omnipay\": \"The default Omnipay package provides a default HTTP Adapter.\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Omnipay\\\\Common\\\\\": \"src/Common\"\n                },\n                \"classmap\": [\n                    \"src/Omnipay.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Adrian Macneil\",\n                    \"email\": \"adrian@adrianmacneil.com\"\n                },\n                {\n                    \"name\": \"Barry vd. Heuvel\",\n                    \"email\": \"barryvdh@gmail.com\"\n                },\n                {\n                    \"name\": \"Jason Judge\",\n                    \"email\": \"jason.judge@consil.co.uk\"\n                },\n                {\n                    \"name\": \"Del\"\n                },\n                {\n                    \"name\": \"Omnipay Contributors\",\n                    \"homepage\": \"https://github.com/thephpleague/omnipay-common/contributors\"\n                }\n            ],\n            \"description\": \"Common components for Omnipay payment processing library\",\n            \"homepage\": \"https://github.com/thephpleague/omnipay-common\",\n            \"keywords\": [\n                \"gateway\",\n                \"merchant\",\n                \"omnipay\",\n                \"pay\",\n                \"payment\",\n                \"purchase\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/thephpleague/omnipay-common/issues\",\n                \"source\": \"https://github.com/thephpleague/omnipay-common/tree/v3.3.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/barryvdh\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-08T11:56:40+00:00\"\n        },\n        {\n            \"name\": \"omnipay/stripe\",\n            \"version\": \"v3.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/omnipay-stripe.git\",\n                \"reference\": \"20812498efedc1079baae5fea96567fefd669105\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/omnipay-stripe/zipball/20812498efedc1079baae5fea96567fefd669105\",\n                \"reference\": \"20812498efedc1079baae5fea96567fefd669105\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"omnipay/common\": \"^3\"\n            },\n            \"require-dev\": {\n                \"omnipay/tests\": \"^3\",\n                \"phpro/grumphp\": \"^0.14\",\n                \"squizlabs/php_codesniffer\": \"^3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Omnipay\\\\Stripe\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Adrian Macneil\",\n                    \"email\": \"adrian@adrianmacneil.com\"\n                },\n                {\n                    \"name\": \"Omnipay Contributors\",\n                    \"homepage\": \"https://github.com/thephpleague/omnipay-stripe/contributors\"\n                }\n            ],\n            \"description\": \"Stripe driver for the Omnipay payment processing library\",\n            \"homepage\": \"https://github.com/thephpleague/omnipay-stripe\",\n            \"keywords\": [\n                \"gateway\",\n                \"merchant\",\n                \"omnipay\",\n                \"pay\",\n                \"payment\",\n                \"stripe\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/thephpleague/omnipay-stripe/issues\",\n                \"source\": \"https://github.com/thephpleague/omnipay-stripe/tree/v3.2.0\"\n            },\n            \"time\": \"2022-03-22T10:58:41+00:00\"\n        },\n        {\n            \"name\": \"openemr/mustache\",\n            \"version\": \"v2.15.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/openemr/mustache.php.git\",\n                \"reference\": \"936596936d306725f34bb13f11e9a16bdbe99887\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/openemr/mustache.php/zipball/936596936d306725f34bb13f11e9a16bdbe99887\",\n                \"reference\": \"936596936d306725f34bb13f11e9a16bdbe99887\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.2.4\"\n            },\n            \"require-dev\": {\n                \"friendsofphp/php-cs-fixer\": \"~1.11\",\n                \"phpunit/phpunit\": \"~3.7|~4.0|~5.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-0\": {\n                    \"Mustache\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Justin Hileman\",\n                    \"email\": \"justin@justinhileman.info\",\n                    \"homepage\": \"http://justinhileman.com\"\n                },\n                {\n                    \"name\": \"OpenEMR\",\n                    \"email\": \"hello@open-emr.org\",\n                    \"homepage\": \"https://open-emr.org\"\n                }\n            ],\n            \"description\": \"A Mustache implementation in PHP.\",\n            \"homepage\": \"https://github.com/openemr/mustache.php\",\n            \"keywords\": [\n                \"mustache\",\n                \"templating\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/openemr/mustache.php/issues\",\n                \"source\": \"https://github.com/openemr/mustache.php/tree/v2.15.2\"\n            },\n            \"time\": \"2022-03-03T14:53:09+00:00\"\n        },\n        {\n            \"name\": \"paragonie/constant_time_encoding\",\n            \"version\": \"v3.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/paragonie/constant_time_encoding.git\",\n                \"reference\": \"df1e7fde177501eee2037dd159cf04f5f301a512\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/paragonie/constant_time_encoding/zipball/df1e7fde177501eee2037dd159cf04f5f301a512\",\n                \"reference\": \"df1e7fde177501eee2037dd159cf04f5f301a512\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^8\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9\",\n                \"vimeo/psalm\": \"^4|^5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"ParagonIE\\\\ConstantTime\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Paragon Initiative Enterprises\",\n                    \"email\": \"security@paragonie.com\",\n                    \"homepage\": \"https://paragonie.com\",\n                    \"role\": \"Maintainer\"\n                },\n                {\n                    \"name\": \"Steve 'Sc00bz' Thomas\",\n                    \"email\": \"steve@tobtu.com\",\n                    \"homepage\": \"https://www.tobtu.com\",\n                    \"role\": \"Original Developer\"\n                }\n            ],\n            \"description\": \"Constant-time Implementations of RFC 4648 Encoding (Base-64, Base-32, Base-16)\",\n            \"keywords\": [\n                \"base16\",\n                \"base32\",\n                \"base32_decode\",\n                \"base32_encode\",\n                \"base64\",\n                \"base64_decode\",\n                \"base64_encode\",\n                \"bin2hex\",\n                \"encoding\",\n                \"hex\",\n                \"hex2bin\",\n                \"rfc4648\"\n            ],\n            \"support\": {\n                \"email\": \"info@paragonie.com\",\n                \"issues\": \"https://github.com/paragonie/constant_time_encoding/issues\",\n                \"source\": \"https://github.com/paragonie/constant_time_encoding\"\n            },\n            \"time\": \"2024-05-08T12:36:18+00:00\"\n        },\n        {\n            \"name\": \"paragonie/random_compat\",\n            \"version\": \"v9.99.100\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/paragonie/random_compat.git\",\n                \"reference\": \"996434e5492cb4c3edcb9168db6fbb1359ef965a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/paragonie/random_compat/zipball/996434e5492cb4c3edcb9168db6fbb1359ef965a\",\n                \"reference\": \"996434e5492cb4c3edcb9168db6fbb1359ef965a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">= 7\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"4.*|5.*\",\n                \"vimeo/psalm\": \"^1\"\n            },\n            \"suggest\": {\n                \"ext-libsodium\": \"Provides a modern crypto API that can be used to generate random bytes.\"\n            },\n            \"type\": \"library\",\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Paragon Initiative Enterprises\",\n                    \"email\": \"security@paragonie.com\",\n                    \"homepage\": \"https://paragonie.com\"\n                }\n            ],\n            \"description\": \"PHP 5.x polyfill for random_bytes() and random_int() from PHP 7\",\n            \"keywords\": [\n                \"csprng\",\n                \"polyfill\",\n                \"pseudorandom\",\n                \"random\"\n            ],\n            \"support\": {\n                \"email\": \"info@paragonie.com\",\n                \"issues\": \"https://github.com/paragonie/random_compat/issues\",\n                \"source\": \"https://github.com/paragonie/random_compat\"\n            },\n            \"time\": \"2020-10-15T08:29:30+00:00\"\n        },\n        {\n            \"name\": \"particle/validator\",\n            \"version\": \"v2.3.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/particle-php/Validator.git\",\n                \"reference\": \"aab07e734bc40e8777fb4a1f9d9037dc11fb60b6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/particle-php/Validator/zipball/aab07e734bc40e8777fb4a1f9d9037dc11fb60b6\",\n                \"reference\": \"aab07e734bc40e8777fb4a1f9d9037dc11fb60b6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.4\"\n            },\n            \"require-dev\": {\n                \"byrokrat/checkdigit\": \"^1.0\",\n                \"giggsey/libphonenumber-for-php\": \"^7.2\",\n                \"phpunit/phpunit\": \"~4.0\",\n                \"squizlabs/php_codesniffer\": \"2.*\"\n            },\n            \"suggest\": {\n                \"byrokrat/checkdigit\": \"If you want to use CreditCard validation rule, this library must be installed.\",\n                \"giggsey/libphonenumber-for-php\": \"If you want to use Phone validation rule, this library must be installed.\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Particle\\\\Validator\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Berry Langerak\",\n                    \"email\": \"berry@berryllium.nl\",\n                    \"role\": \"developer\"\n                },\n                {\n                    \"name\": \"Rick van der Staaij\",\n                    \"homepage\": \"http://rickvanderstaaij.nl\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Flexible and highly usable validation library with no dependencies.\",\n            \"homepage\": \"http://github.com/particle-php/validator\",\n            \"keywords\": [\n                \"validation\",\n                \"validator\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/particle-php/Validator/issues\",\n                \"source\": \"https://github.com/particle-php/Validator/tree/v2.3.5\"\n            },\n            \"time\": \"2022-12-12T19:35:42+00:00\"\n        },\n        {\n            \"name\": \"pear/archive_tar\",\n            \"version\": \"1.5.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/pear/Archive_Tar.git\",\n                \"reference\": \"b439c859564f5cbb0f64ad6002d0afe84a889602\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/pear/Archive_Tar/zipball/b439c859564f5cbb0f64ad6002d0afe84a889602\",\n                \"reference\": \"b439c859564f5cbb0f64ad6002d0afe84a889602\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"pear/pear-core-minimal\": \"^1.10.0alpha2\",\n                \"php\": \">=5.2.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"*\"\n            },\n            \"suggest\": {\n                \"ext-bz2\": \"Bz2 compression support.\",\n                \"ext-xz\": \"Lzma2 compression support.\",\n                \"ext-zlib\": \"Gzip compression support.\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.4.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-0\": {\n                    \"Archive_Tar\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"include-path\": [\n                \"./\"\n            ],\n            \"license\": [\n                \"BSD-2-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Vincent Blavet\",\n                    \"email\": \"vincent@phpconcept.net\"\n                },\n                {\n                    \"name\": \"Greg Beaver\",\n                    \"email\": \"greg@chiaraquartet.net\"\n                },\n                {\n                    \"name\": \"Michiel Rook\",\n                    \"email\": \"mrook@php.net\"\n                }\n            ],\n            \"description\": \"Tar file management class with compression support (gzip, bzip2, lzma2)\",\n            \"homepage\": \"https://github.com/pear/Archive_Tar\",\n            \"keywords\": [\n                \"archive\",\n                \"tar\"\n            ],\n            \"support\": {\n                \"issues\": \"http://pear.php.net/bugs/search.php?cmd=display&package_name[]=Archive_Tar\",\n                \"source\": \"https://github.com/pear/Archive_Tar\"\n            },\n            \"time\": \"2024-03-16T16:21:40+00:00\"\n        },\n        {\n            \"name\": \"pear/console_getopt\",\n            \"version\": \"v1.4.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/pear/Console_Getopt.git\",\n                \"reference\": \"a41f8d3e668987609178c7c4a9fe48fecac53fa0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/pear/Console_Getopt/zipball/a41f8d3e668987609178c7c4a9fe48fecac53fa0\",\n                \"reference\": \"a41f8d3e668987609178c7c4a9fe48fecac53fa0\",\n                \"shasum\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-0\": {\n                    \"Console\": \"./\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"include-path\": [\n                \"./\"\n            ],\n            \"license\": [\n                \"BSD-2-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Andrei Zmievski\",\n                    \"email\": \"andrei@php.net\",\n                    \"role\": \"Lead\"\n                },\n                {\n                    \"name\": \"Stig Bakken\",\n                    \"email\": \"stig@php.net\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Greg Beaver\",\n                    \"email\": \"cellog@php.net\",\n                    \"role\": \"Helper\"\n                }\n            ],\n            \"description\": \"More info available on: http://pear.php.net/package/Console_Getopt\",\n            \"support\": {\n                \"issues\": \"http://pear.php.net/bugs/search.php?cmd=display&package_name[]=Console_Getopt\",\n                \"source\": \"https://github.com/pear/Console_Getopt\"\n            },\n            \"time\": \"2019-11-20T18:27:48+00:00\"\n        },\n        {\n            \"name\": \"pear/pear-core-minimal\",\n            \"version\": \"v1.10.16\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/pear/pear-core-minimal.git\",\n                \"reference\": \"c0f51b45f50683bf5bbf558036854ebc9b54d033\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/pear/pear-core-minimal/zipball/c0f51b45f50683bf5bbf558036854ebc9b54d033\",\n                \"reference\": \"c0f51b45f50683bf5bbf558036854ebc9b54d033\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"pear/console_getopt\": \"~1.4\",\n                \"pear/pear_exception\": \"~1.0\",\n                \"php\": \">=5.4\"\n            },\n            \"replace\": {\n                \"rsky/pear-core-min\": \"self.version\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"include-path\": [\n                \"src/\"\n            ],\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Christian Weiske\",\n                    \"email\": \"cweiske@php.net\",\n                    \"role\": \"Lead\"\n                }\n            ],\n            \"description\": \"Minimal set of PEAR core files to be used as composer dependency\",\n            \"support\": {\n                \"issues\": \"http://pear.php.net/bugs/search.php?cmd=display&package_name[]=PEAR\",\n                \"source\": \"https://github.com/pear/pear-core-minimal\"\n            },\n            \"time\": \"2024-11-24T22:27:58+00:00\"\n        },\n        {\n            \"name\": \"pear/pear_exception\",\n            \"version\": \"v1.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/pear/PEAR_Exception.git\",\n                \"reference\": \"b14fbe2ddb0b9f94f5b24cf08783d599f776fff0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/pear/PEAR_Exception/zipball/b14fbe2ddb0b9f94f5b24cf08783d599f776fff0\",\n                \"reference\": \"b14fbe2ddb0b9f94f5b24cf08783d599f776fff0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.2.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"<9\"\n            },\n            \"type\": \"class\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"PEAR/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"include-path\": [\n                \".\"\n            ],\n            \"license\": [\n                \"BSD-2-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Helgi Thormar\",\n                    \"email\": \"dufuz@php.net\"\n                },\n                {\n                    \"name\": \"Greg Beaver\",\n                    \"email\": \"cellog@php.net\"\n                }\n            ],\n            \"description\": \"The PEAR Exception base class.\",\n            \"homepage\": \"https://github.com/pear/PEAR_Exception\",\n            \"keywords\": [\n                \"exception\"\n            ],\n            \"support\": {\n                \"issues\": \"http://pear.php.net/bugs/search.php?cmd=display&package_name[]=PEAR_Exception\",\n                \"source\": \"https://github.com/pear/PEAR_Exception\"\n            },\n            \"time\": \"2021-03-21T15:43:46+00:00\"\n        },\n        {\n            \"name\": \"php-http/discovery\",\n            \"version\": \"1.20.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-http/discovery.git\",\n                \"reference\": \"82fe4c73ef3363caed49ff8dd1539ba06044910d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-http/discovery/zipball/82fe4c73ef3363caed49ff8dd1539ba06044910d\",\n                \"reference\": \"82fe4c73ef3363caed49ff8dd1539ba06044910d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"composer-plugin-api\": \"^1.0|^2.0\",\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"conflict\": {\n                \"nyholm/psr7\": \"<1.0\",\n                \"zendframework/zend-diactoros\": \"*\"\n            },\n            \"provide\": {\n                \"php-http/async-client-implementation\": \"*\",\n                \"php-http/client-implementation\": \"*\",\n                \"psr/http-client-implementation\": \"*\",\n                \"psr/http-factory-implementation\": \"*\",\n                \"psr/http-message-implementation\": \"*\"\n            },\n            \"require-dev\": {\n                \"composer/composer\": \"^1.0.2|^2.0\",\n                \"graham-campbell/phpspec-skip-example-extension\": \"^5.0\",\n                \"php-http/httplug\": \"^1.0 || ^2.0\",\n                \"php-http/message-factory\": \"^1.0\",\n                \"phpspec/phpspec\": \"^5.1 || ^6.1 || ^7.3\",\n                \"sebastian/comparator\": \"^3.0.5 || ^4.0.8\",\n                \"symfony/phpunit-bridge\": \"^6.4.4 || ^7.0.1\"\n            },\n            \"type\": \"composer-plugin\",\n            \"extra\": {\n                \"class\": \"Http\\\\Discovery\\\\Composer\\\\Plugin\",\n                \"plugin-optional\": true\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Http\\\\Discovery\\\\\": \"src/\"\n                },\n                \"exclude-from-classmap\": [\n                    \"src/Composer/Plugin.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\"\n                }\n            ],\n            \"description\": \"Finds and installs PSR-7, PSR-17, PSR-18 and HTTPlug implementations\",\n            \"homepage\": \"http://php-http.org\",\n            \"keywords\": [\n                \"adapter\",\n                \"client\",\n                \"discovery\",\n                \"factory\",\n                \"http\",\n                \"message\",\n                \"psr17\",\n                \"psr7\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-http/discovery/issues\",\n                \"source\": \"https://github.com/php-http/discovery/tree/1.20.0\"\n            },\n            \"time\": \"2024-10-02T11:20:13+00:00\"\n        },\n        {\n            \"name\": \"php-http/guzzle7-adapter\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-http/guzzle7-adapter.git\",\n                \"reference\": \"03a415fde709c2f25539790fecf4d9a31bc3d0eb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-http/guzzle7-adapter/zipball/03a415fde709c2f25539790fecf4d9a31bc3d0eb\",\n                \"reference\": \"03a415fde709c2f25539790fecf4d9a31bc3d0eb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"guzzlehttp/guzzle\": \"^7.0\",\n                \"php\": \"^7.3 | ^8.0\",\n                \"php-http/httplug\": \"^2.0\",\n                \"psr/http-client\": \"^1.0\"\n            },\n            \"provide\": {\n                \"php-http/async-client-implementation\": \"1.0\",\n                \"php-http/client-implementation\": \"1.0\",\n                \"psr/http-client-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"php-http/client-integration-tests\": \"^3.0\",\n                \"php-http/message-factory\": \"^1.1\",\n                \"phpspec/prophecy-phpunit\": \"^2.0\",\n                \"phpunit/phpunit\": \"^8.0|^9.3\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Http\\\\Adapter\\\\Guzzle7\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\"\n                }\n            ],\n            \"description\": \"Guzzle 7 HTTP Adapter\",\n            \"homepage\": \"http://httplug.io\",\n            \"keywords\": [\n                \"Guzzle\",\n                \"http\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-http/guzzle7-adapter/issues\",\n                \"source\": \"https://github.com/php-http/guzzle7-adapter/tree/1.1.0\"\n            },\n            \"time\": \"2024-11-26T11:14:36+00:00\"\n        },\n        {\n            \"name\": \"php-http/httplug\",\n            \"version\": \"2.4.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-http/httplug.git\",\n                \"reference\": \"5cad731844891a4c282f3f3e1b582c46839d22f4\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-http/httplug/zipball/5cad731844891a4c282f3f3e1b582c46839d22f4\",\n                \"reference\": \"5cad731844891a4c282f3f3e1b582c46839d22f4\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\",\n                \"php-http/promise\": \"^1.1\",\n                \"psr/http-client\": \"^1.0\",\n                \"psr/http-message\": \"^1.0 || ^2.0\"\n            },\n            \"require-dev\": {\n                \"friends-of-phpspec/phpspec-code-coverage\": \"^4.1 || ^5.0 || ^6.0\",\n                \"phpspec/phpspec\": \"^5.1 || ^6.0 || ^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Http\\\\Client\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Eric GELOEN\",\n                    \"email\": \"geloen.eric@gmail.com\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://sagikazarmark.hu\"\n                }\n            ],\n            \"description\": \"HTTPlug, the HTTP client abstraction for PHP\",\n            \"homepage\": \"http://httplug.io\",\n            \"keywords\": [\n                \"client\",\n                \"http\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-http/httplug/issues\",\n                \"source\": \"https://github.com/php-http/httplug/tree/2.4.1\"\n            },\n            \"time\": \"2024-09-23T11:39:58+00:00\"\n        },\n        {\n            \"name\": \"php-http/message\",\n            \"version\": \"1.16.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-http/message.git\",\n                \"reference\": \"06dd5e8562f84e641bf929bfe699ee0f5ce8080a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-http/message/zipball/06dd5e8562f84e641bf929bfe699ee0f5ce8080a\",\n                \"reference\": \"06dd5e8562f84e641bf929bfe699ee0f5ce8080a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"clue/stream-filter\": \"^1.5\",\n                \"php\": \"^7.2 || ^8.0\",\n                \"psr/http-message\": \"^1.1 || ^2.0\"\n            },\n            \"provide\": {\n                \"php-http/message-factory-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"ergebnis/composer-normalize\": \"^2.6\",\n                \"ext-zlib\": \"*\",\n                \"guzzlehttp/psr7\": \"^1.0 || ^2.0\",\n                \"laminas/laminas-diactoros\": \"^2.0 || ^3.0\",\n                \"php-http/message-factory\": \"^1.0.2\",\n                \"phpspec/phpspec\": \"^5.1 || ^6.3 || ^7.1\",\n                \"slim/slim\": \"^3.0\"\n            },\n            \"suggest\": {\n                \"ext-zlib\": \"Used with compressor/decompressor streams\",\n                \"guzzlehttp/psr7\": \"Used with Guzzle PSR-7 Factories\",\n                \"laminas/laminas-diactoros\": \"Used with Diactoros Factories\",\n                \"slim/slim\": \"Used with Slim Framework PSR-7 implementation\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/filters.php\"\n                ],\n                \"psr-4\": {\n                    \"Http\\\\Message\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\"\n                }\n            ],\n            \"description\": \"HTTP Message related tools\",\n            \"homepage\": \"http://php-http.org\",\n            \"keywords\": [\n                \"http\",\n                \"message\",\n                \"psr-7\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-http/message/issues\",\n                \"source\": \"https://github.com/php-http/message/tree/1.16.2\"\n            },\n            \"time\": \"2024-10-02T11:34:13+00:00\"\n        },\n        {\n            \"name\": \"php-http/message-factory\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-http/message-factory.git\",\n                \"reference\": \"4d8778e1c7d405cbb471574821c1ff5b68cc8f57\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-http/message-factory/zipball/4d8778e1c7d405cbb471574821c1ff5b68cc8f57\",\n                \"reference\": \"4d8778e1c7d405cbb471574821c1ff5b68cc8f57\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.4\",\n                \"psr/http-message\": \"^1.0 || ^2.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Http\\\\Message\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\"\n                }\n            ],\n            \"description\": \"Factory interfaces for PSR-7 HTTP Message\",\n            \"homepage\": \"http://php-http.org\",\n            \"keywords\": [\n                \"factory\",\n                \"http\",\n                \"message\",\n                \"stream\",\n                \"uri\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-http/message-factory/issues\",\n                \"source\": \"https://github.com/php-http/message-factory/tree/1.1.0\"\n            },\n            \"abandoned\": \"psr/http-factory\",\n            \"time\": \"2023-04-14T14:16:17+00:00\"\n        },\n        {\n            \"name\": \"php-http/promise\",\n            \"version\": \"1.3.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-http/promise.git\",\n                \"reference\": \"fc85b1fba37c169a69a07ef0d5a8075770cc1f83\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-http/promise/zipball/fc85b1fba37c169a69a07ef0d5a8075770cc1f83\",\n                \"reference\": \"fc85b1fba37c169a69a07ef0d5a8075770cc1f83\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"friends-of-phpspec/phpspec-code-coverage\": \"^4.3.2 || ^6.3\",\n                \"phpspec/phpspec\": \"^5.1.2 || ^6.2 || ^7.4\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Http\\\\Promise\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Joel Wurtz\",\n                    \"email\": \"joel.wurtz@gmail.com\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\"\n                }\n            ],\n            \"description\": \"Promise used for asynchronous HTTP requests\",\n            \"homepage\": \"http://httplug.io\",\n            \"keywords\": [\n                \"promise\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-http/promise/issues\",\n                \"source\": \"https://github.com/php-http/promise/tree/1.3.1\"\n            },\n            \"time\": \"2024-03-15T13:55:21+00:00\"\n        },\n        {\n            \"name\": \"php81_bc/strftime\",\n            \"version\": \"0.7.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/alphp/strftime.git\",\n                \"reference\": \"d115595bccd137660d25e9e05fb656143594b404\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/alphp/strftime/zipball/d115595bccd137660d25e9e05fb656143594b404\",\n                \"reference\": \"d115595bccd137660d25e9e05fb656143594b404\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-intl\": \"*\",\n                \"php\": \">=7.1.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"@stable\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/php-8.1-strftime.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fernando Herrero\",\n                    \"homepage\": \"https://github.com/alphp/strftime/graphs/contributors\"\n                }\n            ],\n            \"description\": \"Locale-formatted strftime using IntlDateFormatter (PHP 8.1 compatible)\",\n            \"support\": {\n                \"issues\": \"https://github.com/alphp/strftime/issues\",\n                \"source\": \"https://github.com/alphp/strftime\"\n            },\n            \"time\": \"2024-11-19T14:01:36+00:00\"\n        },\n        {\n            \"name\": \"phpmailer/phpmailer\",\n            \"version\": \"v6.9.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHPMailer/PHPMailer.git\",\n                \"reference\": \"2f5c94fe7493efc213f643c23b1b1c249d40f47e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHPMailer/PHPMailer/zipball/2f5c94fe7493efc213f643c23b1b1c249d40f47e\",\n                \"reference\": \"2f5c94fe7493efc213f643c23b1b1c249d40f47e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"ext-filter\": \"*\",\n                \"ext-hash\": \"*\",\n                \"php\": \">=5.5.0\"\n            },\n            \"require-dev\": {\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"^1.0\",\n                \"doctrine/annotations\": \"^1.2.6 || ^1.13.3\",\n                \"php-parallel-lint/php-console-highlighter\": \"^1.0.0\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.3.2\",\n                \"phpcompatibility/php-compatibility\": \"^9.3.5\",\n                \"roave/security-advisories\": \"dev-latest\",\n                \"squizlabs/php_codesniffer\": \"^3.7.2\",\n                \"yoast/phpunit-polyfills\": \"^1.0.4\"\n            },\n            \"suggest\": {\n                \"decomplexity/SendOauth2\": \"Adapter for using XOAUTH2 authentication\",\n                \"ext-mbstring\": \"Needed to send email in multibyte encoding charset or decode encoded addresses\",\n                \"ext-openssl\": \"Needed for secure SMTP sending and DKIM signing\",\n                \"greew/oauth2-azure-provider\": \"Needed for Microsoft Azure XOAUTH2 authentication\",\n                \"hayageek/oauth2-yahoo\": \"Needed for Yahoo XOAUTH2 authentication\",\n                \"league/oauth2-google\": \"Needed for Google XOAUTH2 authentication\",\n                \"psr/log\": \"For optional PSR-3 debug logging\",\n                \"symfony/polyfill-mbstring\": \"To support UTF-8 if the Mbstring PHP extension is not enabled (^1.2)\",\n                \"thenetworg/oauth2-azure\": \"Needed for Microsoft XOAUTH2 authentication\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PHPMailer\\\\PHPMailer\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-2.1-only\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marcus Bointon\",\n                    \"email\": \"phpmailer@synchromedia.co.uk\"\n                },\n                {\n                    \"name\": \"Jim Jagielski\",\n                    \"email\": \"jimjag@gmail.com\"\n                },\n                {\n                    \"name\": \"Andy Prevost\",\n                    \"email\": \"codeworxtech@users.sourceforge.net\"\n                },\n                {\n                    \"name\": \"Brent R. Matzelle\"\n                }\n            ],\n            \"description\": \"PHPMailer is a full-featured email creation and transfer class for PHP\",\n            \"support\": {\n                \"issues\": \"https://github.com/PHPMailer/PHPMailer/issues\",\n                \"source\": \"https://github.com/PHPMailer/PHPMailer/tree/v6.9.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Synchro\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-11-24T18:04:13+00:00\"\n        },\n        {\n            \"name\": \"phpoffice/phpspreadsheet\",\n            \"version\": \"3.6.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHPOffice/PhpSpreadsheet.git\",\n                \"reference\": \"bce5db99872f9613121c3ad033c43318a3789396\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHPOffice/PhpSpreadsheet/zipball/bce5db99872f9613121c3ad033c43318a3789396\",\n                \"reference\": \"bce5db99872f9613121c3ad033c43318a3789396\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"ext-dom\": \"*\",\n                \"ext-fileinfo\": \"*\",\n                \"ext-gd\": \"*\",\n                \"ext-iconv\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"ext-simplexml\": \"*\",\n                \"ext-xml\": \"*\",\n                \"ext-xmlreader\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"ext-zip\": \"*\",\n                \"ext-zlib\": \"*\",\n                \"maennchen/zipstream-php\": \"^2.1 || ^3.0\",\n                \"markbaker/complex\": \"^3.0\",\n                \"markbaker/matrix\": \"^3.0\",\n                \"php\": \"^8.1\",\n                \"psr/http-client\": \"^1.0\",\n                \"psr/http-factory\": \"^1.0\",\n                \"psr/simple-cache\": \"^1.0 || ^2.0 || ^3.0\"\n            },\n            \"require-dev\": {\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"dev-main\",\n                \"dompdf/dompdf\": \"^2.0 || ^3.0\",\n                \"friendsofphp/php-cs-fixer\": \"^3.2\",\n                \"mitoteam/jpgraph\": \"^10.3\",\n                \"mpdf/mpdf\": \"^8.1.1\",\n                \"phpcompatibility/php-compatibility\": \"^9.3\",\n                \"phpstan/phpstan\": \"^1.1\",\n                \"phpstan/phpstan-phpunit\": \"^1.0\",\n                \"phpunit/phpunit\": \"^10.5\",\n                \"squizlabs/php_codesniffer\": \"^3.7\",\n                \"tecnickcom/tcpdf\": \"^6.5\"\n            },\n            \"suggest\": {\n                \"dompdf/dompdf\": \"Option for rendering PDF with PDF Writer\",\n                \"ext-intl\": \"PHP Internationalization Functions\",\n                \"mitoteam/jpgraph\": \"Option for rendering charts, or including charts with PDF or HTML Writers\",\n                \"mpdf/mpdf\": \"Option for rendering PDF with PDF Writer\",\n                \"tecnickcom/tcpdf\": \"Option for rendering PDF with PDF Writer\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PhpOffice\\\\PhpSpreadsheet\\\\\": \"src/PhpSpreadsheet\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Maarten Balliauw\",\n                    \"homepage\": \"https://blog.maartenballiauw.be\"\n                },\n                {\n                    \"name\": \"Mark Baker\",\n                    \"homepage\": \"https://markbakeruk.net\"\n                },\n                {\n                    \"name\": \"Franck Lefevre\",\n                    \"homepage\": \"https://rootslabs.net\"\n                },\n                {\n                    \"name\": \"Erik Tilt\"\n                },\n                {\n                    \"name\": \"Adrien Crivelli\"\n                }\n            ],\n            \"description\": \"PHPSpreadsheet - Read, Create and Write Spreadsheet documents in PHP - Spreadsheet engine\",\n            \"homepage\": \"https://github.com/PHPOffice/PhpSpreadsheet\",\n            \"keywords\": [\n                \"OpenXML\",\n                \"excel\",\n                \"gnumeric\",\n                \"ods\",\n                \"php\",\n                \"spreadsheet\",\n                \"xls\",\n                \"xlsx\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/PHPOffice/PhpSpreadsheet/issues\",\n                \"source\": \"https://github.com/PHPOffice/PhpSpreadsheet/tree/3.6.0\"\n            },\n            \"time\": \"2024-12-08T15:04:12+00:00\"\n        },\n        {\n            \"name\": \"phpoption/phpoption\",\n            \"version\": \"1.9.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/schmittjoh/php-option.git\",\n                \"reference\": \"e3fac8b24f56113f7cb96af14958c0dd16330f54\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/schmittjoh/php-option/zipball/e3fac8b24f56113f7cb96af14958c0dd16330f54\",\n                \"reference\": \"e3fac8b24f56113f7cb96af14958c0dd16330f54\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2.5 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"phpunit/phpunit\": \"^8.5.39 || ^9.6.20 || ^10.5.28\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                },\n                \"branch-alias\": {\n                    \"dev-master\": \"1.9-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PhpOption\\\\\": \"src/PhpOption/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"Apache-2.0\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Johannes M. Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\",\n                    \"homepage\": \"https://github.com/schmittjoh\"\n                },\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                }\n            ],\n            \"description\": \"Option Type for PHP\",\n            \"keywords\": [\n                \"language\",\n                \"option\",\n                \"php\",\n                \"type\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/schmittjoh/php-option/issues\",\n                \"source\": \"https://github.com/schmittjoh/php-option/tree/1.9.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/phpoption/phpoption\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-07-20T21:41:07+00:00\"\n        },\n        {\n            \"name\": \"phpseclib/phpseclib\",\n            \"version\": \"3.0.43\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpseclib/phpseclib.git\",\n                \"reference\": \"709ec107af3cb2f385b9617be72af8cf62441d02\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpseclib/phpseclib/zipball/709ec107af3cb2f385b9617be72af8cf62441d02\",\n                \"reference\": \"709ec107af3cb2f385b9617be72af8cf62441d02\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"paragonie/constant_time_encoding\": \"^1|^2|^3\",\n                \"paragonie/random_compat\": \"^1.4|^2.0|^9.99.99\",\n                \"php\": \">=5.6.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"*\"\n            },\n            \"suggest\": {\n                \"ext-dom\": \"Install the DOM extension to load XML formatted public keys.\",\n                \"ext-gmp\": \"Install the GMP (GNU Multiple Precision) extension in order to speed up arbitrary precision integer arithmetic operations.\",\n                \"ext-libsodium\": \"SSH2/SFTP can make use of some algorithms provided by the libsodium-php extension.\",\n                \"ext-mcrypt\": \"Install the Mcrypt extension in order to speed up a few other cryptographic operations.\",\n                \"ext-openssl\": \"Install the OpenSSL extension in order to speed up a wide variety of cryptographic operations.\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"phpseclib/bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"phpseclib3\\\\\": \"phpseclib/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jim Wigginton\",\n                    \"email\": \"terrafrost@php.net\",\n                    \"role\": \"Lead Developer\"\n                },\n                {\n                    \"name\": \"Patrick Monnerat\",\n                    \"email\": \"pm@datasphere.ch\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Andreas Fischer\",\n                    \"email\": \"bantu@phpbb.com\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Hans-Jürgen Petrich\",\n                    \"email\": \"petrich@tronic-media.com\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"graham@alt-three.com\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"PHP Secure Communications Library - Pure-PHP implementations of RSA, AES, SSH2, SFTP, X.509 etc.\",\n            \"homepage\": \"http://phpseclib.sourceforge.net\",\n            \"keywords\": [\n                \"BigInteger\",\n                \"aes\",\n                \"asn.1\",\n                \"asn1\",\n                \"blowfish\",\n                \"crypto\",\n                \"cryptography\",\n                \"encryption\",\n                \"rsa\",\n                \"security\",\n                \"sftp\",\n                \"signature\",\n                \"signing\",\n                \"ssh\",\n                \"twofish\",\n                \"x.509\",\n                \"x509\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/phpseclib/phpseclib/issues\",\n                \"source\": \"https://github.com/phpseclib/phpseclib/tree/3.0.43\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/terrafrost\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpseclib\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/phpseclib/phpseclib\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-12-14T21:12:59+00:00\"\n        },\n        {\n            \"name\": \"psr/cache\",\n            \"version\": \"3.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/cache.git\",\n                \"reference\": \"aa5030cfa5405eccfdcb1083ce040c2cb8d253bf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/cache/zipball/aa5030cfa5405eccfdcb1083ce040c2cb8d253bf\",\n                \"reference\": \"aa5030cfa5405eccfdcb1083ce040c2cb8d253bf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Cache\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for caching libraries\",\n            \"keywords\": [\n                \"cache\",\n                \"psr\",\n                \"psr-6\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/cache/tree/3.0.0\"\n            },\n            \"time\": \"2021-02-03T23:26:27+00:00\"\n        },\n        {\n            \"name\": \"psr/clock\",\n            \"version\": \"1.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/clock.git\",\n                \"reference\": \"e41a24703d4560fd0acb709162f73b8adfc3aa0d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/clock/zipball/e41a24703d4560fd0acb709162f73b8adfc3aa0d\",\n                \"reference\": \"e41a24703d4560fd0acb709162f73b8adfc3aa0d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.0 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Clock\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for reading the clock.\",\n            \"homepage\": \"https://github.com/php-fig/clock\",\n            \"keywords\": [\n                \"clock\",\n                \"now\",\n                \"psr\",\n                \"psr-20\",\n                \"time\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-fig/clock/issues\",\n                \"source\": \"https://github.com/php-fig/clock/tree/1.0.0\"\n            },\n            \"time\": \"2022-11-25T14:36:26+00:00\"\n        },\n        {\n            \"name\": \"psr/container\",\n            \"version\": \"1.1.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/container.git\",\n                \"reference\": \"513e0666f7216c7459170d56df27dfcefe1689ea\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/container/zipball/513e0666f7216c7459170d56df27dfcefe1689ea\",\n                \"reference\": \"513e0666f7216c7459170d56df27dfcefe1689ea\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.4.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Container\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common Container Interface (PHP FIG PSR-11)\",\n            \"homepage\": \"https://github.com/php-fig/container\",\n            \"keywords\": [\n                \"PSR-11\",\n                \"container\",\n                \"container-interface\",\n                \"container-interop\",\n                \"psr\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-fig/container/issues\",\n                \"source\": \"https://github.com/php-fig/container/tree/1.1.2\"\n            },\n            \"time\": \"2021-11-05T16:50:12+00:00\"\n        },\n        {\n            \"name\": \"psr/event-dispatcher\",\n            \"version\": \"1.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/event-dispatcher.git\",\n                \"reference\": \"dbefd12671e8a14ec7f180cab83036ed26714bb0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/event-dispatcher/zipball/dbefd12671e8a14ec7f180cab83036ed26714bb0\",\n                \"reference\": \"dbefd12671e8a14ec7f180cab83036ed26714bb0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\EventDispatcher\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Standard interfaces for event handling.\",\n            \"keywords\": [\n                \"events\",\n                \"psr\",\n                \"psr-14\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-fig/event-dispatcher/issues\",\n                \"source\": \"https://github.com/php-fig/event-dispatcher/tree/1.0.0\"\n            },\n            \"time\": \"2019-01-08T18:20:26+00:00\"\n        },\n        {\n            \"name\": \"psr/http-client\",\n            \"version\": \"1.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-client.git\",\n                \"reference\": \"bb5906edc1c324c9a05aa0873d40117941e5fa90\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-client/zipball/bb5906edc1c324c9a05aa0873d40117941e5fa90\",\n                \"reference\": \"bb5906edc1c324c9a05aa0873d40117941e5fa90\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.0 || ^8.0\",\n                \"psr/http-message\": \"^1.0 || ^2.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Client\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for HTTP clients\",\n            \"homepage\": \"https://github.com/php-fig/http-client\",\n            \"keywords\": [\n                \"http\",\n                \"http-client\",\n                \"psr\",\n                \"psr-18\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-client\"\n            },\n            \"time\": \"2023-09-23T14:17:50+00:00\"\n        },\n        {\n            \"name\": \"psr/http-factory\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-factory.git\",\n                \"reference\": \"2b4765fddfe3b508ac62f829e852b1501d3f6e8a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-factory/zipball/2b4765fddfe3b508ac62f829e852b1501d3f6e8a\",\n                \"reference\": \"2b4765fddfe3b508ac62f829e852b1501d3f6e8a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\",\n                \"psr/http-message\": \"^1.0 || ^2.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Message\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"PSR-17: Common interfaces for PSR-7 HTTP message factories\",\n            \"keywords\": [\n                \"factory\",\n                \"http\",\n                \"message\",\n                \"psr\",\n                \"psr-17\",\n                \"psr-7\",\n                \"request\",\n                \"response\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-factory\"\n            },\n            \"time\": \"2024-04-15T12:06:14+00:00\"\n        },\n        {\n            \"name\": \"psr/http-message\",\n            \"version\": \"1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-message.git\",\n                \"reference\": \"cb6ce4845ce34a8ad9e68117c10ee90a29919eba\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-message/zipball/cb6ce4845ce34a8ad9e68117c10ee90a29919eba\",\n                \"reference\": \"cb6ce4845ce34a8ad9e68117c10ee90a29919eba\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Message\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for HTTP messages\",\n            \"homepage\": \"https://github.com/php-fig/http-message\",\n            \"keywords\": [\n                \"http\",\n                \"http-message\",\n                \"psr\",\n                \"psr-7\",\n                \"request\",\n                \"response\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-message/tree/1.1\"\n            },\n            \"time\": \"2023-04-04T09:50:52+00:00\"\n        },\n        {\n            \"name\": \"psr/log\",\n            \"version\": \"3.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/log.git\",\n                \"reference\": \"f16e1d5863e37f8d8c2a01719f5b34baa2b714d3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/log/zipball/f16e1d5863e37f8d8c2a01719f5b34baa2b714d3\",\n                \"reference\": \"f16e1d5863e37f8d8c2a01719f5b34baa2b714d3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Log\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for logging libraries\",\n            \"homepage\": \"https://github.com/php-fig/log\",\n            \"keywords\": [\n                \"log\",\n                \"psr\",\n                \"psr-3\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/log/tree/3.0.2\"\n            },\n            \"time\": \"2024-09-11T13:17:53+00:00\"\n        },\n        {\n            \"name\": \"psr/simple-cache\",\n            \"version\": \"3.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/simple-cache.git\",\n                \"reference\": \"764e0b3939f5ca87cb904f570ef9be2d78a07865\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/simple-cache/zipball/764e0b3939f5ca87cb904f570ef9be2d78a07865\",\n                \"reference\": \"764e0b3939f5ca87cb904f570ef9be2d78a07865\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\SimpleCache\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interfaces for simple caching\",\n            \"keywords\": [\n                \"cache\",\n                \"caching\",\n                \"psr\",\n                \"psr-16\",\n                \"simple-cache\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/simple-cache/tree/3.0.0\"\n            },\n            \"time\": \"2021-10-29T13:26:27+00:00\"\n        },\n        {\n            \"name\": \"pubnub/pubnub\",\n            \"version\": \"6.3.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/pubnub/php.git\",\n                \"reference\": \"26de0a59dda29f1246378995f96c4f95f6d64980\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/pubnub/php/zipball/26de0a59dda29f1246378995f96c4f95f6d64980\",\n                \"reference\": \"26de0a59dda29f1246378995f96c4f95f6d64980\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.4|>=8.0\",\n                \"psr/log\": \"^1.1|^2.0|^3.0\",\n                \"rmccue/requests\": \"^2.0\"\n            },\n            \"require-dev\": {\n                \"monolog/monolog\": \"^2.9 || ^3.0\",\n                \"phpstan/phpstan\": \"^1.8\",\n                \"phpunit/phpunit\": \"^9.5\",\n                \"squizlabs/php_codesniffer\": \"^3.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PubNub\\\\\": \"src/PubNub\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"proprietary\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PubNub\",\n                    \"email\": \"support@pubnub.com\"\n                }\n            ],\n            \"description\": \"This is the official PubNub PHP SDK repository.\",\n            \"homepage\": \"http://www.pubnub.com/\",\n            \"keywords\": [\n                \"ajax\",\n                \"api\",\n                \"push\",\n                \"real time\",\n                \"real-time\",\n                \"realtime\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/pubnub/php/issues\",\n                \"source\": \"https://github.com/pubnub/php/tree/v6.3.0\"\n            },\n            \"time\": \"2024-06-19T07:31:01+00:00\"\n        },\n        {\n            \"name\": \"ralouphie/getallheaders\",\n            \"version\": \"3.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ralouphie/getallheaders.git\",\n                \"reference\": \"120b605dfeb996808c31b6477290a714d356e822\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ralouphie/getallheaders/zipball/120b605dfeb996808c31b6477290a714d356e822\",\n                \"reference\": \"120b605dfeb996808c31b6477290a714d356e822\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.6\"\n            },\n            \"require-dev\": {\n                \"php-coveralls/php-coveralls\": \"^2.1\",\n                \"phpunit/phpunit\": \"^5 || ^6.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/getallheaders.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ralph Khattar\",\n                    \"email\": \"ralph.khattar@gmail.com\"\n                }\n            ],\n            \"description\": \"A polyfill for getallheaders.\",\n            \"support\": {\n                \"issues\": \"https://github.com/ralouphie/getallheaders/issues\",\n                \"source\": \"https://github.com/ralouphie/getallheaders/tree/develop\"\n            },\n            \"time\": \"2019-03-08T08:55:37+00:00\"\n        },\n        {\n            \"name\": \"ramsey/collection\",\n            \"version\": \"2.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ramsey/collection.git\",\n                \"reference\": \"a4b48764bfbb8f3a6a4d1aeb1a35bb5e9ecac4a5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ramsey/collection/zipball/a4b48764bfbb8f3a6a4d1aeb1a35bb5e9ecac4a5\",\n                \"reference\": \"a4b48764bfbb8f3a6a4d1aeb1a35bb5e9ecac4a5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^8.1\"\n            },\n            \"require-dev\": {\n                \"captainhook/plugin-composer\": \"^5.3\",\n                \"ergebnis/composer-normalize\": \"^2.28.3\",\n                \"fakerphp/faker\": \"^1.21\",\n                \"hamcrest/hamcrest-php\": \"^2.0\",\n                \"jangregor/phpstan-prophecy\": \"^1.0\",\n                \"mockery/mockery\": \"^1.5\",\n                \"php-parallel-lint/php-console-highlighter\": \"^1.0\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.3\",\n                \"phpcsstandards/phpcsutils\": \"^1.0.0-rc1\",\n                \"phpspec/prophecy-phpunit\": \"^2.0\",\n                \"phpstan/extension-installer\": \"^1.2\",\n                \"phpstan/phpstan\": \"^1.9\",\n                \"phpstan/phpstan-mockery\": \"^1.1\",\n                \"phpstan/phpstan-phpunit\": \"^1.3\",\n                \"phpunit/phpunit\": \"^9.5\",\n                \"psalm/plugin-mockery\": \"^1.1\",\n                \"psalm/plugin-phpunit\": \"^0.18.4\",\n                \"ramsey/coding-standard\": \"^2.0.3\",\n                \"ramsey/conventional-commits\": \"^1.3\",\n                \"vimeo/psalm\": \"^5.4\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"captainhook\": {\n                    \"force-install\": true\n                },\n                \"ramsey/conventional-commits\": {\n                    \"configFile\": \"conventional-commits.json\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Ramsey\\\\Collection\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ben Ramsey\",\n                    \"email\": \"ben@benramsey.com\",\n                    \"homepage\": \"https://benramsey.com\"\n                }\n            ],\n            \"description\": \"A PHP library for representing and manipulating collections.\",\n            \"keywords\": [\n                \"array\",\n                \"collection\",\n                \"hash\",\n                \"map\",\n                \"queue\",\n                \"set\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/ramsey/collection/issues\",\n                \"source\": \"https://github.com/ramsey/collection/tree/2.0.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/ramsey\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/ramsey/collection\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-12-31T21:50:55+00:00\"\n        },\n        {\n            \"name\": \"ramsey/uuid\",\n            \"version\": \"4.7.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ramsey/uuid.git\",\n                \"reference\": \"91039bc1faa45ba123c4328958e620d382ec7088\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ramsey/uuid/zipball/91039bc1faa45ba123c4328958e620d382ec7088\",\n                \"reference\": \"91039bc1faa45ba123c4328958e620d382ec7088\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"brick/math\": \"^0.8.8 || ^0.9 || ^0.10 || ^0.11 || ^0.12\",\n                \"ext-json\": \"*\",\n                \"php\": \"^8.0\",\n                \"ramsey/collection\": \"^1.2 || ^2.0\"\n            },\n            \"replace\": {\n                \"rhumsaa/uuid\": \"self.version\"\n            },\n            \"require-dev\": {\n                \"captainhook/captainhook\": \"^5.10\",\n                \"captainhook/plugin-composer\": \"^5.3\",\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"^0.7.0\",\n                \"doctrine/annotations\": \"^1.8\",\n                \"ergebnis/composer-normalize\": \"^2.15\",\n                \"mockery/mockery\": \"^1.3\",\n                \"paragonie/random-lib\": \"^2\",\n                \"php-mock/php-mock\": \"^2.2\",\n                \"php-mock/php-mock-mockery\": \"^1.3\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.1\",\n                \"phpbench/phpbench\": \"^1.0\",\n                \"phpstan/extension-installer\": \"^1.1\",\n                \"phpstan/phpstan\": \"^1.8\",\n                \"phpstan/phpstan-mockery\": \"^1.1\",\n                \"phpstan/phpstan-phpunit\": \"^1.1\",\n                \"phpunit/phpunit\": \"^8.5 || ^9\",\n                \"ramsey/composer-repl\": \"^1.4\",\n                \"slevomat/coding-standard\": \"^8.4\",\n                \"squizlabs/php_codesniffer\": \"^3.5\",\n                \"vimeo/psalm\": \"^4.9\"\n            },\n            \"suggest\": {\n                \"ext-bcmath\": \"Enables faster math with arbitrary-precision integers using BCMath.\",\n                \"ext-gmp\": \"Enables faster math with arbitrary-precision integers using GMP.\",\n                \"ext-uuid\": \"Enables the use of PeclUuidTimeGenerator and PeclUuidRandomGenerator.\",\n                \"paragonie/random-lib\": \"Provides RandomLib for use with the RandomLibAdapter\",\n                \"ramsey/uuid-doctrine\": \"Allows the use of Ramsey\\\\Uuid\\\\Uuid as Doctrine field type.\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"captainhook\": {\n                    \"force-install\": true\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/functions.php\"\n                ],\n                \"psr-4\": {\n                    \"Ramsey\\\\Uuid\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"A PHP library for generating and working with universally unique identifiers (UUIDs).\",\n            \"keywords\": [\n                \"guid\",\n                \"identifier\",\n                \"uuid\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/ramsey/uuid/issues\",\n                \"source\": \"https://github.com/ramsey/uuid/tree/4.7.6\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/ramsey\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/ramsey/uuid\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-04-27T21:32:50+00:00\"\n        },\n        {\n            \"name\": \"ratchet/pawl\",\n            \"version\": \"v0.4.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ratchetphp/Pawl.git\",\n                \"reference\": \"af70198bab77a582b31169d3cc3982bed25c161f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ratchetphp/Pawl/zipball/af70198bab77a582b31169d3cc3982bed25c161f\",\n                \"reference\": \"af70198bab77a582b31169d3cc3982bed25c161f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"evenement/evenement\": \"^3.0 || ^2.0\",\n                \"guzzlehttp/psr7\": \"^2.0 || ^1.7\",\n                \"php\": \">=5.4\",\n                \"ratchet/rfc6455\": \"^0.3.1\",\n                \"react/socket\": \"^1.9\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3 || ^5.7 || ^4.8\"\n            },\n            \"suggest\": {\n                \"reactivex/rxphp\": \"~2.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/functions_include.php\"\n                ],\n                \"psr-4\": {\n                    \"Ratchet\\\\Client\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"Asynchronous WebSocket client\",\n            \"keywords\": [\n                \"Ratchet\",\n                \"async\",\n                \"client\",\n                \"websocket\",\n                \"websocket client\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/ratchetphp/Pawl/issues\",\n                \"source\": \"https://github.com/ratchetphp/Pawl/tree/v0.4.1\"\n            },\n            \"time\": \"2021-12-10T14:32:34+00:00\"\n        },\n        {\n            \"name\": \"ratchet/rfc6455\",\n            \"version\": \"v0.3.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ratchetphp/RFC6455.git\",\n                \"reference\": \"7c964514e93456a52a99a20fcfa0de242a43ccdb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ratchetphp/RFC6455/zipball/7c964514e93456a52a99a20fcfa0de242a43ccdb\",\n                \"reference\": \"7c964514e93456a52a99a20fcfa0de242a43ccdb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"guzzlehttp/psr7\": \"^2 || ^1.7\",\n                \"php\": \">=5.4.2\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^5.7\",\n                \"react/socket\": \"^1.3\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Ratchet\\\\RFC6455\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Chris Boden\",\n                    \"email\": \"cboden@gmail.com\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Matt Bonneau\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"RFC6455 WebSocket protocol handler\",\n            \"homepage\": \"http://socketo.me\",\n            \"keywords\": [\n                \"WebSockets\",\n                \"rfc6455\",\n                \"websocket\"\n            ],\n            \"support\": {\n                \"chat\": \"https://gitter.im/reactphp/reactphp\",\n                \"issues\": \"https://github.com/ratchetphp/RFC6455/issues\",\n                \"source\": \"https://github.com/ratchetphp/RFC6455/tree/v0.3.1\"\n            },\n            \"time\": \"2021-12-09T23:20:49+00:00\"\n        },\n        {\n            \"name\": \"react/cache\",\n            \"version\": \"v1.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/reactphp/cache.git\",\n                \"reference\": \"d47c472b64aa5608225f47965a484b75c7817d5b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/reactphp/cache/zipball/d47c472b64aa5608225f47965a484b75c7817d5b\",\n                \"reference\": \"d47c472b64aa5608225f47965a484b75c7817d5b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\",\n                \"react/promise\": \"^3.0 || ^2.0 || ^1.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.5 || ^5.7 || ^4.8.35\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"React\\\\Cache\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Christian Lück\",\n                    \"email\": \"christian@clue.engineering\",\n                    \"homepage\": \"https://clue.engineering/\"\n                },\n                {\n                    \"name\": \"Cees-Jan Kiewiet\",\n                    \"email\": \"reactphp@ceesjankiewiet.nl\",\n                    \"homepage\": \"https://wyrihaximus.net/\"\n                },\n                {\n                    \"name\": \"Jan Sorgalla\",\n                    \"email\": \"jsorgalla@gmail.com\",\n                    \"homepage\": \"https://sorgalla.com/\"\n                },\n                {\n                    \"name\": \"Chris Boden\",\n                    \"email\": \"cboden@gmail.com\",\n                    \"homepage\": \"https://cboden.dev/\"\n                }\n            ],\n            \"description\": \"Async, Promise-based cache interface for ReactPHP\",\n            \"keywords\": [\n                \"cache\",\n                \"caching\",\n                \"promise\",\n                \"reactphp\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/reactphp/cache/issues\",\n                \"source\": \"https://github.com/reactphp/cache/tree/v1.2.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://opencollective.com/reactphp\",\n                    \"type\": \"open_collective\"\n                }\n            ],\n            \"time\": \"2022-11-30T15:59:55+00:00\"\n        },\n        {\n            \"name\": \"react/dns\",\n            \"version\": \"v1.13.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/reactphp/dns.git\",\n                \"reference\": \"eb8ae001b5a455665c89c1df97f6fb682f8fb0f5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/reactphp/dns/zipball/eb8ae001b5a455665c89c1df97f6fb682f8fb0f5\",\n                \"reference\": \"eb8ae001b5a455665c89c1df97f6fb682f8fb0f5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\",\n                \"react/cache\": \"^1.0 || ^0.6 || ^0.5\",\n                \"react/event-loop\": \"^1.2\",\n                \"react/promise\": \"^3.2 || ^2.7 || ^1.2.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.6 || ^5.7 || ^4.8.36\",\n                \"react/async\": \"^4.3 || ^3 || ^2\",\n                \"react/promise-timer\": \"^1.11\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"React\\\\Dns\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Christian Lück\",\n                    \"email\": \"christian@clue.engineering\",\n                    \"homepage\": \"https://clue.engineering/\"\n                },\n                {\n                    \"name\": \"Cees-Jan Kiewiet\",\n                    \"email\": \"reactphp@ceesjankiewiet.nl\",\n                    \"homepage\": \"https://wyrihaximus.net/\"\n                },\n                {\n                    \"name\": \"Jan Sorgalla\",\n                    \"email\": \"jsorgalla@gmail.com\",\n                    \"homepage\": \"https://sorgalla.com/\"\n                },\n                {\n                    \"name\": \"Chris Boden\",\n                    \"email\": \"cboden@gmail.com\",\n                    \"homepage\": \"https://cboden.dev/\"\n                }\n            ],\n            \"description\": \"Async DNS resolver for ReactPHP\",\n            \"keywords\": [\n                \"async\",\n                \"dns\",\n                \"dns-resolver\",\n                \"reactphp\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/reactphp/dns/issues\",\n                \"source\": \"https://github.com/reactphp/dns/tree/v1.13.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://opencollective.com/reactphp\",\n                    \"type\": \"open_collective\"\n                }\n            ],\n            \"time\": \"2024-06-13T14:18:03+00:00\"\n        },\n        {\n            \"name\": \"react/event-loop\",\n            \"version\": \"v1.5.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/reactphp/event-loop.git\",\n                \"reference\": \"bbe0bd8c51ffc05ee43f1729087ed3bdf7d53354\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/reactphp/event-loop/zipball/bbe0bd8c51ffc05ee43f1729087ed3bdf7d53354\",\n                \"reference\": \"bbe0bd8c51ffc05ee43f1729087ed3bdf7d53354\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.6 || ^5.7 || ^4.8.36\"\n            },\n            \"suggest\": {\n                \"ext-pcntl\": \"For signal handling support when using the StreamSelectLoop\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"React\\\\EventLoop\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Christian Lück\",\n                    \"email\": \"christian@clue.engineering\",\n                    \"homepage\": \"https://clue.engineering/\"\n                },\n                {\n                    \"name\": \"Cees-Jan Kiewiet\",\n                    \"email\": \"reactphp@ceesjankiewiet.nl\",\n                    \"homepage\": \"https://wyrihaximus.net/\"\n                },\n                {\n                    \"name\": \"Jan Sorgalla\",\n                    \"email\": \"jsorgalla@gmail.com\",\n                    \"homepage\": \"https://sorgalla.com/\"\n                },\n                {\n                    \"name\": \"Chris Boden\",\n                    \"email\": \"cboden@gmail.com\",\n                    \"homepage\": \"https://cboden.dev/\"\n                }\n            ],\n            \"description\": \"ReactPHP's core reactor event loop that libraries can use for evented I/O.\",\n            \"keywords\": [\n                \"asynchronous\",\n                \"event-loop\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/reactphp/event-loop/issues\",\n                \"source\": \"https://github.com/reactphp/event-loop/tree/v1.5.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://opencollective.com/reactphp\",\n                    \"type\": \"open_collective\"\n                }\n            ],\n            \"time\": \"2023-11-13T13:48:05+00:00\"\n        },\n        {\n            \"name\": \"react/promise\",\n            \"version\": \"v3.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/reactphp/promise.git\",\n                \"reference\": \"8a164643313c71354582dc850b42b33fa12a4b63\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/reactphp/promise/zipball/8a164643313c71354582dc850b42b33fa12a4b63\",\n                \"reference\": \"8a164643313c71354582dc850b42b33fa12a4b63\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1.0\"\n            },\n            \"require-dev\": {\n                \"phpstan/phpstan\": \"1.10.39 || 1.4.10\",\n                \"phpunit/phpunit\": \"^9.6 || ^7.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/functions_include.php\"\n                ],\n                \"psr-4\": {\n                    \"React\\\\Promise\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jan Sorgalla\",\n                    \"email\": \"jsorgalla@gmail.com\",\n                    \"homepage\": \"https://sorgalla.com/\"\n                },\n                {\n                    \"name\": \"Christian Lück\",\n                    \"email\": \"christian@clue.engineering\",\n                    \"homepage\": \"https://clue.engineering/\"\n                },\n                {\n                    \"name\": \"Cees-Jan Kiewiet\",\n                    \"email\": \"reactphp@ceesjankiewiet.nl\",\n                    \"homepage\": \"https://wyrihaximus.net/\"\n                },\n                {\n                    \"name\": \"Chris Boden\",\n                    \"email\": \"cboden@gmail.com\",\n                    \"homepage\": \"https://cboden.dev/\"\n                }\n            ],\n            \"description\": \"A lightweight implementation of CommonJS Promises/A for PHP\",\n            \"keywords\": [\n                \"promise\",\n                \"promises\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/reactphp/promise/issues\",\n                \"source\": \"https://github.com/reactphp/promise/tree/v3.2.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://opencollective.com/reactphp\",\n                    \"type\": \"open_collective\"\n                }\n            ],\n            \"time\": \"2024-05-24T10:39:05+00:00\"\n        },\n        {\n            \"name\": \"react/socket\",\n            \"version\": \"v1.16.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/reactphp/socket.git\",\n                \"reference\": \"23e4ff33ea3e160d2d1f59a0e6050e4b0fb0eac1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/reactphp/socket/zipball/23e4ff33ea3e160d2d1f59a0e6050e4b0fb0eac1\",\n                \"reference\": \"23e4ff33ea3e160d2d1f59a0e6050e4b0fb0eac1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"evenement/evenement\": \"^3.0 || ^2.0 || ^1.0\",\n                \"php\": \">=5.3.0\",\n                \"react/dns\": \"^1.13\",\n                \"react/event-loop\": \"^1.2\",\n                \"react/promise\": \"^3.2 || ^2.6 || ^1.2.1\",\n                \"react/stream\": \"^1.4\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.6 || ^5.7 || ^4.8.36\",\n                \"react/async\": \"^4.3 || ^3.3 || ^2\",\n                \"react/promise-stream\": \"^1.4\",\n                \"react/promise-timer\": \"^1.11\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"React\\\\Socket\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Christian Lück\",\n                    \"email\": \"christian@clue.engineering\",\n                    \"homepage\": \"https://clue.engineering/\"\n                },\n                {\n                    \"name\": \"Cees-Jan Kiewiet\",\n                    \"email\": \"reactphp@ceesjankiewiet.nl\",\n                    \"homepage\": \"https://wyrihaximus.net/\"\n                },\n                {\n                    \"name\": \"Jan Sorgalla\",\n                    \"email\": \"jsorgalla@gmail.com\",\n                    \"homepage\": \"https://sorgalla.com/\"\n                },\n                {\n                    \"name\": \"Chris Boden\",\n                    \"email\": \"cboden@gmail.com\",\n                    \"homepage\": \"https://cboden.dev/\"\n                }\n            ],\n            \"description\": \"Async, streaming plaintext TCP/IP and secure TLS socket server and client connections for ReactPHP\",\n            \"keywords\": [\n                \"Connection\",\n                \"Socket\",\n                \"async\",\n                \"reactphp\",\n                \"stream\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/reactphp/socket/issues\",\n                \"source\": \"https://github.com/reactphp/socket/tree/v1.16.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://opencollective.com/reactphp\",\n                    \"type\": \"open_collective\"\n                }\n            ],\n            \"time\": \"2024-07-26T10:38:09+00:00\"\n        },\n        {\n            \"name\": \"react/stream\",\n            \"version\": \"v1.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/reactphp/stream.git\",\n                \"reference\": \"1e5b0acb8fe55143b5b426817155190eb6f5b18d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/reactphp/stream/zipball/1e5b0acb8fe55143b5b426817155190eb6f5b18d\",\n                \"reference\": \"1e5b0acb8fe55143b5b426817155190eb6f5b18d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"evenement/evenement\": \"^3.0 || ^2.0 || ^1.0\",\n                \"php\": \">=5.3.8\",\n                \"react/event-loop\": \"^1.2\"\n            },\n            \"require-dev\": {\n                \"clue/stream-filter\": \"~1.2\",\n                \"phpunit/phpunit\": \"^9.6 || ^5.7 || ^4.8.36\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"React\\\\Stream\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Christian Lück\",\n                    \"email\": \"christian@clue.engineering\",\n                    \"homepage\": \"https://clue.engineering/\"\n                },\n                {\n                    \"name\": \"Cees-Jan Kiewiet\",\n                    \"email\": \"reactphp@ceesjankiewiet.nl\",\n                    \"homepage\": \"https://wyrihaximus.net/\"\n                },\n                {\n                    \"name\": \"Jan Sorgalla\",\n                    \"email\": \"jsorgalla@gmail.com\",\n                    \"homepage\": \"https://sorgalla.com/\"\n                },\n                {\n                    \"name\": \"Chris Boden\",\n                    \"email\": \"cboden@gmail.com\",\n                    \"homepage\": \"https://cboden.dev/\"\n                }\n            ],\n            \"description\": \"Event-driven readable and writable streams for non-blocking I/O in ReactPHP\",\n            \"keywords\": [\n                \"event-driven\",\n                \"io\",\n                \"non-blocking\",\n                \"pipe\",\n                \"reactphp\",\n                \"readable\",\n                \"stream\",\n                \"writable\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/reactphp/stream/issues\",\n                \"source\": \"https://github.com/reactphp/stream/tree/v1.4.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://opencollective.com/reactphp\",\n                    \"type\": \"open_collective\"\n                }\n            ],\n            \"time\": \"2024-06-11T12:45:25+00:00\"\n        },\n        {\n            \"name\": \"ringcentral/ringcentral-php\",\n            \"version\": \"3.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ringcentral/ringcentral-php.git\",\n                \"reference\": \"856f9f637485e9d422a1ef431d65be7612ae6609\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ringcentral/ringcentral-php/zipball/856f9f637485e9d422a1ef431d65be7612ae6609\",\n                \"reference\": \"856f9f637485e9d422a1ef431d65be7612ae6609\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-curl\": \"*\",\n                \"ext-json\": \"*\",\n                \"guzzlehttp/guzzle\": \"^6.3.3|^7.4.1\",\n                \"guzzlehttp/psr7\": \"^2.1.0\",\n                \"php\": \">=7.2\",\n                \"pubnub/pubnub\": \"^4.7.0|^6.0\",\n                \"ratchet/pawl\": \"^0.4.1\",\n                \"symfony/event-dispatcher\": \"^2|^3|^4|^5|^6\"\n            },\n            \"require-dev\": {\n                \"macfja/phar-builder\": \"^0.2.8\",\n                \"php-coveralls/php-coveralls\": \"^2.1\",\n                \"phpunit/phpunit\": \"^7.5.12|^8.0|^9.0\",\n                \"react/async\": \"^3.0\"\n            },\n            \"suggest\": {\n                \"ext-openssl\": \"to decrypt PubNub messages\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"phar-builder\": {\n                    \"name\": \"ringcentral.phar\",\n                    \"include\": [],\n                    \"excluded\": [\n                        \"vendor/bin\"\n                    ],\n                    \"output-dir\": \"./dist\",\n                    \"compression\": \"gzip\",\n                    \"entry-point\": \"./vendor/autoload.php\",\n                    \"include-dev\": false,\n                    \"skip-shebang\": true\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"RingCentral\\\\SDK\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Kirill Konshin\",\n                    \"email\": \"kirill.konshin@ringcentral.com\"\n                },\n                {\n                    \"name\": \"Byrne Reese\",\n                    \"email\": \"byrne.reese@ringcentral.com\"\n                }\n            ],\n            \"description\": \"RingCentral Platform PHP SDK\",\n            \"homepage\": \"http://developers.ringcentral.com\",\n            \"keywords\": [\n                \"api\",\n                \"connect\",\n                \"php\",\n                \"platform\",\n                \"ringcentral\",\n                \"sdk\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/ringcentral/ringcentral-php/issues\",\n                \"source\": \"https://github.com/ringcentral/ringcentral-php/tree/3.0.3\"\n            },\n            \"time\": \"2024-08-06T04:05:37+00:00\"\n        },\n        {\n            \"name\": \"rmccue/requests\",\n            \"version\": \"v2.0.14\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/WordPress/Requests.git\",\n                \"reference\": \"9b228eef149e1752b037bf79cef4ca73a7b1fea1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/WordPress/Requests/zipball/9b228eef149e1752b037bf79cef4ca73a7b1fea1\",\n                \"reference\": \"9b228eef149e1752b037bf79cef4ca73a7b1fea1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"php\": \">=5.6\"\n            },\n            \"require-dev\": {\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"^0.7\",\n                \"php-parallel-lint/php-console-highlighter\": \"^0.5.0\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.3.1\",\n                \"phpcompatibility/php-compatibility\": \"^9.0\",\n                \"requests/test-server\": \"dev-main\",\n                \"roave/security-advisories\": \"dev-latest\",\n                \"squizlabs/php_codesniffer\": \"^3.6\",\n                \"wp-coding-standards/wpcs\": \"^2.0\",\n                \"yoast/phpunit-polyfills\": \"^1.0.0\"\n            },\n            \"suggest\": {\n                \"art4/requests-psr18-adapter\": \"For using Requests as a PSR-18 HTTP Client\",\n                \"ext-curl\": \"For improved performance\",\n                \"ext-openssl\": \"For secure transport support\",\n                \"ext-zlib\": \"For improved performance when decompressing encoded streams\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"library/Deprecated.php\"\n                ],\n                \"psr-4\": {\n                    \"WpOrg\\\\Requests\\\\\": \"src/\"\n                },\n                \"classmap\": [\n                    \"library/Requests.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"ISC\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ryan McCue\",\n                    \"homepage\": \"https://rmccue.io/\"\n                },\n                {\n                    \"name\": \"Alain Schlesser\",\n                    \"homepage\": \"https://github.com/schlessera\"\n                },\n                {\n                    \"name\": \"Juliette Reinders Folmer\",\n                    \"homepage\": \"https://github.com/jrfnl\"\n                },\n                {\n                    \"name\": \"Contributors\",\n                    \"homepage\": \"https://github.com/WordPress/Requests/graphs/contributors\"\n                }\n            ],\n            \"description\": \"A HTTP library written in PHP, for human beings.\",\n            \"homepage\": \"https://requests.ryanmccue.info/\",\n            \"keywords\": [\n                \"curl\",\n                \"fsockopen\",\n                \"http\",\n                \"idna\",\n                \"ipv6\",\n                \"iri\",\n                \"sockets\"\n            ],\n            \"support\": {\n                \"docs\": \"https://requests.ryanmccue.info/\",\n                \"issues\": \"https://github.com/WordPress/Requests/issues\",\n                \"source\": \"https://github.com/WordPress/Requests\"\n            },\n            \"time\": \"2024-12-11T09:46:32+00:00\"\n        },\n        {\n            \"name\": \"robthree/twofactorauth\",\n            \"version\": \"v2.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/RobThree/TwoFactorAuth.git\",\n                \"reference\": \"ab93dd41ced7818ecda83a37c2741ee38bb72fb7\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/RobThree/TwoFactorAuth/zipball/ab93dd41ced7818ecda83a37c2741ee38bb72fb7\",\n                \"reference\": \"ab93dd41ced7818ecda83a37c2741ee38bb72fb7\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1.0\"\n            },\n            \"require-dev\": {\n                \"friendsofphp/php-cs-fixer\": \"^3.13\",\n                \"phpstan/phpstan\": \"^1.9\",\n                \"phpunit/phpunit\": \"^9\"\n            },\n            \"suggest\": {\n                \"bacon/bacon-qr-code\": \"Needed for BaconQrCodeProvider provider\",\n                \"endroid/qr-code\": \"Needed for EndroidQrCodeProvider\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"RobThree\\\\Auth\\\\\": \"lib\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Rob Janssen\",\n                    \"homepage\": \"http://robiii.me\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Nicolas CARPi\",\n                    \"homepage\": \"https://github.com/NicolasCARPi\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Will Power\",\n                    \"homepage\": \"https://github.com/willpower232\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Two Factor Authentication\",\n            \"homepage\": \"https://github.com/RobThree/TwoFactorAuth\",\n            \"keywords\": [\n                \"Authentication\",\n                \"MFA\",\n                \"Multi Factor Authentication\",\n                \"Two Factor Authentication\",\n                \"authenticator\",\n                \"authy\",\n                \"php\",\n                \"tfa\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/RobThree/TwoFactorAuth/issues\",\n                \"source\": \"https://github.com/RobThree/TwoFactorAuth\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://paypal.me/robiii\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/RobThree\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-11-14T12:50:27+00:00\"\n        },\n        {\n            \"name\": \"rospdf/pdf-php\",\n            \"version\": \"0.12.67\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/rospdf/pdf-php.git\",\n                \"reference\": \"fce993f08f99305569bb238644c5c35c0db0f85a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/rospdf/pdf-php/zipball/fce993f08f99305569bb238644c5c35c0db0f85a\",\n                \"reference\": \"fce993f08f99305569bb238644c5c35c0db0f85a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.6.0\"\n            },\n            \"require-dev\": {\n                \"phpcompatibility/php-compatibility\": \"^9.3\",\n                \"phpunit/phpunit\": \"^9.5\",\n                \"squizlabs/php_codesniffer\": \"^3.7\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"0.12.x-dev\",\n                    \"dev-experimental\": \"0.13.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/Cpdf.php\",\n                    \"src/Cezpdf.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ole Koeckemann\",\n                    \"email\": \"ole.k@web.de\",\n                    \"role\": \"Project Head / Developer\"\n                },\n                {\n                    \"name\": \"Lars Olesen\",\n                    \"email\": \"lars@intraface.dk\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sune Jensen\",\n                    \"email\": \"sj@sunet.dk\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Nicola Asuni\",\n                    \"email\": \"info@tecnick.com\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Wayne Munro\",\n                    \"email\": \"pdf@ros.co.nz\",\n                    \"role\": \"Founder / Inactive\"\n                }\n            ],\n            \"description\": \"The R&OS Pdf class supports the creation of PDF documents without any adiditional modules or extensions.\",\n            \"homepage\": \"https://github.com/rospdf/pdf-php\",\n            \"support\": {\n                \"issues\": \"https://github.com/rospdf/pdf-php/issues\",\n                \"source\": \"https://github.com/rospdf/pdf-php/tree/0.12.67\"\n            },\n            \"time\": \"2023-04-20T20:52:13+00:00\"\n        },\n        {\n            \"name\": \"sabberworm/php-css-parser\",\n            \"version\": \"v8.7.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/MyIntervals/PHP-CSS-Parser.git\",\n                \"reference\": \"f414ff953002a9b18e3a116f5e462c56f21237cf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/MyIntervals/PHP-CSS-Parser/zipball/f414ff953002a9b18e3a116f5e462c56f21237cf\",\n                \"reference\": \"f414ff953002a9b18e3a116f5e462c56f21237cf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-iconv\": \"*\",\n                \"php\": \"^5.6.20 || ^7.0.0 || ~8.0.0 || ~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"5.7.27 || 6.5.14 || 7.5.20 || 8.5.40\"\n            },\n            \"suggest\": {\n                \"ext-mbstring\": \"for parsing UTF-8 CSS\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"9.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Sabberworm\\\\CSS\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Raphael Schweikert\"\n                },\n                {\n                    \"name\": \"Oliver Klee\",\n                    \"email\": \"github@oliverklee.de\"\n                },\n                {\n                    \"name\": \"Jake Hotson\",\n                    \"email\": \"jake.github@qzdesign.co.uk\"\n                }\n            ],\n            \"description\": \"Parser for CSS Files written in PHP\",\n            \"homepage\": \"https://www.sabberworm.com/blog/2010/6/10/php-css-parser\",\n            \"keywords\": [\n                \"css\",\n                \"parser\",\n                \"stylesheet\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/MyIntervals/PHP-CSS-Parser/issues\",\n                \"source\": \"https://github.com/MyIntervals/PHP-CSS-Parser/tree/v8.7.0\"\n            },\n            \"time\": \"2024-10-27T17:38:32+00:00\"\n        },\n        {\n            \"name\": \"setasign/fpdi\",\n            \"version\": \"v2.6.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Setasign/FPDI.git\",\n                \"reference\": \"9e013b376939c0d4029f54150d2a16f3c67a5797\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Setasign/FPDI/zipball/9e013b376939c0d4029f54150d2a16f3c67a5797\",\n                \"reference\": \"9e013b376939c0d4029f54150d2a16f3c67a5797\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-zlib\": \"*\",\n                \"php\": \"^5.6 || ^7.0 || ^8.0\"\n            },\n            \"conflict\": {\n                \"setasign/tfpdf\": \"<1.31\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"~5.7\",\n                \"setasign/fpdf\": \"~1.8.6\",\n                \"setasign/tfpdf\": \"~1.33\",\n                \"squizlabs/php_codesniffer\": \"^3.5\",\n                \"tecnickcom/tcpdf\": \"~6.2\"\n            },\n            \"suggest\": {\n                \"setasign/fpdf\": \"FPDI will extend this class but as it is also possible to use TCPDF or tFPDF as an alternative. There's no fixed dependency configured.\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"setasign\\\\Fpdi\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jan Slabon\",\n                    \"email\": \"jan.slabon@setasign.com\",\n                    \"homepage\": \"https://www.setasign.com\"\n                },\n                {\n                    \"name\": \"Maximilian Kresse\",\n                    \"email\": \"maximilian.kresse@setasign.com\",\n                    \"homepage\": \"https://www.setasign.com\"\n                }\n            ],\n            \"description\": \"FPDI is a collection of PHP classes facilitating developers to read pages from existing PDF documents and use them as templates in FPDF. Because it is also possible to use FPDI with TCPDF, there are no fixed dependencies defined. Please see suggestions for packages which evaluates the dependencies automatically.\",\n            \"homepage\": \"https://www.setasign.com/fpdi\",\n            \"keywords\": [\n                \"fpdf\",\n                \"fpdi\",\n                \"pdf\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/Setasign/FPDI/issues\",\n                \"source\": \"https://github.com/Setasign/FPDI/tree/v2.6.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/setasign/fpdi\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-12-10T13:12:19+00:00\"\n        },\n        {\n            \"name\": \"smarty/smarty\",\n            \"version\": \"v4.5.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/smarty-php/smarty.git\",\n                \"reference\": \"c4851c12e34ff80073ddeb7d98b059d57dea9de2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/smarty-php/smarty/zipball/c4851c12e34ff80073ddeb7d98b059d57dea9de2\",\n                \"reference\": \"c4851c12e34ff80073ddeb7d98b059d57dea9de2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5 || ^7.5\",\n                \"smarty/smarty-lexer\": \"^3.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"libs/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-3.0\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Monte Ohrt\",\n                    \"email\": \"monte@ohrt.com\"\n                },\n                {\n                    \"name\": \"Uwe Tews\",\n                    \"email\": \"uwe.tews@googlemail.com\"\n                },\n                {\n                    \"name\": \"Rodney Rehm\",\n                    \"email\": \"rodney.rehm@medialize.de\"\n                },\n                {\n                    \"name\": \"Simon Wisselink\",\n                    \"homepage\": \"https://www.iwink.nl/\"\n                }\n            ],\n            \"description\": \"Smarty - the compiling PHP template engine\",\n            \"homepage\": \"https://smarty-php.github.io/smarty/\",\n            \"keywords\": [\n                \"templating\"\n            ],\n            \"support\": {\n                \"forum\": \"https://github.com/smarty-php/smarty/discussions\",\n                \"issues\": \"https://github.com/smarty-php/smarty/issues\",\n                \"source\": \"https://github.com/smarty-php/smarty/tree/v4.5.5\"\n            },\n            \"time\": \"2024-11-21T22:06:22+00:00\"\n        },\n        {\n            \"name\": \"stella-maris/clock\",\n            \"version\": \"0.1.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/stella-maris-solutions/clock.git\",\n                \"reference\": \"fa23ce16019289a18bb3446fdecd45befcdd94f8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/stella-maris-solutions/clock/zipball/fa23ce16019289a18bb3446fdecd45befcdd94f8\",\n                \"reference\": \"fa23ce16019289a18bb3446fdecd45befcdd94f8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.0|^8.0\",\n                \"psr/clock\": \"^1.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"StellaMaris\\\\Clock\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Andreas Heigl\",\n                    \"role\": \"Maintainer\"\n                }\n            ],\n            \"description\": \"A pre-release of the proposed PSR-20 Clock-Interface\",\n            \"homepage\": \"https://gitlab.com/stella-maris/clock\",\n            \"keywords\": [\n                \"clock\",\n                \"datetime\",\n                \"point in time\",\n                \"psr20\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/stella-maris-solutions/clock/tree/0.1.7\"\n            },\n            \"time\": \"2022-11-25T16:15:06+00:00\"\n        },\n        {\n            \"name\": \"steverhoades/oauth2-openid-connect-server\",\n            \"version\": \"v2.6.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/steverhoades/oauth2-openid-connect-server.git\",\n                \"reference\": \"269c4dc071519e8220e249cbdee9b0723e95215e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/steverhoades/oauth2-openid-connect-server/zipball/269c4dc071519e8220e249cbdee9b0723e95215e\",\n                \"reference\": \"269c4dc071519e8220e249cbdee9b0723e95215e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"lcobucci/jwt\": \"4.1.5|^4.2|^4.3|^5.0\",\n                \"league/oauth2-server\": \"^5.1|^6.0|^7.0|^8.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-diactoros\": \"^1.3.2\",\n                \"phpunit/phpunit\": \"^5.0|^9.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"OpenIDConnectServer\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Steve Rhoades\",\n                    \"email\": \"sedonami@gmail.com\"\n                }\n            ],\n            \"description\": \"An OpenID Connect Server that sites on The PHP League's OAuth2 Server\",\n            \"support\": {\n                \"issues\": \"https://github.com/steverhoades/oauth2-openid-connect-server/issues\",\n                \"source\": \"https://github.com/steverhoades/oauth2-openid-connect-server/tree/v2.6.1\"\n            },\n            \"time\": \"2023-09-08T16:15:47+00:00\"\n        },\n        {\n            \"name\": \"stripe/stripe-php\",\n            \"version\": \"v15.10.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/stripe/stripe-php.git\",\n                \"reference\": \"3df1a19a33477af9ead8984dbd84e8f637c36199\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/stripe/stripe-php/zipball/3df1a19a33477af9ead8984dbd84e8f637c36199\",\n                \"reference\": \"3df1a19a33477af9ead8984dbd84e8f637c36199\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-curl\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"php\": \">=5.6.0\"\n            },\n            \"require-dev\": {\n                \"friendsofphp/php-cs-fixer\": \"3.5.0\",\n                \"phpstan/phpstan\": \"^1.2\",\n                \"phpunit/phpunit\": \"^5.7 || ^9.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Stripe\\\\\": \"lib/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Stripe and contributors\",\n                    \"homepage\": \"https://github.com/stripe/stripe-php/contributors\"\n                }\n            ],\n            \"description\": \"Stripe PHP Library\",\n            \"homepage\": \"https://stripe.com/\",\n            \"keywords\": [\n                \"api\",\n                \"payment processing\",\n                \"stripe\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/stripe/stripe-php/issues\",\n                \"source\": \"https://github.com/stripe/stripe-php/tree/v15.10.0\"\n            },\n            \"time\": \"2024-09-18T18:38:30+00:00\"\n        },\n        {\n            \"name\": \"symfony/config\",\n            \"version\": \"v6.4.14\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/config.git\",\n                \"reference\": \"4e55e7e4ffddd343671ea972216d4509f46c22ef\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/config/zipball/4e55e7e4ffddd343671ea972216d4509f46c22ef\",\n                \"reference\": \"4e55e7e4ffddd343671ea972216d4509f46c22ef\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"symfony/deprecation-contracts\": \"^2.5|^3\",\n                \"symfony/filesystem\": \"^5.4|^6.0|^7.0\",\n                \"symfony/polyfill-ctype\": \"~1.8\"\n            },\n            \"conflict\": {\n                \"symfony/finder\": \"<5.4\",\n                \"symfony/service-contracts\": \"<2.5\"\n            },\n            \"require-dev\": {\n                \"symfony/event-dispatcher\": \"^5.4|^6.0|^7.0\",\n                \"symfony/finder\": \"^5.4|^6.0|^7.0\",\n                \"symfony/messenger\": \"^5.4|^6.0|^7.0\",\n                \"symfony/service-contracts\": \"^2.5|^3\",\n                \"symfony/yaml\": \"^5.4|^6.0|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Config\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Helps you find, load, combine, autofill and validate configuration values of any kind\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/config/tree/v6.4.14\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-04T11:33:53+00:00\"\n        },\n        {\n            \"name\": \"symfony/console\",\n            \"version\": \"v6.4.15\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/console.git\",\n                \"reference\": \"f1fc6f47283e27336e7cebb9e8946c8de7bff9bd\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/console/zipball/f1fc6f47283e27336e7cebb9e8946c8de7bff9bd\",\n                \"reference\": \"f1fc6f47283e27336e7cebb9e8946c8de7bff9bd\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"symfony/deprecation-contracts\": \"^2.5|^3\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/service-contracts\": \"^2.5|^3\",\n                \"symfony/string\": \"^5.4|^6.0|^7.0\"\n            },\n            \"conflict\": {\n                \"symfony/dependency-injection\": \"<5.4\",\n                \"symfony/dotenv\": \"<5.4\",\n                \"symfony/event-dispatcher\": \"<5.4\",\n                \"symfony/lock\": \"<5.4\",\n                \"symfony/process\": \"<5.4\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0|2.0|3.0\"\n            },\n            \"require-dev\": {\n                \"psr/log\": \"^1|^2|^3\",\n                \"symfony/config\": \"^5.4|^6.0|^7.0\",\n                \"symfony/dependency-injection\": \"^5.4|^6.0|^7.0\",\n                \"symfony/event-dispatcher\": \"^5.4|^6.0|^7.0\",\n                \"symfony/http-foundation\": \"^6.4|^7.0\",\n                \"symfony/http-kernel\": \"^6.4|^7.0\",\n                \"symfony/lock\": \"^5.4|^6.0|^7.0\",\n                \"symfony/messenger\": \"^5.4|^6.0|^7.0\",\n                \"symfony/process\": \"^5.4|^6.0|^7.0\",\n                \"symfony/stopwatch\": \"^5.4|^6.0|^7.0\",\n                \"symfony/var-dumper\": \"^5.4|^6.0|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Console\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Eases the creation of beautiful and testable command line interfaces\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"cli\",\n                \"command-line\",\n                \"console\",\n                \"terminal\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/console/tree/v6.4.15\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-06T14:19:14+00:00\"\n        },\n        {\n            \"name\": \"symfony/dependency-injection\",\n            \"version\": \"v6.4.16\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/dependency-injection.git\",\n                \"reference\": \"7a379d8871f6a36f01559c14e11141cc02eb8dc8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/dependency-injection/zipball/7a379d8871f6a36f01559c14e11141cc02eb8dc8\",\n                \"reference\": \"7a379d8871f6a36f01559c14e11141cc02eb8dc8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"psr/container\": \"^1.1|^2.0\",\n                \"symfony/deprecation-contracts\": \"^2.5|^3\",\n                \"symfony/service-contracts\": \"^2.5|^3.0\",\n                \"symfony/var-exporter\": \"^6.2.10|^7.0\"\n            },\n            \"conflict\": {\n                \"ext-psr\": \"<1.1|>=2\",\n                \"symfony/config\": \"<6.1\",\n                \"symfony/finder\": \"<5.4\",\n                \"symfony/proxy-manager-bridge\": \"<6.3\",\n                \"symfony/yaml\": \"<5.4\"\n            },\n            \"provide\": {\n                \"psr/container-implementation\": \"1.1|2.0\",\n                \"symfony/service-implementation\": \"1.1|2.0|3.0\"\n            },\n            \"require-dev\": {\n                \"symfony/config\": \"^6.1|^7.0\",\n                \"symfony/expression-language\": \"^5.4|^6.0|^7.0\",\n                \"symfony/yaml\": \"^5.4|^6.0|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\DependencyInjection\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Allows you to standardize and centralize the way objects are constructed in your application\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/dependency-injection/tree/v6.4.16\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-25T14:52:46+00:00\"\n        },\n        {\n            \"name\": \"symfony/deprecation-contracts\",\n            \"version\": \"v3.5.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/deprecation-contracts.git\",\n                \"reference\": \"74c71c939a79f7d5bf3c1ce9f5ea37ba0114c6f6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/deprecation-contracts/zipball/74c71c939a79f7d5bf3c1ce9f5ea37ba0114c6f6\",\n                \"reference\": \"74c71c939a79f7d5bf3c1ce9f5ea37ba0114c6f6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.5-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"function.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"A generic function and convention to trigger deprecation notices\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/deprecation-contracts/tree/v3.5.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-25T14:20:29+00:00\"\n        },\n        {\n            \"name\": \"symfony/event-dispatcher\",\n            \"version\": \"v6.4.13\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/event-dispatcher.git\",\n                \"reference\": \"0ffc48080ab3e9132ea74ef4e09d8dcf26bf897e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/event-dispatcher/zipball/0ffc48080ab3e9132ea74ef4e09d8dcf26bf897e\",\n                \"reference\": \"0ffc48080ab3e9132ea74ef4e09d8dcf26bf897e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"symfony/event-dispatcher-contracts\": \"^2.5|^3\"\n            },\n            \"conflict\": {\n                \"symfony/dependency-injection\": \"<5.4\",\n                \"symfony/service-contracts\": \"<2.5\"\n            },\n            \"provide\": {\n                \"psr/event-dispatcher-implementation\": \"1.0\",\n                \"symfony/event-dispatcher-implementation\": \"2.0|3.0\"\n            },\n            \"require-dev\": {\n                \"psr/log\": \"^1|^2|^3\",\n                \"symfony/config\": \"^5.4|^6.0|^7.0\",\n                \"symfony/dependency-injection\": \"^5.4|^6.0|^7.0\",\n                \"symfony/error-handler\": \"^5.4|^6.0|^7.0\",\n                \"symfony/expression-language\": \"^5.4|^6.0|^7.0\",\n                \"symfony/http-foundation\": \"^5.4|^6.0|^7.0\",\n                \"symfony/service-contracts\": \"^2.5|^3\",\n                \"symfony/stopwatch\": \"^5.4|^6.0|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\EventDispatcher\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides tools that allow your application components to communicate with each other by dispatching events and listening to them\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/event-dispatcher/tree/v6.4.13\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-25T14:18:03+00:00\"\n        },\n        {\n            \"name\": \"symfony/event-dispatcher-contracts\",\n            \"version\": \"v3.5.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/event-dispatcher-contracts.git\",\n                \"reference\": \"7642f5e970b672283b7823222ae8ef8bbc160b9f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/event-dispatcher-contracts/zipball/7642f5e970b672283b7823222ae8ef8bbc160b9f\",\n                \"reference\": \"7642f5e970b672283b7823222ae8ef8bbc160b9f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"psr/event-dispatcher\": \"^1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.5-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Contracts\\\\EventDispatcher\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Generic abstractions related to dispatching event\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"abstractions\",\n                \"contracts\",\n                \"decoupling\",\n                \"interfaces\",\n                \"interoperability\",\n                \"standards\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/event-dispatcher-contracts/tree/v3.5.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-25T14:20:29+00:00\"\n        },\n        {\n            \"name\": \"symfony/filesystem\",\n            \"version\": \"v6.4.13\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/filesystem.git\",\n                \"reference\": \"4856c9cf585d5a0313d8d35afd681a526f038dd3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/filesystem/zipball/4856c9cf585d5a0313d8d35afd681a526f038dd3\",\n                \"reference\": \"4856c9cf585d5a0313d8d35afd681a526f038dd3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-mbstring\": \"~1.8\"\n            },\n            \"require-dev\": {\n                \"symfony/process\": \"^5.4|^6.4|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Filesystem\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides basic utilities for the filesystem\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/filesystem/tree/v6.4.13\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-10-25T15:07:50+00:00\"\n        },\n        {\n            \"name\": \"symfony/finder\",\n            \"version\": \"v6.4.13\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/finder.git\",\n                \"reference\": \"daea9eca0b08d0ed1dc9ab702a46128fd1be4958\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/finder/zipball/daea9eca0b08d0ed1dc9ab702a46128fd1be4958\",\n                \"reference\": \"daea9eca0b08d0ed1dc9ab702a46128fd1be4958\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"require-dev\": {\n                \"symfony/filesystem\": \"^6.0|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Finder\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Finds files and directories via an intuitive fluent interface\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/finder/tree/v6.4.13\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-10-01T08:30:56+00:00\"\n        },\n        {\n            \"name\": \"symfony/http-client\",\n            \"version\": \"v6.4.16\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/http-client.git\",\n                \"reference\": \"60a113666fa67e598abace38e5f46a0954d8833d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/http-client/zipball/60a113666fa67e598abace38e5f46a0954d8833d\",\n                \"reference\": \"60a113666fa67e598abace38e5f46a0954d8833d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"psr/log\": \"^1|^2|^3\",\n                \"symfony/deprecation-contracts\": \"^2.5|^3\",\n                \"symfony/http-client-contracts\": \"~3.4.3|^3.5.1\",\n                \"symfony/service-contracts\": \"^2.5|^3\"\n            },\n            \"conflict\": {\n                \"php-http/discovery\": \"<1.15\",\n                \"symfony/http-foundation\": \"<6.3\"\n            },\n            \"provide\": {\n                \"php-http/async-client-implementation\": \"*\",\n                \"php-http/client-implementation\": \"*\",\n                \"psr/http-client-implementation\": \"1.0\",\n                \"symfony/http-client-implementation\": \"3.0\"\n            },\n            \"require-dev\": {\n                \"amphp/amp\": \"^2.5\",\n                \"amphp/http-client\": \"^4.2.1\",\n                \"amphp/http-tunnel\": \"^1.0\",\n                \"amphp/socket\": \"^1.1\",\n                \"guzzlehttp/promises\": \"^1.4|^2.0\",\n                \"nyholm/psr7\": \"^1.0\",\n                \"php-http/httplug\": \"^1.0|^2.0\",\n                \"psr/http-client\": \"^1.0\",\n                \"symfony/dependency-injection\": \"^5.4|^6.0|^7.0\",\n                \"symfony/http-kernel\": \"^5.4|^6.0|^7.0\",\n                \"symfony/messenger\": \"^5.4|^6.0|^7.0\",\n                \"symfony/process\": \"^5.4|^6.0|^7.0\",\n                \"symfony/stopwatch\": \"^5.4|^6.0|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\HttpClient\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides powerful methods to fetch HTTP resources synchronously or asynchronously\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"http\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/http-client/tree/v6.4.16\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-27T11:52:33+00:00\"\n        },\n        {\n            \"name\": \"symfony/http-client-contracts\",\n            \"version\": \"v3.5.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/http-client-contracts.git\",\n                \"reference\": \"ee8d807ab20fcb51267fdace50fbe3494c31e645\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/http-client-contracts/zipball/ee8d807ab20fcb51267fdace50fbe3494c31e645\",\n                \"reference\": \"ee8d807ab20fcb51267fdace50fbe3494c31e645\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/contracts\",\n                    \"name\": \"symfony/contracts\"\n                },\n                \"branch-alias\": {\n                    \"dev-main\": \"3.5-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Contracts\\\\HttpClient\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Test/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Generic abstractions related to HTTP clients\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"abstractions\",\n                \"contracts\",\n                \"decoupling\",\n                \"interfaces\",\n                \"interoperability\",\n                \"standards\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/http-client-contracts/tree/v3.5.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-12-07T08:49:48+00:00\"\n        },\n        {\n            \"name\": \"symfony/http-foundation\",\n            \"version\": \"v6.4.16\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/http-foundation.git\",\n                \"reference\": \"431771b7a6f662f1575b3cfc8fd7617aa9864d57\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/http-foundation/zipball/431771b7a6f662f1575b3cfc8fd7617aa9864d57\",\n                \"reference\": \"431771b7a6f662f1575b3cfc8fd7617aa9864d57\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"symfony/deprecation-contracts\": \"^2.5|^3\",\n                \"symfony/polyfill-mbstring\": \"~1.1\",\n                \"symfony/polyfill-php83\": \"^1.27\"\n            },\n            \"conflict\": {\n                \"symfony/cache\": \"<6.4.12|>=7.0,<7.1.5\"\n            },\n            \"require-dev\": {\n                \"doctrine/dbal\": \"^2.13.1|^3|^4\",\n                \"predis/predis\": \"^1.1|^2.0\",\n                \"symfony/cache\": \"^6.4.12|^7.1.5\",\n                \"symfony/dependency-injection\": \"^5.4|^6.0|^7.0\",\n                \"symfony/expression-language\": \"^5.4|^6.0|^7.0\",\n                \"symfony/http-kernel\": \"^5.4.12|^6.0.12|^6.1.4|^7.0\",\n                \"symfony/mime\": \"^5.4|^6.0|^7.0\",\n                \"symfony/rate-limiter\": \"^5.4|^6.0|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\HttpFoundation\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Defines an object-oriented layer for the HTTP specification\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/http-foundation/tree/v6.4.16\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-13T18:58:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/inflector\",\n            \"version\": \"v5.4.47\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/inflector.git\",\n                \"reference\": \"b4ce65e0bc7a86caae0d13b65d853c5056e44a39\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/inflector/zipball/b4ce65e0bc7a86caae0d13b65d853c5056e44a39\",\n                \"reference\": \"b4ce65e0bc7a86caae0d13b65d853c5056e44a39\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1|^3\",\n                \"symfony/polyfill-php80\": \"^1.16\",\n                \"symfony/string\": \"^5.4.47|^6.4.15\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Inflector\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@gmail.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Converts words between their singular and plural forms (English only)\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"inflection\",\n                \"pluralize\",\n                \"singularize\",\n                \"string\",\n                \"symfony\",\n                \"words\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/inflector/tree/v5.4.47\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"abandoned\": \"EnglishInflector from the String component\",\n            \"time\": \"2024-11-10T20:33:58+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-ctype\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-ctype.git\",\n                \"reference\": \"a3cc8b044a6ea513310cbd48ef7333b384945638\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-ctype/zipball/a3cc8b044a6ea513310cbd48ef7333b384945638\",\n                \"reference\": \"a3cc8b044a6ea513310cbd48ef7333b384945638\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"provide\": {\n                \"ext-ctype\": \"*\"\n            },\n            \"suggest\": {\n                \"ext-ctype\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Ctype\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Gert de Pagter\",\n                    \"email\": \"BackEndTea@gmail.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for ctype functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"ctype\",\n                \"polyfill\",\n                \"portable\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-ctype/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-grapheme\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-grapheme.git\",\n                \"reference\": \"b9123926e3b7bc2f98c02ad54f6a4b02b91a8abe\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-grapheme/zipball/b9123926e3b7bc2f98c02ad54f6a4b02b91a8abe\",\n                \"reference\": \"b9123926e3b7bc2f98c02ad54f6a4b02b91a8abe\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Grapheme\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's grapheme_* functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"grapheme\",\n                \"intl\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-intl-grapheme/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-normalizer\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-normalizer.git\",\n                \"reference\": \"3833d7255cc303546435cb650316bff708a1c75c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-normalizer/zipball/3833d7255cc303546435cb650316bff708a1c75c\",\n                \"reference\": \"3833d7255cc303546435cb650316bff708a1c75c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Normalizer\\\\\": \"\"\n                },\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's Normalizer class and related functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"intl\",\n                \"normalizer\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-intl-normalizer/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-mbstring\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-mbstring.git\",\n                \"reference\": \"85181ba99b2345b0ef10ce42ecac37612d9fd341\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-mbstring/zipball/85181ba99b2345b0ef10ce42ecac37612d9fd341\",\n                \"reference\": \"85181ba99b2345b0ef10ce42ecac37612d9fd341\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"provide\": {\n                \"ext-mbstring\": \"*\"\n            },\n            \"suggest\": {\n                \"ext-mbstring\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Mbstring\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for the Mbstring extension\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"mbstring\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-mbstring/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php80\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php80.git\",\n                \"reference\": \"60328e362d4c2c802a54fcbf04f9d3fb892b4cf8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php80/zipball/60328e362d4c2c802a54fcbf04f9d3fb892b4cf8\",\n                \"reference\": \"60328e362d4c2c802a54fcbf04f9d3fb892b4cf8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Php80\\\\\": \"\"\n                },\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ion Bazan\",\n                    \"email\": \"ion.bazan@gmail.com\"\n                },\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-php80/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php81\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php81.git\",\n                \"reference\": \"4a4cfc2d253c21a5ad0e53071df248ed48c6ce5c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php81/zipball/4a4cfc2d253c21a5ad0e53071df248ed48c6ce5c\",\n                \"reference\": \"4a4cfc2d253c21a5ad0e53071df248ed48c6ce5c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Php81\\\\\": \"\"\n                },\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 8.1+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-php81/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php83\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php83.git\",\n                \"reference\": \"2fb86d65e2d424369ad2905e83b236a8805ba491\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php83/zipball/2fb86d65e2d424369ad2905e83b236a8805ba491\",\n                \"reference\": \"2fb86d65e2d424369ad2905e83b236a8805ba491\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Php83\\\\\": \"\"\n                },\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 8.3+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-php83/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/process\",\n            \"version\": \"v6.4.15\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/process.git\",\n                \"reference\": \"3cb242f059c14ae08591c5c4087d1fe443564392\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/process/zipball/3cb242f059c14ae08591c5c4087d1fe443564392\",\n                \"reference\": \"3cb242f059c14ae08591c5c4087d1fe443564392\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Process\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Executes commands in sub-processes\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/process/tree/v6.4.15\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-06T14:19:14+00:00\"\n        },\n        {\n            \"name\": \"symfony/property-access\",\n            \"version\": \"v4.4.44\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/property-access.git\",\n                \"reference\": \"d49682f6f0764df725c95128213a38f7e0a9f358\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/property-access/zipball/d49682f6f0764df725c95128213a38f7e0a9f358\",\n                \"reference\": \"d49682f6f0764df725c95128213a38f7e0a9f358\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1.3\",\n                \"symfony/inflector\": \"^3.4|^4.0|^5.0\",\n                \"symfony/polyfill-php80\": \"^1.16\"\n            },\n            \"require-dev\": {\n                \"symfony/cache\": \"^3.4|^4.0|^5.0\"\n            },\n            \"suggest\": {\n                \"psr/cache-implementation\": \"To cache access methods.\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\PropertyAccess\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides functions to read and write from/to an object or array using a simple string notation\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"access\",\n                \"array\",\n                \"extraction\",\n                \"index\",\n                \"injection\",\n                \"object\",\n                \"property\",\n                \"property path\",\n                \"reflection\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/property-access/tree/v4.4.44\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-06-27T13:16:42+00:00\"\n        },\n        {\n            \"name\": \"symfony/service-contracts\",\n            \"version\": \"v3.5.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/service-contracts.git\",\n                \"reference\": \"e53260aabf78fb3d63f8d79d69ece59f80d5eda0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/service-contracts/zipball/e53260aabf78fb3d63f8d79d69ece59f80d5eda0\",\n                \"reference\": \"e53260aabf78fb3d63f8d79d69ece59f80d5eda0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"psr/container\": \"^1.1|^2.0\",\n                \"symfony/deprecation-contracts\": \"^2.5|^3\"\n            },\n            \"conflict\": {\n                \"ext-psr\": \"<1.1|>=2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.5-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Contracts\\\\Service\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Test/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Generic abstractions related to writing services\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"abstractions\",\n                \"contracts\",\n                \"decoupling\",\n                \"interfaces\",\n                \"interoperability\",\n                \"standards\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/service-contracts/tree/v3.5.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-25T14:20:29+00:00\"\n        },\n        {\n            \"name\": \"symfony/string\",\n            \"version\": \"v6.4.15\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/string.git\",\n                \"reference\": \"73a5e66ea2e1677c98d4449177c5a9cf9d8b4c6f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/string/zipball/73a5e66ea2e1677c98d4449177c5a9cf9d8b4c6f\",\n                \"reference\": \"73a5e66ea2e1677c98d4449177c5a9cf9d8b4c6f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-intl-grapheme\": \"~1.0\",\n                \"symfony/polyfill-intl-normalizer\": \"~1.0\",\n                \"symfony/polyfill-mbstring\": \"~1.0\"\n            },\n            \"conflict\": {\n                \"symfony/translation-contracts\": \"<2.5\"\n            },\n            \"require-dev\": {\n                \"symfony/error-handler\": \"^5.4|^6.0|^7.0\",\n                \"symfony/http-client\": \"^5.4|^6.0|^7.0\",\n                \"symfony/intl\": \"^6.2|^7.0\",\n                \"symfony/translation-contracts\": \"^2.5|^3.0\",\n                \"symfony/var-exporter\": \"^5.4|^6.0|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"Resources/functions.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\String\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides an object-oriented API to strings and deals with bytes, UTF-8 code points and grapheme clusters in a unified way\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"grapheme\",\n                \"i18n\",\n                \"string\",\n                \"unicode\",\n                \"utf-8\",\n                \"utf8\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/string/tree/v6.4.15\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-13T13:31:12+00:00\"\n        },\n        {\n            \"name\": \"symfony/var-exporter\",\n            \"version\": \"v6.4.13\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/var-exporter.git\",\n                \"reference\": \"0f605f72a363f8743001038a176eeb2a11223b51\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/var-exporter/zipball/0f605f72a363f8743001038a176eeb2a11223b51\",\n                \"reference\": \"0f605f72a363f8743001038a176eeb2a11223b51\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"symfony/deprecation-contracts\": \"^2.5|^3\"\n            },\n            \"require-dev\": {\n                \"symfony/property-access\": \"^6.4|^7.0\",\n                \"symfony/serializer\": \"^6.4|^7.0\",\n                \"symfony/var-dumper\": \"^5.4|^6.0|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\VarExporter\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Allows exporting any serializable PHP data structure to plain PHP code\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"clone\",\n                \"construct\",\n                \"export\",\n                \"hydrate\",\n                \"instantiate\",\n                \"lazy-loading\",\n                \"proxy\",\n                \"serialize\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/var-exporter/tree/v6.4.13\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-25T14:18:03+00:00\"\n        },\n        {\n            \"name\": \"symfony/yaml\",\n            \"version\": \"v6.4.13\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/yaml.git\",\n                \"reference\": \"e99b4e94d124b29ee4cf3140e1b537d2dad8cec9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/yaml/zipball/e99b4e94d124b29ee4cf3140e1b537d2dad8cec9\",\n                \"reference\": \"e99b4e94d124b29ee4cf3140e1b537d2dad8cec9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"symfony/deprecation-contracts\": \"^2.5|^3\",\n                \"symfony/polyfill-ctype\": \"^1.8\"\n            },\n            \"conflict\": {\n                \"symfony/console\": \"<5.4\"\n            },\n            \"require-dev\": {\n                \"symfony/console\": \"^5.4|^6.0|^7.0\"\n            },\n            \"bin\": [\n                \"Resources/bin/yaml-lint\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Yaml\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Loads and dumps YAML files\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/yaml/tree/v6.4.13\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-25T14:18:03+00:00\"\n        },\n        {\n            \"name\": \"twig/twig\",\n            \"version\": \"v3.17.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/twigphp/Twig.git\",\n                \"reference\": \"677ef8da6497a03048192aeeb5aa3018e379ac71\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/twigphp/Twig/zipball/677ef8da6497a03048192aeeb5aa3018e379ac71\",\n                \"reference\": \"677ef8da6497a03048192aeeb5aa3018e379ac71\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.2\",\n                \"symfony/deprecation-contracts\": \"^2.5|^3\",\n                \"symfony/polyfill-ctype\": \"^1.8\",\n                \"symfony/polyfill-mbstring\": \"^1.3\",\n                \"symfony/polyfill-php81\": \"^1.29\"\n            },\n            \"require-dev\": {\n                \"phpstan/phpstan\": \"^2.0\",\n                \"psr/container\": \"^1.0|^2.0\",\n                \"symfony/phpunit-bridge\": \"^5.4.9|^6.4|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/Resources/core.php\",\n                    \"src/Resources/debug.php\",\n                    \"src/Resources/escaper.php\",\n                    \"src/Resources/string_loader.php\"\n                ],\n                \"psr-4\": {\n                    \"Twig\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\",\n                    \"homepage\": \"http://fabien.potencier.org\",\n                    \"role\": \"Lead Developer\"\n                },\n                {\n                    \"name\": \"Twig Team\",\n                    \"role\": \"Contributors\"\n                },\n                {\n                    \"name\": \"Armin Ronacher\",\n                    \"email\": \"armin.ronacher@active-4.com\",\n                    \"role\": \"Project Founder\"\n                }\n            ],\n            \"description\": \"Twig, the flexible, fast, and secure template language for PHP\",\n            \"homepage\": \"https://twig.symfony.com\",\n            \"keywords\": [\n                \"templating\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/twigphp/Twig/issues\",\n                \"source\": \"https://github.com/twigphp/Twig/tree/v3.17.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/twig/twig\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-12-12T09:58:10+00:00\"\n        },\n        {\n            \"name\": \"twilio/sdk\",\n            \"version\": \"8.3.9\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/twilio/twilio-php.git\",\n                \"reference\": \"b8a79247ad00daed6f823328a052293d498fac36\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/twilio/twilio-php/zipball/b8a79247ad00daed6f823328a052293d498fac36\",\n                \"reference\": \"b8a79247ad00daed6f823328a052293d498fac36\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1.0\"\n            },\n            \"require-dev\": {\n                \"guzzlehttp/guzzle\": \"^6.3 || ^7.0\",\n                \"phpunit/phpunit\": \">=7.0 < 10\"\n            },\n            \"suggest\": {\n                \"guzzlehttp/guzzle\": \"An HTTP client to execute the API requests\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Twilio\\\\\": \"src/Twilio/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Twilio API Team\",\n                    \"email\": \"api@twilio.com\"\n                }\n            ],\n            \"description\": \"A PHP wrapper for Twilio's API\",\n            \"homepage\": \"https://github.com/twilio/twilio-php\",\n            \"keywords\": [\n                \"api\",\n                \"sms\",\n                \"twilio\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/twilio/twilio-php/issues\",\n                \"source\": \"https://github.com/twilio/twilio-php/tree/8.3.9\"\n            },\n            \"time\": \"2024-12-05T10:18:30+00:00\"\n        },\n        {\n            \"name\": \"vlucas/phpdotenv\",\n            \"version\": \"v5.6.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/vlucas/phpdotenv.git\",\n                \"reference\": \"a59a13791077fe3d44f90e7133eb68e7d22eaff2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/vlucas/phpdotenv/zipball/a59a13791077fe3d44f90e7133eb68e7d22eaff2\",\n                \"reference\": \"a59a13791077fe3d44f90e7133eb68e7d22eaff2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-pcre\": \"*\",\n                \"graham-campbell/result-type\": \"^1.1.3\",\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"phpoption/phpoption\": \"^1.9.3\",\n                \"symfony/polyfill-ctype\": \"^1.24\",\n                \"symfony/polyfill-mbstring\": \"^1.24\",\n                \"symfony/polyfill-php80\": \"^1.24\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"ext-filter\": \"*\",\n                \"phpunit/phpunit\": \"^8.5.34 || ^9.6.13 || ^10.4.2\"\n            },\n            \"suggest\": {\n                \"ext-filter\": \"Required to use the boolean validator.\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                },\n                \"branch-alias\": {\n                    \"dev-master\": \"5.6-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Dotenv\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Vance Lucas\",\n                    \"email\": \"vance@vancelucas.com\",\n                    \"homepage\": \"https://github.com/vlucas\"\n                }\n            ],\n            \"description\": \"Loads environment variables from `.env` to `getenv()`, `$_ENV` and `$_SERVER` automagically.\",\n            \"keywords\": [\n                \"dotenv\",\n                \"env\",\n                \"environment\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/vlucas/phpdotenv/issues\",\n                \"source\": \"https://github.com/vlucas/phpdotenv/tree/v5.6.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/vlucas/phpdotenv\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-07-20T21:52:34+00:00\"\n        },\n        {\n            \"name\": \"waryway/php-traits-library\",\n            \"version\": \"1.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Waryway/PhpTraitsLibrary.git\",\n                \"reference\": \"ec0b630770bdd84168d2cd5e61bd93f45095e035\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Waryway/PhpTraitsLibrary/zipball/ec0b630770bdd84168d2cd5e61bd93f45095e035\",\n                \"reference\": \"ec0b630770bdd84168d2cd5e61bd93f45095e035\",\n                \"shasum\": \"\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"6.4.3\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Waryway\\\\PhpTraitsLibrary\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Kyle Wiering\",\n                    \"email\": \"kyle@waryway.com\"\n                }\n            ],\n            \"description\": \"General use traits\",\n            \"support\": {\n                \"issues\": \"https://github.com/Waryway/PhpTraitsLibrary/issues\",\n                \"source\": \"https://github.com/Waryway/PhpTraitsLibrary/tree/1.0.4\"\n            },\n            \"time\": \"2017-12-23T14:22:07+00:00\"\n        },\n        {\n            \"name\": \"webimpress/safe-writer\",\n            \"version\": \"2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/webimpress/safe-writer.git\",\n                \"reference\": \"9d37cc8bee20f7cb2f58f6e23e05097eab5072e6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/webimpress/safe-writer/zipball/9d37cc8bee20f7cb2f58f6e23e05097eab5072e6\",\n                \"reference\": \"9d37cc8bee20f7cb2f58f6e23e05097eab5072e6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.5.4\",\n                \"vimeo/psalm\": \"^4.7\",\n                \"webimpress/coding-standard\": \"^1.2.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.2.x-dev\",\n                    \"dev-develop\": \"2.3.x-dev\",\n                    \"dev-release-1.0\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Webimpress\\\\SafeWriter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-2-Clause\"\n            ],\n            \"description\": \"Tool to write files safely, to avoid race conditions\",\n            \"keywords\": [\n                \"concurrent write\",\n                \"file writer\",\n                \"race condition\",\n                \"safe writer\",\n                \"webimpress\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/webimpress/safe-writer/issues\",\n                \"source\": \"https://github.com/webimpress/safe-writer/tree/2.2.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/michalbundyra\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2021-04-19T16:34:45+00:00\"\n        },\n        {\n            \"name\": \"webmozart/assert\",\n            \"version\": \"1.11.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/webmozarts/assert.git\",\n                \"reference\": \"11cb2199493b2f8a3b53e7f19068fc6aac760991\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/webmozarts/assert/zipball/11cb2199493b2f8a3b53e7f19068fc6aac760991\",\n                \"reference\": \"11cb2199493b2f8a3b53e7f19068fc6aac760991\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"conflict\": {\n                \"phpstan/phpstan\": \"<0.12.20\",\n                \"vimeo/psalm\": \"<4.6.1 || 4.6.2\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5.13\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.10-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Webmozart\\\\Assert\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@gmail.com\"\n                }\n            ],\n            \"description\": \"Assertions to validate method input/output with nice error messages.\",\n            \"keywords\": [\n                \"assert\",\n                \"check\",\n                \"validate\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/webmozarts/assert/issues\",\n                \"source\": \"https://github.com/webmozarts/assert/tree/1.11.0\"\n            },\n            \"time\": \"2022-06-03T18:03:27+00:00\"\n        },\n        {\n            \"name\": \"yubico/u2flib-server\",\n            \"version\": \"1.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Yubico/php-u2flib-server.git\",\n                \"reference\": \"55d813acf68212ad2cadecde07551600d6971939\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Yubico/php-u2flib-server/zipball/55d813acf68212ad2cadecde07551600d6971939\",\n                \"reference\": \"55d813acf68212ad2cadecde07551600d6971939\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-openssl\": \"*\",\n                \"paragonie/random_compat\": \">= 1\",\n                \"php\": \">=5.6\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"~5.7\",\n                \"vimeo/psalm\": \"^0|^1|^2\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-2-Clause\"\n            ],\n            \"description\": \"Library for U2F implementation\",\n            \"homepage\": \"https://developers.yubico.com/php-u2flib-server\",\n            \"support\": {\n                \"issues\": \"https://github.com/Yubico/php-u2flib-server/issues\",\n                \"source\": \"https://github.com/Yubico/php-u2flib-server/tree/1.0.2\"\n            },\n            \"abandoned\": true,\n            \"time\": \"2018-09-07T08:16:44+00:00\"\n        }\n    ],\n    \"packages-dev\": [\n        {\n            \"name\": \"doctrine/annotations\",\n            \"version\": \"1.14.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/annotations.git\",\n                \"reference\": \"253dca476f70808a5aeed3a47cc2cc88c5cab915\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/annotations/zipball/253dca476f70808a5aeed3a47cc2cc88c5cab915\",\n                \"reference\": \"253dca476f70808a5aeed3a47cc2cc88c5cab915\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/lexer\": \"^1 || ^2\",\n                \"ext-tokenizer\": \"*\",\n                \"php\": \"^7.1 || ^8.0\",\n                \"psr/cache\": \"^1 || ^2 || ^3\"\n            },\n            \"require-dev\": {\n                \"doctrine/cache\": \"^1.11 || ^2.0\",\n                \"doctrine/coding-standard\": \"^9 || ^12\",\n                \"phpstan/phpstan\": \"~1.4.10 || ^1.10.28\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.5\",\n                \"symfony/cache\": \"^4.4 || ^5.4 || ^6.4 || ^7\",\n                \"vimeo/psalm\": \"^4.30 || ^5.14\"\n            },\n            \"suggest\": {\n                \"php\": \"PHP 8.0 or higher comes with attributes, a native replacement for annotations\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\Annotations\\\\\": \"lib/Doctrine/Common/Annotations\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                }\n            ],\n            \"description\": \"Docblock Annotations Parser\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/annotations.html\",\n            \"keywords\": [\n                \"annotations\",\n                \"docblock\",\n                \"parser\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/annotations/issues\",\n                \"source\": \"https://github.com/doctrine/annotations/tree/1.14.4\"\n            },\n            \"time\": \"2024-09-05T10:15:52+00:00\"\n        },\n        {\n            \"name\": \"doctrine/deprecations\",\n            \"version\": \"1.1.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/deprecations.git\",\n                \"reference\": \"31610dbb31faa98e6b5447b62340826f54fbc4e9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/deprecations/zipball/31610dbb31faa98e6b5447b62340826f54fbc4e9\",\n                \"reference\": \"31610dbb31faa98e6b5447b62340826f54fbc4e9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^9 || ^12\",\n                \"phpstan/phpstan\": \"1.4.10 || 2.0.3\",\n                \"phpstan/phpstan-phpunit\": \"^1.0 || ^2\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.5\",\n                \"psr/log\": \"^1 || ^2 || ^3\"\n            },\n            \"suggest\": {\n                \"psr/log\": \"Allows logging deprecations via PSR-3 logger implementation\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Deprecations\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"A small layer on top of trigger_error(E_USER_DEPRECATED) or PSR-3 logging with options to disable all deprecations or selectively for packages.\",\n            \"homepage\": \"https://www.doctrine-project.org/\",\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/deprecations/issues\",\n                \"source\": \"https://github.com/doctrine/deprecations/tree/1.1.4\"\n            },\n            \"time\": \"2024-12-07T21:18:45+00:00\"\n        },\n        {\n            \"name\": \"doctrine/lexer\",\n            \"version\": \"2.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/lexer.git\",\n                \"reference\": \"861c870e8b75f7c8f69c146c7f89cc1c0f1b49b6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/lexer/zipball/861c870e8b75f7c8f69c146c7f89cc1c0f1b49b6\",\n                \"reference\": \"861c870e8b75f7c8f69c146c7f89cc1c0f1b49b6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/deprecations\": \"^1.0\",\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^9 || ^12\",\n                \"phpstan/phpstan\": \"^1.3\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.6\",\n                \"psalm/plugin-phpunit\": \"^0.18.3\",\n                \"vimeo/psalm\": \"^4.11 || ^5.21\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\Lexer\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                }\n            ],\n            \"description\": \"PHP Doctrine Lexer parser library that can be used in Top-Down, Recursive Descent Parsers.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/lexer.html\",\n            \"keywords\": [\n                \"annotations\",\n                \"docblock\",\n                \"lexer\",\n                \"parser\",\n                \"php\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/lexer/issues\",\n                \"source\": \"https://github.com/doctrine/lexer/tree/2.1.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Flexer\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-02-05T11:35:39+00:00\"\n        },\n        {\n            \"name\": \"phar-io/manifest\",\n            \"version\": \"2.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phar-io/manifest.git\",\n                \"reference\": \"54750ef60c58e43759730615a392c31c80e23176\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phar-io/manifest/zipball/54750ef60c58e43759730615a392c31c80e23176\",\n                \"reference\": \"54750ef60c58e43759730615a392c31c80e23176\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-phar\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"phar-io/version\": \"^3.0.1\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Heuer\",\n                    \"email\": \"sebastian@phpeople.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Component for reading phar.io manifest information from a PHP Archive (PHAR)\",\n            \"support\": {\n                \"issues\": \"https://github.com/phar-io/manifest/issues\",\n                \"source\": \"https://github.com/phar-io/manifest/tree/2.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/theseer\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-03T12:33:53+00:00\"\n        },\n        {\n            \"name\": \"phar-io/version\",\n            \"version\": \"3.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phar-io/version.git\",\n                \"reference\": \"4f7fd7836c6f332bb2933569e566a0d6c4cbed74\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phar-io/version/zipball/4f7fd7836c6f332bb2933569e566a0d6c4cbed74\",\n                \"reference\": \"4f7fd7836c6f332bb2933569e566a0d6c4cbed74\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Heuer\",\n                    \"email\": \"sebastian@phpeople.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Library for handling version information and constraints\",\n            \"support\": {\n                \"issues\": \"https://github.com/phar-io/version/issues\",\n                \"source\": \"https://github.com/phar-io/version/tree/3.2.1\"\n            },\n            \"time\": \"2022-02-21T01:04:05+00:00\"\n        },\n        {\n            \"name\": \"php-webdriver/webdriver\",\n            \"version\": \"1.15.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-webdriver/php-webdriver.git\",\n                \"reference\": \"998e499b786805568deaf8cbf06f4044f05d91bf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-webdriver/php-webdriver/zipball/998e499b786805568deaf8cbf06f4044f05d91bf\",\n                \"reference\": \"998e499b786805568deaf8cbf06f4044f05d91bf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-curl\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-zip\": \"*\",\n                \"php\": \"^7.3 || ^8.0\",\n                \"symfony/polyfill-mbstring\": \"^1.12\",\n                \"symfony/process\": \"^5.0 || ^6.0 || ^7.0\"\n            },\n            \"replace\": {\n                \"facebook/webdriver\": \"*\"\n            },\n            \"require-dev\": {\n                \"ergebnis/composer-normalize\": \"^2.20.0\",\n                \"ondram/ci-detector\": \"^4.0\",\n                \"php-coveralls/php-coveralls\": \"^2.4\",\n                \"php-mock/php-mock-phpunit\": \"^2.0\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.2\",\n                \"phpunit/phpunit\": \"^9.3\",\n                \"squizlabs/php_codesniffer\": \"^3.5\",\n                \"symfony/var-dumper\": \"^5.0 || ^6.0 || ^7.0\"\n            },\n            \"suggest\": {\n                \"ext-SimpleXML\": \"For Firefox profile creation\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"lib/Exception/TimeoutException.php\"\n                ],\n                \"psr-4\": {\n                    \"Facebook\\\\WebDriver\\\\\": \"lib/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"A PHP client for Selenium WebDriver. Previously facebook/webdriver.\",\n            \"homepage\": \"https://github.com/php-webdriver/php-webdriver\",\n            \"keywords\": [\n                \"Chromedriver\",\n                \"geckodriver\",\n                \"php\",\n                \"selenium\",\n                \"webdriver\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-webdriver/php-webdriver/issues\",\n                \"source\": \"https://github.com/php-webdriver/php-webdriver/tree/1.15.2\"\n            },\n            \"time\": \"2024-11-21T15:12:59+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-code-coverage\",\n            \"version\": \"10.1.16\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-code-coverage.git\",\n                \"reference\": \"7e308268858ed6baedc8704a304727d20bc07c77\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/7e308268858ed6baedc8704a304727d20bc07c77\",\n                \"reference\": \"7e308268858ed6baedc8704a304727d20bc07c77\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"nikic/php-parser\": \"^4.19.1 || ^5.1.0\",\n                \"php\": \">=8.1\",\n                \"phpunit/php-file-iterator\": \"^4.1.0\",\n                \"phpunit/php-text-template\": \"^3.0.1\",\n                \"sebastian/code-unit-reverse-lookup\": \"^3.0.0\",\n                \"sebastian/complexity\": \"^3.2.0\",\n                \"sebastian/environment\": \"^6.1.0\",\n                \"sebastian/lines-of-code\": \"^2.0.2\",\n                \"sebastian/version\": \"^4.0.1\",\n                \"theseer/tokenizer\": \"^1.2.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.1\"\n            },\n            \"suggest\": {\n                \"ext-pcov\": \"PHP extension that provides line coverage\",\n                \"ext-xdebug\": \"PHP extension that provides line coverage as well as branch and path coverage\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"10.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library that provides collection, processing, and rendering functionality for PHP code coverage information.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-code-coverage\",\n            \"keywords\": [\n                \"coverage\",\n                \"testing\",\n                \"xunit\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-code-coverage/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/php-code-coverage/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/php-code-coverage/tree/10.1.16\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-08-22T04:31:57+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-file-iterator\",\n            \"version\": \"4.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-file-iterator.git\",\n                \"reference\": \"a95037b6d9e608ba092da1b23931e537cadc3c3c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-file-iterator/zipball/a95037b6d9e608ba092da1b23931e537cadc3c3c\",\n                \"reference\": \"a95037b6d9e608ba092da1b23931e537cadc3c3c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"FilterIterator implementation that filters files based on a list of suffixes.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-file-iterator/\",\n            \"keywords\": [\n                \"filesystem\",\n                \"iterator\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-file-iterator/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/php-file-iterator/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/php-file-iterator/tree/4.1.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-08-31T06:24:48+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-invoker\",\n            \"version\": \"4.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-invoker.git\",\n                \"reference\": \"f5e568ba02fa5ba0ddd0f618391d5a9ea50b06d7\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-invoker/zipball/f5e568ba02fa5ba0ddd0f618391d5a9ea50b06d7\",\n                \"reference\": \"f5e568ba02fa5ba0ddd0f618391d5a9ea50b06d7\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"require-dev\": {\n                \"ext-pcntl\": \"*\",\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"suggest\": {\n                \"ext-pcntl\": \"*\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Invoke callables with a timeout\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-invoker/\",\n            \"keywords\": [\n                \"process\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-invoker/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-invoker/tree/4.0.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T06:56:09+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-text-template\",\n            \"version\": \"3.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-text-template.git\",\n                \"reference\": \"0c7b06ff49e3d5072f057eb1fa59258bf287a748\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-text-template/zipball/0c7b06ff49e3d5072f057eb1fa59258bf287a748\",\n                \"reference\": \"0c7b06ff49e3d5072f057eb1fa59258bf287a748\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Simple template engine.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-text-template/\",\n            \"keywords\": [\n                \"template\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-text-template/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/php-text-template/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/php-text-template/tree/3.0.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-08-31T14:07:24+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-timer\",\n            \"version\": \"6.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-timer.git\",\n                \"reference\": \"e2a2d67966e740530f4a3343fe2e030ffdc1161d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-timer/zipball/e2a2d67966e740530f4a3343fe2e030ffdc1161d\",\n                \"reference\": \"e2a2d67966e740530f4a3343fe2e030ffdc1161d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"6.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Utility class for timing\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-timer/\",\n            \"keywords\": [\n                \"timer\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-timer/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-timer/tree/6.0.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T06:57:52+00:00\"\n        },\n        {\n            \"name\": \"phpunit/phpunit\",\n            \"version\": \"10.5.40\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/phpunit.git\",\n                \"reference\": \"e6ddda95af52f69c1e0c7b4f977cccb58048798c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/phpunit/zipball/e6ddda95af52f69c1e0c7b4f977cccb58048798c\",\n                \"reference\": \"e6ddda95af52f69c1e0c7b4f977cccb58048798c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"ext-xml\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"myclabs/deep-copy\": \"^1.12.1\",\n                \"phar-io/manifest\": \"^2.0.4\",\n                \"phar-io/version\": \"^3.2.1\",\n                \"php\": \">=8.1\",\n                \"phpunit/php-code-coverage\": \"^10.1.16\",\n                \"phpunit/php-file-iterator\": \"^4.1.0\",\n                \"phpunit/php-invoker\": \"^4.0.0\",\n                \"phpunit/php-text-template\": \"^3.0.1\",\n                \"phpunit/php-timer\": \"^6.0.0\",\n                \"sebastian/cli-parser\": \"^2.0.1\",\n                \"sebastian/code-unit\": \"^2.0.0\",\n                \"sebastian/comparator\": \"^5.0.3\",\n                \"sebastian/diff\": \"^5.1.1\",\n                \"sebastian/environment\": \"^6.1.0\",\n                \"sebastian/exporter\": \"^5.1.2\",\n                \"sebastian/global-state\": \"^6.0.2\",\n                \"sebastian/object-enumerator\": \"^5.0.0\",\n                \"sebastian/recursion-context\": \"^5.0.0\",\n                \"sebastian/type\": \"^4.0.0\",\n                \"sebastian/version\": \"^4.0.1\"\n            },\n            \"suggest\": {\n                \"ext-soap\": \"To be able to generate mocks based on WSDL files\"\n            },\n            \"bin\": [\n                \"phpunit\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"10.5-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/Framework/Assert/Functions.php\"\n                ],\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"The PHP Unit Testing framework.\",\n            \"homepage\": \"https://phpunit.de/\",\n            \"keywords\": [\n                \"phpunit\",\n                \"testing\",\n                \"xunit\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/phpunit/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/phpunit/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/phpunit/tree/10.5.40\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://phpunit.de/sponsors.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/phpunit/phpunit\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-12-21T05:49:06+00:00\"\n        },\n        {\n            \"name\": \"sebastian/cli-parser\",\n            \"version\": \"2.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/cli-parser.git\",\n                \"reference\": \"c34583b87e7b7a8055bf6c450c2c77ce32a24084\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/cli-parser/zipball/c34583b87e7b7a8055bf6c450c2c77ce32a24084\",\n                \"reference\": \"c34583b87e7b7a8055bf6c450c2c77ce32a24084\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library for parsing CLI options\",\n            \"homepage\": \"https://github.com/sebastianbergmann/cli-parser\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/cli-parser/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/cli-parser/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/cli-parser/tree/2.0.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T07:12:49+00:00\"\n        },\n        {\n            \"name\": \"sebastian/code-unit\",\n            \"version\": \"2.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/code-unit.git\",\n                \"reference\": \"a81fee9eef0b7a76af11d121767abc44c104e503\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/code-unit/zipball/a81fee9eef0b7a76af11d121767abc44c104e503\",\n                \"reference\": \"a81fee9eef0b7a76af11d121767abc44c104e503\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Collection of value objects that represent the PHP code units\",\n            \"homepage\": \"https://github.com/sebastianbergmann/code-unit\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/code-unit/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/code-unit/tree/2.0.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T06:58:43+00:00\"\n        },\n        {\n            \"name\": \"sebastian/code-unit-reverse-lookup\",\n            \"version\": \"3.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup.git\",\n                \"reference\": \"5e3a687f7d8ae33fb362c5c0743794bbb2420a1d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/code-unit-reverse-lookup/zipball/5e3a687f7d8ae33fb362c5c0743794bbb2420a1d\",\n                \"reference\": \"5e3a687f7d8ae33fb362c5c0743794bbb2420a1d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Looks up which function or method a line of code belongs to\",\n            \"homepage\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup/\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup/tree/3.0.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T06:59:15+00:00\"\n        },\n        {\n            \"name\": \"sebastian/comparator\",\n            \"version\": \"5.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/comparator.git\",\n                \"reference\": \"a18251eb0b7a2dcd2f7aa3d6078b18545ef0558e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/comparator/zipball/a18251eb0b7a2dcd2f7aa3d6078b18545ef0558e\",\n                \"reference\": \"a18251eb0b7a2dcd2f7aa3d6078b18545ef0558e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"php\": \">=8.1\",\n                \"sebastian/diff\": \"^5.0\",\n                \"sebastian/exporter\": \"^5.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"5.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Jeff Welch\",\n                    \"email\": \"whatthejeff@gmail.com\"\n                },\n                {\n                    \"name\": \"Volker Dusch\",\n                    \"email\": \"github@wallbash.com\"\n                },\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@2bepublished.at\"\n                }\n            ],\n            \"description\": \"Provides the functionality to compare PHP values for equality\",\n            \"homepage\": \"https://github.com/sebastianbergmann/comparator\",\n            \"keywords\": [\n                \"comparator\",\n                \"compare\",\n                \"equality\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/comparator/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/comparator/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/comparator/tree/5.0.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-10-18T14:56:07+00:00\"\n        },\n        {\n            \"name\": \"sebastian/complexity\",\n            \"version\": \"3.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/complexity.git\",\n                \"reference\": \"68ff824baeae169ec9f2137158ee529584553799\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/complexity/zipball/68ff824baeae169ec9f2137158ee529584553799\",\n                \"reference\": \"68ff824baeae169ec9f2137158ee529584553799\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"nikic/php-parser\": \"^4.18 || ^5.0\",\n                \"php\": \">=8.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library for calculating the complexity of PHP code units\",\n            \"homepage\": \"https://github.com/sebastianbergmann/complexity\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/complexity/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/complexity/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/complexity/tree/3.2.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-12-21T08:37:17+00:00\"\n        },\n        {\n            \"name\": \"sebastian/diff\",\n            \"version\": \"5.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/diff.git\",\n                \"reference\": \"c41e007b4b62af48218231d6c2275e4c9b975b2e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/diff/zipball/c41e007b4b62af48218231d6c2275e4c9b975b2e\",\n                \"reference\": \"c41e007b4b62af48218231d6c2275e4c9b975b2e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.0\",\n                \"symfony/process\": \"^6.4\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"5.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Kore Nordmann\",\n                    \"email\": \"mail@kore-nordmann.de\"\n                }\n            ],\n            \"description\": \"Diff implementation\",\n            \"homepage\": \"https://github.com/sebastianbergmann/diff\",\n            \"keywords\": [\n                \"diff\",\n                \"udiff\",\n                \"unidiff\",\n                \"unified diff\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/diff/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/diff/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/diff/tree/5.1.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T07:15:17+00:00\"\n        },\n        {\n            \"name\": \"sebastian/environment\",\n            \"version\": \"6.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/environment.git\",\n                \"reference\": \"8074dbcd93529b357029f5cc5058fd3e43666984\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/environment/zipball/8074dbcd93529b357029f5cc5058fd3e43666984\",\n                \"reference\": \"8074dbcd93529b357029f5cc5058fd3e43666984\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"suggest\": {\n                \"ext-posix\": \"*\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"6.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Provides functionality to handle HHVM/PHP environments\",\n            \"homepage\": \"https://github.com/sebastianbergmann/environment\",\n            \"keywords\": [\n                \"Xdebug\",\n                \"environment\",\n                \"hhvm\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/environment/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/environment/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/environment/tree/6.1.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-23T08:47:14+00:00\"\n        },\n        {\n            \"name\": \"sebastian/exporter\",\n            \"version\": \"5.1.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/exporter.git\",\n                \"reference\": \"955288482d97c19a372d3f31006ab3f37da47adf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/exporter/zipball/955288482d97c19a372d3f31006ab3f37da47adf\",\n                \"reference\": \"955288482d97c19a372d3f31006ab3f37da47adf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-mbstring\": \"*\",\n                \"php\": \">=8.1\",\n                \"sebastian/recursion-context\": \"^5.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"5.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Jeff Welch\",\n                    \"email\": \"whatthejeff@gmail.com\"\n                },\n                {\n                    \"name\": \"Volker Dusch\",\n                    \"email\": \"github@wallbash.com\"\n                },\n                {\n                    \"name\": \"Adam Harvey\",\n                    \"email\": \"aharvey@php.net\"\n                },\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@gmail.com\"\n                }\n            ],\n            \"description\": \"Provides the functionality to export PHP variables for visualization\",\n            \"homepage\": \"https://www.github.com/sebastianbergmann/exporter\",\n            \"keywords\": [\n                \"export\",\n                \"exporter\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/exporter/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/exporter/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/exporter/tree/5.1.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T07:17:12+00:00\"\n        },\n        {\n            \"name\": \"sebastian/global-state\",\n            \"version\": \"6.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/global-state.git\",\n                \"reference\": \"987bafff24ecc4c9ac418cab1145b96dd6e9cbd9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/global-state/zipball/987bafff24ecc4c9ac418cab1145b96dd6e9cbd9\",\n                \"reference\": \"987bafff24ecc4c9ac418cab1145b96dd6e9cbd9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"sebastian/object-reflector\": \"^3.0\",\n                \"sebastian/recursion-context\": \"^5.0\"\n            },\n            \"require-dev\": {\n                \"ext-dom\": \"*\",\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"6.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Snapshotting of global state\",\n            \"homepage\": \"https://www.github.com/sebastianbergmann/global-state\",\n            \"keywords\": [\n                \"global state\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/global-state/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/global-state/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/global-state/tree/6.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T07:19:19+00:00\"\n        },\n        {\n            \"name\": \"sebastian/lines-of-code\",\n            \"version\": \"2.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/lines-of-code.git\",\n                \"reference\": \"856e7f6a75a84e339195d48c556f23be2ebf75d0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/lines-of-code/zipball/856e7f6a75a84e339195d48c556f23be2ebf75d0\",\n                \"reference\": \"856e7f6a75a84e339195d48c556f23be2ebf75d0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"nikic/php-parser\": \"^4.18 || ^5.0\",\n                \"php\": \">=8.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library for counting the lines of code in PHP source code\",\n            \"homepage\": \"https://github.com/sebastianbergmann/lines-of-code\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/lines-of-code/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/lines-of-code/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/lines-of-code/tree/2.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-12-21T08:38:20+00:00\"\n        },\n        {\n            \"name\": \"sebastian/object-enumerator\",\n            \"version\": \"5.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/object-enumerator.git\",\n                \"reference\": \"202d0e344a580d7f7d04b3fafce6933e59dae906\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/object-enumerator/zipball/202d0e344a580d7f7d04b3fafce6933e59dae906\",\n                \"reference\": \"202d0e344a580d7f7d04b3fafce6933e59dae906\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"sebastian/object-reflector\": \"^3.0\",\n                \"sebastian/recursion-context\": \"^5.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"5.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Traverses array structures and object graphs to enumerate all referenced objects\",\n            \"homepage\": \"https://github.com/sebastianbergmann/object-enumerator/\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/object-enumerator/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/object-enumerator/tree/5.0.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T07:08:32+00:00\"\n        },\n        {\n            \"name\": \"sebastian/object-reflector\",\n            \"version\": \"3.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/object-reflector.git\",\n                \"reference\": \"24ed13d98130f0e7122df55d06c5c4942a577957\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/object-reflector/zipball/24ed13d98130f0e7122df55d06c5c4942a577957\",\n                \"reference\": \"24ed13d98130f0e7122df55d06c5c4942a577957\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Allows reflection of object attributes, including inherited and non-public ones\",\n            \"homepage\": \"https://github.com/sebastianbergmann/object-reflector/\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/object-reflector/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/object-reflector/tree/3.0.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T07:06:18+00:00\"\n        },\n        {\n            \"name\": \"sebastian/recursion-context\",\n            \"version\": \"5.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/recursion-context.git\",\n                \"reference\": \"05909fb5bc7df4c52992396d0116aed689f93712\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/05909fb5bc7df4c52992396d0116aed689f93712\",\n                \"reference\": \"05909fb5bc7df4c52992396d0116aed689f93712\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"5.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Jeff Welch\",\n                    \"email\": \"whatthejeff@gmail.com\"\n                },\n                {\n                    \"name\": \"Adam Harvey\",\n                    \"email\": \"aharvey@php.net\"\n                }\n            ],\n            \"description\": \"Provides functionality to recursively process PHP variables\",\n            \"homepage\": \"https://github.com/sebastianbergmann/recursion-context\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/recursion-context/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/recursion-context/tree/5.0.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T07:05:40+00:00\"\n        },\n        {\n            \"name\": \"sebastian/type\",\n            \"version\": \"4.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/type.git\",\n                \"reference\": \"462699a16464c3944eefc02ebdd77882bd3925bf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/type/zipball/462699a16464c3944eefc02ebdd77882bd3925bf\",\n                \"reference\": \"462699a16464c3944eefc02ebdd77882bd3925bf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^10.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Collection of value objects that represent the types of the PHP type system\",\n            \"homepage\": \"https://github.com/sebastianbergmann/type\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/type/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/type/tree/4.0.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T07:10:45+00:00\"\n        },\n        {\n            \"name\": \"sebastian/version\",\n            \"version\": \"4.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/version.git\",\n                \"reference\": \"c51fa83a5d8f43f1402e3f32a005e6262244ef17\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/version/zipball/c51fa83a5d8f43f1402e3f32a005e6262244ef17\",\n                \"reference\": \"c51fa83a5d8f43f1402e3f32a005e6262244ef17\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library that helps with managing the version number of Git-hosted PHP projects\",\n            \"homepage\": \"https://github.com/sebastianbergmann/version\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/version/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/version/tree/4.0.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-07T11:34:05+00:00\"\n        },\n        {\n            \"name\": \"symfony/browser-kit\",\n            \"version\": \"v6.4.13\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/browser-kit.git\",\n                \"reference\": \"65d4b3fd9556e4b5b41287bef93c671f8f9f86ab\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/browser-kit/zipball/65d4b3fd9556e4b5b41287bef93c671f8f9f86ab\",\n                \"reference\": \"65d4b3fd9556e4b5b41287bef93c671f8f9f86ab\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"symfony/dom-crawler\": \"^5.4|^6.0|^7.0\"\n            },\n            \"require-dev\": {\n                \"symfony/css-selector\": \"^5.4|^6.0|^7.0\",\n                \"symfony/http-client\": \"^5.4|^6.0|^7.0\",\n                \"symfony/mime\": \"^5.4|^6.0|^7.0\",\n                \"symfony/process\": \"^5.4|^6.0|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\BrowserKit\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Simulates the behavior of a web browser, allowing you to make requests, click on links and submit forms programmatically\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/browser-kit/tree/v6.4.13\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-10-25T15:07:50+00:00\"\n        },\n        {\n            \"name\": \"symfony/dom-crawler\",\n            \"version\": \"v6.4.16\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/dom-crawler.git\",\n                \"reference\": \"4304e6ad5c894a9c72831ad459f627bfd35d766d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/dom-crawler/zipball/4304e6ad5c894a9c72831ad459f627bfd35d766d\",\n                \"reference\": \"4304e6ad5c894a9c72831ad459f627bfd35d766d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"masterminds/html5\": \"^2.6\",\n                \"php\": \">=8.1\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-mbstring\": \"~1.0\"\n            },\n            \"require-dev\": {\n                \"symfony/css-selector\": \"^5.4|^6.0|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\DomCrawler\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Eases DOM navigation for HTML and XML documents\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/dom-crawler/tree/v6.4.16\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-13T15:06:22+00:00\"\n        },\n        {\n            \"name\": \"symfony/error-handler\",\n            \"version\": \"v6.4.14\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/error-handler.git\",\n                \"reference\": \"9e024324511eeb00983ee76b9aedc3e6ecd993d9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/error-handler/zipball/9e024324511eeb00983ee76b9aedc3e6ecd993d9\",\n                \"reference\": \"9e024324511eeb00983ee76b9aedc3e6ecd993d9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"psr/log\": \"^1|^2|^3\",\n                \"symfony/var-dumper\": \"^5.4|^6.0|^7.0\"\n            },\n            \"conflict\": {\n                \"symfony/deprecation-contracts\": \"<2.5\",\n                \"symfony/http-kernel\": \"<6.4\"\n            },\n            \"require-dev\": {\n                \"symfony/deprecation-contracts\": \"^2.5|^3\",\n                \"symfony/http-kernel\": \"^6.4|^7.0\",\n                \"symfony/serializer\": \"^5.4|^6.0|^7.0\"\n            },\n            \"bin\": [\n                \"Resources/bin/patch-type-declarations\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\ErrorHandler\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides tools to manage errors and ease debugging PHP code\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/error-handler/tree/v6.4.14\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-05T15:34:40+00:00\"\n        },\n        {\n            \"name\": \"symfony/http-kernel\",\n            \"version\": \"v6.4.16\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/http-kernel.git\",\n                \"reference\": \"8838b5b21d807923b893ccbfc2cbeda0f1bc00f0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/http-kernel/zipball/8838b5b21d807923b893ccbfc2cbeda0f1bc00f0\",\n                \"reference\": \"8838b5b21d807923b893ccbfc2cbeda0f1bc00f0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"psr/log\": \"^1|^2|^3\",\n                \"symfony/deprecation-contracts\": \"^2.5|^3\",\n                \"symfony/error-handler\": \"^6.4|^7.0\",\n                \"symfony/event-dispatcher\": \"^5.4|^6.0|^7.0\",\n                \"symfony/http-foundation\": \"^6.4|^7.0\",\n                \"symfony/polyfill-ctype\": \"^1.8\"\n            },\n            \"conflict\": {\n                \"symfony/browser-kit\": \"<5.4\",\n                \"symfony/cache\": \"<5.4\",\n                \"symfony/config\": \"<6.1\",\n                \"symfony/console\": \"<5.4\",\n                \"symfony/dependency-injection\": \"<6.4\",\n                \"symfony/doctrine-bridge\": \"<5.4\",\n                \"symfony/form\": \"<5.4\",\n                \"symfony/http-client\": \"<5.4\",\n                \"symfony/http-client-contracts\": \"<2.5\",\n                \"symfony/mailer\": \"<5.4\",\n                \"symfony/messenger\": \"<5.4\",\n                \"symfony/translation\": \"<5.4\",\n                \"symfony/translation-contracts\": \"<2.5\",\n                \"symfony/twig-bridge\": \"<5.4\",\n                \"symfony/validator\": \"<6.4\",\n                \"symfony/var-dumper\": \"<6.3\",\n                \"twig/twig\": \"<2.13\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0|2.0|3.0\"\n            },\n            \"require-dev\": {\n                \"psr/cache\": \"^1.0|^2.0|^3.0\",\n                \"symfony/browser-kit\": \"^5.4|^6.0|^7.0\",\n                \"symfony/clock\": \"^6.2|^7.0\",\n                \"symfony/config\": \"^6.1|^7.0\",\n                \"symfony/console\": \"^5.4|^6.0|^7.0\",\n                \"symfony/css-selector\": \"^5.4|^6.0|^7.0\",\n                \"symfony/dependency-injection\": \"^6.4|^7.0\",\n                \"symfony/dom-crawler\": \"^5.4|^6.0|^7.0\",\n                \"symfony/expression-language\": \"^5.4|^6.0|^7.0\",\n                \"symfony/finder\": \"^5.4|^6.0|^7.0\",\n                \"symfony/http-client-contracts\": \"^2.5|^3\",\n                \"symfony/process\": \"^5.4|^6.0|^7.0\",\n                \"symfony/property-access\": \"^5.4.5|^6.0.5|^7.0\",\n                \"symfony/routing\": \"^5.4|^6.0|^7.0\",\n                \"symfony/serializer\": \"^6.4.4|^7.0.4\",\n                \"symfony/stopwatch\": \"^5.4|^6.0|^7.0\",\n                \"symfony/translation\": \"^5.4|^6.0|^7.0\",\n                \"symfony/translation-contracts\": \"^2.5|^3\",\n                \"symfony/uid\": \"^5.4|^6.0|^7.0\",\n                \"symfony/validator\": \"^6.4|^7.0\",\n                \"symfony/var-dumper\": \"^5.4|^6.4|^7.0\",\n                \"symfony/var-exporter\": \"^6.2|^7.0\",\n                \"twig/twig\": \"^2.13|^3.0.4\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\HttpKernel\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides a structured process for converting a Request into a Response\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/http-kernel/tree/v6.4.16\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-27T12:49:36+00:00\"\n        },\n        {\n            \"name\": \"symfony/panther\",\n            \"version\": \"v2.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/panther.git\",\n                \"reference\": \"ef9a6f2393ac9679af03a93d3f508e4aa65c15b5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/panther/zipball/ef9a6f2393ac9679af03a93d3f508e4aa65c15b5\",\n                \"reference\": \"ef9a6f2393ac9679af03a93d3f508e4aa65c15b5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"php\": \">=8.0\",\n                \"php-webdriver/webdriver\": \"^1.8.2\",\n                \"symfony/browser-kit\": \"^5.3 || ^6.0 || ^7.0\",\n                \"symfony/dependency-injection\": \"^5.3 || ^6.0 || ^7.0\",\n                \"symfony/deprecation-contracts\": \"^2.4 || ^3\",\n                \"symfony/dom-crawler\": \"^5.3 || ^6.0 || ^7.0\",\n                \"symfony/http-client\": \"^5.3 || ^6.0 || ^7.0\",\n                \"symfony/http-kernel\": \"^5.3 || ^6.0 || ^7.0\",\n                \"symfony/process\": \"^5.3 || ^6.0 || ^7.0\"\n            },\n            \"require-dev\": {\n                \"symfony/css-selector\": \"^5.3 || ^6.0 || ^7.0\",\n                \"symfony/framework-bundle\": \"^5.3 || ^6.0 || ^7.0\",\n                \"symfony/mime\": \"^5.3 || ^6.0 || ^7.0\",\n                \"symfony/phpunit-bridge\": \"^5.3 || ^6.0 || ^7.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Panther\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Kévin Dunglas\",\n                    \"email\": \"dunglas@gmail.com\",\n                    \"homepage\": \"https://dunglas.fr\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"A browser testing and web scraping library for PHP and Symfony.\",\n            \"homepage\": \"https://dunglas.fr\",\n            \"keywords\": [\n                \"e2e\",\n                \"scraping\",\n                \"selenium\",\n                \"symfony\",\n                \"testing\",\n                \"webdriver\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/symfony/panther/issues\",\n                \"source\": \"https://github.com/symfony/panther/tree/v2.1.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.panthera.org/donate\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/dunglas\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/panther\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-12-03T22:17:31+00:00\"\n        },\n        {\n            \"name\": \"symfony/var-dumper\",\n            \"version\": \"v6.4.15\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/var-dumper.git\",\n                \"reference\": \"38254d5a5ac2e61f2b52f9caf54e7aa3c9d36b80\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/var-dumper/zipball/38254d5a5ac2e61f2b52f9caf54e7aa3c9d36b80\",\n                \"reference\": \"38254d5a5ac2e61f2b52f9caf54e7aa3c9d36b80\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"symfony/deprecation-contracts\": \"^2.5|^3\",\n                \"symfony/polyfill-mbstring\": \"~1.0\"\n            },\n            \"conflict\": {\n                \"symfony/console\": \"<5.4\"\n            },\n            \"require-dev\": {\n                \"ext-iconv\": \"*\",\n                \"symfony/console\": \"^5.4|^6.0|^7.0\",\n                \"symfony/error-handler\": \"^6.3|^7.0\",\n                \"symfony/http-kernel\": \"^5.4|^6.0|^7.0\",\n                \"symfony/process\": \"^5.4|^6.0|^7.0\",\n                \"symfony/uid\": \"^5.4|^6.0|^7.0\",\n                \"twig/twig\": \"^2.13|^3.0.4\"\n            },\n            \"bin\": [\n                \"Resources/bin/var-dump-server\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"Resources/functions/dump.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\VarDumper\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides mechanisms for walking through any arbitrary PHP variable\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"debug\",\n                \"dump\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/var-dumper/tree/v6.4.15\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-08T15:28:48+00:00\"\n        },\n        {\n            \"name\": \"theseer/tokenizer\",\n            \"version\": \"1.2.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/theseer/tokenizer.git\",\n                \"reference\": \"737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/theseer/tokenizer/zipball/737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2\",\n                \"reference\": \"737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-tokenizer\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"A small library for converting tokenized PHP source code into XML and potentially other formats\",\n            \"support\": {\n                \"issues\": \"https://github.com/theseer/tokenizer/issues\",\n                \"source\": \"https://github.com/theseer/tokenizer/tree/1.2.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/theseer\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-03T12:36:25+00:00\"\n        },\n        {\n            \"name\": \"zircote/swagger-php\",\n            \"version\": \"3.3.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/zircote/swagger-php.git\",\n                \"reference\": \"e8c3bb316e385e93a0c7e8b2aa0681079244c381\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/zircote/swagger-php/zipball/e8c3bb316e385e93a0c7e8b2aa0681079244c381\",\n                \"reference\": \"e8c3bb316e385e93a0c7e8b2aa0681079244c381\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/annotations\": \"^1.7\",\n                \"ext-json\": \"*\",\n                \"php\": \">=7.2\",\n                \"psr/log\": \"^1.1 || ^2.0 || ^3.0\",\n                \"symfony/finder\": \">=2.2\",\n                \"symfony/yaml\": \">=3.3\"\n            },\n            \"require-dev\": {\n                \"composer/package-versions-deprecated\": \"1.11.99.2\",\n                \"friendsofphp/php-cs-fixer\": \"^2.17 || ^3.0\",\n                \"phpunit/phpunit\": \">=8.5.14\"\n            },\n            \"bin\": [\n                \"bin/openapi\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/functions.php\"\n                ],\n                \"psr-4\": {\n                    \"OpenApi\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"Apache-2.0\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Robert Allen\",\n                    \"email\": \"zircote@gmail.com\"\n                },\n                {\n                    \"name\": \"Bob Fanger\",\n                    \"email\": \"bfanger@gmail.com\",\n                    \"homepage\": \"https://bfanger.nl\"\n                },\n                {\n                    \"name\": \"Martin Rademacher\",\n                    \"email\": \"mano@radebatz.net\",\n                    \"homepage\": \"https://radebatz.net\"\n                }\n            ],\n            \"description\": \"swagger-php - Generate interactive documentation for your RESTful API using phpdoc annotations\",\n            \"homepage\": \"https://github.com/zircote/swagger-php/\",\n            \"keywords\": [\n                \"api\",\n                \"json\",\n                \"rest\",\n                \"service discovery\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/zircote/swagger-php/issues\",\n                \"source\": \"https://github.com/zircote/swagger-php/tree/3.3.7\"\n            },\n            \"time\": \"2023-01-03T21:17:10+00:00\"\n        }\n    ],\n    \"aliases\": [],\n    \"minimum-stability\": \"stable\",\n    \"stability-flags\": [],\n    \"prefer-stable\": false,\n    \"prefer-lowest\": false,\n    \"platform\": {\n        \"php\": \">=8.1.0\"\n    },\n    \"platform-dev\": [],\n    \"platform-overrides\": {\n        \"php\": \"8.1\",\n        \"ext-intl\": \"8.1\"\n    },\n    \"plugin-api-version\": \"2.6.0\"\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "controller.php",
          "type": "blob",
          "size": 0.1064453125,
          "content": "<?php\n\nrequire_once(\"interface/globals.php\");\n\n$controller = new Controller();\necho $controller->act($_GET);\n"
        },
        {
          "name": "controllers",
          "type": "tree",
          "content": null
        },
        {
          "name": "custom",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-version",
          "type": "blob",
          "size": 0.001953125,
          "content": "6\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "gacl",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 21.0458984375,
          "content": "\"use strict\";\n\n// modules\nconst csso = require('gulp-csso');\nconst del = require('del');\nconst fs = require('fs');\nconst glob = require('glob');\nconst gap = require('gulp-append-prepend');\nconst replace = require('replace-in-file');\nconst gulp = require('gulp');\nconst argv = require('minimist')(process.argv.slice(2));\nconst gulpif = require('gulp-if');\nconst prefix = require('autoprefixer');\nconst postcss = require('gulp-postcss');\nconst rename = require('gulp-rename');\nconst sass = require('gulp-dart-sass');\nconst sourcemaps = require('gulp-sourcemaps');\nconst gulp_watch = require('gulp-watch');\nconst injector = require('gulp-inject-string');\nconst colors = require('colors');\n\n// package.json\nconst packages = require('./package.json');\n\nconst logprefix = \"[OpenEMR]\".bold.cyan + \" \";\n\n// configuration\nlet config = {\n    all: [], // must always be empty\n\n    // Command Line Arguments\n    dev: argv['dev'],\n    build: argv['b'],\n    install: argv['i'],\n\n    // Source file locations\n    src: {\n        styles: {\n            style_tabs: 'interface/themes/tabs_style_*.scss',\n            style_uni: 'interface/themes/oe-styles/style_*.scss',\n            style_color: 'interface/themes/colors/*.scss',\n            directional: 'interface/themes/directional.scss',\n            misc: 'interface/themes/misc/**/*.scss',\n            style_other: 'interface/themes/style*.scss'\n        }\n    },\n    dist: {\n        assets: 'public/assets/'\n    },\n    dest: {\n        themes: 'public/themes',\n        misc_themes: 'public/themes/misc'\n    }\n};\n\nif (config.install) {\n    console.log(\"\\nCopying OpenEMR dependencies using Gulp\".bold.yellow + \"\\n\");\n} else if (config.build) {\n    console.log(\"\\nBuilding OpenEMR themes using Gulp\".bold.yellow + \"\\n\");\n} else if (config.dev) {\n    console.log(\"\\nBuilding OpenEMR themes using Dev Flag for Gulp\".bold.yellow + \"\\n\");\n} else if (config.all) {\n    console.log(\"\\nBuilding OpenEMR themes using All Flag for Gulp\".bold.yellow + \"\\n\");\n} else {\n    // This is used for gulp watch & other misc things\n    console.log(\"\\nRunning Gulp for OpenEMR\".bold.yellow + \"\\n\");\n}\n\nfunction log_error(isSuccess, err) {\n    isSuccess = false;\n    console.error(logprefix + \"An error occured! Check the log for details.\");\n    // Log error to console\n    console.error(err.toString().red);\n    // Kills gulp on error since if we keep running it will\n    // still fail\n    process.exit(1);\n}\n\n// Clean up lingering static themes\nfunction clean(done) {\n    del.sync([config.dest.themes + \"/*\"]);\n    done();\n}\n\n// Parses command line arguments\nfunction ingest(done) {\n    if (config.dev && typeof config.dev !== \"boolean\") {\n        config.dev = true;\n    }\n    done();\n}\n\n// definition of header for all compiled css\nconst autoGeneratedHeader = `\n/*! This style sheet was autogenerated using gulp + scss\n *  For usage instructions, see: https://github.com/openemr/openemr/blob/master/interface/README.md\n */\n`;\n\nfunction styles_style_other() {\n    let isSuccess = true;\n    return gulp.src(config.src.styles.style_other)\n    .pipe(sourcemaps.init())\n    .pipe(sass().on('error', (err) => {\n        log_error(isSuccess, err);\n    }))\n    .pipe(postcss([prefix()]))\n    .pipe(gap.prependText(autoGeneratedHeader))\n    .pipe(gulpif(!config.dev, csso()))\n    .pipe(gulpif(!config.dev, sourcemaps.write()))\n    .on('error', (err) => {\n        log_error(isSuccess, err);\n    })\n    .pipe(gulp.dest(config.dest.themes))\n    .on('end', () => {\n        if (isSuccess) {\n            console.log(logprefix + \"Finished compiling OpenEMR root other styles\");\n        }\n    });\n}\n\n// standard themes css compilation\nfunction styles_style_uni() {\n    let isSuccess = true;\n    return gulp.src(config.src.styles.style_uni)\n        .pipe(gap.prependText('$compact-theme: false;\\n'))\n        .pipe(injector.replace('// bs4import', '@import \"../../../public/assets/bootstrap/scss/bootstrap\";'))\n        .pipe(sourcemaps.init())\n        .pipe(sass().on('error', (err) => {\n            log_error(isSuccess, err);\n        }))\n        .pipe(postcss([prefix()]))\n        .pipe(gap.prependText(autoGeneratedHeader))\n        .pipe(gulpif(!config.dev, csso()))\n        .pipe(gulpif(!config.dev, sourcemaps.write()))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        })\n        .pipe(gulp.dest(config.dest.themes))\n        .on('end', () => {\n            if (isSuccess) {\n                console.log(logprefix + \"Finished compiling OpenEMR base themes\");\n            }\n        });\n}\n\n// standard themes compact css compilation\nfunction styles_style_uni_compact() {\n    let isSuccess = true;\n    return gulp.src(config.src.styles.style_uni)\n        .pipe(gap.prependText('@import \"../compact-theme-defaults\";\\n'))\n        .pipe(injector.replace('// bs4import', '@import \"../oemr_compact_imports\";'))\n        .pipe(sourcemaps.init())\n        .pipe(sass().on('error', (err) => {\n            log_error(isSuccess, err);\n        }))\n        .pipe(postcss([prefix()]))\n        .pipe(gap.prependText(autoGeneratedHeader))\n        .pipe(gulpif(!config.dev, csso()))\n        .pipe(gulpif(!config.dev, sourcemaps.write()))\n        .pipe(rename({\n            prefix: \"compact_\"\n        }))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        })\n        .pipe(gulp.dest(config.dest.themes))\n        .on('end', () => {\n            if (isSuccess) {\n                console.log(logprefix + \"Finished compiling OpenEMR compact base themes\");\n            }\n        });\n}\n\n// color themes css compilation\nfunction styles_style_color() {\n    let isSuccess = true;\n    return gulp.src(config.src.styles.style_color)\n        .pipe(gap.prependText('$compact-theme: false;\\n'))\n        .pipe(injector.replace('// bs4import', '@import \"../../../public/assets/bootstrap/scss/bootstrap\";'))\n        .pipe(sourcemaps.init())\n        .pipe(sass().on('error', (err) => {\n            log_error(isSuccess, err);\n        }))\n        .pipe(postcss([prefix()]))\n        .pipe(gap.prependText(autoGeneratedHeader))\n        .pipe(gulpif(!config.dev, csso()))\n        .pipe(gulpif(!config.dev, sourcemaps.write()))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        })\n        .pipe(gulp.dest(config.dest.themes))\n        .on('end', () => {\n            if (isSuccess) {\n                console.log(logprefix + \"Finished compiling OpenEMR color themes\");\n            }\n        });\n}\n\n// color themes compact css compilation\nfunction styles_style_color_compact() {\n    let isSuccess = true;\n    return gulp.src(config.src.styles.style_color)\n        .pipe(gap.prependText('@import \"../compact-theme-defaults\";\\n'))\n        .pipe(injector.replace('// bs4import', '@import \"../oemr_compact_imports\";'))\n        .pipe(sourcemaps.init())\n        .pipe(sass().on('error', (err) => {\n            log_error(isSuccess, err);\n        }))\n        .pipe(postcss([prefix()]))\n        .pipe(gap.prependText(autoGeneratedHeader))\n        .pipe(gulpif(!config.dev, csso()))\n        .pipe(gulpif(!config.dev, sourcemaps.write()))\n        .pipe(rename({\n            prefix: \"compact_\"\n        }))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        })\n        .pipe(gulp.dest(config.dest.themes))\n        .on('end', () => {\n            if (isSuccess) {\n                console.log(logprefix + \"Finished compiling OpenEMR compact color themes\");\n            }\n        });\n}\n\n// Tabs CSS compilation\nfunction styles_style_tabs() {\n    let isSuccess = true;\n    return gulp.src(config.src.styles.style_tabs)\n        .pipe(sourcemaps.init())\n        .pipe(sass().on('error', (err) => {\n            log_error(isSuccess, err);\n        }))\n        .pipe(postcss([prefix()]))\n        .pipe(gap.prependText(autoGeneratedHeader))\n        .pipe(gulpif(!config.dev, csso()))\n        .pipe(gulpif(!config.dev, sourcemaps.write()))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        })\n        .pipe(gulp.dest(config.dest.themes))\n        .on('end', () => {\n            if (isSuccess) {\n                console.log(logprefix + \"Finished compiling OpenEMR tab navigation styles\");\n            }\n        });\n}\n\n// For anything else that needs to be moved, use misc themes\nfunction styles_style_misc() {\n    let isSuccess = true;\n    return gulp.src(config.src.styles.misc)\n        .pipe(sourcemaps.init())\n        .pipe(sass().on('error', (err) => {\n            log_error(isSuccess, err);\n        }))\n        .pipe(postcss([prefix()]))\n        .pipe(gap.prependText(autoGeneratedHeader))\n        .pipe(gulpif(!config.dev, csso()))\n        .pipe(gulpif(!config.dev, sourcemaps.write()))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        })\n        .pipe(gulp.dest(config.dest.misc_themes))\n        .on('end', () => {\n            if (isSuccess) {\n                console.log(logprefix + \"Finished compiling miscellaneous styles\");\n            }\n        });\n}\n\n// rtl standard themes css compilation\nfunction rtl_style_uni() {\n    let isSuccess = true;\n    return gulp.src(config.src.styles.style_uni)\n        .pipe(gap.prependText('$compact-theme: false;\\n$dir: rtl;\\n@import \"../rtl\";\\n')) // watch out for this relative path!\n        .pipe(gap.appendText('@include if-rtl { @include rtl_style; #bigCal { border-right: 1px solid $black !important; } }\\n'))\n        .pipe(injector.replace('// bs4import', '@import \"../oemr-rtl\";'))\n        .pipe(sourcemaps.init())\n        .pipe(sass().on('error', (err) => {\n            log_error(isSuccess, err);\n        }))\n        .pipe(postcss([prefix()]))\n        .pipe(gap.prependText(autoGeneratedHeader))\n        .pipe(gulpif(!config.dev, csso()))\n        .pipe(gulpif(!config.dev, sourcemaps.write()))\n        .pipe(rename({\n            prefix: \"rtl_\"\n        }))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        })\n        .pipe(gulp.dest(config.dest.themes))\n        .on('end', () => {\n            if (isSuccess) {\n                console.log(logprefix + \"Finished compiling RTL base themes\");\n            }\n        });\n}\n\n// rtl standard themes compact css compilation\nfunction rtl_style_uni_compact() {\n    let isSuccess = true;\n    return gulp.src(config.src.styles.style_uni)\n        .pipe(gap.prependText('@import \"../compact-theme-defaults\";\\n'))\n        .pipe(gap.prependText('$dir: rtl;\\n@import \"../rtl\";\\n')) // watch out for this relative path!\n        .pipe(gap.appendText('@include if-rtl { @include rtl_style; #bigCal { border-right: 1px solid $black !important; } }\\n'))\n        .pipe(injector.replace('// bs4import', '@import \"../oemr_rtl_compact_imports\";'))\n        .pipe(sourcemaps.init())\n        .pipe(sass().on('error', (err) => {\n            log_error(isSuccess, err);\n        }))\n        .pipe(postcss([prefix()]))\n        .pipe(gap.prependText(autoGeneratedHeader))\n        .pipe(gulpif(!config.dev, csso()))\n        .pipe(gulpif(!config.dev, sourcemaps.write()))\n        .pipe(rename({\n            prefix: \"rtl_compact_\"\n        }))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        })\n        .pipe(gulp.dest(config.dest.themes))\n        .on('end', () => {\n            if (isSuccess) {\n                console.log(logprefix + \"Finished compiling RTL base compact themes\");\n            }\n        });\n}\n\n// rtl color themes css compilation\nfunction rtl_style_color() {\n    let isSuccess = true;\n    return gulp.src(config.src.styles.style_color)\n        .pipe(gap.prependText('$compact-theme: false;\\n$dir: rtl;\\n@import \"../rtl\";\\n')) // watch out for this relative path!\n        .pipe(gap.appendText('@include if-rtl { @include rtl_style; #bigCal { border-right: 1px solid $black !important; } }\\n'))\n        .pipe(injector.replace('// bs4import', '@import \"../oemr-rtl\";'))\n        .pipe(sourcemaps.init())\n        .pipe(sass().on('error', (err) => {\n            log_error(isSuccess, err);\n        }))\n        .pipe(postcss([prefix()]))\n        .pipe(gap.prependText(autoGeneratedHeader))\n        .pipe(gulpif(!config.dev, csso()))\n        .pipe(gulpif(!config.dev, sourcemaps.write()))\n        .pipe(rename({\n            prefix: \"rtl_\"\n        }))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        })\n        .pipe(gulp.dest(config.dest.themes))\n        .on('end', () => {\n            if (isSuccess) {\n                console.log(logprefix + \"Compiled OpenEMR RTL color themes\");\n            }\n        });\n}\n\n// rtl color themes compact css compilation\nfunction rtl_style_color_compact() {\n    let isSuccess = true;\n    return gulp.src(config.src.styles.style_color)\n        .pipe(gap.prependText('@import \"../compact-theme-defaults\";\\n'))\n        .pipe(gap.prependText('$dir: rtl;\\n@import \"../rtl\";\\n')) // watch out for this relative path!\n        .pipe(gap.appendText('@include if-rtl { @include rtl_style; #bigCal { border-right: 1px solid $black !important; } }\\n'))\n        .pipe(injector.replace('// bs4import', '@import \"../oemr_rtl_compact_imports\";'))\n        .pipe(sourcemaps.init())\n        .pipe(sass().on('error', (err) => {\n            log_error(isSuccess, err);\n        }))\n        .pipe(postcss([prefix()]))\n        .pipe(gap.prependText(autoGeneratedHeader))\n        .pipe(gulpif(!config.dev, csso()))\n        .pipe(gulpif(!config.dev, sourcemaps.write()))\n        .pipe(rename({\n            prefix: \"rtl_compact_\"\n        }))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        })\n        .pipe(gulp.dest(config.dest.themes))\n        .on('end', () => {\n            if (isSuccess) {\n                console.log(logprefix + \"Finished compiling RTL compact color themes\");\n            }\n        });\n}\n\n// rtl standard themes css compilation\nfunction rtl_style_tabs() {\n    let isSuccess = true;\n    return gulp.src(config.src.styles.style_tabs)\n        .pipe(gap.prependText('$dir: rtl;\\n@import \"rtl\";\\n')) // watch out for this relative path!\n        .pipe(sourcemaps.init())\n        .pipe(sass().on('error', (err) => {\n            log_error(isSuccess, err);\n        }))\n        .pipe(postcss([prefix()]))\n        .pipe(gap.prependText(autoGeneratedHeader))\n        .pipe(gulpif(!config.dev, csso()))\n        .pipe(gulpif(!config.dev, sourcemaps.write()))\n        .pipe(rename({\n            prefix: \"rtl_\"\n        }))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        })\n        .pipe(gulp.dest(config.dest.themes))\n        .on('end', () => {\n            if (isSuccess) {\n                console.log(logprefix + \"Finished compiling RTL tabs styles\");\n            }\n        });\n}\n\n// For anything else that needs to be moved, use misc themes\nfunction rtl_style_misc() {\n    let isSuccess = true;\n    return gulp.src(config.src.styles.misc)\n        .pipe(gap.prependText('$dir: rtl;\\n')) // Simply a flag here due to a hierarchy possibly being created\n        .pipe(sourcemaps.init())\n        .pipe(sass().on('error', (err) => {\n            log_error(isSuccess, err);\n        }))\n        .pipe(postcss([prefix()]))\n        .pipe(gap.prependText(autoGeneratedHeader))\n        .pipe(gulpif(!config.dev, csso()))\n        .pipe(gulpif(!config.dev, sourcemaps.write()))\n        .pipe(rename({\n            prefix: \"rtl_\"\n        }))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        })\n        .pipe(gulp.dest(config.dest.misc_themes))\n        .on('end', () => {\n            if (isSuccess) {\n                console.log(logprefix + \"Compiled rest of RTL SCSS\");\n            }\n        });\n}\n\n// compile themes\nconst styles = gulp.parallel(styles_style_color, styles_style_color_compact, styles_style_uni, styles_style_uni_compact, styles_style_tabs, styles_style_misc, styles_style_other, rtl_style_color, rtl_style_color_compact, rtl_style_uni, rtl_style_uni_compact, rtl_style_tabs, rtl_style_misc);\n\n// Copies (and distills, if possible) assets from node_modules to public/assets\nfunction install(done) {\n    console.log(logprefix + \"Running OpenEMR gulp install task...\");\n    // combine dependencies and napa sources into one object\n    const dependencies = packages.dependencies;\n    for (let key in packages.napa) {\n        if (Object.prototype.hasOwnProperty.call(packages.napa, key)) {\n            dependencies[key] = packages.napa[key];\n        }\n    }\n\n    for (let key in dependencies) {\n        // check if the property/key is defined in the object itself, not in parent\n        if (Object.prototype.hasOwnProperty.call(dependencies, key)) {\n            if (key == \"dwv\") {\n                // dwv is special and need to copy dist, decoders and locales\n                gulp.src(\"node_modules/\" + key + \"/dist/**/*\").pipe(\n                    gulp.dest(config.dist.assets + key + \"/dist\")\n                );\n                gulp.src(\"node_modules/\" + key + \"/decoders/**/*\").pipe(\n                    gulp.dest(config.dist.assets + key + \"/decoders\")\n                );\n                gulp.src(\"node_modules/\" + key + \"/locales/**/*\").pipe(\n                    gulp.dest(config.dist.assets + key + \"/locales\")\n                );\n            } else if (key == \"bootstrap\" || key == \"bootstrap-rtl\") {\n                // bootstrap and bootstrap-v4-rtl are special and need to copy dist and scss\n                gulp.src(\"node_modules/\" + key + \"/dist/**/*\").pipe(\n                    gulp.dest(config.dist.assets + key + \"/dist\")\n                );\n                gulp.src(\"node_modules/\" + key + \"/scss/**/*\").pipe(\n                    gulp.dest(config.dist.assets + key + \"/scss\")\n                );\n            } else if (key == \"@fortawesome/fontawesome-free\") {\n                // @fortawesome/fontawesome-free is special and need to copy css, scss, and webfonts\n                gulp.src(\"node_modules/\" + key + \"/css/**/*\").pipe(\n                    gulp.dest(config.dist.assets + key + \"/css\")\n                );\n                gulp.src(\"node_modules/\" + key + \"/scss/**/*\").pipe(\n                    gulp.dest(config.dist.assets + key + \"/scss\")\n                );\n                gulp.src(\"node_modules/\" + key + \"/webfonts/**/*\").pipe(\n                    gulp.dest(config.dist.assets + key + \"/webfonts\")\n                );\n            } else if (key == \"moment\") {\n                gulp.src(\"node_modules/\" + key + \"/min/**/*\").pipe(\n                    gulp.dest(config.dist.assets + key + \"/min\")\n                );\n                gulp.src(\"node_modules/\" + key + \"/moment.js\").pipe(\n                    gulp.dest(config.dist.assets + key)\n                );\n            } else if (fs.existsSync(\"node_modules/\" + key + \"/dist\")) {\n                // only copy dist directory, if it exists\n                gulp.src(\"node_modules/\" + key + \"/dist/**/*\").pipe(\n                    gulp.dest(config.dist.assets + key + \"/dist\")\n                );\n            } else {\n                // copy everything\n                gulp.src(\"node_modules/\" + key + \"/**/*\").pipe(\n                    gulp.dest(config.dist.assets + key)\n                );\n            }\n        }\n    }\n\n    console.log(logprefix + \"Finished running OpenEMR gulp install task\");\n    done();\n}\n\nfunction watch() {\n    let isSuccess = true;\n    console.log(logprefix + \"Running gulp watch task...\");\n    // watch all changes and re-run styles\n    gulp.watch('./interface/**/*.scss', {\n            interval: 1000,\n            mode: 'poll'\n        }, styles)\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        });\n\n    // watch php separately since autoprefix is not needed\n    gulp_watch('./interface/themes/*.php', {\n            ignoreInitial: false\n        })\n        .pipe(gulp.dest(config.dest.themes))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        });\n\n    // watch all changes to css files in themes and\n    // autoprefix them before copying to public\n    return gulp_watch('./interface/themes/*.css', {\n            ignoreInitial: false\n        })\n        .pipe(postcss([prefix()]))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        })\n        .pipe(gulp.dest(config.dest.themes))\n        .on('end', () => {\n            if (isSuccess) {\n                console.log(logprefix + \"Finished running gulp watch task\");\n            }\n        });\n}\n\nfunction sync() {\n    let isSuccess = true;\n    console.log(logprefix + \"Running gulp sync task...\");\n    // copy all leftover root-level components to the theme directory\n    // hoping this is only temporary\n    // Copy php file separately since we don't need to autoprefix them\n    gulp.src(['interface/themes/*.php'])\n        .pipe(gulp.dest(config.dest.themes))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        });\n\n    // Copy CSS files and autoprefix them\n    return gulp.src(['interface/themes/*.css'])\n        .pipe(postcss([prefix()]))\n        .on('error', (err) => {\n            log_error(isSuccess, err);\n        })\n        .pipe(gulp.dest(config.dest.themes))\n        .on('end', () => {\n            if (isSuccess) {\n                console.log(logprefix + \"Finished running gulp sync task\");\n            }\n        });\n}\n\n// Export watch task\nexports.watch = watch;\n\n// Export pertinent default task\n// - Note that the default task runs if no other task is chosen,\n//    which is generally how this script is always used (except in\n//    rare case where the user is running the watch task).\nif (config.install) {\n    exports.default = gulp.series(install);\n} else {\n    exports.default = gulp.series(clean, ingest, styles, sync);\n}\n"
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 0.9287109375,
          "content": "<?php\n\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n// Set the site ID if required.  This must be done before any database\n// access is attempted.\n\n$site_id = '';\n\nif (!empty($_GET['site'])) {\n    $site_id = $_GET['site'];\n} elseif (is_dir(\"sites/\" . ($_SERVER['HTTP_HOST'] ?? 'default'))) {\n    $site_id = ($_SERVER['HTTP_HOST'] ?? 'default');\n} else {\n    $site_id = 'default';\n}\n\nif (empty($site_id) || preg_match('/[^A-Za-z0-9\\\\-.]/', $site_id)) {\n    die(\"Site ID '\" . htmlspecialchars($site_id, ENT_NOQUOTES) . \"' contains invalid characters.\");\n}\n\nrequire_once \"sites/$site_id/sqlconf.php\";\n\nif ($config == 1) {\n    header(\"Location: interface/login/login.php?site=$site_id\");\n} else {\n    header(\"Location: setup.php?site=$site_id\");\n}\n"
        },
        {
          "name": "interface",
          "type": "tree",
          "content": null
        },
        {
          "name": "ippf_upgrade.php",
          "type": "blob",
          "size": 6.1767578125,
          "content": "<?php\n\n// Copyright (C) 2009 Rod Roark <rod@sunsetsystems.com>\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n\n// Disable PHP timeout.  This will not work in safe mode.\nini_set('max_execution_time', '0');\n\n$ignoreAuth = true; // no login required\n\nrequire_once('interface/globals.php');\nrequire_once('library/forms.inc.php');\n\nuse OpenEMR\\Core\\Header;\n\n$verbose = 0;\n$debug = 0;\n$insert_count = 0;\n\n// Create a visit form from an abortion issue.  This may be called\n// multiple times for a given issue.\n//\nfunction do_visit_form($irow, $encounter, $first)\n{\n    global $insert_count, $debug, $verbose;\n\n    $pid = $irow['pid'];\n\n  // If a gcac form already exists for this visit, get out.\n    $row = sqlQuery(\"SELECT COUNT(*) AS count FROM forms WHERE \" .\n    \"pid = '$pid' AND encounter = '$encounter' AND \" .\n    \"formdir = 'LBFgcac' AND deleted = 0\");\n    if ($row['count']) {\n        echo \"<br />*** Visit $pid.$encounter skipped, already has a GCAC visit form ***\\n\";\n        return;\n    }\n\n    $a = array(\n    'client_status' => $irow['client_status'],\n    'in_ab_proc'    => $irow['in_ab_proc'],\n    'ab_location'   => $irow['ab_location'],\n    'complications' => $irow['fol_compl'],\n    'contrameth'    => $irow['contrameth'],\n    );\n\n  // logic that applies only to the first related visit\n    if ($first) {\n        if ($a['ab_location'] == 'ma') {\n            $a['ab_location'] = 'proc';\n        }\n\n        $a['complications'] = $irow['rec_compl'];\n        $a['contrameth'] = '';\n    }\n\n    $newid = 0;\n    $didone = false;\n    foreach ($a as $field_id => $value) {\n        if ($value !== '') {\n            if ($newid) {\n                $query = \"INSERT INTO lbf_data \" .\n                \"( form_id, field_id, field_value ) \" .\n                \" VALUES ( '$newid', '$field_id', '$value' )\";\n                if ($verbose) {\n                    echo \"<br />$query\\n\";\n                }\n\n                if (!$debug) {\n                    sqlStatement($query);\n                }\n            } else {\n                $query = \"INSERT INTO lbf_data \" .\n                \"( field_id, field_value ) \" .\n                \" VALUES ( '$field_id', '$value' )\";\n                if ($verbose) {\n                    echo \"<br />$query\\n\";\n                }\n\n                if (!$debug) {\n                    $newid = sqlInsert($query);\n                }\n            }\n\n            $didone = true;\n        }\n    }\n\n    if ($newid && !$debug) {\n        addForm($encounter, 'IPPF GCAC', $newid, 'LBFgcac', $pid, 1);\n        ++$insert_count;\n    }\n\n    if (!$didone) {\n        echo \"<br />*** Empty issue skipped for visit $pid.$encounter ***\\n\";\n    }\n}\n?>\n<html>\n<head>\n    <title>OpenEMR IPPF Upgrade</title>\n    <?php Header::setupHeader(); ?>\n</head>\n<body>\n    <div class=\"container mt-3\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <h2>OpenEMR IPPF Upgrade</h2>\n            </div>\n        </div>\n        <div class=\"jumbotron p-4\">\n            <?php\n            if (!empty($_POST['form_submit'])) {\n            // If database is not utf8, convert it.\n                $trow = sqlQuery(\"SHOW CREATE DATABASE $dbase\");\n                array_shift($trow);\n                $value = array_shift($trow);\n                if (!preg_match('/SET utf8/', $value)) {\n                    echo \"<br />Converting database to UTF-8 encoding...\";\n                    $tres = sqlStatement(\"SHOW TABLES\");\n                    while ($trow = sqlFetchArray($tres)) {\n                        $value = array_shift($trow);\n                        $query = \"ALTER TABLE $value CONVERT TO CHARACTER SET utf8\";\n                        if ($verbose) {\n                            echo \"<br />$query\\n\";\n                        }\n\n                        sqlStatement($query);\n                    }\n\n                    $query = \"ALTER DATABASE $dbase CHARACTER SET utf8\";\n                    if ($verbose) {\n                        echo \"<br />$query\\n\";\n                    }\n\n                    sqlStatement($query);\n                    echo \"<br />&nbsp;\\n\";\n                }\n\n                $ires = sqlStatement(\"SELECT \" .\n                \"l.pid, l.id, l.type, l.begdate, l.title, \" .\n                \"g.client_status, g.in_ab_proc, g.ab_location, \" .\n                \"g.rec_compl, g.contrameth, g.fol_compl \" .\n                \"FROM lists AS l \" .\n                \"JOIN lists_ippf_gcac AS g ON l.type = 'ippf_gcac' AND g.id = l.id \" .\n                \"ORDER BY l.pid, l.begdate\");\n\n                while ($irow = sqlFetchArray($ires)) {\n                    $patient_id = $irow['pid'];\n                    $list_id = $irow['id'];\n                    $first = true;\n\n                    $ieres = sqlStatement(\"SELECT encounter \" .\n                    \"FROM issue_encounter \" .\n                    \"WHERE pid = '$patient_id' AND list_id = '$list_id' \" .\n                    \"ORDER BY encounter\");\n\n                    if (sqlNumRows($ieres)) {\n                        while ($ierow = sqlFetchArray($ieres)) {\n                            do_visit_form($irow, $ierow['encounter'], $first);\n                            $first = false;\n                        }\n                    } else {\n                        echo \"<br />*** Issue $list_id for pid $patient_id has no linked visits, skipped ***\\n\";\n                    }\n                }\n\n                echo \"<p class='text-success'>Done. Inserted $insert_count visit forms.</p>\\n\";\n                echo \"</body></html>\\n\";\n                exit();\n            }\n            ?>\n            <p>\n                This converts your OpenEMR database to UTF-8 encoding if it is not already,\n                and also converts GCAC issues to the corresponding visit forms.  Both of these\n                steps are needed for IPPF sites upgrading from releases prior to 2009-08-27.\n            </p>\n            <form method='post' action='ippf_upgrade.php'>\n                <button class=\"btn btn-primary btn-transmit\" type='submit' name='form_submit' value='Convert Database'>Convert Database</button>\n            </form>\n        </div>\n    </div>\n</body>\n</html>\n"
        },
        {
          "name": "jest.config.js",
          "type": "blob",
          "size": 0.9755859375,
          "content": "/** @type {import('jest').Config} */\nconst config = {\n    modulePathIgnorePatterns: [\n        'public/assets',\n        'vendor'\n    ],\n    coverageDirectory: 'coverage/js-unit',\n    collectCoverageFrom: ['**/*.js'],\n    coveragePathIgnorePatterns: [\n        'gulpfile.js',\n        'jest.config.js',\n        'node_modules',\n        'ccdaservice/node_modules',\n        'coverage',\n        'interface/forms/eye_mag/js/jquery-1-10-2',\n        'interface/forms/eye_mag/js/jquery-panelslider',\n        'interface/forms/eye_mag/js/jquery-ui-1-11-4',\n        'interface/forms/eye_mag/js/jquery-1-10-2',\n        'interface/forms/questionnaire_assessments/lforms/fhir',\n        'interface/forms/questionnaire_assessments/lforms/webcomponent',\n        'interface/modules/zend_modules/public/js/lib',\n        'interface/super/rules/www/js/cdr-multiselect',\n        'portal/patient/scripts/libs',\n        'public/assets',\n        'swagger',\n        'tests',\n        'vendor'\n    ]\n};\n  \nmodule.exports = config;\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "oauth2",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 327.751953125,
          "content": "{\n  \"name\": \"openemr-interface\",\n  \"version\": \"0.2.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"openemr-interface\",\n      \"version\": \"0.2.0\",\n      \"hasInstallScript\": true,\n      \"license\": \"GNU GPL\",\n      \"dependencies\": {\n        \"@eastdesire/jscolor\": \"2.5.1\",\n        \"@fortawesome/fontawesome-free\": \"6.4.2\",\n        \"angular\": \"1.8.3\",\n        \"angular-sanitize\": \"1.8.3\",\n        \"angular-summernote\": \"^0.8.1\",\n        \"backbone\": \"1.5.0\",\n        \"bootstrap\": \"4.6.2\",\n        \"bootswatch\": \"4.6.2\",\n        \"chart.js\": \"4.4.0\",\n        \"chartjs-adapter-date-fns\": \"3.0.0\",\n        \"checklist-model\": \"1.0.0\",\n        \"ckeditor4\": \"4.22.1\",\n        \"datatables.net\": \"1.13.6\",\n        \"datatables.net-bs4\": \"1.13.6\",\n        \"datatables.net-colreorder\": \"1.7.0\",\n        \"datatables.net-colreorder-dt\": \"1.7.0\",\n        \"datatables.net-dt\": \"1.13.6\",\n        \"datatables.net-jqui\": \"1.13.6\",\n        \"datatables.net-scroller\": \"2.2.0\",\n        \"datatables.net-scroller-jqui\": \"2.2.0\",\n        \"dompurify\": \"3.0.8\",\n        \"dropzone\": \"5.9.3\",\n        \"dwv\": \"0.27.1\",\n        \"flot\": \"4.2.6\",\n        \"hotkeys-js\": \"3.12.0\",\n        \"i18next\": \"23.5.1\",\n        \"i18next-browser-languagedetector\": \"7.1.0\",\n        \"i18next-xhr-backend\": \"3.2.2\",\n        \"interactjs\": \"1.10.19\",\n        \"jquery\": \"3.7.1\",\n        \"jquery-datetimepicker\": \"2.5.21\",\n        \"jquery-validation\": \"1.19.5\",\n        \"jspdf\": \"2.5.1\",\n        \"jszip\": \"3.10.1\",\n        \"knockout\": \"3.5.1\",\n        \"konva\": \"9.2.1\",\n        \"magic-wand-js\": \"1.0.0\",\n        \"moment\": \"2.29.4\",\n        \"numeral\": \"2.0.6\",\n        \"purecss\": \"3.0.0\",\n        \"select2\": \"4.0.13\",\n        \"sortablejs\": \"1.15.0\",\n        \"summernote\": \"^0.8.20\",\n        \"tiff\": \"git+https://github.com/seikichi/tiff.js.git\",\n        \"underscore\": \"1.13.6\",\n        \"validate.js\": \"0.13.1\"\n      },\n      \"devDependencies\": {\n        \"@types/jest\": \"29.5.5\",\n        \"autoprefixer\": \"10.4.15\",\n        \"colors\": \"1.4.0\",\n        \"del\": \"6.1.1\",\n        \"eslint\": \"8.49.0\",\n        \"eslint-plugin-import\": \"2.28.1\",\n        \"eslint-plugin-jest\": \"27.4.0\",\n        \"glob\": \"10.3.4\",\n        \"gulp\": \"4.0.2\",\n        \"gulp-append-prepend\": \"1.0.9\",\n        \"gulp-csso\": \"4.0.1\",\n        \"gulp-dart-sass\": \"1.1.0\",\n        \"gulp-if\": \"3.0.0\",\n        \"gulp-inject-string\": \"1.1.2\",\n        \"gulp-postcss\": \"9.0.1\",\n        \"gulp-rename\": \"2.0.0\",\n        \"gulp-sourcemaps\": \"3.0.0\",\n        \"gulp-watch\": \"5.0.1\",\n        \"jest\": \"29.7.0\",\n        \"minimist\": \"1.2.8\",\n        \"napa\": \"3.0.0\",\n        \"postcss\": \"8.4.30\",\n        \"replace-in-file\": \"7.0.1\",\n        \"stylelint\": \"15.10.3\",\n        \"stylelint-config-sass-guidelines\": \"10.0.0\",\n        \"stylelint-config-standard\": \"34.0.0\",\n        \"stylelint-order\": \"6.0.3\",\n        \"stylelint-scss\": \"5.2.1\"\n      }\n    },\n    \"node_modules/@aashutoshrathi/word-wrap\": {\n      \"version\": \"1.2.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/@ampproject/remapping\": {\n      \"version\": \"2.2.1\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@babel/code-frame\": {\n      \"version\": \"7.22.13\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/highlight\": \"^7.22.13\",\n        \"chalk\": \"^2.4.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"color-convert\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/chalk\": {\n      \"version\": \"2.4.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/color-convert\": {\n      \"version\": \"1.9.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/color-name\": {\n      \"version\": \"1.1.3\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@babel/code-frame/node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/compat-data\": {\n      \"version\": \"7.22.20\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/core\": {\n      \"version\": \"7.22.20\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@ampproject/remapping\": \"^2.2.0\",\n        \"@babel/code-frame\": \"^7.22.13\",\n        \"@babel/generator\": \"^7.22.15\",\n        \"@babel/helper-compilation-targets\": \"^7.22.15\",\n        \"@babel/helper-module-transforms\": \"^7.22.20\",\n        \"@babel/helpers\": \"^7.22.15\",\n        \"@babel/parser\": \"^7.22.16\",\n        \"@babel/template\": \"^7.22.15\",\n        \"@babel/traverse\": \"^7.22.20\",\n        \"@babel/types\": \"^7.22.19\",\n        \"convert-source-map\": \"^1.7.0\",\n        \"debug\": \"^4.1.0\",\n        \"gensync\": \"^1.0.0-beta.2\",\n        \"json5\": \"^2.2.3\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/babel\"\n      }\n    },\n    \"node_modules/@babel/generator\": {\n      \"version\": \"7.22.15\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.15\",\n        \"@jridgewell/gen-mapping\": \"^0.3.2\",\n        \"@jridgewell/trace-mapping\": \"^0.3.17\",\n        \"jsesc\": \"^2.5.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-compilation-targets\": {\n      \"version\": \"7.22.15\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.22.9\",\n        \"@babel/helper-validator-option\": \"^7.22.15\",\n        \"browserslist\": \"^4.21.9\",\n        \"lru-cache\": \"^5.1.1\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-environment-visitor\": {\n      \"version\": \"7.22.20\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-function-name\": {\n      \"version\": \"7.22.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/template\": \"^7.22.5\",\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-hoist-variables\": {\n      \"version\": \"7.22.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-module-imports\": {\n      \"version\": \"7.22.15\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.15\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-module-transforms\": {\n      \"version\": \"7.22.20\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-environment-visitor\": \"^7.22.20\",\n        \"@babel/helper-module-imports\": \"^7.22.15\",\n        \"@babel/helper-simple-access\": \"^7.22.5\",\n        \"@babel/helper-split-export-declaration\": \"^7.22.6\",\n        \"@babel/helper-validator-identifier\": \"^7.22.20\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-plugin-utils\": {\n      \"version\": \"7.22.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-simple-access\": {\n      \"version\": \"7.22.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-split-export-declaration\": {\n      \"version\": \"7.22.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-string-parser\": {\n      \"version\": \"7.22.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-identifier\": {\n      \"version\": \"7.22.20\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-option\": {\n      \"version\": \"7.22.15\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helpers\": {\n      \"version\": \"7.22.15\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/template\": \"^7.22.15\",\n        \"@babel/traverse\": \"^7.22.15\",\n        \"@babel/types\": \"^7.22.15\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/highlight\": {\n      \"version\": \"7.22.20\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-validator-identifier\": \"^7.22.20\",\n        \"chalk\": \"^2.4.2\",\n        \"js-tokens\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"color-convert\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/chalk\": {\n      \"version\": \"2.4.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/color-convert\": {\n      \"version\": \"1.9.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/color-name\": {\n      \"version\": \"1.1.3\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@babel/highlight/node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/parser\": {\n      \"version\": \"7.22.16\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"parser\": \"bin/babel-parser.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-async-generators\": {\n      \"version\": \"7.8.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-bigint\": {\n      \"version\": \"7.8.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-class-properties\": {\n      \"version\": \"7.12.13\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.12.13\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-import-meta\": {\n      \"version\": \"7.10.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-json-strings\": {\n      \"version\": \"7.8.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-jsx\": {\n      \"version\": \"7.22.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-logical-assignment-operators\": {\n      \"version\": \"7.10.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-nullish-coalescing-operator\": {\n      \"version\": \"7.8.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-numeric-separator\": {\n      \"version\": \"7.10.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-object-rest-spread\": {\n      \"version\": \"7.8.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-optional-catch-binding\": {\n      \"version\": \"7.8.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-optional-chaining\": {\n      \"version\": \"7.8.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-top-level-await\": {\n      \"version\": \"7.14.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-typescript\": {\n      \"version\": \"7.22.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/runtime\": {\n      \"version\": \"7.22.15\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"regenerator-runtime\": \"^0.14.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/template\": {\n      \"version\": \"7.22.15\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.22.13\",\n        \"@babel/parser\": \"^7.22.15\",\n        \"@babel/types\": \"^7.22.15\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/traverse\": {\n      \"version\": \"7.22.20\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.22.13\",\n        \"@babel/generator\": \"^7.22.15\",\n        \"@babel/helper-environment-visitor\": \"^7.22.20\",\n        \"@babel/helper-function-name\": \"^7.22.5\",\n        \"@babel/helper-hoist-variables\": \"^7.22.5\",\n        \"@babel/helper-split-export-declaration\": \"^7.22.6\",\n        \"@babel/parser\": \"^7.22.16\",\n        \"@babel/types\": \"^7.22.19\",\n        \"debug\": \"^4.1.0\",\n        \"globals\": \"^11.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/traverse/node_modules/globals\": {\n      \"version\": \"11.12.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/types\": {\n      \"version\": \"7.22.19\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-string-parser\": \"^7.22.5\",\n        \"@babel/helper-validator-identifier\": \"^7.22.19\",\n        \"to-fast-properties\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@bcoe/v8-coverage\": {\n      \"version\": \"0.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@csstools/css-parser-algorithms\": {\n      \"version\": \"2.3.1\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/csstools\"\n        },\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/csstools\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^14 || ^16 || >=18\"\n      },\n      \"peerDependencies\": {\n        \"@csstools/css-tokenizer\": \"^2.2.0\"\n      }\n    },\n    \"node_modules/@csstools/css-tokenizer\": {\n      \"version\": \"2.2.0\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/csstools\"\n        },\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/csstools\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^14 || ^16 || >=18\"\n      }\n    },\n    \"node_modules/@csstools/media-query-list-parser\": {\n      \"version\": \"2.1.4\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/csstools\"\n        },\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/csstools\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^14 || ^16 || >=18\"\n      },\n      \"peerDependencies\": {\n        \"@csstools/css-parser-algorithms\": \"^2.3.1\",\n        \"@csstools/css-tokenizer\": \"^2.2.0\"\n      }\n    },\n    \"node_modules/@csstools/selector-specificity\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/csstools\"\n        },\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/csstools\"\n        }\n      ],\n      \"license\": \"MIT-0\",\n      \"engines\": {\n        \"node\": \"^14 || ^16 || >=18\"\n      },\n      \"peerDependencies\": {\n        \"postcss-selector-parser\": \"^6.0.13\"\n      }\n    },\n    \"node_modules/@eastdesire/jscolor\": {\n      \"version\": \"2.5.1\",\n      \"license\": \"GPL-3.0-or-later\"\n    },\n    \"node_modules/@eslint-community/eslint-utils\": {\n      \"version\": \"4.4.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"eslint-visitor-keys\": \"^3.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^6.0.0 || ^7.0.0 || >=8.0.0\"\n      }\n    },\n    \"node_modules/@eslint-community/regexpp\": {\n      \"version\": \"4.8.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^12.0.0 || ^14.0.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc\": {\n      \"version\": \"2.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ajv\": \"^6.12.4\",\n        \"debug\": \"^4.3.2\",\n        \"espree\": \"^9.6.0\",\n        \"globals\": \"^13.19.0\",\n        \"ignore\": \"^5.2.0\",\n        \"import-fresh\": \"^3.2.1\",\n        \"js-yaml\": \"^4.1.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"strip-json-comments\": \"^3.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/@eslint/js\": {\n      \"version\": \"8.49.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/@fortawesome/fontawesome-free\": {\n      \"version\": \"6.4.2\",\n      \"hasInstallScript\": true,\n      \"license\": \"(CC-BY-4.0 AND OFL-1.1 AND MIT)\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/@gulp-sourcemaps/identity-map\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"acorn\": \"^6.4.1\",\n        \"normalize-path\": \"^3.0.0\",\n        \"postcss\": \"^7.0.16\",\n        \"source-map\": \"^0.6.0\",\n        \"through2\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/@gulp-sourcemaps/identity-map/node_modules/acorn\": {\n      \"version\": \"6.4.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"acorn\": \"bin/acorn\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/@gulp-sourcemaps/identity-map/node_modules/picocolors\": {\n      \"version\": \"0.2.1\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/@gulp-sourcemaps/identity-map/node_modules/postcss\": {\n      \"version\": \"7.0.39\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"picocolors\": \"^0.2.1\",\n        \"source-map\": \"^0.6.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/postcss/\"\n      }\n    },\n    \"node_modules/@gulp-sourcemaps/identity-map/node_modules/through2\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.4\",\n        \"readable-stream\": \"2 || 3\"\n      }\n    },\n    \"node_modules/@gulp-sourcemaps/map-sources\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"normalize-path\": \"^2.0.1\",\n        \"through2\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/@gulp-sourcemaps/map-sources/node_modules/normalize-path\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"remove-trailing-separator\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/@humanwhocodes/config-array\": {\n      \"version\": \"0.11.11\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@humanwhocodes/object-schema\": \"^1.2.1\",\n        \"debug\": \"^4.1.1\",\n        \"minimatch\": \"^3.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=10.10.0\"\n      }\n    },\n    \"node_modules/@humanwhocodes/module-importer\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \">=12.22\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/nzakas\"\n      }\n    },\n    \"node_modules/@humanwhocodes/object-schema\": {\n      \"version\": \"1.2.1\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/@interactjs/types\": {\n      \"version\": \"1.10.19\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@isaacs/cliui\": {\n      \"version\": \"8.0.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"string-width\": \"^5.1.2\",\n        \"string-width-cjs\": \"npm:string-width@^4.2.0\",\n        \"strip-ansi\": \"^7.0.1\",\n        \"strip-ansi-cjs\": \"npm:strip-ansi@^6.0.1\",\n        \"wrap-ansi\": \"^8.1.0\",\n        \"wrap-ansi-cjs\": \"npm:wrap-ansi@^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/ansi-regex\": {\n      \"version\": \"6.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"camelcase\": \"^5.3.1\",\n        \"find-up\": \"^4.1.0\",\n        \"get-package-type\": \"^0.1.0\",\n        \"js-yaml\": \"^3.13.1\",\n        \"resolve-from\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config/node_modules/argparse\": {\n      \"version\": \"1.0.10\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"sprintf-js\": \"~1.0.2\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config/node_modules/find-up\": {\n      \"version\": \"4.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"locate-path\": \"^5.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config/node_modules/js-yaml\": {\n      \"version\": \"3.14.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"argparse\": \"^1.0.7\",\n        \"esprima\": \"^4.0.0\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config/node_modules/locate-path\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"p-locate\": \"^4.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config/node_modules/p-limit\": {\n      \"version\": \"2.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"p-try\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config/node_modules/p-locate\": {\n      \"version\": \"4.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"p-limit\": \"^2.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config/node_modules/resolve-from\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@istanbuljs/schema\": {\n      \"version\": \"0.1.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/console\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/core\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/console\": \"^29.7.0\",\n        \"@jest/reporters\": \"^29.7.0\",\n        \"@jest/test-result\": \"^29.7.0\",\n        \"@jest/transform\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"ansi-escapes\": \"^4.2.1\",\n        \"chalk\": \"^4.0.0\",\n        \"ci-info\": \"^3.2.0\",\n        \"exit\": \"^0.1.2\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-changed-files\": \"^29.7.0\",\n        \"jest-config\": \"^29.7.0\",\n        \"jest-haste-map\": \"^29.7.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-regex-util\": \"^29.6.3\",\n        \"jest-resolve\": \"^29.7.0\",\n        \"jest-resolve-dependencies\": \"^29.7.0\",\n        \"jest-runner\": \"^29.7.0\",\n        \"jest-runtime\": \"^29.7.0\",\n        \"jest-snapshot\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"jest-validate\": \"^29.7.0\",\n        \"jest-watcher\": \"^29.7.0\",\n        \"micromatch\": \"^4.0.4\",\n        \"pretty-format\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"node-notifier\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@jest/environment\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/fake-timers\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"jest-mock\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/expect\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"expect\": \"^29.7.0\",\n        \"jest-snapshot\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/expect-utils\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jest-get-type\": \"^29.6.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/fake-timers\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"@sinonjs/fake-timers\": \"^10.0.2\",\n        \"@types/node\": \"*\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-mock\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/globals\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/environment\": \"^29.7.0\",\n        \"@jest/expect\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"jest-mock\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/reporters\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@bcoe/v8-coverage\": \"^0.2.3\",\n        \"@jest/console\": \"^29.7.0\",\n        \"@jest/test-result\": \"^29.7.0\",\n        \"@jest/transform\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@jridgewell/trace-mapping\": \"^0.3.18\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"collect-v8-coverage\": \"^1.0.0\",\n        \"exit\": \"^0.1.2\",\n        \"glob\": \"^7.1.3\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"istanbul-lib-instrument\": \"^6.0.0\",\n        \"istanbul-lib-report\": \"^3.0.0\",\n        \"istanbul-lib-source-maps\": \"^4.0.0\",\n        \"istanbul-reports\": \"^3.1.3\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"jest-worker\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\",\n        \"string-length\": \"^4.0.1\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"v8-to-istanbul\": \"^9.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"node-notifier\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@jest/reporters/node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/@jest/schemas\": {\n      \"version\": \"29.6.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@sinclair/typebox\": \"^0.27.8\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/source-map\": {\n      \"version\": \"29.6.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jridgewell/trace-mapping\": \"^0.3.18\",\n        \"callsites\": \"^3.0.0\",\n        \"graceful-fs\": \"^4.2.9\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/test-result\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/console\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/istanbul-lib-coverage\": \"^2.0.0\",\n        \"collect-v8-coverage\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/test-sequencer\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/test-result\": \"^29.7.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-haste-map\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/transform\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/core\": \"^7.11.6\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@jridgewell/trace-mapping\": \"^0.3.18\",\n        \"babel-plugin-istanbul\": \"^6.1.1\",\n        \"chalk\": \"^4.0.0\",\n        \"convert-source-map\": \"^2.0.0\",\n        \"fast-json-stable-stringify\": \"^2.1.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-haste-map\": \"^29.7.0\",\n        \"jest-regex-util\": \"^29.6.3\",\n        \"jest-util\": \"^29.7.0\",\n        \"micromatch\": \"^4.0.4\",\n        \"pirates\": \"^4.0.4\",\n        \"slash\": \"^3.0.0\",\n        \"write-file-atomic\": \"^4.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/transform/node_modules/convert-source-map\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@jest/types\": {\n      \"version\": \"29.6.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"@types/istanbul-lib-coverage\": \"^2.0.0\",\n        \"@types/istanbul-reports\": \"^3.0.0\",\n        \"@types/node\": \"*\",\n        \"@types/yargs\": \"^17.0.8\",\n        \"chalk\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/gen-mapping\": {\n      \"version\": \"0.3.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jridgewell/set-array\": \"^1.0.1\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.10\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/resolve-uri\": {\n      \"version\": \"3.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/set-array\": {\n      \"version\": \"1.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/sourcemap-codec\": {\n      \"version\": \"1.4.15\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@jridgewell/trace-mapping\": {\n      \"version\": \"0.3.19\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jridgewell/resolve-uri\": \"^3.1.0\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.14\"\n      }\n    },\n    \"node_modules/@kurkle/color\": {\n      \"version\": \"0.3.2\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@nodelib/fs.scandir\": {\n      \"version\": \"2.1.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"2.0.5\",\n        \"run-parallel\": \"^1.1.9\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.stat\": {\n      \"version\": \"2.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.walk\": {\n      \"version\": \"1.2.8\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@nodelib/fs.scandir\": \"2.1.5\",\n        \"fastq\": \"^1.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@pkgjs/parseargs\": {\n      \"version\": \"0.11.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      }\n    },\n    \"node_modules/@sinclair/typebox\": {\n      \"version\": \"0.27.8\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@sinonjs/commons\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"type-detect\": \"4.0.8\"\n      }\n    },\n    \"node_modules/@sinonjs/fake-timers\": {\n      \"version\": \"10.3.0\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"@sinonjs/commons\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/@types/babel__core\": {\n      \"version\": \"7.20.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.20.7\",\n        \"@babel/types\": \"^7.20.7\",\n        \"@types/babel__generator\": \"*\",\n        \"@types/babel__template\": \"*\",\n        \"@types/babel__traverse\": \"*\"\n      }\n    },\n    \"node_modules/@types/babel__generator\": {\n      \"version\": \"7.6.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@types/babel__template\": {\n      \"version\": \"7.4.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.1.0\",\n        \"@babel/types\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@types/babel__traverse\": {\n      \"version\": \"7.20.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.20.7\"\n      }\n    },\n    \"node_modules/@types/graceful-fs\": {\n      \"version\": \"4.1.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/istanbul-lib-coverage\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/istanbul-lib-report\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/istanbul-lib-coverage\": \"*\"\n      }\n    },\n    \"node_modules/@types/istanbul-reports\": {\n      \"version\": \"3.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/istanbul-lib-report\": \"*\"\n      }\n    },\n    \"node_modules/@types/jest\": {\n      \"version\": \"29.5.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"expect\": \"^29.0.0\",\n        \"pretty-format\": \"^29.0.0\"\n      }\n    },\n    \"node_modules/@types/json-schema\": {\n      \"version\": \"7.0.13\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/json5\": {\n      \"version\": \"0.0.29\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/minimist\": {\n      \"version\": \"1.2.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"20.6.3\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/normalize-package-data\": {\n      \"version\": \"2.4.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/raf\": {\n      \"version\": \"3.4.0\",\n      \"license\": \"MIT\",\n      \"optional\": true\n    },\n    \"node_modules/@types/semver\": {\n      \"version\": \"7.5.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/stack-utils\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/yargs\": {\n      \"version\": \"17.0.24\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/yargs-parser\": \"*\"\n      }\n    },\n    \"node_modules/@types/yargs-parser\": {\n      \"version\": \"21.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@typescript-eslint/scope-manager\": {\n      \"version\": \"5.62.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@typescript-eslint/types\": \"5.62.0\",\n        \"@typescript-eslint/visitor-keys\": \"5.62.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      }\n    },\n    \"node_modules/@typescript-eslint/types\": {\n      \"version\": \"5.62.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      }\n    },\n    \"node_modules/@typescript-eslint/typescript-estree\": {\n      \"version\": \"5.62.0\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"@typescript-eslint/types\": \"5.62.0\",\n        \"@typescript-eslint/visitor-keys\": \"5.62.0\",\n        \"debug\": \"^4.3.4\",\n        \"globby\": \"^11.1.0\",\n        \"is-glob\": \"^4.0.3\",\n        \"semver\": \"^7.3.7\",\n        \"tsutils\": \"^3.21.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@typescript-eslint/typescript-estree/node_modules/lru-cache\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"yallist\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/@typescript-eslint/typescript-estree/node_modules/semver\": {\n      \"version\": \"7.5.4\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"lru-cache\": \"^6.0.0\"\n      },\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/@typescript-eslint/typescript-estree/node_modules/yallist\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/@typescript-eslint/utils\": {\n      \"version\": \"5.62.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@eslint-community/eslint-utils\": \"^4.2.0\",\n        \"@types/json-schema\": \"^7.0.9\",\n        \"@types/semver\": \"^7.3.12\",\n        \"@typescript-eslint/scope-manager\": \"5.62.0\",\n        \"@typescript-eslint/types\": \"5.62.0\",\n        \"@typescript-eslint/typescript-estree\": \"5.62.0\",\n        \"eslint-scope\": \"^5.1.1\",\n        \"semver\": \"^7.3.7\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^6.0.0 || ^7.0.0 || ^8.0.0\"\n      }\n    },\n    \"node_modules/@typescript-eslint/utils/node_modules/eslint-scope\": {\n      \"version\": \"5.1.1\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"esrecurse\": \"^4.3.0\",\n        \"estraverse\": \"^4.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/@typescript-eslint/utils/node_modules/estraverse\": {\n      \"version\": \"4.3.0\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/@typescript-eslint/utils/node_modules/lru-cache\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"yallist\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/@typescript-eslint/utils/node_modules/semver\": {\n      \"version\": \"7.5.4\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"lru-cache\": \"^6.0.0\"\n      },\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/@typescript-eslint/utils/node_modules/yallist\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/@typescript-eslint/visitor-keys\": {\n      \"version\": \"5.62.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@typescript-eslint/types\": \"5.62.0\",\n        \"eslint-visitor-keys\": \"^3.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      }\n    },\n    \"node_modules/acorn\": {\n      \"version\": \"8.10.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"acorn\": \"bin/acorn\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/acorn-jsx\": {\n      \"version\": \"5.3.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"peerDependencies\": {\n        \"acorn\": \"^6.0.0 || ^7.0.0 || ^8.0.0\"\n      }\n    },\n    \"node_modules/aggregate-error\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"clean-stack\": \"^2.0.0\",\n        \"indent-string\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ajv\": {\n      \"version\": \"6.12.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"fast-json-stable-stringify\": \"^2.0.0\",\n        \"json-schema-traverse\": \"^0.4.1\",\n        \"uri-js\": \"^4.2.2\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/epoberezkin\"\n      }\n    },\n    \"node_modules/angular\": {\n      \"version\": \"1.8.3\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/angular-sanitize\": {\n      \"version\": \"1.8.3\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/angular-summernote\": {\n      \"version\": \"0.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/angular-summernote/-/angular-summernote-0.8.1.tgz\",\n      \"integrity\": \"sha512-SXU8TEp4CH2Q2pH+thh4RVLieBkvgs74SN7PssUholXjo1Qr0SmC9Vwd131C9yvV4lLompCVp+IEvGzmMVB2cw==\"\n    },\n    \"node_modules/ansi-colors\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-wrap\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/ansi-escapes\": {\n      \"version\": \"4.3.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"type-fest\": \"^0.21.3\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/ansi-escapes/node_modules/type-fest\": {\n      \"version\": \"0.21.3\",\n      \"dev\": true,\n      \"license\": \"(MIT OR CC0-1.0)\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/ansi-gray\": {\n      \"version\": \"0.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-wrap\": \"0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/ansi-wrap\": {\n      \"version\": \"0.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"micromatch\": \"^3.1.4\",\n        \"normalize-path\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/anymatch/node_modules/define-property\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-descriptor\": \"^1.0.2\",\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/anymatch/node_modules/extend-shallow\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"assign-symbols\": \"^1.0.0\",\n        \"is-extendable\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/anymatch/node_modules/is-accessor-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/anymatch/node_modules/is-data-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/anymatch/node_modules/is-descriptor\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-accessor-descriptor\": \"^1.0.0\",\n        \"is-data-descriptor\": \"^1.0.0\",\n        \"kind-of\": \"^6.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/anymatch/node_modules/is-extendable\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-plain-object\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/anymatch/node_modules/is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/anymatch/node_modules/kind-of\": {\n      \"version\": \"6.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/anymatch/node_modules/micromatch\": {\n      \"version\": \"3.1.10\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"arr-diff\": \"^4.0.0\",\n        \"array-unique\": \"^0.3.2\",\n        \"braces\": \"^2.3.1\",\n        \"define-property\": \"^2.0.2\",\n        \"extend-shallow\": \"^3.0.2\",\n        \"extglob\": \"^2.0.4\",\n        \"fragment-cache\": \"^0.2.1\",\n        \"kind-of\": \"^6.0.2\",\n        \"nanomatch\": \"^1.2.9\",\n        \"object.pick\": \"^1.3.0\",\n        \"regex-not\": \"^1.0.0\",\n        \"snapdragon\": \"^0.8.1\",\n        \"to-regex\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/anymatch/node_modules/normalize-path\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"remove-trailing-separator\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/append-buffer\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"buffer-equal\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/aproba\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/archy\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/are-we-there-yet\": {\n      \"version\": \"1.1.7\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"delegates\": \"^1.0.0\",\n        \"readable-stream\": \"^2.0.6\"\n      }\n    },\n    \"node_modules/argparse\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"Python-2.0\"\n    },\n    \"node_modules/arr-diff\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/arr-filter\": {\n      \"version\": \"1.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"make-iterator\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/arr-flatten\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/arr-map\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"make-iterator\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/arr-union\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/array-buffer-byte-length\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"is-array-buffer\": \"^3.0.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array-each\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/array-includes\": {\n      \"version\": \"3.1.7\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"get-intrinsic\": \"^1.2.1\",\n        \"is-string\": \"^1.0.7\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array-initial\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"array-slice\": \"^1.0.0\",\n        \"is-number\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/array-initial/node_modules/is-number\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/array-last\": {\n      \"version\": \"1.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-number\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/array-last/node_modules/is-number\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/array-slice\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/array-sort\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"default-compare\": \"^1.0.0\",\n        \"get-value\": \"^2.0.6\",\n        \"kind-of\": \"^5.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/array-union\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/array-unique\": {\n      \"version\": \"0.3.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/array.prototype.findlastindex\": {\n      \"version\": \"1.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"es-shim-unscopables\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.flat\": {\n      \"version\": \"1.3.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"es-shim-unscopables\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.flatmap\": {\n      \"version\": \"1.3.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"es-shim-unscopables\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/arraybuffer.prototype.slice\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.0\",\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"get-intrinsic\": \"^1.2.1\",\n        \"is-array-buffer\": \"^3.0.2\",\n        \"is-shared-array-buffer\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/arrify\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/assign-symbols\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/astral-regex\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/async-done\": {\n      \"version\": \"1.3.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"end-of-stream\": \"^1.1.0\",\n        \"once\": \"^1.3.2\",\n        \"process-nextick-args\": \"^2.0.0\",\n        \"stream-exhaust\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/async-each\": {\n      \"version\": \"1.0.6\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://paulmillr.com/funding/\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/async-settle\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"async-done\": \"^1.2.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/atob\": {\n      \"version\": \"2.1.2\",\n      \"license\": \"(MIT OR Apache-2.0)\",\n      \"bin\": {\n        \"atob\": \"bin/atob.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 4.5.0\"\n      }\n    },\n    \"node_modules/autoprefixer\": {\n      \"version\": \"10.4.15\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/autoprefixer\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"browserslist\": \"^4.21.10\",\n        \"caniuse-lite\": \"^1.0.30001520\",\n        \"fraction.js\": \"^4.2.0\",\n        \"normalize-range\": \"^0.1.2\",\n        \"picocolors\": \"^1.0.0\",\n        \"postcss-value-parser\": \"^4.2.0\"\n      },\n      \"bin\": {\n        \"autoprefixer\": \"bin/autoprefixer\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || >=14\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.1.0\"\n      }\n    },\n    \"node_modules/available-typed-arrays\": {\n      \"version\": \"1.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/babel-jest\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/transform\": \"^29.7.0\",\n        \"@types/babel__core\": \"^7.1.14\",\n        \"babel-plugin-istanbul\": \"^6.1.1\",\n        \"babel-preset-jest\": \"^29.6.3\",\n        \"chalk\": \"^4.0.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.8.0\"\n      }\n    },\n    \"node_modules/babel-plugin-istanbul\": {\n      \"version\": \"6.1.1\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.0.0\",\n        \"@istanbuljs/load-nyc-config\": \"^1.0.0\",\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"istanbul-lib-instrument\": \"^5.0.4\",\n        \"test-exclude\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/babel-plugin-istanbul/node_modules/istanbul-lib-instrument\": {\n      \"version\": \"5.2.1\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"@babel/core\": \"^7.12.3\",\n        \"@babel/parser\": \"^7.14.7\",\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"istanbul-lib-coverage\": \"^3.2.0\",\n        \"semver\": \"^6.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/babel-plugin-jest-hoist\": {\n      \"version\": \"29.6.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/template\": \"^7.3.3\",\n        \"@babel/types\": \"^7.3.3\",\n        \"@types/babel__core\": \"^7.1.14\",\n        \"@types/babel__traverse\": \"^7.0.6\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/babel-preset-current-node-syntax\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\",\n        \"@babel/plugin-syntax-bigint\": \"^7.8.3\",\n        \"@babel/plugin-syntax-class-properties\": \"^7.8.3\",\n        \"@babel/plugin-syntax-import-meta\": \"^7.8.3\",\n        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\",\n        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.8.3\",\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\",\n        \"@babel/plugin-syntax-numeric-separator\": \"^7.8.3\",\n        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\",\n        \"@babel/plugin-syntax-top-level-await\": \"^7.8.3\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/babel-preset-jest\": {\n      \"version\": \"29.6.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"babel-plugin-jest-hoist\": \"^29.6.3\",\n        \"babel-preset-current-node-syntax\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/bach\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"arr-filter\": \"^1.1.1\",\n        \"arr-flatten\": \"^1.0.1\",\n        \"arr-map\": \"^2.0.0\",\n        \"array-each\": \"^1.0.0\",\n        \"array-initial\": \"^1.0.0\",\n        \"array-last\": \"^1.1.1\",\n        \"async-done\": \"^1.2.2\",\n        \"async-settle\": \"^1.0.0\",\n        \"now-and-later\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/backbone\": {\n      \"version\": \"1.5.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"underscore\": \">=1.8.3\"\n      }\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/base\": {\n      \"version\": \"0.11.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"cache-base\": \"^1.0.1\",\n        \"class-utils\": \"^0.3.5\",\n        \"component-emitter\": \"^1.2.1\",\n        \"define-property\": \"^1.0.0\",\n        \"isobject\": \"^3.0.1\",\n        \"mixin-deep\": \"^1.2.0\",\n        \"pascalcase\": \"^0.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/base/node_modules/define-property\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-descriptor\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/base/node_modules/is-accessor-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/base/node_modules/is-data-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/base/node_modules/is-descriptor\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-accessor-descriptor\": \"^1.0.0\",\n        \"is-data-descriptor\": \"^1.0.0\",\n        \"kind-of\": \"^6.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/base/node_modules/kind-of\": {\n      \"version\": \"6.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/base64-arraybuffer\": {\n      \"version\": \"1.0.2\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">= 0.6.0\"\n      }\n    },\n    \"node_modules/base64-js\": {\n      \"version\": \"1.5.1\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"1.13.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/bl\": {\n      \"version\": \"1.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"readable-stream\": \"^2.3.5\",\n        \"safe-buffer\": \"^5.1.1\"\n      }\n    },\n    \"node_modules/block-stream\": {\n      \"version\": \"0.0.9\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"inherits\": \"~2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"0.4 || >=0.5.8\"\n      }\n    },\n    \"node_modules/bootstrap\": {\n      \"version\": \"4.6.2\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/twbs\"\n        },\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/bootstrap\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"peerDependencies\": {\n        \"jquery\": \"1.9.1 - 3\",\n        \"popper.js\": \"^1.16.1\"\n      }\n    },\n    \"node_modules/bootswatch\": {\n      \"version\": \"4.6.2\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"2.3.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"arr-flatten\": \"^1.1.0\",\n        \"array-unique\": \"^0.3.2\",\n        \"extend-shallow\": \"^2.0.1\",\n        \"fill-range\": \"^4.0.0\",\n        \"isobject\": \"^3.0.1\",\n        \"repeat-element\": \"^1.1.2\",\n        \"snapdragon\": \"^0.8.1\",\n        \"snapdragon-node\": \"^2.0.1\",\n        \"split-string\": \"^3.0.2\",\n        \"to-regex\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/browserslist\": {\n      \"version\": \"4.21.10\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"caniuse-lite\": \"^1.0.30001517\",\n        \"electron-to-chromium\": \"^1.4.477\",\n        \"node-releases\": \"^2.0.13\",\n        \"update-browserslist-db\": \"^1.0.11\"\n      },\n      \"bin\": {\n        \"browserslist\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \"^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7\"\n      }\n    },\n    \"node_modules/bser\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"node-int64\": \"^0.4.0\"\n      }\n    },\n    \"node_modules/btoa\": {\n      \"version\": \"1.2.1\",\n      \"license\": \"(MIT OR Apache-2.0)\",\n      \"bin\": {\n        \"btoa\": \"bin/btoa.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/buffer\": {\n      \"version\": \"5.7.1\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"base64-js\": \"^1.3.1\",\n        \"ieee754\": \"^1.1.13\"\n      }\n    },\n    \"node_modules/buffer-alloc\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"buffer-alloc-unsafe\": \"^1.1.0\",\n        \"buffer-fill\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/buffer-alloc-unsafe\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/buffer-crc32\": {\n      \"version\": \"0.2.13\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/buffer-equal\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/buffer-fill\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/buffer-from\": {\n      \"version\": \"1.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/cache-base\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"collection-visit\": \"^1.0.0\",\n        \"component-emitter\": \"^1.2.1\",\n        \"get-value\": \"^2.0.6\",\n        \"has-value\": \"^1.0.0\",\n        \"isobject\": \"^3.0.1\",\n        \"set-value\": \"^2.0.0\",\n        \"to-object-path\": \"^0.3.0\",\n        \"union-value\": \"^1.0.0\",\n        \"unset-value\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/call-bind\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.1\",\n        \"get-intrinsic\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/callsites\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/camelcase\": {\n      \"version\": \"5.3.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/camelcase-keys\": {\n      \"version\": \"7.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"camelcase\": \"^6.3.0\",\n        \"map-obj\": \"^4.1.0\",\n        \"quick-lru\": \"^5.1.1\",\n        \"type-fest\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/camelcase-keys/node_modules/camelcase\": {\n      \"version\": \"6.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/camelcase-keys/node_modules/type-fest\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"license\": \"(MIT OR CC0-1.0)\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/caniuse-lite\": {\n      \"version\": \"1.0.30001538\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/caniuse-lite\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"license\": \"CC-BY-4.0\"\n    },\n    \"node_modules/canvg\": {\n      \"version\": \"3.0.10\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.12.5\",\n        \"@types/raf\": \"^3.4.0\",\n        \"core-js\": \"^3.8.3\",\n        \"raf\": \"^3.4.1\",\n        \"regenerator-runtime\": \"^0.13.7\",\n        \"rgbcolor\": \"^1.0.1\",\n        \"stackblur-canvas\": \"^2.0.0\",\n        \"svg-pathdata\": \"^6.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/canvg/node_modules/regenerator-runtime\": {\n      \"version\": \"0.13.11\",\n      \"license\": \"MIT\",\n      \"optional\": true\n    },\n    \"node_modules/caw\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"get-proxy\": \"^2.0.0\",\n        \"isurl\": \"^1.0.0-alpha5\",\n        \"tunnel-agent\": \"^0.6.0\",\n        \"url-to-options\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/char-regex\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/chart.js\": {\n      \"version\": \"4.4.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@kurkle/color\": \"^0.3.0\"\n      },\n      \"engines\": {\n        \"pnpm\": \">=7\"\n      }\n    },\n    \"node_modules/chartjs-adapter-date-fns\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/chartjs-adapter-date-fns/-/chartjs-adapter-date-fns-3.0.0.tgz\",\n      \"integrity\": \"sha512-Rs3iEB3Q5pJ973J93OBTpnP7qoGwvq3nUnoMdtxO+9aoJof7UFcRbWcIDteXuYd1fgAvct/32T9qaLyLuZVwCg==\",\n      \"peerDependencies\": {\n        \"chart.js\": \">=2.8.0\",\n        \"date-fns\": \">=2.0.0\"\n      }\n    },\n    \"node_modules/checklist-model\": {\n      \"version\": \"1.0.0\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      },\n      \"peerDependencies\": {\n        \"angular\": \">=1.0.8\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"2.1.8\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"anymatch\": \"^2.0.0\",\n        \"async-each\": \"^1.0.1\",\n        \"braces\": \"^2.3.2\",\n        \"glob-parent\": \"^3.1.0\",\n        \"inherits\": \"^2.0.3\",\n        \"is-binary-path\": \"^1.0.0\",\n        \"is-glob\": \"^4.0.0\",\n        \"normalize-path\": \"^3.0.0\",\n        \"path-is-absolute\": \"^1.0.0\",\n        \"readdirp\": \"^2.2.1\",\n        \"upath\": \"^1.1.1\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"^1.2.7\"\n      }\n    },\n    \"node_modules/chokidar/node_modules/glob-parent\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"is-glob\": \"^3.1.0\",\n        \"path-dirname\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/chokidar/node_modules/glob-parent/node_modules/is-glob\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/ci-info\": {\n      \"version\": \"3.8.0\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/sibiraj-s\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/cjs-module-lexer\": {\n      \"version\": \"1.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/ckeditor4\": {\n      \"version\": \"4.22.1\",\n      \"license\": \"(GPL-2.0 OR LGPL-2.1 OR MPL-1.1)\"\n    },\n    \"node_modules/class-utils\": {\n      \"version\": \"0.3.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"arr-union\": \"^3.1.0\",\n        \"define-property\": \"^0.2.5\",\n        \"isobject\": \"^3.0.0\",\n        \"static-extend\": \"^0.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/clean-stack\": {\n      \"version\": \"2.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/cliui\": {\n      \"version\": \"3.2.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"string-width\": \"^1.0.1\",\n        \"strip-ansi\": \"^3.0.1\",\n        \"wrap-ansi\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/cliui/node_modules/ansi-regex\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/cliui/node_modules/is-fullwidth-code-point\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"number-is-nan\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/cliui/node_modules/string-width\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"code-point-at\": \"^1.0.0\",\n        \"is-fullwidth-code-point\": \"^1.0.0\",\n        \"strip-ansi\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/cliui/node_modules/strip-ansi\": {\n      \"version\": \"3.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/cliui/node_modules/wrap-ansi\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"string-width\": \"^1.0.1\",\n        \"strip-ansi\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/clone\": {\n      \"version\": \"2.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.8\"\n      }\n    },\n    \"node_modules/clone-buffer\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/clone-stats\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/cloneable-readable\": {\n      \"version\": \"1.1.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.1\",\n        \"process-nextick-args\": \"^2.0.0\",\n        \"readable-stream\": \"^2.3.5\"\n      }\n    },\n    \"node_modules/co\": {\n      \"version\": \"4.6.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"iojs\": \">= 1.0.0\",\n        \"node\": \">= 0.12.0\"\n      }\n    },\n    \"node_modules/code-point-at\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/collect-v8-coverage\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/collection-map\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"arr-map\": \"^2.0.2\",\n        \"for-own\": \"^1.0.0\",\n        \"make-iterator\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/collection-visit\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"map-visit\": \"^1.0.0\",\n        \"object-visit\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/color-support\": {\n      \"version\": \"1.1.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"color-support\": \"bin.js\"\n      }\n    },\n    \"node_modules/colord\": {\n      \"version\": \"2.9.3\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/colors\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.1.90\"\n      }\n    },\n    \"node_modules/commander\": {\n      \"version\": \"2.20.3\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/component-emitter\": {\n      \"version\": \"1.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/concat-stream\": {\n      \"version\": \"1.6.2\",\n      \"dev\": true,\n      \"engines\": [\n        \"node >= 0.8\"\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"buffer-from\": \"^1.0.0\",\n        \"inherits\": \"^2.0.3\",\n        \"readable-stream\": \"^2.2.2\",\n        \"typedarray\": \"^0.0.6\"\n      }\n    },\n    \"node_modules/config-chain\": {\n      \"version\": \"1.1.13\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ini\": \"^1.3.4\",\n        \"proto-list\": \"~1.2.1\"\n      }\n    },\n    \"node_modules/console-control-strings\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/content-disposition\": {\n      \"version\": \"0.5.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safe-buffer\": \"5.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/convert-source-map\": {\n      \"version\": \"1.9.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/copy-descriptor\": {\n      \"version\": \"0.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/copy-props\": {\n      \"version\": \"2.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"each-props\": \"^1.3.2\",\n        \"is-plain-object\": \"^5.0.0\"\n      }\n    },\n    \"node_modules/core-js\": {\n      \"version\": \"3.32.2\",\n      \"hasInstallScript\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/core-js\"\n      }\n    },\n    \"node_modules/core-util-is\": {\n      \"version\": \"1.0.3\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/cosmiconfig\": {\n      \"version\": \"8.3.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"import-fresh\": \"^3.3.0\",\n        \"js-yaml\": \"^4.1.0\",\n        \"parse-json\": \"^5.2.0\",\n        \"path-type\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/d-fischer\"\n      },\n      \"peerDependencies\": {\n        \"typescript\": \">=4.9.5\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/create-jest\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"chalk\": \"^4.0.0\",\n        \"exit\": \"^0.1.2\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-config\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"prompts\": \"^2.0.1\"\n      },\n      \"bin\": {\n        \"create-jest\": \"bin/create-jest.js\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/cross-spawn\": {\n      \"version\": \"7.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"path-key\": \"^3.1.0\",\n        \"shebang-command\": \"^2.0.0\",\n        \"which\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/css\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.4\",\n        \"source-map\": \"^0.6.1\",\n        \"source-map-resolve\": \"^0.6.0\"\n      }\n    },\n    \"node_modules/css-functions-list\": {\n      \"version\": \"3.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12.22\"\n      }\n    },\n    \"node_modules/css-line-break\": {\n      \"version\": \"2.1.0\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"utrie\": \"^1.0.2\"\n      }\n    },\n    \"node_modules/css-tree\": {\n      \"version\": \"1.1.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mdn-data\": \"2.0.14\",\n        \"source-map\": \"^0.6.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/cssesc\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"cssesc\": \"bin/cssesc\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/csso\": {\n      \"version\": \"4.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"css-tree\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/d\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"es5-ext\": \"^0.10.50\",\n        \"type\": \"^1.0.1\"\n      }\n    },\n    \"node_modules/datatables.net\": {\n      \"version\": \"1.13.6\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jquery\": \">=1.7\"\n      }\n    },\n    \"node_modules/datatables.net-bs4\": {\n      \"version\": \"1.13.6\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"datatables.net\": \">=1.13.4\",\n        \"jquery\": \">=1.7\"\n      }\n    },\n    \"node_modules/datatables.net-colreorder\": {\n      \"version\": \"1.7.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"datatables.net\": \">=1.13.4\",\n        \"jquery\": \">=1.7\"\n      }\n    },\n    \"node_modules/datatables.net-colreorder-dt\": {\n      \"version\": \"1.7.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"datatables.net-colreorder\": \">=1.6.2\",\n        \"datatables.net-dt\": \">=1.13.4\",\n        \"jquery\": \">=1.7\"\n      }\n    },\n    \"node_modules/datatables.net-dt\": {\n      \"version\": \"1.13.6\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"datatables.net\": \">=1.13.4\",\n        \"jquery\": \">=1.7\"\n      }\n    },\n    \"node_modules/datatables.net-jqui\": {\n      \"version\": \"1.13.6\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"datatables.net\": \">=1.13.4\",\n        \"jquery\": \">=1.7\"\n      }\n    },\n    \"node_modules/datatables.net-scroller\": {\n      \"version\": \"2.2.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"datatables.net\": \">=1.13.4\",\n        \"jquery\": \">=1.7\"\n      }\n    },\n    \"node_modules/datatables.net-scroller-jqui\": {\n      \"version\": \"2.2.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"datatables.net-jqui\": \">=1.13.4\",\n        \"datatables.net-scroller\": \">=2.1.1\",\n        \"jquery\": \">=1.7\"\n      }\n    },\n    \"node_modules/date-fns\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/date-fns/-/date-fns-3.6.0.tgz\",\n      \"integrity\": \"sha512-fRHTG8g/Gif+kSh50gaGEdToemgfj74aRX3swtiouboip5JDLAyDE9F11nHMIcvOaXeOC6D7SpNhi7uFyB7Uww==\",\n      \"peer\": true,\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/kossnocorp\"\n      }\n    },\n    \"node_modules/debug\": {\n      \"version\": \"4.3.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/debug-fabulous\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"3.X\",\n        \"memoizee\": \"0.4.X\",\n        \"object-assign\": \"4.X\"\n      }\n    },\n    \"node_modules/debug-fabulous/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/decamelize\": {\n      \"version\": \"5.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/decamelize-keys\": {\n      \"version\": \"1.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"decamelize\": \"^1.1.0\",\n        \"map-obj\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/decamelize-keys/node_modules/decamelize\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/decamelize-keys/node_modules/map-obj\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/decode-uri-component\": {\n      \"version\": \"0.2.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/decompress\": {\n      \"version\": \"4.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"decompress-tar\": \"^4.0.0\",\n        \"decompress-tarbz2\": \"^4.0.0\",\n        \"decompress-targz\": \"^4.0.0\",\n        \"decompress-unzip\": \"^4.0.1\",\n        \"graceful-fs\": \"^4.1.10\",\n        \"make-dir\": \"^1.0.0\",\n        \"pify\": \"^2.3.0\",\n        \"strip-dirs\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/decompress-response\": {\n      \"version\": \"3.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mimic-response\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/decompress-tar\": {\n      \"version\": \"4.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"file-type\": \"^5.2.0\",\n        \"is-stream\": \"^1.1.0\",\n        \"tar-stream\": \"^1.5.2\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/decompress-tar/node_modules/is-stream\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/decompress-tarbz2\": {\n      \"version\": \"4.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"decompress-tar\": \"^4.1.0\",\n        \"file-type\": \"^6.1.0\",\n        \"is-stream\": \"^1.1.0\",\n        \"seek-bzip\": \"^1.0.5\",\n        \"unbzip2-stream\": \"^1.0.9\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/decompress-tarbz2/node_modules/file-type\": {\n      \"version\": \"6.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/decompress-tarbz2/node_modules/is-stream\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/decompress-targz\": {\n      \"version\": \"4.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"decompress-tar\": \"^4.1.1\",\n        \"file-type\": \"^5.2.0\",\n        \"is-stream\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/decompress-targz/node_modules/is-stream\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/decompress-unzip\": {\n      \"version\": \"4.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"file-type\": \"^3.8.0\",\n        \"get-stream\": \"^2.2.0\",\n        \"pify\": \"^2.3.0\",\n        \"yauzl\": \"^2.4.2\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/decompress-unzip/node_modules/file-type\": {\n      \"version\": \"3.9.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/decompress-unzip/node_modules/get-stream\": {\n      \"version\": \"2.3.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"object-assign\": \"^4.0.1\",\n        \"pinkie-promise\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/decompress-unzip/node_modules/pify\": {\n      \"version\": \"2.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/decompress/node_modules/make-dir\": {\n      \"version\": \"1.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"pify\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/decompress/node_modules/make-dir/node_modules/pify\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/decompress/node_modules/pify\": {\n      \"version\": \"2.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/dedent\": {\n      \"version\": \"1.5.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"peerDependencies\": {\n        \"babel-plugin-macros\": \"^3.1.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"babel-plugin-macros\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/deep-is\": {\n      \"version\": \"0.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/deepmerge\": {\n      \"version\": \"4.3.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/default-compare\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^5.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/default-resolution\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/define-data-property\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.1\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/define-properties\": {\n      \"version\": \"1.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"define-data-property\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.0\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/define-property\": {\n      \"version\": \"0.2.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-descriptor\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/del\": {\n      \"version\": \"6.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"globby\": \"^11.0.1\",\n        \"graceful-fs\": \"^4.2.4\",\n        \"is-glob\": \"^4.0.1\",\n        \"is-path-cwd\": \"^2.2.0\",\n        \"is-path-inside\": \"^3.0.2\",\n        \"p-map\": \"^4.0.0\",\n        \"rimraf\": \"^3.0.2\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/delegates\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/detect-file\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/detect-indent\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/detect-newline\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/diff-sequences\": {\n      \"version\": \"29.6.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/dir-glob\": {\n      \"version\": \"3.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"path-type\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/doctrine\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/dompurify\": {\n      \"version\": \"3.0.8\",\n      \"license\": \"(MPL-2.0 OR Apache-2.0)\"\n    },\n    \"node_modules/download\": {\n      \"version\": \"6.2.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"caw\": \"^2.0.0\",\n        \"content-disposition\": \"^0.5.2\",\n        \"decompress\": \"^4.0.0\",\n        \"ext-name\": \"^5.0.0\",\n        \"file-type\": \"5.2.0\",\n        \"filenamify\": \"^2.0.0\",\n        \"get-stream\": \"^3.0.0\",\n        \"got\": \"^7.0.0\",\n        \"make-dir\": \"^1.0.0\",\n        \"p-event\": \"^1.0.0\",\n        \"pify\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/download/node_modules/get-stream\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/download/node_modules/make-dir\": {\n      \"version\": \"1.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"pify\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/dropzone\": {\n      \"version\": \"5.9.3\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/duplexer\": {\n      \"version\": \"0.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/duplexer3\": {\n      \"version\": \"0.1.5\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/duplexify\": {\n      \"version\": \"4.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"end-of-stream\": \"^1.4.1\",\n        \"inherits\": \"^2.0.3\",\n        \"readable-stream\": \"^3.1.1\",\n        \"stream-shift\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/duplexify/node_modules/readable-stream\": {\n      \"version\": \"3.6.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.3\",\n        \"string_decoder\": \"^1.1.1\",\n        \"util-deprecate\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/dwv\": {\n      \"version\": \"0.27.1\",\n      \"license\": \"GPL-3.0\",\n      \"dependencies\": {\n        \"i18next\": \"~12.1.0\",\n        \"i18next-browser-languagedetector\": \"~3.0.0\",\n        \"i18next-xhr-backend\": \"~2.0.0\",\n        \"jszip\": \"~3.2.0\",\n        \"konva\": \"~2.6.0\",\n        \"magic-wand-js\": \"~1.0.0\"\n      }\n    },\n    \"node_modules/dwv/node_modules/i18next\": {\n      \"version\": \"12.1.0\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/dwv/node_modules/i18next-browser-languagedetector\": {\n      \"version\": \"3.0.3\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/dwv/node_modules/i18next-xhr-backend\": {\n      \"version\": \"2.0.1\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/dwv/node_modules/jszip\": {\n      \"version\": \"3.2.2\",\n      \"license\": \"(MIT OR GPL-3.0)\",\n      \"dependencies\": {\n        \"lie\": \"~3.3.0\",\n        \"pako\": \"~1.0.2\",\n        \"readable-stream\": \"~2.3.6\",\n        \"set-immediate-shim\": \"~1.0.1\"\n      }\n    },\n    \"node_modules/dwv/node_modules/konva\": {\n      \"version\": \"2.6.0\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/each-props\": {\n      \"version\": \"1.3.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-plain-object\": \"^2.0.1\",\n        \"object.defaults\": \"^1.1.0\"\n      }\n    },\n    \"node_modules/each-props/node_modules/is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/eastasianwidth\": {\n      \"version\": \"0.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/electron-to-chromium\": {\n      \"version\": \"1.4.525\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/emittery\": {\n      \"version\": \"0.13.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sindresorhus/emittery?sponsor=1\"\n      }\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"9.2.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/end-of-stream\": {\n      \"version\": \"1.4.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"once\": \"^1.4.0\"\n      }\n    },\n    \"node_modules/error-ex\": {\n      \"version\": \"1.3.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-arrayish\": \"^0.2.1\"\n      }\n    },\n    \"node_modules/es-abstract\": {\n      \"version\": \"1.22.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.0\",\n        \"arraybuffer.prototype.slice\": \"^1.0.2\",\n        \"available-typed-arrays\": \"^1.0.5\",\n        \"call-bind\": \"^1.0.2\",\n        \"es-set-tostringtag\": \"^2.0.1\",\n        \"es-to-primitive\": \"^1.2.1\",\n        \"function.prototype.name\": \"^1.1.6\",\n        \"get-intrinsic\": \"^1.2.1\",\n        \"get-symbol-description\": \"^1.0.0\",\n        \"globalthis\": \"^1.0.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has\": \"^1.0.3\",\n        \"has-property-descriptors\": \"^1.0.0\",\n        \"has-proto\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"internal-slot\": \"^1.0.5\",\n        \"is-array-buffer\": \"^3.0.2\",\n        \"is-callable\": \"^1.2.7\",\n        \"is-negative-zero\": \"^2.0.2\",\n        \"is-regex\": \"^1.1.4\",\n        \"is-shared-array-buffer\": \"^1.0.2\",\n        \"is-string\": \"^1.0.7\",\n        \"is-typed-array\": \"^1.1.12\",\n        \"is-weakref\": \"^1.0.2\",\n        \"object-inspect\": \"^1.12.3\",\n        \"object-keys\": \"^1.1.1\",\n        \"object.assign\": \"^4.1.4\",\n        \"regexp.prototype.flags\": \"^1.5.1\",\n        \"safe-array-concat\": \"^1.0.1\",\n        \"safe-regex-test\": \"^1.0.0\",\n        \"string.prototype.trim\": \"^1.2.8\",\n        \"string.prototype.trimend\": \"^1.0.7\",\n        \"string.prototype.trimstart\": \"^1.0.7\",\n        \"typed-array-buffer\": \"^1.0.0\",\n        \"typed-array-byte-length\": \"^1.0.0\",\n        \"typed-array-byte-offset\": \"^1.0.0\",\n        \"typed-array-length\": \"^1.0.4\",\n        \"unbox-primitive\": \"^1.0.2\",\n        \"which-typed-array\": \"^1.1.11\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/es-set-tostringtag\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.1.3\",\n        \"has\": \"^1.0.3\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-shim-unscopables\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has\": \"^1.0.3\"\n      }\n    },\n    \"node_modules/es-to-primitive\": {\n      \"version\": \"1.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-callable\": \"^1.1.4\",\n        \"is-date-object\": \"^1.0.1\",\n        \"is-symbol\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/es5-ext\": {\n      \"version\": \"0.10.62\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"es6-iterator\": \"^2.0.3\",\n        \"es6-symbol\": \"^3.1.3\",\n        \"next-tick\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/es6-iterator\": {\n      \"version\": \"2.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"d\": \"1\",\n        \"es5-ext\": \"^0.10.35\",\n        \"es6-symbol\": \"^3.1.1\"\n      }\n    },\n    \"node_modules/es6-symbol\": {\n      \"version\": \"3.1.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d\": \"^1.0.1\",\n        \"ext\": \"^1.1.2\"\n      }\n    },\n    \"node_modules/es6-weak-map\": {\n      \"version\": \"2.0.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d\": \"1\",\n        \"es5-ext\": \"^0.10.46\",\n        \"es6-iterator\": \"^2.0.3\",\n        \"es6-symbol\": \"^3.1.1\"\n      }\n    },\n    \"node_modules/escalade\": {\n      \"version\": \"3.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/eslint\": {\n      \"version\": \"8.49.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@eslint-community/eslint-utils\": \"^4.2.0\",\n        \"@eslint-community/regexpp\": \"^4.6.1\",\n        \"@eslint/eslintrc\": \"^2.1.2\",\n        \"@eslint/js\": \"8.49.0\",\n        \"@humanwhocodes/config-array\": \"^0.11.11\",\n        \"@humanwhocodes/module-importer\": \"^1.0.1\",\n        \"@nodelib/fs.walk\": \"^1.2.8\",\n        \"ajv\": \"^6.12.4\",\n        \"chalk\": \"^4.0.0\",\n        \"cross-spawn\": \"^7.0.2\",\n        \"debug\": \"^4.3.2\",\n        \"doctrine\": \"^3.0.0\",\n        \"escape-string-regexp\": \"^4.0.0\",\n        \"eslint-scope\": \"^7.2.2\",\n        \"eslint-visitor-keys\": \"^3.4.3\",\n        \"espree\": \"^9.6.1\",\n        \"esquery\": \"^1.4.2\",\n        \"esutils\": \"^2.0.2\",\n        \"fast-deep-equal\": \"^3.1.3\",\n        \"file-entry-cache\": \"^6.0.1\",\n        \"find-up\": \"^5.0.0\",\n        \"glob-parent\": \"^6.0.2\",\n        \"globals\": \"^13.19.0\",\n        \"graphemer\": \"^1.4.0\",\n        \"ignore\": \"^5.2.0\",\n        \"imurmurhash\": \"^0.1.4\",\n        \"is-glob\": \"^4.0.0\",\n        \"is-path-inside\": \"^3.0.3\",\n        \"js-yaml\": \"^4.1.0\",\n        \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n        \"levn\": \"^0.4.1\",\n        \"lodash.merge\": \"^4.6.2\",\n        \"minimatch\": \"^3.1.2\",\n        \"natural-compare\": \"^1.4.0\",\n        \"optionator\": \"^0.9.3\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"text-table\": \"^0.2.0\"\n      },\n      \"bin\": {\n        \"eslint\": \"bin/eslint.js\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint-import-resolver-node\": {\n      \"version\": \"0.3.9\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"^3.2.7\",\n        \"is-core-module\": \"^2.13.0\",\n        \"resolve\": \"^1.22.4\"\n      }\n    },\n    \"node_modules/eslint-import-resolver-node/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/eslint-module-utils\": {\n      \"version\": \"2.8.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"^3.2.7\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      },\n      \"peerDependenciesMeta\": {\n        \"eslint\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/eslint-module-utils/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/eslint-plugin-import\": {\n      \"version\": \"2.28.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"array-includes\": \"^3.1.6\",\n        \"array.prototype.findlastindex\": \"^1.2.2\",\n        \"array.prototype.flat\": \"^1.3.1\",\n        \"array.prototype.flatmap\": \"^1.3.1\",\n        \"debug\": \"^3.2.7\",\n        \"doctrine\": \"^2.1.0\",\n        \"eslint-import-resolver-node\": \"^0.3.7\",\n        \"eslint-module-utils\": \"^2.8.0\",\n        \"has\": \"^1.0.3\",\n        \"is-core-module\": \"^2.13.0\",\n        \"is-glob\": \"^4.0.3\",\n        \"minimatch\": \"^3.1.2\",\n        \"object.fromentries\": \"^2.0.6\",\n        \"object.groupby\": \"^1.0.0\",\n        \"object.values\": \"^1.1.6\",\n        \"semver\": \"^6.3.1\",\n        \"tsconfig-paths\": \"^3.14.2\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8\"\n      }\n    },\n    \"node_modules/eslint-plugin-import/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/eslint-plugin-import/node_modules/doctrine\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/eslint-plugin-jest\": {\n      \"version\": \"27.4.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@typescript-eslint/utils\": \"^5.10.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"@typescript-eslint/eslint-plugin\": \"^5.0.0 || ^6.0.0\",\n        \"eslint\": \"^7.0.0 || ^8.0.0\",\n        \"jest\": \"*\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@typescript-eslint/eslint-plugin\": {\n          \"optional\": true\n        },\n        \"jest\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/eslint-scope\": {\n      \"version\": \"7.2.2\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"esrecurse\": \"^4.3.0\",\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint-visitor-keys\": {\n      \"version\": \"3.4.3\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/espree\": {\n      \"version\": \"9.6.1\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"acorn\": \"^8.9.0\",\n        \"acorn-jsx\": \"^5.3.2\",\n        \"eslint-visitor-keys\": \"^3.4.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/esprima\": {\n      \"version\": \"4.0.1\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"bin\": {\n        \"esparse\": \"bin/esparse.js\",\n        \"esvalidate\": \"bin/esvalidate.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/esquery\": {\n      \"version\": \"1.5.0\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"estraverse\": \"^5.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/esrecurse\": {\n      \"version\": \"4.3.0\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/estraverse\": {\n      \"version\": \"5.3.0\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/esutils\": {\n      \"version\": \"2.0.3\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/event-emitter\": {\n      \"version\": \"0.3.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"d\": \"1\",\n        \"es5-ext\": \"~0.10.14\"\n      }\n    },\n    \"node_modules/event-stream\": {\n      \"version\": \"3.3.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"duplexer\": \"~0.1.1\",\n        \"from\": \"~0\",\n        \"map-stream\": \"~0.1.0\",\n        \"pause-stream\": \"0.0.11\",\n        \"split\": \"0.3\",\n        \"stream-combiner\": \"~0.0.4\",\n        \"through\": \"~2.3.1\"\n      }\n    },\n    \"node_modules/execa\": {\n      \"version\": \"5.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.3\",\n        \"get-stream\": \"^6.0.0\",\n        \"human-signals\": \"^2.1.0\",\n        \"is-stream\": \"^2.0.0\",\n        \"merge-stream\": \"^2.0.0\",\n        \"npm-run-path\": \"^4.0.1\",\n        \"onetime\": \"^5.1.2\",\n        \"signal-exit\": \"^3.0.3\",\n        \"strip-final-newline\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sindresorhus/execa?sponsor=1\"\n      }\n    },\n    \"node_modules/execa/node_modules/signal-exit\": {\n      \"version\": \"3.0.7\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/exit\": {\n      \"version\": \"0.1.2\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/expand-brackets\": {\n      \"version\": \"2.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"^2.3.3\",\n        \"define-property\": \"^0.2.5\",\n        \"extend-shallow\": \"^2.0.1\",\n        \"posix-character-classes\": \"^0.1.0\",\n        \"regex-not\": \"^1.0.0\",\n        \"snapdragon\": \"^0.8.1\",\n        \"to-regex\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/expand-brackets/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/expand-brackets/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/expand-range\": {\n      \"version\": \"1.8.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fill-range\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/expand-range/node_modules/fill-range\": {\n      \"version\": \"2.2.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-number\": \"^2.1.0\",\n        \"isobject\": \"^2.0.0\",\n        \"randomatic\": \"^3.0.0\",\n        \"repeat-element\": \"^1.1.2\",\n        \"repeat-string\": \"^1.5.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/expand-range/node_modules/is-number\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/expand-range/node_modules/isobject\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isarray\": \"1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/expand-range/node_modules/kind-of\": {\n      \"version\": \"3.2.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-buffer\": \"^1.1.5\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/expand-tilde\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"homedir-polyfill\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/expect\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/expect-utils\": \"^29.7.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"jest-matcher-utils\": \"^29.7.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/ext\": {\n      \"version\": \"1.7.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"type\": \"^2.7.2\"\n      }\n    },\n    \"node_modules/ext-list\": {\n      \"version\": \"2.2.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mime-db\": \"^1.28.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/ext-name\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ext-list\": \"^2.0.0\",\n        \"sort-keys-length\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/ext/node_modules/type\": {\n      \"version\": \"2.7.2\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/extend\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/extend-shallow\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-extendable\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/extglob\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"array-unique\": \"^0.3.2\",\n        \"define-property\": \"^1.0.0\",\n        \"expand-brackets\": \"^2.1.4\",\n        \"extend-shallow\": \"^2.0.1\",\n        \"fragment-cache\": \"^0.2.1\",\n        \"regex-not\": \"^1.0.0\",\n        \"snapdragon\": \"^0.8.1\",\n        \"to-regex\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/extglob/node_modules/define-property\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-descriptor\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/extglob/node_modules/is-accessor-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/extglob/node_modules/is-data-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/extglob/node_modules/is-descriptor\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-accessor-descriptor\": \"^1.0.0\",\n        \"is-data-descriptor\": \"^1.0.0\",\n        \"kind-of\": \"^6.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/extglob/node_modules/kind-of\": {\n      \"version\": \"6.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/fancy-log\": {\n      \"version\": \"1.3.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-gray\": \"^0.1.1\",\n        \"color-support\": \"^1.1.3\",\n        \"parse-node-version\": \"^1.0.0\",\n        \"time-stamp\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/fast-deep-equal\": {\n      \"version\": \"3.1.3\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fast-glob\": {\n      \"version\": \"3.3.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"^2.0.2\",\n        \"@nodelib/fs.walk\": \"^1.2.3\",\n        \"glob-parent\": \"^5.1.2\",\n        \"merge2\": \"^1.3.0\",\n        \"micromatch\": \"^4.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6.0\"\n      }\n    },\n    \"node_modules/fast-glob/node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/fast-json-stable-stringify\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fast-levenshtein\": {\n      \"version\": \"2.0.6\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fastest-levenshtein\": {\n      \"version\": \"1.0.16\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 4.9.1\"\n      }\n    },\n    \"node_modules/fastq\": {\n      \"version\": \"1.15.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"reusify\": \"^1.0.4\"\n      }\n    },\n    \"node_modules/fb-watchman\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"bser\": \"2.1.1\"\n      }\n    },\n    \"node_modules/fd-slicer\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"pend\": \"~1.2.0\"\n      }\n    },\n    \"node_modules/fflate\": {\n      \"version\": \"0.4.8\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/file-entry-cache\": {\n      \"version\": \"6.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"flat-cache\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || >=12.0.0\"\n      }\n    },\n    \"node_modules/file-type\": {\n      \"version\": \"5.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/filename-regex\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/filename-reserved-regex\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/filenamify\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"filename-reserved-regex\": \"^2.0.0\",\n        \"strip-outer\": \"^1.0.0\",\n        \"trim-repeated\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"extend-shallow\": \"^2.0.1\",\n        \"is-number\": \"^3.0.0\",\n        \"repeat-string\": \"^1.6.1\",\n        \"to-regex-range\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/find-up\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"locate-path\": \"^6.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/findup-sync\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"detect-file\": \"^1.0.0\",\n        \"is-glob\": \"^4.0.0\",\n        \"micromatch\": \"^3.0.4\",\n        \"resolve-dir\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/findup-sync/node_modules/define-property\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-descriptor\": \"^1.0.2\",\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/findup-sync/node_modules/extend-shallow\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"assign-symbols\": \"^1.0.0\",\n        \"is-extendable\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/findup-sync/node_modules/is-accessor-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/findup-sync/node_modules/is-data-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/findup-sync/node_modules/is-descriptor\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-accessor-descriptor\": \"^1.0.0\",\n        \"is-data-descriptor\": \"^1.0.0\",\n        \"kind-of\": \"^6.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/findup-sync/node_modules/is-extendable\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-plain-object\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/findup-sync/node_modules/is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/findup-sync/node_modules/kind-of\": {\n      \"version\": \"6.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/findup-sync/node_modules/micromatch\": {\n      \"version\": \"3.1.10\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"arr-diff\": \"^4.0.0\",\n        \"array-unique\": \"^0.3.2\",\n        \"braces\": \"^2.3.1\",\n        \"define-property\": \"^2.0.2\",\n        \"extend-shallow\": \"^3.0.2\",\n        \"extglob\": \"^2.0.4\",\n        \"fragment-cache\": \"^0.2.1\",\n        \"kind-of\": \"^6.0.2\",\n        \"nanomatch\": \"^1.2.9\",\n        \"object.pick\": \"^1.3.0\",\n        \"regex-not\": \"^1.0.0\",\n        \"snapdragon\": \"^0.8.1\",\n        \"to-regex\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/fined\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"expand-tilde\": \"^2.0.2\",\n        \"is-plain-object\": \"^2.0.3\",\n        \"object.defaults\": \"^1.1.0\",\n        \"object.pick\": \"^1.2.0\",\n        \"parse-filepath\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/fined/node_modules/is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/first-chunk-stream\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"readable-stream\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/flagged-respawn\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/flat-cache\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"flatted\": \"^3.2.7\",\n        \"keyv\": \"^4.5.3\",\n        \"rimraf\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=12.0.0\"\n      }\n    },\n    \"node_modules/flatted\": {\n      \"version\": \"3.2.9\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/flot\": {\n      \"version\": \"4.2.6\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/flush-write-stream\": {\n      \"version\": \"1.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.3\",\n        \"readable-stream\": \"^2.3.6\"\n      }\n    },\n    \"node_modules/for-each\": {\n      \"version\": \"0.3.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-callable\": \"^1.1.3\"\n      }\n    },\n    \"node_modules/for-in\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/for-own\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"for-in\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/foreground-child\": {\n      \"version\": \"3.1.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.0\",\n        \"signal-exit\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/fork-stream\": {\n      \"version\": \"0.0.4\",\n      \"dev\": true,\n      \"license\": \"BSD\"\n    },\n    \"node_modules/fraction.js\": {\n      \"version\": \"4.3.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"type\": \"patreon\",\n        \"url\": \"https://github.com/sponsors/rawify\"\n      }\n    },\n    \"node_modules/fragment-cache\": {\n      \"version\": \"0.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"map-cache\": \"^0.2.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/from\": {\n      \"version\": \"0.1.7\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fs-constants\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fs-mkdirp-stream\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.1.11\",\n        \"through2\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/fstream\": {\n      \"version\": \"1.0.12\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.1.2\",\n        \"inherits\": \"~2.0.0\",\n        \"mkdirp\": \">=0.5 0\",\n        \"rimraf\": \"2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6\"\n      }\n    },\n    \"node_modules/fstream-ignore\": {\n      \"version\": \"1.0.5\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"fstream\": \"^1.0.0\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/fstream/node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/fstream/node_modules/rimraf\": {\n      \"version\": \"2.7.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"glob\": \"^7.1.3\"\n      },\n      \"bin\": {\n        \"rimraf\": \"bin.js\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/function.prototype.name\": {\n      \"version\": \"1.1.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"functions-have-names\": \"^1.2.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/functions-have-names\": {\n      \"version\": \"1.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/gauge\": {\n      \"version\": \"2.7.4\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"aproba\": \"^1.0.3\",\n        \"console-control-strings\": \"^1.0.0\",\n        \"has-unicode\": \"^2.0.0\",\n        \"object-assign\": \"^4.1.0\",\n        \"signal-exit\": \"^3.0.0\",\n        \"string-width\": \"^1.0.1\",\n        \"strip-ansi\": \"^3.0.1\",\n        \"wide-align\": \"^1.1.0\"\n      }\n    },\n    \"node_modules/gauge/node_modules/ansi-regex\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gauge/node_modules/is-fullwidth-code-point\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"number-is-nan\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gauge/node_modules/signal-exit\": {\n      \"version\": \"3.0.7\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/gauge/node_modules/string-width\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"code-point-at\": \"^1.0.0\",\n        \"is-fullwidth-code-point\": \"^1.0.0\",\n        \"strip-ansi\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gauge/node_modules/strip-ansi\": {\n      \"version\": \"3.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gensync\": {\n      \"version\": \"1.0.0-beta.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/get-caller-file\": {\n      \"version\": \"1.0.3\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.1\",\n        \"has\": \"^1.0.3\",\n        \"has-proto\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-package-type\": {\n      \"version\": \"0.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/get-proxy\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"npm-conf\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/get-stream\": {\n      \"version\": \"6.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/get-symbol-description\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-value\": {\n      \"version\": \"2.0.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/glob\": {\n      \"version\": \"10.3.4\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"foreground-child\": \"^3.1.0\",\n        \"jackspeak\": \"^2.0.3\",\n        \"minimatch\": \"^9.0.1\",\n        \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\",\n        \"path-scurry\": \"^1.10.1\"\n      },\n      \"bin\": {\n        \"glob\": \"dist/cjs/src/bin.js\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/glob-base\": {\n      \"version\": \"0.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"glob-parent\": \"^2.0.0\",\n        \"is-glob\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/glob-base/node_modules/glob-parent\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"is-glob\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/glob-base/node_modules/is-extglob\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/glob-base/node_modules/is-glob\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-extglob\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"6.0.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/glob-stream\": {\n      \"version\": \"6.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"extend\": \"^3.0.0\",\n        \"glob\": \"^7.1.1\",\n        \"glob-parent\": \"^3.1.0\",\n        \"is-negated-glob\": \"^1.0.0\",\n        \"ordered-read-streams\": \"^1.0.0\",\n        \"pumpify\": \"^1.3.5\",\n        \"readable-stream\": \"^2.1.5\",\n        \"remove-trailing-separator\": \"^1.0.1\",\n        \"to-absolute-glob\": \"^2.0.0\",\n        \"unique-stream\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/glob-stream/node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/glob-stream/node_modules/glob-parent\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"is-glob\": \"^3.1.0\",\n        \"path-dirname\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/glob-stream/node_modules/is-glob\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/glob-watcher\": {\n      \"version\": \"5.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"anymatch\": \"^2.0.0\",\n        \"async-done\": \"^1.2.0\",\n        \"chokidar\": \"^2.0.0\",\n        \"is-negated-glob\": \"^1.0.0\",\n        \"just-debounce\": \"^1.0.0\",\n        \"normalize-path\": \"^3.0.0\",\n        \"object.defaults\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/glob/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/glob/node_modules/minimatch\": {\n      \"version\": \"9.0.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/global-modules\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"global-prefix\": \"^1.0.1\",\n        \"is-windows\": \"^1.0.1\",\n        \"resolve-dir\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/global-prefix\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"expand-tilde\": \"^2.0.2\",\n        \"homedir-polyfill\": \"^1.0.1\",\n        \"ini\": \"^1.3.4\",\n        \"is-windows\": \"^1.0.1\",\n        \"which\": \"^1.2.14\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/global-prefix/node_modules/which\": {\n      \"version\": \"1.3.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"which\": \"bin/which\"\n      }\n    },\n    \"node_modules/globals\": {\n      \"version\": \"13.21.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"type-fest\": \"^0.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/globalthis\": {\n      \"version\": \"1.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"define-properties\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/globby\": {\n      \"version\": \"11.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"array-union\": \"^2.1.0\",\n        \"dir-glob\": \"^3.0.1\",\n        \"fast-glob\": \"^3.2.9\",\n        \"ignore\": \"^5.2.0\",\n        \"merge2\": \"^1.4.1\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/globjoin\": {\n      \"version\": \"0.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/glogg\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"sparkles\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.1.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/got\": {\n      \"version\": \"7.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"decompress-response\": \"^3.2.0\",\n        \"duplexer3\": \"^0.1.4\",\n        \"get-stream\": \"^3.0.0\",\n        \"is-plain-obj\": \"^1.1.0\",\n        \"is-retry-allowed\": \"^1.0.0\",\n        \"is-stream\": \"^1.0.0\",\n        \"isurl\": \"^1.0.0-alpha5\",\n        \"lowercase-keys\": \"^1.0.0\",\n        \"p-cancelable\": \"^0.3.0\",\n        \"p-timeout\": \"^1.1.1\",\n        \"safe-buffer\": \"^5.0.1\",\n        \"timed-out\": \"^4.0.0\",\n        \"url-parse-lax\": \"^1.0.0\",\n        \"url-to-options\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/got/node_modules/get-stream\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/got/node_modules/is-stream\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/graceful-fs\": {\n      \"version\": \"4.2.11\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/graphemer\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/gulp\": {\n      \"version\": \"4.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"glob-watcher\": \"^5.0.3\",\n        \"gulp-cli\": \"^2.2.0\",\n        \"undertaker\": \"^1.2.1\",\n        \"vinyl-fs\": \"^3.0.0\"\n      },\n      \"bin\": {\n        \"gulp\": \"bin/gulp.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/gulp-append-prepend\": {\n      \"version\": \"1.0.9\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"plugin-error\": \"^1.0.1\",\n        \"read-file\": \"^0.2.0\",\n        \"through2\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/gulp-cli\": {\n      \"version\": \"2.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-colors\": \"^1.0.1\",\n        \"archy\": \"^1.0.0\",\n        \"array-sort\": \"^1.0.0\",\n        \"color-support\": \"^1.1.3\",\n        \"concat-stream\": \"^1.6.0\",\n        \"copy-props\": \"^2.0.1\",\n        \"fancy-log\": \"^1.3.2\",\n        \"gulplog\": \"^1.0.0\",\n        \"interpret\": \"^1.4.0\",\n        \"isobject\": \"^3.0.1\",\n        \"liftoff\": \"^3.1.0\",\n        \"matchdep\": \"^2.0.0\",\n        \"mute-stdout\": \"^1.0.0\",\n        \"pretty-hrtime\": \"^1.0.0\",\n        \"replace-homedir\": \"^1.0.0\",\n        \"semver-greatest-satisfied-range\": \"^1.1.0\",\n        \"v8flags\": \"^3.2.0\",\n        \"yargs\": \"^7.1.0\"\n      },\n      \"bin\": {\n        \"gulp\": \"bin/gulp.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/gulp-csso\": {\n      \"version\": \"4.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"csso\": \"^4.0.0\",\n        \"plugin-error\": \"^1.0.0\",\n        \"vinyl-sourcemaps-apply\": \"^0.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/gulp-dart-sass\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"chalk\": \"^2.3.0\",\n        \"lodash.clonedeep\": \"^4.3.2\",\n        \"plugin-error\": \"^1.0.1\",\n        \"replace-ext\": \"^1.0.0\",\n        \"sass\": \"^1.49.0\",\n        \"strip-ansi\": \"^4.0.0\",\n        \"through2\": \"^2.0.0\",\n        \"vinyl-sourcemaps-apply\": \"^0.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      }\n    },\n    \"node_modules/gulp-dart-sass/node_modules/ansi-regex\": {\n      \"version\": \"3.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/gulp-dart-sass/node_modules/ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"color-convert\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/gulp-dart-sass/node_modules/chalk\": {\n      \"version\": \"2.4.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/gulp-dart-sass/node_modules/color-convert\": {\n      \"version\": \"1.9.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"node_modules/gulp-dart-sass/node_modules/color-name\": {\n      \"version\": \"1.1.3\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/gulp-dart-sass/node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/gulp-dart-sass/node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/gulp-dart-sass/node_modules/strip-ansi\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/gulp-dart-sass/node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/gulp-if\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"gulp-match\": \"^1.1.0\",\n        \"ternary-stream\": \"^3.0.0\",\n        \"through2\": \"^3.0.1\"\n      }\n    },\n    \"node_modules/gulp-if/node_modules/through2\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.4\",\n        \"readable-stream\": \"2 || 3\"\n      }\n    },\n    \"node_modules/gulp-inject-string\": {\n      \"version\": \"1.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"event-stream\": \"3.3.4\",\n        \"plugin-error\": \"^1.0.1\"\n      }\n    },\n    \"node_modules/gulp-match\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"minimatch\": \"^3.0.3\"\n      }\n    },\n    \"node_modules/gulp-postcss\": {\n      \"version\": \"9.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fancy-log\": \"^1.3.3\",\n        \"plugin-error\": \"^1.0.1\",\n        \"postcss-load-config\": \"^3.0.0\",\n        \"vinyl-sourcemaps-apply\": \"^0.2.1\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || >=14\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.0.0\"\n      }\n    },\n    \"node_modules/gulp-rename\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/gulp-sourcemaps\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"@gulp-sourcemaps/identity-map\": \"^2.0.1\",\n        \"@gulp-sourcemaps/map-sources\": \"^1.0.0\",\n        \"acorn\": \"^6.4.1\",\n        \"convert-source-map\": \"^1.0.0\",\n        \"css\": \"^3.0.0\",\n        \"debug-fabulous\": \"^1.0.0\",\n        \"detect-newline\": \"^2.0.0\",\n        \"graceful-fs\": \"^4.0.0\",\n        \"source-map\": \"^0.6.0\",\n        \"strip-bom-string\": \"^1.0.0\",\n        \"through2\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/gulp-sourcemaps/node_modules/acorn\": {\n      \"version\": \"6.4.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"acorn\": \"bin/acorn\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/gulp-watch\": {\n      \"version\": \"5.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-colors\": \"1.1.0\",\n        \"anymatch\": \"^1.3.0\",\n        \"chokidar\": \"^2.0.0\",\n        \"fancy-log\": \"1.3.2\",\n        \"glob-parent\": \"^3.0.1\",\n        \"object-assign\": \"^4.1.0\",\n        \"path-is-absolute\": \"^1.0.1\",\n        \"plugin-error\": \"1.0.1\",\n        \"readable-stream\": \"^2.2.2\",\n        \"slash\": \"^1.0.0\",\n        \"vinyl\": \"^2.1.0\",\n        \"vinyl-file\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/anymatch\": {\n      \"version\": \"1.3.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"micromatch\": \"^2.1.5\",\n        \"normalize-path\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/arr-diff\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"arr-flatten\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/array-unique\": {\n      \"version\": \"0.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/braces\": {\n      \"version\": \"1.8.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"expand-range\": \"^1.8.1\",\n        \"preserve\": \"^0.2.0\",\n        \"repeat-element\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/expand-brackets\": {\n      \"version\": \"0.1.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-posix-bracket\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/extglob\": {\n      \"version\": \"0.3.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-extglob\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/extglob/node_modules/is-extglob\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/fancy-log\": {\n      \"version\": \"1.3.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-gray\": \"^0.1.1\",\n        \"color-support\": \"^1.1.3\",\n        \"time-stamp\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/glob-parent\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"is-glob\": \"^3.1.0\",\n        \"path-dirname\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/is-glob\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/kind-of\": {\n      \"version\": \"3.2.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-buffer\": \"^1.1.5\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/micromatch\": {\n      \"version\": \"2.3.11\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"arr-diff\": \"^2.0.0\",\n        \"array-unique\": \"^0.2.1\",\n        \"braces\": \"^1.8.2\",\n        \"expand-brackets\": \"^0.1.4\",\n        \"extglob\": \"^0.3.1\",\n        \"filename-regex\": \"^2.0.0\",\n        \"is-extglob\": \"^1.0.0\",\n        \"is-glob\": \"^2.0.1\",\n        \"kind-of\": \"^3.0.2\",\n        \"normalize-path\": \"^2.0.1\",\n        \"object.omit\": \"^2.0.0\",\n        \"parse-glob\": \"^3.0.4\",\n        \"regex-cache\": \"^0.4.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/micromatch/node_modules/is-extglob\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/micromatch/node_modules/is-glob\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-extglob\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/normalize-path\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"remove-trailing-separator\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulp-watch/node_modules/slash\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulplog\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"glogg\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/hard-rejection\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/has\": {\n      \"version\": \"1.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/has-bigints\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/has-property-descriptors\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.1.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-proto\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-symbol-support-x\": {\n      \"version\": \"1.4.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-to-string-tag-x\": {\n      \"version\": \"1.4.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-symbol-support-x\": \"^1.4.1\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/has-tostringtag\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-symbols\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-unicode\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/has-value\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"get-value\": \"^2.0.6\",\n        \"has-values\": \"^1.0.0\",\n        \"isobject\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/has-values\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-number\": \"^3.0.0\",\n        \"kind-of\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/has-values/node_modules/kind-of\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-buffer\": \"^1.1.5\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/homedir-polyfill\": {\n      \"version\": \"1.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"parse-passwd\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/hosted-git-info\": {\n      \"version\": \"4.1.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"lru-cache\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/hosted-git-info/node_modules/lru-cache\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"yallist\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/hosted-git-info/node_modules/yallist\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/hotkeys-js\": {\n      \"version\": \"3.12.0\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/html-escaper\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/html-tags\": {\n      \"version\": \"3.3.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/html2canvas\": {\n      \"version\": \"1.4.1\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"css-line-break\": \"^2.1.0\",\n        \"text-segmentation\": \"^1.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/human-signals\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \">=10.17.0\"\n      }\n    },\n    \"node_modules/i18next\": {\n      \"version\": \"23.5.1\",\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://locize.com\"\n        },\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://locize.com/i18next.html\"\n        },\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://www.i18next.com/how-to/faq#i18next-is-awesome.-how-can-i-support-the-project\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.22.5\"\n      }\n    },\n    \"node_modules/i18next-browser-languagedetector\": {\n      \"version\": \"7.1.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.19.4\"\n      }\n    },\n    \"node_modules/i18next-xhr-backend\": {\n      \"version\": \"3.2.2\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.5.5\"\n      }\n    },\n    \"node_modules/ieee754\": {\n      \"version\": \"1.2.1\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/ignore\": {\n      \"version\": \"5.2.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 4\"\n      }\n    },\n    \"node_modules/immediate\": {\n      \"version\": \"3.0.6\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/immutable\": {\n      \"version\": \"4.3.4\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/import-fresh\": {\n      \"version\": \"3.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"parent-module\": \"^1.0.0\",\n        \"resolve-from\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/import-lazy\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/import-local\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"pkg-dir\": \"^4.2.0\",\n        \"resolve-cwd\": \"^3.0.0\"\n      },\n      \"bin\": {\n        \"import-local-fixture\": \"fixtures/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/imurmurhash\": {\n      \"version\": \"0.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.8.19\"\n      }\n    },\n    \"node_modules/indent-string\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/inflight\": {\n      \"version\": \"1.0.6\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/ini\": {\n      \"version\": \"1.3.8\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/interactjs\": {\n      \"version\": \"1.10.19\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@interactjs/types\": \"1.10.19\"\n      }\n    },\n    \"node_modules/internal-slot\": {\n      \"version\": \"1.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.0\",\n        \"has\": \"^1.0.3\",\n        \"side-channel\": \"^1.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/interpret\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/invert-kv\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-absolute\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-relative\": \"^1.0.0\",\n        \"is-windows\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-accessor-descriptor\": {\n      \"version\": \"0.1.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-accessor-descriptor/node_modules/kind-of\": {\n      \"version\": \"3.2.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-buffer\": \"^1.1.5\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-array-buffer\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.2.0\",\n        \"is-typed-array\": \"^1.1.10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-arrayish\": {\n      \"version\": \"0.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/is-bigint\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-bigints\": \"^1.0.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"binary-extensions\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-boolean-object\": {\n      \"version\": \"1.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-buffer\": {\n      \"version\": \"1.1.6\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/is-callable\": {\n      \"version\": \"1.2.7\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-core-module\": {\n      \"version\": \"2.13.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has\": \"^1.0.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-data-descriptor\": {\n      \"version\": \"0.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-data-descriptor/node_modules/kind-of\": {\n      \"version\": \"3.2.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-buffer\": \"^1.1.5\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-date-object\": {\n      \"version\": \"1.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-descriptor\": {\n      \"version\": \"0.1.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-accessor-descriptor\": \"^0.1.6\",\n        \"is-data-descriptor\": \"^0.1.4\",\n        \"kind-of\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-dotfile\": {\n      \"version\": \"1.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-equal-shallow\": {\n      \"version\": \"0.1.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-primitive\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-extendable\": {\n      \"version\": \"0.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-generator-fn\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-natural-number\": {\n      \"version\": \"4.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/is-negated-glob\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-negative-zero\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-number-object\": {\n      \"version\": \"1.0.7\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-number/node_modules/kind-of\": {\n      \"version\": \"3.2.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-buffer\": \"^1.1.5\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-object\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-path-cwd\": {\n      \"version\": \"2.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/is-path-inside\": {\n      \"version\": \"3.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-plain-obj\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-plain-object\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-posix-bracket\": {\n      \"version\": \"0.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-primitive\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-promise\": {\n      \"version\": \"2.2.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/is-regex\": {\n      \"version\": \"1.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-relative\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-unc-path\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-retry-allowed\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-shared-array-buffer\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-stream\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-string\": {\n      \"version\": \"1.0.7\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-symbol\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-symbols\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-typed-array\": {\n      \"version\": \"1.1.12\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"which-typed-array\": \"^1.1.11\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-unc-path\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"unc-path-regex\": \"^0.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-utf8\": {\n      \"version\": \"0.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/is-valid-glob\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-weakref\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-windows\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/isarray\": {\n      \"version\": \"1.0.0\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/isexe\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/isobject\": {\n      \"version\": \"3.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/istanbul-lib-coverage\": {\n      \"version\": \"3.2.0\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/istanbul-lib-instrument\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"@babel/core\": \"^7.12.3\",\n        \"@babel/parser\": \"^7.14.7\",\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"istanbul-lib-coverage\": \"^3.2.0\",\n        \"semver\": \"^7.5.4\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/istanbul-lib-instrument/node_modules/lru-cache\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"yallist\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/istanbul-lib-instrument/node_modules/semver\": {\n      \"version\": \"7.5.4\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"lru-cache\": \"^6.0.0\"\n      },\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/istanbul-lib-instrument/node_modules/yallist\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/istanbul-lib-report\": {\n      \"version\": \"3.0.1\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"make-dir\": \"^4.0.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/istanbul-lib-source-maps\": {\n      \"version\": \"4.0.1\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"debug\": \"^4.1.1\",\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"source-map\": \"^0.6.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/istanbul-reports\": {\n      \"version\": \"3.1.6\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"html-escaper\": \"^2.0.0\",\n        \"istanbul-lib-report\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/isurl\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-to-string-tag-x\": \"^1.2.0\",\n        \"is-object\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 4\"\n      }\n    },\n    \"node_modules/jackspeak\": {\n      \"version\": \"2.3.3\",\n      \"dev\": true,\n      \"license\": \"BlueOak-1.0.0\",\n      \"dependencies\": {\n        \"@isaacs/cliui\": \"^8.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      },\n      \"optionalDependencies\": {\n        \"@pkgjs/parseargs\": \"^0.11.0\"\n      }\n    },\n    \"node_modules/jest\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/core\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"import-local\": \"^3.0.2\",\n        \"jest-cli\": \"^29.7.0\"\n      },\n      \"bin\": {\n        \"jest\": \"bin/jest.js\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"node-notifier\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/jest-changed-files\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"execa\": \"^5.0.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"p-limit\": \"^3.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-circus\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/environment\": \"^29.7.0\",\n        \"@jest/expect\": \"^29.7.0\",\n        \"@jest/test-result\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"co\": \"^4.6.0\",\n        \"dedent\": \"^1.0.0\",\n        \"is-generator-fn\": \"^2.0.0\",\n        \"jest-each\": \"^29.7.0\",\n        \"jest-matcher-utils\": \"^29.7.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-runtime\": \"^29.7.0\",\n        \"jest-snapshot\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"p-limit\": \"^3.1.0\",\n        \"pretty-format\": \"^29.7.0\",\n        \"pure-rand\": \"^6.0.0\",\n        \"slash\": \"^3.0.0\",\n        \"stack-utils\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-cli\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/core\": \"^29.7.0\",\n        \"@jest/test-result\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"chalk\": \"^4.0.0\",\n        \"create-jest\": \"^29.7.0\",\n        \"exit\": \"^0.1.2\",\n        \"import-local\": \"^3.0.2\",\n        \"jest-config\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"jest-validate\": \"^29.7.0\",\n        \"yargs\": \"^17.3.1\"\n      },\n      \"bin\": {\n        \"jest\": \"bin/jest.js\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"node-notifier\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/jest-cli/node_modules/cliui\": {\n      \"version\": \"8.0.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"wrap-ansi\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/jest-cli/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jest-cli/node_modules/get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \"6.* || 8.* || >= 10.*\"\n      }\n    },\n    \"node_modules/jest-cli/node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-cli/node_modules/wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-cli/node_modules/y18n\": {\n      \"version\": \"5.0.8\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/jest-cli/node_modules/yargs\": {\n      \"version\": \"17.7.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"cliui\": \"^8.0.1\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.3\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^21.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/jest-cli/node_modules/yargs-parser\": {\n      \"version\": \"21.1.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/jest-config\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/core\": \"^7.11.6\",\n        \"@jest/test-sequencer\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"babel-jest\": \"^29.7.0\",\n        \"chalk\": \"^4.0.0\",\n        \"ci-info\": \"^3.2.0\",\n        \"deepmerge\": \"^4.2.2\",\n        \"glob\": \"^7.1.3\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-circus\": \"^29.7.0\",\n        \"jest-environment-node\": \"^29.7.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"jest-regex-util\": \"^29.6.3\",\n        \"jest-resolve\": \"^29.7.0\",\n        \"jest-runner\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"jest-validate\": \"^29.7.0\",\n        \"micromatch\": \"^4.0.4\",\n        \"parse-json\": \"^5.2.0\",\n        \"pretty-format\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\",\n        \"strip-json-comments\": \"^3.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"@types/node\": \"*\",\n        \"ts-node\": \">=9.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/node\": {\n          \"optional\": true\n        },\n        \"ts-node\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/jest-config/node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/jest-diff\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"chalk\": \"^4.0.0\",\n        \"diff-sequences\": \"^29.6.3\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-docblock\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"detect-newline\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-docblock/node_modules/detect-newline\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-each\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"chalk\": \"^4.0.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"jest-util\": \"^29.7.0\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-environment-node\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/environment\": \"^29.7.0\",\n        \"@jest/fake-timers\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"jest-mock\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-get-type\": {\n      \"version\": \"29.6.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-haste-map\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/graceful-fs\": \"^4.1.3\",\n        \"@types/node\": \"*\",\n        \"anymatch\": \"^3.0.3\",\n        \"fb-watchman\": \"^2.0.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-regex-util\": \"^29.6.3\",\n        \"jest-util\": \"^29.7.0\",\n        \"jest-worker\": \"^29.7.0\",\n        \"micromatch\": \"^4.0.4\",\n        \"walker\": \"^1.0.8\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"^2.3.2\"\n      }\n    },\n    \"node_modules/jest-haste-map/node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/jest-leak-detector\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jest-get-type\": \"^29.6.3\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-matcher-utils\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"chalk\": \"^4.0.0\",\n        \"jest-diff\": \"^29.7.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-message-util\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.12.13\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/stack-utils\": \"^2.0.0\",\n        \"chalk\": \"^4.0.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"micromatch\": \"^4.0.4\",\n        \"pretty-format\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\",\n        \"stack-utils\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-mock\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"jest-util\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-pnp-resolver\": {\n      \"version\": \"1.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"peerDependencies\": {\n        \"jest-resolve\": \"*\"\n      },\n      \"peerDependenciesMeta\": {\n        \"jest-resolve\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/jest-regex-util\": {\n      \"version\": \"29.6.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-resolve\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"chalk\": \"^4.0.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-haste-map\": \"^29.7.0\",\n        \"jest-pnp-resolver\": \"^1.2.2\",\n        \"jest-util\": \"^29.7.0\",\n        \"jest-validate\": \"^29.7.0\",\n        \"resolve\": \"^1.20.0\",\n        \"resolve.exports\": \"^2.0.0\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-resolve-dependencies\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jest-regex-util\": \"^29.6.3\",\n        \"jest-snapshot\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-runner\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/console\": \"^29.7.0\",\n        \"@jest/environment\": \"^29.7.0\",\n        \"@jest/test-result\": \"^29.7.0\",\n        \"@jest/transform\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"emittery\": \"^0.13.1\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-docblock\": \"^29.7.0\",\n        \"jest-environment-node\": \"^29.7.0\",\n        \"jest-haste-map\": \"^29.7.0\",\n        \"jest-leak-detector\": \"^29.7.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-resolve\": \"^29.7.0\",\n        \"jest-runtime\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"jest-watcher\": \"^29.7.0\",\n        \"jest-worker\": \"^29.7.0\",\n        \"p-limit\": \"^3.1.0\",\n        \"source-map-support\": \"0.5.13\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-runtime\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/environment\": \"^29.7.0\",\n        \"@jest/fake-timers\": \"^29.7.0\",\n        \"@jest/globals\": \"^29.7.0\",\n        \"@jest/source-map\": \"^29.6.3\",\n        \"@jest/test-result\": \"^29.7.0\",\n        \"@jest/transform\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"cjs-module-lexer\": \"^1.0.0\",\n        \"collect-v8-coverage\": \"^1.0.0\",\n        \"glob\": \"^7.1.3\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-haste-map\": \"^29.7.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-mock\": \"^29.7.0\",\n        \"jest-regex-util\": \"^29.6.3\",\n        \"jest-resolve\": \"^29.7.0\",\n        \"jest-snapshot\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\",\n        \"strip-bom\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-runtime/node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/jest-snapshot\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/core\": \"^7.11.6\",\n        \"@babel/generator\": \"^7.7.2\",\n        \"@babel/plugin-syntax-jsx\": \"^7.7.2\",\n        \"@babel/plugin-syntax-typescript\": \"^7.7.2\",\n        \"@babel/types\": \"^7.3.3\",\n        \"@jest/expect-utils\": \"^29.7.0\",\n        \"@jest/transform\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"babel-preset-current-node-syntax\": \"^1.0.0\",\n        \"chalk\": \"^4.0.0\",\n        \"expect\": \"^29.7.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-diff\": \"^29.7.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"jest-matcher-utils\": \"^29.7.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"natural-compare\": \"^1.4.0\",\n        \"pretty-format\": \"^29.7.0\",\n        \"semver\": \"^7.5.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-snapshot/node_modules/lru-cache\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"yallist\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/jest-snapshot/node_modules/semver\": {\n      \"version\": \"7.5.4\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"lru-cache\": \"^6.0.0\"\n      },\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/jest-snapshot/node_modules/yallist\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/jest-util\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"ci-info\": \"^3.2.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"picomatch\": \"^2.2.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-validate\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"camelcase\": \"^6.2.0\",\n        \"chalk\": \"^4.0.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"leven\": \"^3.1.0\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-validate/node_modules/camelcase\": {\n      \"version\": \"6.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/jest-watcher\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/test-result\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"ansi-escapes\": \"^4.2.1\",\n        \"chalk\": \"^4.0.0\",\n        \"emittery\": \"^0.13.1\",\n        \"jest-util\": \"^29.7.0\",\n        \"string-length\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-worker\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"*\",\n        \"jest-util\": \"^29.7.0\",\n        \"merge-stream\": \"^2.0.0\",\n        \"supports-color\": \"^8.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-worker/node_modules/supports-color\": {\n      \"version\": \"8.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/supports-color?sponsor=1\"\n      }\n    },\n    \"node_modules/jquery\": {\n      \"version\": \"3.7.1\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jquery-datetimepicker\": {\n      \"version\": \"2.5.21\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jquery\": \">= 1.7.2\",\n        \"jquery-mousewheel\": \">= 3.1.13\",\n        \"php-date-formatter\": \"^1.3.4\"\n      }\n    },\n    \"node_modules/jquery-mousewheel\": {\n      \"version\": \"3.1.13\"\n    },\n    \"node_modules/jquery-validation\": {\n      \"version\": \"1.19.5\",\n      \"license\": \"MIT\",\n      \"peerDependencies\": {\n        \"jquery\": \"^1.7 || ^2.0 || ^3.1\"\n      }\n    },\n    \"node_modules/js-tokens\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"argparse\": \"^2.0.1\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/jsesc\": {\n      \"version\": \"2.5.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"jsesc\": \"bin/jsesc\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/json-buffer\": {\n      \"version\": \"3.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/json-parse-even-better-errors\": {\n      \"version\": \"2.3.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/json-schema-traverse\": {\n      \"version\": \"0.4.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/json-stable-stringify-without-jsonify\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/json5\": {\n      \"version\": \"2.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"json5\": \"lib/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/jspdf\": {\n      \"version\": \"2.5.1\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.14.0\",\n        \"atob\": \"^2.1.2\",\n        \"btoa\": \"^1.2.1\",\n        \"fflate\": \"^0.4.8\"\n      },\n      \"optionalDependencies\": {\n        \"canvg\": \"^3.0.6\",\n        \"core-js\": \"^3.6.0\",\n        \"dompurify\": \"^2.2.0\",\n        \"html2canvas\": \"^1.0.0-rc.5\"\n      }\n    },\n    \"node_modules/jspdf/node_modules/dompurify\": {\n      \"version\": \"2.4.7\",\n      \"license\": \"(MPL-2.0 OR Apache-2.0)\",\n      \"optional\": true\n    },\n    \"node_modules/jszip\": {\n      \"version\": \"3.10.1\",\n      \"license\": \"(MIT OR GPL-3.0-or-later)\",\n      \"dependencies\": {\n        \"lie\": \"~3.3.0\",\n        \"pako\": \"~1.0.2\",\n        \"readable-stream\": \"~2.3.6\",\n        \"setimmediate\": \"^1.0.5\"\n      }\n    },\n    \"node_modules/just-debounce\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/keyv\": {\n      \"version\": \"4.5.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"json-buffer\": \"3.0.1\"\n      }\n    },\n    \"node_modules/kind-of\": {\n      \"version\": \"5.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/kleur\": {\n      \"version\": \"3.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/knockout\": {\n      \"version\": \"3.5.1\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/known-css-properties\": {\n      \"version\": \"0.28.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/konva\": {\n      \"version\": \"9.2.1\",\n      \"funding\": [\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/lavrton\"\n        },\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/konva\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/lavrton\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/last-run\": {\n      \"version\": \"1.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"default-resolution\": \"^2.0.0\",\n        \"es6-weak-map\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/lazystream\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"readable-stream\": \"^2.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6.3\"\n      }\n    },\n    \"node_modules/lcid\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"invert-kv\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/lead\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"flush-write-stream\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/leven\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/levn\": {\n      \"version\": \"0.4.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"~0.4.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/lie\": {\n      \"version\": \"3.3.0\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"immediate\": \"~3.0.5\"\n      }\n    },\n    \"node_modules/liftoff\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"extend\": \"^3.0.0\",\n        \"findup-sync\": \"^3.0.0\",\n        \"fined\": \"^1.0.1\",\n        \"flagged-respawn\": \"^1.0.0\",\n        \"is-plain-object\": \"^2.0.4\",\n        \"object.map\": \"^1.0.0\",\n        \"rechoir\": \"^0.6.2\",\n        \"resolve\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/liftoff/node_modules/is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/lilconfig\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/lines-and-columns\": {\n      \"version\": \"1.2.4\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/load-json-file\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.1.2\",\n        \"parse-json\": \"^2.2.0\",\n        \"pify\": \"^2.0.0\",\n        \"strip-bom\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/load-json-file/node_modules/parse-json\": {\n      \"version\": \"2.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"error-ex\": \"^1.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/load-json-file/node_modules/pify\": {\n      \"version\": \"2.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/load-json-file/node_modules/strip-bom\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/locate-path\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"p-locate\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/lodash.clonedeep\": {\n      \"version\": \"4.5.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.merge\": {\n      \"version\": \"4.6.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.truncate\": {\n      \"version\": \"4.4.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lowercase-keys\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/lru-cache\": {\n      \"version\": \"5.1.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"yallist\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/lru-queue\": {\n      \"version\": \"0.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es5-ext\": \"~0.10.2\"\n      }\n    },\n    \"node_modules/magic-wand-js\": {\n      \"version\": \"1.0.0\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/make-dir\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"semver\": \"^7.5.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/make-dir/node_modules/lru-cache\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"yallist\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/make-dir/node_modules/semver\": {\n      \"version\": \"7.5.4\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"lru-cache\": \"^6.0.0\"\n      },\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/make-dir/node_modules/yallist\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/make-iterator\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/make-iterator/node_modules/kind-of\": {\n      \"version\": \"6.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/makeerror\": {\n      \"version\": \"1.0.12\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"tmpl\": \"1.0.5\"\n      }\n    },\n    \"node_modules/map-cache\": {\n      \"version\": \"0.2.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/map-obj\": {\n      \"version\": \"4.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/map-stream\": {\n      \"version\": \"0.1.0\",\n      \"dev\": true\n    },\n    \"node_modules/map-visit\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"object-visit\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/matchdep\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"findup-sync\": \"^2.0.0\",\n        \"micromatch\": \"^3.0.4\",\n        \"resolve\": \"^1.4.0\",\n        \"stack-trace\": \"0.0.10\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10.0\"\n      }\n    },\n    \"node_modules/matchdep/node_modules/define-property\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-descriptor\": \"^1.0.2\",\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/matchdep/node_modules/extend-shallow\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"assign-symbols\": \"^1.0.0\",\n        \"is-extendable\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/matchdep/node_modules/findup-sync\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"detect-file\": \"^1.0.0\",\n        \"is-glob\": \"^3.1.0\",\n        \"micromatch\": \"^3.0.4\",\n        \"resolve-dir\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/matchdep/node_modules/is-accessor-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/matchdep/node_modules/is-data-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/matchdep/node_modules/is-descriptor\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-accessor-descriptor\": \"^1.0.0\",\n        \"is-data-descriptor\": \"^1.0.0\",\n        \"kind-of\": \"^6.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/matchdep/node_modules/is-extendable\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-plain-object\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/matchdep/node_modules/is-glob\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/matchdep/node_modules/is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/matchdep/node_modules/kind-of\": {\n      \"version\": \"6.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/matchdep/node_modules/micromatch\": {\n      \"version\": \"3.1.10\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"arr-diff\": \"^4.0.0\",\n        \"array-unique\": \"^0.3.2\",\n        \"braces\": \"^2.3.1\",\n        \"define-property\": \"^2.0.2\",\n        \"extend-shallow\": \"^3.0.2\",\n        \"extglob\": \"^2.0.4\",\n        \"fragment-cache\": \"^0.2.1\",\n        \"kind-of\": \"^6.0.2\",\n        \"nanomatch\": \"^1.2.9\",\n        \"object.pick\": \"^1.3.0\",\n        \"regex-not\": \"^1.0.0\",\n        \"snapdragon\": \"^0.8.1\",\n        \"to-regex\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/math-random\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/mathml-tag-names\": {\n      \"version\": \"2.1.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/mdn-data\": {\n      \"version\": \"2.0.14\",\n      \"dev\": true,\n      \"license\": \"CC0-1.0\"\n    },\n    \"node_modules/memoizee\": {\n      \"version\": \"0.4.15\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d\": \"^1.0.1\",\n        \"es5-ext\": \"^0.10.53\",\n        \"es6-weak-map\": \"^2.0.3\",\n        \"event-emitter\": \"^0.3.5\",\n        \"is-promise\": \"^2.2.2\",\n        \"lru-queue\": \"^0.1.0\",\n        \"next-tick\": \"^1.1.0\",\n        \"timers-ext\": \"^0.1.7\"\n      }\n    },\n    \"node_modules/meow\": {\n      \"version\": \"10.1.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/minimist\": \"^1.2.2\",\n        \"camelcase-keys\": \"^7.0.0\",\n        \"decamelize\": \"^5.0.0\",\n        \"decamelize-keys\": \"^1.1.0\",\n        \"hard-rejection\": \"^2.1.0\",\n        \"minimist-options\": \"4.1.0\",\n        \"normalize-package-data\": \"^3.0.2\",\n        \"read-pkg-up\": \"^8.0.0\",\n        \"redent\": \"^4.0.0\",\n        \"trim-newlines\": \"^4.0.2\",\n        \"type-fest\": \"^1.2.2\",\n        \"yargs-parser\": \"^20.2.9\"\n      },\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/meow/node_modules/type-fest\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"license\": \"(MIT OR CC0-1.0)\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/merge-stream\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/merge2\": {\n      \"version\": \"1.4.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/micromatch\": {\n      \"version\": \"4.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"braces\": \"^3.0.2\",\n        \"picomatch\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6\"\n      }\n    },\n    \"node_modules/micromatch/node_modules/braces\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fill-range\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/micromatch/node_modules/fill-range\": {\n      \"version\": \"7.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/micromatch/node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/micromatch/node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/mime-db\": {\n      \"version\": \"1.52.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mimic-fn\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/mimic-response\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/min-indent\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/minimist\": {\n      \"version\": \"1.2.8\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/minimist-options\": {\n      \"version\": \"4.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"arrify\": \"^1.0.1\",\n        \"is-plain-obj\": \"^1.1.0\",\n        \"kind-of\": \"^6.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/minimist-options/node_modules/kind-of\": {\n      \"version\": \"6.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/minipass\": {\n      \"version\": \"7.0.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      }\n    },\n    \"node_modules/mixin-deep\": {\n      \"version\": \"1.3.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"for-in\": \"^1.0.2\",\n        \"is-extendable\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/mixin-deep/node_modules/is-extendable\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-plain-object\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/mixin-deep/node_modules/is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/mkdirp\": {\n      \"version\": \"0.5.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"minimist\": \"^1.2.6\"\n      },\n      \"bin\": {\n        \"mkdirp\": \"bin/cmd.js\"\n      }\n    },\n    \"node_modules/moment\": {\n      \"version\": \"2.29.4\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/mute-stdout\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/nanoid\": {\n      \"version\": \"3.3.6\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"nanoid\": \"bin/nanoid.cjs\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || ^13.7 || ^14 || >=15.0.1\"\n      }\n    },\n    \"node_modules/nanomatch\": {\n      \"version\": \"1.2.13\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"arr-diff\": \"^4.0.0\",\n        \"array-unique\": \"^0.3.2\",\n        \"define-property\": \"^2.0.2\",\n        \"extend-shallow\": \"^3.0.2\",\n        \"fragment-cache\": \"^0.2.1\",\n        \"is-windows\": \"^1.0.2\",\n        \"kind-of\": \"^6.0.2\",\n        \"object.pick\": \"^1.3.0\",\n        \"regex-not\": \"^1.0.0\",\n        \"snapdragon\": \"^0.8.1\",\n        \"to-regex\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/nanomatch/node_modules/define-property\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-descriptor\": \"^1.0.2\",\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/nanomatch/node_modules/extend-shallow\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"assign-symbols\": \"^1.0.0\",\n        \"is-extendable\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/nanomatch/node_modules/is-accessor-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/nanomatch/node_modules/is-data-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/nanomatch/node_modules/is-descriptor\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-accessor-descriptor\": \"^1.0.0\",\n        \"is-data-descriptor\": \"^1.0.0\",\n        \"kind-of\": \"^6.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/nanomatch/node_modules/is-extendable\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-plain-object\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/nanomatch/node_modules/is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/nanomatch/node_modules/kind-of\": {\n      \"version\": \"6.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/napa\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"download\": \"^6.2.2\",\n        \"extend\": \"^3.0.1\",\n        \"load-json-file\": \"^2.0.0\",\n        \"minimist\": \"^1.2.0\",\n        \"mkdirp\": \"^0.5.1\",\n        \"npm-cache-filename\": \"^1.0.2\",\n        \"npmlog\": \"^4.1.0\",\n        \"rimraf\": \"^2.6.1\",\n        \"tar-pack\": \"^3.4.0\",\n        \"write-json-file\": \"^2.2.0\"\n      },\n      \"bin\": {\n        \"napa\": \"bin/napa\"\n      },\n      \"engines\": {\n        \"node\": \">= 4.0\"\n      }\n    },\n    \"node_modules/napa/node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/napa/node_modules/rimraf\": {\n      \"version\": \"2.7.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"glob\": \"^7.1.3\"\n      },\n      \"bin\": {\n        \"rimraf\": \"bin.js\"\n      }\n    },\n    \"node_modules/natural-compare\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/next-tick\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/node-int64\": {\n      \"version\": \"0.4.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/node-releases\": {\n      \"version\": \"2.0.13\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/normalize-package-data\": {\n      \"version\": \"3.0.3\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"hosted-git-info\": \"^4.0.1\",\n        \"is-core-module\": \"^2.5.0\",\n        \"semver\": \"^7.3.4\",\n        \"validate-npm-package-license\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/normalize-package-data/node_modules/lru-cache\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"yallist\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/normalize-package-data/node_modules/semver\": {\n      \"version\": \"7.5.4\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"lru-cache\": \"^6.0.0\"\n      },\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/normalize-package-data/node_modules/yallist\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/normalize-range\": {\n      \"version\": \"0.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/now-and-later\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"once\": \"^1.3.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/npm-cache-filename\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/npm-conf\": {\n      \"version\": \"1.1.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"config-chain\": \"^1.1.11\",\n        \"pify\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/npm-run-path\": {\n      \"version\": \"4.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"path-key\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/npmlog\": {\n      \"version\": \"4.1.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"are-we-there-yet\": \"~1.1.2\",\n        \"console-control-strings\": \"~1.1.0\",\n        \"gauge\": \"~2.7.3\",\n        \"set-blocking\": \"~2.0.0\"\n      }\n    },\n    \"node_modules/number-is-nan\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/numeral\": {\n      \"version\": \"2.0.6\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/object-assign\": {\n      \"version\": \"4.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-copy\": {\n      \"version\": \"0.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"copy-descriptor\": \"^0.1.0\",\n        \"define-property\": \"^0.2.5\",\n        \"kind-of\": \"^3.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-copy/node_modules/kind-of\": {\n      \"version\": \"3.2.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-buffer\": \"^1.1.5\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.12.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object-keys\": {\n      \"version\": \"1.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/object-visit\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object.assign\": {\n      \"version\": \"4.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"has-symbols\": \"^1.0.3\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object.defaults\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"array-each\": \"^1.0.1\",\n        \"array-slice\": \"^1.0.0\",\n        \"for-own\": \"^1.0.0\",\n        \"isobject\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object.fromentries\": {\n      \"version\": \"2.0.7\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object.groupby\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"get-intrinsic\": \"^1.2.1\"\n      }\n    },\n    \"node_modules/object.map\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"for-own\": \"^1.0.0\",\n        \"make-iterator\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object.omit\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"for-own\": \"^0.1.4\",\n        \"is-extendable\": \"^0.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object.omit/node_modules/for-own\": {\n      \"version\": \"0.1.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"for-in\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object.pick\": {\n      \"version\": \"1.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object.reduce\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"for-own\": \"^1.0.0\",\n        \"make-iterator\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object.values\": {\n      \"version\": \"1.1.7\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/once\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/onetime\": {\n      \"version\": \"5.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mimic-fn\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/optionator\": {\n      \"version\": \"0.9.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@aashutoshrathi/word-wrap\": \"^1.2.3\",\n        \"deep-is\": \"^0.1.3\",\n        \"fast-levenshtein\": \"^2.0.6\",\n        \"levn\": \"^0.4.1\",\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"^0.4.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/ordered-read-streams\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"readable-stream\": \"^2.0.1\"\n      }\n    },\n    \"node_modules/os-locale\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"lcid\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/p-cancelable\": {\n      \"version\": \"0.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/p-event\": {\n      \"version\": \"1.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"p-timeout\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/p-finally\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/p-limit\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"yocto-queue\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-locate\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"p-limit\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-map\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"aggregate-error\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-timeout\": {\n      \"version\": \"1.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"p-finally\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/p-try\": {\n      \"version\": \"2.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/pako\": {\n      \"version\": \"1.0.11\",\n      \"license\": \"(MIT AND Zlib)\"\n    },\n    \"node_modules/parent-module\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"callsites\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/parse-filepath\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-absolute\": \"^1.0.0\",\n        \"map-cache\": \"^0.2.0\",\n        \"path-root\": \"^0.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.8\"\n      }\n    },\n    \"node_modules/parse-glob\": {\n      \"version\": \"3.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"glob-base\": \"^0.3.0\",\n        \"is-dotfile\": \"^1.0.0\",\n        \"is-extglob\": \"^1.0.0\",\n        \"is-glob\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/parse-glob/node_modules/is-extglob\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/parse-glob/node_modules/is-glob\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-extglob\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/parse-json\": {\n      \"version\": \"5.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.0.0\",\n        \"error-ex\": \"^1.3.1\",\n        \"json-parse-even-better-errors\": \"^2.3.0\",\n        \"lines-and-columns\": \"^1.1.6\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/parse-node-version\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/parse-passwd\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/pascalcase\": {\n      \"version\": \"0.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-dirname\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/path-exists\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-key\": {\n      \"version\": \"3.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-parse\": {\n      \"version\": \"1.0.7\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/path-root\": {\n      \"version\": \"0.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"path-root-regex\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-root-regex\": {\n      \"version\": \"0.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-scurry\": {\n      \"version\": \"1.10.1\",\n      \"dev\": true,\n      \"license\": \"BlueOak-1.0.0\",\n      \"dependencies\": {\n        \"lru-cache\": \"^9.1.1 || ^10.0.0\",\n        \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/path-scurry/node_modules/lru-cache\": {\n      \"version\": \"10.0.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \"14 || >=16.14\"\n      }\n    },\n    \"node_modules/path-type\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/pause-stream\": {\n      \"version\": \"0.0.11\",\n      \"dev\": true,\n      \"license\": [\n        \"MIT\",\n        \"Apache2\"\n      ],\n      \"dependencies\": {\n        \"through\": \"~2.3\"\n      }\n    },\n    \"node_modules/pend\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/performance-now\": {\n      \"version\": \"2.1.0\",\n      \"license\": \"MIT\",\n      \"optional\": true\n    },\n    \"node_modules/php-date-formatter\": {\n      \"version\": \"1.3.6\",\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/picocolors\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/pify\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/pinkie\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/pinkie-promise\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"pinkie\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/pirates\": {\n      \"version\": \"4.0.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/pkg-dir\": {\n      \"version\": \"4.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"find-up\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/pkg-dir/node_modules/find-up\": {\n      \"version\": \"4.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"locate-path\": \"^5.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/pkg-dir/node_modules/locate-path\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"p-locate\": \"^4.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/pkg-dir/node_modules/p-limit\": {\n      \"version\": \"2.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"p-try\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/pkg-dir/node_modules/p-locate\": {\n      \"version\": \"4.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"p-limit\": \"^2.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/plugin-error\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-colors\": \"^1.0.1\",\n        \"arr-diff\": \"^4.0.0\",\n        \"arr-union\": \"^3.1.0\",\n        \"extend-shallow\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/plugin-error/node_modules/extend-shallow\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"assign-symbols\": \"^1.0.0\",\n        \"is-extendable\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/plugin-error/node_modules/is-extendable\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-plain-object\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/plugin-error/node_modules/is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/popper.js\": {\n      \"version\": \"1.16.1\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/popperjs\"\n      }\n    },\n    \"node_modules/posix-character-classes\": {\n      \"version\": \"0.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/postcss\": {\n      \"version\": \"8.4.30\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/postcss\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"nanoid\": \"^3.3.6\",\n        \"picocolors\": \"^1.0.0\",\n        \"source-map-js\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || >=14\"\n      }\n    },\n    \"node_modules/postcss-load-config\": {\n      \"version\": \"3.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"lilconfig\": \"^2.0.5\",\n        \"yaml\": \"^1.10.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 10\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/postcss/\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \">=8.0.9\",\n        \"ts-node\": \">=9.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"postcss\": {\n          \"optional\": true\n        },\n        \"ts-node\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/postcss-media-query-parser\": {\n      \"version\": \"0.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/postcss-resolve-nested-selector\": {\n      \"version\": \"0.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/postcss-safe-parser\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/postcss/\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.3.3\"\n      }\n    },\n    \"node_modules/postcss-scss\": {\n      \"version\": \"4.0.8\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/postcss-scss\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12.0\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.4.29\"\n      }\n    },\n    \"node_modules/postcss-selector-parser\": {\n      \"version\": \"6.0.13\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"cssesc\": \"^3.0.0\",\n        \"util-deprecate\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/postcss-sorting\": {\n      \"version\": \"8.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"peerDependencies\": {\n        \"postcss\": \"^8.4.20\"\n      }\n    },\n    \"node_modules/postcss-value-parser\": {\n      \"version\": \"4.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/prelude-ls\": {\n      \"version\": \"1.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/prepend-http\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/preserve\": {\n      \"version\": \"0.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/pretty-format/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/pretty-hrtime\": {\n      \"version\": \"1.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/process-nextick-args\": {\n      \"version\": \"2.0.1\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/prompts\": {\n      \"version\": \"2.4.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kleur\": \"^3.0.3\",\n        \"sisteransi\": \"^1.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/proto-list\": {\n      \"version\": \"1.2.4\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/pump\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"end-of-stream\": \"^1.1.0\",\n        \"once\": \"^1.3.1\"\n      }\n    },\n    \"node_modules/pumpify\": {\n      \"version\": \"1.5.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"duplexify\": \"^3.6.0\",\n        \"inherits\": \"^2.0.3\",\n        \"pump\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/pumpify/node_modules/duplexify\": {\n      \"version\": \"3.7.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"end-of-stream\": \"^1.0.0\",\n        \"inherits\": \"^2.0.1\",\n        \"readable-stream\": \"^2.0.0\",\n        \"stream-shift\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/punycode\": {\n      \"version\": \"2.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/pure-rand\": {\n      \"version\": \"6.0.3\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://github.com/sponsors/dubzzz\"\n        },\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/fast-check\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/purecss\": {\n      \"version\": \"3.0.0\",\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/queue-microtask\": {\n      \"version\": \"1.2.3\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/quick-lru\": {\n      \"version\": \"5.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/raf\": {\n      \"version\": \"3.4.1\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"performance-now\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/randomatic\": {\n      \"version\": \"3.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-number\": \"^4.0.0\",\n        \"kind-of\": \"^6.0.0\",\n        \"math-random\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10.0\"\n      }\n    },\n    \"node_modules/randomatic/node_modules/is-number\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/randomatic/node_modules/kind-of\": {\n      \"version\": \"6.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/react-is\": {\n      \"version\": \"18.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/read-file\": {\n      \"version\": \"0.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.8\"\n      }\n    },\n    \"node_modules/read-pkg\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/normalize-package-data\": \"^2.4.0\",\n        \"normalize-package-data\": \"^3.0.2\",\n        \"parse-json\": \"^5.2.0\",\n        \"type-fest\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/read-pkg-up\": {\n      \"version\": \"8.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"find-up\": \"^5.0.0\",\n        \"read-pkg\": \"^6.0.0\",\n        \"type-fest\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/read-pkg-up/node_modules/type-fest\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"license\": \"(MIT OR CC0-1.0)\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/read-pkg/node_modules/type-fest\": {\n      \"version\": \"1.4.0\",\n      \"dev\": true,\n      \"license\": \"(MIT OR CC0-1.0)\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/readable-stream\": {\n      \"version\": \"2.3.8\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"core-util-is\": \"~1.0.0\",\n        \"inherits\": \"~2.0.3\",\n        \"isarray\": \"~1.0.0\",\n        \"process-nextick-args\": \"~2.0.0\",\n        \"safe-buffer\": \"~5.1.1\",\n        \"string_decoder\": \"~1.1.1\",\n        \"util-deprecate\": \"~1.0.1\"\n      }\n    },\n    \"node_modules/readable-stream/node_modules/safe-buffer\": {\n      \"version\": \"5.1.2\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"2.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.1.11\",\n        \"micromatch\": \"^3.1.10\",\n        \"readable-stream\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/readdirp/node_modules/define-property\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-descriptor\": \"^1.0.2\",\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/readdirp/node_modules/extend-shallow\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"assign-symbols\": \"^1.0.0\",\n        \"is-extendable\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/readdirp/node_modules/is-accessor-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/readdirp/node_modules/is-data-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/readdirp/node_modules/is-descriptor\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-accessor-descriptor\": \"^1.0.0\",\n        \"is-data-descriptor\": \"^1.0.0\",\n        \"kind-of\": \"^6.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/readdirp/node_modules/is-extendable\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-plain-object\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/readdirp/node_modules/is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/readdirp/node_modules/kind-of\": {\n      \"version\": \"6.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/readdirp/node_modules/micromatch\": {\n      \"version\": \"3.1.10\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"arr-diff\": \"^4.0.0\",\n        \"array-unique\": \"^0.3.2\",\n        \"braces\": \"^2.3.1\",\n        \"define-property\": \"^2.0.2\",\n        \"extend-shallow\": \"^3.0.2\",\n        \"extglob\": \"^2.0.4\",\n        \"fragment-cache\": \"^0.2.1\",\n        \"kind-of\": \"^6.0.2\",\n        \"nanomatch\": \"^1.2.9\",\n        \"object.pick\": \"^1.3.0\",\n        \"regex-not\": \"^1.0.0\",\n        \"snapdragon\": \"^0.8.1\",\n        \"to-regex\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/rechoir\": {\n      \"version\": \"0.6.2\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"resolve\": \"^1.1.6\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/redent\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"indent-string\": \"^5.0.0\",\n        \"strip-indent\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/redent/node_modules/indent-string\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/regenerator-runtime\": {\n      \"version\": \"0.14.0\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/regex-cache\": {\n      \"version\": \"0.4.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-equal-shallow\": \"^0.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/regex-not\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"extend-shallow\": \"^3.0.2\",\n        \"safe-regex\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/regex-not/node_modules/extend-shallow\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"assign-symbols\": \"^1.0.0\",\n        \"is-extendable\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/regex-not/node_modules/is-extendable\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-plain-object\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/regex-not/node_modules/is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/regexp.prototype.flags\": {\n      \"version\": \"1.5.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"set-function-name\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/remove-bom-buffer\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-buffer\": \"^1.1.5\",\n        \"is-utf8\": \"^0.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/remove-bom-stream\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"remove-bom-buffer\": \"^3.0.0\",\n        \"safe-buffer\": \"^5.1.0\",\n        \"through2\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/remove-trailing-separator\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/repeat-element\": {\n      \"version\": \"1.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/repeat-string\": {\n      \"version\": \"1.6.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/replace-ext\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/replace-homedir\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"homedir-polyfill\": \"^1.0.1\",\n        \"is-absolute\": \"^1.0.0\",\n        \"remove-trailing-separator\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/replace-in-file\": {\n      \"version\": \"7.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"chalk\": \"^4.1.2\",\n        \"glob\": \"^8.1.0\",\n        \"yargs\": \"^17.7.2\"\n      },\n      \"bin\": {\n        \"replace-in-file\": \"bin/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/replace-in-file/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/replace-in-file/node_modules/cliui\": {\n      \"version\": \"8.0.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"wrap-ansi\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/replace-in-file/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/replace-in-file/node_modules/get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \"6.* || 8.* || >= 10.*\"\n      }\n    },\n    \"node_modules/replace-in-file/node_modules/glob\": {\n      \"version\": \"8.1.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^5.0.1\",\n        \"once\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/replace-in-file/node_modules/minimatch\": {\n      \"version\": \"5.1.6\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/replace-in-file/node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/replace-in-file/node_modules/wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/replace-in-file/node_modules/y18n\": {\n      \"version\": \"5.0.8\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/replace-in-file/node_modules/yargs\": {\n      \"version\": \"17.7.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"cliui\": \"^8.0.1\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.3\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^21.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/replace-in-file/node_modules/yargs-parser\": {\n      \"version\": \"21.1.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/require-directory\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/require-from-string\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/require-main-filename\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/resolve\": {\n      \"version\": \"1.22.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-core-module\": \"^2.13.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/resolve-cwd\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"resolve-from\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/resolve-cwd/node_modules/resolve-from\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/resolve-dir\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"expand-tilde\": \"^2.0.0\",\n        \"global-modules\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/resolve-from\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/resolve-options\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"value-or-function\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/resolve-url\": {\n      \"version\": \"0.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/resolve.exports\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/ret\": {\n      \"version\": \"0.1.15\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.12\"\n      }\n    },\n    \"node_modules/reusify\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"iojs\": \">=1.0.0\",\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/rgbcolor\": {\n      \"version\": \"1.0.1\",\n      \"license\": \"MIT OR SEE LICENSE IN FEEL-FREE.md\",\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">= 0.8.15\"\n      }\n    },\n    \"node_modules/rimraf\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"glob\": \"^7.1.3\"\n      },\n      \"bin\": {\n        \"rimraf\": \"bin.js\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/rimraf/node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/run-parallel\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"queue-microtask\": \"^1.2.2\"\n      }\n    },\n    \"node_modules/safe-array-concat\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.2.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"isarray\": \"^2.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/safe-array-concat/node_modules/isarray\": {\n      \"version\": \"2.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/safe-buffer\": {\n      \"version\": \"5.2.1\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/safe-regex\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ret\": \"~0.1.10\"\n      }\n    },\n    \"node_modules/safe-regex-test\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.1.3\",\n        \"is-regex\": \"^1.1.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/sass\": {\n      \"version\": \"1.67.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"chokidar\": \">=3.0.0 <4.0.0\",\n        \"immutable\": \"^4.0.0\",\n        \"source-map-js\": \">=0.6.2 <2.0.0\"\n      },\n      \"bin\": {\n        \"sass\": \"sass.js\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      }\n    },\n    \"node_modules/sass/node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/sass/node_modules/binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/sass/node_modules/braces\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fill-range\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/sass/node_modules/chokidar\": {\n      \"version\": \"3.5.3\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://paulmillr.com/funding/\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/sass/node_modules/fill-range\": {\n      \"version\": \"7.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/sass/node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/sass/node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/sass/node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/sass/node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/sass/node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/seek-bzip\": {\n      \"version\": \"1.0.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"commander\": \"^2.8.1\"\n      },\n      \"bin\": {\n        \"seek-bunzip\": \"bin/seek-bunzip\",\n        \"seek-table\": \"bin/seek-bzip-table\"\n      }\n    },\n    \"node_modules/select2\": {\n      \"version\": \"4.0.13\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/semver\": {\n      \"version\": \"6.3.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      }\n    },\n    \"node_modules/semver-greatest-satisfied-range\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"sver-compat\": \"^1.5.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/set-blocking\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/set-function-name\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"define-data-property\": \"^1.0.1\",\n        \"functions-have-names\": \"^1.2.3\",\n        \"has-property-descriptors\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/set-immediate-shim\": {\n      \"version\": \"1.0.1\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/set-value\": {\n      \"version\": \"2.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"extend-shallow\": \"^2.0.1\",\n        \"is-extendable\": \"^0.1.1\",\n        \"is-plain-object\": \"^2.0.3\",\n        \"split-string\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/set-value/node_modules/is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/setimmediate\": {\n      \"version\": \"1.0.5\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/shebang-command\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"shebang-regex\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/shebang-regex\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.0.2\",\n        \"object-inspect\": \"^1.9.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/signal-exit\": {\n      \"version\": \"4.1.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/sisteransi\": {\n      \"version\": \"1.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/slice-ansi\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"astral-regex\": \"^2.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/slice-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/snapdragon\": {\n      \"version\": \"0.8.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"base\": \"^0.11.1\",\n        \"debug\": \"^2.2.0\",\n        \"define-property\": \"^0.2.5\",\n        \"extend-shallow\": \"^2.0.1\",\n        \"map-cache\": \"^0.2.2\",\n        \"source-map\": \"^0.5.6\",\n        \"source-map-resolve\": \"^0.5.0\",\n        \"use\": \"^3.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/snapdragon-node\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"define-property\": \"^1.0.0\",\n        \"isobject\": \"^3.0.0\",\n        \"snapdragon-util\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/snapdragon-node/node_modules/define-property\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-descriptor\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/snapdragon-node/node_modules/is-accessor-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/snapdragon-node/node_modules/is-data-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/snapdragon-node/node_modules/is-descriptor\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-accessor-descriptor\": \"^1.0.0\",\n        \"is-data-descriptor\": \"^1.0.0\",\n        \"kind-of\": \"^6.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/snapdragon-node/node_modules/kind-of\": {\n      \"version\": \"6.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/snapdragon-util\": {\n      \"version\": \"3.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^3.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/snapdragon-util/node_modules/kind-of\": {\n      \"version\": \"3.2.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-buffer\": \"^1.1.5\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/snapdragon/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/snapdragon/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/snapdragon/node_modules/source-map\": {\n      \"version\": \"0.5.7\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/snapdragon/node_modules/source-map-resolve\": {\n      \"version\": \"0.5.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"atob\": \"^2.1.2\",\n        \"decode-uri-component\": \"^0.2.0\",\n        \"resolve-url\": \"^0.2.1\",\n        \"source-map-url\": \"^0.4.0\",\n        \"urix\": \"^0.1.0\"\n      }\n    },\n    \"node_modules/sort-keys\": {\n      \"version\": \"1.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-plain-obj\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/sort-keys-length\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"sort-keys\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/sortablejs\": {\n      \"version\": \"1.15.0\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/source-map\": {\n      \"version\": \"0.6.1\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/source-map-js\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/source-map-resolve\": {\n      \"version\": \"0.6.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"atob\": \"^2.1.2\",\n        \"decode-uri-component\": \"^0.2.0\"\n      }\n    },\n    \"node_modules/source-map-support\": {\n      \"version\": \"0.5.13\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"buffer-from\": \"^1.0.0\",\n        \"source-map\": \"^0.6.0\"\n      }\n    },\n    \"node_modules/source-map-url\": {\n      \"version\": \"0.4.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/sparkles\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/spdx-correct\": {\n      \"version\": \"3.2.0\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-license-ids\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/spdx-exceptions\": {\n      \"version\": \"2.3.0\",\n      \"dev\": true,\n      \"license\": \"CC-BY-3.0\"\n    },\n    \"node_modules/spdx-expression-parse\": {\n      \"version\": \"3.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"spdx-exceptions\": \"^2.1.0\",\n        \"spdx-license-ids\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/spdx-license-ids\": {\n      \"version\": \"3.0.15\",\n      \"dev\": true,\n      \"license\": \"CC0-1.0\"\n    },\n    \"node_modules/split\": {\n      \"version\": \"0.3.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"through\": \"2\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/split-string\": {\n      \"version\": \"3.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"extend-shallow\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/split-string/node_modules/extend-shallow\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"assign-symbols\": \"^1.0.0\",\n        \"is-extendable\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/split-string/node_modules/is-extendable\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-plain-object\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/split-string/node_modules/is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/sprintf-js\": {\n      \"version\": \"1.0.3\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/stack-trace\": {\n      \"version\": \"0.0.10\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/stack-utils\": {\n      \"version\": \"2.0.6\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"escape-string-regexp\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/stack-utils/node_modules/escape-string-regexp\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/stackblur-canvas\": {\n      \"version\": \"2.6.0\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=0.1.14\"\n      }\n    },\n    \"node_modules/static-extend\": {\n      \"version\": \"0.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"define-property\": \"^0.2.5\",\n        \"object-copy\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/stream-combiner\": {\n      \"version\": \"0.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"duplexer\": \"~0.1.1\"\n      }\n    },\n    \"node_modules/stream-exhaust\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/stream-shift\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/string_decoder\": {\n      \"version\": \"1.1.1\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safe-buffer\": \"~5.1.0\"\n      }\n    },\n    \"node_modules/string_decoder/node_modules/safe-buffer\": {\n      \"version\": \"5.1.2\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/string-length\": {\n      \"version\": \"4.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"char-regex\": \"^1.0.2\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"5.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"eastasianwidth\": \"^0.2.0\",\n        \"emoji-regex\": \"^9.2.2\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/string-width-cjs\": {\n      \"name\": \"string-width\",\n      \"version\": \"4.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/string-width-cjs/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/string-width/node_modules/ansi-regex\": {\n      \"version\": \"6.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/string-width/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/string.prototype.trim\": {\n      \"version\": \"1.2.8\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trimend\": {\n      \"version\": \"1.0.7\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trimstart\": {\n      \"version\": \"1.0.7\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-ansi-cjs\": {\n      \"name\": \"strip-ansi\",\n      \"version\": \"6.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-bom\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-bom-stream\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"first-chunk-stream\": \"^2.0.0\",\n        \"strip-bom\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/strip-bom-stream/node_modules/strip-bom\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-utf8\": \"^0.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/strip-bom-string\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/strip-dirs\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-natural-number\": \"^4.0.1\"\n      }\n    },\n    \"node_modules/strip-final-newline\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/strip-indent\": {\n      \"version\": \"4.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"min-indent\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/strip-outer\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"escape-string-regexp\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/strip-outer/node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/style-search\": {\n      \"version\": \"0.1.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/stylelint\": {\n      \"version\": \"15.10.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@csstools/css-parser-algorithms\": \"^2.3.1\",\n        \"@csstools/css-tokenizer\": \"^2.2.0\",\n        \"@csstools/media-query-list-parser\": \"^2.1.4\",\n        \"@csstools/selector-specificity\": \"^3.0.0\",\n        \"balanced-match\": \"^2.0.0\",\n        \"colord\": \"^2.9.3\",\n        \"cosmiconfig\": \"^8.2.0\",\n        \"css-functions-list\": \"^3.2.0\",\n        \"css-tree\": \"^2.3.1\",\n        \"debug\": \"^4.3.4\",\n        \"fast-glob\": \"^3.3.1\",\n        \"fastest-levenshtein\": \"^1.0.16\",\n        \"file-entry-cache\": \"^6.0.1\",\n        \"global-modules\": \"^2.0.0\",\n        \"globby\": \"^11.1.0\",\n        \"globjoin\": \"^0.1.4\",\n        \"html-tags\": \"^3.3.1\",\n        \"ignore\": \"^5.2.4\",\n        \"import-lazy\": \"^4.0.0\",\n        \"imurmurhash\": \"^0.1.4\",\n        \"is-plain-object\": \"^5.0.0\",\n        \"known-css-properties\": \"^0.28.0\",\n        \"mathml-tag-names\": \"^2.1.3\",\n        \"meow\": \"^10.1.5\",\n        \"micromatch\": \"^4.0.5\",\n        \"normalize-path\": \"^3.0.0\",\n        \"picocolors\": \"^1.0.0\",\n        \"postcss\": \"^8.4.27\",\n        \"postcss-resolve-nested-selector\": \"^0.1.1\",\n        \"postcss-safe-parser\": \"^6.0.0\",\n        \"postcss-selector-parser\": \"^6.0.13\",\n        \"postcss-value-parser\": \"^4.2.0\",\n        \"resolve-from\": \"^5.0.0\",\n        \"string-width\": \"^4.2.3\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"style-search\": \"^0.1.0\",\n        \"supports-hyperlinks\": \"^3.0.0\",\n        \"svg-tags\": \"^1.0.0\",\n        \"table\": \"^6.8.1\",\n        \"write-file-atomic\": \"^5.0.1\"\n      },\n      \"bin\": {\n        \"stylelint\": \"bin/stylelint.mjs\"\n      },\n      \"engines\": {\n        \"node\": \"^14.13.1 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/stylelint\"\n      }\n    },\n    \"node_modules/stylelint-config-recommended\": {\n      \"version\": \"13.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^14.13.1 || >=16.0.0\"\n      },\n      \"peerDependencies\": {\n        \"stylelint\": \"^15.10.0\"\n      }\n    },\n    \"node_modules/stylelint-config-sass-guidelines\": {\n      \"version\": \"10.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"postcss-scss\": \"^4.0.6\",\n        \"stylelint-scss\": \"^4.4.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.13.1 || >=16.13.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.4.21\",\n        \"stylelint\": \"^15.2.0\"\n      }\n    },\n    \"node_modules/stylelint-config-sass-guidelines/node_modules/stylelint-scss\": {\n      \"version\": \"4.7.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"postcss-media-query-parser\": \"^0.2.3\",\n        \"postcss-resolve-nested-selector\": \"^0.1.1\",\n        \"postcss-selector-parser\": \"^6.0.11\",\n        \"postcss-value-parser\": \"^4.2.0\"\n      },\n      \"peerDependencies\": {\n        \"stylelint\": \"^14.5.1 || ^15.0.0\"\n      }\n    },\n    \"node_modules/stylelint-config-standard\": {\n      \"version\": \"34.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"stylelint-config-recommended\": \"^13.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.13.1 || >=16.0.0\"\n      },\n      \"peerDependencies\": {\n        \"stylelint\": \"^15.10.0\"\n      }\n    },\n    \"node_modules/stylelint-order\": {\n      \"version\": \"6.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"postcss\": \"^8.4.21\",\n        \"postcss-sorting\": \"^8.0.2\"\n      },\n      \"peerDependencies\": {\n        \"stylelint\": \"^14.0.0 || ^15.0.0\"\n      }\n    },\n    \"node_modules/stylelint-scss\": {\n      \"version\": \"5.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"known-css-properties\": \"^0.28.0\",\n        \"postcss-media-query-parser\": \"^0.2.3\",\n        \"postcss-resolve-nested-selector\": \"^0.1.1\",\n        \"postcss-selector-parser\": \"^6.0.13\",\n        \"postcss-value-parser\": \"^4.2.0\"\n      },\n      \"peerDependencies\": {\n        \"stylelint\": \"^14.5.1 || ^15.0.0\"\n      }\n    },\n    \"node_modules/stylelint/node_modules/balanced-match\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/stylelint/node_modules/css-tree\": {\n      \"version\": \"2.3.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mdn-data\": \"2.0.30\",\n        \"source-map-js\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12.20.0 || ^14.13.0 || >=15.0.0\"\n      }\n    },\n    \"node_modules/stylelint/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/stylelint/node_modules/global-modules\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"global-prefix\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/stylelint/node_modules/global-prefix\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ini\": \"^1.3.5\",\n        \"kind-of\": \"^6.0.2\",\n        \"which\": \"^1.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/stylelint/node_modules/kind-of\": {\n      \"version\": \"6.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/stylelint/node_modules/mdn-data\": {\n      \"version\": \"2.0.30\",\n      \"dev\": true,\n      \"license\": \"CC0-1.0\"\n    },\n    \"node_modules/stylelint/node_modules/resolve-from\": {\n      \"version\": \"5.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/stylelint/node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/stylelint/node_modules/which\": {\n      \"version\": \"1.3.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"which\": \"bin/which\"\n      }\n    },\n    \"node_modules/stylelint/node_modules/write-file-atomic\": {\n      \"version\": \"5.0.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"imurmurhash\": \"^0.1.4\",\n        \"signal-exit\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^14.17.0 || ^16.13.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/summernote\": {\n      \"version\": \"0.8.20\",\n      \"resolved\": \"https://registry.npmjs.org/summernote/-/summernote-0.8.20.tgz\",\n      \"integrity\": \"sha512-W9RhjQjsn+b1s9xiJQgJbCiYGJaDAc9CdEqXo+D13WuStG8lCdtKaO5AiNiSSMJsQJN2EfGSwbBQt+SFE2B8Kw==\",\n      \"hasInstallScript\": true\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/supports-hyperlinks\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\",\n        \"supports-color\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=14.18\"\n      }\n    },\n    \"node_modules/supports-preserve-symlinks-flag\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/sver-compat\": {\n      \"version\": \"1.5.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es6-iterator\": \"^2.0.1\",\n        \"es6-symbol\": \"^3.1.1\"\n      }\n    },\n    \"node_modules/svg-pathdata\": {\n      \"version\": \"6.0.3\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=12.0.0\"\n      }\n    },\n    \"node_modules/svg-tags\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true\n    },\n    \"node_modules/table\": {\n      \"version\": \"6.8.1\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"ajv\": \"^8.0.1\",\n        \"lodash.truncate\": \"^4.4.2\",\n        \"slice-ansi\": \"^4.0.0\",\n        \"string-width\": \"^4.2.3\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/table/node_modules/ajv\": {\n      \"version\": \"8.12.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"json-schema-traverse\": \"^1.0.0\",\n        \"require-from-string\": \"^2.0.2\",\n        \"uri-js\": \"^4.2.2\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/epoberezkin\"\n      }\n    },\n    \"node_modules/table/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/table/node_modules/json-schema-traverse\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/table/node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/tar\": {\n      \"version\": \"2.2.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"block-stream\": \"*\",\n        \"fstream\": \"^1.0.12\",\n        \"inherits\": \"2\"\n      }\n    },\n    \"node_modules/tar-pack\": {\n      \"version\": \"3.4.1\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"debug\": \"^2.2.0\",\n        \"fstream\": \"^1.0.10\",\n        \"fstream-ignore\": \"^1.0.5\",\n        \"once\": \"^1.3.3\",\n        \"readable-stream\": \"^2.1.4\",\n        \"rimraf\": \"^2.5.1\",\n        \"tar\": \"^2.2.1\",\n        \"uid-number\": \"^0.0.6\"\n      }\n    },\n    \"node_modules/tar-pack/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/tar-pack/node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/tar-pack/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/tar-pack/node_modules/rimraf\": {\n      \"version\": \"2.7.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"glob\": \"^7.1.3\"\n      },\n      \"bin\": {\n        \"rimraf\": \"bin.js\"\n      }\n    },\n    \"node_modules/tar-stream\": {\n      \"version\": \"1.6.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bl\": \"^1.0.0\",\n        \"buffer-alloc\": \"^1.2.0\",\n        \"end-of-stream\": \"^1.0.0\",\n        \"fs-constants\": \"^1.0.0\",\n        \"readable-stream\": \"^2.3.0\",\n        \"to-buffer\": \"^1.1.1\",\n        \"xtend\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/ternary-stream\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"duplexify\": \"^4.1.1\",\n        \"fork-stream\": \"^0.0.4\",\n        \"merge-stream\": \"^2.0.0\",\n        \"through2\": \"^3.0.1\"\n      }\n    },\n    \"node_modules/ternary-stream/node_modules/through2\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"inherits\": \"^2.0.4\",\n        \"readable-stream\": \"2 || 3\"\n      }\n    },\n    \"node_modules/test-exclude\": {\n      \"version\": \"6.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"glob\": \"^7.1.4\",\n        \"minimatch\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/test-exclude/node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/text-segmentation\": {\n      \"version\": \"1.0.3\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"utrie\": \"^1.0.2\"\n      }\n    },\n    \"node_modules/text-table\": {\n      \"version\": \"0.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/through\": {\n      \"version\": \"2.3.8\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/through2\": {\n      \"version\": \"2.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"readable-stream\": \"~2.3.6\",\n        \"xtend\": \"~4.0.1\"\n      }\n    },\n    \"node_modules/through2-filter\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"through2\": \"~2.0.0\",\n        \"xtend\": \"~4.0.0\"\n      }\n    },\n    \"node_modules/tiff\": {\n      \"name\": \"tiff.js\",\n      \"version\": \"1.0.0\",\n      \"resolved\": \"git+ssh://git@github.com/seikichi/tiff.js.git#545ede3ee46b5a5bc5f06d65954e775aa2a64017\"\n    },\n    \"node_modules/time-stamp\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/timed-out\": {\n      \"version\": \"4.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/timers-ext\": {\n      \"version\": \"0.1.7\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"es5-ext\": \"~0.10.46\",\n        \"next-tick\": \"1\"\n      }\n    },\n    \"node_modules/tmpl\": {\n      \"version\": \"1.0.5\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/to-absolute-glob\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-absolute\": \"^1.0.0\",\n        \"is-negated-glob\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/to-buffer\": {\n      \"version\": \"1.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/to-fast-properties\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/to-object-path\": {\n      \"version\": \"0.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/to-object-path/node_modules/kind-of\": {\n      \"version\": \"3.2.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-buffer\": \"^1.1.5\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/to-regex\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"define-property\": \"^2.0.2\",\n        \"extend-shallow\": \"^3.0.2\",\n        \"regex-not\": \"^1.0.2\",\n        \"safe-regex\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-number\": \"^3.0.0\",\n        \"repeat-string\": \"^1.6.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/to-regex/node_modules/define-property\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-descriptor\": \"^1.0.2\",\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/to-regex/node_modules/extend-shallow\": {\n      \"version\": \"3.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"assign-symbols\": \"^1.0.0\",\n        \"is-extendable\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/to-regex/node_modules/is-accessor-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/to-regex/node_modules/is-data-descriptor\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"kind-of\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/to-regex/node_modules/is-descriptor\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-accessor-descriptor\": \"^1.0.0\",\n        \"is-data-descriptor\": \"^1.0.0\",\n        \"kind-of\": \"^6.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/to-regex/node_modules/is-extendable\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-plain-object\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/to-regex/node_modules/is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/to-regex/node_modules/kind-of\": {\n      \"version\": \"6.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/to-through\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"through2\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/trim-newlines\": {\n      \"version\": \"4.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/trim-repeated\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"escape-string-regexp\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/trim-repeated/node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/tsconfig-paths\": {\n      \"version\": \"3.14.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/json5\": \"^0.0.29\",\n        \"json5\": \"^1.0.2\",\n        \"minimist\": \"^1.2.6\",\n        \"strip-bom\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/tsconfig-paths/node_modules/json5\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"minimist\": \"^1.2.0\"\n      },\n      \"bin\": {\n        \"json5\": \"lib/cli.js\"\n      }\n    },\n    \"node_modules/tsconfig-paths/node_modules/strip-bom\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/tslib\": {\n      \"version\": \"1.14.1\",\n      \"dev\": true,\n      \"license\": \"0BSD\"\n    },\n    \"node_modules/tsutils\": {\n      \"version\": \"3.21.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"tslib\": \"^1.8.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      },\n      \"peerDependencies\": {\n        \"typescript\": \">=2.8.0 || >= 3.2.0-dev || >= 3.3.0-dev || >= 3.4.0-dev || >= 3.5.0-dev || >= 3.6.0-dev || >= 3.6.0-beta || >= 3.7.0-dev || >= 3.7.0-beta\"\n      }\n    },\n    \"node_modules/tunnel-agent\": {\n      \"version\": \"0.6.0\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"safe-buffer\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/type\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/type-check\": {\n      \"version\": \"0.4.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/type-detect\": {\n      \"version\": \"4.0.8\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/type-fest\": {\n      \"version\": \"0.20.2\",\n      \"dev\": true,\n      \"license\": \"(MIT OR CC0-1.0)\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/typed-array-buffer\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.2.1\",\n        \"is-typed-array\": \"^1.1.10\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/typed-array-byte-length\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"for-each\": \"^0.3.3\",\n        \"has-proto\": \"^1.0.1\",\n        \"is-typed-array\": \"^1.1.10\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typed-array-byte-offset\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.5\",\n        \"call-bind\": \"^1.0.2\",\n        \"for-each\": \"^0.3.3\",\n        \"has-proto\": \"^1.0.1\",\n        \"is-typed-array\": \"^1.1.10\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typed-array-length\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"for-each\": \"^0.3.3\",\n        \"is-typed-array\": \"^1.1.9\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typedarray\": {\n      \"version\": \"0.0.6\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/typescript\": {\n      \"version\": \"5.2.2\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"peer\": true,\n      \"bin\": {\n        \"tsc\": \"bin/tsc\",\n        \"tsserver\": \"bin/tsserver\"\n      },\n      \"engines\": {\n        \"node\": \">=14.17\"\n      }\n    },\n    \"node_modules/uid-number\": {\n      \"version\": \"0.0.6\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/unbox-primitive\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-bigints\": \"^1.0.2\",\n        \"has-symbols\": \"^1.0.3\",\n        \"which-boxed-primitive\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/unbzip2-stream\": {\n      \"version\": \"1.4.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"buffer\": \"^5.2.1\",\n        \"through\": \"^2.3.8\"\n      }\n    },\n    \"node_modules/unc-path-regex\": {\n      \"version\": \"0.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/underscore\": {\n      \"version\": \"1.13.6\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/undertaker\": {\n      \"version\": \"1.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"arr-flatten\": \"^1.0.1\",\n        \"arr-map\": \"^2.0.0\",\n        \"bach\": \"^1.0.0\",\n        \"collection-map\": \"^1.0.0\",\n        \"es6-weak-map\": \"^2.0.1\",\n        \"fast-levenshtein\": \"^1.0.0\",\n        \"last-run\": \"^1.1.0\",\n        \"object.defaults\": \"^1.0.0\",\n        \"object.reduce\": \"^1.0.0\",\n        \"undertaker-registry\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/undertaker-registry\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/undertaker/node_modules/fast-levenshtein\": {\n      \"version\": \"1.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/union-value\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"arr-union\": \"^3.1.0\",\n        \"get-value\": \"^2.0.6\",\n        \"is-extendable\": \"^0.1.1\",\n        \"set-value\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/unique-stream\": {\n      \"version\": \"2.3.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n        \"through2-filter\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/unset-value\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-value\": \"^0.3.1\",\n        \"isobject\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/unset-value/node_modules/has-value\": {\n      \"version\": \"0.3.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"get-value\": \"^2.0.3\",\n        \"has-values\": \"^0.1.4\",\n        \"isobject\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/unset-value/node_modules/has-value/node_modules/isobject\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"isarray\": \"1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/unset-value/node_modules/has-values\": {\n      \"version\": \"0.1.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/upath\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\",\n        \"yarn\": \"*\"\n      }\n    },\n    \"node_modules/update-browserslist-db\": {\n      \"version\": \"1.0.11\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"escalade\": \"^3.1.1\",\n        \"picocolors\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"update-browserslist-db\": \"cli.js\"\n      },\n      \"peerDependencies\": {\n        \"browserslist\": \">= 4.21.0\"\n      }\n    },\n    \"node_modules/uri-js\": {\n      \"version\": \"4.4.1\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"punycode\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/urix\": {\n      \"version\": \"0.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/url-parse-lax\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"prepend-http\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/url-to-options\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 4\"\n      }\n    },\n    \"node_modules/use\": {\n      \"version\": \"3.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/util-deprecate\": {\n      \"version\": \"1.0.2\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/utrie\": {\n      \"version\": \"1.0.2\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"base64-arraybuffer\": \"^1.0.2\"\n      }\n    },\n    \"node_modules/v8-to-istanbul\": {\n      \"version\": \"9.1.0\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"@jridgewell/trace-mapping\": \"^0.3.12\",\n        \"@types/istanbul-lib-coverage\": \"^2.0.1\",\n        \"convert-source-map\": \"^1.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.12.0\"\n      }\n    },\n    \"node_modules/v8flags\": {\n      \"version\": \"3.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"homedir-polyfill\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/validate-npm-package-license\": {\n      \"version\": \"3.0.4\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"spdx-correct\": \"^3.0.0\",\n        \"spdx-expression-parse\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/validate.js\": {\n      \"version\": \"0.13.1\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/value-or-function\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/vinyl\": {\n      \"version\": \"2.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"clone\": \"^2.1.1\",\n        \"clone-buffer\": \"^1.0.0\",\n        \"clone-stats\": \"^1.0.0\",\n        \"cloneable-readable\": \"^1.0.0\",\n        \"remove-trailing-separator\": \"^1.0.1\",\n        \"replace-ext\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/vinyl-file\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.1.2\",\n        \"pify\": \"^2.3.0\",\n        \"pinkie-promise\": \"^2.0.0\",\n        \"strip-bom\": \"^2.0.0\",\n        \"strip-bom-stream\": \"^2.0.0\",\n        \"vinyl\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/vinyl-file/node_modules/clone\": {\n      \"version\": \"1.0.4\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.8\"\n      }\n    },\n    \"node_modules/vinyl-file/node_modules/clone-stats\": {\n      \"version\": \"0.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/vinyl-file/node_modules/pify\": {\n      \"version\": \"2.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/vinyl-file/node_modules/replace-ext\": {\n      \"version\": \"0.0.1\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/vinyl-file/node_modules/strip-bom\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-utf8\": \"^0.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/vinyl-file/node_modules/vinyl\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"clone\": \"^1.0.0\",\n        \"clone-stats\": \"^0.0.1\",\n        \"replace-ext\": \"0.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.9\"\n      }\n    },\n    \"node_modules/vinyl-fs\": {\n      \"version\": \"3.0.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fs-mkdirp-stream\": \"^1.0.0\",\n        \"glob-stream\": \"^6.1.0\",\n        \"graceful-fs\": \"^4.0.0\",\n        \"is-valid-glob\": \"^1.0.0\",\n        \"lazystream\": \"^1.0.0\",\n        \"lead\": \"^1.0.0\",\n        \"object.assign\": \"^4.0.4\",\n        \"pumpify\": \"^1.3.5\",\n        \"readable-stream\": \"^2.3.3\",\n        \"remove-bom-buffer\": \"^3.0.0\",\n        \"remove-bom-stream\": \"^1.2.0\",\n        \"resolve-options\": \"^1.1.0\",\n        \"through2\": \"^2.0.0\",\n        \"to-through\": \"^2.0.0\",\n        \"value-or-function\": \"^3.0.0\",\n        \"vinyl\": \"^2.0.0\",\n        \"vinyl-sourcemap\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/vinyl-sourcemap\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"append-buffer\": \"^1.0.2\",\n        \"convert-source-map\": \"^1.5.0\",\n        \"graceful-fs\": \"^4.1.6\",\n        \"normalize-path\": \"^2.1.1\",\n        \"now-and-later\": \"^2.0.0\",\n        \"remove-bom-buffer\": \"^3.0.0\",\n        \"vinyl\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/vinyl-sourcemap/node_modules/normalize-path\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"remove-trailing-separator\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/vinyl-sourcemaps-apply\": {\n      \"version\": \"0.2.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"source-map\": \"^0.5.1\"\n      }\n    },\n    \"node_modules/vinyl-sourcemaps-apply/node_modules/source-map\": {\n      \"version\": \"0.5.7\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/walker\": {\n      \"version\": \"1.0.8\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"makeerror\": \"1.0.12\"\n      }\n    },\n    \"node_modules/which\": {\n      \"version\": \"2.0.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"node-which\": \"bin/node-which\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/which-boxed-primitive\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-bigint\": \"^1.0.1\",\n        \"is-boolean-object\": \"^1.1.0\",\n        \"is-number-object\": \"^1.0.4\",\n        \"is-string\": \"^1.0.5\",\n        \"is-symbol\": \"^1.0.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-module\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/which-typed-array\": {\n      \"version\": \"1.1.11\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.5\",\n        \"call-bind\": \"^1.0.2\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/wide-align\": {\n      \"version\": \"1.1.5\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"string-width\": \"^1.0.2 || 2 || 3 || 4\"\n      }\n    },\n    \"node_modules/wide-align/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/wide-align/node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"8.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^6.1.0\",\n        \"string-width\": \"^5.0.1\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs\": {\n      \"name\": \"wrap-ansi\",\n      \"version\": \"7.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/wrap-ansi-cjs/node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/ansi-regex\": {\n      \"version\": \"6.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/ansi-styles\": {\n      \"version\": \"6.2.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrappy\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/write-file-atomic\": {\n      \"version\": \"4.0.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"imurmurhash\": \"^0.1.4\",\n        \"signal-exit\": \"^3.0.7\"\n      },\n      \"engines\": {\n        \"node\": \"^12.13.0 || ^14.15.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/write-file-atomic/node_modules/signal-exit\": {\n      \"version\": \"3.0.7\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/write-json-file\": {\n      \"version\": \"2.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"detect-indent\": \"^5.0.0\",\n        \"graceful-fs\": \"^4.1.2\",\n        \"make-dir\": \"^1.0.0\",\n        \"pify\": \"^3.0.0\",\n        \"sort-keys\": \"^2.0.0\",\n        \"write-file-atomic\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/write-json-file/node_modules/make-dir\": {\n      \"version\": \"1.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"pify\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/write-json-file/node_modules/signal-exit\": {\n      \"version\": \"3.0.7\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/write-json-file/node_modules/sort-keys\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-plain-obj\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/write-json-file/node_modules/write-file-atomic\": {\n      \"version\": \"2.4.3\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.1.11\",\n        \"imurmurhash\": \"^0.1.4\",\n        \"signal-exit\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/xtend\": {\n      \"version\": \"4.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.4\"\n      }\n    },\n    \"node_modules/y18n\": {\n      \"version\": \"3.2.2\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/yallist\": {\n      \"version\": \"3.1.1\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/yaml\": {\n      \"version\": \"1.10.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/yargs\": {\n      \"version\": \"7.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"camelcase\": \"^3.0.0\",\n        \"cliui\": \"^3.2.0\",\n        \"decamelize\": \"^1.1.1\",\n        \"get-caller-file\": \"^1.0.1\",\n        \"os-locale\": \"^1.4.0\",\n        \"read-pkg-up\": \"^1.0.1\",\n        \"require-directory\": \"^2.1.1\",\n        \"require-main-filename\": \"^1.0.1\",\n        \"set-blocking\": \"^2.0.0\",\n        \"string-width\": \"^1.0.2\",\n        \"which-module\": \"^1.0.0\",\n        \"y18n\": \"^3.2.1\",\n        \"yargs-parser\": \"^5.0.1\"\n      }\n    },\n    \"node_modules/yargs-parser\": {\n      \"version\": \"20.2.9\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yargs/node_modules/ansi-regex\": {\n      \"version\": \"2.1.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/yargs/node_modules/camelcase\": {\n      \"version\": \"3.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/yargs/node_modules/decamelize\": {\n      \"version\": \"1.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/yargs/node_modules/find-up\": {\n      \"version\": \"1.1.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"path-exists\": \"^2.0.0\",\n        \"pinkie-promise\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/yargs/node_modules/hosted-git-info\": {\n      \"version\": \"2.8.9\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/yargs/node_modules/is-fullwidth-code-point\": {\n      \"version\": \"1.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"number-is-nan\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/yargs/node_modules/load-json-file\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.1.2\",\n        \"parse-json\": \"^2.2.0\",\n        \"pify\": \"^2.0.0\",\n        \"pinkie-promise\": \"^2.0.0\",\n        \"strip-bom\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/yargs/node_modules/normalize-package-data\": {\n      \"version\": \"2.5.0\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"hosted-git-info\": \"^2.1.4\",\n        \"resolve\": \"^1.10.0\",\n        \"semver\": \"2 || 3 || 4 || 5\",\n        \"validate-npm-package-license\": \"^3.0.1\"\n      }\n    },\n    \"node_modules/yargs/node_modules/parse-json\": {\n      \"version\": \"2.2.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"error-ex\": \"^1.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/yargs/node_modules/path-exists\": {\n      \"version\": \"2.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"pinkie-promise\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/yargs/node_modules/path-type\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.1.2\",\n        \"pify\": \"^2.0.0\",\n        \"pinkie-promise\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/yargs/node_modules/pify\": {\n      \"version\": \"2.3.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/yargs/node_modules/read-pkg\": {\n      \"version\": \"1.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"load-json-file\": \"^1.0.0\",\n        \"normalize-package-data\": \"^2.3.2\",\n        \"path-type\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/yargs/node_modules/read-pkg-up\": {\n      \"version\": \"1.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"find-up\": \"^1.0.0\",\n        \"read-pkg\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/yargs/node_modules/semver\": {\n      \"version\": \"5.7.2\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"semver\": \"bin/semver\"\n      }\n    },\n    \"node_modules/yargs/node_modules/string-width\": {\n      \"version\": \"1.0.2\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"code-point-at\": \"^1.0.0\",\n        \"is-fullwidth-code-point\": \"^1.0.0\",\n        \"strip-ansi\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/yargs/node_modules/strip-ansi\": {\n      \"version\": \"3.0.1\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/yargs/node_modules/strip-bom\": {\n      \"version\": \"2.0.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-utf8\": \"^0.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/yargs/node_modules/yargs-parser\": {\n      \"version\": \"5.0.1\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"camelcase\": \"^3.0.0\",\n        \"object.assign\": \"^4.1.0\"\n      }\n    },\n    \"node_modules/yauzl\": {\n      \"version\": \"2.10.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"buffer-crc32\": \"~0.2.3\",\n        \"fd-slicer\": \"~1.1.0\"\n      }\n    },\n    \"node_modules/yocto-queue\": {\n      \"version\": \"0.1.0\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 4.1416015625,
          "content": "{\n  \"name\": \"openemr-interface\",\n  \"version\": \"0.2.0\",\n  \"description\": \"UI toolkit, theme and component library for OpenEMR\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"postinstall\": \"napa && gulp -i\",\n    \"build\": \"gulp -b\",\n    \"dev-build\": \"npm run gulp-build\",\n    \"dev\": \"gulp --dev && gulp watch\",\n    \"gulp-build\": \"gulp -b --dev\",\n    \"gulp-watch\": \"gulp watch\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"lint:js\": \"eslint '**/*.js' --quiet\",\n    \"lint:js-fix\": \"npm run lint:js -- --fix\",\n    \"test:js\": \"jest\",\n    \"test:js-coverage\": \"jest --coverage\",\n    \"stylelint\": \"npx stylelint '**/*.{css,scss}'\",\n    \"stylelint-fix\": \"npm run stylelint -- --fix\"\n  },\n  \"keywords\": [\n    \"openemr\"\n  ],\n  \"author\": \"d3sandoval\",\n  \"license\": \"GNU GPL\",\n  \"browserslist\": [\n    \"> 1%\",\n    \"ie >= 8\",\n    \"edge >= 15\",\n    \"ie_mob >= 10\",\n    \"ff >= 45\",\n    \"chrome >= 45\",\n    \"safari >= 7\",\n    \"opera >= 23\",\n    \"ios >= 7\",\n    \"android >= 4\",\n    \"bb >= 10\"\n  ],\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.5\",\n    \"autoprefixer\": \"10.4.15\",\n    \"colors\": \"1.4.0\",\n    \"del\": \"6.1.1\",\n    \"eslint\": \"8.49.0\",\n    \"eslint-plugin-import\": \"2.28.1\",\n    \"eslint-plugin-jest\": \"27.4.0\",\n    \"glob\": \"10.3.4\",\n    \"gulp\": \"4.0.2\",\n    \"gulp-append-prepend\": \"1.0.9\",\n    \"gulp-csso\": \"4.0.1\",\n    \"gulp-dart-sass\": \"1.1.0\",\n    \"gulp-if\": \"3.0.0\",\n    \"gulp-inject-string\": \"1.1.2\",\n    \"gulp-postcss\": \"9.0.1\",\n    \"gulp-rename\": \"2.0.0\",\n    \"gulp-sourcemaps\": \"3.0.0\",\n    \"gulp-watch\": \"5.0.1\",\n    \"jest\": \"29.7.0\",\n    \"minimist\": \"1.2.8\",\n    \"napa\": \"3.0.0\",\n    \"postcss\": \"8.4.30\",\n    \"replace-in-file\": \"7.0.1\",\n    \"stylelint\": \"15.10.3\",\n    \"stylelint-config-sass-guidelines\": \"10.0.0\",\n    \"stylelint-config-standard\": \"34.0.0\",\n    \"stylelint-order\": \"6.0.3\",\n    \"stylelint-scss\": \"5.2.1\"\n  },\n  \"dependencies\": {\n    \"@eastdesire/jscolor\": \"2.5.1\",\n    \"@fortawesome/fontawesome-free\": \"6.4.2\",\n    \"angular\": \"1.8.3\",\n    \"angular-sanitize\": \"1.8.3\",\n    \"angular-summernote\": \"^0.8.1\",\n    \"backbone\": \"1.5.0\",\n    \"bootstrap\": \"4.6.2\",\n    \"bootswatch\": \"4.6.2\",\n    \"chart.js\": \"4.4.0\",\n    \"chartjs-adapter-date-fns\": \"3.0.0\",\n    \"checklist-model\": \"1.0.0\",\n    \"ckeditor4\": \"4.22.1\",\n    \"datatables.net\": \"1.13.6\",\n    \"datatables.net-bs4\": \"1.13.6\",\n    \"datatables.net-colreorder\": \"1.7.0\",\n    \"datatables.net-colreorder-dt\": \"1.7.0\",\n    \"datatables.net-dt\": \"1.13.6\",\n    \"datatables.net-jqui\": \"1.13.6\",\n    \"datatables.net-scroller\": \"2.2.0\",\n    \"datatables.net-scroller-jqui\": \"2.2.0\",\n    \"dompurify\": \"3.0.8\",\n    \"dropzone\": \"5.9.3\",\n    \"dwv\": \"0.27.1\",\n    \"flot\": \"4.2.6\",\n    \"hotkeys-js\": \"3.12.0\",\n    \"i18next\": \"23.5.1\",\n    \"i18next-browser-languagedetector\": \"7.1.0\",\n    \"i18next-xhr-backend\": \"3.2.2\",\n    \"interactjs\": \"1.10.19\",\n    \"jquery\": \"3.7.1\",\n    \"jquery-datetimepicker\": \"2.5.21\",\n    \"jquery-validation\": \"1.19.5\",\n    \"jspdf\": \"2.5.1\",\n    \"jszip\": \"3.10.1\",\n    \"knockout\": \"3.5.1\",\n    \"konva\": \"9.2.1\",\n    \"magic-wand-js\": \"1.0.0\",\n    \"moment\": \"2.29.4\",\n    \"numeral\": \"2.0.6\",\n    \"purecss\": \"3.0.0\",\n    \"select2\": \"4.0.13\",\n    \"sortablejs\": \"1.15.0\",\n    \"summernote\": \"^0.8.20\",\n    \"tiff\": \"git+https://github.com/seikichi/tiff.js.git\",\n    \"underscore\": \"1.13.6\",\n    \"validate.js\": \"0.13.1\"\n  },\n  \"napa\": {\n    \"bootstrap-rtl\": \"https://github.com/PerseusTheGreat/bootstrap-4-rtl/archive/643a8f9e221ed86729b51913d1a7d5614e615682.zip\",\n    \"jquery-creditcardvalidator\": \"https://github.com/PawelDecowski/jquery-creditcardvalidator/archive/v1.1.0.tar.gz\",\n    \"jquery-panelslider\": \"https://github.com/eduardomb/jquery-panelslider/archive/1.0.0.tar.gz\",\n    \"jquery-ui\": \"https://jqueryui.com/resources/download/jquery-ui-1.12.1.zip\",\n    \"jquery-ui-themes\": \"https://jqueryui.com/resources/download/jquery-ui-themes-1.12.1.zip\",\n    \"summernote-nugget\": \"https://github.com/pHAlkaline/summernote-plugins\",\n    \"literallycanvas\": \"https://github.com/literallycanvas/literallycanvas/archive/v0.4.14.tar.gz\",\n    \"react\": \"https://github.com/facebook/react/releases/download/v15.1.0/react-15.1.0.zip\",\n    \"lforms\": \"https://clinicaltables.nlm.nih.gov/lforms-versions/lforms-33.0.0.zip\"\n  },\n  \"napa-config\": {\n    \"cache\": false\n  }\n}\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 2.3212890625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.3/phpunit.xsd\" backupGlobals=\"false\" bootstrap=\"tests/bootstrap.php\" colors=\"false\" processIsolation=\"false\" stopOnError=\"false\" stopOnFailure=\"false\" stopOnIncomplete=\"false\" stopOnSkipped=\"false\" stopOnRisky=\"false\" displayDetailsOnTestsThatTriggerDeprecations=\"true\" displayDetailsOnTestsThatTriggerErrors=\"true\" displayDetailsOnTestsThatTriggerWarnings=\"true\" displayDetailsOnTestsThatTriggerNotices=\"true\" testdox=\"false\"> \n  <coverage cacheDirectory=\".phpunit.cache\"> </coverage>\n  <php>\n    <ini name=\"error_reporting\" value=\"-1\"/>\n    <server name=\"PANTHER_WEB_SERVER_DIR\" value=\"interface\"/>\n    <!-- ATTENTION use only on local machine you can not activate chrome visual mode on travis. -->\n    <!-- to disable browser's headless mode (will display the testing window, useful to debug) -->\n    <!--<server name=\"PANTHER_NO_HEADLESS\" value=\"1\"/>-->\n  </php>\n  <testsuites>\n    <testsuite name=\"openemr\">\n      <directory>tests/Tests/Unit</directory>\n      <directory>tests/Tests/E2e</directory>\n      <directory>tests/Tests/Api</directory>\n      <directory>tests/Tests/Fixtures</directory>\n      <directory>tests/Tests/Services</directory>\n      <directory>tests/Tests/Validators</directory>\n      <directory>tests/Tests/RestControllers</directory>\n      <directory>tests/Tests/Common</directory>\n    </testsuite>\n    <testsuite name=\"ECQM\">\n      <directory>tests/Tests/ECQM</directory>\n    </testsuite>\n    <testsuite name=\"unit\">\n      <directory>tests/Tests/Unit</directory>\n    </testsuite>\n    <testsuite name=\"e2e\">\n      <directory>tests/Tests/E2e</directory>\n    </testsuite>\n    <testsuite name=\"api\">\n      <directory>tests/Tests/Api</directory>\n    </testsuite>\n    <testsuite name=\"fixtures\">\n      <directory>tests/Tests/Fixtures</directory>\n    </testsuite>\n    <testsuite name=\"services\">\n      <directory>tests/Tests/Services</directory>\n    </testsuite>\n    <testsuite name=\"validators\">\n      <directory>tests/Tests/Validators</directory>\n    </testsuite>\n    <testsuite name=\"controllers\">\n      <directory>tests/Tests/RestControllers</directory>\n    </testsuite>\n    <testsuite name=\"common\">\n      <directory>tests/Tests/Common</directory>\n    </testsuite>\n  </testsuites>\n</phpunit>\n"
        },
        {
          "name": "portal",
          "type": "tree",
          "content": null
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "robots.txt",
          "type": "blob",
          "size": 0.025390625,
          "content": "User-agent: *\nDisallow: /\n"
        },
        {
          "name": "setup.php",
          "type": "blob",
          "size": 106.1240234375,
          "content": "<?php\n\n/**\n *\n * Installation script.\n *\n *   To make this script a bit more simpler to figure out, here is a listing of the \"state\"(s)\n *    which are basically the steps that this installation script goes through.\n *      state:\n *        empty or 0 - Ensures required file and directory permission are correctly set prior to starting installation.\n *        1 - Step 1: Select database setup (ie. create the database or use a database already initialized)\n *        2 - Step 2: Enter in database and openemr user information\n *        3 - Step 3: Create database\n *        4 - Step 4: Instructions on configuring PHP\n *        5 - Step 5: Instructions on configuring Apache\n *        6 - Step 6: Select a theme\n *        7 - Final step: Several miscellaneous instruction, login credentials, and link to OpenEMR\n *\n * @package   OpenEMR\n * @link      https://www.open-emr.org\n * @author    Roberto Vasquez <robertogagliotta@gmail.com>\n * @author    Scott Wakefield <scott@npclinics.com.au>\n * @author    Ranganath Pathak <pathak@scrs1.org>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2016 Roberto Vasquez <robertogagliotta@gmail.com>\n * @copyright Copyright (c) 2016 Scott Wakefield <scott@npclinics.com.au>\n * @copyright Copyright (c) 2019 Ranganath Pathak <pathak@scrs1.org>\n * @copyright Copyright (c) 2019-2021 Brady Miller <brady.g.miller@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\n// Checks if the server's PHP version is compatible with OpenEMR:\nrequire_once(dirname(__FILE__) . \"/src/Common/Compatibility/Checker.php\");\n$response = OpenEMR\\Common\\Compatibility\\Checker::checkPhpVersion();\nif ($response !== true) {\n    die(htmlspecialchars($response));\n}\n\n// Set the maximum excution time and time limit to unlimited.\nini_set('max_execution_time', 0);\nini_set('display_errors', 0);\nset_time_limit(0);\n\n// Warning. If you set $allow_multisite_setup to true, this is a potential security vulnerability.\n// Recommend setting it back to false (or removing this setup.php script entirely) after you\n//  are done with the multisite procedure.\n$allow_multisite_setup = false;\n\n// Warning. If you set $allow_cloning_setup to true, this is a potential security vulnerability.\n// Recommend setting it back to false (or removing this setup.php script entirely) after you\n//  are done with the cloning setup procedure.\n$allow_cloning_setup = false;\nif (!$allow_cloning_setup && !empty($_REQUEST['clone_database'])) {\n    require_once(dirname(__FILE__) . \"/src/Common/Session/SessionUtil.php\");\n    OpenEMR\\Common\\Session\\SessionUtil::setupScriptSessionStart();\n    OpenEMR\\Common\\Session\\SessionUtil::setupScriptSessionCookieDestroy();\n    die(\"To turn on support for cloning setup, need to edit this script and change \\$allow_cloning_setup to true. After you are done setting up the cloning, ensure you change \\$allow_cloning_setup back to false or remove this script altogether\");\n}\n\nfunction recursive_writable_directory_test($dir)\n{\n    // first, collect the directory and subdirectories\n    $ri = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dir));\n    $dirNames = array();\n    foreach ($ri as $file) {\n        if ($file->isDir()) {\n            if (!preg_match(\"/\\.\\.$/\", $file->getPathname())) {\n                $dirName = realpath($file->getPathname());\n                if (!in_array($dirName, $dirNames)) {\n                    $dirNames[] = $dirName;\n                }\n            }\n        }\n    }\n\n    // second, flag the directories that are not writable\n    $resultsNegative = array();\n    foreach ($dirNames as $value) {\n        if (!is_writable($value)) {\n            $resultsNegative[] = $value;\n        }\n    }\n\n    // third, send the output and return if didn't pass the test\n    if (!empty($resultsNegative)) {\n        echo \"<p>\";\n        $mainDirTest = \"\";\n        $outputs = array();\n        foreach ($resultsNegative as $failedDir) {\n            if (basename($failedDir) ==  basename($dir)) {\n                // need to reorder output so the main directory is at the top of the list\n                $mainDirTest = \"<span class='text-danger'>UNABLE</span> to open directory '\" . text(realpath($failedDir)) . \"' for writing by web server.<br />\\r\\n\";\n            } else {\n                $outputs[] = \"<span class='text-danger'>UNABLE</span> to open subdirectory '\" . text(realpath($failedDir)) . \"' for writing by web server.<br />\\r\\n\";\n            }\n        }\n        if ($mainDirTest) {\n            // need to reorder output so the main directory is at the top of the list\n            array_unshift($outputs, $mainDirTest);\n        }\n        foreach ($outputs as $output) {\n            echo $output;\n        }\n        echo \"(configure directory permissions; see below for further instructions)</p>\\r\\n\";\n        return 1;\n    } else {\n        echo \"<code class='ml-5'>\" . text(realpath($dir)) . \"</code> directory and its subdirectories are <span class='text-success font-weight-bold'>ready</span>.<br /><br />\\r\\n\";\n        return 0;\n    }\n}\n\n// Include standard libraries/classes\nrequire_once dirname(__FILE__) . \"/vendor/autoload.php\";\n\nuse OpenEMR\\Common\\Csrf\\CsrfUtils;\nuse OpenEMR\\Common\\Session\\SessionUtil;\nuse OpenEMR\\Common\\Utils\\RandomGenUtils;\n\n$state = isset($_POST[\"state\"]) ? ($_POST[\"state\"]) : '';\n$installer = new Installer($_REQUEST);\n// Make this true for IPPF.\n$ippf_specific = false;\n\n$error_page_end = <<<EPE\n            </div>\n        </div>\n    </div><!--end of container div-->\n</body>\n</html>\nEPE;\n\n// If this script was invoked with no site ID, then ask for one. (only if allow multisite is on, otherwise will assume default site)\nif (empty($_REQUEST['site']) && $allow_multisite_setup && empty($state)) {\n    $site_id = <<<SITEID\n    <!DOCTYPE html>\n    <html>\n    <head>\n        <title>OpenEMR Setup Tool</title>\n        <link rel=\"stylesheet\" href=\"public/assets/bootstrap/dist/css/bootstrap.min.css\">\n        <script src=\"public/assets/jquery/dist/jquery.min.js\"></script>\n        <script src=\"public/assets/bootstrap/dist/js/bootstrap.bundle.min.js\"></script>\n        <link rel=\"stylesheet\" href=\"public/assets/@fortawesome/fontawesome-free/css/all.min.css\">\n        <link rel=\"shortcut icon\" href=\"public/images/favicon.ico\" />\n        <style>\n        .oe-pull-away {\n            float:right;\n        }\n        </style>\n    </head>\n    <body>\n        <nav class=\"navbar navbar-expand navbar-light bg-light\">\n           <div class=\"container\">\n           <a class=\"navbar-brand\" href=\"#\">OpenEMR Setup</a>\n           <div class=\"collapse navbar-collapse justify-content-end\">\n               <ul class=\"navbar-nav\">\n                   <li class=\"nav-item active\">\n                       <a class=\"nav-link\" href=\"#\" data-target=\"#myModal\" data-toggle=\"modal\" href=\"#\" id=\"help-href\" name=\"help-href\" title=\"Click to view Help\">Help</span></a>\n                   </li>\n               </ul>\n           </div>\n           </div>\n        </nav>\n\n        <div class='container mt-3'>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <h3 class=\"mb-3 border-bottom\">Optional Site ID Selection</h3>\n                    <div class=\"jumbotron p-5\">\n                        <p>\n                            Most OpenEMR installations support only one site.  If that is\n                            true for you then ignore the rest of this text and just click Continue.\n                        </p>\n                        <p class='p-2 bg-warning'>\n                            If you are using the multisite setup module for the first time please read the\n                            'Multi Site Installation' section of the help file before proceeding.\n                        </p>\n                        <p>\n                            Otherwise please enter a unique Site ID here.\n                        </p>\n                        <p>\n                            A Site ID is a short identifier with no spaces or special\n                            characters other than periods or dashes. It is case-sensitive and we\n                            suggest sticking to lower case letters for ease of use.\n                        </p>\n                        <p>\n                            If each site will have its own host/domain name, then use that\n                            name as the Site ID (e.g. www.example.com).\n                        </p>\n                        <p>\n                            The site ID is used to identify which site you will log in to.\n                            If it is a hostname then it is taken from the hostname in the URL.\n                            Otherwise you must append \"?site=<i>siteid</i>\" to the URL used for\n                            logging in.\n                        </p>\n                        <p>\n                            It is OK for one of the sites to have \"default\" as its ID. This\n                            is the ID that will be used if it cannot otherwise be determined.\n                        </p>\n                        <br />\n                        <form method='post'>\n                            <input type='hidden' name='state' value='0' />\n                            <div class=\"form-row\">\n                                <div class=\"col-auto\">\n                                    Site ID:\n                                </div>\n                                <div class=\"col\">\n                                    <input type='text' class='form-control' name='site' value='default'>\n                                </div>\n                                <div class=\"col-12 mt-3\">\n                                    <button type='submit' class='btn btn-primary' value='Continue'><i class=\"fas fa-chevron-right\"></i>  Continue</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div><!--end of container div-->\nSITEID;\n    echo $site_id . \"\\r\\n\";\n    $installer->setupHelpModal();\n    echo \"</body>\" . \"\\r\\n\";\n    echo \"</html>\" . \"\\r\\n\";\n\n    exit();\n}\n\n// Support \"?site=siteid\" in the URL, otherwise assume \"default\".\n$site_id = 'default';\nif (!empty($_REQUEST['site'])) {\n    $site_id = trim($_REQUEST['site']);\n}\n\n// Die if site ID is empty or has invalid characters.\nif (empty($site_id) || preg_match('/[^A-Za-z0-9\\\\-.]/', $site_id)) {\n    SessionUtil::setupScriptSessionStart();\n    SessionUtil::setupScriptSessionCookieDestroy();\n    die(\"Site ID '\" . text($site_id) . \"' contains invalid characters.\");\n}\n\n// If multisite is turned off, then only allow default for site.\nif (!$allow_multisite_setup && $site_id != 'default') {\n    SessionUtil::setupScriptSessionStart();\n    SessionUtil::setupScriptSessionCookieDestroy();\n    die(\"To turn on support for multisite setup, need to edit this script and change \\$allow_multisite_setup to true. After you are done setting up the cloning, ensure you change \\$allow_multisite_setup back to false or remove this script altogether\");\n}\n\n// Disable file and directory permissions check by setting to false\n$checkPermissions = true;\n\nglobal $OE_SITE_DIR; // The Installer sets this\n\n$docsDirectory = \"$OE_SITE_DIR/documents\";\n\n//These are files and dir checked before install for\n// correct permissions.\nif (is_dir($OE_SITE_DIR)) {\n    $writableFileList = array($installer->conffile);\n    $writableDirList = array($docsDirectory);\n} else {\n    $writableFileList = array();\n    $writableDirList = array($OE_SITES_BASE);\n}\n\n// Include the sqlconf file if it exists yet.\n$config = 0;\nif (file_exists($installer->conffile)) {\n    require_once($installer->conffile);\n} elseif ($state > 3) {\n    // State 3 should have created the site directory if it is missing.\n    SessionUtil::setupScriptSessionStart();\n    SessionUtil::setupScriptSessionCookieDestroy();\n    die(\"Internal error, site directory is missing.\");\n}\n\n// Should never have $config set when state less than 4\n//  (this means already installed)\nif (!empty($config) && (($state ?? 0) < 4)) {\n    SessionUtil::setupScriptSessionStart();\n    SessionUtil::setupScriptSessionCookieDestroy();\n    error_log(\"OpenEMR has already been installed. If you wish to force re-installation, then edit \" . errorLogEscape($installer->conffile) . \" (change the 'config' variable to 0), and re-run the setup.php script.\");\n    die(\"OpenEMR has already been installed. If you wish to force re-installation, see log for details.<br />\\n\");\n}\n\n// This will effectively only allow entry into the setup.php script at the first step and will bar entry to the\n//  script if openemr has already been installed.\n//  2 mechanisms are also in place to ensure go through script in chronological order\n//   - a session variable tracks the next state expected and kills script is not correct\n//   - only the next state csrf is handed out in the form\nif (empty($state)) {\n    // ensure not already installed\n    if (!empty($config)) {\n        SessionUtil::setupScriptSessionStart();\n        SessionUtil::setupScriptSessionCookieDestroy();\n        error_log(\"OpenEMR has already been installed. If you wish to force re-installation, then edit \" . errorLogEscape($installer->conffile) . \" (change the 'config' variable to 0), and re-run the setup.php script.\");\n        die(\"OpenEMR has already been installed. If you wish to force re-installation, see log for details.<br />\\n\");\n    }\n    // set up new blank session and csrf mechanism\n    SessionUtil::setupScriptSessionStart();\n    session_regenerate_id(true);\n    $_SESSION = [];\n    CsrfUtils::setupCsrfKey();\n} else {\n    // start up session and check csrf\n    SessionUtil::setupScriptSessionStart();\n    $state = (int)$state;\n    $verifyCsrf = false;\n    if (($state > 0) && ($state < 8)) {\n        $verifyCsrf = CsrfUtils::verifyCsrfToken($_POST[\"csrf_token_form\"], \"state\" . $state);\n    } else {\n        SessionUtil::setupScriptSessionCookieDestroy();\n        die(\"Not authorized (invalid state)\");\n    }\n    if (!$verifyCsrf) {\n        SessionUtil::setupScriptSessionCookieDestroy();\n        die(\"Not authorized (invalid csrf)\");\n    }\n\n    // ensure correct state is going (ie. do not allow users to muck around with this)\n    if ($_SESSION['bootstrapStateInSetup'] != $state) {\n        SessionUtil::setupScriptSessionCookieDestroy();\n        die(\"Not authorized (incorrect state)\");\n    }\n\n    // ensure that users are not mucking with database settings\n    if ($state > 3) {\n        if (\n            ($sqlconf[\"host\"] != $installer->server) ||\n            ($sqlconf[\"port\"] != $installer->port) ||\n            ($sqlconf[\"dbase\"] != $installer->dbname) ||\n            ($sqlconf[\"login\"] != $installer->login) ||\n            ($sqlconf[\"pass\"] != $installer->pass)\n        ) {\n            SessionUtil::setupScriptSessionCookieDestroy();\n            die(\"Not authorized (database)\");\n        }\n    }\n\n    // state 7 is last state so might as well kill the session now to ensure no funny business\n    if ($state == 7) {\n        SessionUtil::setupScriptSessionCookieDestroy();\n    }\n}\n\n?>\n<html>\n<head>\n<title>OpenEMR Setup Tool</title>\n<!--<link rel=stylesheet href=\"interface/themes/style_blue.css\">-->\n<link rel=\"stylesheet\" href=\"public/assets/bootstrap/dist/css/bootstrap.min.css\">\n<script src=\"public/assets/jquery/dist/jquery.min.js\"></script>\n<script src=\"public/assets/bootstrap/dist/js/bootstrap.bundle.min.js\"></script>\n<link rel=\"stylesheet\" href=\"public/assets/@fortawesome/fontawesome-free/css/all.min.css\">\n<link rel=\"shortcut icon\" href=\"public/images/favicon.ico\" />\n\n<style>\n    .noclone { }\n    table.phpset {\n        border-collapse:collapse;\n    }\n    table.phpset td, table.phpset th {\n        font-size:9pt;\n        border:1px solid gray;\n        padding:2px;\n    }\n    .table.no-border tr td, .table.no-border tr th {\n        border-width: 0;\n    }\n    td {\n        font-size:10pt;\n    }\n    .inputtext {\n         padding-left:2px;\n         padding-right:2px;\n    }\n\n    .button {\n         font-family:sans-serif;\n         font-size:9pt;\n         font-weight:bold;\n    }\n\n    .label-div > a {\n        display:none;\n    }\n    .label-div:hover > a {\n       display:inline-block;\n    }\n    div[id$=\"_info\"] {\n        background: #F7FAB3;\n        padding: 20px;\n        margin: 10px 15px 0px 15px;\n    }\n    div[id$=\"_info\"] > a {\n        margin-left:10px;\n    }\n    .checkboxgroup {\n      display: inline-block;\n      text-align: center;\n    }\n    .checkboxgroup label {\n      display: block;\n    }\n    .oe-pull-away{\n        float:right;\n    }\n    .oe-help-x {\n        color: grey;\n        padding: 0 5px;\n    }\n    .oe-superscript {\n        position: relative;\n        top: -.5em;\n        font-size: 70%!important;\n    }\n    .oe-setup-legend{\n        background-color: #f5f5f5;\n        padding:0 10px;\n    }\n    .button-wait {\n        color: grey;\n        cursor: not-allowed;\n        opacity: 0.6;\n    }\n    @media only screen {\n        fieldset > [class*=\"col-\"] {\n            width: 100%;\n            text-align:left!Important;\n        }\n    }\n</style>\n<script>\n// onclick handler for \"clone database\" checkbox\nfunction cloneClicked() {\n var cb = document.forms[0].clone_database;\n $('.noclone').css('display', cb.checked ? 'none' : 'block');\n}\n</script>\n\n</head>\n<body>\n    <nav class=\"navbar navbar-expand navbar-light bg-light\">\n       <div class=\"container\">\n        <a class=\"navbar-brand\" href=\"#\">OpenEMR Setup</a>\n            <div class=\"collapse navbar-collapse justify-content-end\">\n                <ul class=\"navbar-nav\">\n                    <li class=\"nav-item active\">\n                        <a class=\"nav-link\" href=\"#\" data-target=\"#myModal\" data-toggle=\"modal\" href=\"#\" id=\"help-href\" name=\"help-href\" title=\"Click to view Help\">Help</span></a>\n                    </li>\n                </ul>\n            </div>\n       </div>\n    </nav>\n    <div class='mt-3 container'>\n        <div class=\"row\">\n            <div class=\"col-12\">\n            <?php\n            $error = \"<span class='text-danger font-weight-bold'>ERROR</span>\";\n            $caution = \"<span class='text-danger font-weight-bold'>CAUTION</span>\";\n            $ok = \"<span class='text-success font-weight-bold'>OK</span>\";\n            $note = \"<span class='text-primary font-weight-bold'>NOTE</span>\";\n\n            if (strtolower(ini_get('register_globals')) != 'off' && (bool) ini_get('register_globals')) {\n                echo \"$caution: It appears that you have register_globals enabled in your php.ini\\n\" .\n                \"configuration file.  This causes unacceptable security risks.  You must\\n\" .\n                \"turn it off before continuing with installation.\\n\";\n                exit(1);\n            }\n\n            if (!extension_loaded(\"xml\")) {\n                echo \"$error: PHP XML extension missing. To continue, install PHP XML extension, then restart web server.\";\n                exit(1);\n            }\n\n            if (!(extension_loaded(\"mysql\") || extension_loaded(\"mysqlnd\") || extension_loaded(\"mysqli\"))) {\n                echo \"$error: PHP MySQL extension missing. To continue, install and enable MySQL extension, then restart web server.\";\n                exit(1);\n            }\n\n            if (!(extension_loaded(\"mbstring\") )) {\n                echo \"$error: PHP mb_string extension missing. To continue, install and enable mb_string extension, then restart web server.\";\n                exit(1);\n            }\n\n            if (!(extension_loaded(\"openssl\") )) {\n                echo \"$error: PHP openssl extension missing. To continue, install PHP openssl extension, then restart web server.\";\n                exit(1);\n            }\n            ?>\n\n            <?php\n            if ($state == 7) {\n                ?>\n            <h3 class=\"mb-3 border-bottom\">Final step - Success</h3>\n            <div class=\"jumbotron p-5\">\n            <p>Congratulations! OpenEMR is now installed.</p>\n            <ul>\n                <li>Access controls (php-GACL) are installed for fine-grained security, and can be administered in\n                    OpenEMR's admin->acl menu.</li>\n                <li>Reviewing <code> <?php echo text($OE_SITE_DIR); ?>/config.php </code> is a good idea. This file\n                    contains some settings that you may want to change.</li>\n                <li>There's much information and many extra tools bundled within the OpenEMR installation directory.\n                    Please refer to openemr/Documentation. Many forms and other useful scripts can be found at openemr/contrib.</li>\n                <li>To ensure a consistent look and feel throughout the application,\n                    <a href='http://www.mozilla.org/products/firefox/'>Firefox</a> and <a href=\"https://www.google.com/chrome/browser/desktop/index.html\">Chrome</a> are recommended. The OpenEMR development team exclusively tests with modern versions of these browsers.</li>\n                <li>The OpenEMR project home page, documentation, and forums can be found at <a href = \"https://www.open-emr.org\" rel='noopener' target=\"_blank\">https://www.open-emr.org</a></li>\n                <li>We pursue grants to help fund the future development of OpenEMR.  To apply for these grants, we need to estimate how many times this program is installed and how many practices are evaluating or using this software.  It would be awesome if you would email us at <a href=\"mailto:hello@open-emr.org\">hello@open-emr.org</a> if you have installed this software. The more details about your plans with this software, the better, but even just sending us an email stating you just installed it is very helpful.</li>\n            </ul>\n            <p>We recommend you print these instructions for future reference.</p>\n                <?php\n                echo \"<p> The selected theme is :</p>\";\n                $installer->displayNewThemeDiv();\n                if (empty($installer->clone_database)) {\n                    echo \"<p><b>The initial OpenEMR user is <span class='text-primary'>'\" . text($installer->iuser) . \"'</span> and the password is <span class='text-primary'>'\" . text($installer->iuserpass) . \"'</span></b></p>\";\n                } else {\n                    echo \"<p>The initial OpenEMR user name and password is the same as that of source site <b>'\" . text($installer->source_site_id) . \"'</span></b></p>\";\n                }\n                echo \"<p>If you edited the PHP or Apache configuration files during this installation process, then we recommend you restart your Apache server before following below OpenEMR link.</p>\";\n                echo \"<p>In Linux use the following command:</p>\";\n                echo \"<p><code>sudo apachectl -k restart</code></p>\";\n\n                ?>\n            <p>Click to start using OpenEMR.</p>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <a href='./?site=<?php echo attr_url($site_id); ?>' class='btn btn-primary'>\n                        <i class=\"fas fa-chevron-right\"></i> Start\n                    </a>\n                </div>\n            </div>\n\n            </div>\n                <?php\n                $installer->setCurrentTheme();\n\n                $end_div = <<<ENDDIV\n            </div>\n        </div>\n    </div><!--end of container div-->\nENDDIV;\n                echo $end_div . \"\\r\\n\";\n                $installer->setupHelpModal();\n                echo \"</body>\" . \"\\r\\n\";\n                echo \"</html>\" . \"\\r\\n\";\n\n                exit();\n            }\n            ?>\n\n            <?php\n\n            $inst = isset($_POST[\"inst\"]) ? ($_POST[\"inst\"]) : '';\n\n            switch ($state) {\n                case 1:\n                    $_SESSION['bootstrapStateInSetup'] = 2;\n                    $state_esc = text($state);\n                    $site_id_esc = attr($site_id);\n                    $csrf_id_esc = attr(CsrfUtils::collectCsrfToken('state2'));\n                    $step1 = <<<STP1\n                    <h3 class=\"mb-3 border-bottom\">Step $state_esc - Select Database Setup</h3>\n                    <div class=\"jumbotron p-5\">\n                        <p>Now I need to know whether you want me to create the database on my own or if you have already created the database for me to use. For me to create the database, you will need to supply the MySQL root password.</p>\n                        <br />\n                        <p class='p-1 bg-warning'>$caution: clicking on <span class=\"font-weight-bold\">Proceed to Step 2</span> may delete or cause damage to existing data on your system. Before you continue <span class=\"font-weight-bold\">please backup your data</span>.</p>\n                        <br />\n                        <form method='post'>\n                            <input name='state' type='hidden' value='2' />\n                            <input name='site' type='hidden' value='$site_id_esc' />\n                            <input name='csrf_token_form' type='hidden' value='$csrf_id_esc' />\n                            <div class=\"form-check\">\n                                <input checked class='form-check-input' id='inst1' name='inst' type='radio' value='1' />\n                                <label class=\"form-check-label\" for=\"inst1\">\n                                    Have setup create the database\n                                </label>\n                            </div>\n                            <br />\n                            <div class=\"form-check\">\n                                <input id='inst2' class='form-check-input' name='inst' type='radio' value='2' />\n                                <label class=\"form-check-label\" for=\"inst2\">\n                                    I have already created the database\n                                </label>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"col mt-3\">\n                                    <button type='submit' class='btn btn-primary' value='Continue'>\n                                        <i class=\"fas fa-chevron-right\"></i>  Proceed to Step 2\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                        <br />\n                    </div>\nSTP1;\n                    echo $step1 . \"\\r\\n\";\n                    break;\n\n                case 2:\n                    $_SESSION['bootstrapStateInSetup'] = 3;\n                    $state_esc = text($state);\n                    $site_id_esc = attr($site_id);\n                    $inst_esc = attr($inst);\n                    $csrf_id_esc = attr(CsrfUtils::collectCsrfToken('state3'));\n                    $step2top = <<<STP2TOP\n                    <h3 class=\"mb-3 border-bottom\">Step $state_esc - Database and OpenEMR Initial User Setup Details</h3>\n                    <div class=\"jumbotron p-5\">\n                        <p>Now you need to supply the MySQL server information and path information. Detailed instructions on each item can be found in the\n                            <a href='Documentation/INSTALL' rel='noopener' target='_blank'><u>'INSTALL'</u>\n                            </a> manual file.\n                        </p>\n                        <form method='post' id='myform'>\n                            <input name='state' type='hidden' value='3' />\n                            <input name='site' type='hidden' value='$site_id_esc' />\n                            <input name='inst' type='hidden' value='$inst_esc' />\n                            <input name='csrf_token_form' type='hidden' value='$csrf_id_esc' />\nSTP2TOP;\n                    echo $step2top . \"\\r\\n\";\n\n\n                    $step2tabletop1 = <<<STP2TBLTOP1\n                    <fieldset>\n                    <legend name=\"form_legend\" id=\"form_legend\" class='oe-setup-legend'>MySQL Server Details<i id=\"enter-details-tooltip\" class=\"fa fa-info-circle oe-text-black oe-superscript enter-details-tooltip\" aria-hidden=\"true\"></i></legend>\n                    <div class=\"ml-2 row\">\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"server\">Server Host:</label>\n                                    <a href=\"#server_info\" class=\"info-anchor icon-tooltip\" data-toggle=\"collapse\" ><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <input name='server' id='server' type='text' class='form-control' value='localhost' />\n                                </div>\n                            </div>\n                            <div id=\"server_info\" class=\"collapse\">\n                                <a href=\"#server_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>If you run MySQL and Apache/PHP on the same computer, then leave this as 'localhost'.</p>\n                                <p>If they are on separate computers, then enter the IP address of the computer running MySQL.</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"port\">Server Port:</label>\n                                    <a href=\"#port_info\" class=\"info-anchor icon-tooltip\" data-toggle=\"collapse\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <input name='port' id='port' type='text' class='form-control' value='3306' />\n                                </div>\n                            </div>\n                            <div id=\"port_info\" class=\"collapse\">\n                                <a href=\"#port_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>This is the MySQL port.</p>\n                                <p>The default port for MySQL is 3306.</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"dbname\">Database Name:</label> <a href=\"#dbname_info\"  class=\"info-anchor icon-tooltip\"  data-toggle=\"collapse\" ><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <input name='dbname' id='dbname' type='text' class='form-control' value='openemr' />\n                                </div>\n                            </div>\n                            <div id=\"dbname_info\" class=\"collapse\">\n                                <a href=\"#dbname_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>This will be the name of the OpenEMR database in MySQL.</p>\n                                <p>'openemr' is the recommended name.</p>\n                                <p>This database will contain patient data as well as data pertaining to the OpenEMR installation.</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"ml-2 row\">\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"login\">Login Name:</label> <a href=\"#login_info\"  class=\"info-anchor icon-tooltip\"  data-toggle=\"collapse\" ><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <input name='login' ID='login' type='text' class='form-control' value='openemr' />\n                                </div>\n                            </div>\n                            <div id=\"login_info\" class=\"collapse\">\n                                <a href=\"#login_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>This is the name that OpenEMR will use to login to the MySQL database.</p>\n                                <p>'openemr' is the recommended name.</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"pass\">Password:</label>\n                                    <a href=\"#pass_info\" class=\"info-anchor icon-tooltip\" data-toggle=\"collapse\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <input name='pass' id='pass' class='form-control' type='password' value='' required />\n                                </div>\n                            </div>\n                            <div id=\"pass_info\" class=\"collapse\">\n                                <a href=\"#pass_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>This is the Login Password that OpenEMR will use to accesses the MySQL database.</p>\n                                <p>It should be at least 12 characters long and composed of both numbers and letters.</p>\n                                <p>It cannot contain any of these characters: \\ ; ( ) < > / ' \"</p>\n                            </div>\n                        </div>\nSTP2TBLTOP1;\n                    echo $step2tabletop1 . \"\\r\\n\";\n                    if ($inst != 2) {\n                        $step2tabletop2 = <<<STP2TBLTOP2\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"root\">Name for Root Account:</label>\n                                    <a href=\"#root_info\" class=\"info-anchor icon-tooltip\" data-toggle=\"collapse\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <input name='root' id='root' type='text' class='form-control' value='root' />\n                                </div>\n                            </div>\n                            <div id=\"root_info\" class=\"collapse\">\n                                <a href=\"#root_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>This is name for the MySQL root account.</p>\n                                <p>For localhost, it is usually ok to leave it as 'root'.</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"ml-2 row\">\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"rootpass\">Root Password:</label>\n                                    <a href=\"#rootpass_info\" class=\"info-anchor icon-tooltip\" data-toggle=\"collapse\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <input name='rootpass' id='rootpass' type='password' class='form-control' value='' />\n                                </div>\n                            </div>\n                            <div id=\"rootpass_info\" class=\"collapse\">\n                                <a href=\"#rootpass_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>This is your MySQL server root password.</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"loginhost\">User Hostname:</label>\n                                    <a href=\"#loginhost_info\" class=\"info-anchor icon-tooltip\" data-toggle=\"collapse\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <input name='loginhost' id='loginhost' type='text' class='form-control' value='localhost' />\n                                </div>\n                            </div>\n                            <div id=\"loginhost_info\" class=\"collapse\">\n                                <a href=\"#loginhost_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>If you run Apache/PHP and MySQL on the same computer, then leave this as 'localhost'.</p>\n                                <p>If they are on separate computers, then enter the IP address of the computer running Apache/PHP.</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"collate\">UTF-8 Collation:</label> <a href=\"#collate_info\"  class=\"info-anchor icon-tooltip\"  data-toggle=\"collapse\" ><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <select name='collate' id=='collate' class='form-control'>\n                                        <option selected value='utf8mb4_general_ci'>\n                                            General (Recommended)\n                                        </option>\n                                        <option value='utf8mb4_unicode_ci'>\n                                            Unicode\n                                        </option>\n                                        <option value='utf8mb4_roman_ci'>\n                                            Classical Latin\n                                        </option>\n                                        <option value='utf8mb4_croatian_ci'>\n                                            Croatian\n                                        </option>\n                                        <option value='utf8mb4_czech_ci'>\n                                            Czech\n                                        </option>\n                                        <option value='utf8mb4_danish_ci'>\n                                            Danish\n                                        </option>\n                                        <option value='utf8mb4_esperanto_ci'>\n                                            Esperanto\n                                        </option>\n                                        <option value='utf8mb4_estonian_ci'>\n                                            Estonian\n                                        </option>\n                                        <option value='utf8mb4_german2_ci'>\n                                            German\n                                        </option>\n                                        <option value='utf8mb4_hungarian_ci'>\n                                            Hungarian\n                                        </option>\n                                        <option value='utf8mb4_icelandic_ci'>\n                                            Icelandic\n                                        </option>\n                                        <option value='utf8mb4_latvian_ci'>\n                                            Latvian\n                                        </option>\n                                        <option value='utf8mb4_lithuanian_ci'>\n                                            Lithuanian\n                                        </option>\n                                        <option value='utf8mb4_persian_ci'>\n                                            Persian\n                                        </option>\n                                        <option value='utf8mb4_polish_ci'>\n                                            Polish\n                                        </option>\n                                        <option value='utf8mb4_romanian_ci'>\n                                            Romanian\n                                        </option>\n                                        <option value='utf8mb4_sinhala_ci'>\n                                            Sinhala\n                                        </option>\n                                        <option value='utf8mb4_slovak_ci'>\n                                            Slovak\n                                        </option>\n                                        <option value='utf8mb4_slovenian_ci'>\n                                            Slovenian\n                                        </option>\n                                        <option value='utf8mb4_spanish_ci'>\n                                            Spanish (Modern)\n                                        </option>\n                                        <option value='utf8mb4_spanish2_ci'>\n                                            Spanish (Traditional)\n                                        </option>\n                                        <option value='utf8mb4_swedish_ci'>\n                                            Swedish\n                                        </option>\n                                        <option value='utf8mb4_turkish_ci'>\n                                            Turkish\n                                        </option>\n                                        <option value='utf8mb4_vietnamese_ci'>\n                                            Vietnamese\n                                        </option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div id=\"collate_info\" class=\"collapse\">\n                                <a href=\"#collate_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>This is the collation setting for MySQL.</p>\n                                <p>Collation refers to a set of rules that determine how data is sorted and compared in a database.</p>\n                                <p>Leave as 'General' if you are not sure.</p>\n                                <p>If the language you are planning to use in OpenEMR is in the menu, then you can select it.</p>\n                                <p>Otherwise, just select 'General'.</p>\n                            </div>\n                        </div>\n                    </div>\nSTP2TBLTOP2;\n                        echo $step2tabletop2 . \"\\r\\n\";\n                    }\n                    // Include a \"source\" site ID drop-list and a checkbox to indicate\n                    // if cloning its database.  When checked, do not display initial user\n                    // and group stuff below.\n                    $dh = opendir($OE_SITES_BASE);\n                    if (!$dh) {\n                        die(\"Cannot read directory '\" . text($OE_SITES_BASE) . \"'.\");\n                    }\n\n                    $siteslist = array();\n                    while (false !== ($sfname = readdir($dh))) {\n                        if (substr($sfname, 0, 1) == '.') {\n                            continue;\n                        }\n\n                        if ($sfname == 'CVS') {\n                            continue;\n                        }\n\n                        if ($sfname == $site_id) {\n                            continue;\n                        }\n\n                        $sitedir = \"$OE_SITES_BASE/$sfname\";\n                        if (!is_dir($sitedir)) {\n                            continue;\n                        }\n\n                        if (!is_file(\"$sitedir/sqlconf.php\")) {\n                            continue;\n                        }\n\n                        $siteslist[$sfname] = $sfname;\n                    }\n\n                    closedir($dh);\n                    // If this is not the first site...\n                    if (!empty($siteslist)) {\n                        ksort($siteslist);\n                        $source_site_top = <<<SOURCESITETOP\n                    <div class=\"ml-2 row\">\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"source_site_id\">Source Site:</label>\n                                    <a href=\"#source_site_id_info\" class=\"info-anchor icon-tooltip\" data-toggle=\"collapse\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <select name='source_site_id'id='source_site_id' class='form-control'>\nSOURCESITETOP;\n                                            echo $source_site_top . \"\\r\\n\";\n                        foreach ($siteslist as $sfname) {\n                            echo \"<option value='\" . attr($sfname) . \"'\";\n                            if ($sfname == 'default') {\n                                echo \" selected\";\n                            }\n\n                            echo \">\" . text($sfname) . \"</option>\";\n                        }\n                                    $source_site_bot = <<<SOURCESITEBOT\n                                    </select>\n\n                                </div>\n                            </div>\n                            <div id=\"source_site_id_info\" class=\"collapse\">\n                                <a href=\"#source_site_id_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>The site directory that will be a model for the new site.</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"clone_database\">Clone Source Database:</label>\n                                    <a href=\"#clone_database_info\" class=\"info-anchor icon-tooltip\" data-toggle=\"collapse\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <input type='checkbox' name='clone_database' id='clone_database' onclick='cloneClicked()' />\n                                </div>\n                            </div>\n                            <div id=\"clone_database_info\" class=\"collapse\">\n                                <a href=\"#clone_database_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>Clone the source site's database instead of creating a fresh one.</p>\n                            </div>\n                        </div>\n                    </div>\nSOURCESITEBOT;\n                        echo $source_site_bot . \"\\r\\n\";\n                    }\n\n                    $randomusernamepre = RandomGenUtils::produceRandomString(3, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\");\n                    $randomusernamepost = RandomGenUtils::produceRandomString(2, \"0123456789\");\n                    $randomusername = $randomusernamepre . \"-admin-\" . $randomusernamepost;\n\n                    // App Based TOTP secret\n                    // Shared key (per rfc6238 and rfc4226) should be 20 bytes (160 bits) and encoded in base32, which should\n                    //   be 32 characters in base32\n                    // Would be nice to use the OpenEMR\\Common\\Utils\\RandomGenUtils\\produceRandomBytes() function and then encode to base32,\n                    //   but does not appear to be a standard way to encode binary to base32 in php.\n                    $randomsecret = RandomGenUtils::produceRandomString(32, \"234567ABCDEFGHIJKLMNOPQRSTUVWXYZ\");\n                    if (empty($randomsecret) || empty($randomusernamepre) || empty($randomusernamepost)) {\n                        error_log('OpenEMR Error : Random String error - exiting');\n                        die();\n                    }\n                    $disableCheckbox = \"\";\n                    if (empty($randomsecret)) {\n                        $randomsecret = \"\";\n                        $disableCheckbox = \"disabled\";\n                    }\n\n                    $randomsecret_esc = attr($randomsecret);\n                    $randomusername_esc = attr($randomusername);\n                    $step2tablebot = <<<STP2TBLBOT\n                </fieldset>\n                <br />\n                <fieldset class='noclone'>\n                    <legend name=\"form_legend\" id=\"form_legend\" class='oe-setup-legend'>OpenEMR Initial User Details<i id=\"enter-details-tooltip\" class=\"fa fa-info-circle oe-text-black oe-superscript enter-details-tooltip\" aria-hidden=\"true\"></i></legend>\n                    <div class=\"ml-2 row\">\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"iuser\">Initial User Login Name:</label> <a href=\"#iuser_info\"  class=\"info-anchor icon-tooltip\"  data-toggle=\"collapse\" ><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <input name='iuser' id='iuser' type='text' class='form-control' value='$randomusername_esc' minlength='12' />\n                                </div>\n                            </div>\n                            <div id=\"iuser_info\" class=\"collapse\">\n                                <a href=\"#iuser_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>This is the login name of the first user that will be created for you.</p>\n                                <p>Limit this to one word with at least 12 characters and composed of both numbers and letters.</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"iuserpass\">Initial User Password:</label>\n                                    <a href=\"#iuserpass_info\" class=\"info-anchor icon-tooltip\" data-toggle=\"collapse\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <input name='iuserpass' id='iuserpass' type='password' class='form-control' value='' minlength='12' />\n                                </div>\n                            </div>\n                            <div id=\"iuserpass_info\" class=\"collapse\">\n                                <a href=\"#iuserpass_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>This is the password for the initial user.\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"iufname\">Initial User's First Name:</label>\n                                    <a href=\"#iufname_info\" class=\"info-anchor icon-tooltip\" data-toggle=\"collapse\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <input name='iufname' id='iufname 'type='text' class='form-control' value='Administrator' />\n                                </div>\n                            </div>\n                            <div id=\"iufname_info\" class=\"collapse\">\n                                <a href=\"#iufname_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>This is the First name of the 'initial user'.</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"ml-2 row\">\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"iuname\">Initial User's Last Name:</label>\n                                    <a href=\"#iuname_info\" class=\"info-anchor icon-tooltip\" data-toggle=\"collapse\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <input name='iuname' id='iuname' type='text' class='form-control' value='Administrator' />\n                                </div>\n                            </div>\n                            <div id=\"iuname_info\" class=\"collapse\">\n                                <a href=\"#iuname_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>This is the Last name of the 'initial user'.</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"igroup\">Initial Group:</label>\n                                    <a href=\"#igroup_info\" class=\"info-anchor icon-tooltip\" data-toggle=\"collapse\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <input name='igroup' id='igroup' class='form-control' type='text' value='Default' />\n                                </div>\n                            </div>\n                            <div id=\"igroup_info\" class=\"collapse\">\n                                <a href=\"#igroup_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>This is the group that will be created for your users.</p>\n                                <p>This should be the name of your practice.</p>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n                <br />\n                <fieldset class='noclone py-2 bg-warning'>\n                    <legend name=\"form_legend\" id=\"form_legend\" class='oe-setup-legend text-danger'>Enable 2 Factor Authentication for Initial User (more secure - optional) <i id=\"2fa-section\" class=\"fa fa-info-circle oe-text-black oe-superscript 2fa-section-tooltip\" aria-hidden=\"true\"></i></legend>\n                    <div class=\"ml-2 row\">\n                        <div class=\"col-sm-3\">\n                            <div class=\"clearfix form-group\">\n                                <div class=\"label-div\">\n                                    <label class=\"font-weight-bold\" for=\"i2fa\">Configure 2FA:</label>\n                                    <a href=\"#i2fa_info\"  class=\"info-anchor icon-tooltip\" data-toggle=\"collapse\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>\n                                </div>\n                                <div>\n                                    <input name='i2faenable' id='i2faenable' type='checkbox' $disableCheckbox/> Enable 2FA\n                                    <input type='hidden' name='i2fasecret' id='i2fasecret' value='$randomsecret_esc' />\n                                </div>\n                            </div>\n                            <div id=\"i2fa_info\" class=\"collapse\">\n                                <a href=\"#i2fa_info\" data-toggle=\"collapse\" class=\"oe-pull-away\"><i class=\"fa fa-times oe-help-x\" aria-hidden=\"true\"></i></a>\n                                <p>If selected will allow TOTP 2 factor authentication for the initial user.</p>\n                                <p>Click on the help file for more information.</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-5\">\n                            <div class=\"clearfix form-group\">\n                                <p class=\"text-danger font-weight-bold\">IMPORTANT IF ENABLED</p>\n                                <p>If enabled, you must have an authenticator app on your phone ready to scan the QR code displayed next.</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"clearfix form-group\">\n                                <p>Example authenticator apps include:</p>\n                                <ul>\n                                    <li>Google Auth\n                                        (<a href=\"https://itunes.apple.com/us/app/google-authenticator/id388497605?mt=8\" target=\"_blank\">iOS</a>, <a href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&amp;hl=en\">Android</a>)</li>\n                                    <li>Authy\n                                        (<a href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\">iOS</a>, <a href=\"https://play.google.com/store/apps/details?id=com.authy.authy&amp;hl=en\">Android</a>)</li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n                        <p class='mt-4 mark'>Click the <b>Create DB and User</b> button below to create the database and first user <a href='#create_db_button' title='Click me'><i class=\"fa fa-arrow-circle-down\" aria-hidden=\"true\"></i></a>. $note: This process will take a few minutes.</p>\n                        <p class='p-1 bg-success text-white oe-spinner' style='visibility:hidden;'>Upon successful completion will automatically take you to the next step.<i class='fa fa-spinner fa-pulse fa-fw'></i></p>\n                        <div class=\"form-row\">\n                            <div class=\"col-12\">\n                                <button type='submit' id='create_db_button' value='Continue' class='wait btn btn-primary'>\n                                    <i class=\"fas fa-chevron-right\"></i>  Create DB and User\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                    </div>\nSTP2TBLBOT;\n                    echo $step2tablebot . \"\\r\\n\";\n                    break;\n\n                case 3:\n                    // Form Validation\n                    //   (applicable if not cloning from another database)\n\n                    $pass_step2_validation = true;\n                    $error_step2_message   = \"\";\n\n                    if (! $installer->char_is_valid($_REQUEST['server'])) {\n                        $pass_step2_validation = false;\n                        $error_step2_message .=  \"$error - A database server host is required <br />\\n\";\n                    }\n\n                    if (! $installer->char_is_valid($_REQUEST['port'])) {\n                        $pass_step2_validation = false;\n                        $error_step2_message .=  \"$error - A database server port value is required <br />\\n\";\n                    }\n\n                    if (! $installer->databaseNameIsValid($_REQUEST['dbname'])) {\n                        $pass_step2_validation = false;\n                        $error_step2_message .= \"$error - A database name is required <br />\\n\";\n                    }\n\n                    if (! $installer->collateNameIsValid($_REQUEST['collate'])) {\n                        $pass_step2_validation = false;\n                        $error_step2_message .= \"$error - A collation name is required <br />\\n\";\n                    }\n\n                    if (! $installer->char_is_valid($_REQUEST['login'])) {\n                        $pass_step2_validation = false;\n                        $error_step2_message .= \"$error - A database login name is required <br />\\n\";\n                    }\n\n                    if (! $installer->char_is_valid($_REQUEST['pass'])) {\n                        $pass_step2_validation = false;\n                        $error_step2_message .= \"$error - A database login password is required <br />\\n\";\n                    }\n\n                    if (empty($installer->clone_database)) {\n                        if (! $installer->login_is_valid()) {\n                            $pass_step2_validation = false;\n                            $error_step2_message .= \"$error - Please pick a proper 'Login Name'.<br />\\n\";\n                        }\n\n                        if (! $installer->iuser_is_valid()) {\n                            $pass_step2_validation = false;\n                            $error_step2_message .=  \"$error - The 'Initial User' field can only contain one word and no spaces.<br />\\n\";\n                        }\n\n                        if (! $installer->user_password_is_valid()) {\n                            $pass_step2_validation = false;\n                            $error_step2_message .=  \"$error - Please pick a proper 'Initial User Password'.<br />\\n\";\n                        }\n                    }\n\n                    if (! $installer->password_is_valid()) {\n                        $pass_step2_validation = false;\n                        $error_step2_message .=  \"$error - Please pick a proper 'Password'.<br />\\n\";\n                    }\n\n                    if (! $installer->iuname_is_valid()) {\n                        $pass_step2_validation = false;\n                        $error_step2_message .=  \"$error - Please pick a proper 'Initial User Last Name'.<br />\\n\";\n                    }\n\n                    if (!$pass_step2_validation) {\n                        $_SESSION['bootstrapStateInSetup'] = 2;\n                        echo $error_step2_message . '<br />';\n                        echo \"\n                        <form method='post' id='validate-error'>\n                            <input name='state' type='hidden' value='2' />\n                            <input name='site' type='hidden' value='\" . attr($site_id) . \"' />\n                            <input name='inst' type='hidden' value='\" . attr($inst) . \"' />\n                            <input name='csrf_token_form' type='hidden' value='\" . attr(CsrfUtils::collectCsrfToken('state2')) . \"' />\n                            <button type='submit' class='btn btn-primary'><i class='fas fa-chevron-left'></i> \" . text(\"Back\") . \"</button>\n                        </form>\";\n                        break;\n                    }\n\n                    echo \"<h3 class='mb-3 border-bottom'>Step \" . text($state) . \" - Creating Database and First User</h3>\";\n                    echo \"<div class='jumbotron p-5'>\";\n\n                    // Skip below if database shell has already been created.\n                    if ($inst != 2) {\n                        echo \"Connecting to MySQL Server...\\n\";\n                        flush();\n                        if (! $installer->root_database_connection()) {\n                            $_SESSION['bootstrapStateInSetup'] = 2;\n                            echo \"$error.  Check your login credentials.\\n\";\n                            echo text($installer->error_message);\n                            echo \"<br /><br />\";\n                            echo \"\n                            <form method='post' id='validate-error'>\n                                <input name='state' type='hidden' value='2' />\n                                <input name='site' type='hidden' value='\" . attr($site_id) . \"' />\n                                <input name='inst' type='hidden' value='\" . attr($inst) . \"' />\n                                <input name='csrf_token_form' type='hidden' value='\" . attr(CsrfUtils::collectCsrfToken('state2')) . \"' />\n                                <button type='submit' class='btn btn-primary'><i class='fas fa-chevron-left'></i> \" . text(\"Back\") . \"</button>\n                            </form>\";\n                            break;\n                        } else {\n                            echo \"$ok.<br />\\n\";\n                            flush();\n                        }\n                    }\n\n                    // Only pertinent if cloning another installation database\n                    if ($allow_cloning_setup && !empty($installer->clone_database)) {\n                        echo \"Dumping source database...\";\n                        flush();\n                        if (! $installer->create_dumpfiles()) {\n                            echo text($installer->error_message);\n                            break;\n                        } else {\n                            echo \"$ok.<br />\\n\";\n                            flush();\n                        }\n                    }\n\n                    // Only pertinent if mirroring another installation directory\n                    if (! empty($installer->source_site_id)) {\n                        echo \"Creating site directory...\";\n                        if (! $installer->create_site_directory()) {\n                            echo text($installer->error_message);\n                            break;\n                        } else {\n                            echo \"$ok.<br />\";\n                            flush();\n                        }\n                    }\n\n                    // Skip below if database shell has already been created.\n                    if ($inst != 2) {\n                        echo \"Creating database...\\n\";\n                        flush();\n                        if (! $installer->create_database()) {\n                            echo \"$error.  Check your login credentials.\\n\";\n                            echo text($installer->error_message);\n                            break;\n                        } else {\n                            echo \"$ok.<br />\\n\";\n                            flush();\n                        }\n\n                        echo \"Creating user with permissions for database...\\n\";\n                        flush();\n                        $user_mysql_error = true;\n                        if (! $installer->create_database_user()) {\n                            echo \"$error when creating specified user.\\n\";\n                            echo text($installer->error_message);\n                            break;\n                        } else {\n                            $user_mysql_error = false;\n                        }\n                        if (! $installer->grant_privileges()) {\n                            echo \"$error when granting privileges to the specified user.\\n\";\n                            echo text($installer->error_message);\n                            break;\n                        } else {\n                            $user_mysql_error = false;\n                        }\n                        if (!$user_mysql_error) {\n                            echo \"$ok.<br />\\n\";\n                            flush();\n                        }\n\n                        echo \"Reconnecting as new user...\\n\";\n                        flush();\n                        $installer->disconnect();\n                    } else {\n                        echo \"Connecting to MySQL Server...\\n\";\n                    }\n\n                    if (! $installer->user_database_connection()) {\n                        echo \"$error.  Check your login credentials.\\n\";\n                        echo text($installer->error_message);\n                        echo \"<br />You will need to remove the database, correct the problem, and then restart the setup.php script.<br /><br />\";\n                        break;\n                    } else {\n                        echo \"$ok.<br />\\n\";\n                        flush();\n                    }\n\n                    // Load the database files\n                    $dump_results = $installer->load_dumpfiles();\n                    if (! $dump_results) {\n                        echo \"$error.\\n\";\n                        echo text($installer->error_message);\n                        break;\n                    } else {\n                        echo $dump_results;\n                        flush();\n                    }\n\n                    echo \"Writing SQL configuration...\\n\";\n                    flush();\n                    if (! $installer->write_configuration_file()) {\n                        echo \"$error.\\n\";\n                        echo text($installer->error_message);\n                        break;\n                    } else {\n                        echo \"$ok.<br />\\n\";\n                        flush();\n                    }\n\n                    // Only pertinent if not cloning another installation database\n                    if (empty($installer->clone_database)) {\n                        echo \"Setting version indicators...\\n\";\n                        flush();\n                        if (! $installer->add_version_info()) {\n                            echo \"$error.\\n\";\n                            echo text($installer->error_message);\n                            ;\n                            break;\n                        } else {\n                            echo \"$ok<br />\\n\";\n                            flush();\n                        }\n\n                        echo \"Writing global configuration defaults...\\n\";\n                        flush();\n                        if (! $installer->insert_globals()) {\n                            echo \"$error.\\n\";\n                            echo text($installer->error_message);\n                            ;\n                            break;\n                        } else {\n                            echo \"$ok<br />\\n\";\n                            flush();\n                        }\n\n                        echo \"Setting up Access Controls...\\n\";\n                        require(\"$OE_SITE_DIR/sqlconf.php\");\n                        if (! $installer->install_gacl()) {\n                            echo \"$error -.\\n\";\n                            echo text($installer->error_message);\n                            break;\n                        } else {\n                            echo \"$ok<br />\\n\";\n                            flush();\n                        }\n\n\n                        echo \"Adding Initial User...\\n\";\n                        flush();\n                        if (! $installer->add_initial_user()) {\n                            echo \"$error.\\n\";\n                            echo text($installer->error_message);\n                            break;\n                        }\n                        echo \"$ok<br />\\n\";\n                        flush();\n\n                        echo \"Adding Additional Users...\\n\";\n                        flush();\n                        if (! $installer->install_additional_users()) {\n                            echo \"$error.\\n\";\n                            echo text($installer->error_message);\n                            break;\n                        }\n                        echo \"$ok<br />\\n\";\n                        flush();\n\n                        echo \"Configuring Care Coordination Module...\\n\";\n                        flush();\n                        if (! $installer->on_care_coordination()) {\n                            echo \"$error.\\n\";\n                            echo text($installer->error_message);\n                            break;\n                        }\n                        echo \"$ok<br />\\n\";\n                        flush();\n                    }\n\n                    // If user has selected to set MFA App Based 2FA, display QR code to scan\n                    $mfa = $installer->get_initial_user_mfa_totp();\n                    if ($mfa !== false) {\n                        $qr = $mfa->generateQrCode();\n                        $qr_esc = attr($qr);\n                        $sharedSecret = text($mfa->getSecret());\n                        $qrDisplay = <<<TOTP\n                                    <br />\n                                    <table>\n                                        <tr>\n                                            <td>\n                                                <strong class='text-danger'>IMPORTANT!!</strong>\n                                                <p><strong>You must scan the following QR code with your preferred authenticator app.</strong></p>\n                                                <img src='$qr_esc' width=\"150\" />\n                                                <p>Or paste in the following code into your authenticator app</p>\n                                                <p>$sharedSecret</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                Example authenticator apps include:\n                                                <ul>\n                                                    <li>Google Auth\n                                                        (<a href=\"https://itunes.apple.com/us/app/google-authenticator/id388497605?mt=8\">iOS</a>, <a href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&hl=en\">Android</a>)</li>\n                                                    <li>Authy\n                                                        (<a href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\">iOS</a>, <a href=\"https://play.google.com/store/apps/details?id=com.authy.authy&hl=en\">Android</a>)</li>\n                                                </ul>\n                                            </td>\n                                        </tr>\n                                    </table>\nTOTP;\n                        echo $qrDisplay;\n                    }\n\n                    if ($allow_cloning_setup && !empty($installer->clone_database)) {\n                        // Database was cloned, skip ACL setup.\n                        $btn_text = 'Proceed to Select a Theme';\n                        echo \"<br />\";\n                        echo \"<p>The database was cloned, access control list exists therefore skipping ACL setup</p>\";\n                        echo \"<p class='p-1 bg-warning'>Click <b>\" . text($btn_text) . \"</b> for further instructions.</p>\";\n                        $next_state = 7;\n                    } else {\n                        $btn_text = 'Proceed to Step 4';\n                        echo \"<br />\";\n                        echo \"<p><b>Granted user <span class='text-primary'>\" . text($installer->iuser) . \"</span> administrator access control (password is <span class='text-primary'>\" . text($installer->iuserpass) . \"</span>).</b></p>\";\n                        echo \"<p>The next step will configure php.</p>\";\n                        echo \"<p class='mark'>Click <strong>\" . text($btn_text) . \"</strong> to continue.</p>\";\n                        $next_state = 4;\n                    }\n\n                    $_SESSION['bootstrapStateInSetup'] = $next_state;\n                    echo \"<form method='post'>\n                          <input name='state' type='hidden' value='\" . attr($next_state) . \"' />\n                          <input name='csrf_token_form' type='hidden' value='\" . attr(CsrfUtils::collectCsrfToken('state' . $next_state)) . \"' />\n                          <input name='site' type='hidden' value='\" . attr($site_id) . \"' />\n                          <input name='iuser' type='hidden' value='\" . attr($installer->iuser) . \"' />\n                          <input name='iuserpass' type='hidden' value='\" . attr($installer->iuserpass) . \"' />\n                          <input name='iuname' type='hidden' value='\" . attr($installer->iuname) . \"' />\n                          <input name='iufname' type='hidden' value='\" . attr($installer->iufname) . \"' />\n                          <input name='login' type='hidden' value='\" . attr($installer->login) . \"' />\n                          <input name='pass' type='hidden' value='\" . attr($installer->pass) . \"' />\n                          <input name='server' type='hidden' value='\" . attr($installer->server) . \"' />\n                          <input name='port' type='hidden' value='\" . attr($installer->port) . \"' />\n                          <input name='loginhost' type='hidden' value='\" . attr($installer->loginhost) . \"' />\n                          <input name='dbname' type='hidden' value='\" . attr($installer->dbname) . \"' />\\r\\n\";\n\n                    if ($allow_cloning_setup) {\n                        echo \"<input type='hidden' name='clone_database' value='\" . attr($installer->clone_database) . \"' />\";\n                        echo \"<input name='source_site_id' type='hidden' value='\" . attr($installer->source_site_id) . \"' />\";\n                    }\n                                $btn_text_esc = text($btn_text);\n                                $form_bottom = <<<FRMBOT\n                                <div class=\"form-row\">\n                                    <div class=\"col-12\">\n                                        <button type='submit' id='step-4-btn' class=\"btn btn-primary\" value='Continue'>\n                                            <i class=\"fas fa-chevron-right\"></i>  $btn_text_esc\n                                        </button>\n                                    </div>\n                                </div>\n                                </form>\n                                </div>\nFRMBOT;\n                                echo $form_bottom . \"\\r\\n\";\n                    break;\n\n                case 4:\n                    $_SESSION['bootstrapStateInSetup'] = 5;\n                    $state_esc = text($state);\n                    $step4_top = <<<STP4TOP\n                    <h3 class=\"mb-3 border-bottom\">Step $state_esc - Configure PHP</h3>\n                    <div class=\"jumbotron p-5\">\n                    <p>Configuration of PHP...</p>\n                    <p>We recommend making the following changes to your PHP installation, which can normally be done by editing the php.ini configuration file:</p>\n                    <ul>\nSTP4TOP;\n                    echo $step4_top . \"\\r\\n\";\n\n                    $gotFileFlag = 0;\n                    $phpINIfile  = php_ini_loaded_file();\n                    if ($phpINIfile) {\n                        echo \"<li><span class='text-success'>Your php.ini file can be found at \" . text($phpINIfile) . \"</span></li>\\n\";\n                        $gotFileFlag = 1;\n                    }\n\n                    $short_tag = ini_get('short_open_tag') ? 'On' : 'Off';\n                    $short_tag_style = (strcmp($short_tag, 'Off') === 0) ? '' : 'text-danger';\n                    $display_errors = ini_get('display_errors') ? 'On' : 'Off';\n                    $display_errors_style = (strcmp($display_errors, \"Off\")  === 0) ? '' : 'text-danger';\n                    $register_globals = ini_get('register_globals') ? 'On' : 'Off';\n                    $register_globals_style = (strcmp($register_globals, 'Off')  === 0) ? '' : 'text-danger';\n                    $max_input_vars = ini_get('max_input_vars');\n                    $max_input_vars_style = $max_input_vars < 3000 ? 'text-danger' : '';\n                    $max_execution_time = (int)ini_get('max_execution_time');\n                    $max_execution_time_style = $max_execution_time >= 60 || $max_execution_time === 0 ? '' : 'text-danger';\n                    $max_input_time = ini_get('max_input_time');\n                    $max_input_time_style = (strcmp($max_input_time, '-1')  === 0) ? '' : 'text-danger';\n                    $post_max_size = ini_get('post_max_size');\n                    $post_max_size_style = $post_max_size < 30 ? 'text-danger' : '';\n                    $memory_limit = ini_get('memory_limit');\n                    $memory_limit_style = $memory_limit < 256 ? 'text-danger' : '';\n                    $mysqli_allow_local_infile = ini_get('mysqli.allow_local_infile') ? 'On' : 'Off';\n                    $mysqli_allow_local_infile_style = (strcmp($mysqli_allow_local_infile, 'On')  === 0) ? '' : 'text-danger';\n\n                    echo   \"<li>To ensure proper functioning of OpenEMR you must make sure that PHP settings include:\n                            <table class='phpset'>\n                                <tr>\n                                    <th>Setting</th>\n                                    <th>Required value</th>\n                                    <th>Current value</th>\n                                </tr>\n                                <tr>\n                                    <td>short_open_tag</td>\n                                    <td>Off</td>\n                                    <td class='\" . attr($short_tag_style) . \"'>\" . text($short_tag) . \"</td>\n                                </tr>\n                                <tr>\n                                    <td>display_errors</td>\n                                    <td>Off</td>\n                                    <td class='\" . attr($display_errors_style) . \"'>\" . text($display_errors) . \"</td>\n                                </tr>\n                                <tr>\n                                    <td>register_globals</td>\n                                    <td>Off</td>\n                                    <td class='\" . attr($register_globals_style) . \"'>\" . text($register_globals) . \"</td>\n                                </tr>\n                                <tr>\n                                    <td>max_input_vars</td>\n                                    <td>at least 3000</td>\n                                    <td class='\" . attr($max_input_vars_style) . \"'>\" . text($max_input_vars) . \"</td>\n                                </tr>\n                                <tr>\n                                    <td>max_execution_time</td>\n                                    <td>at least 60</td>\n                                    <td class='\" . attr($max_execution_time_style) . \"'>\" . text($max_execution_time) . \"</td>\n                                </tr>\n                                <tr>\n                                    <td>max_input_time</td>\n                                    <td>-1</td>\n                                    <td class='\" . attr($max_input_time_style) . \"'>\" . text($max_input_time) . \"</td>\n                                </tr>\n                                <tr>\n                                    <td>post_max_size</td>\n                                    <td>at least 30M</td>\n                                    <td class='\" . attr($post_max_size_style) . \"'>\" . text($post_max_size) . \"</td>\n                                </tr>\n                                <tr>\n                                    <td>memory_limit</td>\n                                    <td>at least 256M</td>\n                                    <td class='\" . attr($memory_limit_style) . \"'>\" . text($memory_limit) . \"</td>\n                                </tr>\n                                <tr>\n                                    <td>mysqli.allow_local_infile</td>\n                                    <td>On</td>\n                                    <td class='\" . attr($mysqli_allow_local_infile_style) . \"'>\" . text($mysqli_allow_local_infile) . \"</td>\n                                </tr>\n                            </table>\n                        </li>\n                        <li>In order to take full advantage of the patient documents capability you must make sure that settings in php.ini file include \\\"file_uploads = On\\\", that \\\"upload_max_filesize\\\" is appropriate for your use and that \\\"upload_tmp_dir\\\" is set to a correct value that will work on your system.\n                        </li>\\r\\n\";\n\n                    if (!$gotFileFlag) {\n                        echo \"<li>If you are having difficulty finding your php.ini file, then refer to the <a href='Documentation/INSTALL' rel='noopener' target='_blank'><u>'INSTALL'</u></a> manual for suggestions.</li>\\n\";\n                    }\n\n                    $btn_text = 'Proceed to Step 5';\n                    echo \"</ul>\n\n                    <p>We recommend you print these instructions for future reference.</p>\n                    <p>The next step will configure the Apache web server.</p>\n                    <p class='mark'>Click <strong>\" . text($btn_text) . \"</strong> to continue.</p>\n                    <br />\n                    <form method='post'>\n                        <input type='hidden' name='state' value='5' />\n                        <input name='csrf_token_form' type='hidden' value='\" . attr(CsrfUtils::collectCsrfToken('state5')) . \"' />\n                        <input type='hidden' name='site' value='\" . attr($site_id) . \"' />\n                        <input type='hidden' name='iuser' value='\" . attr($installer->iuser) . \"' />\n                        <input type='hidden' name='iuserpass' value='\" . attr($installer->iuserpass) . \"' />\n                        <input name='login' type='hidden' value='\" . attr($installer->login) . \"' />\n                        <input name='pass' type='hidden' value='\" . attr($installer->pass) . \"' />\n                        <input name='server' type='hidden' value='\" . attr($installer->server) . \"' />\n                        <input name='port' type='hidden' value='\" . attr($installer->port) . \"' />\n                        <input name='loginhost' type='hidden' value='\" . attr($installer->loginhost) . \"' />\n                        <input name='dbname' type='hidden' value='\" . attr($installer->dbname) . \"' />\n                        <div class='form-row'>\n                            <div class='col-12'>\n                                <button type='submit' class='btn btn-primary' value='Continue'>\n                                    <i class='fas fa-chevron-right'></i>  \" . text($btn_text) . \"\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                    </div>\\r\\n\";\n                    break;\n\n                case 5:\n                    $_SESSION['bootstrapStateInSetup'] = 6;\n                    echo \"<h3 class='mb-3 border-bottom'>Step \" . text($state) . \" - Configure Apache Web Server</h3>\";\n                    echo \"<div class='jumbotron p-5'>\";\n                    echo \"<p>Configuration of Apache web server...</p><br />\\n\";\n                    echo \"The <code>\\\"\" . text(preg_replace(\"/{$site_id}/\", \"*\", realpath($docsDirectory))) . \"\\\"</code> directory contain patient information, and\n                    it is important to secure these directories. Additionally, some settings are required for the Zend Framework to work in OpenEMR. This can be done by pasting the below to end of your apache configuration file:<br /><br />\n                    &nbsp;&nbsp;<code>&lt;Directory \\\"\" . text(realpath(dirname(__FILE__))) . \"\\\"&gt;<br />\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AllowOverride FileInfo<br />\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Require all granted<br />\n                    &nbsp;&nbsp;<code>&lt;/Directory&gt;</code><br />\n                    &nbsp;&nbsp;&lt;Directory \\\"\" . text(realpath(dirname(__FILE__))) . \"/sites\\\"&gt;<br />\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AllowOverride None<br />\n                    &nbsp;&nbsp;&lt;/Directory&gt;</code><br />\n                    &nbsp;&nbsp;<code>&lt;Directory \\\"\" . text(preg_replace(\"/{$site_id}/\", \"*\", realpath($docsDirectory))) . \"\\\"&gt;<br />\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Require all denied<br />\n                    &nbsp;&nbsp;&lt;/Directory&gt;</code><br /><br />\";\n\n                    $btn_text = 'Proceed to Select a Theme';\n                    echo \"<p>If you are having difficulty finding your apache configuration file, then refer to the <a href='Documentation/INSTALL' rel='noopener' target='_blank'><u>'INSTALL'</u></a> manual for suggestions.</p>\n                    <p>We recommend you print these instructions for future reference.</p>\n                    <p class='mark'>Click <strong>'\" . text($btn_text) . \"'</strong> to select a theme.</p>\n                    <br />\n                    <form method='post'>\n                        <input type='hidden' name='state' value='6' />\n                        <input name='csrf_token_form' type='hidden' value='\" . attr(CsrfUtils::collectCsrfToken('state6')) . \"' />\n                        <input type='hidden' name='site' value='\" . attr($site_id) . \"' />\n                        <input type='hidden' name='iuser' value='\" . attr($installer->iuser) . \"' />\n                        <input type='hidden' name='iuserpass' value='\" . attr($installer->iuserpass) . \"' />\n                        <input name='login' type='hidden' value='\" . attr($installer->login) . \"' />\n                        <input name='pass' type='hidden' value='\" . attr($installer->pass) . \"' />\n                        <input name='server' type='hidden' value='\" . attr($installer->server) . \"' />\n                        <input name='port' type='hidden' value='\" . attr($installer->port) . \"' />\n                        <input name='loginhost' type='hidden' value='\" . attr($installer->loginhost) . \"' />\n                        <input name='dbname' type='hidden' value='\" . attr($installer->dbname) . \"' />\n                        <div class='form-row'>\n                            <div class='col-12'>\n                                <button type='submit' class='btn btn-primary' value='Continue'>\n                                    <i class='fas fa-chevron-right'></i>  \" . text($btn_text) . \"\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                    <div>\\r\\n\";\n                    break;\n\n                case 6:\n                    $_SESSION['bootstrapStateInSetup'] = 7;\n                    echo \"<h3 class='mb-3 border-bottom'>Step \" . text($state) . \" - Select a Theme</h3>\";\n                    echo \"<div class='jumbotron p-5'>\";\n                    echo \"<p>Select a theme for OpenEMR...</p>\\n\";\n                    $btn_text = \"Proceed to Final Step\";\n                    $installer->displaySelectedThemeDiv();\n                    echo \"<div class='row'>\n                    <div class='col-12'>\n                        <form method='post'>\n                            <input type='hidden' name='state' value='7' />\n                            <input name='csrf_token_form' type='hidden' value='\" . attr(CsrfUtils::collectCsrfToken('state7')) . \"' />\n                            <input type='hidden' name='site' value='\" . attr($site_id) . \"' />\n                            <input type='hidden' name='iuser' value='\" . attr($installer->iuser) . \"' />\n                            <input type='hidden' name='iuserpass' value='\" . attr($installer->iuserpass) . \"' />\n                            <input name='login' type='hidden' value='\" . attr($installer->login) . \"' />\n                            <input name='pass' type='hidden' value='\" . attr($installer->pass) . \"' />\n                            <input name='server' type='hidden' value='\" . attr($installer->server) . \"' />\n                            <input name='port' type='hidden' value='\" . attr($installer->port) . \"' />\n                            <input name='loginhost' type='hidden' value='\" . attr($installer->loginhost) . \"' />\n                            <input name='dbname' type='hidden' value='\" . attr($installer->dbname) . \"' />\n                            <input type='hidden' name='new_theme' id = 'new_theme' value='\" . attr($installer->getCurrentTheme()) . \"' />\n                            <input name='clone_database' type='hidden' value='\" . attr($installer->clone_database) . \"' />\n                            <input name='source_site_id' type='hidden' value='\" . attr($installer->source_site_id) . \"' />\n                        <h4>Select One:</h4>\n                            <div class='checkbox'>\n                              <label><input type='checkbox' class='check' value='show_theme' />Show More Themes</label>\n                            </div>\n                            <div class='checkbox'>\n                              <label><input type='checkbox' class='check' value='keep_current' />Keep Current</label>\n                            </div>\n                            <div class='hide_button' style='display:none;'>\n                                <button type='submit' class='btn btn-primary' value='Continue' id='continue'>\n                                    <i class='fas fa-chevron-right'></i>  \" . text($btn_text) . \"\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\\r\\n\";\n                    echo '<div class=\"row hideaway\" style=\"display:none;\">' . \"\\r\\n\";\n                    echo '<div class=\"col-12\">' . \"\\r\\n\";\n                    echo '    <h4>Select New Theme: <h5>(scroll down to view all)</h5></h4>' . \"\\r\\n\";\n                    echo '    <br />' . \"\\r\\n\";\n                    $installer->displayThemesDivs();\n                    echo \"</div>\";\n                    break;\n\n                case 0:\n                default:\n                    $top = <<<TOP\n                        <h3 class=\"mb-3 border-bottom\">Pre Install - Checking File and Directory Permissions</h3>\n                            <div class=\"jumbotron p-5\">\n                                <p>\n                                    Welcome to OpenEMR. This utility will step you through the installation and configuration of OpenEMR for your practice.\n                                </p>\n                                <ul>\n                                    <li>\n                                        Before proceeding, be sure that you have a properly installed and configured MySQL server available, and a PHP configured webserver.\n                                    </li>\n                                    <li>\n                                        <span class=\"text-highlight\">Detailed installation instructions can be found in the <a href='Documentation/INSTALL' rel='noopener' target='_blank'><u>'INSTALL'</u></a> manual file.</span>\n                                    </li>\n                                    <li>\n                                        If you are upgrading from a previous version, <strong>DO NOT</strong> use this script. Please read the <strong>'Upgrading'</strong> section found in the <a href='Documentation/INSTALL' rel='noopener' target='_blank'><u>'INSTALL'</u></a> manual file.\n                                    </li>\n                                </ul>\nTOP;\n                                echo $top;\n                    if ($checkPermissions) {\n                        echo \"<p>We will now ensure correct file and directory permissions before starting installation:</p>\\n\";\n                        echo \"<p class='text-success m-0'>Ensuring following file is world-writable...</p>\\n\";\n                        $errorWritable = 0;\n                        foreach ($writableFileList as $tempFile) {\n                            if (is_writable($tempFile)) {\n                                    echo \"<code class='ml-5'>\" . text(realpath($tempFile)) . \"</code> file is <span class='text-success font-weight-bold'>ready</span><br /><br />\\n\";\n                            } else {\n                                    echo \"<p><span class='text-danger'>UNABLE</span> to open file '\" . text(realpath($tempFile)) . \"' for writing.<br />\\n\";\n                                    echo \"(configure file permissions; see below for further instructions)</p>\\n\";\n                                    $errorWritable = 1;\n                            }\n                        }\n\n                        if ($errorWritable) {\n                            $site_id_esc = attr($site_id);\n                            $check_file = <<<CHKFILE\n                                        <p class=\"text-danger\">You can't proceed until all above files are ready (world-writable).</p>\n                                        <p>In linux, recommend changing file permissions with the <strong>'chmod 666 filename'</strong> command.</p>\n                                        <p class='p-1 bg-danger text-white'>Fix above file permissions and then click the <strong>'Check Again'</strong> button to re-check files.</p>\n                                        <br />\n                                        <form method='post'>\n                                            <input type='hidden' name='site' value='$site_id_esc' />\n                                            <button type='submit' class='btn btn-primary' value='check again'>Check Again</button>\n                                        </form>\nCHKFILE;\n                            echo $check_file . \"\\r\\n\";\n                            break;\n                        }\n\n                        $errorWritable = 0;\n                        foreach ($writableDirList as $tempDir) {\n                            echo \"<p class='text-success m-0'>Ensuring the <code>\" . text(realpath($tempDir)) . \"</code> directory and its subdirectories have proper permissions...</p>\\n\";\n                            $errorWritable = recursive_writable_directory_test($tempDir);\n                        }\n\n                        if ($errorWritable) {\n                            $site_id_esc = attr($site_id);\n                            $check_directory = <<<CHKDIR\n                                        <p class=\"text-danger\">You can't proceed until all directories and subdirectories are ready.</p>\n                                        <p>In linux, recommend changing owners of these directories to the web server. For example, in many linux OS's the web server user is 'apache', 'nobody', or 'www-data'. So if 'apache' were the web server user name, could use the command <strong>'chown -R apache:apache directory_name'</strong> command.</p>\n                                        <p class='p-1 bg-warning'>Fix above directory permissions and then click the <strong>'Check Again'</strong> button to re-check directories.</p>\n                                        <br />\n                                        <form method='post'>\n                                            <input type='hidden' name='site' value='$site_id_esc' />\n                                            <button type='submit' value='check again'><b>Check Again</b></button>\n                                        </form>\nCHKDIR;\n                            echo $check_directory . \"\\r\\n\";\n                            break;\n                        }\n\n                        //RP_CHECK_LOGIC\n                        $_SESSION['bootstrapStateInSetup'] = 1;\n                        $site_id_esc = attr($site_id);\n                        $csrf_id_esc = attr(CsrfUtils::collectCsrfToken('state1'));\n                        $form = <<<FRM\n                                    <p>All required files and directories have been verified.</p>\n                                    <p class='mark'>Click <span class=\"font-weight-bold\">Proceed to Step 1</span> to continue with a new installation.</p>\n                                    <p class='p-1 bg-warning'>$caution: If you are upgrading from a previous version, <strong>DO NOT</strong> use this script. Please read the <strong>'Upgrading'</strong> section found in the <a href='Documentation/INSTALL' rel='noopener' target='_blank'><u>'INSTALL'</u></a> manual file.</p>\n                                    <br />\n                                    <form method='post'>\n                                        <input name='state' type='hidden' value='1' />\n                                        <input name='site' type='hidden' value='$site_id_esc' />\n                                        <input name='csrf_token_form' type='hidden' value='$csrf_id_esc' />\n                                        <div class=\"form-group\">\n                                            <div class=\"col\">\n                                                <button type='submit' class='btn btn-primary' value='Continue'>\n                                                    <i class=\"fas fa-chevron-right\"></i>  Proceed to Step 1\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </form>\nFRM;\n                        echo $form . \"\\r\\n\";\n                    } else {\n                        $_SESSION['bootstrapStateInSetup'] = 1;\n                        $site_id_esc = attr($site_id);\n                        $csrf_id_esc = attr(CsrfUtils::collectCsrfToken('state1'));\n                        $form = <<<FRM\n                                    <br />\n                                    <p class='p-1 bg-warning'>$caution: Permisssions checking has been disabled. All required files and directories have NOT been verified, please manually verify sites/$site_id_esc .</p>\n                                    <p class='mark'>Click <b>Proceed to Step 1</b> to continue with a new installation.</p>\n                                    <p class='p-1 bg-warning'>$caution: If you are upgrading from a previous version, <strong>DO NOT</strong> use this script. Please read the <strong>'Upgrading'</strong> section found in the <a href='Documentation/INSTALL' rel='noopener' target='_blank'><span style='text-decoration: underline;'>'INSTALL'</span></a> manual file.</p>\n                                    <br />\n                                    <form method='post'>\n                                        <input name='state' type='hidden' value='1'>\n                                        <input name='site' type='hidden' value='$site_id_esc'>\n                                        <input name='csrf_token_form' type='hidden' value='$csrf_id_esc' />\n                                        <button type='submit' value='Continue'><b>Proceed to Step 1</b></button>\n                                    </form>\nFRM;\n                        echo $form . \"\\r\\n\";                        }\n            }\n                        $bot = <<<BOT\n                                    </div>\n                                </div>\n                            </div>\nBOT;\n                        echo $bot . \"\\r\\n\";\n            ?>\n\n\n    </div><!--end of container div -->\n    <?php $installer->setupHelpModal();?>\n    <script>\n        //jquery-ui tooltip\n        $(function () {\n            $('.icon-tooltip').prop( \"title\", \"Click to see more information\").tooltip({\n                show: {\n                    delay: 700,\n                    duration: 0\n                }\n            });\n            $('.enter-details-tooltip').prop( \"title\", \"Additional help to fill out this form is available by hovering over labels of each box and clicking on the dark blue help ? icon that is revealed. On mobile devices tap once on the label to reveal the help icon and tap on the icon to show the help section\").tooltip();\n            $('.2fa-section-tooltip').prop( \"title\", \"Two factor authentication prevents unauthorized access to openEMR thus improves security. It is optional. More information is available in the help file under Step 2 Database and OpenEMR Initial User Setup Details.\").tooltip();\n\n\n        });\n    </script>\n    <script>\n        $(function () {\n            $(\"input[type='radio']\").click(function() {\n                var radioValue = $(\"input[name='stylesheet']:checked\").val();\n                var imgPath = \"public/images/stylesheets/\";\n                var currStyle = $(\"#current_theme_title\").text();\n                var currStyleTitle = currStyle;\n                currStyle = currStyle.replace(/\\b\\w/g, l => l.toLowerCase());\n                currStyle = currStyle.split(\" \");\n                currStyle = currStyle.join(\"_\");\n                currStyle = \"style_\" + currStyle + \".png\";\n                if (radioValue) {\n                    var currThemeText = radioValue.split(\"_\");\n                    currThemeText = currThemeText.join(\" \");\n                    currThemeText = currThemeText.replace(/\\b\\w/g, l => l.toUpperCase());\n                    var styleSelected = confirm(\"You have selected style  - \" + currThemeText + \"\\n\" + \"Click OK to apply selection\");\n                    if (styleSelected) {\n                        $(\"#current_theme\").attr(\"src\", imgPath + \"style_\" + radioValue + \".png\");\n                        $(\"#current_theme_title\").text(currThemeText);\n                        $(\"#new_theme\").val(\"style_\" + radioValue + \".css\");\n                    } else {\n                        $(\"#current_theme\").attr(\"src\", imgPath + currStyle);\n                        $(\"#current_theme_title\").text(currStyleTitle);\n                        $(this).prop(\"checked\", false);\n                    }\n                }\n            });\n            $('.check').click(function() {\n                $('.check').not(this).prop('checked', false);\n                    if($('.check:checked').val() == 'show_theme'){\n                        $(\".hideaway\").show();\n                    } else if($('.check:checked').val() == 'keep_current'){\n                        $(\".hideaway\").hide();\n                    }\n\n                    if($('.check').filter(':checked').length > 0) {\n                        $(\".hide_button\").show();\n                    } else {\n                        $(\".hide_button\").hide();\n                        $(\".hideaway\").hide();\n                    }\n            });\n            $('.wait').removeClass('button-wait');\n\n            $( \"#create_db_button\" ).hover(\n                function() {\n                    if (($('#iuserpass' ).val().length > 11 && $('#iuser' ).val().length > 11 ) || ($('#clone_database').prop('checked'))){\n\n                        $(\"button\").click(function(){\n                           $(\".oe-spinner\").css(\"visibility\", \"visible\");\n                        });\n\n                        $('.wait').click(function(){\n                             $('.wait').addClass('button-wait');\n                        });\n                    }\n                }\n            );\n\n            $(\"#step-4-btn\").click(function(){\n               $(\".oe-spinner\").css(\"visibility\", \"visible\");\n               $(this).addClass('button-wait');\n            });\n        });\n    </script>\n</body>\n</html>\n"
        },
        {
          "name": "sites",
          "type": "tree",
          "content": null
        },
        {
          "name": "sphere",
          "type": "tree",
          "content": null
        },
        {
          "name": "sql",
          "type": "tree",
          "content": null
        },
        {
          "name": "sql_patch.php",
          "type": "blob",
          "size": 4.853515625,
          "content": "<?php\n\n// Copyright (C) 2008-2010 Rod Roark <rod@sunsetsystems.com>\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This may be run after an upgraded OpenEMR has been installed.\n// Its purpose is to upgrade the MySQL OpenEMR database as needed\n// for the new release.\n\n// Checks if the server's PHP version is compatible with OpenEMR:\nrequire_once(dirname(__FILE__) . \"/src/Common/Compatibility/Checker.php\");\n$response = OpenEMR\\Common\\Compatibility\\Checker::checkPhpVersion();\nif ($response !== true) {\n    die(htmlspecialchars($response));\n}\n\n// Disable PHP timeout.  This will not work in safe mode.\nini_set('max_execution_time', '0');\n\n$ignoreAuth = true; // no login required\n\nrequire_once('interface/globals.php');\nrequire_once('library/sql_upgrade_fx.php');\n\nuse OpenEMR\\Common\\Uuid\\UuidRegistry;\nuse OpenEMR\\Services\\Utils\\SQLUpgradeService;\nuse OpenEMR\\Services\\VersionService;\n\n// Force logging off\n$GLOBALS[\"enable_auditlog\"] = 0;\n\n$EMRversion = trim(preg_replace('/\\s*\\([^)]*\\)/', '', (new VersionService())->asString()));\n\n$sqlUpgradeService = new SQLUpgradeService();\n?>\n\n\n<html>\n<head>\n<title>OpenEMR <?php echo attr($EMRversion) ?> <?php echo xlt('Database Patch'); ?></title>\n<link rel=\"shortcut icon\" href=\"public/images/favicon.ico\" />\n</head>\n<body style=\"color:green;\">\n\n<div style=\"box-shadow: 3px 3px 5px 6px #ccc; border-radius: 20px; padding: 10px 40px;background-color:#EFEFEF; width:500px; margin:40px auto\">\n\n  <p style=\"font-weight:bold; font-size:1.8em; text-align:center\">OpenEMR <?php echo text($EMRversion),' ',xlt('Database Patch'),' ',text($v_realpatch) ?></p>\n  <p style=\"font-weight:bold; text-align:center;\"><?php echo xlt('Applying Patch to site'),' : ',text($_SESSION['site_id']) ?></p>\n\n\n    <?php\n    upgradeFromSqlFile('patch.sql');\n    flush();\n\n    echo \"<br /><p class='text-success'>Updating UUIDs (this could take some time)<br />\\n\";\n    $sqlUpgradeService->flush_echo();\n    $updateUuidLog = UuidRegistry::populateAllMissingUuids();\n    if (!empty($updateUuidLog)) {\n        echo \"Updated UUIDs: \" . text($updateUuidLog) . \"</p>\\n\";\n    } else {\n        echo \"Did not need to update or add any new UUIDs</p>\\n\";\n    }\n    $sqlUpgradeService->flush_echo();\n\n    echo '<p style=\"font-weight:bold; text-align:left; color:green\">',xlt('Updating global configuration defaults'),'...</p>';\n    $skipGlobalEvent = true; //use in globals.inc.php script to skip event stuff\n    require_once(\"library/globals.inc.php\");\n    foreach ($GLOBALS_METADATA as $grpname => $grparr) {\n        foreach ($grparr as $fldid => $fldarr) {\n            list($fldname, $fldtype, $flddef, $flddesc) = $fldarr;\n            if (is_array($fldtype) || (substr($fldtype, 0, 2) !== 'm_')) {\n                $row = sqlQuery(\"SELECT count(*) AS count FROM globals WHERE gl_name = '$fldid'\");\n                if (empty($row['count'])) {\n                    sqlStatement(\"INSERT INTO globals ( gl_name, gl_index, gl_value ) \" .\n                    \"VALUES ( '$fldid', '0', '$flddef' )\");\n                }\n            }\n        }\n    }\n\n    $versionService = new VersionService();\n    $currentVersion = $versionService->fetch();\n    $desiredVersion = $currentVersion;\n    $desiredVersion['v_database'] = $v_database;\n    $desiredVersion['v_tag'] = $v_tag;\n    $desiredVersion['v_realpatch'] = $v_realpatch;\n    $desiredVersion['v_patch'] = $v_patch;\n    $desiredVersion['v_minor'] = $v_minor;\n    $desiredVersion['v_major'] = $v_major;\n\n    $canRealPatchBeApplied = $versionService->canRealPatchBeApplied($desiredVersion);\n    if ($canRealPatchBeApplied) {\n        echo '<p style=\"font-weight:bold; text-align:left;\">',xlt('Updating version indicators'),'...</p>';\n        $versionService->update($desiredVersion);\n    }\n\n    echo '<p style=\"text-align:center; font-size:1.8em;\">',xlt('Database Patch'),' ',text($desiredVersion['v_realpatch']),' ',xlt('finished'),'.</p>';\n\n    echo '<p style=\"text-align:center; font-size:1.8em;\">OpenEMR ',xlt('Version'),' = ',text($EMRversion . '(' . $desiredVersion['v_realpatch'] . ')'),'.</p>';\n\n    echo '<p><a style=\"border-radius: 10px; padding:5px; width:200px; margin:0 auto; background-color:green; color:white; font-weight:bold; display:block; text-align:center;\" href=\"index.php?site=',attr($_SESSION['site_id']) . '\">',xlt('Log in'),'</a></p>';\n\n    if (isset($_SERVER['HTTP_REFERER'])) {\n        $split = preg_split('/\\//', $_SERVER['HTTP_REFERER']);\n        if ($split[count($split) - 1] == 'admin.php') {\n            echo '<p><a style=\"border-radius: 10px; padding:5px; width:200px; margin:0 auto; background-color:green; color:white; font-weight:bold; display:block; text-align:center;\" href=\"admin.php\">',xlt('Back to Admin Page'),'</a></p>';\n        }\n    }\n\n    ?>\n</div>\n</body>\n</html>\n"
        },
        {
          "name": "sql_upgrade.php",
          "type": "blob",
          "size": 17.203125,
          "content": "<?php\n\n/* sql_upgrade.php\n *\n * This may be run after an upgraded OpenEMR has been installed.\n * It's purpose is to upgrade the MySQL OpenEMR database as needed\n * for the new release.\n *\n * @package OpenEMR\n * @author Rod Roark <rod@sunsetsystems.com>\n * @author Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2008-2010 Rod Roark <rod@sunsetsystems.com>\n * @copyright Copyright (c) 2011-2021 Brady Miller <brady.g.miller@gmail.com>\n * @link https://github.com/openemr/openemr/tree/master\n * @license https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\n/* @TODO add language selection. needs RTL testing */\n\n$GLOBALS['ongoing_sql_upgrade'] = true;\n\nif (php_sapi_name() === 'cli') {\n    // setting for when running as command line script\n    // need this for output to be readable when running as command line\n    $GLOBALS['force_simple_sql_upgrade'] = true;\n}\n\n// Checks if the server's PHP version is compatible with OpenEMR:\nrequire_once(__DIR__ . \"/src/Common/Compatibility/Checker.php\");\n$response = OpenEMR\\Common\\Compatibility\\Checker::checkPhpVersion();\nif ($response !== true) {\n    die(htmlspecialchars($response));\n}\n\n@ini_set('zlib.output_compression', 0);\n@ini_set('implicit_flush', 1);\n@ob_end_clean();\n// Disable PHP timeout.  This will not work in safe mode.\n@ini_set('max_execution_time', '0');\nif (ob_get_level() === 0) {\n    ob_start();\n}\n\n$ignoreAuth = true; // no login required\n$sessionAllowWrite = true;\n$GLOBALS['connection_pooling_off'] = true; // force off database connection pooling\n\nrequire_once('interface/globals.php');\nrequire_once('library/sql_upgrade_fx.php');\n\nuse OpenEMR\\Common\\Csrf\\CsrfUtils;\nuse OpenEMR\\Common\\Uuid\\UuidRegistry;\nuse OpenEMR\\Core\\Header;\nuse OpenEMR\\Services\\Utils\\SQLUpgradeService;\nuse OpenEMR\\Services\\VersionService;\n\n// Force logging off\n$GLOBALS[\"enable_auditlog\"] = 0;\n\n$versions = array();\n$sqldir = \"$webserver_root/sql\";\n$dh = opendir($sqldir);\nif (!$dh) {\n    die(\"Cannot read $sqldir\");\n}\n\nwhile (false !== ($sfname = readdir($dh))) {\n    if ($sfname[0] === '.') {\n        continue;\n    }\n\n    if (preg_match('/^(\\d+)_(\\d+)_(\\d+)-to-\\d+_\\d+_\\d+_upgrade.sql$/', $sfname, $matches)) {\n        $version = $matches[1] . '.' . $matches[2] . '.' . $matches[3];\n        $versions[$version] = $sfname;\n    }\n}\n\nclosedir($dh);\nksort($versions);\n\n$res2 = sqlStatement(\"select * from lang_languages where lang_description = ?\", array($GLOBALS['language_default'] ?? ''));\nfor ($iter = 0; $row = sqlFetchArray($res2); $iter++) {\n    $result2[$iter] = $row;\n}\n\nif (count($result2 ?? []) == 1) {\n    $defaultLangID = $result2[0][\"lang_id\"];\n    $defaultLangName = $result2[0][\"lang_description\"];\n    $direction = (int)$result2[0][\"lang_is_rtl\"] === 1 ? 'rtl' : 'ltr';\n} else {\n    //default to english if any problems\n    $defaultLangID = 1;\n    $defaultLangName = \"English\";\n}\n\n$_SESSION['language_choice'] = $defaultLangID;\n$_SESSION['language_direction'] = $direction ?? '';\nCsrfUtils::setupCsrfKey();\nsession_write_close();\n\n$sqlUpgradeService = new SQLUpgradeService();\n\nheader('Content-type: text/html; charset=utf-8');\n\n?>\n<!-- @todo Adding DOCTYPE html breaks BS width/height percentages. Why? -->\n<html>\n<head>\n    <title>OpenEMR Database Upgrade</title>\n    <?php Header::setupHeader(); ?>\n    <link rel=\"shortcut icon\" href=\"public/images/favicon.ico\" />\n<script>\n    let currentVersion;\n    let processProgress = 0;\n    let doPoll = 0;\n    let serverPaused = 0;\n    // recursive long polling where ending is based\n    // on global doPoll true or false.\n    // added a forcePollOff parameter to avoid polling from staying on indefinitely when updating from patch.sql\n    async function serverStatus(version = '', start = 0, forcePollOff = 0) {\n        let updateMsg = \"\";\n        let endMsg = \"<li class='text-success bg-light'>\" +\n            <?php echo  xlj(\"End watching server processes for upgrade version\"); ?>  + \" \" + currentVersion + \"</li>\";\n        if (version) {\n            currentVersion = version;\n            updateMsg = \"<li class='text-light bg-success'>\" +\n              <?php echo  xlj(\"Start watching server processes for upgrade version\"); ?> + \" \" + version + \"</li>\";\n        }\n\n        // start polling\n        let url = \"library/ajax/sql_server_status.php?poll=\" + encodeURIComponent(currentVersion);\n        let data = new FormData;\n        data.append(\"csrf_token_form\", <?php echo js_escape(CsrfUtils::collectCsrfToken('sqlupgrade')); ?>);\n        data.append(\"poll\", currentVersion);\n\n        let response = await fetch(url, {\n            method: 'post',\n            body: data\n        });\n\n        if (response.status === 502) {\n            progressStatus(\"<li class='text-light bg-danger'> ERROR: Restarting. \" + response.statusText) + \"</li>\";\n            // connection timeout, just reconnect\n            if (doPoll) {\n                await serverStatus();\n            }\n        } else if (response.status !== 200) {\n            // show error\n            progressStatus(\"<li class='text-light bg-danger'> ERROR: \" + response.statusText) + \"</li>\";\n            // reconnect in one second\n            if (doPoll) {\n                await serverStatus();\n            }\n        } else {\n            // await status\n            let status = await response.text();\n            if (status === 'Internal Server Error') {\n                let errorMsg = \"<li class='text-light bg-danger'>\" +\n                    <?php echo xlj(\"Stopping activity status checks. Internal Server Error\"); ?> +\"</li>\";\n                progressStatus(errorMsg);\n                // end polling\n                doPoll = 0;\n            }\n            if (status === 'Authentication Error') {\n                let errorMsg = \"<li class='text-light bg-danger'>\" +\n                    <?php echo xlj(\"Stopping status checks. Csrf Error. No harm to upgrade and will continue.\"); ?> +\"</li>\";\n                progressStatus(errorMsg);\n                // end polling\n                doPoll = 0;\n            }\n            if (version) {\n                progressStatus(updateMsg);\n            }\n            if (start === 1) {\n                doPoll = 1;\n            }\n            if (forcePollOff === 1) {\n                doPoll = 0;\n            }\n            // display to screen div\n            if (status > \"\") {\n                progressStatus(status);\n            }\n\n            // and so forth.\n            if (doPoll) {\n                await serverStatus();\n            } else {\n                progressStatus(endMsg);\n            }\n        }\n}\n/*\n* Focus scrolls to bottom of view\n* */\nfunction doScrolls() {\n    let serverStatus = document.getElementById(\"serverStatus\");\n    let isServerBottom = serverStatus.scrollHeight - serverStatus.clientHeight <= serverStatus.scrollTop + 1;\n    let processDetails = document.getElementById(\"processDetails\");\n    let isDetailsBottom = processDetails.scrollHeight - processDetails.clientHeight <= processDetails.scrollTop + 1;\n\n    if(!isServerBottom) {\n        serverStatus.scrollTop = serverStatus.scrollHeight - serverStatus.clientHeight;\n    }if(!isDetailsBottom) {\n        processDetails.scrollTop = processDetails.scrollHeight - processDetails.clientHeight;\n    }\n}\n\nfunction progressStatus(msg = '') {\n    let eventList = document.getElementById('status-message');\n    let progressEl = document.getElementById('progress');\n\n    if (currentVersion == \"UUID\") {\n        if (processProgress < 30) {\n            processProgress++;\n        } else if (processProgress < 40) {\n            if (Math.random() > 0.9) {\n                processProgress++;\n            }\n        } else if (processProgress < 50) {\n            if (Math.random() > 0.95) {\n                processProgress++;\n            }\n        } else if (processProgress < 60) {\n            if (Math.random() > 0.97) {\n                processProgress++;\n            }\n        } else if (processProgress < 70) {\n            if (Math.random() > 0.98) {\n                processProgress++;\n            }\n        } else if (processProgress < 80) {\n            if (Math.random() > 0.99) {\n                processProgress++;\n            }\n        } else if (processProgress < 96) {\n            if (Math.random() > 0.999) {\n                processProgress++;\n            }\n        } else if (processProgress < 99) {\n            if (Math.random() > 0.9999) {\n                processProgress++;\n            }\n        }\n        progressEl.style.width = processProgress + \"%\";\n        progressEl.innerHTML = processProgress + \"%\" + \" UUID Update\";\n    } else {\n        progressEl.style.width = processProgress + \"%\";\n        progressEl.innerHTML = processProgress + \"%\" + \" v\" + currentVersion;\n    }\n    if (msg) {\n        eventList.innerHTML += msg;\n        doScrolls();\n    }\n}\n\nfunction setWarnings(othis) {\n    if (othis.value < '5.0.0') {\n        document.querySelector('.version-warning').classList.remove(\"d-none\");\n    } else {\n        document.querySelector('.version-warning').classList.add(\"d-none\");\n    }\n}\n\nfunction pausePoll(othis) {\n    if (serverPaused === 0 && doPoll === 1) {\n        let alertMsg = \"<li class='text-dark bg-warning'>\" +\n            <?php echo xlj(\"Paused status checks.\"); ?> +\"</li>\";\n        progressStatus(alertMsg);\n        serverPaused = 1;\n        doPoll = 0;\n        document.querySelector('.pause-server').classList.remove(\"btn-success\");\n        document.querySelector('.pause-server').classList.add(\"btn-warning\");\n    } else if (serverPaused === 1) {\n        let alertMsg = \"<li class='text-dark bg-success'>\" +\n            <?php echo xlj(\"Resuming status checks.\"); ?> +\"</li>\";\n        progressStatus(alertMsg);\n        serverPaused = 0;\n        doPoll = 1;\n        serverStatus('', 1);\n        document.querySelector('.pause-server').classList.remove(\"btn-warning\");\n        document.querySelector('.pause-server').classList.add(\"btn-success\");\n    }\n}\n</script>\n</head>\n<body>\n<div class=\"container my-3\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h2><?php echo xlt(\"OpenEMR Database Upgrade\"); ?></h2>            \n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <p><?php echo xlt(\"If you are unsure or were using a development version between two releases, then choose the older of possible releases.\"); ?></p>\n        </div>\n    </div>\n    <div>\n        <form class=\"form-inline\" method='post' action='sql_upgrade.php'>\n            <div class=\"form-group mb-1\">\n                <label><?php echo xlt(\"Please select the prior release you are converting from\"); ?>:</label>\n                <select class='mx-3 form-control' name='form_old_version' onchange=\"setWarnings(this)\">\n                    <?php\n                    $cnt_versions = count($versions);\n                    foreach ($versions as $version => $filename) {\n                        --$cnt_versions;\n                        echo \" <option value='$version'\";\n                        // Defaulting to most recent version or last version in list.\n                        if ($version == ($_POST['form_old_version'] ?? '')) {\n                            echo \" selected\";\n                        } elseif ($cnt_versions === 0 && !($_POST['form_old_version'] ?? '')) {\n                            echo \" selected\";\n                        }\n                        echo \">$version</option>\\n\";\n                    }\n                    ?>\n                </select>\n            </div>\n            <span class=\"alert alert-warning text-danger version-warning d-none\">\n                <?php echo xlt(\"If you are upgrading from a version below 5.0.0 to version 5.0.0 or greater, do note that this upgrade can take anywhere from several minutes to several hours (you will only see a whitescreen until it is complete; do not stop the script before it is complete or you risk corrupting your data)\"); ?>.\n            </span>\n            <button type='submit' class='btn btn-primary btn-transmit' name='form_submit' value='Upgrade Database'>\n                <?php echo xlt(\"Upgrade Database\"); ?>\n            </button>\n            <div class=\"btn-group\">\n            </div>\n        </form>\n        <!-- server status card -->\n        <div class=\"card card-header\">\n            <span class=\"btn-group\">\n                <a class=\"btn btn-success pause-server fa fa-pause float-left\" onclick=\"pausePoll(this)\" title=\"<?php echo xla(\"Click to start or end sql server activity checks.\"); ?>\"></a>\n                <a class=\"btn btn-primary w-100\" data-toggle=\"collapse\" href=\"#serverStatus\">\n                    <?php echo xlt(\"Server Status\"); ?><i class=\"fa fa-angle-down rotate-icon float-right\"></i>\n                </a>\n            </span>\n        </div>\n        <div id=\"serverStatus\" class=\"card card-body pb-2 h-25 overflow-auto collapse show\">\n            <div class=\"bg-light text-dark\">\n                <ul id=\"status-message\"></ul>\n            </div>\n        </div>\n    </div>\n    <!-- collapse place holder for upgrade processing on submit. -->\n    <div class=\"card card-header\">\n        <a class=\"btn btn-primary\" data-toggle=\"collapse\" href=\"#processDetails\">\n            <?php echo xlt(\"Processing Details\"); ?><i class=\"fas fa-angle-down rotate-icon float-right\"></i>\n        </a>\n        <div id=\"progress-div\" class=\"bg-secondary float-left\">\n            <div id=\"progress\" class=\"mt-1 progress-bar bg-success\" style=\"height:1.125rem;width:0;\"></div>\n        </div>\n    </div>\n    <div id='processDetails' class='card card-body pb-2 h-50 overflow-auto collapse show'>\n        <div class='bg-light text-dark'>\n    <?php if (!empty($_POST['form_submit'])) {\n        $form_old_version = $_POST['form_old_version'];\n\n        foreach ($versions as $version => $filename) {\n            if (strcmp($version, $form_old_version) < 0) {\n                continue;\n            }\n            // set polling version and start\n            $sqlUpgradeService->flush_echo(\"<script>serverStatus(\" . js_escape($version) . \", 1);</script>\");\n            $sqlUpgradeService->upgradeFromSqlFile($filename);\n            // end polling\n            sleep(2); // fixes odd bug, where if the sql upgrade goes to fast, then the polling does not stop\n            $sqlUpgradeService->flush_echo(\"<script>processProgress = 100;doPoll = 0;</script>\");\n        }\n\n        if (!empty($GLOBALS['ippf_specific'])) {\n            // Upgrade custom stuff for IPPF.\n            $sqlUpgradeService->upgradeFromSqlFile('ippf_upgrade.sql');\n        }\n\n        if ((!empty($v_realpatch)) && ($v_realpatch != \"\") && ($v_realpatch > 0)) {\n            // This release contains a patch file, so process it.\n            echo \"<script>serverStatus('Patch', 0, 1);</script>\";\n            $sqlUpgradeService->upgradeFromSqlFile('patch.sql');\n        }\n        flush();\n\n        echo \"<br /><p class='text-success'>Updating UUIDs (this could take some time)<br />\\n\";\n        $sqlUpgradeService->flush_echo(\"<script>processProgress = 10; serverStatus('UUID', 1);</script>\");\n        $updateUuidLog = UuidRegistry::populateAllMissingUuids();\n        if (!empty($updateUuidLog)) {\n            echo \"Updated UUIDs: \" . text($updateUuidLog) . \"</p><br />\\n\";\n        } else {\n            echo \"Did not need to update or add any new UUIDs</p><br />\\n\";\n        }\n        sleep(2); // fixes odd bug, where if process goes to fast, then the polling does not stop\n        $sqlUpgradeService->flush_echo(\"<script>processProgress = 100;doPoll = 0;</script>\");\n\n        echo \"<p class='text-success'>\" . xlt(\"Updating global configuration defaults\") . \"...\" . \"</p><br />\\n\";\n        $skipGlobalEvent = true; //use in globals.inc.php script to skip event stuff\n        require_once(\"library/globals.inc.php\");\n        foreach ($GLOBALS_METADATA as $grpname => $grparr) {\n            foreach ($grparr as $fldid => $fldarr) {\n                list($fldname, $fldtype, $flddef, $flddesc) = $fldarr;\n                if (is_array($fldtype) || (substr($fldtype, 0, 2) !== 'm_')) {\n                    $row = sqlQuery(\"SELECT count(*) AS count FROM globals WHERE gl_name = '$fldid'\");\n                    if (empty($row['count'])) {\n                        sqlStatement(\"INSERT INTO globals ( gl_name, gl_index, gl_value ) \" .\n                            \"VALUES ( '$fldid', '0', '$flddef' )\");\n                    }\n                }\n            }\n        }\n\n        echo \"<p class='text-success'>\" . xlt(\"Updating Access Controls\") . \"...\" . \"</p><br />\\n\";\n        require(\"acl_upgrade.php\");\n        echo \"<br />\\n\";\n\n        $versionService = new VersionService();\n        $currentVersion = $versionService->fetch();\n        $desiredVersion = $currentVersion;\n        $desiredVersion['v_database'] = $v_database;\n        $desiredVersion['v_tag'] = $v_tag;\n        $desiredVersion['v_realpatch'] = $v_realpatch;\n        $desiredVersion['v_patch'] = $v_patch;\n        $desiredVersion['v_minor'] = $v_minor;\n        $desiredVersion['v_major'] = $v_major;\n\n        $canRealPatchBeApplied = $versionService->canRealPatchBeApplied($desiredVersion);\n        $line = \"Updating version indicators\";\n\n        if ($canRealPatchBeApplied) {\n            $line = $line . \". \" . xlt(\"Patch was also installed, updating version patch indicator\");\n        }\n\n        echo \"<p class='text-success'>\" . $line . \"...</p><br />\\n\";\n        $versionService->update($desiredVersion);\n\n        echo \"<p><p class='text-success'>\" . xlt(\"Database and Access Control upgrade finished.\") . \"</p></p>\\n\";\n        echo \"</div></body></html>\\n\";\n        exit();\n    }\n    ?>\n        </div>\n    </div>\n</div>\n</body>\n</html>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "swagger",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.php",
          "type": "blob",
          "size": 2.0439453125,
          "content": "<?php\n\n/**\n * Software version identification.\n *\n * @package OpenEMR\n * @link https://www.open-emr.org/wiki\n * @author Robert Down <robertdown@live.com>\n * @license https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n *\n */\n\n// Software version identification.\n// This is used for display purposes, and also the major/minor/patch\n// numbers are stored in the database and used to determine which sql\n// upgrade file is the starting point for the next upgrade.\n$v_major = '7';\n$v_minor = '0';\n$v_patch = '3';\n$v_tag   = '-dev'; // minor revision number, should be empty for production releases\n\n// A real patch identifier. This is incremented when we release a patch for a\n// production release. Note the above $v_patch variable is a misnomer and actually\n// stores release version information.\n$v_realpatch = '0';\n\n// Database version identifier, this is to be incremented whenever there\n// is a database change in the course of development.  It is used\n// internally to determine when a database upgrade is needed.\n//\n$v_database = 504;\n\n// Access control version identifier, this is to be incremented whenever there\n// is a access control change in the course of development.  It is used\n// during installation to determine what the installed version of the access\n// controls is (subsequently the acl_upgrade.php script then is used to\n// upgrade and track this value)\n//\n$v_acl = 12;\n\n// Version for JavaScript and stylesheet includes. Increment whenever a .js or .css file changes.\n// Also whenever you change a .js or .css file, make sure that all URLs referencing it\n// end with \"?v=$v_js_includes\".  Search the code for examples of doing this.\n// All this is to keep browsers from using an older cached version.\n// Need to assign it as a global below to work in template scripts.\nif (!empty($_ENV['OPENEMR__ENVIRONMENT']) && ($_ENV['OPENEMR__ENVIRONMENT'] === 'dev')) {\n    $v_js_includes = md5(microtime());\n} else {\n    // Change this number when bumping\n    $v_js_includes = 76;\n}\n\n// Do not modify below\n$GLOBALS['v_js_includes'] = $v_js_includes;\n"
        }
      ]
    }
  ]
}