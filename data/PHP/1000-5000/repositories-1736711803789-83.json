{
  "metadata": {
    "timestamp": 1736711803789,
    "page": 83,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "php-telegram-bot/core",
      "stars": 3930,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.17578125,
          "content": "root = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[*.{yml, yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.126953125,
          "content": "/.* export-ignore\n/composer.lock export-ignore\n/phpcs.xml.dist export-ignore\n/phpunit.xml.dist export-ignore\n/tests export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.27734375,
          "content": "# IDE & System Related Files #\n.buildpath\n.project\n.settings\n.DS_Store\n.idea\n.phpintel\n.phpunit.result.cache\n\n# Composer\n/composer.lock\n/composer.phar\n/vendor\n\n# Test-Related Files\n/clover.xml\n/phpcs.xml\n/phpunit.xml\n\n# phpDocumentor Logs\nphpdoc-*\n\n# OSX\n._*\n.Spotlight-V100\n.Trashes\n"
        },
        {
          "name": ".scrutinizer.yml",
          "type": "blob",
          "size": 0.2109375,
          "content": "build:\n  environment:\n    php: 8.1.0\n  nodes:\n    analysis:\n      tests:\n        override:\n          - php-scrutinizer-run\n\nfilter:\n  paths:\n    - src/\n    - utils/\n\ntools:\n  external_code_coverage:\n    timeout: 300\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 36.9375,
          "content": "# Changelog\nThe format is based on [Keep a Changelog](http://keepachangelog.com/) and this project adheres to [Semantic Versioning](http://semver.org/).\n\nExclamation symbols (:exclamation:) note something of importance e.g. breaking changes. Click them to learn more.\n\n## [Unreleased]\n### Notes\n- [:ledger: View file changes][Unreleased]\n### Added\n### Changed\n### Deprecated\n### Removed\n### Fixed\n### Security\n\n## [0.83.0] - 2024-05-25\n### Notes\n- [:ledger: View file changes][0.83.0] ∙ [:page_with_curl: DB migration script][0.83.0-sql-migration]\n- [:exclamation:][0.83.0-bc-minimum-php-81] PHP 8.1+ required!\n- Last version with database support built in to the core.\n### Added\n- Bot API 7.0 (@noplanman, @TiiFuchs) (#1459)\n- Bot API 7.1 (@noplanman) (#1465)\n### Changed\n- [:exclamation:][0.83.0-bc-user-to-users] Various fields have been pluralised from \"user\" to \"users\".\n### Deprecated\n### Removed\n### Fixed\n### Security\n\n## [0.82.0] - 2023-10-26\n### Notes\n- [:ledger: View file changes][0.82.0] ∙ [:page_with_curl: DB migration script][0.82.0-sql-migration]\n- Really the last version that supports PHP 7! Only PHP 8 after this one.\n### Added\n- Bot API 6.8, 6.9 (@noplanman) (#1418, #1427)\n- Test against PHP 8.3 (@sergiy-petrov) (#1421)\n### Fixed\n- Missing `thumbnail_url` renaming.\n- Fix broken exception handling (@mlocati) (#1425)\n\n## [0.81.0] - 2023-05-27\n### Notes\n- [:ledger: View file changes][0.81.0] ∙ [:page_with_curl: DB migration script][0.81.0-sql-migration]\n- Last version that supports PHP 7.\n### Added\n- Support dynamic Entity properties for newer PHP versions (@alesinicio, @TiiFuchs) (#1390)\n- Bot API 6.4, 6.5, 6.6, 6.7 (@noplanman) (#1389)\n### Removed\n- Keyboard validations (@noplanman) (#1395)\n### Fixed\n- Fixed a bug where new incoming updates are not correctly passed to the Command object after the first time when getUpdates is used. (@uspilot) (#1384)\n\n## [0.80.0] - 2022-11-09\n### Notes\n- [:ledger: View file changes][0.80.0] ∙ [:page_with_curl: DB migration script][0.80.0-sql-migration]\n### Added\n- Bot API 6.3 (@TiiFuchs) (#1371)\n### Changed\n- [:exclamation:][0.80.0-bc-commands-with-underscores] Commands can now contain underscores (`FooBarCommand` is handled by `/foo_bar`). (@mlocati) (#1365)\n\n## [0.79.0] - 2022-09-04\n### Notes\n- [:ledger: View file changes][0.79.0]\n### Added\n- Bot API 6.2 (@OxMohsen) (#1350)\n### Removed\n- `VoiceChatX` entities, use `VideoChatX` entities instead.\n- `all_members_are_administrators` property from `Message` entity. Database column still exists, but may be removed in the future.\n- `Request::getChatMembersCount()`, use `Request::getChatMemberCount()` instead.\n- `Request::kickChatMember()`, use `Request::banChatMember()` instead.\n\n## [0.78.0] - 2022-07-03\n### Notes\n- [:ledger: View file changes][0.78.0] ∙ [:page_with_curl: DB migration script][0.78.0-sql-migration]\n- 64 bit PHP install required to handle files larger than 2GB!\n### Added\n- Bot API 6.1 (@jyxjjj, @OxMohsen, @noplanman) (#1333, #1338, #1339)\n- New Update field helpers for Command class.\n\n## [0.77.1] - 2022-04-24\n### Notes\n- [:ledger: View file changes][0.77.1]\n### Fixed\n- PHP8+ `mixed` type hint removed\n\n## [0.77.0] - 2022-04-24\n### Notes\n- [:ledger: View file changes][0.77.0] ∙ [:page_with_curl: DB migration script][0.77.0-sql-migration]\n### Added\n- Bot API 6.0 (@TiiFuchs) (#1318)\n### Deprecated\n- Telegram changed `voice_chat_X` to `video_chat_X`. `VoiceChatX` event classes are deprecated, use new `VideoChatX` event classes instead.\n### Fixed\n- Return correct data in `Entity::jsonSerialize` (@TiiFuchs)\n\n## [0.76.1] - 2022-03-30\n### Notes\n- [:ledger: View file changes][0.76.1]\n### Fixed\n- Fix Entity serialising for Keyboards (@TiiFuchs) (#1304)\n\n## [0.76.0] - 2022-03-20\n### Notes\n- [:ledger: View file changes][0.76.0]\n### Added\n- Bot API 5.6 (@TiiFuchs) (#1275)\n- Bot API 5.7 (@TiiFuchs) (#1284)\n- PSR3 (psr/log) version 2 and 3 compatible (@noplanman) (#1287)\n- Entity implements and uses JsonSerializable now (@TiiFuchs)\n- Test with PHP 8.1 on Travis CI (@osavchenko) (#1291)\n### Changed\n- Bugfix: Fixed condition in \\Longman\\TelegramBot\\Entities\\Chat::isGroupChat() that previously also counted super groups and channels. (@TiiFuchs)\n\n## [0.75.0] - 2021-12-29\n### Notes\n- [:ledger: View file changes][0.75.0] ∙ [:page_with_curl: DB migration script][0.75.0-sql-migration]\n### Added\n- Ability to directly set commands paths. (@wright-tw, @noplanman) (#1252)\n- Bot API 5.4. (@TiiFuchs, @noplanman) (#1266)\n- Bot API 5.5. (@TiiFuchs, @noplanman) (#1267)\n- The field `message_auto_delete_time` was added to the Chat Entity (@TiiFuchs) (#1265)\n### Removed\n- [:exclamation:][0.75.0-bc-removed-chatactions] Removed deprecated `ChatAction::` `RECORD_AUDIO` and `UPLOAD_AUDIO`. Use `RECORD_VOICE` and `UPLOAD_VOICE` instead. (@TiiFuchs) (#1267)\n### Fixed\n- PHP 8.1 deprecations. (@maxgorovenko) (#1260)\n\n## [0.74.0] - 2021-06-26\n### Notes\n- [:ledger: View file changes][0.74.0]\n### Added\n- [:exclamation:][0.74.0-bc-chatmember-subentities] Bot API 5.3 (Personalized Commands, Keyboard Placeholders). (@TiiFuchs, @noplanman) (#1229, #1231)\n\n## [0.73.1] - 2021-06-20\n### Notes\n- [:ledger: View file changes][0.73.1]\n### Fixed\n- Allow new optional parameters when setting and deleting webhook. (@TiiFuchs) (#1226)\n\n## [0.73.0] - 2021-06-14\n### Notes\n- [:ledger: View file changes][0.73.0] ∙ [:page_with_curl: DB migration script][0.73.0-sql-migration]\n### Added\n- Bot API 5.2 (Payments 2.0). (#1216)\n- Possibility to connect to MySQL DB with unix socket. (@Tynik) (#1220)\n### Changed\n- `Telegram::runCommands` returns array of `ServerResponse` objects of executed commands. (#1223)\n### Fixed\n- Regex for namespace extraction from custom command classes.\n- Nested and user-triggered `Telegram::runCommands`. (#1223)\n\n## [0.72.0] - 2021-04-16\n### Notes\n- [:ledger: View file changes][0.72.0] ∙ [:page_with_curl: DB migration script][0.72.0-sql-migration]\n### Added\n- Bot API 5.1 (ChatMember Update types, Improved Invite Links, Voice Chat). (@massadm, @noplanman) (#1199)\n- Method to allow adding command classes directly. (@alligator77, @noplanman) (#1207, #1209)\n### Deprecated\n- `Telegram::handleGetUpdates` method should be passed a `$data` array for parameters. (#1202)\n### Fixed\n- `message.edit_date` is now of type `timestamp`. (#1191)\n- Allow all update types by default when using `getUpdates` method. (#1202)\n\n## [0.71.0] - 2021-03-05\n### Notes\n- [:ledger: View file changes][0.71.0]\n### Added\n- Define a custom Bot API server and file download URI. (#1168)\n### Changed\n- Improved error messages for empty input. (#1164)\n- Log update when processing it, not when fetching input. (#1164)\n### Fixed\n- `getUpdates` method wrongly sends only 1 Update when a limit of 0 is passed. (#1169)\n- `Telegram::runCommands()` now passes the correct message text to the commands. (#1181)\n- Request limiter accepts chat ID as integer and string. (#1182)\n- Calling Keyboard constructor without any parameters. (@hutattedonmyarm) (#1184)\n\n## [0.70.1] - 2020-12-25\n### Notes\n- [:ledger: View file changes][0.70.1]\n### Added\n- Extra parameter for `Request::sendMessage()` to pass options and return all response objects for split messages. (#1163)\n### Fixed\n- Ensure download and upload path variables are defined. (#1162)\n\n## [0.70.0] - 2020-12-21\n### Notes\n- [:ledger: View file changes][0.70.0] ∙ [:page_with_curl: DB migration script][0.70.0-sql-migration]\n- [:exclamation:][0.70.0-bc-minimum-php-73] PHP 7.3+ required, so make sure your code is up to date with correct types!\n### Added\n- Bot API 5.0 (Big update!). (#1147)\n### Changed\n- Upgrade code to PHP 7.3. (#1136, #1158)\n- Speed up `/clean` query. (@dva-re) (#1139)\n- Various code prettifications. (@akalongman) (#1140, #1141, #1142, #1143)\n### Security\n- Minimum PHP 7.3, allow PHP 8.0. (#1136, #1158)\n\n## [0.64.0] - 2020-10-04\n### Notes\n- [:ledger: View file changes][0.64.0]\n### Added\n- Support for Guzzle 7. (@KristobalJunta) (#1133)\n### Fixed\n- Correct SQL migration script for older versions of MySQL. (#1135)\n\n## [0.63.1] - 2020-06-24\n### Notes\n- [:ledger: View file changes][0.63.1]\n- This fixed version is necessary for Windows users.\n### Fixed\n- Regex in `getFileNamespace()` that introduced a breaking bug in #1114. (@jacklul) (#1115)\n- Fixed `runCommands()` not working due to custom namespace feature. (@jacklul) (#1115, #1118)\n\n## [0.63.0] - 2020-06-17\n### Notes\n- [:ledger: View file changes][0.63.0] ∙ [:page_with_curl: DB migration script][0.63.0-sql-migration]\n### Added\n- New method `setUpdateFilter($callback)` used to filter `processUpdate(Update $update)` calls. If `$callback` returns `false` the update isn't processed and an empty falsey `ServerResponse` is returned. (@VRciF) (#1045)\n- Replaced 'generic' and 'genericmessage' strings with Telegram::GENERIC_COMMAND and Telegram::GENERIC_MESSAGE_COMMAND constants. (@1int) (#1074)\n- Bot API 4.8 (Extra Poll and Dice features). (#1082)\n- Allow custom MySQL port to be defined for tests. (#1090)\n- New static method `Entity::escapeMarkdownV2` for MarkdownV2. (#1094)\n- Remove bot token from debug http logs, this can be disabled by setting `TelegramLog::$remove_bot_token` parameter to `false`. (@jacklul) (#1095)\n- `TelegramLog::$always_log_request_and_response` parameter to force output of the request and response data to the debug log, also for successful requests. (#1089)\n- Bot API 4.9 (New `via_bot` field). (#1112)\n### Changed\n- [:exclamation:][0.63.0-bc-static-method-entityescapemarkdown] Made `Entity::escapeMarkdown` static, to not require an `Entity` object. (#1094)\n- Allow custom namespacing for commands. (@Jonybang) (#689)\n### Fixed\n- Primary key for `poll_answer` also requires the `user_id`. (#1087)\n- Small SQL foreign key fixes. (#1105)\n\n## [0.62.0] - 2020-04-08\n### Notes\n- [:ledger: View file changes][0.62.0] ∙ [:page_with_curl: DB migration script][0.62.0-sql-migration]\n### Added\n- Bot API 4.5 (Unique file IDs, MarkdownV2). (#1046)\n- Chain the exception thrown when getting commands from path. (#1030)\n- Support `language_code` in `DB::selectChats()` for filtering the chats selection. (#1058)\n- Bot API 4.6 (Polls 2.0). (#1066)\n- Bot API 4.7 (Dice, Sticker Sets, Bot Commands). (#1067)\n### Changed\n- Save notes an unescaped JSON, to allow easy DB reading and editing of values. (#1005)\n- `Request::setClient()` now accepts more flexible `ClientInterface`. (#1068)\n### Removed\n- Unnecessary `instanceof` checks for entities. (#1068)\n- Unused `Request::$input` variable. (#1068)\n### Fixed\n- Execution of `/start` command without any custom implementation.\n- Return `animation` type for GIF Message (which returns both `animation` and `document`). (#1044)\n- Change lowercase function to `mb_strtolower` from `strtolower` because of `latin-extented` characters. (#1051)\n- Extend `Request::mediaInputHelper()` to include `thumb` parameter. (#1059)\n- Various docblock annotations. (#1068)\n\n## [0.61.1] - 2019-11-23\n### Notes\n- [:ledger: View file changes][0.61.1]\n### Added\n- Tests for schema update scripts, to ensure that updates work as expected. (#1025)\n### Fixed\n- Parameter `inline_query_id` in `InlineQuery::answerInlineQuery`. (#1021)\n- Corrected DB schema update 0.60.0-0.61.0. (#1025)\n\n## [0.61.0] - 2019-11-02\n### Notes\n- [:ledger: View file changes][0.61.0] ∙ [:page_with_curl: DB migration script][0.61.0-sql-migration]\n- :exclamation: Built-in logging (Monolog) has been removed, a custom PSR-3 logger must be used now! (see #964 for more info)\n### Added\n- Code snippet in `GenericmessageCommand` to keep obsolete service message system commands working. (#999)\n- Static boolean property `SystemCommand::$execute_deprecated` (must be assigned before handling the request) to try and execute any deprecated system command. (#999)\n- Improved MySQL DB index for `message` table, making the cleanup much faster on bigger databases. (Thanks to @damianperez) (#1015)\n- `/cleanup` command now supports dry run which simply outputs all queries that would be run. (#1015)\n### Changed\n- Small readme and code fixes / simplifications. (#1001)\n- Upgrade PHPUnit to 8.x and PHPCS to 3.5. For tests now minimum PHP version is 7.2. (#1008)\n- Updated updates log importer (requires PHP7+). (#1009)\n### Removed\n- Service message system commands, which are now handled by `GenericmessageCommand`. (#999)\n- [:exclamation:][0.61.0-bc-remove-monolog-from-core] Monolog has been removed as built-in logging engine. (#1009)\n- Assets have been moved to a dedicated repository. (#1012)\n### Fixed\n- Boolean value for Polls gets saved correctly in MySQL DB. (#996)\n- Correctly use `Request::answerInlineQuery` in `InlineQuery::answer`. (#1001)\n- PSR-12 incompatibilities in the codebase. (#1008)\n- Improved and corrected `/cleanup` command. (#1015)\n\n## [0.60.0] - 2019-08-16\n### Notes\n- [:ledger: View file changes][0.60.0]\n### Added\n- Bot API 4.4 (Animated stickers, `ChatPermissions`). (#990)\n### Changed\n- Allow passing native entity objects to requests. (#991)\n### Fixed\n- Non-existing commands now correctly execute `GenericCommand` again. (#993)\n\n## [0.59.1] - 2019-07-18\n### Notes\n- [:ledger: View file changes][0.59.1]\n- :exclamation: Deprecated logging method will be removed in the next version, update to PSR-3 now! (see #964 for more info)\n### Added\n- Issue labels set automatically via templates.\n### Changed\n- Logging only updates or only debug/errors is now possible. (#983)\n### Fixed\n- Don't output deprecation notices if no logging is enabled. (#983)\n- Respect custom HTTP Client initialisation, no matter when it is set. (#986)\n\n## [0.59.0] - 2019-07-07\n### Notes\n- [:ledger: View file changes][0.59.0]\n### Changed\n- Touched up readme including header and badges. (#981)\n- Updated changelog to be more useful for external integrations like [Tidelift] and GitHub releases. (#981)\n### Removed\n- Abstract methods from `InputMedia` interface, as method annotations didn't work for propagation. (#978)\n\n## [0.58.0] - 2019-06-26\n### Notes\n- [:ledger: View file changes][0.58.0] ∙ [:page_with_curl: DB migration script][0.58.0-sql-migration]\n- Logging now uses [PSR-3] `LoggerInterface`. Learn more about how to use it here: #964\n### Added\n- New funding and support details. (#971)\n- Custom issue templates. (#972)\n- Bot API 4.3 (Seamless Telegram Login, `LoginUrl`) (#957)\n- `reply_markup` field to `Message` entity. (#957)\n### Changed\n- Use PSR-12 for code style. (#966)\n- Some general housekeeping. (#972)\n- [:exclamation:][0.58.0-bc-return-value-of-empty-entity-properties] Return an empty array for Entity properties with no items, instead of `null`. (#969)\n- `TelegramLog` now adheres to [PSR-3] `LoggerInterface` and allows custom logger implementations. (#964)\n### Deprecated\n- Old logging that uses Monolog still works but will be removed in the near future. Use `TelegramLog::initialize($logger, $update_logger);` from now on. (#964)\n- [:exclamation:][0.58.0-bc-startcommand-is-now-a-usercommand] `StartCommand` is now a `UserCommand` (not `SystemCommand` any more). (#970)\n### Removed\n- Botan.io integration completely removed. (#968)\n### Fixed\n- `forward_date` is now correctly saved to the DB. (#967)\n- Broken `StickerSet::getStickers()` method. (#969)\n- Smaller code and docblock fixes. (#973)\n### Security\n- Security disclosure managed by [Tidelift]. (#971)\n- Don't allow a user to call system commands directly. (#970)\n\n## [0.57.0] - 2019-06-01\n### Notes\n- [:ledger: View file changes][0.57.0] ∙ [:page_with_curl: DB migration script][0.57.0-sql-migration]\n- :grey_exclamation: This is a big update and involves a bunch of MySQL database updates, so please *review the changelog carefully*.\n\n### Added\n- New logo! :tada: (#954)\n- Bot API 4.2 (Polls). (#948)\n- `getIsMember()` method to `ChatMember` entity. (#948)\n- `getForwardSenderName()` method to `Message` entity. (#948)\n- `forward_sender_name` (and forgotten `forward_signature`) DB fields. (#948)\n- Added missing API fields to Entities and DB. (#885)\n- Created database tables for `shipping_query` and `pre_checkout_query`. (#885)\n### Fixed\n- Missing DB table name specifier in `/cleanup` command. (#947)\n\n## [0.56.0] - 2019-04-15\n### Notes\n- [:ledger: View file changes][0.56.0] ∙ [:page_with_curl: DB migration script][0.56.0-sql-migration]\n- :grey_exclamation: This is a big update, so please *review the changelog carefully*!\n### Added\n- Helper for sending `InputMedia` objects using `Request::sendMediaGroup()` and `Request::editMediaMessage()` methods.\n- Allow passing absolute file path for InputFile fields, instead of `Request::encodeFile($path)`. (#934)\n### Changed\n- All Message field types dynamically search for an existing Command class that can handle them. (#940)\n- Upgrade dependencies. (#945)\n### Deprecated\n- Botan.io service has been discontinued. (#925)\n- Most built-in System Commands will be handled by GenericmessageCommand by default in a future release and will require a custom implementation. (#940)\n### Fixed\n- Constraint errors in `/cleanup` command. (#930)\n- Return correct objects for requests. (#934)\n- PHPCS: static before visibility declaration. (#945)\n\n## [0.55.1] - 2019-01-06\n### Notes\n- [:ledger: View file changes][0.55.1]\n### Added\n- Add missing `Request::editMessageMedia()` and `CallbackQuery::getChatInstance()` methods. (#916)\n### Fixed\n- Return correct message type. (#913)\n\n## [0.55.0] - 2018-12-20\n### Notes\n- [:ledger: View file changes][0.55.0] ∙ [:page_with_curl: DB migration script][0.55.0-sql-migration]\n### Added\n- Bot API 4.0 and 4.1 (Telegram Passport) (#870, #871)\n- Test PHP 7.3 with Travis. (#903)\n### Changed\n- [:exclamation:][0.55.0-bc-move-animation-out-of-games-namespace] Move Animation entity out of Games namespace.\n### Fixed\n- Added missing `video_note` to `Message` types.\n\n## [0.54.1] - 2018-10-23\n### Notes\n- [:ledger: View file changes][0.54.1]\n### Fixed\n- `sendToActiveChats` now works correctly for any valid Request action. (#898)\n\n## [0.54.0] - 2018-07-21\n### Notes\n- [:ledger: View file changes][0.54.0] ∙ [:page_with_curl: DB migration script][0.54.0-sql-migration]\n### Added\n- `ChatAction` class to simplify chat action selection. (#859)\n- Telegram Games platform! (#732)\n- Ability to set custom MySQL port. (#860)\n- New `InvalidBotTokenException` exception. (#855)\n### Changed\n- [:exclamation:][0.54.0-bc-rename-constants] Rename and ensure no redefinition of constants: `BASE_PATH` -> `TB_BASE_PATH`, `BASE_COMMANDS_PATH` -> `TB_BASE_COMMANDS_PATH`. (#813)\n- Improve readability of readme code snippets. (#861)\n### Fixed\n- Response from `getStickerSet`. (#838)\n\n## [0.53.0] - 2018-04-01\n### Notes\n- [:ledger: View file changes][0.53.0] ∙ [:page_with_curl: DB migration script][0.53.0-sql-migration]\n### Added\n- Implemented new changes for Bot API 3.6 (streamable InputMediaVideo, connected website). (#799)\n- `Telegram::getLastUpdateId()` method, returns ID of the last update that was processed. (#767)\n- `Telegram::useGetUpdatesWithoutDatabase()` method, enables `Telegram::handleGetUpdates()` to run without a database. (#767)\n### Changed\n- Updated Travis to use Trusty containers (for HHVM) and add PHP 7.2 to the tests. (#739)\n- Add debug log entry instead of throwing an exception for duplicate updates. (#765)\n- `Telegram::handleGetUpdates()` can now work without a database connection (not enabled by default). (#767)\n- Improved `/sendtochannel` and `/sendtoall` commands, using new message helpers. (#810)\n### Fixed\n- PHPCS fixes for updated CodeSniffer dependency. (#739)\n- Send messages correctly via `/sendtochannel`. (#803)\n\n## [0.52.0] - 2018-01-07\n### Notes\n- [:ledger: View file changes][0.52.0]\n### Fixed\n- Entity relations and wrong types for payments. (#731)\n- Allow empty string for `switch_inline_query` and `switch_inline_query_current_chat` (InlineKeyboardButton). (#736)\n- Fix empty date entry for User and Chat entities, using the current timestamp instead. (#738)\n\n## [0.51.0] - 2017-12-05\n### Notes\n- [:ledger: View file changes][0.51.0] ∙ [:page_with_curl: DB migration script][0.51.0-sql-migration]\n### Added\n- Implemented new changes for Bot API 3.5 (InputMedia, MediaGroup). (#718)\n\n## [0.50.0] - 2017-10-17\n### Notes\n- [:ledger: View file changes][0.50.0]\n### Added\n- Finish implementing payments, adding all missing type checks and docblock methods. (#647)\n- Implemented new changes for Bot API 3.4 (Live Locations). (#675)\n### Changed\n- [:exclamation:][0.50.0-bc-messagegetcommand-return-value] `Message::getCommand()` returns `null` if not a command, instead of `false`. (#654)\n### Fixed\n- SQL update script for version 0.44.1-0.45.0.\n- Issues found by Scrutinizer (Type hints and return values). (#654)\n- Check inline keyboard button parameter value correctly. (#672)\n\n## [0.49.0] - 2017-09-17\n### Notes\n- [:ledger: View file changes][0.49.0]\n### Added\n- Donation section and links in readme.\n- Missing payment methods in `Request` class.\n- Some helper methods for replying to commands and answering queries.\n### Changed\n- Updated and optimised all DB classes, removing a lot of bulky code.\n### Fixed\n- Ensure named SQL statement parameters are unique.\n- Channel selection when using `DB::selectChats()`.\n\n## [0.48.0] - 2017-08-26\n### Notes\n- [:ledger: View file changes][0.48.0] ∙ [:page_with_curl: DB migration script][0.48.0-sql-migration]\n### Added\n- New entities, methods, update types and inline keyboard button for Payments (Bot API 3.0).\n- Add new methods, fields and objects for working with stickers (Bot API 3.2).\n- New fields for Chat, User and Message objects (Bot API 3.3). `is_bot` added to `user` DB table.\n### Changed\n- [:exclamation:][0.48.0-bc-correct-printerror] Corrected `ServerResponse->printError` method to print by default and return by setting `$return` parameter.\n- Ensure command names are handled as lower case.\n### Fixed\n- Correctly save `reply_to_message` to DB.\n\n## [0.47.1] - 2017-08-06\n### Notes\n- [:ledger: View file changes][0.47.1]\n### Added\n- Linked version numbers in changelog for easy verification of code changes.\n### Fixed\n- Private-only commands work with edited messages now too.\n\n## [0.47.0] - 2017-08-06 [YANKED]\n### Notes\n- [:ledger: View file changes][0.47.0]\n### Changed\n- Updated readme to latest state of 0.47.0.\n### Fixed\n- `Telegram::enableAdmin()` now handles duplicate additions properly.\n- `Request::getMe()` failure doesn't break cron execution any more.\n### Security\n- [:exclamation:][0.47.0-bc-private-only-admin-commands] New command parameter `$private_only` to enforce usage in private chats only (set by default for Admin commands).\n\n## [0.46.0] - 2017-07-15\n### Notes\n- [:ledger: View file changes][0.46.0]\n### Added\n- Callbacks can be added to be executed when callback queries are called.\n- New Bot API 3.1 changes (#550).\n- `/cleanup` command for admins, that cleans out old entries from the DB.\n### Changed\n- [:exclamation:][0.46.0-bc-request-class-refactor] Big refactor of the `Request` class, removing most custom method implementations.\n\n## [0.45.0] - 2017-06-25\n### Notes\n- [:ledger: View file changes][0.45.0] ∙ [:page_with_curl: DB migration script][0.45.0-sql-migration]\n### Added\n- Documents can be sent by providing its contents via Psr7 stream (as opposed to passing a file path).\n- Allow setting a custom Guzzle HTTP Client for requests (#511, #536).\n- First implementations towards Bots API 3.0.\n### Changed\n- [:exclamation:][0.45.0-bc-chats-params-array] `Request::sendToActiveChats` and `DB::selectChats` now accept parameters as an options array and allow selecting of channels.\n### Deprecated\n- Deprecated `Message::getNewChatMember()` (Use `Message::getNewChatMembers()` instead to get an array of all newly added members).\n### Removed\n- [:exclamation:][0.45.0-bc-up-download-directory] Upload and download directories are not set any more by default and must be set manually.\n- [:exclamation:][0.45.0-bc-remove-deprecated-methods] Completely removed `Telegram::getBotName()` and `Entity::getBotName()` (Use `::getBotUsername()` instead).\n- [:exclamation:][0.45.0-bc-remove-deprecated-methods] Completely removed deprecated `Telegram::unsetWebhook()` (Use `Telegram::deleteWebhook()` instead).\n### Fixed\n- ID fields are now typed with `PARAM_STR` PDO data type, to allow huge numbers.\n- Message type data type for PDO corrected.\n- Indexed table columns now have a fitting length.\n- Take `custom_input` into account when using getUpdates method (mainly for testing).\n- Request limiter has been fixed to correctly support channels.\n\n## [0.44.1] - 2017-04-25\n### Notes\n- [:ledger: View file changes][0.44.1]\n### Fixed\n- Erroneous exception when using webhook without a database connection.\n\n## [0.44.0] - 2017-04-25\n### Notes\n- [:ledger: View file changes][0.44.0]\n### Added\n- Proper standalone `scrutinizer.yml` config.\n- Human-readable `last_error_date_string` for debug command.\n### Changed\n- Bot username no longer required for object instantiation.\n### Removed\n- All examples have been moved to a [dedicated repository][example-bot].\n### Fixed\n- [:exclamation:][0.44.0-bc-update-content-type] Format of Update content type using `$update->getUpdateContent()`.\n\n## [0.43.0] - 2017-04-17\n### Notes\n- [:ledger: View file changes][0.43.0]\n### Added\n- Travis CI webhook for Support Bot.\n- Interval for request limiter.\n- `isRunCommands()` method to check if called via `runCommands()`.\n- Ensure coding standards for `tests` folder with `phpcs`.\n### Changed\n- Move default commands to `examples` folder.\n- All links point to new organisation repo.\n- Add PHP 7.1 support and update dependencies.\n### Fixed\n- Prevent handling the same Telegram updates multiple times, throw exception instead.\n\n## [0.42.0] - 2017-04-09\n### Notes\n- [:ledger: View file changes][0.42.0]\n### Added\n- Added `getBotId()` to directly access bot ID.\n### Changed\n- Rename `bot_name` to `bot_username` everywhere.\n### Deprecated\n- Deprecated `Telegram::getBotName()` (Use `Telegram::getBotUsername()` instead).\n### Fixed\n- Tests are more reliable now, using a properly formatted API key.\n\n## [0.41.0] - 2017-03-25\n### Notes\n- [:ledger: View file changes][0.41.0]\n### Added\n- `$show_in_help` attribute for commands, to set if it should be displayed in the `/help` command.\n- Link to new Telegram group: `https://telegram.me/PHP_Telegram_Bot_Support`\n- Introduce change log.\n\n## [0.40.1] - 2017-03-07\n### Notes\n- [:ledger: View file changes][0.40.1]\n### Fixed\n- Infinite message loop, caused by incorrect Entity variable.\n\n## [0.40.0] - 2017-02-20\n### Notes\n- [:ledger: View file changes][0.40.0]\n### Added\n- Request limiter for incoming requests.\n### Fixed\n- Faulty formatting in logger.\n\n## [0.39.0] - 2017-01-20\n### Notes\n- [:ledger: View file changes][0.39.0]\n### Added\n- Newest bot API changes.\n- Allow direct access to PDO object (`DB::getPdo()`).\n- Simple `/debug` command that displays various system information to help debugging.\n- Crontab-friendly script.\n### Changed\n- Botan integration improvements.\n- Make logger more flexible.\n### Fixed\n- Various bugs and recommendations by Scrutinizer.\n\n## [0.38.1] - 2016-12-25\n### Notes\n- [:ledger: View file changes][0.38.1]\n### Fixed\n- Usage of self-signed certificates in conjunction with the new `allowed_updates` webhook parameter.\n\n## [0.38.0] - 2016-12-25\n### Notes\n- [:ledger: View file changes][0.38.0]\n### Added\n- New `switch_inline_query_current_chat` option for inline keyboard.\n- Support for `channel_post` and `edited_channel_post`.\n- New alias `deleteWebhook` (for `unsetWebhook`).\n### Changed\n- Update WebhookInfo entity and `setWebhook` to allow passing of new arguments.\n\n## [0.37.1] - 2016-12-24\n### Notes\n- [:ledger: View file changes][0.37.1]\n### Fixed\n- Keyboards that are built without using the KeyboardButton objects.\n- Commands that are called via `/command@botname` by correctly passing them the bot name.\n\n## [0.37.0] - 2016-12-13\n### Notes\n- [:ledger: View file changes][0.37.0]\n### Changed\n- Logging improvements to Botan integration.\n### Deprecated\n- Move `hideKeyboard` to `removeKeyboard`.\n\n[0.83.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.82.0-0.83.0.sql\n[0.83.0-bc-minimum-php-81]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#minimum-php-81\n[0.83.0-bc-user-to-users]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#user-to-users\n[0.82.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.81.0-0.82.0.sql\n[0.81.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.80.0-0.81.0.sql\n[0.80.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.79.0-0.80.0.sql\n[0.80.0-bc-commands-with-underscores]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#commands-with-underscores\n[0.78.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.77.1-0.78.0.sql\n[0.77.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.76.1-0.77.0.sql\n[0.75.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.74.0-0.75.0.sql\n[0.75.0-bc-removed-chatactions]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#removed-deprecated-chatactions\n[0.74.0-bc-chatmember-subentities]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#chatmember-subentities\n[0.73.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.72.0-0.73.0.sql\n[0.72.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.71.0-0.72.0.sql\n[0.70.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.64.0-0.70.0.sql\n[0.70.0-bc-minimum-php-73]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#minimum-php-73\n[0.63.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.62.0-0.63.0.sql\n[0.63.0-bc-static-method-entityescapemarkdown]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#static-method-entityescapemarkdown\n[0.62.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.61.1-0.62.0.sql\n[0.61.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.60.0-0.61.0.sql\n[0.61.0-bc-remove-monolog-from-core]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#remove-monolog-from-core\n[0.58.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.57.0-0.58.0.sql\n[0.58.0-bc-return-value-of-empty-entity-properties]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#return-value-of-empty-entity-properties\n[0.58.0-bc-startcommand-is-now-a-usercommand]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#startcommand-is-now-a-usercommand\n[0.57.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.56.0-0.57.0.sql\n[0.55.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.54.1-0.55.0.sql\n[0.55.0-bc-move-animation-out-of-games-namespace]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#move-animation-out-of-games-namespace\n[0.54.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.53.0-0.54.0.sql\n[0.54.0-bc-rename-constants]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#rename-constants\n[0.53.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.52.0-0.53.0.sql\n[0.51.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.50.0-0.51.0.sql\n[0.50.0-bc-messagegetcommand-return-value]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#messagegetcommand-return-value\n[0.48.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/master/utils/db-schema-update/0.47.1-0.48.0.sql\n[0.48.0-bc-correct-printerror]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#correct-printerror\n[0.47.0-bc-private-only-admin-commands]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#private-only-admin-commands\n[0.46.0-bc-request-class-refactor]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#request-class-refactor\n[0.46.0-sql-migration]: https://github.com/php-telegram-bot/core/tree/0.45.0/utils/db-schema-update/0.44.1-0.45.0.sql\n[0.45.0-bc-remove-deprecated-methods]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#remove-deprecated-methods\n[0.45.0-bc-chats-params-array]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#chats-params-array\n[0.45.0-bc-up-download-directory]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#up-download-directory\n[0.44.0-bc-update-content-type]: https://github.com/php-telegram-bot/core/wiki/Breaking-backwards-compatibility#update-getupdatecontent\n[example-bot]: https://github.com/php-telegram-bot/example-bot\n[PSR-3]: https://www.php-fig.org/psr/psr-3\n[Tidelift]: https://tidelift.com/subscription/pkg/packagist-longman-telegram-bot?utm_source=packagist-longman-telegram-bot&utm_medium=referral&utm_campaign=changelog\n\n[Unreleased]: https://github.com/php-telegram-bot/core/compare/master...develop\n[0.83.0]: https://github.com/php-telegram-bot/core/compare/0.82.0...0.83.0\n[0.82.0]: https://github.com/php-telegram-bot/core/compare/0.81.0...0.82.0\n[0.81.0]: https://github.com/php-telegram-bot/core/compare/0.80.0...0.81.0\n[0.80.0]: https://github.com/php-telegram-bot/core/compare/0.79.0...0.80.0\n[0.79.0]: https://github.com/php-telegram-bot/core/compare/0.78.0...0.79.0\n[0.78.0]: https://github.com/php-telegram-bot/core/compare/0.77.1...0.78.0\n[0.77.1]: https://github.com/php-telegram-bot/core/compare/0.77.0...0.77.1\n[0.77.0]: https://github.com/php-telegram-bot/core/compare/0.76.1...0.77.0\n[0.76.1]: https://github.com/php-telegram-bot/core/compare/0.76.0...0.76.1\n[0.76.0]: https://github.com/php-telegram-bot/core/compare/0.75.0...0.76.0\n[0.75.0]: https://github.com/php-telegram-bot/core/compare/0.74.0...0.75.0\n[0.74.0]: https://github.com/php-telegram-bot/core/compare/0.73.1...0.74.0\n[0.73.1]: https://github.com/php-telegram-bot/core/compare/0.73.0...0.73.1\n[0.73.0]: https://github.com/php-telegram-bot/core/compare/0.72.0...0.73.0\n[0.72.0]: https://github.com/php-telegram-bot/core/compare/0.71.0...0.72.0\n[0.71.0]: https://github.com/php-telegram-bot/core/compare/0.70.1...0.71.0\n[0.70.1]: https://github.com/php-telegram-bot/core/compare/0.70.0...0.70.1\n[0.70.0]: https://github.com/php-telegram-bot/core/compare/0.64.0...0.70.0\n[0.64.0]: https://github.com/php-telegram-bot/core/compare/0.63.1...0.64.0\n[0.63.1]: https://github.com/php-telegram-bot/core/compare/0.63.0...0.63.1\n[0.63.0]: https://github.com/php-telegram-bot/core/compare/0.62.0...0.63.0\n[0.62.0]: https://github.com/php-telegram-bot/core/compare/0.61.1...0.62.0\n[0.61.1]: https://github.com/php-telegram-bot/core/compare/0.61.0...0.61.1\n[0.61.0]: https://github.com/php-telegram-bot/core/compare/0.60.0...0.61.0\n[0.60.0]: https://github.com/php-telegram-bot/core/compare/0.59.1...0.60.0\n[0.59.1]: https://github.com/php-telegram-bot/core/compare/0.59.0...0.59.1\n[0.59.0]: https://github.com/php-telegram-bot/core/compare/0.58.0...0.59.0\n[0.58.0]: https://github.com/php-telegram-bot/core/compare/0.57.0...0.58.0\n[0.57.0]: https://github.com/php-telegram-bot/core/compare/0.56.0...0.57.0\n[0.56.0]: https://github.com/php-telegram-bot/core/compare/0.55.1...0.56.0\n[0.55.1]: https://github.com/php-telegram-bot/core/compare/0.55.0...0.55.1\n[0.55.0]: https://github.com/php-telegram-bot/core/compare/0.54.1...0.55.0\n[0.54.1]: https://github.com/php-telegram-bot/core/compare/0.54.0...0.54.1\n[0.54.0]: https://github.com/php-telegram-bot/core/compare/0.53.0...0.54.0\n[0.53.0]: https://github.com/php-telegram-bot/core/compare/0.52.0...0.53.0\n[0.52.0]: https://github.com/php-telegram-bot/core/compare/0.51.0...0.52.0\n[0.51.0]: https://github.com/php-telegram-bot/core/compare/0.50.0...0.51.0\n[0.50.0]: https://github.com/php-telegram-bot/core/compare/0.49.0...0.50.0\n[0.49.0]: https://github.com/php-telegram-bot/core/compare/0.48.0...0.49.0\n[0.48.0]: https://github.com/php-telegram-bot/core/compare/0.47.1...0.48.0\n[0.47.1]: https://github.com/php-telegram-bot/core/compare/0.47.0...0.47.1\n[0.47.0]: https://github.com/php-telegram-bot/core/compare/0.46.0...0.47.0\n[0.46.0]: https://github.com/php-telegram-bot/core/compare/0.45.0...0.46.0\n[0.45.0]: https://github.com/php-telegram-bot/core/compare/0.44.1...0.45.0\n[0.44.1]: https://github.com/php-telegram-bot/core/compare/0.44.0...0.44.1\n[0.44.0]: https://github.com/php-telegram-bot/core/compare/0.43.0...0.44.0\n[0.43.0]: https://github.com/php-telegram-bot/core/compare/0.42.0...0.43.0\n[0.42.0]: https://github.com/php-telegram-bot/core/compare/0.41.0...0.42.0\n[0.41.0]: https://github.com/php-telegram-bot/core/compare/0.40.1...0.41.0\n[0.40.1]: https://github.com/php-telegram-bot/core/compare/0.40.0...0.40.1\n[0.40.0]: https://github.com/php-telegram-bot/core/compare/0.39.0...0.40.0\n[0.39.0]: https://github.com/php-telegram-bot/core/compare/0.38.1...0.39.0\n[0.38.1]: https://github.com/php-telegram-bot/core/compare/0.38.0...0.38.1\n[0.38.0]: https://github.com/php-telegram-bot/core/compare/0.37.1...0.38.0\n[0.37.1]: https://github.com/php-telegram-bot/core/compare/0.37.0...0.37.1\n[0.37.0]: https://github.com/php-telegram-bot/core/compare/0.36...0.37.0\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.5107421875,
          "content": "# Contributing\n\nThe easiest way to contribute is to work on a checkout of your own fork.\nWhen working on the `core` repository, it makes sense to rename your fork to `php-telegram-bot`.\n\nBefore you contribute code, please make sure it conforms to the PSR-12 coding standard and that the unit tests still pass.\nYou can run the following commands to check if everything is ready to submit:\n\n```bash\ncd php-telegram-bot\ncomposer install\ncomposer check-code\n```\n\nWhich should give you no output, indicating that there are no coding standard errors.\nAnd then (remember to set up your test database!):\n\n```bash\ncomposer test\n```\n\nWhich should give you no failures or errors. You can ignore any skipped tests as these are for external tools.\n\n## Pushing\n\nDevelopment is based on the git flow branching model (see http://nvie.com/posts/a-successful-git-branching-model/)\nIf you fix a bug please push in hotfix branch.\nIf you develop a new feature please create a new branch.\n\n## Version\n\nVersion number: 0.#version.#hotfix\n\n## Further code convention adopted\n\n- Each method and class is documented with a docblock\n\nExample for a function or method:\n```php\n/**\n * Get formatted date\n *\n * @param string $location\n *\n * @return string\n */\n```\n\n- Each file is provided with the following header:\n```php\n/**\n * This file is part of the TelegramBot package.\n *\n * (c) Avtandil Kikabidze aka LONGMAN <akalongman@gmail.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n```\n"
        },
        {
          "name": "CREDITS",
          "type": "blob",
          "size": 0.6748046875,
          "content": "    This is at least a partial credits-file of people that have\n    contributed to the current project. It is sorted by name and\n    formatted to allow easy grepping and beautification by\n    scripts. The fields are: name (N), email (E), web-address\n    (W) and description (D).\n    Thanks,\n\n            Avtandil Kikabidze\n----------\n\nN: Avtandil Kikabidze aka LONGMAN\nE: akalongman@gmail.com\nW: http://longman.me\nD: Project owner, Maintainer\n\nN: Marco Boretto\nE: marco.bore@gmail.com\nD: Maintainer and Collaborator\n\nN: Armando Lüscher\nE: armando@noplanman.ch\nW: http://noplanman.ch\nD: Maintainer and Collaborator\n\nN: Jack'lul (alias)\nE: jacklulcat@gmail.com\nD: Maintainer and Collaborator\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1474609375,
          "content": "The [MIT License](http://opensource.org/licenses/mit-license.php)\n\nCopyright (c) 2015 [Avtandil Kikabidze aka LONGMAN](https://github.com/akalongman)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 26.7861328125,
          "content": "<h1 align=\"center\">\n    PHP Telegram Bot<br>\n\t<br>\n    <img src=\"https://raw.githubusercontent.com/php-telegram-bot/assets/master/logo/512px/logo_plain.png\" title=\"PHP Telegram Bot\" alt=\"PHP Telegram Bot logo\">\n\t<br>\n</h1>\n\nA Telegram Bot based on the official [Telegram Bot API]\n\n[![API Version](https://img.shields.io/badge/Bot%20API-7.1%20%28February%202024%29-32a2da.svg)](https://core.telegram.org/bots/api-changelog#february-16-2024)\n[![Join the bot support group on Telegram](https://img.shields.io/badge/telegram-@PHP__Telegram__Bot__Support-64659d.svg)](https://telegram.me/PHP_Telegram_Bot_Support)\n[![Donate](https://img.shields.io/badge/%F0%9F%92%99-Donate%20%2F%20Support%20Us-blue.svg)](#donate)\n\n[![Tests](https://github.com/php-telegram-bot/core/actions/workflows/tests.yaml/badge.svg)](https://github.com/php-telegram-bot/core/actions/workflows/tests.yaml)\n[![Code Coverage](https://img.shields.io/scrutinizer/coverage/g/php-telegram-bot/core/master.svg?style=flat)](https://scrutinizer-ci.com/g/php-telegram-bot/core/?b=master)\n[![Code Quality](https://img.shields.io/scrutinizer/g/php-telegram-bot/core/master.svg?style=flat)](https://scrutinizer-ci.com/g/php-telegram-bot/core/?b=master)\n[![Latest Stable Version](https://img.shields.io/packagist/v/longman/telegram-bot.svg)](https://packagist.org/packages/longman/telegram-bot)\n[![Dependencies](https://tidelift.com/badges/github/php-telegram-bot/core?style=flat)][Tidelift]\n[![Total Downloads](https://img.shields.io/packagist/dt/longman/telegram-bot.svg)](https://packagist.org/packages/longman/telegram-bot)\n[![Downloads Month](https://img.shields.io/packagist/dm/longman/telegram-bot.svg)](https://packagist.org/packages/longman/telegram-bot)\n[![Minimum PHP Version](http://img.shields.io/badge/php-%3E%3D8.1-8892BF.svg)](https://php.net/)\n[![License](https://img.shields.io/packagist/l/longman/telegram-bot.svg)](https://github.com/php-telegram-bot/core/LICENSE)\n\n## Table of Contents\n- [Introduction](#introduction)\n- [Instructions](#instructions)\n    - [Create your first bot](#create-your-first-bot)\n    - [Require this package with Composer](#require-this-package-with-composer)\n    - [Choose how to retrieve Telegram updates](#choose-how-to-retrieve-telegram-updates)\n- [Using a custom Bot API server](#using-a-custom-bot-api-server)\n- [Webhook installation](#webhook-installation)\n    - [Self Signed Certificate](#self-signed-certificate)\n    - [Unset Webhook](#unset-webhook)\n- [getUpdates installation](#getupdates-installation)\n    - [getUpdates without database](#getupdates-without-database)\n- [Filter Update](#filter-update)\n- [Support](#support)\n    - [Types](#types)\n    - [Inline Query](#inline-query)\n    - [Methods](#methods)\n    - [Send Message](#send-message)\n    - [Send Photo](#send-photo)\n    - [Send Chat Action](#send-chat-action)\n    - [getUserProfilePhoto](#getuserprofilephoto)\n    - [getFile and downloadFile](#getfile-and-downloadfile)\n    - [Send message to all active chats](#send-message-to-all-active-chats)\n- [Utils](#utils)\n    - [MySQL storage (Recommended)](#mysql-storage-recommended)\n        - [External Database connection](#external-database-connection)\n    - [Channels Support](#channels-support)\n- [Commands](#commands)\n    - [Predefined Commands](#predefined-commands)\n    - [Custom Commands](#custom-commands)\n    - [Commands Configuration](#commands-configuration)\n    - [Admin Commands](#admin-commands)\n        - [Set Admins](#set-admins)\n        - [Channel Administration](#channel-administration)\n- [Upload and Download directory path](#upload-and-download-directory-path)\n- [Logging](doc/01-utils.md)\n- [Documentation](#documentation)\n- [Assets](#assets)\n- [Example bot](#example-bot)\n- [Projects with this library](#projects-with-this-library)\n- [Troubleshooting](#troubleshooting)\n- [Contributing](#contributing)\n- [Security](#security)\n- [Donate](#donate)\n- [For enterprise](#for-enterprise)\n- [License](#license)\n- [Credits](#credits)\n\n## Introduction\n\nThis is a pure PHP Telegram Bot, fully extensible via plugins.\n\nTelegram announced official support for a [Bot API](https://telegram.org/blog/bot-revolution), allowing integrators of all sorts to bring automated interactions to the mobile platform.\nThis Bot aims to provide a platform where one can simply write a bot and have interactions in a matter of minutes.\n\nThe Bot can:\n- Retrieve updates with [webhook](#webhook-installation) and [getUpdates](#getupdates-installation) methods.\n- Supports all types and methods according to Telegram Bot API 7.1 (February 2024).\n- Supports supergroups.\n- Handle commands in chat with other bots.\n- Manage Channel from the bot admin interface.\n- Full support for **inline bots**.\n- Inline keyboard.\n- Messages, InlineQuery and ChosenInlineQuery are stored in the Database.\n- Conversation feature.\n\n---\n\nThis code is available on [GitHub](https://github.com/php-telegram-bot/core). Pull requests are welcome.\n\n## Instructions\n\n### Create your first bot\n\n1. Message [`@BotFather`](https://telegram.me/BotFather) with the following text: `/newbot`\n\n   If you don't know how to message by username, click the search field on your Telegram app and type `@BotFather`, where you should be able to initiate a conversation. Be careful not to send it to the wrong contact, because some users have similar usernames to `BotFather`.\n\n   ![BotFather initial conversation](https://user-images.githubusercontent.com/9423417/60736229-bc2aeb80-9f45-11e9-8d35-5b53145347bc.png)\n\n2. `@BotFather` replies with:\n\n    ```\n    Alright, a new bot. How are we going to call it? Please choose a name for your bot.\n    ```\n\n3. Type whatever name you want for your bot.\n\n4. `@BotFather` replies with:\n\n    ```\n    Good. Now let's choose a username for your bot. It must end in `bot`. Like this, for example: TetrisBot or tetris_bot.\n    ```\n\n5. Type whatever username you want for your bot, minimum 5 characters, and must end with `bot`. For example: `telesample_bot`\n\n6. `@BotFather` replies with:\n\n    ```\n    Done! Congratulations on your new bot. You will find it at\n    telegram.me/telesample_bot. You can now add a description, about\n    section and profile picture for your bot, see /help for a list of\n    commands.\n\n    Use this token to access the HTTP API:\n    123456789:AAG90e14-0f8-40183D-18491dDE\n\n    For a description of the Bot API, see this page:\n    https://core.telegram.org/bots/api\n    ```\n\n7. Note down the 'token' mentioned above.\n\n*Optionally set the bot privacy:*\n\n1. Send `/setprivacy` to `@BotFather`.\n\n   ![BotFather later conversation](https://user-images.githubusercontent.com/9423417/60736340-26439080-9f46-11e9-970f-8f33bbe39c5f.png)\n\n2. `@BotFather` replies with:\n\n    ```\n    Choose a bot to change group messages settings.\n    ```\n\n3. Type (or select) `@telesample_bot` (change to the username you set at step 5\nabove, but start it with `@`)\n\n4. `@BotFather` replies with:\n\n    ```\n    'Enable' - your bot will only receive messages that either start with the '/' symbol or mention the bot by username.\n    'Disable' - your bot will receive all messages that people send to groups.\n    Current status is: ENABLED\n    ```\n\n5. Type (or select) `Disable` to let your bot receive all messages sent to a group.\n\n6. `@BotFather` replies with:\n\n    ```\n    Success! The new status is: DISABLED. /help\n    ```\n\n### Require this package with Composer\n\nInstall this package through [Composer].\nEdit your project's `composer.json` file to require `longman/telegram-bot`.\n\nCreate *composer.json* file\n```json\n{\n    \"name\": \"yourproject/yourproject\",\n    \"type\": \"project\",\n    \"require\": {\n        \"php\": \"^8.1\",\n        \"longman/telegram-bot\": \"*\"\n    }\n}\n```\nand run `composer update`\n\n**or**\n\nrun this command in your command line:\n\n```bash\ncomposer require longman/telegram-bot\n```\n\n### Choose how to retrieve Telegram updates\n\nThe bot can handle updates with [**Webhook**](#webhook-installation) or [**getUpdates**](#getupdates-installation) method:\n\n|      | Webhook | getUpdates |\n| ---- | :----: | :----: |\n| Description | Telegram sends the updates directly to your host | You have to fetch Telegram updates manually |\n| Host with https | Required | Not required |\n| MySQL | Not required | ([Not](#getupdates-without-database)) Required  |\n\n## Using a custom Bot API server\n\n**For advanced users only!**\n\nAs from Telegram Bot API 5.0, users can [run their own Bot API server] to handle updates.\nThis means, that the PHP Telegram Bot needs to be configured to serve that custom URI.\nAdditionally, you can define the URI where uploaded files to the bot can be downloaded (note the `{API_KEY}` placeholder).\n\n```php\nLongman\\TelegramBot\\Request::setCustomBotApiUri(\n    $api_base_uri          = 'https://your-bot-api-server', // Default: https://api.telegram.org\n    $api_base_download_uri = '/path/to/files/{API_KEY}'     // Default: /file/bot{API_KEY}\n);\n```\n\n**Note:** If you are running your bot in `--local` mode, you won't need the `Request::downloadFile()` method, since you can then access your files directly from the absolute path returned by `Request::getFile()`.\n\n## Webhook installation\n\nNote: For a more detailed explanation, head over to the [example-bot repository] and follow the instructions there.\n\nIn order to set a [Webhook][api-setwebhook] you need a server with HTTPS and composer support.\n(For a [self signed certificate](#self-signed-certificate) you need to add some extra code)\n\nCreate *[set.php]* with the following contents:\n```php\n<?php\n// Load composer\nrequire __DIR__ . '/vendor/autoload.php';\n\n$bot_api_key  = 'your:bot_api_key';\n$bot_username = 'username_bot';\n$hook_url     = 'https://your-domain/path/to/hook.php';\n\ntry {\n    // Create Telegram API object\n    $telegram = new Longman\\TelegramBot\\Telegram($bot_api_key, $bot_username);\n\n    // Set webhook\n    $result = $telegram->setWebhook($hook_url);\n    if ($result->isOk()) {\n        echo $result->getDescription();\n    }\n} catch (Longman\\TelegramBot\\Exception\\TelegramException $e) {\n    // log telegram errors\n    // echo $e->getMessage();\n}\n```\n\nOpen your *set.php* via the browser to register the webhook with Telegram.\nYou should see `Webhook was set`.\n\nNow, create *[hook.php]* with the following contents:\n```php\n<?php\n// Load composer\nrequire __DIR__ . '/vendor/autoload.php';\n\n$bot_api_key  = 'your:bot_api_key';\n$bot_username = 'username_bot';\n\ntry {\n    // Create Telegram API object\n    $telegram = new Longman\\TelegramBot\\Telegram($bot_api_key, $bot_username);\n\n    // Handle telegram webhook request\n    $telegram->handle();\n} catch (Longman\\TelegramBot\\Exception\\TelegramException $e) {\n    // Silence is golden!\n    // log telegram errors\n    // echo $e->getMessage();\n}\n```\n\n### Self Signed Certificate\n\nUpload the certificate and add the path as a parameter in *set.php*:\n```php\n$result = $telegram->setWebhook($hook_url, ['certificate' => '/path/to/certificate']);\n```\n\n### Unset Webhook\n\nEdit *[unset.php]* with your bot credentials and execute it.\n\n## getUpdates installation\n\nFor best performance, the MySQL database should be enabled for the `getUpdates` method!\n\nCreate *[getUpdatesCLI.php]* with the following contents:\n```php\n#!/usr/bin/env php\n<?php\nrequire __DIR__ . '/vendor/autoload.php';\n\n$bot_api_key  = 'your:bot_api_key';\n$bot_username = 'username_bot';\n\n$mysql_credentials = [\n   'host'     => 'localhost',\n   'port'     => 3306, // optional\n   'user'     => 'dbuser',\n   'password' => 'dbpass',\n   'database' => 'dbname',\n];\n\ntry {\n    // Create Telegram API object\n    $telegram = new Longman\\TelegramBot\\Telegram($bot_api_key, $bot_username);\n\n    // Enable MySQL\n    $telegram->enableMySql($mysql_credentials);\n\n    // Handle telegram getUpdates request\n    $telegram->handleGetUpdates();\n} catch (Longman\\TelegramBot\\Exception\\TelegramException $e) {\n    // log telegram errors\n    // echo $e->getMessage();\n}\n```\n\nNext, give the file permission to execute:\n```bash\n$ chmod +x getUpdatesCLI.php\n```\n\nLastly, run it!\n```bash\n$ ./getUpdatesCLI.php\n```\n\n### getUpdates without database\n\nIf you choose to / or are obliged to use the `getUpdates` method without a database, you can replace the `$telegram->enableMySql(...);` line above with:\n```php\n$telegram->useGetUpdatesWithoutDatabase();\n```\n\n## Filter Update\n\n:exclamation: Note that by default, Telegram will send any new update types that may be added in the future. This may cause commands that don't take this into account to break!\n\nIt is suggested that you specifically define which update types your bot can receive and handle correctly.\n\nYou can define which update types are sent to your bot by defining them when setting the [webhook](#webhook-installation) or passing an array of allowed types when using [getUpdates](#getupdates-installation).\n\n```php\nuse Longman\\TelegramBot\\Entities\\Update;\n\n// For all update types currently implemented in this library:\n// $allowed_updates = Update::getUpdateTypes();\n\n// Define the list of allowed Update types manually:\n$allowed_updates = [\n    Update::TYPE_MESSAGE,\n    Update::TYPE_CHANNEL_POST,\n    // etc.\n];\n\n// When setting the webhook.\n$telegram->setWebhook($hook_url, ['allowed_updates' => $allowed_updates]);\n\n// When handling the getUpdates method.\n$telegram->handleGetUpdates(['allowed_updates' => $allowed_updates]);\n```\n\nAlternatively, Update processing can be allowed or denied by defining a custom update filter.\n\nLet's say we only want to allow messages from a user with ID `428`, we can do the following before handling the request:\n\n```php\n$telegram->setUpdateFilter(function (Update $update, Telegram $telegram, &$reason = 'Update denied by update_filter') {\n    $user_id = $update->getMessage()->getFrom()->getId();\n    if ($user_id === 428) {\n        return true;\n    }\n\n    $reason = \"Invalid user with ID {$user_id}\";\n    return false;\n});\n```\n\nThe reason for denying an update can be defined with the `$reason` parameter. This text gets written to the debug log.\n\n## Support\n\n### Types\n\nAll types are implemented according to Telegram API 7.1 (February 2024).\n\n### Inline Query\n\nFull support for inline query according to Telegram API 7.1 (February 2024).\n\n### Methods\n\nAll methods are implemented according to Telegram API 7.1 (February 2024).\n\n#### Send Message\n\nMessages longer than 4096 characters are split up into multiple messages.\n\n```php\n$result = Request::sendMessage([\n    'chat_id' => $chat_id,\n    'text'    => 'Your utf8 text 😜 ...',\n]);\n```\n\n#### Send Photo\n\nTo send a local photo, add it properly to the `$data` parameter using the file path:\n\n```php\n$result = Request::sendPhoto([\n    'chat_id' => $chat_id,\n    'photo'   => Request::encodeFile('/path/to/pic.jpg'),\n]);\n```\n\nIf you know the `file_id` of a previously uploaded file, just use it directly in the data array:\n\n```php\n$result = Request::sendPhoto([\n    'chat_id' => $chat_id,\n    'photo'   => 'AAQCCBNtIhAoAAss4tLEZ3x6HzqVAAqC',\n]);\n```\n\nTo send a remote photo, use the direct URL instead:\n\n```php\n$result = Request::sendPhoto([\n    'chat_id' => $chat_id,\n    'photo'   => 'https://example.com/path/to/pic.jpg',\n]);\n```\n\n*sendAudio*, *sendDocument*, *sendAnimation*, *sendSticker*, *sendVideo*, *sendVoice* and *sendVideoNote* all work in the same way, just check the [API documentation](https://core.telegram.org/bots/api#sendphoto) for the exact usage.\nSee the *[ImageCommand.php]* for a full example.\n\n#### Send Chat Action\n\n```php\nRequest::sendChatAction([\n    'chat_id' => $chat_id,\n    'action'  => Longman\\TelegramBot\\ChatAction::TYPING,\n]);\n```\n\n#### getUserProfilePhoto\n\nRetrieve the user photo. (see *[WhoamiCommand.php]* for a full example)\n\n#### getFile and downloadFile\n\nGet the file path and download it. (see *[WhoamiCommand.php]* for a full example)\n\n#### Send message to all active chats\n\nTo do this you have to enable the MySQL connection.\nHere's an example of use (check [`DB::selectChats()`][DB::selectChats] for parameter usage):\n\n```php\n$results = Request::sendToActiveChats(\n    'sendMessage', // Callback function to execute (see Request.php methods)\n    ['text' => 'Hey! Check out the new features!!'], // Param to evaluate the request\n    [\n        'groups'      => true,\n        'supergroups' => true,\n        'channels'    => false,\n        'users'       => true,\n    ]\n);\n```\n\nYou can also broadcast a message to users, from the private chat with your bot. Take a look at the [admin commands](#admin-commands) below.\n\n## Utils\n\n### MySQL storage (Recommended)\n\nIf you want to save messages/users/chats for further usage in commands, create a new database (`utf8mb4_unicode_520_ci`), import *[structure.sql]* and enable MySQL support BEFORE `handle()` method:\n\n```php\n$mysql_credentials = [\n   'host'     => 'localhost',\n   'port'     => 3306, // optional\n   'user'     => 'dbuser',\n   'password' => 'dbpass',\n   'database' => 'dbname',\n];\n\n$telegram->enableMySql($mysql_credentials);\n```\n\nYou can set a custom prefix to all the tables while you are enabling MySQL:\n\n```php\n$telegram->enableMySql($mysql_credentials, $bot_username . '_');\n```\n\nYou can also store inline query and chosen inline query data in the database.\n\n#### External Database connection\n\nIt is possible to provide the library with an external MySQL PDO connection.\nHere's how to configure it:\n\n```php\n$telegram->enableExternalMySql($external_pdo_connection);\n//$telegram->enableExternalMySql($external_pdo_connection, $table_prefix)\n```\n### Channels Support\n\nAll methods implemented can be used to manage channels.\nWith [admin commands](#admin-commands) you can manage your channels directly with your bot private chat.\n\n## Commands\n\n### Predefined Commands\n\nThe bot is able to recognise commands in a chat with multiple bots (/command@mybot).\n\nIt can also execute commands that get triggered by events, so-called Service Messages.\n\n### Custom Commands\n\nMaybe you would like to develop your own commands.\nThere is a guide to help you [create your own commands][wiki-create-your-own-commands].\n\nAlso, be sure to have a look at the [example commands][ExampleCommands-folder] to learn more about custom commands and how they work.\n\nYou can add your custom commands in different ways:\n\n```php\n// Add a folder that contains command files\n$telegram->addCommandsPath('/path/to/command/files');\n//$telegram->addCommandsPaths(['/path/to/command/files', '/another/path']);\n\n// Add a command directly using the class name\n$telegram->addCommandClass(MyCommand::class);\n//$telegram->addCommandClasses([MyCommand::class, MyOtherCommand::class]);\n```\n\n### Commands Configuration\n\nWith this method you can set some command specific parameters, for example:\n\n```php\n// Google geocode/timezone API key for /date command\n$telegram->setCommandConfig('date', [\n    'google_api_key' => 'your_google_api_key_here',\n]);\n\n// OpenWeatherMap API key for /weather command\n$telegram->setCommandConfig('weather', [\n    'owm_api_key' => 'your_owm_api_key_here',\n]);\n```\n\n### Admin Commands\n\nEnabling this feature, the bot admin can perform some super user commands like:\n- List all the chats started with the bot */chats*\n- Clean up old database entries */cleanup*\n- Show debug information about the bot */debug*\n- Send message to all chats */sendtoall*\n- Post any content to your channels */sendtochannel*\n- Inspect a user or a chat with */whois*\n\nTake a look at all default admin commands stored in the *[src/Commands/AdminCommands/][AdminCommands-folder]* folder.\n\n#### Set Admins\n\nYou can specify one or more admins with this option:\n\n```php\n// Single admin\n$telegram->enableAdmin(your_telegram_user_id);\n\n// Multiple admins\n$telegram->enableAdmins([\n    your_telegram_user_id,\n    other_telegram_user_id,\n]);\n```\nTelegram user id can be retrieved with the *[/whoami][WhoamiCommand.php]* command.\n\n#### Channel Administration\n\nTo enable this feature follow these steps:\n- Add your bot as channel administrator, this can be done with any Telegram client.\n- Enable admin interface for your user as explained in the admin section above.\n- Enter your channel name as a parameter for the *[/sendtochannel][SendtochannelCommand.php]* command:\n```php\n$telegram->setCommandConfig('sendtochannel', [\n    'your_channel' => [\n        '@type_here_your_channel',\n    ]\n]);\n```\n- If you want to manage more channels:\n```php\n$telegram->setCommandConfig('sendtochannel', [\n    'your_channel' => [\n        '@type_here_your_channel',\n        '@type_here_another_channel',\n        '@and_so_on',\n    ]\n]);\n```\n- Enjoy!\n\n## Upload and Download directory path\n\nTo use the Upload and Download functionality, you need to set the paths with:\n```php\n$telegram->setDownloadPath('/your/path/Download');\n$telegram->setUploadPath('/your/path/Upload');\n```\n\n## Documentation\n\nTake a look at the repo [Wiki] for further information and tutorials!\nFeel free to improve!\n\n## Assets\n\nAll project assets can be found in the [assets](https://github.com/php-telegram-bot/assets) repository.\n\n## Example bot\n\nWe're busy working on a full A-Z example bot, to help get you started with this library and to show you how to use all its features.\nYou can check the progress of the [example-bot repository]).\n\n## Projects with this library\n\nHere's a list of projects that feats this library, feel free to add yours!\n- [Inline Games](https://github.com/jacklul/inlinegamesbot) ([@inlinegamesbot](https://telegram.me/inlinegamesbot))\n- [Super-Dice-Roll](https://github.com/RafaelDelboni/Super-Dice-Roll) ([@superdiceroll_bot](https://telegram.me/superdiceroll_bot))\n- [tg-mentioned-bot](https://github.com/gruessung/tg-mentioned-bot)\n- [OSMdeWikiBot](https://github.com/OSM-de/TelegramWikiBot) ([@OSM_de](https://t.me/OSM_de))\n- [pass-generator-webbot](https://github.com/OxMohsen/pass-generator-webbot)\n- [Chess Quiz Bot](https://github.com/1int/chess-quiz-bot)\n- [PHP Telegram Bot - Symfony Bundle](https://github.com/m4n50n/telegram_bot_bundle)\n\n## Troubleshooting\n\nIf you like living on the edge, please report any bugs you find on the [PHP Telegram Bot issues][issues] page.\n\n## Contributing\n\nSee [CONTRIBUTING](CONTRIBUTING.md) for more information.\n\n## Security\n\nSee [SECURITY](SECURITY.md) for more information.\n\n## Donate\n\nAll work on this bot consists of many hours of coding during our free time, to provide you with a Telegram Bot library that is easy to use and extend.\nIf you enjoy using this library and would like to say thank you, donations are a great way to show your support.\n\nDonations are invested back into the project :+1:\n\nThank you for keeping this project alive :pray:\n\n- [![Patreon](https://user-images.githubusercontent.com/9423417/59235980-a5fa6b80-8be3-11e9-8ae7-020bc4ae9baa.png) Patreon.com/phptelegrambot][Patreon]\n- [![OpenCollective](https://user-images.githubusercontent.com/9423417/59235978-a561d500-8be3-11e9-89be-82ec54be1546.png) OpenCollective.com/php-telegram-bot][OpenCollective]\n- [![Ko-fi](https://user-images.githubusercontent.com/9423417/59235976-a561d500-8be3-11e9-911d-b1908c3e6a33.png) Ko-fi.com/phptelegrambot][Ko-fi]\n- [![Tidelift](https://user-images.githubusercontent.com/9423417/59235982-a6930200-8be3-11e9-8ac2-bfb6991d80c5.png) Tidelift.com/longman/telegram-bot][Tidelift]\n- [![Liberapay](https://user-images.githubusercontent.com/9423417/59235977-a561d500-8be3-11e9-9d16-bc3b13d3ceba.png) Liberapay.com/PHP-Telegram-Bot][Liberapay]\n- [![PayPal](https://user-images.githubusercontent.com/9423417/59235981-a5fa6b80-8be3-11e9-9761-15eb7a524cb0.png) PayPal.me/noplanman][PayPal-noplanman] (account of @noplanman)\n- [![Bitcoin](https://user-images.githubusercontent.com/9423417/59235974-a4c93e80-8be3-11e9-9fde-260c821b6eae.png) 166NcyE7nDxkRPWidWtG1rqrNJoD5oYNiV][Bitcoin]\n- [![Ethereum](https://user-images.githubusercontent.com/9423417/59235975-a4c93e80-8be3-11e9-8762-7a47c62c968d.png) 0x485855634fa212b0745375e593fAaf8321A81055][Ethereum]\n\n## For enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of `PHP Telegram Bot` and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.][Tidelift]\n\n## License\n\nPlease see the [LICENSE](LICENSE) included in this repository for a full copy of the MIT license, which this project is licensed under.\n\n## Credits\n\nCredit list in [CREDITS](CREDITS)\n\n---\n\n[Telegram Bot API]: https://core.telegram.org/bots/api \"Telegram Bot API\"\n[Composer]: https://getcomposer.org/ \"Composer\"\n[run their own Bot API server]: https://core.telegram.org/bots/api#using-a-local-bot-api-server \"Using a Local Bot API Server\"\n[example-bot repository]: https://github.com/php-telegram-bot/example-bot \"Example Bot repository\"\n[api-setwebhook]: https://core.telegram.org/bots/api#setwebhook \"Webhook on Telegram Bot API\"\n[set.php]: https://github.com/php-telegram-bot/example-bot/blob/master/set.php \"example set.php\"\n[unset.php]: https://github.com/php-telegram-bot/example-bot/blob/master/unset.php \"example unset.php\"\n[hook.php]: https://github.com/php-telegram-bot/example-bot/blob/master/hook.php \"example hook.php\"\n[getUpdatesCLI.php]: https://github.com/php-telegram-bot/example-bot/blob/master/getUpdatesCLI.php \"example getUpdatesCLI.php\"\n[AdminCommands-folder]: https://github.com/php-telegram-bot/core/tree/master/src/Commands/AdminCommands \"Admin commands folder\"\n[ExampleCommands-folder]: https://github.com/php-telegram-bot/example-bot/blob/master/Commands \"Example commands folder\"\n[ImageCommand.php]: https://github.com/php-telegram-bot/example-bot/blob/master/Commands/Other/ImageCommand.php \"example /image command\"\n[WhoamiCommand.php]: https://github.com/php-telegram-bot/example-bot/blob/master/Commands/WhoamiCommand.php \"example /whoami command\"\n[HelpCommand.php]: https://github.com/php-telegram-bot/example-bot/blob/master/Commands/HelpCommand.php \"example /help command\"\n[SendtochannelCommand.php]: https://github.com/php-telegram-bot/core/blob/master/src/Commands/AdminCommands/SendtochannelCommand.php \"/sendtochannel admin command\"\n[DB::selectChats]: https://github.com/php-telegram-bot/core/blob/0.70.0/src/DB.php#L1148 \"DB::selectChats() parameters\"\n[structure.sql]: https://github.com/php-telegram-bot/core/blob/master/structure.sql \"DB structure for importing\"\n[Wiki]: https://github.com/php-telegram-bot/core/wiki \"PHP Telegram Bot Wiki\"\n[wiki-create-your-own-commands]: https://github.com/php-telegram-bot/core/wiki/Create-your-own-commands \"Create your own commands\"\n[issues]: https://github.com/php-telegram-bot/core/issues \"PHP Telegram Bot Issues\"\n\n[Patreon]: https://www.patreon.com/phptelegrambot \"Support us on Patreon\"\n[OpenCollective]: https://opencollective.com/php-telegram-bot \"Support us on Open Collective\"\n[Ko-fi]: https://ko-fi.com/phptelegrambot \"Support us on Ko-fi\"\n[Tidelift]: https://tidelift.com/subscription/pkg/packagist-longman-telegram-bot?utm_source=packagist-longman-telegram-bot&utm_medium=referral&utm_campaign=enterprise&utm_term=repo \"Learn more about the Tidelift Subscription\"\n[Liberapay]: https://liberapay.com/PHP-Telegram-Bot \"Donate with Liberapay\"\n[PayPal-noplanman]: https://paypal.me/noplanman \"Donate with PayPal\"\n[Bitcoin]: https://www.blockchain.com/btc/address/166NcyE7nDxkRPWidWtG1rqrNJoD5oYNiV \"Donate with Bitcoin\"\n[Ethereum]: https://etherscan.io/address/0x485855634fa212b0745375e593fAaf8321A81055 \"Donate with Ethereum\"\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.1748046875,
          "content": "# Security Policy\n\nTo report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security). Tidelift will coordinate the fix and disclosure.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.220703125,
          "content": "{\n    \"name\": \"longman/telegram-bot\",\n    \"type\": \"library\",\n    \"description\": \"PHP Telegram bot\",\n    \"keywords\": [\"telegram\", \"bot\", \"api\"],\n    \"license\": \"MIT\",\n    \"homepage\": \"https://github.com/php-telegram-bot/core\",\n    \"support\": {\n        \"issues\": \"https://github.com/php-telegram-bot/core/issues\",\n        \"source\": \"https://github.com/php-telegram-bot/core\"\n    },\n    \"authors\": [\n        {\n            \"name\": \"Avtandil Kikabidze aka LONGMAN\",\n            \"email\": \"akalongman@gmail.com\",\n            \"homepage\": \"http://longman.me\",\n            \"role\": \"Developer\"\n        },\n        {\n            \"name\": \"Armando Lüscher\",\n            \"email\": \"armando@noplanman.ch\",\n            \"homepage\": \"https://noplanman.ch\",\n            \"role\": \"Developer\"\n        },\n        {\n            \"name\": \"PHP Telegram Bot Team\",\n            \"homepage\": \"https://github.com/php-telegram-bot/core/graphs/contributors\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.1\",\n        \"ext-pdo\": \"*\",\n        \"ext-curl\": \"*\",\n        \"ext-json\": \"*\",\n        \"ext-mbstring\": \"*\",\n        \"psr/log\": \"^1.1|^2.0|^3.0\",\n        \"guzzlehttp/guzzle\": \"^6.0|^7.0\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^9.5\",\n        \"squizlabs/php_codesniffer\": \"^3.6\",\n        \"dms/phpunit-arraysubset-asserts\": \"^0.2\",\n        \"monolog/monolog\": \"^2.1\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Longman\\\\TelegramBot\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Longman\\\\TelegramBot\\\\Tests\\\\Unit\\\\\": \"tests/Unit\"\n        }\n    },\n    \"scripts\": {\n        \"check-code\": [\n            \"\\\"vendor/bin/phpcs\\\"\"\n        ],\n        \"test\": [\n            \"\\\"vendor/bin/phpunit\\\"\"\n        ],\n        \"test-cov\": [\n            \"XDEBUG_MODE=coverage \\\"vendor/bin/phpunit\\\" --coverage-clover clover.xml\"\n        ],\n        \"test-cov-upload\": [\n            \"@php ocular.phar code-coverage:upload --format=php-clover clover.xml\"\n        ]\n    },\n    \"config\": {\n        \"optimize-autoloader\": true,\n        \"preferred-install\": \"dist\",\n        \"sort-packages\": true,\n        \"process-timeout\": 3600\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-develop\": \"0.83.x-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 9.9130859375,
          "content": null
        },
        {
          "name": "phpcs.xml.dist",
          "type": "blob",
          "size": 0.6064453125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ruleset xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"./vendor/squizlabs/php_codesniffer/phpcs.xsd\">\n    <description>PHP Code Sniffer</description>\n\n    <arg value=\"snp\"/>\n    <arg name=\"colors\"/>\n    <arg name=\"extensions\" value=\"php\"/>\n    <arg name=\"encoding\" value=\"utf-8\"/>\n    <arg name=\"parallel\" value=\"8\"/>\n    <arg name=\"report-width\" value=\"150\"/>\n\n    <file>src/</file>\n    <file>tests/</file>\n    <file>utils/</file>\n\n    <rule ref=\"PSR12\">\n        <exclude name=\"PSR12.Classes.OpeningBraceSpace.Found\"/>\n    </rule>\n</ruleset>\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.98046875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"./vendor/phpunit/phpunit/phpunit.xsd\">\n    <coverage>\n        <include>\n            <directory suffix=\".php\">./src</directory>\n        </include>\n        <exclude>\n            <directory suffix=\".php\">./src/Exception</directory>\n        </exclude>\n    </coverage>\n    <php>\n        <ini name=\"date.timezone\" value=\"UTC\"/>\n        <ini name=\"error_reporting\" value=\"-1\"/>\n        <const name=\"PHPUNIT_TESTSUITE\" value=\"true\"/>\n        <const name=\"PHPUNIT_DB_HOST\" value=\"127.0.0.1\"/>\n        <const name=\"PHPUNIT_DB_PORT\" value=\"3306\"/>\n        <const name=\"PHPUNIT_DB_NAME\" value=\"telegrambot\"/>\n        <const name=\"PHPUNIT_DB_USER\" value=\"root\"/>\n        <const name=\"PHPUNIT_DB_PASS\" value=\"root\"/>\n    </php>\n    <testsuites>\n        <testsuite name=\"Package Test Suite\">\n            <directory>./tests/</directory>\n        </testsuite>\n    </testsuites>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "structure.sql",
          "type": "blob",
          "size": 29.8095703125,
          "content": "CREATE TABLE IF NOT EXISTS `user` (\n  `id` bigint COMMENT 'Unique identifier for this user or bot',\n  `is_bot` tinyint(1) DEFAULT 0 COMMENT 'True, if this user is a bot',\n  `first_name` CHAR(255) NOT NULL DEFAULT '' COMMENT 'User''s or bot''s first name',\n  `last_name` CHAR(255) DEFAULT NULL COMMENT 'User''s or bot''s last name',\n  `username` CHAR(191) DEFAULT NULL COMMENT 'User''s or bot''s username',\n  `language_code` CHAR(10) DEFAULT NULL COMMENT 'IETF language tag of the user''s language',\n  `is_premium` tinyint(1) DEFAULT 0 COMMENT 'True, if this user is a Telegram Premium user',\n  `added_to_attachment_menu` tinyint(1) DEFAULT 0 COMMENT 'True, if this user added the bot to the attachment menu',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n  `updated_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date update',\n\n  PRIMARY KEY (`id`),\n  KEY `username` (`username`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `chat` (\n  `id` bigint COMMENT 'Unique identifier for this chat',\n  `type` ENUM('private', 'group', 'supergroup', 'channel') NOT NULL COMMENT 'Type of chat, can be either private, group, supergroup or channel',\n  `title` CHAR(255) DEFAULT '' COMMENT 'Title, for supergroups, channels and group chats',\n  `username` CHAR(255) DEFAULT NULL COMMENT 'Username, for private chats, supergroups and channels if available',\n  `first_name` CHAR(255) DEFAULT NULL COMMENT 'First name of the other party in a private chat',\n  `last_name` CHAR(255) DEFAULT NULL COMMENT 'Last name of the other party in a private chat',\n  `is_forum` TINYINT(1) DEFAULT 0 COMMENT 'True, if the supergroup chat is a forum (has topics enabled)',\n  `all_members_are_administrators` tinyint(1) DEFAULT 0 COMMENT 'True if a all members of this group are admins',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n  `updated_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date update',\n  `old_id` bigint DEFAULT NULL COMMENT 'Unique chat identifier, this is filled when a group is converted to a supergroup',\n\n  PRIMARY KEY (`id`),\n  KEY `old_id` (`old_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `user_chat` (\n  `user_id` bigint COMMENT 'Unique user identifier',\n  `chat_id` bigint COMMENT 'Unique user or chat identifier',\n\n  PRIMARY KEY (`user_id`, `chat_id`),\n\n  FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`chat_id`) REFERENCES `chat` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `message_reaction` (\n  `id` bigint UNSIGNED AUTO_INCREMENT COMMENT 'Unique identifier for this entry',\n  `chat_id` bigint COMMENT 'The chat containing the message the user reacted to',\n  `message_id` bigint COMMENT 'Unique identifier of the message inside the chat',\n  `user_id` bigint NULL COMMENT 'Optional. The user that changed the reaction, if the user isn''t anonymous',\n  `actor_chat_id` bigint NULL COMMENT 'Optional. The chat on behalf of which the reaction was changed, if the user is anonymous',\n  `old_reaction` TEXT NOT NULL COMMENT 'Previous list of reaction types that were set by the user',\n  `new_reaction` TEXT NOT NULL COMMENT 'New list of reaction types that have been set by the user',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n\n  PRIMARY KEY (`id`),\n  KEY `chat_id` (`chat_id`),\n  KEY `user_id` (`user_id`),\n  KEY `actor_chat_id` (`actor_chat_id`),\n\n  FOREIGN KEY (`chat_id`) REFERENCES `chat` (`id`),\n  FOREIGN KEY (`user_id`) REFERENCES `user` (`id`),\n  FOREIGN KEY (`actor_chat_id`) REFERENCES `chat` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `message_reaction_count` (\n  `id` bigint UNSIGNED AUTO_INCREMENT COMMENT 'Unique identifier for this entry',\n  `chat_id` bigint COMMENT 'The chat containing the message',\n  `message_id` bigint COMMENT 'Unique message identifier inside the chat',\n  `reactions` TEXT NOT NULL COMMENT 'List of reactions that are present on the message',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n\n  PRIMARY KEY (`id`),\n  KEY `chat_id` (`chat_id`),\n\n  FOREIGN KEY (`chat_id`) REFERENCES `chat` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `inline_query` (\n  `id` bigint UNSIGNED COMMENT 'Unique identifier for this query',\n  `user_id` bigint NULL COMMENT 'Unique user identifier',\n  `location` CHAR(255) NULL DEFAULT NULL COMMENT 'Location of the user',\n  `query` TEXT NOT NULL COMMENT 'Text of the query',\n  `offset` CHAR(255) NULL DEFAULT NULL COMMENT 'Offset of the result',\n  `chat_type` CHAR(255) NULL DEFAULT NULL COMMENT 'Optional. Type of the chat, from which the inline query was sent.',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n\n  PRIMARY KEY (`id`),\n  KEY `user_id` (`user_id`),\n\n  FOREIGN KEY (`user_id`) REFERENCES `user` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `chosen_inline_result` (\n  `id` bigint UNSIGNED AUTO_INCREMENT COMMENT 'Unique identifier for this entry',\n  `result_id` CHAR(255) NOT NULL DEFAULT '' COMMENT 'The unique identifier for the result that was chosen',\n  `user_id` bigint NULL COMMENT 'The user that chose the result',\n  `location` CHAR(255) NULL DEFAULT NULL COMMENT 'Sender location, only for bots that require user location',\n  `inline_message_id` CHAR(255) NULL DEFAULT NULL COMMENT 'Identifier of the sent inline message',\n  `query` TEXT NOT NULL COMMENT 'The query that was used to obtain the result',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n\n  PRIMARY KEY (`id`),\n  KEY `user_id` (`user_id`),\n\n  FOREIGN KEY (`user_id`) REFERENCES `user` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `message` (\n  `chat_id` bigint COMMENT 'Unique chat identifier',\n  `sender_chat_id` bigint COMMENT 'Sender of the message, sent on behalf of a chat',\n  `id` bigint UNSIGNED COMMENT 'Unique message identifier',\n  `message_thread_id` bigint(20) DEFAULT NULL COMMENT 'Unique identifier of a message thread to which the message belongs; for supergroups only',\n  `user_id` bigint NULL COMMENT 'Unique user identifier',\n  `sender_boost_count` bigint NULL COMMENT 'If the sender of the message boosted the chat, the number of boosts added by the user',\n  `date` timestamp NULL DEFAULT NULL COMMENT 'Date the message was sent in timestamp format',\n  `forward_from` bigint NULL DEFAULT NULL COMMENT 'Unique user identifier, sender of the original message',\n  `forward_from_chat` bigint NULL DEFAULT NULL COMMENT 'Unique chat identifier, chat the original message belongs to',\n  `forward_from_message_id` bigint NULL DEFAULT NULL COMMENT 'Unique chat identifier of the original message in the channel',\n  `forward_signature` TEXT NULL DEFAULT NULL COMMENT 'For messages forwarded from channels, signature of the post author if present',\n  `forward_sender_name` TEXT NULL DEFAULT NULL COMMENT 'Sender''s name for messages forwarded from users who disallow adding a link to their account in forwarded messages',\n  `forward_date` timestamp NULL DEFAULT NULL COMMENT 'date the original message was sent in timestamp format',\n  `is_topic_message` tinyint(1) DEFAULT 0 COMMENT 'True, if the message is sent to a forum topic',\n  `is_automatic_forward` tinyint(1) DEFAULT 0 COMMENT 'True, if the message is a channel post that was automatically forwarded to the connected discussion group',\n  `reply_to_chat` bigint NULL DEFAULT NULL COMMENT 'Unique chat identifier',\n  `reply_to_message` bigint UNSIGNED DEFAULT NULL COMMENT 'Message that this message is reply to',\n  `external_reply` TEXT NULL DEFAULT NULL COMMENT 'Optional. Information about the message that is being replied to, which may come from another chat or forum topic',\n  `quote` TEXT NULL DEFAULT NULL COMMENT 'Optional. For replies that quote part of the original message, the quoted part of the message',\n  `reply_to_story` TEXT NULL DEFAULT NULL COMMENT 'Optional. For replies to a story, the original story',\n  `via_bot` bigint NULL DEFAULT NULL COMMENT 'Optional. Bot through which the message was sent',\n  `link_preview_options` TEXT NULL DEFAULT NULL COMMENT 'Optional. Options used for link preview generation for the message, if it is a text message and link preview options were changed',\n  `edit_date` timestamp NULL DEFAULT NULL COMMENT 'Date the message was last edited in Unix time',\n  `has_protected_content` tinyint(1) DEFAULT 0 COMMENT 'True, if the message can''t be forwarded',\n  `media_group_id` TEXT COMMENT 'The unique identifier of a media message group this message belongs to',\n  `author_signature` TEXT COMMENT 'Signature of the post author for messages in channels',\n  `text` TEXT COMMENT 'For text messages, the actual UTF-8 text of the message max message length 4096 char utf8mb4',\n  `entities` TEXT COMMENT 'For text messages, special entities like usernames, URLs, bot commands, etc. that appear in the text',\n  `caption_entities` TEXT COMMENT 'For messages with a caption, special entities like usernames, URLs, bot commands, etc. that appear in the caption',\n  `audio` TEXT COMMENT 'Audio object. Message is an audio file, information about the file',\n  `document` TEXT COMMENT 'Document object. Message is a general file, information about the file',\n  `animation` TEXT COMMENT 'Message is an animation, information about the animation',\n  `game` TEXT COMMENT 'Game object. Message is a game, information about the game',\n  `photo` TEXT COMMENT 'Array of PhotoSize objects. Message is a photo, available sizes of the photo',\n  `sticker` TEXT COMMENT 'Sticker object. Message is a sticker, information about the sticker',\n  `story` TEXT COMMENT 'Story object. Message is a forwarded story',\n  `video` TEXT COMMENT 'Video object. Message is a video, information about the video',\n  `voice` TEXT COMMENT 'Voice Object. Message is a Voice, information about the Voice',\n  `video_note` TEXT COMMENT 'VoiceNote Object. Message is a Video Note, information about the Video Note',\n  `caption` TEXT COMMENT  'For message with caption, the actual UTF-8 text of the caption',\n  `has_media_spoiler` tinyint(1) DEFAULT 0 COMMENT 'True, if the message media is covered by a spoiler animation',\n  `contact` TEXT COMMENT 'Contact object. Message is a shared contact, information about the contact',\n  `location` TEXT COMMENT 'Location object. Message is a shared location, information about the location',\n  `venue` TEXT COMMENT 'Venue object. Message is a Venue, information about the Venue',\n  `poll` TEXT COMMENT 'Poll object. Message is a native poll, information about the poll',\n  `dice` TEXT COMMENT 'Message is a dice with random value from 1 to 6',\n  `new_chat_members` TEXT COMMENT 'List of unique user identifiers, new member(s) were added to the group, information about them (one of these members may be the bot itself)',\n  `left_chat_member` bigint NULL DEFAULT NULL COMMENT 'Unique user identifier, a member was removed from the group, information about them (this member may be the bot itself)',\n  `new_chat_title` CHAR(255) DEFAULT NULL COMMENT 'A chat title was changed to this value',\n  `new_chat_photo` TEXT COMMENT 'Array of PhotoSize objects. A chat photo was change to this value',\n  `delete_chat_photo` tinyint(1) DEFAULT 0 COMMENT 'Informs that the chat photo was deleted',\n  `group_chat_created` tinyint(1) DEFAULT 0 COMMENT 'Informs that the group has been created',\n  `supergroup_chat_created` tinyint(1) DEFAULT 0 COMMENT 'Informs that the supergroup has been created',\n  `channel_chat_created` tinyint(1) DEFAULT 0 COMMENT 'Informs that the channel chat has been created',\n  `message_auto_delete_timer_changed` TEXT COMMENT 'MessageAutoDeleteTimerChanged object. Message is a service message: auto-delete timer settings changed in the chat',\n  `migrate_to_chat_id` bigint NULL DEFAULT NULL COMMENT 'Migrate to chat identifier. The group has been migrated to a supergroup with the specified identifier',\n  `migrate_from_chat_id` bigint NULL DEFAULT NULL COMMENT 'Migrate from chat identifier. The supergroup has been migrated from a group with the specified identifier',\n  `pinned_message` TEXT NULL COMMENT 'Message object. Specified message was pinned',\n  `invoice` TEXT NULL COMMENT 'Message is an invoice for a payment, information about the invoice',\n  `successful_payment` TEXT NULL COMMENT 'Message is a service message about a successful payment, information about the payment',\n  `users_shared` TEXT NULL COMMENT 'Optional. Service message: users were shared with the bot',\n  `chat_shared` TEXT NULL COMMENT 'Optional. Service message: a chat was shared with the bot',\n  `connected_website` TEXT NULL COMMENT 'The domain name of the website on which the user has logged in.',\n  `write_access_allowed` TEXT DEFAULT NULL COMMENT 'Service message: the user allowed the bot added to the attachment menu to write messages',\n  `passport_data` TEXT NULL COMMENT 'Telegram Passport data',\n  `proximity_alert_triggered` TEXT NULL COMMENT 'Service message. A user in the chat triggered another user''s proximity alert while sharing Live Location.',\n  `boost_added` TEXT NULL COMMENT 'Service message: user boosted the chat',\n  `forum_topic_created` TEXT DEFAULT NULL COMMENT 'Service message: forum topic created',\n  `forum_topic_edited` TEXT DEFAULT NULL COMMENT 'Service message: forum topic edited',\n  `forum_topic_closed` TEXT DEFAULT NULL COMMENT 'Service message: forum topic closed',\n  `forum_topic_reopened` TEXT DEFAULT NULL COMMENT 'Service message: forum topic reopened',\n  `general_forum_topic_hidden` TEXT DEFAULT NULL COMMENT 'Service message: the General forum topic hidden',\n  `general_forum_topic_unhidden` TEXT DEFAULT NULL COMMENT 'Service message: the General forum topic unhidden',\n  `video_chat_scheduled` TEXT COMMENT 'Service message: video chat scheduled',\n  `video_chat_started` TEXT COMMENT 'Service message: video chat started',\n  `video_chat_ended` TEXT COMMENT 'Service message: video chat ended',\n  `video_chat_participants_invited` TEXT COMMENT 'Service message: new participants invited to a video chat',\n  `web_app_data` TEXT COMMENT 'Service message: data sent by a Web App',\n  `reply_markup` TEXT NULL COMMENT 'Inline keyboard attached to the message',\n\n  PRIMARY KEY (`chat_id`, `id`),\n  KEY `user_id` (`user_id`),\n  KEY `forward_from` (`forward_from`),\n  KEY `forward_from_chat` (`forward_from_chat`),\n  KEY `reply_to_chat` (`reply_to_chat`),\n  KEY `reply_to_message` (`reply_to_message`),\n  KEY `via_bot` (`via_bot`),\n  KEY `left_chat_member` (`left_chat_member`),\n  KEY `migrate_from_chat_id` (`migrate_from_chat_id`),\n  KEY `migrate_to_chat_id` (`migrate_to_chat_id`),\n\n  FOREIGN KEY (`user_id`) REFERENCES `user` (`id`),\n  FOREIGN KEY (`chat_id`) REFERENCES `chat` (`id`),\n  FOREIGN KEY (`forward_from`) REFERENCES `user` (`id`),\n  FOREIGN KEY (`forward_from_chat`) REFERENCES `chat` (`id`),\n  FOREIGN KEY (`reply_to_chat`, `reply_to_message`) REFERENCES `message` (`chat_id`, `id`),\n  FOREIGN KEY (`via_bot`) REFERENCES `user` (`id`),\n  FOREIGN KEY (`left_chat_member`) REFERENCES `user` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `edited_message` (\n  `id` bigint UNSIGNED AUTO_INCREMENT COMMENT 'Unique identifier for this entry',\n  `chat_id` bigint COMMENT 'Unique chat identifier',\n  `message_id` bigint UNSIGNED COMMENT 'Unique message identifier',\n  `user_id` bigint NULL COMMENT 'Unique user identifier',\n  `edit_date` timestamp NULL DEFAULT NULL COMMENT 'Date the message was edited in timestamp format',\n  `text` TEXT COMMENT 'For text messages, the actual UTF-8 text of the message max message length 4096 char utf8',\n  `entities` TEXT COMMENT 'For text messages, special entities like usernames, URLs, bot commands, etc. that appear in the text',\n  `caption` TEXT COMMENT  'For message with caption, the actual UTF-8 text of the caption',\n\n  PRIMARY KEY (`id`),\n  KEY `chat_id` (`chat_id`),\n  KEY `message_id` (`message_id`),\n  KEY `user_id` (`user_id`),\n\n  FOREIGN KEY (`chat_id`) REFERENCES `chat` (`id`),\n  FOREIGN KEY (`chat_id`, `message_id`) REFERENCES `message` (`chat_id`, `id`),\n  FOREIGN KEY (`user_id`) REFERENCES `user` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `callback_query` (\n  `id` bigint UNSIGNED COMMENT 'Unique identifier for this query',\n  `user_id` bigint NULL COMMENT 'Unique user identifier',\n  `chat_id` bigint NULL COMMENT 'Unique chat identifier',\n  `message_id` bigint UNSIGNED COMMENT 'Unique message identifier',\n  `inline_message_id` CHAR(255) NULL DEFAULT NULL COMMENT 'Identifier of the message sent via the bot in inline mode, that originated the query',\n  `chat_instance` CHAR(255) NOT NULL DEFAULT '' COMMENT 'Global identifier, uniquely corresponding to the chat to which the message with the callback button was sent',\n  `data` CHAR(255) NOT NULL DEFAULT '' COMMENT 'Data associated with the callback button',\n  `game_short_name` CHAR(255) NOT NULL DEFAULT '' COMMENT 'Short name of a Game to be returned, serves as the unique identifier for the game',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n\n  PRIMARY KEY (`id`),\n  KEY `user_id` (`user_id`),\n  KEY `chat_id` (`chat_id`),\n  KEY `message_id` (`message_id`),\n\n  FOREIGN KEY (`user_id`) REFERENCES `user` (`id`),\n  FOREIGN KEY (`chat_id`, `message_id`) REFERENCES `message` (`chat_id`, `id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `shipping_query` (\n  `id` bigint UNSIGNED COMMENT 'Unique query identifier',\n  `user_id` bigint COMMENT 'User who sent the query',\n  `invoice_payload` CHAR(255) NOT NULL DEFAULT '' COMMENT 'Bot specified invoice payload',\n  `shipping_address` CHAR(255) NOT NULL DEFAULT '' COMMENT 'User specified shipping address',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n\n  PRIMARY KEY (`id`),\n  KEY `user_id` (`user_id`),\n\n  FOREIGN KEY (`user_id`) REFERENCES `user` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `pre_checkout_query` (\n  `id` bigint UNSIGNED COMMENT 'Unique query identifier',\n  `user_id` bigint COMMENT 'User who sent the query',\n  `currency` CHAR(3) COMMENT 'Three-letter ISO 4217 currency code',\n  `total_amount` bigint COMMENT 'Total price in the smallest units of the currency',\n  `invoice_payload` CHAR(255) NOT NULL DEFAULT '' COMMENT 'Bot specified invoice payload',\n  `shipping_option_id` CHAR(255) NULL COMMENT 'Identifier of the shipping option chosen by the user',\n  `order_info` TEXT NULL COMMENT 'Order info provided by the user',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n\n  PRIMARY KEY (`id`),\n  KEY `user_id` (`user_id`),\n\n  FOREIGN KEY (`user_id`) REFERENCES `user` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `poll` (\n  `id` bigint UNSIGNED COMMENT 'Unique poll identifier',\n  `question` text NOT NULL COMMENT 'Poll question',\n  `options` text NOT NULL COMMENT 'List of poll options',\n  `total_voter_count` int UNSIGNED COMMENT 'Total number of users that voted in the poll',\n  `is_closed` tinyint(1) DEFAULT 0 COMMENT 'True, if the poll is closed',\n  `is_anonymous` tinyint(1) DEFAULT 1 COMMENT 'True, if the poll is anonymous',\n  `type` char(255) COMMENT 'Poll type, currently can be “regular” or “quiz”',\n  `allows_multiple_answers` tinyint(1) DEFAULT 0 COMMENT 'True, if the poll allows multiple answers',\n  `correct_option_id` int UNSIGNED COMMENT '0-based identifier of the correct answer option. Available only for polls in the quiz mode, which are closed, or was sent (not forwarded) by the bot or to the private chat with the bot.',\n  `explanation` varchar(255) DEFAULT NULL COMMENT 'Text that is shown when a user chooses an incorrect answer or taps on the lamp icon in a quiz-style poll, 0-200 characters',\n  `explanation_entities` text DEFAULT NULL COMMENT 'Special entities like usernames, URLs, bot commands, etc. that appear in the explanation',\n  `open_period` int UNSIGNED DEFAULT NULL COMMENT 'Amount of time in seconds the poll will be active after creation',\n  `close_date` timestamp NULL DEFAULT NULL COMMENT 'Point in time (Unix timestamp) when the poll will be automatically closed',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `poll_answer` (\n  `poll_id` bigint UNSIGNED COMMENT 'Unique poll identifier',\n  `user_id` bigint NOT NULL COMMENT 'The user, who changed the answer to the poll',\n  `option_ids` text NOT NULL COMMENT '0-based identifiers of answer options, chosen by the user. May be empty if the user retracted their vote.',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n\n  PRIMARY KEY (`poll_id`, `user_id`),\n  FOREIGN KEY (`poll_id`) REFERENCES `poll` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `chat_member_updated` (\n  `id` BIGINT UNSIGNED AUTO_INCREMENT COMMENT 'Unique identifier for this entry',\n  `chat_id` BIGINT NOT NULL COMMENT 'Chat the user belongs to',\n  `user_id` BIGINT NOT NULL COMMENT 'Performer of the action, which resulted in the change',\n  `date` TIMESTAMP NOT NULL COMMENT 'Date the change was done in Unix time',\n  `old_chat_member` TEXT NOT NULL COMMENT 'Previous information about the chat member',\n  `new_chat_member` TEXT NOT NULL COMMENT 'New information about the chat member',\n  `invite_link` TEXT NULL COMMENT 'Chat invite link, which was used by the user to join the chat; for joining by invite link events only',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`chat_id`) REFERENCES `chat` (`id`),\n  FOREIGN KEY (`user_id`) REFERENCES `user` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `chat_join_request` (\n  `id` BIGINT UNSIGNED AUTO_INCREMENT COMMENT 'Unique identifier for this entry',\n  `chat_id` BIGINT NOT NULL COMMENT 'Chat to which the request was sent',\n  `user_id` BIGINT NOT NULL COMMENT 'User that sent the join request',\n  `date` TIMESTAMP NOT NULL COMMENT 'Date the request was sent in Unix time',\n  `bio` TEXT NULL COMMENT 'Optional. Bio of the user',\n  `invite_link` TEXT NULL COMMENT 'Optional. Chat invite link that was used by the user to send the join request',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n\n  PRIMARY KEY (`id`),\n\n  FOREIGN KEY (`chat_id`) REFERENCES `chat` (`id`),\n  FOREIGN KEY (`user_id`) REFERENCES `user` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `chat_boost_updated` (\n  `id` bigint UNSIGNED AUTO_INCREMENT COMMENT 'Unique identifier for this entry',\n  `chat_id` bigint COMMENT 'Chat which was boosted',\n  `boost` TEXT NOT NULL COMMENT 'Information about the chat boost',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n\n  PRIMARY KEY (`id`),\n  KEY `chat_id` (`chat_id`),\n\n  FOREIGN KEY (`chat_id`) REFERENCES `chat` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `chat_boost_removed` (\n  `id` bigint UNSIGNED AUTO_INCREMENT COMMENT 'Unique identifier for this entry',\n  `chat_id` bigint COMMENT 'Chat which was boosted',\n  `boost_id` varchar(200) NOT NULL COMMENT 'Unique identifier of the boost',\n  `remove_date` timestamp NOT NULL COMMENT 'Point in time (Unix timestamp) when the boost was removed',\n  `source` TEXT NOT NULL COMMENT 'Source of the removed boost',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n\n  PRIMARY KEY (`id`),\n  KEY `chat_id` (`chat_id`),\n\n  FOREIGN KEY (`chat_id`) REFERENCES `chat` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `telegram_update` (\n  `id` bigint UNSIGNED COMMENT 'Update''s unique identifier',\n  `chat_id` bigint NULL DEFAULT NULL COMMENT 'Unique chat identifier',\n  `message_id` bigint UNSIGNED DEFAULT NULL COMMENT 'New incoming message of any kind - text, photo, sticker, etc.',\n  `edited_message_id` bigint UNSIGNED DEFAULT NULL COMMENT 'New version of a message that is known to the bot and was edited',\n  `channel_post_id` bigint UNSIGNED DEFAULT NULL COMMENT 'New incoming channel post of any kind - text, photo, sticker, etc.',\n  `edited_channel_post_id` bigint UNSIGNED DEFAULT NULL COMMENT 'New version of a channel post that is known to the bot and was edited',\n  `message_reaction_id` bigint UNSIGNED DEFAULT NULL COMMENT 'A reaction to a message was changed by a user',\n  `message_reaction_count_id` bigint UNSIGNED DEFAULT NULL COMMENT 'Reactions to a message with anonymous reactions were changed',\n  `inline_query_id` bigint UNSIGNED DEFAULT NULL COMMENT 'New incoming inline query',\n  `chosen_inline_result_id` bigint UNSIGNED DEFAULT NULL COMMENT 'The result of an inline query that was chosen by a user and sent to their chat partner',\n  `callback_query_id` bigint UNSIGNED DEFAULT NULL COMMENT 'New incoming callback query',\n  `shipping_query_id` bigint UNSIGNED DEFAULT NULL COMMENT 'New incoming shipping query. Only for invoices with flexible price',\n  `pre_checkout_query_id` bigint UNSIGNED DEFAULT NULL COMMENT 'New incoming pre-checkout query. Contains full information about checkout',\n  `poll_id` bigint UNSIGNED DEFAULT NULL COMMENT 'New poll state. Bots receive only updates about polls, which are sent or stopped by the bot',\n  `poll_answer_poll_id` bigint UNSIGNED DEFAULT NULL COMMENT 'A user changed their answer in a non-anonymous poll. Bots receive new votes only in polls that were sent by the bot itself.',\n  `my_chat_member_updated_id` BIGINT UNSIGNED NULL COMMENT 'The bot''s chat member status was updated in a chat. For private chats, this update is received only when the bot is blocked or unblocked by the user.',\n  `chat_member_updated_id` BIGINT UNSIGNED NULL COMMENT 'A chat member''s status was updated in a chat. The bot must be an administrator in the chat and must explicitly specify “chat_member” in the list of allowed_updates to receive these updates.',\n  `chat_join_request_id` BIGINT UNSIGNED NULL COMMENT 'A request to join the chat has been sent',\n  `chat_boost_updated_id` BIGINT UNSIGNED NULL COMMENT 'A chat boost was added or changed.',\n  `chat_boost_removed_id` BIGINT UNSIGNED NULL COMMENT 'A boost was removed from a chat.',\n\n  PRIMARY KEY (`id`),\n  KEY `message_id` (`message_id`),\n  KEY `chat_message_id` (`chat_id`, `message_id`),\n  KEY `edited_message_id` (`edited_message_id`),\n  KEY `channel_post_id` (`channel_post_id`),\n  KEY `edited_channel_post_id` (`edited_channel_post_id`),\n  KEY `inline_query_id` (`inline_query_id`),\n  KEY `chosen_inline_result_id` (`chosen_inline_result_id`),\n  KEY `callback_query_id` (`callback_query_id`),\n  KEY `shipping_query_id` (`shipping_query_id`),\n  KEY `pre_checkout_query_id` (`pre_checkout_query_id`),\n  KEY `poll_id` (`poll_id`),\n  KEY `poll_answer_poll_id` (`poll_answer_poll_id`),\n  KEY `my_chat_member_updated_id` (`my_chat_member_updated_id`),\n  KEY `chat_member_updated_id` (`chat_member_updated_id`),\n  KEY `chat_join_request_id` (`chat_join_request_id`),\n\n  FOREIGN KEY (`chat_id`, `message_id`) REFERENCES `message` (`chat_id`, `id`),\n  FOREIGN KEY (`edited_message_id`) REFERENCES `edited_message` (`id`),\n  FOREIGN KEY (`chat_id`, `channel_post_id`) REFERENCES `message` (`chat_id`, `id`),\n  FOREIGN KEY (`edited_channel_post_id`) REFERENCES `edited_message` (`id`),\n  FOREIGN KEY (`inline_query_id`) REFERENCES `inline_query` (`id`),\n  FOREIGN KEY (`chosen_inline_result_id`) REFERENCES `chosen_inline_result` (`id`),\n  FOREIGN KEY (`callback_query_id`) REFERENCES `callback_query` (`id`),\n  FOREIGN KEY (`shipping_query_id`) REFERENCES `shipping_query` (`id`),\n  FOREIGN KEY (`pre_checkout_query_id`) REFERENCES `pre_checkout_query` (`id`),\n  FOREIGN KEY (`poll_id`) REFERENCES `poll` (`id`),\n  FOREIGN KEY (`poll_answer_poll_id`) REFERENCES `poll_answer` (`poll_id`),\n  FOREIGN KEY (`my_chat_member_updated_id`) REFERENCES `chat_member_updated` (`id`),\n  FOREIGN KEY (`chat_member_updated_id`) REFERENCES `chat_member_updated` (`id`),\n  FOREIGN KEY (`chat_join_request_id`) REFERENCES `chat_join_request` (`id`),\n  FOREIGN KEY (`chat_boost_updated_id`) REFERENCES `chat_boost_updated` (`id`),\n  FOREIGN KEY (`chat_boost_removed_id`) REFERENCES `chat_boost_removed` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `conversation` (\n  `id` bigint(20) unsigned AUTO_INCREMENT COMMENT 'Unique identifier for this entry',\n  `user_id` bigint NULL DEFAULT NULL COMMENT 'Unique user identifier',\n  `chat_id` bigint NULL DEFAULT NULL COMMENT 'Unique user or chat identifier',\n  `status` ENUM('active', 'cancelled', 'stopped') NOT NULL DEFAULT 'active' COMMENT 'Conversation state',\n  `command` varchar(160) DEFAULT '' COMMENT 'Default command to execute',\n  `notes` text DEFAULT NULL COMMENT 'Data stored from command',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n  `updated_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date update',\n\n  PRIMARY KEY (`id`),\n  KEY `user_id` (`user_id`),\n  KEY `chat_id` (`chat_id`),\n  KEY `status` (`status`),\n\n  FOREIGN KEY (`user_id`) REFERENCES `user` (`id`),\n  FOREIGN KEY (`chat_id`) REFERENCES `chat` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n\nCREATE TABLE IF NOT EXISTS `request_limiter` (\n  `id` bigint UNSIGNED AUTO_INCREMENT COMMENT 'Unique identifier for this entry',\n  `chat_id` char(255) NULL DEFAULT NULL COMMENT 'Unique chat identifier',\n  `inline_message_id` char(255) NULL DEFAULT NULL COMMENT 'Identifier of the sent inline message',\n  `method` char(255) DEFAULT NULL COMMENT 'Request method',\n  `created_at` timestamp NULL DEFAULT NULL COMMENT 'Entry date creation',\n\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}