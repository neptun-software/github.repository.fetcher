{
  "metadata": {
    "timestamp": 1736712197490,
    "page": 884,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "php-http/discovery",
      "stars": 1290,
      "defaultBranch": "1.x",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1435546875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.46875,
          "content": ".editorconfig     export-ignore\n.gitattributes    export-ignore\n/.github/         export-ignore\n.gitignore        export-ignore\n/.php_cs          export-ignore\n/.scrutinizer.yml export-ignore\n/.styleci.yml     export-ignore\n/.travis.yml      export-ignore\n/behat.yml.dist   export-ignore\n/features/        export-ignore\n/phpspec.ci.yml   export-ignore\n/phpspec.yml.dist export-ignore\n/phpunit.xml.dist export-ignore\n/spec/            export-ignore\n/tests/           export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.126953125,
          "content": "/.puli/\n/behat.yml\n/build/\n/composer.lock\n/phpspec.yml\n/phpunit.xml\n/puli.json\n/vendor/\n.php-cs-fixer.cache\n.phpunit.result.cache\n"
        },
        {
          "name": ".php-cs-fixer.php",
          "type": "blob",
          "size": 0.33984375,
          "content": "<?php\n\n$finder = PhpCsFixer\\Finder::create()\n    ->in(__DIR__.'/src')\n    ->name('*.php')\n;\n\n$config = (new PhpCsFixer\\Config())\n    ->setRiskyAllowed(true)\n    ->setRules([\n        '@Symfony' => true,\n        'trailing_comma_in_multiline' => false, // for methods this is incompatible with PHP 7\n    ])\n    ->setFinder($finder)\n;\n\nreturn $config;\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 10.1484375,
          "content": "# Change Log\n\n## 1.20.0 - 2024-10-02\n\n- [#268](https://github.com/php-http/discovery/pull/268) - Do not attempt to update lock file when it is not existing.\n- [#267](https://github.com/php-http/discovery/pull/267) - Test with PHP 8.3 and 8.4\n- [#266](https://github.com/php-http/discovery/pull/266) - If wrapped client implements factories, use those instead of discovering new factories.\n\n## 1.19.4 - 2024-03-29\n\n- [#264](https://github.com/php-http/discovery/pull/264) - Do not report a general conflict with `sebastian/comparator` but make sure we install the correct version for our tests.\n\n## 1.19.3 - 2024-03-28\n\n- [#261](https://github.com/php-http/discovery/pull/261) - explicitly mark nullable parameters as nullable (avoid deprecation in PHP 8.4)\n\n## 1.19.2 - 2023-11-30\n\n- [#253](https://github.com/php-http/discovery/pull/253) - Symfony 7 dropped the deprecated PHP-HTTP `HttpClient` interface from their HTTP client, do not discover the version 7 client when looking for the old interface.\n\n## 1.19.1 - 2023-07-11\n\n- [#250](https://github.com/php-http/discovery/pull/250) - Fix: Buzz client instantiation using deprecated Message Factory Discovery, use PSR-17 factory discovery instead.\n\n## 1.19.0 - 2023-06-19\n\n- [#249](https://github.com/php-http/discovery/pull/249) - Have composer plugin correctly install Symfony http client when nothing explicitly requires psr 18 resp. httplug.\n- [#241](https://github.com/php-http/discovery/pull/241) - Support discovering PSR-17 factories of `httpsoft/http-message` package\n\n## 1.18.1 - 2023-05-17\n\n- [#242](https://github.com/php-http/discovery/pull/242) - Better exception message when no legacy php-http message factories can be built. Also needs php-http/message-factory package and they are deprecated in favor of PSR-17 anyways.\n\n## 1.18.0 - 2023-05-03\n\n- [#235](https://github.com/php-http/discovery/pull/235) - Deprecate HttpClientDiscovery, use Psr18ClientDiscovery instead\n- [#238](https://github.com/php-http/discovery/pull/238) - Skip requiring php-http/message-factory when installing symfony/http-client 6.3+\n- [#239](https://github.com/php-http/discovery/pull/239) - Skip auto-installing when the root package's extra.discovery is enough\n\n## 1.17.0 - 2023-04-26\n\n- [#230](https://github.com/php-http/discovery/pull/230) - Add Psr18Client to make it straightforward to use PSR-18\n- [#232](https://github.com/php-http/discovery/pull/232) - Allow pinning the preferred implementations in composer.json\n- [#233](https://github.com/php-http/discovery/pull/233) - Fix Psr17Factory::createServerRequestFromGlobals() when uploaded files have been moved\n\n## 1.16.0 - 2023-04-26\n\n- [#225](https://github.com/php-http/discovery/pull/225) - Remove support for the abandoned Zend Diactoros which has been replaced with Laminas Diactoros; marked the zend library as conflict in composer.json to avoid confusion\n- [#227](https://github.com/php-http/discovery/pull/227) - Fix handling requests with nested files\n\n## 1.15.3 - 2023-03-31\n\n- [#224](https://github.com/php-http/discovery/pull/224) - Fix regression with Magento classloader\n\n## 1.15.2 - 2023-02-11\n\n- [#219](https://github.com/php-http/discovery/pull/219) - Fix handling of replaced packages\n\n## 1.15.1 - 2023-02-10\n\n- [#214](https://github.com/php-http/discovery/pull/214) - Fix resolving deps for psr/http-message-implementation\n- [#216](https://github.com/php-http/discovery/pull/216) - Fix keeping platform requirements when rebooting composer\n- [#217](https://github.com/php-http/discovery/pull/217) - Set extra.plugin-optional composer flag\n\n## 1.15.0 - 2023-02-09\n\n- [#209](https://github.com/php-http/discovery/pull/209) - Add generic `Psr17Factory` class\n- [#208](https://github.com/php-http/discovery/pull/208) - Add composer plugin to auto-install missing implementations.\n  When libraries require an http implementation but no packages providing that implementation is installed in the application, the plugin will automatically install one.\n  This is only done for libraries that directly require php-http/discovery to avoid unexpected dependency installation.\n\n## 1.14.3 - 2022-07-11\n\n- [#207](https://github.com/php-http/discovery/pull/207) - Updates Exception to extend Throwable solving static analysis errors for consumers\n\n## 1.14.2 - 2022-05-25\n\n- [#202](https://github.com/php-http/discovery/pull/202) - Avoid error when the Symfony PSR-18 client exists but its dependencies are not installed\n\n## 1.14.1 - 2021-09-18\n\n- [#199](https://github.com/php-http/discovery/pull/199) - Fixes message factory discovery for `laminas-diactoros ^2.7`\n\n## 1.14.0 - 2021-06-21\n\n- Deprecate puli as it has been unmaintained for a long time and is not compatible with composer 2 https://github.com/php-http/discovery/pull/195\n\n## 1.13.0 - 2020-11-27\n\n- Support discovering PSR-17 factories of `slim/psr7` package https://github.com/php-http/discovery/pull/192\n\n## 1.12.0 - 2020-09-22\n\n- Support discovering HttpClient of `php-http/guzzle7-adapter` https://github.com/php-http/discovery/pull/189\n\n## 1.11.0 - 2020-09-22\n\n- Use correct method name to find Uri Factory in PSR17 https://github.com/php-http/discovery/pull/181\n\n## 1.10.0 - 2020-09-04\n\n- Discover PSR-18 implementation of phalcon\n\n## 1.9.1 - 2020-07-13\n\n### Fixed\n\n- Support PHP 7.4 and 8.0\n\n## 1.9.0 - 2020-07-02\n\n### Added\n\n- Support discovering PSR-18 factories of `guzzlehttp/guzzle` 7+\n\n## 1.8.0 - 2020-06-14\n\n### Added\n\n- Support discovering PSR-17 factories of `guzzlehttp/psr7` package\n- Support discovering PSR-17 factories of `laminas/laminas-diactoros` package\n- `ClassDiscovery::getStrategies()` to retrieve the list of current strategies.\n\n### Fixed\n\n- Ignore exception during discovery when Symfony HttplugClient checks if HTTPlug is available.\n\n## 1.7.4 - 2020-01-03\n\n### Fixed\n\n- Improve conditions on Symfony's async HTTPlug client.\n\n## 1.7.3 - 2019-12-27\n\n### Fixed\n\n- Enough conditions to only use Symfony HTTP client if all needed components are available.\n\n## 1.7.2 - 2019-12-27\n\n### Fixed\n\n- Allow a condition to specify an interface and not just classes.\n\n## 1.7.1 - 2019-12-26\n\n### Fixed\n\n- Better conditions to see if Symfony's HTTP clients are available.\n\n## 1.7.0 - 2019-06-30\n\n### Added\n\n- Dropped support for PHP < 7.1\n- Support for `symfony/http-client`\n\n## 1.6.1 - 2019-02-23\n\n### Fixed\n\n- MockClientStrategy also provides the mock client when requesting an async client\n\n## 1.6.0 - 2019-01-23\n\n### Added\n\n- Support for PSR-17 factories\n- Support for PSR-18 clients\n\n## 1.5.2 - 2018-12-31\n\nCorrected mistakes in 1.5.1. The different between 1.5.2 and 1.5.0 is that\nwe removed some PHP 7 code.\n\nhttps://github.com/php-http/discovery/compare/1.5.0...1.5.2\n\n## 1.5.1 - 2018-12-31\n\nThis version added new features by mistake. These are reverted in 1.5.2.\n\nDo not use 1.5.1.\n\n### Fixed\n\n- Removed PHP 7 code\n\n## 1.5.0 - 2018-12-30\n\n### Added\n\n- Support for `nyholm/psr7` version 1.0.\n- `ClassDiscovery::safeClassExists` which will help Magento users.\n- Support for HTTPlug 2.0\n- Support for Buzz 1.0\n- Better error message when nothing found by introducing a new exception: `NoCandidateFoundException`.\n\n### Fixed\n\n- Fixed condition evaluation, it should stop after first invalid condition.\n\n## 1.4.0 - 2018-02-06\n\n### Added\n\n- Discovery support for nyholm/psr7\n\n## 1.3.0 - 2017-08-03\n\n### Added\n\n- Discovery support for CakePHP adapter\n- Discovery support for Zend adapter\n- Discovery support for Artax adapter\n\n## 1.2.1 - 2017-03-02\n\n### Fixed\n\n- Fixed minor issue with `MockClientStrategy`, also added more tests.\n\n## 1.2.0 - 2017-02-12\n\n### Added\n\n- MockClientStrategy class.\n\n## 1.1.1 - 2016-11-27\n\n### Changed\n\n- Made exception messages clearer. `StrategyUnavailableException` is no longer the previous exception to `DiscoveryFailedException`.\n- `CommonClassesStrategy` is using `self` instead of `static`. Using `static` makes no sense when `CommonClassesStrategy` is final.\n\n## 1.1.0 - 2016-10-20\n\n### Added\n\n- Discovery support for Slim Framework factories\n\n## 1.0.0 - 2016-07-18\n\n### Added\n\n- Added back `Http\\Discovery\\NotFoundException` to preserve BC with 0.8 version. You may upgrade from 0.8.x and 0.9.x to 1.0.0 without any BC breaks.\n- Added interface `Http\\Discovery\\Exception` which is implemented by all our exceptions\n\n### Changed\n\n- Puli strategy renamed to Puli Beta strategy to prevent incompatibility with a future Puli stable\n\n### Deprecated\n\n- For BC reasons, the old `Http\\Discovery\\NotFoundException` (extending the new exception) will be thrown until version 2.0\n\n\n## 0.9.1 - 2016-06-28\n\n### Changed\n\n- Dropping PHP 5.4 support because we use the ::class constant.\n\n\n## 0.9.0 - 2016-06-25\n\n### Added\n\n- Discovery strategies to find classes\n\n### Changed\n\n- [Puli](http://puli.io) made optional\n- Improved exceptions\n- **[BC] `NotFoundException` moved to `Http\\Discovery\\Exception\\NotFoundException`**\n\n\n## 0.8.0 - 2016-02-11\n\n### Changed\n\n- Puli composer plugin must be installed separately\n\n\n## 0.7.0 - 2016-01-15\n\n### Added\n\n- Temporary puli.phar (Beta 10) executable\n\n### Changed\n\n- Updated HTTPlug dependencies\n- Updated Puli dependencies\n- Local configuration to make tests passing\n\n### Removed\n\n- Puli CLI dependency\n\n\n## 0.6.4 - 2016-01-07\n\n### Fixed\n\n- Puli [not working](https://twitter.com/PuliPHP/status/685132540588507137) with the latest json-schema\n\n\n## 0.6.3 - 2016-01-04\n\n### Changed\n\n- Adjust Puli dependencies\n\n\n## 0.6.2 - 2016-01-04\n\n### Changed\n\n- Make Puli CLI a requirement\n\n\n## 0.6.1 - 2016-01-03\n\n### Changed\n\n- More flexible Puli requirement\n\n\n## 0.6.0 - 2015-12-30\n\n### Changed\n\n- Use [Puli](http://puli.io) for discovery\n- Improved exception messages\n\n\n## 0.5.0 - 2015-12-25\n\n### Changed\n\n- Updated message factory dependency (php-http/message)\n\n\n## 0.4.0 - 2015-12-17\n\n### Added\n\n- Array condition evaluation in the Class Discovery\n\n### Removed\n\n- Message factories (moved to php-http/utils)\n\n\n## 0.3.0 - 2015-11-18\n\n### Added\n\n- HTTP Async Client Discovery\n- Stream factories\n\n### Changed\n\n- Discoveries and Factories are final\n- Message and Uri factories have the type in their names\n- Diactoros Message factory uses Stream factory internally\n\n### Fixed\n\n- Improved docblocks for API documentation generation\n\n\n## 0.2.0 - 2015-10-31\n\n### Changed\n\n- Renamed AdapterDiscovery to ClientDiscovery\n\n\n## 0.1.1 - 2015-06-13\n\n### Fixed\n\n- Bad HTTP Adapter class name for Guzzle 5\n\n\n## 0.1.0 - 2015-06-12\n\n### Added\n\n- Initial release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.056640625,
          "content": "Copyright (c) 2015-2016 PHP HTTP Team <team@php-http.org>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.68359375,
          "content": "# HTTPlug Discovery\n\n[![Latest Version](https://img.shields.io/github/release/php-http/discovery.svg?style=flat-square)](https://github.com/php-http/discovery/releases)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE)\n[![Tests](https://github.com/php-http/discovery/actions/workflows/ci.yml/badge.svg?branch=1.x)](https://github.com/php-http/discovery/actions/workflows/ci.yml?query=branch%3A1.x)\n[![Code Coverage](https://img.shields.io/scrutinizer/coverage/g/php-http/discovery.svg?style=flat-square)](https://scrutinizer-ci.com/g/php-http/discovery)\n[![Quality Score](https://img.shields.io/scrutinizer/g/php-http/discovery.svg?style=flat-square)](https://scrutinizer-ci.com/g/php-http/discovery)\n[![Total Downloads](https://img.shields.io/packagist/dt/php-http/discovery.svg?style=flat-square)](https://packagist.org/packages/php-http/discovery)\n\n**This library provides auto-discovery and auto-installation of well-known PSR-17, PSR-18 and HTTPlug implementations.**\n\n\n## Install\n\nVia Composer\n\n``` bash\ncomposer require php-http/discovery\n```\n\n\n## Usage as a library author\n\nPlease see the [official documentation](http://php-http.readthedocs.org/en/latest/discovery.html).\n\nIf your library/SDK needs a PSR-18 client, here is a quick example.\n\nFirst, you need to install a PSR-18 client and a PSR-17 factory implementations.\nThis should be done only for dev dependencies as you don't want to force a\nspecific implementation on your users:\n\n```bash\ncomposer require --dev symfony/http-client\ncomposer require --dev nyholm/psr7\n```\n\nThen, you can disable the Composer plugin embeded in `php-http/discovery`\nbecause you just installed the dev dependencies you need for testing:\n\n```bash\ncomposer config allow-plugins.php-http/discovery false\n```\n\nFinally, you need to require `php-http/discovery` and the generic implementations\nthat your library is going to need:\n\n```bash\ncomposer require 'php-http/discovery:^1.17'\ncomposer require 'psr/http-client-implementation:*'\ncomposer require 'psr/http-factory-implementation:*'\n```\n\nNow, you're ready to make an HTTP request:\n\n```php\nuse Http\\Discovery\\Psr18Client;\n\n$client = new Psr18Client();\n\n$request = $client->createRequest('GET', 'https://example.com');\n$response = $client->sendRequest($request);\n```\n\nInternally, this code will use whatever PSR-7, PSR-17 and PSR-18 implementations\nthat your users have installed.\n\n\n## Usage as a library user\n\nIf you use a library/SDK that requires `php-http/discovery`, you can configure\nthe auto-discovery mechanism to use a specific implementation when many are\navailable in your project.\n\nFor example, if you have both `nyholm/psr7` and `guzzlehttp/guzzle` in your\nproject, you can tell `php-http/discovery` to use `guzzlehttp/guzzle` instead of\n`nyholm/psr7` by running the following command:\n\n```bash\ncomposer config extra.discovery.psr/http-factory-implementation GuzzleHttp\\\\Psr7\\\\HttpFactory\n```\n\nThis will update your `composer.json` file to add the following configuration:\n\n```json\n{\n    \"extra\": {\n        \"discovery\": {\n            \"psr/http-factory-implementation\": \"GuzzleHttp\\\\Psr7\\\\HttpFactory\"\n        }\n    }\n}\n```\n\nDon't forget to run `composer install` to apply the changes, and ensure that\nthe composer plugin is enabled:\n\n```bash\ncomposer config allow-plugins.php-http/discovery true\ncomposer install\n```\n\n\n## Testing\n\n``` bash\ncomposer test\n```\n\n\n## Contributing\n\nPlease see our [contributing guide](http://docs.php-http.org/en/latest/development/contributing.html).\n\n\n## Security\n\nIf you discover any security related issues, please contact us at [security@php-http.org](mailto:security@php-http.org).\n\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE) for more information.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.921875,
          "content": "{\n    \"name\": \"php-http/discovery\",\n    \"description\": \"Finds and installs PSR-7, PSR-17, PSR-18 and HTTPlug implementations\",\n    \"type\": \"composer-plugin\",\n    \"license\": \"MIT\",\n    \"keywords\": [\"http\", \"discovery\", \"client\", \"adapter\", \"message\", \"factory\", \"psr7\", \"psr17\"],\n    \"homepage\": \"http://php-http.org\",\n    \"authors\": [\n        {\n            \"name\": \"Márk Sági-Kazár\",\n            \"email\": \"mark.sagikazar@gmail.com\"\n        }\n    ],\n    \"provide\": {\n        \"php-http/async-client-implementation\": \"*\",\n        \"php-http/client-implementation\": \"*\",\n        \"psr/http-client-implementation\": \"*\",\n        \"psr/http-factory-implementation\": \"*\",\n        \"psr/http-message-implementation\": \"*\"\n    },\n    \"require\": {\n        \"php\": \"^7.1 || ^8.0\",\n        \"composer-plugin-api\": \"^1.0|^2.0\"\n    },\n    \"require-dev\": {\n        \"composer/composer\": \"^1.0.2|^2.0\",\n        \"graham-campbell/phpspec-skip-example-extension\": \"^5.0\",\n        \"php-http/httplug\": \"^1.0 || ^2.0\",\n        \"php-http/message-factory\": \"^1.0\",\n        \"phpspec/phpspec\": \"^5.1 || ^6.1 || ^7.3\",\n        \"symfony/phpunit-bridge\": \"^6.4.4 || ^7.0.1\",\n        \"sebastian/comparator\": \"^3.0.5 || ^4.0.8\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Http\\\\Discovery\\\\\": \"src/\"\n        },\n        \"exclude-from-classmap\": [\n            \"src/Composer/Plugin.php\"\n        ]\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"spec\\\\Http\\\\Discovery\\\\\": \"spec/\"\n        }\n    },\n    \"scripts\": {\n        \"test\": [\n            \"vendor/bin/phpspec run\",\n            \"vendor/bin/simple-phpunit --group NothingInstalled\"\n        ],\n        \"test-ci\": \"vendor/bin/phpspec run -c phpspec.ci.yml\"\n    },\n    \"extra\": {\n        \"class\": \"Http\\\\Discovery\\\\Composer\\\\Plugin\",\n        \"plugin-optional\": true\n    },\n    \"conflict\": {\n        \"nyholm/psr7\": \"<1.0\",\n        \"zendframework/zend-diactoros\": \"*\"\n    },\n    \"prefer-stable\": true,\n    \"minimum-stability\": \"beta\"\n}\n"
        },
        {
          "name": "phpspec.ci.yml",
          "type": "blob",
          "size": 0.322265625,
          "content": "suites:\n    discovery_suite:\n        namespace: Http\\Discovery\n        psr4_prefix: Http\\Discovery\nformatter.name: pretty\nbootstrap: spec/autoload.php\nextensions:\n    FriendsOfPhpSpec\\PhpSpec\\CodeCoverage\\CodeCoverageExtension: ~\n    Akeneo\\SkipExampleExtension: ~\ncode_coverage:\n    format: clover\n    output: build/coverage.xml\n"
        },
        {
          "name": "phpspec.yml.dist",
          "type": "blob",
          "size": 0.193359375,
          "content": "suites:\n    discovery_suite:\n        namespace: Http\\Discovery\n        psr4_prefix: Http\\Discovery\nformatter.name: pretty\nbootstrap: spec/autoload.php\nextensions:\n    Akeneo\\SkipExampleExtension: ~\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.5078125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit bootstrap=\"./vendor/autoload.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\">\n\n    <testsuites>\n        <testsuite name=\"HTTPlug unit tests\">\n            <directory suffix=\"Test.php\">./tests</directory>\n        </testsuite>\n    </testsuites>\n\n    <groups>\n        <exclude>\n            <group>NothingInstalled</group>\n        </exclude>\n    </groups>\n</phpunit>\n"
        },
        {
          "name": "spec",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}