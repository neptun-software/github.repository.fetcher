{
  "metadata": {
    "timestamp": 1736712164501,
    "page": 814,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "SwooleDistributed/SwooleDistributed",
      "stars": 1385,
      "defaultBranch": "v3",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0947265625,
          "content": "src/_home_SwooleDistributed_start_swoole_dispatch.php.pid\n*.pid\n*.log\nvendor\n.idea\n.vscode\n*.lock"
        },
        {
          "name": "CHANGERLOG.md",
          "type": "blob",
          "size": 13.7236328125,
          "content": "# CHANGELOG\n## 2.4.6\n1. 修改了绝大多数由于集群重构导致的API报错问题\n2. 移除了集群SESSION（设计存在问题，有待优化，暂时移除）\n3. 增加了集群订阅/发布功能\n\n## 2.4.7\n1. 修改了IPack，IRoute的errorHandle($e, $fd)接口，将异常传入进去\n2. 支持MQTT规则的订阅树\n3. 现在访问到被保护或者私有的控制器方法不会报错，会直接转到defaultMethod中去\n4. 修复了NonJsonPack的一个缓存bug\n\n## 2.4.8\n1. 修复Miner中Join别名问题\n2. Consul.php增加datacenter配置，可以设置数据中心名称，默认为dc1\n3. 修复HttpServer中静态默认页面存在BUG\n4. fileHeader增加xhtml类型的支持\n5. 一些轻微问题的修复\n\n## 2.4.9\n1.移除了些依赖，主要是清除了框架对protobuf的依赖，需要的可以自己在项目的composer中加上，同样也移除了默认生成的代码，和运行命令。\n```json\n\"protobuf-php/protobuf\": \"~0.1.2\",\n\"protobuf-php/protobuf-plugin\": \"^0.1.2\"\n```\n2.移除了ds扩展的强制依赖，没有ds扩展也能正常运行，可以通过下面命令安装\n```\nsudo pecl install ds \n```\n3.bussiness.php中新增了全局关闭gzip的配置，可以通过设置gzip_off为true，关闭全局http_gzip。即使在输出时设置gzip为true也无法进行gzip压缩。\n```\n$config['http']['gzip_off'] = false;\n```\n4.server.php配置中dispatch_mode默认设置改为了2\n\n5.server.php配置中新增了max_connection，最大连接数越大消耗的内存越大，这个数字和代码中uid_fd_table有密切联系,不像以前为65536\n\n6.一些内部命名的修改\n\n7.IPack接口轻微修改pack方法增加了一个名为topic的参数，用于订阅发布时的识别\n\n8.单元测试中的多参数时解析bug修复\n\n9.订阅发布的规则修改为和MQTT的规则一致\n\n10.存在一个效率问题的修复，qps约提升了30%\n\n11.MQTT服务器（暂未提供源码）\n\n## 2.4.10\n1.Mysql,Redis协程性能调优，现在协程的性能可以达到异步回调的95%\n\n2.Loader修改，现在可以使用class名称进行loader\n\n```php\n$this->loader->model(TestModel::class, $this);\n```\n\n3.Model支持分级，可以在Models目录下新建新的子目录。\n\n4.提供了sleepCoroutine命令，可以通过这个代替sleep,改方法不会堵塞进程\n```\nyield sleepCoroutine(1000);\n```\n## 2.4.11\n1.Controller以及Model的initialization均已支持协程，通过在initialization中抛出异常会立即中断后面所有的函数执行。\n\n2.Mysql构建器会在某种特殊情况下导致请求间出现sql语句扰乱的bug，现在已经修复。\n\n3.创建新的Mysql连接池在Controller以及Model通过get_instance()->getAsynPool()使用时需要在initialization方法中通过installMysqlPool命令进行安装\n```php\n$this->installMysqlPool($this->mysql_pool);\n```\n\n4.修复了一个RedisRoute的bug，该bug导致无参数的redis请求会报错。\n\n5.修复了协程超时报错使用try捕获时控制台依旧会打印报错信息的问题。\n\n6.PortManager可以在Ports.php配置中设置端口专用的回调地址。\n\n## 2.4.12\n1.Mysql（task）同步模式也可以使用dump打印信息\n\n2.Controller可以添加文件夹，修改了默认NormalRoute支持多级访问\n```\nhttp://localhost:8081/V1/AppController/test\n```\n比如V1就是一个文件夹，默认访问的是app\\V1\\AppController::test();\n\n\n## 2.4.13\n1.EventDispatcher支持集群发布消息\n\n2.ProcessManager针对同类型进程进行标识\n\n3.HttpInput getAllPostGet接口行为变更\n\n4.docker化部署支持性改良\n\n# 2.5.0\n1.已不再依赖pid文件，通过新的方式识别SD进程，server.php新增name字段，不同name代表不同服务器，\n一台机器不允许启动多个相同name的服务器\n\n2.config支持文件夹区分，通过设置SD_CONFIG_DIR环境变量来识别文件夹\n\n3.consul.php配置文件变更，新增client_addr字段默认为127.0.0.1只开放本地访问，node_name字段现在可以不填，\n如果不填写则使用机器名，可通过SD_NODE_NAME环境变量来设置node_name。新增bind_net_dev字段，移除bind_addr字段，\n默认为eth0网卡名。\n\n4.对docker友好，提供SD运行环境的docker镜像registry.cn-hangzhou.aliyuncs.com/youwoxing/swoole\n\n5.提供docker编排模板及其集群环境搭建实例https://github.com/tmtbe/swoole-docker\n\n# 2.5.1\n1.AMQP异步任务处理系统\n\n2.MQTT简易服务器\n\n# 2.5.2\n1.Mysql支持RAW模式\n```apple js\n $selectMiner = $this->mysql_pool->dbQueryBuilder->select('*')->from('account');\n $selectMiner = $selectMiner->where('', '(status = 1 and dec in (\"ss\", \"cc\")) or name = \"kk\"', Miner::LOGICAL_RAW);\n```\n2.修复onOpenServiceInitialization中不能使用mysql的bug\n\n# 2.5.3\nSD框架正式支持SSL。\n通过Ports.php配置文件配置HTTPS，WSS。\n```\n$config['ports'][] = [\n    'socket_type' => PortManager::SOCK_HTTP\n    'socket_name' => '0.0.0.0',\n    'socket_port' => 8081,\n    'pack_tool' => 'LenJsonPack',\n    'route_tool' => 'NormalRoute',\n    'socket_ssl' => true,\n    'ssl_cert_file' => $ssl_dir . '/ssl.crt',\n    'ssl_key_file' => $ssl_dir . '/ssl.key',\n];\n```\n# 2.5.4\n设计问题废除了AppServer中的onUidCloseClear方法。\n\n增加了getCloseControllerName与getCloseMethodName方法。\n\n```\n    /**\n     * @return string\n     */\n    public function getCloseControllerName()\n    {\n        return 'AppController';\n    }\n\n    /**\n     * @return string\n     */\n    public function getCloseMethodName()\n    {\n        return 'onClose';\n    }\n```\n通过设置AppServer中的控制器与方法名可以将连接断开的消息转发到对应的控制器方法中。\n\n如上，如果连接断开，会转到AppController中的onClose方法，这里不需要填写方法前缀。\n\n# 2.5.5\n1.getCloseControllerName改名为getEventControllerName\n\n2.添加getConnectMethodName\n\n# 2.6.0-beta\n这是一个测试版本，增加了中间件，和深度优化了协程调度。\n1.ports.php中添加了middlewares字段可以自定义中间件模块\n\n2.修复了process中使用协程的问题\n\n\n# 2.6.1-beta\n1.Process中start方法改为了虚函数，不需要被继承了，start方法中也可以使用协程。\n\n2.AppServer开启debug模式可以看到调用链\n\n3.报错会打印调用链的运行状态\n\n4.增加了基础的AOP模式\n\n# 2.6.1\n正式版本，更新此版本需要重新设置配置文件，主要在于ports.php配置需要添加中间件。\n\n1.AppServer开启debug模式可以看到请求调用链,贯穿请求过程中的强大Context\nhttp://docs.youwoxing.net/425321\n\n2.AOP的支持\n\n3.Controller和Model开放__construct，可以设置特殊AOP代理\n\n4.协程调度器优化\n\n5.添加中间件处理模块\nhttp://docs.youwoxing.net/425118\n\n6.默认添加了上海时区\n\n7.server.php中增加了allow_ServerController，设置为false时将不能访问Server包下的Controller，建议线上填写false\n\n8.fix ws多端口报错bug\n\n9.fix 循环loader引发的死循环问题\n\n10.fix 用户进程调用mysql，redis的错误问题\n\n11.fix 细微bug\n\n# 2.6.2\n1.修复AMQPTTASK bug\n\n2.修复MQTT Client bug\n\n3.修复CONSUL 配置 bug\n\n# 2.6.3\n1.修复close，connect回调无法执行的bug\n\n2.默认使用swoole的websocket握手规则，如需打开自定义握手在AppServer构造函数中添加setCustomHandshake(true)\n\n# 2.6.4\n1.修复不开启Mysql时的报错问题\n\n2.修复websocket端口不能兼容使用http中间件的问题\n\n3.修复了GrayLog日志插件配置上的bug\n\n4.增加了coroutineGetAllUids方法，可以获取到所有在线的uid，支持集群\n\n# 2.6.5\n1.Server下的例子均移到App下了\n\n2.ports.php配置增加了method_prefix，event_controller_name，close_method_name，connect_method_name，bussiness.php配置去除了相关配置，详情见http://docs.youwoxing.net/399763\n\n3.优化服务器信息打印\n\n4.去除了AppServer中的setDebugMode函数，debug模式改为命令行\n```\nphp start_swoole_server.php start -de（或者-debug）\n```\n\n5.命令行debug模式增加了过滤参数--f,比如下面将只显示包含\"[ip] => 127.0.0.1\"的信息，可以接多个参数，参数间是或的逻辑关系。\n```\nphp start_swoole_server.php start -de --f \"[ip] => 127.0.0.1\"\n```\n\n6.协程task现在可以捕获到task抛出的异常了\n\n7.同步模式Task出错会有详细的报错\n\n8.主题订阅树支持$SYS标识\n\n# 2.7.0-beta\n\n请注意这是一个测试版本，包含了一些前瞻性的功能，虽然经过了初步的测试，但仍然有可能会导致系统BUG的出现\n\n1.“$SYS”服务器监控专用订阅主题，开发者可以订阅$SYS主题获得服务器监控信息\n\n2.服务器间的RPC由单向通知改为双向交互\n\n3.增加Timer定时器，该定时器在多进程中共享，A进程创建了定时B进程可以取消定时，可以在Controller，Model中使用，但请注意有严格使用方式\n的规范，使用不当容易导致数据错乱。\n\n4.UID现在不限制为int，可以使用String。\n\n5.Controller的onExceptionHandle方法参数类型由Exception改为了Throwable\n\n6.协程逻辑进一步得到了优化\n\n7.一些细节方面的检修\n\n# 2.7.0\n正式版本\n\n1.“$SYS”服务器监控专用订阅主题，开发者可以订阅$SYS主题获得服务器监控信息 \n\n2.服务器间的RPC由单向通知改为双向交互\n\n3.UID现在不限制为int，可以使用String。\n\n4.Controller的onExceptionHandle方法参数类型由Exception改为了Throwable\n\n5.协程逻辑进一步得到了优化\n\n6.增加Timer定时器，该定时器在多进程中共享\n\n7.各进程间，用户进程和worker进程间均可以进行RPC通讯\n\n# 2.7.1\n1.修复websocket进行reload的时候会丢失request信息的问题\n\n2.修复了setDebug导致报错的问题\n\n3.修复了Task中抛出异常有机会导致报错的问题\n\n4.修复了监控服务器运行时间统计错误的问题\n\n# 2.7.2\n1.修复inotify在虚拟机不工作的问题\n\n2.修复了task的一个内存泄露的隐患\n\n3.task无论是否有返回始终都会有回调\n\n# 2.7.3\n1.修复Cache存在的bug\n\n2.后台监控整理（VIP）\n\n热烈庆祝群主猫咖店开张～留个纪念，来深圳撸猫啊\n\n# 2.7.3.1\n1.修复Cache存在的bug\n\n2.后台监控整理（VIP）\n\n热烈庆祝群主猫咖店开张～留个纪念，来深圳撸猫啊\n\n# 2.7.3.3\n1.backstage可以设置bin_path\n\n2.Install可以新增文件\n\n# 2.7.4\n1.增加CatCache，仿Redis可落地高速缓存，可以在某些情况下代替Redis，访问QPS比Redis高。可以配置catCache.php,设置自动落地表的时间和位置。\n可以通过设置CatCache的RPC代理，实现自己的缓存方法调用。\n\n2.完善Process进程管理\n\n3.修复一些bug\n\n# 2.7.5\n1.增加了TimerCallBack，通过CatCache和EventDispatch实现了按时间触发的消息队列，重启服务器可恢复，使用简单。\n\n需要开启CatCache,延迟调用Model方法。\n```php\n $token = yield TimerCallBack::addTimer(2,TestModel::class,'testTimerCall',[123]);\n $this->http_output->end($token);\n \n public function testTimerCall($value,$token)\n {\n     var_dump($token);\n     TimerCallBack::ack($token);\n }\n```\n\n2.修复了集群下的一些错误。\n\n# 2.7.5.1\n1.新增Actor模型，可创建Actor，加速游戏开发。\n```\n Actor::create(TestActor::class, \"actor\");\n Actor::call(\"actor\", \"test\");\n Actor::call(\"actor\", \"destroy\");\n```\n2.修复404页面http头不对的问题\n\n# 2.7.5.2\n1.完善Actor，支持自动恢复状态\n\n2.修复进程间RPC的一个bug\n\n3.修复EventDispatch的一个bug\n\n# 2.7.5.3\n1.优化定时器\n\n2.优化协程\n\n3.redis的set支持标签\n```php\n$result = yield $this->redis_pool->getCoroutine()->set('testroute', 21,[\"XX\",\"EX\"=>10]);\n```\n# 2.7.6\nActor专版\n\n1.Actor名称重复性检测，集群中不允许出现重名的Actor\n\n2.Actor间可以自由RPC，支持集群\n\n3.Actor中可以使用一切异步客户端，支持协程,可以调用Model，Task\n\n4.Actor支持事务，保证事务执行的顺序\n```php\n$rpc = Actor::getRpc(\"Test2\");\ntry {\n    $beginid = yield $rpc->beginCo();\n    $result = yield $rpc->test1();\n    $result = yield $rpc->test2();\n    //var_dump($result);\n    $result = yield $rpc->test3();\n    //var_dump($result);\n} finally {\n    //var_dump(\"finally end\");\n    $rpc->end();\n}\n```\n5.Actor现在默认会落地存盘，如不手动调用Destroy，重启服务器会自动恢复Actor，可以删除cache文件夹清理。\n\n# 2.7.7-beta\n1.需要PHP7.1.6以上版本\n\n2.依赖项全部升级到最新\n\n3.全新控制台，用户可以自定义控制台命令，app/Console下命令将会自动加载\n\n# 2.7.7\n正式版，已经历线上产品验证，稳定\n\n# 2.7.8\n1.修复bug\n\n2.business配置支持路由到控制器\n```php\n'default' =>\n        [\n            'index' => ['TestController', 'test'] //转到控制器\n        ]\n    ,\n```\n通过传递给index一个数组即可路由到TestController的test方法，记住这里方法不需要加前缀\n\n# 3.0-beta\n\nSD3.0版本beta版本，支持swoole2.0协程，需要安装swoole2.0扩展，编译命令如下：\n```\n./configure --enable-async-redis  --enable-openssl --enable-coroutine\n```\n2.0版本迁移3.0需要做的修改，非常简单\n\n1.去除业务代码中所有的yield字样\n\n2.如果使用了协程超时，需要修改为这样，通过set回调函数设置协程的参数\n```php\n$data = EventDispatcher::getInstance()->addOnceCoroutine('unlock', function (EventCoroutine $e) {\n            $e->setTimeout(10000);\n        });\n```\n\n请注意这是一个测试版本，并没达到线上运行水平，已知框架问题和swoole2.0扩展问题还在积极修复。\n\n# 3.0.2\n3.0正式版，需要swoole扩展版本为2.1.1\n\n# 3.1.0\n1.mysql改版\n\n2.增加Whoops\n\n3.模板引擎更换为Laravel-blade\n\n# 3.1.1\n1.Task调用直接返回结果不需要使用coroutineSend\n\n2.Controller自动destory，不再需要手动执行了，send命令也没有autoDestory参数了\n\n3.Controller增加interrupt指令用于中断后面执行的代码\n\n4.增加了一个错误搜集的模块error.php需要结合钉钉机器人实现错误推送"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.060546875,
          "content": "     Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright Jincheng.Zhang [tmtbe@163.com]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.9697265625,
          "content": "# SwooleDistributed\n官网：http://sd.youwoxing.net\n今年年底历时2年多的迭代，这是SD框架硕果满满的一年，通过不断的迭代和改进SD框架已经在圈内有良好的口碑，不少新生的框架借鉴了SD的设计思想，SD框架也被不少创业型公司和大型企业使用。\n## SDHelp\nSDHELP是SD专属的开发者工具，可以实现断点调试，代码覆盖率报告等功能。\nhttps://github.com/SwooleDistributed/SDHelper-Bin\n ![](https://box.kancloud.cn/e72f48d067f38325e8bce143ae03263c_965x705.png)\n ![](https://box.kancloud.cn/f1c6d430270cb6aecd669ca5c65424c5_962x672.png)\n ![](https://box.kancloud.cn/460cc43f50afe029e6dcb424d1dd3f64_963x672.png)\n ![](https://box.kancloud.cn/2bbd1490cb947b29cc566c1d07f26989_966x690.png)\n ![](https://box.kancloud.cn/aab4cb457dae925226a59a71c8a3d819_964x690.png)\n## SD框架到底是什么技术\nSD框架全称SwooleDistributed，从名称上看一个是Swoole一个是Distributed，他是基于Swoole扩展的可以分布式部署的应用服务器框架。\n借助于PHP的高效开发环境，Swoole的高性能异步网络通信引擎，以及其他的高可用的扩展和工具，SD框架提供给广大开发者一个稳定的高效的而且功能强大的应用服务器框架。\n\n## 入门成本\n老实的说相对比目前热门的FPM框架来说，SD的入门成本相对还是比较高的，因为设计理念不同以及和传统PHP-FPM环境完全不同的运行环境，对于长时间使用LAMP（LANP）技术的开发人员来说会有一段时间的适应期，如果开发应用简单涉及到的系统复杂度低，那么SD上手还是比较容易，根据简单的例子和文档几乎立即就能开启SD的探索之旅，但是如果开发的是复杂的应用那么SD包含的众多组件还是需要你慢慢熟悉上手的。\n\n## SD框架到底包含哪些强大的功能呢\n我们这里列举下SD提供的各种各样的功能以及模块组件\n* 混合协议\n\tSD框架支持长连接协议TCP，WebSocket，短连接协议HTTP，以及UDP。\n    通过配置开放不同的端口开发者可以轻松管理不同的协议，并且可以共用一套业务代码，当然你可以通过智能路由进行代码的隔离。\n    长连接可以配置不同的数据传输协议，比如二进制协议文本协议等等，通过框架提供的封装器解包器接口可以自定义各种各种的协议封装，并且各种协议之间可以自动转换，比如你通过广播发送一个信息，该信息流向不同客户端，客户端间采用不同协议，那么框架会根据不同的端口自动转换不同的协议封装。\n    你也可以通过Http给所有长连接客户端发送推送消息，类似这种混合协议协作的业务在SD框架上会异常简单。\n* MVC以及智能路由\n\t框架的设计是MVC架构，其中每一个层级都可以继续划分子层级，开发者可以将Controller继续分层通过不同文件夹进行管理，也可以将Model进行细分，划分为业务层和数据层，这都看开发者自身的系统设计。智能路由将处理解包器解包后的数据，负责将这些数据传递到Controller层。\n* 中间件\n\tSD框架还提供了中间件，中间件可以对流入的数据进行处理，比如清理异常数据，修改数据，流量统计，搜集日志等功能。中间件可以设置多个，他们和端口进行绑定。\n* 对象池\n\tSD框架内大多数的对象都使用了对象池技术，对象池技术有利于系统内存的稳定，减少GC的次数，提高系统的运行效率，事实证明对象池对系统稳定做出了极大的贡献，开发者也可以使用这一套对象池技术，增加对对象的复用，减少GC和NEW的频率，对系统毛刺现象和内存泄露方面都有很大的稳定性提升。\n* 异步客户端以及连接池\n\tMysql，Redis，Http客户端，Tcp客户端，等等其他更为复杂的客户端，在SD框架中均为异步的模式，异步解决了系统整体的并发能力，但异步客户端需要提供连接池维持，SD框架提供了连接池，开发者不需要自己管理连接池，只需要使用即可。\n* 协程\n\t异步事件回调解决的是并发性能，但造成的是业务代码的混乱。SD框架提供了协程解决了这一问题，通过yield关键字提供对异步的同步写法，消除了业务书写上的大量回调嵌套，你可以通过yield+同步的写法实现异步的性能。\n    协程提供了一整套完整的体系，包括超时，异常，休眠，多路选择，以及创建用户协程等等功能。\n* 定时任务\n\t顾名思义定时执行的任务。  \n* 任务投递\n\t支持将耗时任务投递到Task进程。\n* 自动Reload\n\t可以开启框架的自动Reload功能，这样代码修改会被立即响应。\n    \n**上面描述的都是一些基础功能，大家开发应用时经常用到的，那么下面则是一些高级功能。**\n\n* 集群以及微服务\n\t框架提供集群部署，通过开启集群开关，部署Consul工具服务器，我们就可以开启集群之旅，框架中消息功能都是支持集群环境的。通过暴露API，监听API，我们可以实现微服务，微服务中我们又提供了健康监控，熔断，超时，负载均衡，请求迁移等等功能。\n    集群采用的是对等网络，没有中间节点，没有单点隐患，设计理念如下图所示。\n    ![image](https://raw.githubusercontent.com/tmtbe/SwooleDistributed/v2/screenshots/k3.png)\n\n* 订阅与发布\n\tSD提供的订阅发布功能也是支持集群环境，并且它严格的按照MQTT所定义的订阅发布规范，并且实现了所有的功能。这恐怕是最好最优秀的订阅发布功能了。\n* 事件派发\n\t跨进程跨服务器的事件派发功能，很多SD框架的基础设施都是基于这个搭建的。\n* 用户进程管理以及进程间RPC\n\tSD框架重新封装了用户进程，开发者可以启动自己的用户进程，用户进程可以是异步的也可以是同步的，也是支持各种连接池和协程，用户进程的用处很多，同样框架也支持用户进程和Worker进程间互相RPC调用。\n* 集群下的定时任务\n\t通过Consul可以设置定时任务，并且会同步到集群所有的服务器上去执行，集群服务器会选举出一个Leader，可以通过获取是否是Leader来决定这个任务是否被执行。\n* Context上下文\n\t这个是在消息处理整个流程中被共享的上下文，很实用，很方便。\n    \n**接下来介绍的是SD特色组件**\n* 异步AMQP客户端以及分布式任务系统\n\t消息队列协议AMQP，框架提供了一个支持AMQP协议的异步客户端，可以和RabbitMQ联动，通过框架提供的分布式任务组件，可以搭建分布式任务系统。\n* 异步MQTT客户端\n\t异步的MQTT客户端可以和MQTT服务实现订阅与发布\n* MQTT简易集群服务器\n\t支持QOS0级别的简易MQTT服务器，支持集群部署。\n* 服务器监控系统\n\t提供了一个服务器监控后台，可以对集群进行监控，也可以监控某一台服务器的具体运行状况。\n    下面是一些截图\n    ![](https://raw.githubusercontent.com/tmtbe/SwooleDistributed/v2/screenshots/screenshot_1511494439977.png)\n    ![](https://raw.githubusercontent.com/tmtbe/SwooleDistributed/v2/screenshots/screenshot_1511494520746.png)\n    ![](https://raw.githubusercontent.com/tmtbe/SwooleDistributed/v2/screenshots/screenshot_1511494552885.png)\n    ![](https://raw.githubusercontent.com/tmtbe/SwooleDistributed/v2/screenshots/screenshot_1511494572162.png)\n    ![](https://raw.githubusercontent.com/tmtbe/SwooleDistributed/v2/screenshots/screenshot_1511494591862.png)\n## SD框架远远不止现在\n\nSD框架一直在高速发展中，有更多开发者的参与才会有更好的未来。\n附带SD框架的文档以及官网\n[官网](http://sd.youwoxing.net/)\n[文档](http://docs.youwoxing.net/)\n[GitHub](https://github.com/tmtbe/SwooleDistributed)\n如果你喜欢，请打个星星支持下～\n\n\nHigh performance, high concurrency, PHP asynchronous distributed framework,power by ext-swoole\n\nDevelopment communication QQ-group：569037921  \n\nSimple websocket case\n\nChat room: https://github.com/tmtbe/SD-todpole\n\nLive Demo: http://114.55.253.83:8081/\n\nThe official website：http://sd.youwoxing.net\n\nDevelopment document：http://docs.youwoxing.net\n\nInstructional video：http://v.qq.com/boke/gplay/337c9b150064b5e5bcfe344f11a106c5_m0i000801b66cfv.html\n\n## Install\nYou can install via composer\n\nAutoload must specify `app` and `test`.\n```\n{\n  \"require\": {\n    \"tmtbe/swooledistributed\":\">2.0.0\"\n  },\n \"autoload\": {\n    \"psr-4\": {\n      \"app\\\\\": \"src/app\",\n      \"test\\\\\": \"src/test\"\n    }\n  }\n}\n```\nThen execute the following code in the root directory (the vendor higher directory)\n```\nphp vendor/tmtbe/swooledistributed/src/Install.php\n```\nThe server can be executed in the bin at the end of the installation.\n\n## Advantage\n\n1.High performance and high concurrency, asynchronous event driven\n\n2.HttpClient, client, Mysql, Redis connection pooling\n\n3.Timed task system\n\n4.Coroutine Support\n\n5.Using object pooling mode, optimizing memory allocation and GC\n\n6.Many asynchronous clients, such as MQTT, AMQP, etc.\n\n7.Support cluster deployment\n\n8.User process management\n\n9.Support multi port, multi protocol, automatic conversion between protocols\n\n10.Micro service management based on Consul\n\n11.Automatic discovery of cluster nodes based on Consul\n\n12.Support pubish-subscribe mode\n\n13.MQTT Server\n\n14.Asynchronous operating system\n\n## Architecture diagram\n\n### Class inheritance structure\n ![image](https://raw.githubusercontent.com/tmtbe/SwooleDistributed/v2/screenshots/k1.png)\n\n### Process structure\n ![image](https://raw.githubusercontent.com/tmtbe/SwooleDistributed/v2/screenshots/k2.png)\n \n### Cluster structure\n ![image](https://raw.githubusercontent.com/tmtbe/SwooleDistributed/v2/screenshots/k3.png)\n## Donation\nIf you like the project, I hope you donate this project so that the project will get better development, \nThank you.\n\nAlipay：\n\n ![image](https://raw.githubusercontent.com/tmtbe/SwooleDistributed/v2/screenshots/pay.png)\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.8369140625,
          "content": "{\n  \"require\": {\n    \"php\": \">=7.1.6\",\n    \"monolog/monolog\": \"@stable\",\n    \"hassankhan/config\": \"@stable\",\n    \"voku/anti-xss\": \"@stable\",\n    \"illuminate/view\": \"^5.1\",\n    \"filp/whoops\": \"@stable\",\n    \"graylog2/gelf-php\": \"@stable\",\n    \"php-amqplib/php-amqplib\": \"@stable\",\n    \"php-ds/php-ds\": \"@stable\",\n    \"symfony/console\": \"@stable\"\n  },\n  \"autoload\": {\n    \"psr-4\": {\n      \"Server\\\\\": \"src/Server\",\n      \"app\\\\\": \"src/app\",\n      \"test\\\\\": \"src/test\"\n    },\n    \"files\": [\n      \"src/Server/helpers/Common.php\"\n    ]\n  },\n  \"authors\": [\n    {\n      \"name\": \"tmtbe\",\n      \"email\": \"896369042@qq.com\",\n      \"homepage\": \"https://github.com/tmtbe\"\n    }\n  ],\n  \"name\": \"tmtbe/swooledistributed\",\n  \"type\": \"library\",\n  \"keywords\": [\"server\", \"swoole\", \"distributed\"],\n  \"description\": \"In order to develop the api server\",\n  \"license\": \"MIT\"\n}\n"
        },
        {
          "name": "protoGen",
          "type": "tree",
          "content": null
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}