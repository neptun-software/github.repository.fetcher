{
  "metadata": {
    "timestamp": 1736711859111,
    "page": 192,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "artesaos/seotools",
      "stars": 3153,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.5068359375,
          "content": "# This file is for unifying the coding style for different editors and IDEs\n# editorconfig.org\n\nroot = true\n\n[*]\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n# Spaces in coffee\n[**.coffee]\nindent_style = space\nindent_size = 2\n\n[**.js]\nindent_style = space\nindent_size = 2\n\n# Tabs in less\n[**.less]\nindent_style = tab\nindent_size = 2\n\n[**.css]\nindent_style = tab\nindent_size = 2\n\n[**.php]\nindent_style = space\nindent_size = 4\n\n[**.html]\nindent_style = tab\nindent_size = 2"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.412109375,
          "content": "# Ignore all test and documentation for archive\n/.github            export-ignore\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/.editorconfig      export-ignore\n/.scrutinizer.yml   export-ignore\n/.styleci.yml       export-ignore\n/.travis.yml        export-ignore\n/phpunit.xml.dist   export-ignore\n/spec               export-ignore\n/tests              export-ignore\n/docs               export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.431640625,
          "content": "# phpstorm project files\n.idea\n\n# netbeans project files\nnbproject\n\n# zend studio for eclipse project files\n.buildpath\n.project\n.settings\n\n# windows thumbnail cache\nThumbs.db\n\n# composer vendor dir\n/vendor\n\n/composer.lock\n\n# composer itself is not needed\ncomposer.phar\n\n# Mac DS_Store Files\n.DS_Store\n\n# phpunit itself is not needed\nphpunit.phar\n# local phpunit config\n/phpunit.xml\n# phpunit cache\n.phpunit.result.cache\n\n# build files\nbuild/\n"
        },
        {
          "name": ".styleci.yml",
          "type": "blob",
          "size": 0.0693359375,
          "content": "preset: laravel\nfinder:\n  exclude:\n    - \"tests\"\n  name:\n    - \"*.php\"\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.322265625,
          "content": "language: php\n\nphp:\n  - 7.4\n  - 8.0\n  - hhvm\n\nmatrix:\n  fast_finish: true\n  allow_failures:\n    - php: hhvm\n\nbefore_script:\n  - travis_retry composer self-update\n  - travis_retry composer update --no-interaction --prefer-source\n\nscript:\n  - mkdir -p build/logs\n  - vendor/bin/phpspec run -v\n  - vendor/bin/phpunit --coverage-text\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0517578125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Artes√£os\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.2705078125,
          "content": "<p align=\"center\">\n    <a href=\"https://github.com/artesaos\" target=\"_blank\">\n        <img src=\"https://avatars3.githubusercontent.com/u/11164074\" height=\"100px\">\n    </a>\n    <h1 align=\"center\">SEOTools - SEO Tools for Laravel and Lumen</h1>\n    <br>\n</p>\n\nSEOTools is a package for [Laravel 5.8+](https://laravel.com/) and [Lumen](https://lumen.laravel.com/) that provides helpers for some common SEO techniques.\n\n> Current Build Status\n\n[![Build Status](https://travis-ci.org/artesaos/seotools.svg)](https://travis-ci.org/artesaos/seotools)\n[![Code Climate](https://codeclimate.com/github/artesaos/seotools/badges/gpa.svg)](https://codeclimate.com/github/artesaos/seotools)\n\n> Statistics\n\n[![Latest Stable Version](https://poser.pugx.org/artesaos/seotools/v/stable)](https://packagist.org/packages/artesaos/seotools) [![Total Downloads](https://poser.pugx.org/artesaos/seotools/downloads)](https://packagist.org/packages/artesaos/seotools) [![Latest Unstable Version](https://poser.pugx.org/artesaos/seotools/v/unstable)](https://packagist.org/packages/artesaos/seotools) [![License](https://poser.pugx.org/artesaos/seotools/license)](https://packagist.org/packages/artesaos/seotools)\n\nFor license information check the [LICENSE](LICENSE.md)-file.\n\nFeatures\n--------\n\n- Friendly simple interface\n- Easy of set titles and meta tags\n- Easy of set metas for [Twitter Cards](https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/abouts-cards) and [Open Graph](https://ogp.me/)\n- Easy of set for [JSON Linked Data](https://json-ld.org/)\n\nInstallation\n------------\n\n### 1 - Dependency\n\nThe first step is using composer to install the package and automatically update your `composer.json` file, you can do this by running:\n\n```shell\ncomposer require artesaos/seotools\n```\n\n> **Note**: If you are using Laravel 5.5, the steps 2 and 3, for providers and aliases, are unnecessaries. SEOTools supports Laravel new [Package Discovery](https://laravel.com/docs/5.5/packages#package-discovery).\n\n### 2 - Provider\n\nYou need to update your application configuration in order to register the package so it can be loaded by Laravel, just update your `config/app.php` file adding the following code at the end of your `'providers'` section:\n\n> `config/app.php`\n\n```php\n<?php\n\nreturn [\n    // ...\n    'providers' => [\n        Artesaos\\SEOTools\\Providers\\SEOToolsServiceProvider::class,\n        // ...\n    ],\n    // ...\n];\n```\n\n#### Lumen\n\nGo to `/bootstrap/app.php` file and add this line:\n\n```php\n<?php\n// ...\n\n$app = new Laravel\\Lumen\\Application(\n    dirname(__DIR__)\n);\n\n// ...\n\n$app->register(Artesaos\\SEOTools\\Providers\\SEOToolsServiceProvider::class);\n\n// ...\n\nreturn $app;\n```\n\n### 3 - Facades\n\n> Note: facades are not supported in Lumen.\n\nYou may get access to the SEO tool services using following facades:\n\n - `Artesaos\\SEOTools\\Facades\\SEOMeta`\n - `Artesaos\\SEOTools\\Facades\\OpenGraph`\n - `Artesaos\\SEOTools\\Facades\\TwitterCard`\n - `Artesaos\\SEOTools\\Facades\\JsonLd`\n - `Artesaos\\SEOTools\\Facades\\JsonLdMulti`\n - `Artesaos\\SEOTools\\Facades\\SEOTools`\n\nYou can setup a short-version aliases for these facades in your `config/app.php` file. For example:\n\n```php\n<?php\n\nreturn [\n    // ...\n    'aliases' => [\n        'SEOMeta'       => Artesaos\\SEOTools\\Facades\\SEOMeta::class,\n        'OpenGraph'     => Artesaos\\SEOTools\\Facades\\OpenGraph::class,\n        'Twitter'       => Artesaos\\SEOTools\\Facades\\TwitterCard::class,\n        'JsonLd'        => Artesaos\\SEOTools\\Facades\\JsonLd::class,\n        'JsonLdMulti'   => Artesaos\\SEOTools\\Facades\\JsonLdMulti::class,\n        // or\n        'SEO' => Artesaos\\SEOTools\\Facades\\SEOTools::class,\n        // ...\n    ],\n    // ...\n];\n```\n\n### 4 Configuration\n\n#### Publish config\n\nIn your terminal type\n\n```shell\nphp artisan vendor:publish\n```\n\nor\n\n```shell\nphp artisan vendor:publish --provider=\"Artesaos\\SEOTools\\Providers\\SEOToolsServiceProvider\"\n```\n\n> Lumen does not support this command, for it you should copy the file `src/resources/config/seotools.php` to `config/seotools.php` of your project\n\nIn `seotools.php` configuration file you can determine the properties of the default values and some behaviors.\n\n#### seotools.php\n\n- **meta**\n   - `defaults` - What values are displayed if not specified any value for the page display. If the value is `false`, nothing is displayed.\n   - `webmaster` - Are the settings of tags values for major webmaster tools. If you are `null` nothing is displayed.\n- **opengraph**\n   - `defaults` - Are the properties that will always be displayed and when no other value is set instead. **You can add additional tags** that are not included in the original configuration file.\n- **twitter**\n   - `defaults` - Are the properties that will always be displayed and when no other value is set instead. **You can add additional tags** that are not included in the original configuration file.\n- **json-ld**\n   - `defaults` - Are the properties that will always be displayed and when no other value is set instead. **You can add additional tags** that are not included in the original configuration file.\n\nUsage\n-----\n\n### Lumen Usage\n\n> Note: facades are not supported in Lumen.\n\n```php\n<?php\n\n$seotools = app('seotools');\n$metatags = app('seotools.metatags');\n$twitter = app('seotools.twitter');\n$opengraph = app('seotools.opengraph');\n$jsonld = app('seotools.json-ld');\n$jsonldMulti = app('seotools.json-ld-multi');\n\n// The behavior is the same as the facade\n\necho app('seotools')->generate();\n```\n\n### Meta tags Generator\n\nWith **SEOMeta** you can create meta tags to the `head`\n\n### Opengraph tags Generator\n\nWith **OpenGraph** you can create OpenGraph tags to the `head`\n\n### Twitter for Twitter Cards tags Generator\n\nWith **Twitter** you can create OpenGraph tags to the `head`\n\n#### In your controller\n\n```php\n<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Artesaos\\SEOTools\\Facades\\SEOMeta;\nuse Artesaos\\SEOTools\\Facades\\OpenGraph;\nuse Artesaos\\SEOTools\\Facades\\TwitterCard;\nuse Artesaos\\SEOTools\\Facades\\JsonLd;\n// OR with multi\nuse Artesaos\\SEOTools\\Facades\\JsonLdMulti;\n\n// OR\nuse Artesaos\\SEOTools\\Facades\\SEOTools;\n\nclass CommonController extends Controller\n{\n    public function index()\n    {\n        SEOMeta::setTitle('Home');\n        SEOMeta::setDescription('This is my page description');\n        SEOMeta::setCanonical('https://codecasts.com.br/lesson');\n\n        OpenGraph::setDescription('This is my page description');\n        OpenGraph::setTitle('Home');\n        OpenGraph::setUrl('http://current.url.com');\n        OpenGraph::addProperty('type', 'articles');\n\n        TwitterCard::setTitle('Homepage');\n        TwitterCard::setSite('@LuizVinicius73');\n\n        JsonLd::setTitle('Homepage');\n        JsonLd::setDescription('This is my page description');\n        JsonLd::addImage('https://codecasts.com.br/img/logo.jpg');\n\n        // OR\n\n        SEOTools::setTitle('Home');\n        SEOTools::setDescription('This is my page description');\n        SEOTools::opengraph()->setUrl('http://current.url.com');\n        SEOTools::setCanonical('https://codecasts.com.br/lesson');\n        SEOTools::opengraph()->addProperty('type', 'articles');\n        SEOTools::twitter()->setSite('@LuizVinicius73');\n        SEOTools::jsonLd()->addImage('https://codecasts.com.br/img/logo.jpg');\n\n        $posts = Post::all();\n\n        return view('myindex', compact('posts'));\n    }\n\n    public function show($id)\n    {\n        $post = Post::find($id);\n\n        SEOMeta::setTitle($post->title);\n        SEOMeta::setDescription($post->resume);\n        SEOMeta::addMeta('article:published_time', $post->published_date->toW3CString(), 'property');\n        SEOMeta::addMeta('article:section', $post->category, 'property');\n        SEOMeta::addKeyword(['key1', 'key2', 'key3']);\n\n        OpenGraph::setDescription($post->resume);\n        OpenGraph::setTitle($post->title);\n        OpenGraph::setUrl('http://current.url.com');\n        OpenGraph::addProperty('type', 'article');\n        OpenGraph::addProperty('locale', 'pt-br');\n        OpenGraph::addProperty('locale:alternate', ['pt-pt', 'en-us']);\n\n        OpenGraph::addImage($post->cover->url);\n        OpenGraph::addImage($post->images->list('url'));\n        OpenGraph::addImage(['url' => 'http://image.url.com/cover.jpg', 'size' => 300]);\n        OpenGraph::addImage('http://image.url.com/cover.jpg', ['height' => 300, 'width' => 300]);\n\n        JsonLd::setTitle($post->title);\n        JsonLd::setDescription($post->resume);\n        JsonLd::setType('Article');\n        JsonLd::addImage($post->images->list('url'));\n\n        // OR with multi\n\n        JsonLdMulti::setTitle($post->title);\n        JsonLdMulti::setDescription($post->resume);\n        JsonLdMulti::setType('Article');\n        JsonLdMulti::addImage($post->images->list('url'));\n        if(! JsonLdMulti::isEmpty()) {\n            JsonLdMulti::newJsonLd();\n            JsonLdMulti::setType('WebPage');\n            JsonLdMulti::setTitle('Page Article - '.$post->title);\n        }\n\n        // Namespace URI: http://ogp.me/ns/article#\n        // article\n        OpenGraph::setTitle('Article')\n            ->setDescription('Some Article')\n            ->setType('article')\n            ->setArticle([\n                'published_time' => 'datetime',\n                'modified_time' => 'datetime',\n                'expiration_time' => 'datetime',\n                'author' => 'profile / array',\n                'section' => 'string',\n                'tag' => 'string / array'\n            ]);\n\n        // Namespace URI: http://ogp.me/ns/book#\n        // book\n        OpenGraph::setTitle('Book')\n            ->setDescription('Some Book')\n            ->setType('book')\n            ->setBook([\n                'author' => 'profile / array',\n                'isbn' => 'string',\n                'release_date' => 'datetime',\n                'tag' => 'string / array'\n            ]);\n\n        // Namespace URI: http://ogp.me/ns/profile#\n        // profile\n        OpenGraph::setTitle('Profile')\n             ->setDescription('Some Person')\n            ->setType('profile')\n            ->setProfile([\n                'first_name' => 'string',\n                'last_name' => 'string',\n                'username' => 'string',\n                'gender' => 'enum(male, female)'\n            ]);\n\n        // Namespace URI: http://ogp.me/ns/music#\n        // music.song\n        OpenGraph::setType('music.song')\n            ->setMusicSong([\n                'duration' => 'integer',\n                'album' => 'array',\n                'album:disc' => 'integer',\n                'album:track' => 'integer',\n                'musician' => 'array'\n            ]);\n\n        // music.album\n        OpenGraph::setType('music.album')\n            ->setMusicAlbum([\n                'song' => 'music.song',\n                'song:disc' => 'integer',\n                'song:track' => 'integer',\n                'musician' => 'profile',\n                'release_date' => 'datetime'\n            ]);\n\n         //music.playlist\n        OpenGraph::setType('music.playlist')\n            ->setMusicPlaylist([\n                'song' => 'music.song',\n                'song:disc' => 'integer',\n                'song:track' => 'integer',\n                'creator' => 'profile'\n            ]);\n\n        // music.radio_station\n        OpenGraph::setType('music.radio_station')\n            ->setMusicRadioStation([\n                'creator' => 'profile'\n            ]);\n\n        // Namespace URI: http://ogp.me/ns/video#\n        // video.movie\n        OpenGraph::setType('video.movie')\n            ->setVideoMovie([\n                'actor' => 'profile / array',\n                'actor:role' => 'string',\n                'director' => 'profile /array',\n                'writer' => 'profile / array',\n                'duration' => 'integer',\n                'release_date' => 'datetime',\n                'tag' => 'string / array'\n            ]);\n\n        // video.episode\n        OpenGraph::setType('video.episode')\n            ->setVideoEpisode([\n                'actor' => 'profile / array',\n                'actor:role' => 'string',\n                'director' => 'profile /array',\n                'writer' => 'profile / array',\n                'duration' => 'integer',\n                'release_date' => 'datetime',\n                'tag' => 'string / array',\n                'series' => 'video.tv_show'\n            ]);\n\n        // video.tv_show\n        OpenGraph::setType('video.tv_show')\n            ->setVideoTVShow([\n                'actor' => 'profile / array',\n                'actor:role' => 'string',\n                'director' => 'profile /array',\n                'writer' => 'profile / array',\n                'duration' => 'integer',\n                'release_date' => 'datetime',\n                'tag' => 'string / array'\n            ]);\n\n        // video.other\n        OpenGraph::setType('video.other')\n            ->setVideoOther([\n                'actor' => 'profile / array',\n                'actor:role' => 'string',\n                'director' => 'profile /array',\n                'writer' => 'profile / array',\n                'duration' => 'integer',\n                'release_date' => 'datetime',\n                'tag' => 'string / array'\n            ]);\n\n        // og:video\n        OpenGraph::addVideo('http://example.com/movie.swf', [\n                'secure_url' => 'https://example.com/movie.swf',\n                'type' => 'application/x-shockwave-flash',\n                'width' => 400,\n                'height' => 300\n            ]);\n\n        // og:audio\n        OpenGraph::addAudio('http://example.com/sound.mp3', [\n                'secure_url' => 'https://secure.example.com/sound.mp3',\n                'type' => 'audio/mpeg'\n            ]);\n\n        // og:place\n        OpenGraph::setTitle('Place')\n             ->setDescription('Some Place')\n            ->setType('place')\n            ->setPlace([\n                'location:latitude' => 'float',\n                'location:longitude' => 'float',\n            ]);\n\n        return view('myshow', compact('post'));\n    }\n}\n```\n\n#### SEOTrait\n\n```php\n<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Artesaos\\SEOTools\\Traits\\SEOTools as SEOToolsTrait;\n\nclass CommonController extends Controller\n{\n    use SEOToolsTrait;\n\n    public function index()\n    {\n        $this->seo()->setTitle('Home');\n        $this->seo()->setDescription('This is my page description');\n        $this->seo()->opengraph()->setUrl('http://current.url.com');\n        $this->seo()->opengraph()->addProperty('type', 'articles');\n        $this->seo()->twitter()->setSite('@LuizVinicius73');\n        $this->seo()->jsonLd()->setType('Article');\n\n        $posts = Post::all();\n\n        return view('myindex', compact('posts'));\n    }\n}\n```\n\n### In Your View\n\n> **Pro Tip**: Pass the parameter `true` to get minified code and reduce filesize.\n\n```html\n<html>\n<head>\n    {!! SEOMeta::generate() !!}\n    {!! OpenGraph::generate() !!}\n    {!! Twitter::generate() !!}\n    {!! JsonLd::generate() !!}\n    // OR with multi\n    {!! JsonLdMulti::generate() !!}\n\n    <!-- OR -->\n    {!! SEO::generate() !!}\n\n    <!-- MINIFIED -->\n    {!! SEO::generate(true) !!}\n\n    <!-- LUMEN -->\n    {!! app('seotools')->generate() !!}\n</head>\n<body>\n\n</body>\n</html>\n```\n\n```html\n<html>\n<head>\n    <title>Title - Over 9000 Thousand!</title>\n    <meta name='description' itemprop='description' content='description...'>\n    <meta name='keywords' content='key1, key2, key3'>\n    <meta property='article:published_time' content='2015-01-31T20:30:11-02:00'>\n    <meta property='article:section' content='news'>\n\n    <meta property=\"og:description\" content=\"description...\">\n    <meta property=\"og:title\" content=\"Title\">\n    <meta property=\"og:url\" content=\"http://current.url.com\">\n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:locale\" content=\"pt-br\">\n    <meta property=\"og:locale:alternate\" content=\"pt-pt\">\n    <meta property=\"og:locale:alternate\" content=\"en-us\">\n    <meta property=\"og:site_name\" content=\"name\">\n    <meta property=\"og:image\" content=\"http://image.url.com/cover.jpg\">\n    <meta property=\"og:image\" content=\"http://image.url.com/img1.jpg\">\n    <meta property=\"og:image\" content=\"http://image.url.com/img2.jpg\">\n    <meta property=\"og:image\" content=\"http://image.url.com/img3.jpg\">\n    <meta property=\"og:image:url\" content=\"http://image.url.com/cover.jpg\">\n    <meta property=\"og:image:size\" content=\"300\">\n\n    <meta name=\"twitter:card\"content=\"summary\">\n    <meta name=\"twitter:title\"content=\"Title\">\n    <meta name=\"twitter:site\"content=\"@LuizVinicius73\">\n\n    <script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"Article\",\"name\":\"Title - Over 9000 Thousand!\"}</script>\n    <!-- OR with multi -->\n    <script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"Article\",\"name\":\"Title - Over 9000 Thousand!\"}</script>\n    <script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"WebPage\",\"name\":\"Title - Over 9000 Thousand!\"}</script>\n</head>\n<body>\n\n</body>\n</html>\n```\n\n#### Using Macro\nUsing the same code in multiple places can be tedious, which is why this package includes a Macroable trait. This trait allows additional functionality to be added to a class that was not defined in the class definition, using a simple trait.\n\nFor example, imagine that you need to add meta titles and descriptions for your pages. You can add your Macroable functions in the AppServiceProvider or create a dedicated file for this purpose, and define your function as shown in the code snippet:\n```php\n    SEOTools::macro('webPage', function (string $title, string $description) {\n        SEOMeta::setTitle($title);\n        SEOMeta::setDescription($description);\n        SEOMeta::setCanonical('http://current.url.com');\n        OpenGraph::setDescription($description);\n        OpenGraph::setTitle($title);\n        OpenGraph::setUrl('http://current.url.com');\n        OpenGraph::addProperty('type', 'webpage');\n    });\n```\n\nIn your controller, you can use the following code to utilize the function:\n```php\n    SEOTools::webPage('Page title', 'Page description');\n```\n\n#### API (SEOMeta)\n\n```php\n<?php\n\nuse Artesaos\\SEOTools\\Facades\\SEOMeta;\n\nSEOMeta::addKeyword($keyword);\nSEOMeta::addMeta($meta, $value = null, $name = 'name');\nSEOMeta::addAlternateLanguage($lang, $url);\nSEOMeta::addAlternateLanguages(array $languages);\nSEOMeta::setAlternateLanguage($lang, $url);\nSEOMeta::setAlternateLanguages(array $languages);\nSEOMeta::setTitleSeparator($separator);\nSEOMeta::setTitle($title);\nSEOMeta::setTitleDefault($default);\nSEOMeta::setDescription($description);\nSEOMeta::setKeywords($keywords);\nSEOMeta::setRobots($robots);\nSEOMeta::setCanonical($url);\nSEOMeta::setPrev($url);\nSEOMeta::setNext($url);\nSEOMeta::removeMeta($key);\n\n// You can chain methods\nSEOMeta::setTitle($title)\n            ->setDescription($description)\n            ->setKeywords($keywords)\n            ->addKeyword($keyword)\n            ->addMeta($meta, $value);\n\n// Retrieving data\nSEOMeta::getTitle();\nSEOMeta::getTitleSession();\nSEOMeta::getTitleSeparator();\nSEOMeta::getKeywords();\nSEOMeta::getDescription();\nSEOMeta::getCanonical($url);\nSEOMeta::getPrev($url);\nSEOMeta::getNext($url);\nSEOMeta::getRobots();\nSEOMeta::reset();\n\nSEOMeta::generate();\n```\n\n#### API (OpenGraph)\n\n```php\n<?php\n\nuse Artesaos\\SEOTools\\Facades\\OpenGraph;\n\nOpenGraph::addProperty($key, $value); // value can be string or array\nOpenGraph::addImage($url); // add image url\nOpenGraph::addImages($url); // add an array of url images\nOpenGraph::setTitle($title); // define title\nOpenGraph::setDescription($description);  // define description\nOpenGraph::setUrl($url); // define url\nOpenGraph::setSiteName($name); //define site_name\n\n// You can chain methods\nOpenGraph::addProperty($key, $value)\n            ->addImage($url)\n            ->addImages($url)\n            ->setTitle($title)\n            ->setDescription($description)\n            ->setUrl($url)\n            ->setSiteName($name);\n\n// Generate html tags\nOpenGraph::generate();\n```\n\n### API (TwitterCard)\n\n```php\n<?php\n\nuse Artesaos\\SEOTools\\Facades\\TwitterCard;\n\nTwitterCard::addValue($key, $value); // value can be string or array\nTwitterCard::setType($type); // type of twitter card tag\nTwitterCard::setTitle($type); // title of twitter card tag\nTwitterCard::setSite($type); // site of twitter card tag\nTwitterCard::setDescription($type); // description of twitter card tag\nTwitterCard::setUrl($type); // url of twitter card tag\nTwitterCard::setImage($url); // add image url\n\n// You can chain methods\nTwitterCard::addValue($key, $value)\n            ->setType($type)\n            ->setImage($url)\n            ->setTitle($title)\n            ->setDescription($description)\n            ->setUrl($url)\n            ->setSite($name);\n\n// Generate html tags\nTwitterCard::generate();\n```\n\n### API (JsonLd)\n\n```php\n<?php\n\nuse Artesaos\\SEOTools\\Facades\\JsonLd;\n\nJsonLd::addValue($key, $value); // value can be string or array\nJsonLd::setType($type); // type of twitter card tag\nJsonLd::setTitle($type); // title of twitter card tag\nJsonLd::setSite($type); // site of twitter card tag\nJsonLd::setDescription($type); // description of twitter card tag\nJsonLd::setUrl($type); // url of twitter card tag\nJsonLd::setImage($url); // add image url\n\n// You can chain methods\nJsonLd::addValue($key, $value)\n    ->setType($type)\n    ->setImage($url)\n    ->setTitle($title)\n    ->setDescription($description)\n    ->setUrl($url)\n    ->setSite($name);\n\n// Generate html tags\nJsonLd::generate();\n```\n\n### API (JsonLdMulti)\n\n```php\n<?php\n\nuse Artesaos\\SEOTools\\Facades\\JsonLdMulti;\n\nJsonLdMulti::newJsonLd(); // create a new JsonLd group\nJsonLdMulti::isEmpty(); // check if the current JsonLd group is empty\nJsonLdMulti::select($index); // choose the JsonLd group that will be edited by the methods below\nJsonLdMulti::addValue($key, $value); // value can be string or array\nJsonLdMulti::setType($type); // type of twitter card tag\nJsonLdMulti::setTitle($type); // title of twitter card tag\nJsonLdMulti::setSite($type); // site of twitter card tag\nJsonLdMulti::setDescription($type); // description of twitter card tag\nJsonLdMulti::setUrl($type); // url of twitter card tag\nJsonLdMulti::setImage($url); // add image url\n\n// You can chain methods\nJsonLdMulti::addValue($key, $value)\n    ->setType($type)\n    ->setImage($url)\n    ->setTitle($title)\n    ->setDescription($description)\n    ->setUrl($url)\n    ->setSite($name);\n// You can add an other group\nif(! JsonLdMulti::isEmpty()) {\n    JsonLdMulti::newJsonLd()\n        ->setType($type)\n        ->setImage($url)\n        ->setTitle($title)\n        ->setDescription($description)\n        ->setUrl($url)\n        ->setSite($name);\n}\n// Generate html tags\nJsonLdMulti::generate();\n// You will have retrieve <script content=\"application/ld+json\"/>\n```\n\n#### API (SEO)\n\n> Facilitates access to all the SEO Providers\n\n```php\n<?php\n\nuse Artesaos\\SEOTools\\Facades\\SEOTools;\n\nSEOTools::metatags();\nSEOTools::twitter();\nSEOTools::opengraph();\nSEOTools::jsonLd();\n\nSEOTools::setTitle($title);\nSEOTools::getTitle($session = false);\nSEOTools::setDescription($description);\nSEOTools::setCanonical($url);\nSEOTools::addImages($urls);\n```\n\nMissing Features\n----------------\n\nThere are many SEO-related features, which you may need for your project. While this package provides support for the basic ones,\nother are out of its scope. You'll have to use separate packages for their integration.\n\n### SiteMap\n\nThis package does not support sitemap files generation. Please consider usage one of the following packages for it:\n\n- [laravelium/sitemap](https://packagist.org/packages/laravelium/sitemap)\n\n- [spatie/laravel-sitemap](https://packagist.org/packages/spatie/laravel-sitemap)\n\n### URL Trailing Slash\n\nThis package does not handle URL consistency regardless absence or presence of the slash symbol at its end.\nPlease consider usage one of the following packages if you need it:\n\n- [illuminatech/url-trailing-slash](https://packagist.org/packages/illuminatech/url-trailing-slash)\n\n- [fsasvari/laravel-trailing-slash](https://packagist.org/packages/fsasvari/laravel-trailing-slash)\n\n### Microdata Markup\n\nThis package does provide generation of the [microdata HTML markup](https://www.w3.org/TR/microdata/). If you need to create HTML like the following one:\n\n```html\n<div itemscope>\n <p>My name is\n  <span itemprop=\"name\">Elizabeth</span>.</p>\n</div>\n```\n\nyou will need to handle it yourself.\n\n> Note: nowadays microdata markup is considered to be outdated. It is recommened to use [JSON Linked Data](https://json-ld.org/) instead,\n  which is supported by this extension.\n\n### RSS\n\nThis package does not support RSS feed generation or related meta data composition. Please consider usage one of the following packages for it:\n\n- [spatie/laravel-feed](https://packagist.org/packages/spatie/laravel-feed)\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.5,
          "content": "{\n  \"name\": \"artesaos/seotools\",\n  \"description\": \"SEO Tools for Laravel and Lumen\",\n  \"keywords\": [\n    \"laravel\",\n    \"lumen\",\n    \"seo\",\n    \"seotools\",\n    \"webmaster\",\n    \"metatags\",\n    \"opengraph\",\n    \"json-ld\"\n  ],\n  \"license\": \"MIT\",\n  \"support\": {\n    \"issues\": \"https://github.com/artesaos/seotools/issues\",\n    \"source\": \"https://github.com/artesaos/seotools\"\n  },\n  \"authors\": [\n    {\n      \"name\": \"Vinicius\",\n      \"email\": \"luiz.vinicius73@gmail.com\"\n    }\n  ],\n  \"require\": {\n    \"php\": \"^8.1\",\n    \"ext-json\": \"*\",\n    \"illuminate/config\": \"^10.0 || ^11.0\",\n    \"illuminate/support\": \"^10.0 || ^11.0\"\n  },\n  \"require-dev\": {\n    \"orchestra/testbench\": \"^8.0 || ^9.0\",\n    \"phpspec/phpspec\": \"~5.1.1 || ^6.0 || ^7.0\",\n    \"phpunit/phpunit\": \"^9.0 || ^10.0\"\n  },\n  \"autoload\": {\n    \"psr-4\": {\n      \"Artesaos\\\\SEOTools\\\\\": \"src/SEOTools/\"\n    }\n  },\n  \"autoload-dev\": {\n    \"psr-4\": {\n      \"Artesaos\\\\SEOTools\\\\Tests\\\\\": \"tests/SEOTools\"\n    }\n  },\n  \"config\": {\n    \"preferred-install\": \"dist\"\n  },\n  \"extra\": {\n    \"laravel\": {\n      \"providers\": [\n        \"Artesaos\\\\SEOTools\\\\Providers\\\\SEOToolsServiceProvider\"\n      ],\n      \"aliases\": {\n        \"SEOMeta\": \"Artesaos\\\\SEOTools\\\\Facades\\\\SEOMeta\",\n        \"OpenGraph\": \"Artesaos\\\\SEOTools\\\\Facades\\\\OpenGraph\",\n        \"Twitter\": \"Artesaos\\\\SEOTools\\\\Facades\\\\TwitterCard\",\n        \"JsonLd\": \"Artesaos\\\\SEOTools\\\\Facades\\\\JsonLd\",\n        \"SEO\": \"Artesaos\\\\SEOTools\\\\Facades\\\\SEOTools\"\n      }\n    }\n  },\n  \"minimum-stability\": \"dev\",\n  \"prefer-stable\": true\n}\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.4248046875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\"\n>\n    <testsuites>\n        <testsuite name=\"SEOTools Test Suite\">\n            <directory suffix=\"Test.php\">tests</directory>\n            <exclude>./tests/SEOTools/BaseTest.php</exclude>\n        </testsuite>\n    </testsuites>\n</phpunit>\n"
        },
        {
          "name": "spec",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}