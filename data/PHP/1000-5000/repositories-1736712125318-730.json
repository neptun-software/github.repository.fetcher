{
  "metadata": {
    "timestamp": 1736712125318,
    "page": 730,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sendgrid/sendgrid-php",
      "stars": 1490,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1318359375,
          "content": "root = true\n\n[*.php]\nindent_style = space\nindent_size = 4\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".env.sample",
          "type": "blob",
          "size": 0.0263671875,
          "content": "export SENDGRID_API_KEY=''\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.349609375,
          "content": "test export-ignore\n.gitattributes export-ignore\n.gitignore export-ignore\n.travis.yml export-ignore\nMakefile export-ignore\nCHANGELOG.md export-ignore\nCODE_OF_CONDUCT.md export-ignore\nCONTRIBUTING.md export-ignore\nPULL_REQUEST_TEMPLATE.md export-ignore\nREADME.md export-ignore\nTROUBLESHOOTING.md export-ignore\nUSAGE.md export-ignore\nUSE_CASES.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.16796875,
          "content": "test/coverage/*\ndist/\ncomposer.lock\nvendor\n.env\nsendgrid.env\ncomposer.phar\n.editorconfig\ntest.php\n.idea/\n*.code-workspace\n.vscode\nprism/\ntemp.php\nTODO.txt\nsendgrid-php.zip\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 39.9072265625,
          "content": "# Change Log\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\n[2025-01-09] Version 8.1.6\n--------------------------\n**Library - Fix**\n- [PR #1111](https://github.com/sendgrid/sendgrid-php/pull/1111): Use starkbank/ecdsa 2.1.0. Thanks to [@simoheinonen](https://github.com/simoheinonen)!\n\n**Library - Chore**\n- [PR #1115](https://github.com/sendgrid/sendgrid-php/pull/1115): install docker-compose. Thanks to [@tiwarishubham635](https://github.com/tiwarishubham635)!\n\n\n[2024-12-12] Version 8.1.5\n--------------------------\n**Library - Fix**\n- [PR #1111](https://github.com/sendgrid/sendgrid-php/pull/1111): Use starkbank/ecdsa 2.1.0. Thanks to [@simoheinonen](https://github.com/simoheinonen)!\n\n**Library - Chore**\n- [PR #1115](https://github.com/sendgrid/sendgrid-php/pull/1115): install docker-compose. Thanks to [@tiwarishubham635](https://github.com/tiwarishubham635)!\n\n\n[2024-12-12] Version 8.1.4\n--------------------------\n**Library - Fix**\n- [PR #1111](https://github.com/sendgrid/sendgrid-php/pull/1111): Use starkbank/ecdsa 2.1.0. Thanks to [@simoheinonen](https://github.com/simoheinonen)!\n\n**Library - Chore**\n- [PR #1115](https://github.com/sendgrid/sendgrid-php/pull/1115): install docker-compose. Thanks to [@tiwarishubham635](https://github.com/tiwarishubham635)!\n\n\n[2024-12-05] Version 8.1.3\n--------------------------\n**Library - Fix**\n- [PR #1111](https://github.com/sendgrid/sendgrid-php/pull/1111): Use starkbank/ecdsa 2.1.0. Thanks to [@simoheinonen](https://github.com/simoheinonen)!\n\n**Library - Chore**\n- [PR #1115](https://github.com/sendgrid/sendgrid-php/pull/1115): install docker-compose. Thanks to [@tiwarishubham635](https://github.com/tiwarishubham635)!\n\n\n[2024-04-18] Version 8.1.2\n--------------------------\n**Library - Chore**\n- [PR #1107](https://github.com/sendgrid/sendgrid-php/pull/1107): updating php-http-client version to dynamic. Thanks to [@tiwarishubham635](https://github.com/tiwarishubham635)!\n\n\n[2023-12-06] Version 8.1.1\n--------------------------\n**Library - Chore**\n- [PR #1105](https://github.com/sendgrid/sendgrid-php/pull/1105): updated php-http-client version to enable setHost. Thanks to [@tiwarishubham635](https://github.com/tiwarishubham635)!\n\n\n[2023-12-01] Version 8.1.0\n--------------------------\n**Library - Feature**\n- [PR #1104](https://github.com/sendgrid/sendgrid-php/pull/1104): Added Data residency for eu and global region. Thanks to [@tiwarishubham635](https://github.com/tiwarishubham635)!\n\n\n[2022-08-10] Version 8.0.1\n--------------------------\n**Library - Docs**\n- [PR #1097](https://github.com/sendgrid/sendgrid-php/pull/1097): rewrite function description. Thanks to [@mohamed-foly](https://github.com/mohamed-foly)!\n- [PR #1095](https://github.com/sendgrid/sendgrid-php/pull/1095): Modify README in alignment with SendGrid Support. Thanks to [@garethpaul](https://github.com/garethpaul)!\n\n**Library - Fix**\n- [PR #1081](https://github.com/sendgrid/sendgrid-php/pull/1081): get rid of deprecation warnings regarding the first parameter of mb_convert_encoding. Thanks to [@cclark61](https://github.com/cclark61)!\n\n**Library - Test**\n- [PR #1099](https://github.com/sendgrid/sendgrid-php/pull/1099): Adding misc as PR type. Thanks to [@rakatyal](https://github.com/rakatyal)!\n\n\n[2022-05-04] Version 8.0.0\n--------------------------\n**Note:** This release contains breaking changes, check our [upgrade guide](./UPGRADE.md#2022-05-04-7xx-to-8xx) for detailed migration notes.\n\n**Library - Chore**\n- [PR #1090](https://github.com/sendgrid/sendgrid-php/pull/1090): drop support for EOL PHP versions and add support for PHP 8. Thanks to [@childish-sambino](https://github.com/childish-sambino)! **(breaking change)**\n\n\n[2022-03-09] Version 7.11.5\n---------------------------\n**Library - Chore**\n- [PR #1085](https://github.com/sendgrid/sendgrid-php/pull/1085): push Datadog Release Metric upon deploy success. Thanks to [@eshanholtz](https://github.com/eshanholtz)!\n\n\n[2022-02-09] Version 7.11.4\n---------------------------\n**Library - Chore**\n- [PR #1079](https://github.com/sendgrid/sendgrid-php/pull/1079): add deploy job to test and deploy gh workflow. Thanks to [@Hunga1](https://github.com/Hunga1)!\n\n\n[2022-01-26] Version 7.11.3\n---------------------------\n**Library - Chore**\n- [PR #1075](https://github.com/sendgrid/sendgrid-php/pull/1075): migrate to Github actions. Thanks to [@JenniferMah](https://github.com/JenniferMah)!\n\n\n[2022-01-12] Version 7.11.2\n---------------------------\n**Library - Chore**\n- [PR #1074](https://github.com/sendgrid/sendgrid-php/pull/1074): update license year. Thanks to [@JenniferMah](https://github.com/JenniferMah)!\n\n\n[2021-12-15] Version 7.11.1\n---------------------------\n**Library - Fix**\n- [PR #1066](https://github.com/sendgrid/sendgrid-php/pull/1066): Suppress deprecation warnings in PHP 8.1. Thanks to [@andreas-aeschlimann](https://github.com/andreas-aeschlimann)!\n\n\n[2021-11-17] Version 7.11.0\n---------------------------\n**Library - Feature**\n- [PR #1065](https://github.com/sendgrid/sendgrid-php/pull/1065): add spam, bounce and unsubscribe bypass management filters. Thanks to [@shwetha-manvinkurke](https://github.com/shwetha-manvinkurke)!\n\n\n[2021-10-18] Version 7.10.0\n---------------------------\n**Library - Feature**\n- [PR #1061](https://github.com/sendgrid/sendgrid-php/pull/1061): allow personalization of the From name and email for each email recipient. Thanks to [@beebzz](https://github.com/beebzz)!\n\n**Library - Docs**\n- [PR #1060](https://github.com/sendgrid/sendgrid-php/pull/1060): improve signed webhook event validation docs. Thanks to [@shwetha-manvinkurke](https://github.com/shwetha-manvinkurke)!\n\n\n[2021-01-27] Version 7.9.2\n--------------------------\n**Library - Fix**\n- [PR #1030](https://github.com/sendgrid/sendgrid-php/pull/1030): Fixing namespace for classes on test/unit folder. Thanks to [@peter279k](https://github.com/peter279k)!\n\n\n[2020-11-18] Version 7.9.1\n--------------------------\n**Library - Docs**\n- [PR #980](https://github.com/sendgrid/sendgrid-php/pull/980): Incorrect links in Use Cases, section Email Stats. Thanks to [@kampalex](https://github.com/kampalex)!\n\n\n[2020-11-05] Version 7.9.0\n--------------------------\n**Library - Feature**\n- [PR #674](https://github.com/sendgrid/sendgrid-php/pull/674): Allows for a user to utilize self-signed certificates. Thanks to [@davcpas1234](https://github.com/davcpas1234)!\n\n**Library - Test**\n- [PR #704](https://github.com/sendgrid/sendgrid-php/pull/704): Adding php static analysis. Thanks to [@reisraff](https://github.com/reisraff)!\n\n\n[2020-10-14] Version 7.8.5\n--------------------------\n**Library - Docs**\n- [PR #1009](https://github.com/sendgrid/sendgrid-php/pull/1009): Incorrect value order in example array for addAttachments. Thanks to [@Anorris-NLR](https://github.com/Anorris-NLR)!\n\n\n[2020-09-28] Version 7.8.4\n--------------------------\n**Library - Fix**\n- [PR #1006](https://github.com/sendgrid/sendgrid-php/pull/1006): don't wrap names in double-quotes. Thanks to [@childish-sambino](https://github.com/childish-sambino)!\n\n**Library - Chore**\n- [PR #725](https://github.com/sendgrid/sendgrid-php/pull/725): Require conformance to style standards. Thanks to [@jmauerhan](https://github.com/jmauerhan)!\n\n\n[2020-09-02] Version 7.8.3\n--------------------------\n**Library - Fix**\n- [PR #1001](https://github.com/sendgrid/sendgrid-php/pull/1001): support 'to' addresses with subjects. Thanks to [@childish-sambino](https://github.com/childish-sambino)!\n\n\n[2020-08-19] Version 7.8.2\n--------------------------\n**Library - Docs**\n- [PR #717](https://github.com/sendgrid/sendgrid-php/pull/717): Update documentation for retrieving a list of all templates. Thanks to [@renshuki](https://github.com/renshuki)!\n- [PR #729](https://github.com/sendgrid/sendgrid-php/pull/729): Added S3 attachment example. Thanks to [@semijoelon](https://github.com/semijoelon)!\n- [PR #984](https://github.com/sendgrid/sendgrid-php/pull/984): Reduce excessive comments in code examples. Thanks to [@kampalex](https://github.com/kampalex)!\n\n**Library - Test**\n- [PR #735](https://github.com/sendgrid/sendgrid-php/pull/735): add unit tests for lib/email. Thanks to [@peter279k](https://github.com/peter279k)!\n- [PR #756](https://github.com/sendgrid/sendgrid-php/pull/756): Add more scenarios for email address encoding. Thanks to [@2mt-heuser](https://github.com/2mt-heuser)!\n\n**Library - Chore**\n- [PR #993](https://github.com/sendgrid/sendgrid-php/pull/993): update GitHub branch references to use HEAD. Thanks to [@thinkingserious](https://github.com/thinkingserious)!\n\n\n[2020-08-05] Version 7.8.1\n--------------------------\n**Library - Fix**\n- [PR #755](https://github.com/sendgrid/sendgrid-php/pull/755): remove loader.php and update CONTRIBUTING.md. Thanks to [@mkasberg](https://github.com/mkasberg)!\n\n\n[2020-07-22] Version 7.8.0\n--------------------------\n**Library - Chore**\n- [PR #990](https://github.com/sendgrid/sendgrid-php/pull/990): migrate to new default sendgrid-oai branch. Thanks to [@eshanholtz](https://github.com/eshanholtz)!\n\n**Library - Docs**\n- [PR #778](https://github.com/sendgrid/sendgrid-php/pull/778): fix grammar issue in CHANGELOG. Thanks to [@Hestersue43](https://github.com/Hestersue43)!\n- [PR #759](https://github.com/sendgrid/sendgrid-php/pull/759): add Email Activity API to usage docs. Thanks to [@ajloria](https://github.com/ajloria)!\n\n**Library - Feature**\n- [PR #850](https://github.com/sendgrid/sendgrid-php/pull/850): Add an option to override SendGrid Client path version. Thanks to [@erbaker](https://github.com/erbaker)!\n- [PR #762](https://github.com/sendgrid/sendgrid-php/pull/762): enhanced type exception handling. Thanks to [@misantron](https://github.com/misantron)!\n\n\n[2020-07-08] Version 7.7.0\n--------------------------\n**Library - Feature**\n- [PR #985](https://github.com/sendgrid/sendgrid-php/pull/985): Additional check for existence of Composer autoloader. Thanks to [@kampalex](https://github.com/kampalex)!\n- [PR #978](https://github.com/sendgrid/sendgrid-php/pull/978): Mail constructor: Added support for array of Substitution instances using $globalSubstitutions. Thanks to [@kampalex](https://github.com/kampalex)!\n\n**Library - Fix**\n- [PR #976](https://github.com/sendgrid/sendgrid-php/pull/976): allow a float type as a substitution value in transactional templates. Thanks to [@thinkingserious](https://github.com/thinkingserious)!\n- [PR #977](https://github.com/sendgrid/sendgrid-php/pull/977): Mail constructor: Verify arguments $plainTextContent and $htmlContent if provided. Thanks to [@kampalex](https://github.com/kampalex)!\n- [PR #971](https://github.com/sendgrid/sendgrid-php/pull/971): Optional Personalization arguments handling. Thanks to [@kampalex](https://github.com/kampalex)!\n\n\n[2020-06-10] Version 7.6.0\n--------------------------\n**Library - Fix**\n- [PR #975](https://github.com/sendgrid/sendgrid-php/pull/975): Inspected code of Stats, example helpers. Thanks to [@kampalex](https://github.com/kampalex)!\n- [PR #967](https://github.com/sendgrid/sendgrid-php/pull/967): add support for unicode in local part of email address when using PHP>=7.1. Thanks to [@kampalex](https://github.com/kampalex)!\n- [PR #974](https://github.com/sendgrid/sendgrid-php/pull/974): Accept string typed Subject in Personalization. Thanks to [@kampalex](https://github.com/kampalex)!\n- [PR #973](https://github.com/sendgrid/sendgrid-php/pull/973): Replace dynamic template data typehints. Thanks to [@kampalex](https://github.com/kampalex)!\n\n**Library - Feature**\n- [PR #969](https://github.com/sendgrid/sendgrid-php/pull/969): verify signature from event webhook. Thanks to [@childish-sambino](https://github.com/childish-sambino)!\n\n\n[2020-05-27] Version 7.5.2\n--------------------------\n**Library - Fix**\n- [PR #966](https://github.com/sendgrid/sendgrid-php/pull/966): Rename 'BaseInterface' to 'BaseSendGridClientInterface.php'. Thanks to [@childish-sambino](https://github.com/childish-sambino)!\n- [PR #965](https://github.com/sendgrid/sendgrid-php/pull/965): use classmap instead of files for Composer autoload. Thanks to [@kampalex](https://github.com/kampalex)!\n\n**Library - Docs**\n- [PR #839](https://github.com/sendgrid/sendgrid-php/pull/839): add documentation for segments in USAGE.md. Thanks to [@rwhirn](https://github.com/rwhirn)!\n\n\n[2020-05-13] Version 7.5.1\n--------------------------\n**Library - Fix**\n- [PR #960](https://github.com/sendgrid/sendgrid-php/pull/960): migrate to common prism setup. Thanks to [@childish-sambino](https://github.com/childish-sambino)!\n\n\n[2020-04-29] Version 7.5.0\n--------------------------\n**Library - Fix**\n- [PR #952](https://github.com/sendgrid/sendgrid-php/pull/952): refactor and fix personalization inserts/updates. Thanks to [@childish-sambino](https://github.com/childish-sambino)!\n\n**Library - Feature**\n- [PR #951](https://github.com/sendgrid/sendgrid-php/pull/951): add support for Twilio Email. Thanks to [@childish-sambino](https://github.com/childish-sambino)!\n\n\n[2020-04-01] Version 7.4.6\n--------------------------\n**Library - Docs**\n- [PR #947](https://github.com/sendgrid/sendgrid-php/pull/947): support verbiage for login issues. Thanks to [@adamchasetaylor](https://github.com/adamchasetaylor)!\n- [PR #946](https://github.com/sendgrid/sendgrid-php/pull/946): correct params order in example.php. Thanks to [@spaze](https://github.com/spaze)!\n\n\n[2020-03-18] Version 7.4.5\n--------------------------\n**Library - Docs**\n- [PR #749](https://github.com/sendgrid/sendgrid-php/pull/749): add @throws to docblock. Thanks to [@iPoul](https://github.com/iPoul)!\n\n\n[2020-03-04] Version 7.4.4\n--------------------------\n**Library - Chore**\n- [PR #941](https://github.com/sendgrid/sendgrid-php/pull/941): add PHP 7.4 to Travis and test with lowest dependencies. Thanks to [@childish-sambino](https://github.com/childish-sambino)!\n\n\n[2020-02-19] Version 7.4.3\n--------------------------\n**Library - Fix**\n- [PR #918](https://github.com/sendgrid/sendgrid-php/pull/918): resolve deprecation notices when using Composer 1.10(-dev). Thanks to [@kampalex](https://github.com/kampalex)!\n- [PR #939](https://github.com/sendgrid/sendgrid-php/pull/939): drop the prism binary and ignore unneeded files from the archive. Thanks to [@childish-sambino](https://github.com/childish-sambino)!\n\n\n[2020-01-22] Version 7.4.2\n--------------------------\n**Library - Docs**\n- [PR #928](https://github.com/sendgrid/sendgrid-php/pull/928): baseline all the templated markdown docs. Thanks to [@childish-sambino](https://github.com/childish-sambino)!\n\n\n[2020-01-09] Version 7.4.1\n--------------------------\n**Library - Docs**\n- [PR #710](https://github.com/sendgrid/sendgrid-php/pull/710): correct the *.md files using Grammarly. Thanks to [@myzeprog](https://github.com/myzeprog)!\n- [PR #742](https://github.com/sendgrid/sendgrid-php/pull/742): properly capitalize brands GitHub and SendGrid. Thanks to [@aslafy-z](https://github.com/aslafy-z)!\n- [PR #737](https://github.com/sendgrid/sendgrid-php/pull/737): remove `sudo` requirement for running docker. Thanks to [@jamietanna](https://github.com/jamietanna)!\n\n**Library - Chore**\n- [PR #926](https://github.com/sendgrid/sendgrid-php/pull/926): prep the repo for automated releasing. Thanks to [@childish-sambino](https://github.com/childish-sambino)!\n\n**Library - Fix**\n- [PR #765](https://github.com/sendgrid/sendgrid-php/pull/765): correct typo in PR template from \"Sendgrid\" to \"SendGrid\". Thanks to [@JoeRomeo](https://github.com/JoeRomeo)!\n- [PR #757](https://github.com/sendgrid/sendgrid-php/pull/757): remove dead code when setting the subject. Thanks to [@2mt-heuser](https://github.com/2mt-heuser)!\n- [PR #761](https://github.com/sendgrid/sendgrid-php/pull/761): correct the License file path in ReadMe. Thanks to [@sanjaysingh](https://github.com/sanjaysingh)!\n- [PR #770](https://github.com/sendgrid/sendgrid-php/pull/770): update the link for cURL example in Troubleshooting.MD. Thanks to [@music-mind](https://github.com/music-mind)!\n- [PR #887](https://github.com/sendgrid/sendgrid-php/pull/887): correct the mail helper readme link in example. Thanks to [@flashadvocate](https://github.com/flashadvocate)!\n\n\n[2019-12-11] Version 7.4.0\n--------------------------\n\n**Library - Fix**\n- [PR #705](https://github.com/sendgrid/sendgrid-php/pull/705): Fixing issue #686: NULL Item in Personalizations. Thanks to [@reisraff](https://github.com/reisraff)!\n- [PR #788](https://github.com/sendgrid/sendgrid-php/pull/788): Fixes #788 - Add missing parameter for addCc and addBcc methods. Thanks to [@hjmsw](https://github.com/hjmsw)!\n\n**Library - Docs**\n- [PR #836](https://github.com/sendgrid/sendgrid-php/pull/836): Update example.php. Add personalization example as per #792. Thanks to [@hjmsw](https://github.com/hjmsw)!\n\n**Library - Feature**\n- [PR #841](https://github.com/sendgrid/sendgrid-php/pull/841): Make $emailAddress on TypeException to be evaluated. Thanks to [@yehudah](https://github.com/yehudah)!\n\n## [7.3.0] - 2019-04-15 ##\n### Fixed\n- PR [#821](https://github.com/sendgrid/sendgrid-php/pull/821): PHP 7.3 support and fix Prism download problem.\n- Closes [#669](https://github.com/sendgrid/sendgrid-php/issues/669), PR [#670](https://github.com/sendgrid/sendgrid-php/pull/670): Fix Mail::setGlobalSubject(). Thanks to [Spencer Salisbury](https://github.com/smsalisbury) for the solution!\n- Closes [#782](https://github.com/sendgrid/sendgrid-php/issues/782), PR [#783](https://github.com/sendgrid/sendgrid-php/pull/783): Remove references to 'whitelabel'. Thanks to [Chandler Weiner](https://github.com/crweiner) for the solution!\n- Closes [#763](https://github.com/sendgrid/sendgrid-php/issues/763), PR [#764](https://github.com/sendgrid/sendgrid-php/pull/764): Update link to license. Thanks to [Pranjal Vyas](https://github.com/vyaspranjal33) for the solution!\n- PR [#760](https://github.com/sendgrid/sendgrid-php/pull/760): Clean up Prism shell script. Thanks to [gy741](https://github.com/gy741) for the solution!\n- Closes [#739](https://github.com/sendgrid/sendgrid-php/issues/739), PR [#740](https://github.com/sendgrid/sendgrid-php/pull/740): . Thanks to [Alex Borisov](https://github.com/smrtab) for the solution!\n\n### Added\n- PR [#828](https://github.com/sendgrid/sendgrid-php/pull/828): Update Twilio branding, CLA policy.\n- Closes [#768](https://github.com/sendgrid/sendgrid-php/issues/768), PR [#769](https://github.com/sendgrid/sendgrid-php/pull/769): Update prerequisites. Thanks to [Rishabh](https://github.com/Rishabh04-02) for the solution!\n- Closes [#733](https://github.com/sendgrid/sendgrid-php/issues/733), PR [#736](https://github.com/sendgrid/sendgrid-php/pull/736): Update CONTRIBUTING - contribution guideline to branch off development. Thanks to [Alex](https://github.com/myzeprog) for the solution!\n- Closes [#481](https://github.com/sendgrid/sendgrid-php/issues/481), PR [#743](https://github.com/sendgrid/sendgrid-php/pull/743): Added Box attachment example. Thanks to [Joel](https://github.com/semijoelon) for the solution!\n- Closes [#690](https://github.com/sendgrid/sendgrid-php/issues/690), PR [#698](https://github.com/sendgrid/sendgrid-php/pull/698): Update prism version. Thanks to [Gergo Juhasz](https://github.com/geryjuhasz) for the solution!\n\n## [7.2.1] - 2018-09-18 ##\n### Fixed\n- Closes [#671](https://github.com/sendgrid/sendgrid-php/issues/671), PR [#689](https://github.com/sendgrid/sendgrid-php/pull/689): isBase64 function returning incorrect. Thanks to [Jmky](https://github.com/Jmky) for the solution!\n\n## [7.2.0] - 2018-08-15 ##\n### Added\n- Closes [#648](https://github.com/sendgrid/sendgrid-php/issues/648), PR [#657](https://github.com/sendgrid/sendgrid-php/pull/657): Allow for Dynamic Templates Implementation. Thanks to [Mike Willbanks](https://github.com/mwillbanks) for the PR!\n\n## [7.1.1] - 2018-08-15 ##\n### Fixed\n- Closes [#667](https://github.com/sendgrid/sendgrid-php/issues/667), PR [#668](https://github.com/sendgrid/sendgrid-php/pull/668): isBase64 function fix. Thanks to [Tigran M](https://github.com/developer-devPHP) for bringing this to our attention!\n\n## [7.1.0] - 2018-08-14 ##\n### Added\n\n- Closes [#612](https://github.com/sendgrid/sendgrid-php/issues/612), PR [#652](https://github.com/sendgrid/sendgrid-php/pull/652): Fixes #612 Add TypeException and include type validations in classes inside mail/. Thanks to [James Harding](https://github.com/hjmsw) for the PR!\n- Closes [#551](https://github.com/sendgrid/sendgrid-php/issues/551), PR [#571](https://github.com/sendgrid/sendgrid-php/pull/571): Add ability to impersonate subuser. Thanks to [Stian Prestholdt](https://github.com/stianpr) for the PR!\n- Closes [#617](https://github.com/sendgrid/sendgrid-php/issues/617), PR [#651](https://github.com/sendgrid/sendgrid-php/pull/651): Add try / catch to examples. Thanks to [James Harding](https://github.com/hjmsw) for the PR!\n- Closes [#619](https://github.com/sendgrid/sendgrid-php/issues/619), PR [#620](https://github.com/sendgrid/sendgrid-php/pull/620): PHPDoc & code improvements. Thanks to [Martijn Melchers](https://github.com/martijnmelchers) for the PR!\n- Closes [#610](https://github.com/sendgrid/sendgrid-php/issues/610), PR [#628](https://github.com/sendgrid/sendgrid-php/pull/628): Removes unnecessary linter warning from phpcs. Thanks to [James Harding](https://github.com/hjmsw) for the PR!\n- Closes [#608](https://github.com/sendgrid/sendgrid-php/issues/611), PR [#626](https://github.com/sendgrid/sendgrid-php/pull/626): Add check so that getContents() always returns content with MimeType text/plain first in array of Content objects. Thanks to [James Harding](https://github.com/hjmsw) for the PR!\n- Closes [#611](https://github.com/sendgrid/sendgrid-php/issues/611), PR [#618](https://github.com/sendgrid/sendgrid-php/pull/618): Attachments now automatically get base64 encoded if they are not already. Thanks to [Martijn Melchers](https://github.com/martijnmelchers) for the PR!\n- PR [#661](https://github.com/sendgrid/sendgrid-php/pull/661): Add Code Triage tag. Thanks to [Anshul Singhal](https://github.com/af4ro) for the PR!\n- PR [#663](https://github.com/sendgrid/sendgrid-php/pull/663): Improve Contributing.md readability. Thanks to [Anshul Singhal](https://github.com/af4ro) for the PR!\n\n### Fixed\n- PR [#631](https://github.com/sendgrid/sendgrid-php/pull/631): Broken documentation link. Thanks to [David Duman](https://github.com/dvdnhm) for the PR!\n- PR [#633](https://github.com/sendgrid/sendgrid-php/pull/633): Fixes for non-composer environments. Thanks to [Tom Gordon](https://github.com/apcro) for the PR!\n- PR [#634](https://github.com/sendgrid/sendgrid-php/pull/634): Fixes missing file extension. Thanks to [Muberra Duman Demirtepe](https://github.com/muberraduman) for the PR!\n- PR [#658](https://github.com/sendgrid/sendgrid-php/pull/658): Corrected PHP Syntax. Thanks to [David Passmore](https://github.com/davcpas1234) for the PR!\n- Fixes [#624](https://github.com/sendgrid/sendgrid-php/issues/624), PR [#625](https://github.com/sendgrid/sendgrid-php/pull/625): Fix setGroupsToDisplay's handling of array arguments. Thanks to [Mo Ismailzai](https://github.com/moismailzai) for the PR!\n\n## [7.0.0] - 2018-05-19 ##\n### BREAKING CHANGE\n\nThanks to the [strong support and feedback of the SendGrid PHP community](https://github.com/sendgrid/sendgrid-php/issues/434), we have a new version of this SDK that should be a big improvement in the developer experience for this SDK.\n\nIn particular, I'd like to make special mention of [@caseyw](https://github.com/caseyw), [@vitya1](https://github.com/vitya1), [@Braunson](https://github.com/Braunson), [@cbschuld](https://github.com/cbschuld), [@paoga87](https://github.com/paoga87), [@Taluu](https://github.com/Taluu), [@mazanax](https://github.com/mazanax), [@ninsuo](https://github.com/ninsuo), [@ianh2](https://github.com/ianh2), [@WadeShuler](https://github.com/WadeShuler), [@jaimehing](https://github.com/jaimehing), [@KnightAR](https://github.com/KnightAR), [@alextech](https://github.com/alextech) (my apologies if I've missed you)\n\nSince this is a major departure from v6.X, we advise you to refactor your code according to the documentation found in the [README](README.md) and [USE_CASES](USE_CASES.md) files. We hope you find the new interface much easier to work with. Please open an [issue](https://github.com/sendgrid/sendgrid-php/issues) or PR if you run into any trouble or have any feedback.\n\nIf you wish to continue using previous versions of this SDK, no problem. However, we will not be updating versions less than v7 except for critical bugs and/or security issues.\n\nWe hope this will be the last breaking change in the foreseeable future; that said, let the iterations begin!\n\n## [6.2.0] - 2018-03-28 ##\n### Added\n- Closes [#454](https://github.com/sendgrid/sendgrid-php/issues/454), PR [#502](https://github.com/sendgrid/sendgrid-php/pull/502):\nAdd helper for adding new recipients to your contactdb via a webform, thanks to [Kraig Hufstedler](https://github.com/kraigh) for the PR!\n\n- Closes [#487](https://github.com/sendgrid/sendgrid-php/issues/487), PR [#506](https://github.com/sendgrid/sendgrid-php/pull/506):\nAdd helper to get all stats from a specified data range, thanks to [Milos Pejanovic](https://github.com/runz0rd) for the PR!\n\n- Closes [#368](https://github.com/sendgrid/sendgrid-php/issues/368), PR [#511](https://github.com/sendgrid/sendgrid-php/pull/511):\nAdd support for commas and semicolns in email name, thanks to [Quentin Ligier](https://github.com/qligier) for the PR!\n\n- Closes [#491](https://github.com/sendgrid/sendgrid-php/issues/491), PR [#493](https://github.com/sendgrid/sendgrid-php/pull/493:\nAllow for setting attachment content from path, thanks to [rparpa](https://github.com/rparpa) for the PR!\n\n## [6.1.0] - 2018-03-27 ##\n### Added\n- PR [#512](https://github.com/sendgrid/sendgrid-php/pull/512): Omit PHP closing tag in use case sample, thanks to [Sébastien Santoro](https://github.com/dereckson) for the PR!\n\n- PR [#575](https://github.com/sendgrid/sendgrid-php/pull/575): Add an example to the README.md describing how to send emails as HTML as the content type, thanks to [Benjamin Manford](https://github.com/manfordbenjamin) for the PR!\n\n- Closes [#547](https://github.com/sendgrid/sendgrid-php/issues/547), PR [#549](https://github.com/sendgrid/sendgrid-php/pull/549):\nAdded Code Review to Contributing.md, thanks to [tomhorvat](https://github.com/tomhorvat) for the PR!\n\n- PR [#565](https://github.com/sendgrid/sendgrid-php/pull/565): Add PHP 7.1 and 7.2 to Travis build matrix, thanks to [Emir Beganović](https://github.com/emirb) for the PR!\n\n- PR [#577](https://github.com/sendgrid/sendgrid-php/pull/577): Update PHP Version terms, thanks to [Siddhant Sharma](https://github.com/ssiddhantsharma) for the PR!\n\n- Closes [#540](https://github.com/sendgrid/sendgrid-php/issues/540), PR [#543](https://github.com/sendgrid/sendgrid-php/pull/543):\nFeature/split unit tests, thanks to [Owen Voke](https://github.com/pxgamer) for the PR!\n\n- Closes [#441](https://github.com/sendgrid/sendgrid-php/issues/441), PR [#467](https://github.com/sendgrid/sendgrid-php/pull/467):\nAdd deploy to heroku button, thanks to [pangaunn](https://github.com/pangaunn) for the PR!\n\n- Closes [#423](https://github.com/sendgrid/sendgrid-php/issues/423), PR [#510](https://github.com/sendgrid/sendgrid-php/pull/510):\nAdding Google App engine installation with composer instructions, thanks to [Nalin Bhardwaj](https://github.com/nalinbhardwaj) for the PR!\n\n- Closes [#541](https://github.com/sendgrid/sendgrid-php/issues/541), PR [#542](https://github.com/sendgrid/sendgrid-php/pull/542):\nAdded CodeCov support, thanks to [Owen Voke](https://github.com/pxgamer) for the PR!\n\n- PR [#539](https://github.com/sendgrid/sendgrid-php/pull/539): Rename LICENSE.txt to md, thanks to [Ankit Jain](https://github.com/ankitjain28may) for the PR!\n\n- Closes [#436](https://github.com/sendgrid/sendgrid-php/issues/436), PR [#535](https://github.com/sendgrid/sendgrid-php/pull/535): Add docker development setup, thanks to [Samundra Shrestha](https://github.com/samundra) for the PR!\n\n- Closes [#532](https://github.com/sendgrid/sendgrid-php/issues/532), PR [#537](https://github.com/sendgrid/sendgrid-php/pull/537): Add license date range unit test, thanks to [uppe-r](https://github.com/uppe-r) for the PR!\n\n- Closes [#533](https://github.com/sendgrid/sendgrid-php/issues/533), PR [#536](https://github.com/sendgrid/sendgrid-php/pull/536): Add unit test to check that specific files exist in repo, thanks to [Bertus Steenberg](https://github.com/bertuss) for the PR!\n\n- Closes [#524](https://github.com/sendgrid/sendgrid-php/issues/524), PR [#527](https://github.com/sendgrid/sendgrid-php/pull/527): Created code climate YML file, thanks to [Prashu Chaudhary](https://github.com/prashuchaudhary) for the PR!\n\n- Closes [#520](https://github.com/sendgrid/sendgrid-php/issues/520), PR [#523](https://github.com/sendgrid/sendgrid-php/pull/523): Added sample env file, thanks to [Joey Lee](https://github.com/yeoji) for the PR!\n\n- PR [#519](https://github.com/sendgrid/sendgrid-php/pull/519): Add github PR template, thanks to [Alex](https://github.com/pushkyn) for the PR!\n\n- PR [#513](https://github.com/sendgrid/sendgrid-php/pull/513): Update to PHP 7.0.0 refactor - Fix syntax error in refactor documentation, thanks to [Sébastien Santoro](https://github.com/dereckson) for the PR!\n\n- PR [#505](https://github.com/sendgrid/sendgrid-php/pull/505): Update README.md with additional badges, thanks to [Lalit Vijay](https://github.com/lalitvj) for the PR!\n\n- Closes [#500](https://github.com/sendgrid/sendgrid-php/issues/500), PR [#504](https://github.com/sendgrid/sendgrid-php/pull/504): SEO Friendly Section links, thanks to [Dharma Saputra](https://github.com/ladhadha) for the PR!\n\n- PR [#503](https://github.com/sendgrid/sendgrid-php/pull/503): Added new badges to README.md, thanks to [Alex](https://github.com/myzeprog) for the PR!\n\n- Closes [#492](https://github.com/sendgrid/sendgrid-php/issues/492), PR [#494](https://github.com/sendgrid/sendgrid-php/pull/494): Demonstrate how to review the request body for troubleshooting, thanks to [Alex](https://github.com/myzeprog) for the PR!\n\n- PR [#476](https://github.com/sendgrid/sendgrid-php/pull/476): Update README.md with license information, thanks to [Tarmo Leppänen](https://github.com/tarlepp) for the PR!\n\n- PR [#475](https://github.com/sendgrid/sendgrid-php/pull/475): Add documentation for setting up domain whitelabel, thanks to [Sourav Sarkar](https://github.com/amsourav) for the PR!\n\n- PR [#468](https://github.com/sendgrid/sendgrid-php/pull/463): Changes the recommendation to use composer as recommended source, thanks to [Gabriela D'Ávila Ferrara](https://github.com/gabidavila) for the PR!\n\n- PR [#463](https://github.com/sendgrid/sendgrid-php/pull/463): Add TROUBLESHOOTING.md section about fixing error 415, thanks to [AlbinoDrought](https://github.com/AlbinoDrought) for the PR!\n\n- PR [#456](https://github.com/sendgrid/sendgrid-php/pull/456): Added Code of Conduct, thanks to [Rubemlrm](https://github.com/Rubemlrm) for the PR!\n\n- PR [#439](https://github.com/sendgrid/sendgrid-php/pull/439): Update to PHP 7.0.0 refactor - Removal of Collections, thanks to [Joseph Opanel](https://github.com/jopanel) for the PR!\n\n- PR [#416](https://github.com/sendgrid/sendgrid-php/pull/416): Add release notifications, thanks to [Gabriel Krell](https://github.com/gabrielkrell) for the PR!\n\n- PR [#415](https://github.com/sendgrid/sendgrid-php/pull/415): Updated example.php to fix that there was no way for the sections to get substituted without their being a substitution that calls them, thanks to [Kyle Roberts](https://github.com/kylearoberts) for the PR!\n\n### Fixed\n- PR [#545](https://github.com/sendgrid/sendgrid-php/pull/545): Fix typo CONTRIBUTING.md, thanks to [thepriefy](https://github.com/thepriefy) for the PR!\n\n- PR [#588](https://github.com/sendgrid/sendgrid-php/pull/588): Fix broken unit tests\n\n- PR [#576](https://github.com/sendgrid/sendgrid-php/pull/576): API level addressing of the string-only in addSubstitution arg rule. Every long integer triggers a bad request, thanks to [Ezequiel Villarreal](https://github.com/saruman) for the PR!\n\n- PR [#517](https://github.com/sendgrid/sendgrid-php/pull/517): Fix typos in USAGE.md, thanks to [Anatoly](https://github.com/anatolyyyyyy) for the PR!\n\n- PR [#530](https://github.com/sendgrid/sendgrid-php/pull/530): Changed the license period., thanks to [Siddhant Sharma](https://github.com/ssiddhantsharma) for the PR!\n\n- PR [#514](https://github.com/sendgrid/sendgrid-php/pull/514): Don't close img tag in HTML, thanks to [Sébastien Santoro](https://github.com/dereckson) for the PR!\n\n- PR [#507](https://github.com/sendgrid/sendgrid-php/pull/507): Fix typos in various files, thanks to [Brandon Smith](https://github.com/brandon93s) for the PR!\n\n- Fixes [#336](https://github.com/sendgrid/sendgrid-php/issues/336), PR [#479](https://github.com/sendgrid/sendgrid-php/pull/479): Incorrect documentation path fixed, thanks to [Valerian Pereira](https://github.com/valerianpereira) for the PR!\n\n- PR [#465](https://github.com/sendgrid/sendgrid-php/pull/465): Fix typo in README.md, thanks to [shra1cumar](https://github.com/shra1cumar) for the PR!\n\n- PR [#449](https://github.com/sendgrid/sendgrid-php/pull/449): Fix typos in USAGE.md, thanks to [Cícero Pablo](https://github.com/ciceropablo) for the PR!\n\n- PR [#448](https://github.com/sendgrid/sendgrid-php/pull/448): Fix typos in TROUBLESHOOTING.md, thanks to [Cícero Pablo](https://github.com/ciceropablo) for the PR!\n\n- PR [#435](https://github.com/sendgrid/sendgrid-php/pull/435): Change spam_report() to spam_reports() in documentation and examples, thanks to [mrmxs](https://github.com/mrmxs) for the PR!\n\n- PR [#431](https://github.com/sendgrid/sendgrid-php/pull/431): Fixed minor typo during Mail creation, thanks to [joeldixon66](https://github.com/joeldixon66) for the PR!\n\n## [6.0.0] - 2017-06-30 ##\n### BREAKING CHANGE\n- PR #408: Update Mail constructor to signify which parameters are required for sending all email\n- The `Mail()` constructor now requires `$from`, `$subject`, `$to` and `$content` parameters like so: `Mail($from, $subject, $to, $content)`. Those are the minimally required parameters to send an email.\n- Thanks to [Casey Wilson](https://github.com/caseyw) for the PR!\n\n## [5.6.2] - 2017-06-29 ##\n### Fix\n- PR #410: Adding name for ReplyTo for issue #390\n- Thanks to [Casey Wilson](https://github.com/caseyw) for the PR!\n\n## [5.6.1] - 2017-06-26 ##\n### Fix\n- Versioning mistake (forgot the .0 at the end)\n\n## [5.6.0] - 2017-06-26 ##\n### Added\n- Pull #405: Updating docs and non-composer includes\n- Thanks to [Casey Wilson](https://github.com/caseyw) for the PR!\n\n## [5.5.1] - 2017-05-18 ##\n### Fixed\n- Pull #396: Use `print_r` instead of `echo` on Arrays\n- Thanks to [Ryan P.C. McQuen](https://github.com/ryanpcmcquen) for the PR!\n\n## [5.5.0] - 2017-05-04 ##\n### Added\n- Pull #393: Update [php-http-client](https://github.com/sendgrid/php-http-client) dependency\n- [v3.6](https://github.com/sendgrid/php-http-client/releases/tag/v3.6.0): Pass the curlOptions to the client in buildClient\n- [v3.7](https://github.com/sendgrid/php-http-client/releases/tag/v3.7.0): Added ability to get headers as associative array\n\n## [5.4.2] - 2017-04-18 ##\n### Fixes\n- Fixes #292\n- Removes Prism file in sendgrid-php.zip\n\n## [5.4.1] - 2017-04-04 ##\n### Added\n- Pull #373\n- PSR1 & PSR2 Conversion\n- Thanks to [Braunson Yager](https://github.com/Braunson) for the PR!\n\n## [5.4.0] - 2017-03-16 ##\n### Added\n- Pull #337\n- API level addressing of the string-only custom arg rule\n- Thanks to [Chris Schuld](https://github.com/cbschuld) for the PR!\n\n## [5.3.0] - 2017-03-15 ##\n### Added\n- Pull #367\n- UTF8 encoding forced for content value and message subject\n- Thanks to [Chris Schuld](https://github.com/cbschuld) for the PR!\n\n## [5.2.3] - 2017-03-03 ##\n### Fixed\n- Pull #334\n- Fixed serialization of empty JSON objects, fixes #332 & #314\n- Thanks to [Matthew Dreyer](https://github.com/Dreyer) for the PR!\n\n## [5.2.2] - 2017-03-03 ##\n### Fixed\n- Pull #323\n- Typo 'user' for 'usr'\n- Thanks to [Mike Ralphson](https://github.com/MikeRalphson) for the PR!\n\n## [5.2.1] - 2017-03-01 ##\n### Fixed\n- Pull #353\n- Fixed Issue #352\n- Relative path fix for background jobs\n- Thanks to [Tarcísio Zotelli Ferraz](https://github.com/tarcisiozf) for the PR!\n\n## [5.2.0] - 2017-02-23 ##\n### Added\n- Pull #346\n- Allow passing curlOptions to the client\n- Thanks to [Taluu](https://github.com/sendgrid/sendgrid-php/pull/346) for the PR!\n\n## [5.1.2] - 2016-10-11 ##\n### Added\n- Pull #330, Fixes #320\n- Delete subaccounts returns 200 issue resolved\n- The fix happened at the [php-http-client](https://github.com/sendgrid/php-http-client/releases/tag/v3.5.1) dependency.\n- Thanks to [emil](https://github.com/emilva) for the PR!\n\n## [5.1.1] - 2016-10-11 ##\n### Added\n- Pull #307, Fixes #276\n- Adds phpdoc and style fixes\n- Thanks to [Avishkar Autar](https://github.com/aautar) for the PR!\n\n## [5.1.0] - 2016-09-29 ##\n### Fixed\n- Pull #295: [Upgrade sendgrid/php-http-client](https://github.com/sendgrid/sendgrid-php/pull/295/files)\n- This adds getters for certain properties, please see [this pull request](https://github.com/sendgrid/php-http-client/pull/9) for details\n- Thanks to [Arjan Keeman](https://github.com/akeeman) for the pull request!\n\n## [5.0.9] - 2016-09-13 ##\n### Fixed\n- Pull request #289: [Replace \"\\jsonSerializable\" with \"\\JsonSerializable\" ](https://github.com/sendgrid/sendgrid-php/pull/289)\n- Thanks to [Issei.M](https://github.com/issei-m) for the pull request!\n\n## [5.0.8] - 2016-08-24 ##\n### Added\n- Table of Contents in the README\n- Added a [USE_CASES.md](USE_CASES.md) section, with the first use case example for transactional templates\n\n## [5.0.7] - 2016-07-25 ##\n### Added\n- [Troubleshooting](TROUBLESHOOTING.md) section\n\n## [5.0.6] - 2016-07-20 ##\n### Added\n- README updates\n- Update introduction blurb to include information regarding our forward path\n- Update the v3 /mail/send example to include non-helper usage\n- Update the generic v3 example to include non-fluent interface usage\n\n## [5.0.5] - 2016-07-12 ##\n### Added\n- Update docs, unit tests and examples to include Sender ID\n\n## [5.0.4] - 2016-07-07 ##\n### Added\n- Tests now mocked automatically against [prism](https://stoplight.io/prism/)\n\n## [5.0.3] - 2016-07-05 ##\n### Updated\n- Content based on our updated [Swagger/OAI doc](https://github.com/sendgrid/sendgrid-oai)\n\n## [5.0.2] - 2016-07-05 ##\n### Added\n- Accept: application/json header per https://sendgrid.com/docs/API_Reference/Web_API_v3/How_To_Use_The_Web_API_v3/requests.html\n\n### Updated\n- Content based on our updated [Swagger/OAI doc](https://github.com/sendgrid/sendgrid-oai)\n\n## [5.0.1] - 2016-06-17 ##\n### Fixed\n- Issue with packaged version for non-composer uses\n\n## [5.0.0] - 2016-06-13 ##\n### Added\n- Breaking change to support the v3 Web API\n- New HTTP client\n- v3 Mail Send helper\n\n## [v4.0.4] - (2016-02-18) ##\n### Added\n- Ability to add scopes to API Keys endpoint [POST]\n\n## [v4.0.3] - (2016-02-18) ##\n### Added\n- API Keys endpoint [PUT]\n\n## [v4.0.2] - (2015-12-15) ##\n### Added\n- Tests for API Keys endpoint [POST, PATCH, DELETE]\n\n## [v4.0.1] - (2015-12-03) ##\n### Fixed\n- HTTP 406 Not Acceptable Errors [#177](https://github.com/sendgrid/sendgrid-php/issues/177)\n\n## [v4.0.0] - (2015-10-16) ##\n### Added\n- Added support for accessing the [SendGrid Web API v3 endpoints](https://sendgrid.com/docs/API_Reference/Web_API_v3/index.html)\n- Implemented part of the /api_keys, /groups and /suppressions endpoints\n\n## [v3.2.0] - (2015-05-13) ##\n\n### Added\n- Specify Guzzle proxy via [#149](https://github.com/sendgrid/sendgrid-php/pull/149)\n- Option to disable exception raising\n\n## [v3.1.0] - (2015-04-27)\n### Added\n- Support for API keys\n\n## [v3.0.0] - (2015-04-14)\n### Fixed\n- CC and BCC not working with SMTPAPI To\n\n### Changed\n- **Breaking:** A `\\SendGrid\\Exception` is now raised when response is not 200\n- **Breaking:** `addTo` now uses the Web API parameter as opposed to the SMTPAPI Header. Substitutions will most likely break unless you update to use `addSmtpapiTo`\n- The library now depends on Guzzle3\n- Major refactoring\n\n### Added\n- **Breaking:** `send()` now returns an instance of `\\SendGrid\\Response`\n- Numerous missing methods for new functionality\n- `addSmtpapiTo` for using the SMTPAPI To\n\n## [v2.2.1] - (2014-01-29)\n### Fixed\n- Fix turn_off_ssl_verification option via [#123](https://github.com/sendgrid/sendgrid-php/pull/123)\n\n## [v2.2.0] - (2014-01-12)\n### Changed\n- Remove [Unirest](https://github.com/Mashape/unirest-php/) and replace with native cURL\n- Add CHANGELOG.md\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1748046875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n- Using welcoming and inclusive language\n- Being respectful of differing viewpoints and experiences\n- Gracefully accepting constructive criticism\n- Focusing on what is best for the community\n- Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n- The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n- Trolling, insulting/derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n- Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at open-source@twilio.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.80859375,
          "content": "Hello! Thank you for choosing to help contribute to one of the Twilio SendGrid open source libraries. There are many ways you can contribute and help is always welcome. We simply ask that you follow the following contribution policies.\n\nAll third party contributors acknowledge that any contributions they provide will be made under the same open source license that the open source project is provided under.\n\n- [Improvements to the Codebase](#improvements-to-the-codebase)\n  - [Development Environment](#development-environment)\n    - [Install and Run Locally](#install-and-run-locally)\n      - [Prerequisites](#prerequisites)\n      - [Initial setup:](#initial-setup)\n  - [Environment Variables](#environment-variables)\n      - [Execute:](#execute)\n- [Understanding the Code Base](#understanding-the-codebase)\n- [Testing](#testing)\n- [Style Guidelines & Naming Conventions](#style-guidelines--naming-conventions)\n- [Creating a Pull Request](#creating-a-pull-request)\n- [Code Reviews](#code-reviews)\n\nThere are a few ways to contribute, which we'll enumerate below:\n\n## Improvements to the Codebase\n\nWe welcome direct contributions to the sendgrid-php code base. Thank you!\n\nPlease note that we utilize the [Gitflow Workflow](https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow) for Git to help keep project development organized and consistent.\n\n### Development Environment ###\n\n#### Install and Run Locally ####\n\n##### Prerequisites #####\n\n- PHP version 7.3, 7.4, 8.0, or 8.1\n\n##### Initial setup: #####\n\n```bash\ngit clone https://github.com/sendgrid/sendgrid-php.git\ncd sendgrid-php\ncomposer install\n```\n\n### Environment Variables\n\nFirst, get your free Twilio SendGrid account [here](https://sendgrid.com/free?source=sendgrid-php).\n\nNext, update your environment with your [SENDGRID_API_KEY](https://app.sendgrid.com/settings/api_keys).\n\n```bash\necho \"export SENDGRID_API_KEY='YOUR_API_KEY'\" > sendgrid.env\necho \"sendgrid.env\" >> .gitignore\nsource ./sendgrid.env\n```\n\n##### Execute: #####\n\nSee the [examples folder](examples) or [README](README.md) to get started quickly.\n\nWe prefer the use of the Composer autoloader by loading `vendor/autoload.php`.\n\nThe examples will load `sendgrid-php.php` which is in the project root. This file verifies the existence of the Composer autoloader and warns you if dependencies are missing.\n\n## Understanding the Codebase\n\n**/examples**\n\nWorking examples that demonstrate usage.\n\n```bash\nphp examples/example.php\n```\n\n**/test/unit**\n\nUnit tests for the HTTP client.\n\n**/test/integration**\n\nUnit tests for the HTTP client.\n\n**/lib**\n\nThe interface to the Twilio SendGrid API. The subfolders are helpers.\n\n## Testing\n\nAll PRs require passing tests before the PR will be reviewed. All test files are in the [`/test/unit`](test/unit) directory. For the purposes of contributing to this repo, please update or add relevant test files [here](test) with tests as you modify the code.\n\nThe integration tests require a Twilio SendGrid mock API in order to execute. We've simplified setting this up using Docker to run the tests. You will just need [Docker Desktop](https://docs.docker.com/get-docker/) and `make`.\n\nOnce these are available, simply execute the Docker test target to run all tests: `make test-docker`. This command can also be used to open an interactive shell into the container where this library is installed. To start a *bash* shell for example, use this command: `command=bash make test-docker`.\n\n## Style Guidelines & Naming Conventions\n\nGenerally, we follow the style guidelines as suggested by the official language. However, we ask that you conform to the styles that already exist in the library. If you wish to deviate, please explain your reasoning.\n\n- [PSR2 Coding Standards](http://www.php-fig.org/psr/psr-2/)\n\nPlease run your code through:\n\n- [PHP Code Sniffer](https://github.com/squizlabs/PHP_CodeSniffer)\n\n## Creating a Pull Request\n\n1. [Fork](https://help.github.com/fork-a-repo/) the project, clone your fork,\n   and configure the remotes:\n\n   ```bash\n   # Clone your fork of the repo into the current directory\n   git clone https://github.com/sendgrid/sendgrid-php\n\n   # Navigate to the newly cloned directory\n   cd sendgrid-php\n\n   # Assign the original repo to a remote called \"upstream\"\n   git remote add upstream https://github.com/sendgrid/sendgrid-php\n   ```\n\n2. If you cloned a while ago, get the latest changes from upstream:\n\n   ```bash\n   git checkout <dev-branch>\n   git pull upstream <dev-branch>\n   ```\n\n3. Create a new topic branch off the `development` branch to\n   contain your feature, change, or fix:\n\n   ```bash\n   git checkout development\n   git checkout -b <topic-branch-name>\n   ```\n\n4. Commit your changes in logical chunks. Please adhere to these [git commit\n   message guidelines](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html)\n   or your code is unlikely to be merged into the main project. Use Git's\n   [interactive rebase](https://help.github.com/articles/interactive-rebase)\n   feature to tidy up your commits before making them public.\n\n4a. Create tests.\n\n4b. Create or update the example code that demonstrates the functionality of this change to the code.\n\n5. Locally merge (or rebase) the upstream `development` branch into your topic branch:\n\n   ```bash\n   git pull [--rebase] upstream development\n   ```\n\n6. Push your topic branch up to your fork:\n\n   ```bash\n   git push origin <topic-branch-name>\n   ```\n\n7. [Open a Pull Request](https://help.github.com/articles/using-pull-requests/)\n    with a clear title and description against the `development` branch. All tests must be passing before we will review the PR.\n\n## Code Reviews\n\nIf you can, please look at open PRs and review them. Give feedback and help us merge these PRs much faster! If you don't know how, GitHub has some [great information on how to review a Pull Request](https://help.github.com/articles/about-pull-request-reviews/).\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.400390625,
          "content": "ARG version=latest\nFROM php:$version\n\nRUN apt-get update \\\n    && apt-get install -y zip \\\n    && apt-get install -y libgmp-dev \\\n    && docker-php-ext-install gmp\n\nRUN curl -s https://getcomposer.org/installer | php \\\n    && mv composer.phar /usr/local/bin/composer\n\nCOPY prism/prism/nginx/cert.crt /usr/local/share/ca-certificates/cert.crt\nRUN update-ca-certificates\n\nWORKDIR /app\nCOPY . .\n\nRUN make install\n"
        },
        {
          "name": "FIRST_TIMERS.md",
          "type": "blob",
          "size": 2.853515625,
          "content": "# How To Contribute to Twilio SendGrid Repositories via GitHub\nContributing to the Twilio SendGrid repositories is easy! All you need to do is find an open issue (see the bottom of this page for a list of repositories containing open issues), fix it and submit a pull request. Once you have submitted your pull request, the team can easily review it before it is merged into the repository.\n\nTo make a pull request, follow these steps:\n\n1. Log into GitHub. If you do not already have a GitHub account, you will have to create one in order to submit a change. Click the Sign up link in the upper right-hand corner to create an account. Enter your username, password, and email address. If you are an employee of Twilio SendGrid, please use your full name with your GitHub account and enter Twilio SendGrid as your company so we can easily identify you.\n\n<img src=\"/static/img/github-sign-up.png\" width=\"800\">\n\n2. __[Fork](https://help.github.com/fork-a-repo/)__ the [sendgrid-php](https://github.com/sendgrid/sendgrid-php) repository:\n\n<img src=\"/static/img/github-fork.png\" width=\"800\">\n\n3. __Clone__  your fork via the following commands:\n\n```bash\n# Clone your fork of the repo into the current directory\ngit clone https://github.com/your_username/sendgrid-php\n# Navigate to the newly cloned directory\ncd sendgrid-php\n# Assign the original repo to a remote called \"upstream\"\ngit remote add upstream https://github.com/sendgrid/sendgrid-php\n```\n\n> Don't forget to replace *your_username* in the URL by your real GitHub username.\n\n4. __Create a new topic branch__ (off the main project development branch) to contain your feature, change, or fix:\n\n```bash\ngit checkout -b <topic-branch-name>\n```\n\n5. __Commit your changes__ in logical chunks.\n\nPlease adhere to these [git commit message guidelines](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html) or your code is unlikely be merged into the main project. Use Git's [interactive rebase](https://help.github.com/articles/interactive-rebase) feature to tidy up your commits before making them public. Probably you will also have to create tests (if needed) or create or update the example code that demonstrates the functionality of this change to the code.\n\n6. __Locally merge (or rebase)__ the upstream development branch into your topic branch:\n\n```bash\ngit pull [--rebase] upstream main\n```\n\n7. __Push__ your topic branch up to your fork:\n\n```bash\ngit push origin <topic-branch-name>\n```\n\n8. __[Open a Pull Request](https://help.github.com/articles/creating-a-pull-request/#changing-the-branch-range-and-destination-repository/)__ with a clear title and description against the `main` branch. All tests must be passing before we will review the PR.\n\n## Important notice\n\nBefore creating a pull request, make sure that you respect the repository's constraints regarding contributions. You can find them in the [CONTRIBUTING.md](CONTRIBUTING.md) file.\n"
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 0.72265625,
          "content": "<!--\nIf this is a feature request, make sure you search Issues for an existing request before creating a new one!\n\nPlease utilize the template below to help us resolve your issue.\n\nNote that many issues can be resolved by updating to the latest version.\n-->\n\n### Issue Summary\nA summary of the issue and the environment in which it occurs. If suitable, include the steps required to reproduce the bug. Please feel free to include screenshots, screencasts, or code examples.\n\n### Steps to Reproduce\n1. This is the first step\n2. This is the second step\n3. Further steps, etc.\n\n### Code Snippet\n```php\n# paste code here\n```\n\n### Exception/Log\n```\n# paste exception/log here\n```\n\n### Technical details:\n* sendgrid-php version: \n* php version:\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0712890625,
          "content": "MIT License\n\nCopyright (C) 2023, Twilio SendGrid, Inc. <help@twilio.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.8818359375,
          "content": ".PHONY: clean install ci-install test test-integ test-docker bundle\n\nclean:\n\t@rm -rf vendor composer.lock sendgrid-php.zip\n\nphp_version = `php -v | head -n 1 | cut -d \" \" -f 2`\n\ninstall: clean\nifdef GIT_HUB_TOKEN\n\tcomposer config -g github-oauth.github.com $(GIT_HUB_TOKEN)\nendif\n\n\tcomposer install\n\nifeq ($(dependencies), lowest)\n\tcomposer update --prefer-lowest --prefer-stable -n\nendif\n\nci-install: clean\n\tcomposer install --no-dev\n\ntest:\n\tvendor/bin/phpunit test/unit --filter test*\n\tvendor/bin/phpcs lib/*/*\n\tvendor/bin/phpstan analyse --memory-limit 1G --no-progress --level 1 lib test\n\ntest-integ: test\n\tvendor/bin/phpunit test --filter test*\n\nversion ?= latest\ntest-docker:\n\tdependencies=lowest version=$(version) bash ./prism.sh\n\tdependencies=highest version=$(version) bash ./prism.sh\n\nbundle: ci-install\n\tzip -r sendgrid-php.zip . -x \\*.git\\* \\*composer.json\\* \\*scripts\\* \\*test\\* \\*prism\\*\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 1.5654296875,
          "content": "<!--\nWe appreciate the effort for this pull request but before that please make sure you read the contribution guidelines, then fill out the blanks below.\n\nPlease format the PR title appropriately based on the type of change:\n  <type>[!]: <description>\nWhere <type> is one of: docs, chore, feat, fix, test, misc.\nAdd a '!' after the type for breaking changes (e.g. feat!: new breaking feature).\n\n**All third-party contributors acknowledge that any contributions they provide will be made under the same open-source license that the open-source project is provided under.**\n\nPlease enter each Issue number you are resolving in your PR after one of the following words [Fixes, Closes, Resolves]. This will auto-link these issues and close them when this PR is merged!\ne.g.\nFixes #1\nCloses #2\n-->\n\n# Fixes #\n\nA short description of what this PR does.\n\n### Checklist\n- [x] I acknowledge that all my contributions will be made under the project's license\n- [ ] I have made a material change to the repo (functionality, testing, spelling, grammar)\n- [ ] I have read the [Contribution Guidelines](https://github.com/sendgrid/sendgrid-php/blob/main/CONTRIBUTING.md) and my PR follows them\n- [ ] I have titled the PR appropriately\n- [ ] I have updated my branch with the main branch\n- [ ] I have added tests that prove my fix is effective or that my feature works\n- [ ] I have added the necessary documentation about the functionality in the appropriate .md file\n- [ ] I have added inline documentation to the code I modified\n\nIf you have questions, please file a [support ticket](https://support.sendgrid.com).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.5478515625,
          "content": "![SendGrid Logo](twilio_sendgrid_logo.png)\n\n[![BuildStatus](https://github.com/sendgrid/sendgrid-php/actions/workflows/test-and-deploy.yml/badge.svg)](https://github.com/sendgrid/sendgrid-php/actions/workflows/test-and-deploy.yml)\n[![Packagist](https://img.shields.io/packagist/v/sendgrid/sendgrid.svg)](https://packagist.org/packages/sendgrid/sendgrid)\n[![Downloads](https://img.shields.io/packagist/dt/sendgrid/sendgrid.svg?maxAge=3600)](https://packagist.org/packages/sendgrid/sendgrid)\n[![MIT licensed](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)\n[![Twitter Follow](https://img.shields.io/twitter/follow/sendgrid.svg?style=social&label=Follow)](https://twitter.com/sendgrid)\n[![GitHub contributors](https://img.shields.io/github/contributors/sendgrid/sendgrid-php.svg)](https://github.com/sendgrid/sendgrid-php/graphs/contributors)\n[![Open Source Helpers](https://www.codetriage.com/sendgrid/sendgrid-php/badges/users.svg)](https://www.codetriage.com/sendgrid/sendgrid-php)\n\n**NEW:**\n\n- Send SMS messages with [Twilio](USE_CASES.md#sms).\n\n**This library allows you to quickly and easily use the Twilio SendGrid Web API v3 via PHP.**\n\nVersion 7.X.X of this library provides full support for all Twilio SendGrid [Web API v3](https://sendgrid.com/docs/API_Reference/Web_API_v3/index.html) endpoints, including the new [v3 /mail/send](https://sendgrid.com/blog/introducing-v3mailsend-sendgrids-new-mail-endpoint).\n\n**If you need support using SendGrid, please check the [Twilio SendGrid Support Help Center](https://support.sendgrid.com).**\n\nPlease browse the rest of this README for further details.\n\nWe appreciate your continued support, thank you!\n\n# Table of Contents\n\n* [Installation](#installation)\n* [Quick Start](#quick-start)\n* [Use Cases](#use-cases)\n* [Usage](#usage)\n* [Announcements](#announcements)\n* [How to Contribute](#contribute)\n* [Troubleshooting](#troubleshooting)\n* [About](#about)\n* [Support](#support)\n* [License](#license)\n\n<a name=\"installation\"></a>\n# Installation\n\n## Prerequisites\n\n- PHP version 7.3, 7.4, 8.0, or 8.1\n- The Twilio SendGrid service, starting at the [free level](https://sendgrid.com/free?source=sendgrid-php) to send up to 40,000 emails for the first 30 days, then send 100 emails/day free forever or check out [our pricing](https://sendgrid.com/pricing?source=sendgrid-php).\n- For SMS messages, you will need a free [Twilio account](https://www.twilio.com/try-twilio?source=sendgrid-php).\n\n## Setup Environment Variables\n\nUpdate the development environment with your [SENDGRID_API_KEY](https://app.sendgrid.com/settings/api_keys), for example:\n\n1. Copy the sample env file to a new file named `.env`\n```bash\ncp .env.sample .env\n```\n2. Edit the `.env` file to include your `SENDGRID_API_KEY`\n3. Source the `.env` file\n```bash\nsource ./.env\n```\n\n## Install Package\n\nAdd Twilio SendGrid to your `composer.json` file. If you are not using [Composer](http://getcomposer.org), we highly recommend it. It's an excellent way to manage dependencies in your PHP application.\n\n```json\n{\n  \"require\": {\n    \"sendgrid/sendgrid\": \"~7\"\n  }\n}\n```\n\n### Alternative: Install package from zip\n\nIf you are not using Composer, simply download and install the **[latest packaged release of the library as a zip](https://github.com/sendgrid/sendgrid-php/releases/download/8.1.6/sendgrid-php.zip)**.\n\n[**⬇︎ Download Packaged Library ⬇︎**](https://github.com/sendgrid/sendgrid-php/releases/download/8.1.6/sendgrid-php.zip)\n\nPrevious versions of the library can be downloaded directly from [GitHub](https://github.com/sendgrid/sendgrid-php/releases).\n\n## Dependencies\n\n- The Twilio SendGrid Service, starting at the [free level](https://sendgrid.com/free?source=sendgrid-php)\n- The dependency-free [php-http-client](https://github.com/sendgrid/php-http-client)\n\n<a name=\"quick-start\"></a>\n# Quick Start\n\nInclude the proper lines from below at the top of each example based on your installation method:\n\n```php\n<?php\n// Uncomment the next line if you're using a dependency loader (such as Composer) (recommended)\n// require 'vendor/autoload.php';\n\n// Uncomment the next line if you're not using a dependency loader (such as Composer), replacing <PATH TO> with the path to the sendgrid-php.php file\n// require_once '<PATH TO>/sendgrid-php.php';\n```\n\n## Hello Email\n\nThe following is the minimum needed code to send an email. You may find more examples in our USE_CASES file:\n\n```php\n$email = new \\SendGrid\\Mail\\Mail();\n$email->setFrom(\"test@example.com\", \"Example User\");\n$email->setSubject(\"Sending with Twilio SendGrid is Fun\");\n$email->addTo(\"test@example.com\", \"Example User\");\n$email->addContent(\"text/plain\", \"and easy to do anywhere, even with PHP\");\n$email->addContent(\n    \"text/html\", \"<strong>and easy to do anywhere, even with PHP</strong>\"\n);\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '. $e->getMessage() .\"\\n\";\n}\n```\n\nThe `SendGrid\\Mail` constructor creates a [personalization object](https://sendgrid.com/docs/Classroom/Send/v3_Mail_Send/personalizations.html) for you. [Here](USE_CASES.md#kitchen-sink) is an example of how to add to it.\n\n## General v3 Web API Usage (With Fluent Interface)\n\n```php\n$apiKey = getenv('SENDGRID_API_KEY');\n$sg = new \\SendGrid($apiKey);\n\ntry {\n    $response = $sg->client->suppression()->bounces()->get();\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\n## General v3 Web API Usage (Without Fluent Interface)\n\n```php\n$apiKey = getenv('SENDGRID_API_KEY');\n$sg = new \\SendGrid($apiKey);\n\ntry {\n    $response = $sg->client->_(\"suppression/bounces\")->get();\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\n<a name=\"use-cases\"></a>\n# Use Cases\n\n[Examples of common API use cases](USE_CASES.md), such as how to send an email with a transactional template.\n\n<a name=\"usage\"></a>\n# Usage\n\n- [Twilio SendGrid Docs](https://sendgrid.com/docs/API_Reference/index.html)\n- [Generic Library Usage\n    Documentation](USAGE.md)\n- [Example Code](USE_CASES.md)\n\n<a name=\"announcements\"></a>\n# Announcements\n\nv7 has been released! Please see the [release notes](https://github.com/sendgrid/sendgrid-php/releases/tag/v7.0.0) for details.\n\nAll updates to this library are documented in our [CHANGELOG](CHANGELOG.md) and [releases](https://github.com/sendgrid/sendgrid-php/releases).\n\n<a name=\"contribute\"></a>\n# How to Contribute\n\nWe encourage contribution to our libraries (you might even score some nifty swag), please see our [CONTRIBUTING](CONTRIBUTING.md) guide for details.\n\nQuick links:\n\n- [Feature Request](CONTRIBUTING.md#feature_request)\n- [Bug Reports](CONTRIBUTING.md#submit_a_bug_report)\n- [Improvements to the Codebase](CONTRIBUTING.md#improvements_to_the_codebase)\n- [Review Pull Requests](CONTRIBUTING.md#code-reviews)\n\n<a name=\"troubleshooting\"></a>\n# Troubleshooting\n\nPlease see our [troubleshooting guide](TROUBLESHOOTING.md) for common library issues.\n\n<a name=\"about\"></a>\n# About\n\nsendgrid-php is maintained and funded by Twilio SendGrid, Inc. The names and logos for sendgrid-php are trademarks of Twilio SendGrid, Inc.\n\n<a name=\"support\"></a>\n# Support\n\nFor product support, please check the [Twilio SendGrid Support Help Center](https://support.sendgrid.com).\n\n# License\n[The MIT License (MIT)](LICENSE)\n"
        },
        {
          "name": "TROUBLESHOOTING.md",
          "type": "blob",
          "size": 6.0791015625,
          "content": "If you have an issue logging into your Twilio SendGrid account, please read this [document](https://sendgrid.com/docs/ui/account-and-settings/troubleshooting-login/). For any questions regarding login issues, please contact our [support team](https://support.sendgrid.com).\n\nIf you have a non-library Twilio SendGrid issue, please contact our [support team](https://support.sendgrid.com).\n\nIf you can't find a solution below, please open an [issue](https://github.com/sendgrid/sendgrid-php/issues).\n\n## Table of Contents\n\n- [Table of Contents](#table-of-contents)\n- [Migrating from v2 to v3](#migrating-from-v2-to-v3)\n- [Continue Using v2](#continue-using-v2)\n- [Testing v3 /mail/send Calls Directly](#testing-v3-mailsend-calls-directly)\n- [Error Messages](#error-messages)\n- [Versions](#versions)\n- [Environment Variables and Your Twilio SendGrid API Key](#environment-variables-and-your-twilio-sendgrid-api-key)\n- [Using the Package Manager](#using-the-package-manager)\n- [Fixing Error 415](#fixing-error-415)\n- [Viewing the Request Body](#viewing-the-request-body)\n- [Google App Engine installation](#google-app-engine-installation)\n- [Verifying Event Webhooks](#signed-webhooks)\n\n<a name=\"migrating\"></a>\n## Migrating from v2 to v3\n\nIn this context, we are referring to the version of the Twilio SendGrid API.\n\nPlease review [our guide](https://sendgrid.com/docs/Classroom/Send/v3_Mail_Send/how_to_migrate_from_v2_to_v3_mail_send.html) on how to migrate from v2 to v3.\n\n<a name=\"v2\"></a>\n## Continue Using v2\n\nIn this context, we are referring to the version of the Twilio SendGrid API.\n\n[Here](https://github.com/sendgrid/sendgrid-php/releases/tag/v4.0.4) is the last working version with v2 support.\n\nUsing composer:\n\n```json\n{\n  \"require\": {\n    \"sendgrid/sendgrid\": \"~4.0.4\"\n  }\n}\n```\n\nDownload packaged zip [here](https://sendgrid-open-source.s3.amazonaws.com/sendgrid-php/versions/sendgrid-php-75970eb.zip).\n\n<a name=\"testing\"></a>\n## Testing v3 /mail/send Calls Directly\n\n[Here](https://sendgrid.com/docs/for-developers/sending-email/curl-examples/) are some cURL examples for common use cases.\n\n<a name=\"error\"></a>\n## Error Messages\n\nFailed requests will always return an error response, including a response code, a message explaining the reason for the error, and a link to any relevant documentation that may help you troubleshoot the problem.\n\nTo read the error message returned by Twilio SendGrid's API:\n\n```php\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\"; // Twilio SendGrid specific errors are found here\n} catch (Exception $e) {\n    echo 'Caught exception: ',  $e->getMessage(), \"\\n\";\n}\n```\n\nYou may find complete documentation [here](https://sendgrid.com/docs/API_Reference/Web_API_v3/Mail/errors.html).\n\n<a name=\"versions\"></a>\n## Versions\n\nWe follow the MAJOR.MINOR.PATCH versioning scheme as described by [SemVer.org](http://semver.org). Therefore, we recommend that you always pin (or vendor) the particular version you are working with to your code and never auto-update to the latest version. Especially when there is a MAJOR point release, since that is guaranteed to be a breaking change. Changes are documented in the [CHANGELOG](CHANGELOG.md) and [releases](https://github.com/sendgrid/sendgrid-php/releases) section.\n\n<a name=\"environment\"></a>\n## Environment Variables and Your Twilio SendGrid API Key\n\nAll of our examples assume you are using [environment variables](https://github.com/sendgrid/sendgrid-php#setup-environment-variables) to hold your Twilio SendGrid API key.\n\nIf you choose to add your Twilio SendGrid API key directly (not recommended):\n\n`$apiKey = getenv('SENDGRID_API_KEY');`\n\nbecomes\n\n`$apiKey = 'SENDGRID_API_KEY';`\n\nIn the first case SENDGRID_API_KEY is in reference to the name of the environment variable, while the second case references the actual Twilio SendGrid API Key.\n\n<a name=\"package-manager\"></a>\n## Using the Package Manager\n\nWe upload this library to [Packagist](https://packagist.org/packages/sendgrid/sendgrid) whenever we make a release. This allows you to use [composer](https://getcomposer.org) for easy installation.\n\nIn most cases we recommend you download the latest version of the library, but if you need a different version, please use:\n\n```json\n{\n  \"require\": {\n    \"sendgrid/sendgrid\": \"~X.X.X\"\n  }\n}\n```\n\n<a name=\"error-415\"></a>\n## Fixing Error 415\n\nIf you're getting the following error while using this library:\n\n`Content-Type should be application/json.`\n\nIt is most likely due to a linebreak in your API key. Passing your key through `trim` should fix this:\n\n`$apiKey = trim($apiKey)`\n\n<a name=\"request-body\"></a>\n## Viewing the Request Body\n\nWhen debugging or testing, it may be useful to examine the raw request body to compare against the [documented format](https://sendgrid.com/docs/API_Reference/api_v3.html).\n\nYou can do this right before you call `$response = $sg->send($email);` like so:\n\n```php\necho json_encode($email, JSON_PRETTY_PRINT);\n```\n\n<a name=\"GAE-instructions\"></a>\n## Google App Engine installation\n\nPlease refer to [`USE_CASES.md`](USE_CASES.md#GAE-instructions) for additional instructions.\n\n<a name=\"signed-webhooks\"></a>\n## Signed Webhook Verification\n\nTwilio SendGrid's Event Webhook will notify a URL via HTTP POST with information about events that occur as your mail is processed. [This](https://docs.sendgrid.com/for-developers/tracking-events/getting-started-event-webhook-security-features) article covers all you need to know to secure the Event Webhook, allowing you to verify that incoming requests originate from Twilio SendGrid. The sendgrid-php library can help you verify these Signed Event Webhooks.\n\nYou can find the usage example [here](examples/helpers/eventwebhook/example.php) and the tests [here](test/unit/EventWebhookTest.php). \nIf you are still having trouble getting the validation to work, follow the following instructions:\n- Be sure to use the *raw* payload for validation\n- Be sure to include a trailing carriage return and newline in your payload\n- In case of multi-event webhooks, make sure you include the trailing newline and carriage return after *each* event\n"
        },
        {
          "name": "UPGRADE.md",
          "type": "blob",
          "size": 0.2109375,
          "content": "# Upgrade Guide\n\n_MAJOR version bumps will have upgrade notes posted here._\n\n[2022-05-04] 7.x.x to 8.x.x\n---------------------------\n\n### CHANGED - Drop support for PHP versions 5.6, 7.0, 7.1, and 7.2 which are EOL.\n"
        },
        {
          "name": "USAGE.md",
          "type": "blob",
          "size": 200.8994140625,
          "content": "This documentation is based on our [OAI specification](https://github.com/sendgrid/sendgrid-oai).\n\n# INITIALIZATION\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\n$apiKey = getenv('SENDGRID_API_KEY');\n$sg = new \\SendGrid($apiKey);\n```\n\n# Table of Contents\n\n* [ACCESS SETTINGS](#access-settings)\n* [ALERTS](#alerts)\n* [API KEYS](#api-keys)\n* [ASM](#asm)\n* [BROWSERS](#browsers)\n* [CAMPAIGNS](#campaigns)\n* [CATEGORIES](#categories)\n* [CLIENTS](#clients)\n* [CONTACTDB](#contactdb)\n* [DEVICES](#devices)\n* [EMAIL ACTIVITY](#email-activity)\n* [GEO](#geo)\n* [IPS](#ips)\n* [MAIL](#mail)\n* [MAIL SETTINGS](#mail-settings)\n* [MAILBOX PROVIDERS](#mailbox-providers)\n* [PARTNER SETTINGS](#partner-settings)\n* [SCOPES](#scopes)\n* [SENDERS](#senders)\n* [SENDER AUTHENTICATION](#sender-authentication)\n* [STATS](#stats)\n* [SUBUSERS](#subusers)\n* [SUPPRESSION](#suppression)\n* [TEMPLATES](#templates)\n* [TRACKING SETTINGS](#tracking-settings)\n* [USER](#user)\n\n\n<a name=\"access-settings\"></a>\n# ACCESS SETTINGS\n\n## Retrieve all recent access attempts\n\n**This endpoint allows you to retrieve a list of all of the IP addresses that recently attempted to access your account either through the User Interface or the API.**\n\nIP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.\n\nFor more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).\n\n### GET /access_settings/activity\n\n\n```php\n$query_params = json_decode('{\"limit\": 1}');\n$response = $sg->client->access_settings()->activity()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Add one or more IPs to the whitelist\n\n**This endpoint allows you to add one or more IP addresses to your IP whitelist.**\n\nWhen adding an IP to your whitelist, include the IP address in an array. You can whitelist one IP at a time, or you can whitelist multiple IPs at once.\n\nIP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.\n\nFor more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).\n\n### POST /access_settings/whitelist\n\n\n```php\n$request_body = json_decode('{\n  \"ips\": [\n    {\n      \"ip\": \"192.168.1.1\"\n    },\n    {\n      \"ip\": \"192.*.*.*\"\n    },\n    {\n      \"ip\": \"192.168.1.3/32\"\n    }\n  ]\n}');\n$response = $sg->client->access_settings()->whitelist()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a list of currently whitelisted IPs\n\n**This endpoint allows you to retrieve a list of IP addresses that are currently whitelisted.**\n\nIP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.\n\nFor more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).\n\n### GET /access_settings/whitelist\n\n\n```php\n$response = $sg->client->access_settings()->whitelist()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Remove one or more IPs from the whitelist\n\n**This endpoint allows you to remove one or more IPs from your IP whitelist.**\n\nYou can remove one IP at a time, or you can remove multiple IP addresses.\n\nIP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.\n\nFor more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).\n\n### DELETE /access_settings/whitelist\n\n\n```php\n$request_body = json_decode('{\n  \"ids\": [\n    1,\n    2,\n    3\n  ]\n}');\n$response = $sg->client->access_settings()->whitelist()->delete($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a specific whitelisted IP\n\n**This endpoint allows you to retrieve a specific IP address that has been whitelisted.**\n\nYou must include the ID for the specific IP address you want to retrieve in your call.\n\nIP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.\n\nFor more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).\n\n### GET /access_settings/whitelist/{rule_id}\n\n\n```php\n$rule_id = \"test_url_param\";\n$response = $sg->client->access_settings()->whitelist()->_($rule_id)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Remove a specific IP from the whitelist\n\n**This endpoint allows you to remove a specific IP address from your IP whitelist.**\n\nWhen removing a specific IP address from your whitelist, you must include the ID in your call.\n\nIP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.\n\nFor more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).\n\n### DELETE /access_settings/whitelist/{rule_id}\n\n\n```php\n$rule_id = \"test_url_param\";\n$response = $sg->client->access_settings()->whitelist()->_($rule_id)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"alerts\"></a>\n# ALERTS\n\n## Create a new Alert\n\n**This endpoint allows you to create a new alert.**\n\nAlerts allow you to specify an email address to receive notifications regarding your email usage or statistics.\n* Usage alerts allow you to set the threshold at which an alert will be sent.\n* Stats notifications allow you to set how frequently you would like to receive email statistics reports. For example, \"daily\", \"weekly\", or \"monthly\".\n\nFor more information about alerts, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/alerts.html).\n\n### POST /alerts\n\n\n```php\n$request_body = json_decode('{\n  \"email_to\": \"example@example.com\",\n  \"frequency\": \"daily\",\n  \"type\": \"stats_notification\"\n}');\n$response = $sg->client->alerts()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all alerts\n\n**This endpoint allows you to retrieve all of your alerts.**\n\nAlerts allow you to specify an email address to receive notifications regarding your email usage or statistics.\n* Usage alerts allow you to set the threshold at which an alert will be sent.\n* Stats notifications allow you to set how frequently you would like to receive email statistics reports. For example, \"daily\", \"weekly\", or \"monthly\".\n\nFor more information about alerts, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/alerts.html).\n\n### GET /alerts\n\n\n```php\n$response = $sg->client->alerts()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update an alert\n\n**This endpoint allows you to update an alert.**\n\nAlerts allow you to specify an email address to receive notifications regarding your email usage or statistics.\n* Usage alerts allow you to set the threshold at which an alert will be sent.\n* Stats notifications allow you to set how frequently you would like to receive email statistics reports. For example, \"daily\", \"weekly\", or \"monthly\".\n\nFor more information about alerts, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/alerts.html).\n\n### PATCH /alerts/{alert_id}\n\n\n```php\n$request_body = json_decode('{\n  \"email_to\": \"example@example.com\"\n}');\n$alert_id = \"test_url_param\";\n$response = $sg->client->alerts()->_($alert_id)->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a specific alert\n\n**This endpoint allows you to retrieve a specific alert.**\n\nAlerts allow you to specify an email address to receive notifications regarding your email usage or statistics.\n* Usage alerts allow you to set the threshold at which an alert will be sent.\n* Stats notifications allow you to set how frequently you would like to receive email statistics reports. For example, \"daily\", \"weekly\", or \"monthly\".\n\nFor more information about alerts, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/alerts.html).\n\n### GET /alerts/{alert_id}\n\n\n```php\n$alert_id = \"test_url_param\";\n$response = $sg->client->alerts()->_($alert_id)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete an alert\n\n**This endpoint allows you to delete an alert.**\n\nAlerts allow you to specify an email address to receive notifications regarding your email usage or statistics.\n* Usage alerts allow you to set the threshold at which an alert will be sent.\n* Stats notifications allow you to set how frequently you would like to receive email statistics reports. For example, \"daily\", \"weekly\", or \"monthly\".\n\nFor more information about alerts, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/alerts.html).\n\n### DELETE /alerts/{alert_id}\n\n\n```php\n$alert_id = \"test_url_param\";\n$response = $sg->client->alerts()->_($alert_id)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"api-keys\"></a>\n# API KEYS\n\n## Create API keys\n\n**This endpoint allows you to create a new random API Key for the user.**\n\nA JSON request body containing a \"name\" property is required. If a number of maximum keys is reached, HTTP 403 will be returned.\n\nThere is a limit of 100 API Keys on your account.\n\nThe API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the Twilio SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).\n\nSee the [API Key Permissions List](https://sendgrid.com/docs/API_Reference/Web_API_v3/API_Keys/api_key_permissions_list.html) for a list of all available scopes.\n\n### POST /api_keys\n\n\n```php\n$request_body = json_decode('{\n  \"name\": \"My API Key\",\n  \"sample\": \"data\",\n  \"scopes\": [\n    \"mail.send\",\n    \"alerts.create\",\n    \"alerts.read\"\n  ]\n}');\n$response = $sg->client->api_keys()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all API Keys belonging to the authenticated user\n\n**This endpoint allows you to retrieve all API Keys that belong to the authenticated user.**\n\nThe API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the Twilio SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).\n\n### GET /api_keys\n\n\n```php\n$query_params = json_decode('{\"limit\": 1}');\n$response = $sg->client->api_keys()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update the name & scopes of an API Key\n\n**This endpoint allows you to update the name and scopes of a given API key.**\n\nA JSON request body with a \"name\" property is required.\nMost provide the list of all the scopes an API key should have.\n\nThe API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the Twilio SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).\n\n\n### PUT /api_keys/{api_key_id}\n\n\n```php\n$request_body = json_decode('{\n  \"name\": \"A New Hope\",\n  \"scopes\": [\n    \"user.profile.read\",\n    \"user.profile.update\"\n  ]\n}');\n$api_key_id = \"test_url_param\";\n$response = $sg->client->api_keys()->_($api_key_id)->put($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update API keys\n\n**This endpoint allows you to update the name of an existing API Key.**\n\nA JSON request body with a \"name\" property is required.\n\nThe API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the Twilio SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).\n\n## URI Parameters\n\n| URI Parameter   | Type  | Required?  | Description  |\n|---|---|---|---|\n|api_key_id |string | required | The ID of the API Key you are updating.|\n\n### PATCH /api_keys/{api_key_id}\n\n\n```php\n$request_body = json_decode('{\n  \"name\": \"A New Hope\"\n}');\n$api_key_id = \"test_url_param\";\n$response = $sg->client->api_keys()->_($api_key_id)->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve an existing API Key\n\n**This endpoint allows you to retrieve a single API key.**\n\nIf the API Key ID does not exist an HTTP 404 will be returned.\n\n### GET /api_keys/{api_key_id}\n\n\n```php\n$api_key_id = \"test_url_param\";\n$response = $sg->client->api_keys()->_($api_key_id)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete API keys\n\n**This endpoint allows you to revoke an existing API Key**\n\nAuthentications using this API Key will fail after this request is made, with some small propagation delay. If the API Key ID does not exist an HTTP 404 will be returned.\n\nThe API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the Twilio SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).\n\n## URI Parameters\n\n| URI Parameter   | Type  | Required?  | Description  |\n|---|---|---|---|\n|api_key_id |string | required | The ID of the API Key you are deleting.|\n\n### DELETE /api_keys/{api_key_id}\n\n\n```php\n$api_key_id = \"test_url_param\";\n$response = $sg->client->api_keys()->_($api_key_id)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"asm\"></a>\n# ASM\n\n## Create a new suppression group\n\n**This endpoint allows you to create a new suppression group.**\n\nSuppression groups, or unsubscribe groups, are specific types or categories of email that you would like your recipients to be able to unsubscribe from. For example: Daily Newsletters, Invoices, System Alerts.\n\nThe **name** and **description** of the unsubscribe group will be visible by recipients when they are managing their subscriptions.\n\nEach user can create up to 25 different suppression groups.\n\n### POST /asm/groups\n\n\n```php\n$request_body = json_decode('{\n  \"description\": \"Suggestions for products our users might like.\",\n  \"is_default\": true,\n  \"name\": \"Product Suggestions\"\n}');\n$response = $sg->client->asm()->groups()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve information about multiple suppression groups\n\n**This endpoint allows you to retrieve information about multiple suppression groups.**\n\nThis endpoint will return information for each group ID that you include in your request. To add a group ID to your request, simply append `&id=` followed by the group ID.\n\nSuppressions are a list of email addresses that will not receive content sent under a given [group](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html).\n\nSuppression groups, or [unsubscribe groups](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html), allow you to label a category of content that you regularly send. This gives your recipients the ability to opt out of a specific set of your email. For example, you might define a group for your transactional email, and one for your marketing email so that your users can continue receiving your transactional email without having to receive your marketing content.\n\n### GET /asm/groups\n\n\n```php\n$query_params = json_decode('{\"id\": 1}');\n$response = $sg->client->asm()->groups()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update a suppression group.\n\n**This endpoint allows you to update or change a suppression group.**\n\nSuppression groups, or unsubscribe groups, are specific types or categories of email that you would like your recipients to be able to unsubscribe from. For example: Daily Newsletters, Invoices, System Alerts.\n\nThe **name** and **description** of the unsubscribe group will be visible by recipients when they are managing their subscriptions.\n\nEach user can create up to 25 different suppression groups.\n\n### PATCH /asm/groups/{group_id}\n\n\n```php\n$request_body = json_decode('{\n  \"description\": \"Suggestions for items our users might like.\",\n  \"id\": 103,\n  \"name\": \"Item Suggestions\"\n}');\n$group_id = \"test_url_param\";\n$response = $sg->client->asm()->groups()->_($group_id)->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Get information on a single suppression group.\n\n**This endpoint allows you to retrieve a single suppression group.**\n\nSuppression groups, or unsubscribe groups, are specific types or categories of email that you would like your recipients to be able to unsubscribe from. For example: Daily Newsletters, Invoices, System Alerts.\n\nThe **name** and **description** of the unsubscribe group will be visible by recipients when they are managing their subscriptions.\n\nEach user can create up to 25 different suppression groups.\n\n### GET /asm/groups/{group_id}\n\n\n```php\n$group_id = \"test_url_param\";\n$response = $sg->client->asm()->groups()->_($group_id)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a suppression group.\n\n**This endpoint allows you to delete a suppression group.**\n\nYou can only delete groups that have not been attached to sent mail in the last 60 days. If a recipient uses the \"one-click unsubscribe\" option on an email associated with a deleted group, that recipient will be added to the global suppression list.\n\nSuppression groups, or unsubscribe groups, are specific types or categories of email that you would like your recipients to be able to unsubscribe from. For example: Daily Newsletters, Invoices, System Alerts.\n\nThe **name** and **description** of the unsubscribe group will be visible by recipients when they are managing their subscriptions.\n\nEach user can create up to 25 different suppression groups.\n\n### DELETE /asm/groups/{group_id}\n\n\n```php\n$group_id = \"test_url_param\";\n$response = $sg->client->asm()->groups()->_($group_id)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Add suppressions to a suppression group\n\n**This endpoint allows you to add email addresses to an unsubscribe group.**\n\nIf you attempt to add suppressions to a group that has been deleted or does not exist, the suppressions will be added to the global suppressions list.\n\nSuppressions are recipient email addresses that are added to [unsubscribe groups](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html). Once a recipient's address is on the suppressions list for an unsubscribe group, they will not receive any emails that are tagged with that unsubscribe group.\n\n### POST /asm/groups/{group_id}/suppressions\n\n\n```php\n$request_body = json_decode('{\n  \"recipient_emails\": [\n    \"test1@example.com\",\n    \"test2@example.com\"\n  ]\n}');\n$group_id = \"test_url_param\";\n$response = $sg->client->asm()->groups()->_($group_id)->suppressions()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all suppressions for a suppression group\n\n**This endpoint allows you to retrieve all suppressed email addresses belonging to the given group.**\n\nSuppressions are recipient email addresses that are added to [unsubscribe groups](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html). Once a recipient's address is on the suppressions list for an unsubscribe group, they will not receive any emails that are tagged with that unsubscribe group.\n\n### GET /asm/groups/{group_id}/suppressions\n\n\n```php\n$group_id = \"test_url_param\";\n$response = $sg->client->asm()->groups()->_($group_id)->suppressions()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Search for suppressions within a group\n\n**This endpoint allows you to search a suppression group for multiple suppressions.**\n\nWhen given a list of email addresses and a group ID, this endpoint will return only the email addresses that have been unsubscribed from the given group.\n\nSuppressions are a list of email addresses that will not receive content sent under a given [group](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html).\n\n### POST /asm/groups/{group_id}/suppressions/search\n\n\n```php\n$request_body = json_decode('{\n  \"recipient_emails\": [\n    \"exists1@example.com\",\n    \"exists2@example.com\",\n    \"doesnotexists@example.com\"\n  ]\n}');\n$group_id = \"test_url_param\";\n$response = $sg->client->asm()->groups()->_($group_id)->suppressions()->search()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a suppression from a suppression group\n\n**This endpoint allows you to remove a suppressed email address from the given suppression group.**\n\nSuppressions are recipient email addresses that are added to [unsubscribe groups](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html). Once a recipient's address is on the suppressions list for an unsubscribe group, they will not receive any emails that are tagged with that unsubscribe group.\n\n### DELETE /asm/groups/{group_id}/suppressions/{email}\n\n\n```php\n$group_id = \"test_url_param\";\n$email = \"test_url_param\";\n$response = $sg->client->asm()->groups()->_($group_id)->suppressions()->_($email)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all suppressions\n\n**This endpoint allows you to retrieve a list of all suppressions.**\n\nSuppressions are a list of email addresses that will not receive content sent under a given [group](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html).\n\n### GET /asm/suppressions\n\n\n```php\n$response = $sg->client->asm()->suppressions()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Add recipient addresses to the global suppression group.\n\n**This endpoint allows you to add one or more email addresses to the global suppressions group.**\n\nA global suppression (or global unsubscribe) is an email address of a recipient who does not want to receive any of your messages. A globally suppressed recipient will be removed from any email you send. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/global_unsubscribes.html).\n\n### POST /asm/suppressions/global\n\n\n```php\n$request_body = json_decode('{\n  \"recipient_emails\": [\n    \"test1@example.com\",\n    \"test2@example.com\"\n  ]\n}');\n$response = $sg->client->asm()->suppressions()->global()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a Global Suppression\n\n**This endpoint allows you to retrieve a global suppression. You can also use this endpoint to confirm if an email address is already globally suppressed.**\n\nIf the email address you include in the URL path parameter `{email}` is already globally suppressed, the response will include that email address. If the address you enter for `{email}` is not globally suppressed, an empty JSON object `{}` will be returned.\n\nA global suppression (or global unsubscribe) is an email address of a recipient who does not want to receive any of your messages. A globally suppressed recipient will be removed from any email you send. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/global_unsubscribes.html).\n\n### GET /asm/suppressions/global/{email}\n\n\n```php\n$email = \"test_url_param\";\n$response = $sg->client->asm()->suppressions()->global()->_($email)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a Global Suppression\n\n**This endpoint allows you to remove an email address from the global suppressions group.**\n\nA global suppression (or global unsubscribe) is an email address of a recipient who does not want to receive any of your messages. A globally suppressed recipient will be removed from any email you send. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/global_unsubscribes.html).\n\n### DELETE /asm/suppressions/global/{email}\n\n\n```php\n$email = \"test_url_param\";\n$response = $sg->client->asm()->suppressions()->global()->_($email)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all suppression groups for an email address\n\n**This endpoint returns the list of all groups that the given email address has been unsubscribed from.**\n\nSuppressions are a list of email addresses that will not receive content sent under a given [group](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html).\n\n### GET /asm/suppressions/{email}\n\n\n```php\n$email = \"test_url_param\";\n$response = $sg->client->asm()->suppressions()->_($email)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"browsers\"></a>\n# BROWSERS\n\n## Retrieve email statistics by a browser.\n\n**This endpoint allows you to retrieve your email statistics segmented by browser type.**\n\n**We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.\n\nAdvanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).\n\n### GET /browsers/stats\n\n\n```php\n$query_params = json_decode('{\"end_date\": \"2016-04-01\", \"aggregated_by\": \"day\", \"browsers\": \"test_string\", \"limit\": \"test_string\", \"offset\": \"test_string\", \"start_date\": \"2016-01-01\"}');\n$response = $sg->client->browsers()->stats()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"campaigns\"></a>\n# CAMPAIGNS\n\n## Create a Campaign\n\n**This endpoint allows you to create a campaign.**\n\nOur Marketing Campaigns API lets you create, manage, send, and schedule campaigns.\n\nNote: In order to send or schedule the campaign, you will be required to provide a subject, sender ID, content (we suggest both HTML and plain text), and at least one list or segment ID. This information is not required when you create a campaign.\n\nFor more information:\n\n* [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)\n\n### POST /campaigns\n\n\n```php\n$request_body = json_decode('{\n  \"categories\": [\n    \"spring line\"\n  ],\n  \"custom_unsubscribe_url\": \"\",\n  \"html_content\": \"<html><head><title></title></head><body><p>Check out our spring line!</p></body></html>\",\n  \"ip_pool\": \"marketing\",\n  \"list_ids\": [\n    110,\n    124\n  ],\n  \"plain_content\": \"Check out our spring line!\",\n  \"segment_ids\": [\n    110\n  ],\n  \"sender_id\": 124451,\n  \"subject\": \"New Products for Spring!\",\n  \"suppression_group_id\": 42,\n  \"title\": \"March Newsletter\"\n}');\n$response = $sg->client->campaigns()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all Campaigns\n\n**This endpoint allows you to retrieve a list of all of your campaigns.**\n\nReturns campaigns in reverse order they were created (newest first).\n\nReturns an empty array if no campaigns exist.\n\nFor more information:\n\n* [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)\n\n### GET /campaigns\n\n\n```php\n$query_params = json_decode('{\"limit\": 1, \"offset\": 1}');\n$response = $sg->client->campaigns()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update a Campaign\n\nUpdate a campaign. This is especially useful if you only set up the campaign using POST /campaigns, but didn't set many of the parameters.\n\nFor more information:\n\n* [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)\n\n### PATCH /campaigns/{campaign_id}\n\n\n```php\n$request_body = json_decode('{\n  \"categories\": [\n    \"summer line\"\n  ],\n  \"html_content\": \"<html><head><title></title></head><body><p>Check out our summer line!</p></body></html>\",\n  \"plain_content\": \"Check out our summer line!\",\n  \"subject\": \"New Products for Summer!\",\n  \"title\": \"May Newsletter\"\n}');\n$campaign_id = \"test_url_param\";\n$response = $sg->client->campaigns()->_($campaign_id)->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a single campaign\n\n**This endpoint allows you to retrieve a specific campaign.**\n\nOur Marketing Campaigns API lets you create, manage, send, and schedule campaigns.\n\nFor more information:\n\n* [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)\n\n### GET /campaigns/{campaign_id}\n\n\n```php\n$campaign_id = \"test_url_param\";\n$response = $sg->client->campaigns()->_($campaign_id)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a Campaign\n\n**This endpoint allows you to delete a specific campaign.**\n\nOur Marketing Campaigns API lets you create, manage, send, and schedule campaigns.\n\nFor more information:\n\n* [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)\n\n### DELETE /campaigns/{campaign_id}\n\n\n```php\n$campaign_id = \"test_url_param\";\n$response = $sg->client->campaigns()->_($campaign_id)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update a Scheduled Campaign\n\n**This endpoint allows to you change the scheduled time and date for a campaign to be sent.**\n\nFor more information:\n\n* [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)\n\n### PATCH /campaigns/{campaign_id}/schedules\n\n\n```php\n$request_body = json_decode('{\n  \"send_at\": 1489451436\n}');\n$campaign_id = \"test_url_param\";\n$response = $sg->client->campaigns()->_($campaign_id)->schedules()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Schedule a Campaign\n\n**This endpoint allows you to schedule a specific date and time for your campaign to be sent.**\n\nFor more information:\n\n* [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)\n\n### POST /campaigns/{campaign_id}/schedules\n\n\n```php\n$request_body = json_decode('{\n  \"send_at\": 1489771528\n}');\n$campaign_id = \"test_url_param\";\n$response = $sg->client->campaigns()->_($campaign_id)->schedules()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## View Scheduled Time of a Campaign\n\n**This endpoint allows you to retrieve the date and time that the given campaign has been scheduled to be sent.**\n\nFor more information:\n\n* [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)\n\n### GET /campaigns/{campaign_id}/schedules\n\n\n```php\n$campaign_id = \"test_url_param\";\n$response = $sg->client->campaigns()->_($campaign_id)->schedules()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Unschedule a Scheduled Campaign\n\n**This endpoint allows you to unschedule a campaign that has already been scheduled to be sent.**\n\nA successful unschedule will return a 204.\nIf the specified campaign is in the process of being sent, the only option is to cancel (a different method).\n\nFor more information:\n\n* [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)\n\n### DELETE /campaigns/{campaign_id}/schedules\n\n\n```php\n$campaign_id = \"test_url_param\";\n$response = $sg->client->campaigns()->_($campaign_id)->schedules()->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Send a Campaign\n\n**This endpoint allows you to immediately send a campaign at the time you make the API call.**\n\nNormally a POST would have a request body, but since this endpoint is telling us to send a resource that is already created, a request body is not needed.\n\nFor more information:\n\n* [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)\n\n### POST /campaigns/{campaign_id}/schedules/now\n\n\n```php\n$campaign_id = \"test_url_param\";\n$response = $sg->client->campaigns()->_($campaign_id)->schedules()->now()->post();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Send a Test Campaign\n\n**This endpoint allows you to send a test campaign.**\n\nTo send to multiple addresses, use an array for the JSON \"to\" value [\"one@address\", \"two@address\"]\n\nFor more information:\n\n* [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)\n\n### POST /campaigns/{campaign_id}/schedules/test\n\n\n```php\n$request_body = json_decode('{\n  \"to\": \"your.email@example.com\"\n}');\n$campaign_id = \"test_url_param\";\n$response = $sg->client->campaigns()->_($campaign_id)->schedules()->test()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"categories\"></a>\n# CATEGORIES\n\n## Retrieve all categories\n\n**This endpoint allows you to retrieve a list of all of your categories.**\n\nCategories can help organize your email analytics by enabling you to tag emails by type or broad topic. You can define your own custom categories. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/categories.html).\n\n### GET /categories\n\n\n```php\n$query_params = json_decode('{\"category\": \"test_string\", \"limit\": 1, \"offset\": 1}');\n$response = $sg->client->categories()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve Email Statistics for Categories\n\n**This endpoint allows you to retrieve all of your email statistics for each of your categories.**\n\nIf you do not define any query parameters, this endpoint will return a sum for each category in groups of 10.\n\nCategories allow you to group your emails together according to broad topics that you define. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/categories.html).\n\n### GET /categories/stats\n\n\n```php\n$query_params = json_decode('{\"end_date\": \"2016-04-01\", \"aggregated_by\": \"day\", \"limit\": 1, \"offset\": 1, \"start_date\": \"2016-01-01\", \"categories\": \"test_string\"}');\n$response = $sg->client->categories()->stats()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve sums of email stats for each category [Needs: Stats object defined, has category ID?]\n\n**This endpoint allows you to retrieve the total sum of each email statistic for every category over the given date range.**\n\nIf you do not define any query parameters, this endpoint will return a sum for each category in groups of 10.\n\nCategories allow you to group your emails together according to broad topics that you define. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/categories.html).\n\nNote: Category statistics are available for the previous thirteen months only.\n\n### GET /categories/stats/sums\n\n\n```php\n$query_params = json_decode('{\"end_date\": \"2016-04-01\", \"aggregated_by\": \"day\", \"limit\": 1, \"sort_by_metric\": \"test_string\", \"offset\": 1, \"start_date\": \"2016-01-01\", \"sort_by_direction\": \"asc\"}');\n$response = $sg->client->categories()->stats()->sums()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"clients\"></a>\n# CLIENTS\n\n## Retrieve email statistics by client type.\n\n**This endpoint allows you to retrieve your email statistics segmented by client type.**\n\n**We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.\n\nAdvanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).\n\n### GET /clients/stats\n\n\n```php\n$query_params = json_decode('{\"aggregated_by\": \"day\", \"start_date\": \"2016-01-01\", \"end_date\": \"2016-04-01\"}');\n$response = $sg->client->clients()->stats()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve stats by a specific client type.\n\n**This endpoint allows you to retrieve your email statistics segmented by a specific client type.**\n\n**We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.\n\n## Available Client Types\n- phone\n- tablet\n- webmail\n- desktop\n\nAdvanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).\n\n### GET /clients/{client_type}/stats\n\n\n```php\n$query_params = json_decode('{\"aggregated_by\": \"day\", \"start_date\": \"2016-01-01\", \"end_date\": \"2016-04-01\"}');\n$client_type = \"test_url_param\";\n$response = $sg->client->clients()->_($client_type)->stats()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"contactdb\"></a>\n# CONTACTDB\n\n## Create a Custom Field\n\n**This endpoint allows you to create a custom field.**\n\nThe contactdb is a database of your contacts for [Twilio SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).\n\n### POST /contactdb/custom_fields\n\n\n```php\n$request_body = json_decode('{\n  \"name\": \"pet\",\n  \"type\": \"text\"\n}');\n$response = $sg->client->contactdb()->custom_fields()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all custom fields\n\n**This endpoint allows you to retrieve all custom fields.**\n\nThe contactdb is a database of your contacts for [Twilio SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).\n\n### GET /contactdb/custom_fields\n\n\n```php\n$response = $sg->client->contactdb()->custom_fields()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a Custom Field\n\n**This endpoint allows you to retrieve a custom field by ID.**\n\nThe contactdb is a database of your contacts for [Twilio SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).\n\n### GET /contactdb/custom_fields/{custom_field_id}\n\n\n```php\n$custom_field_id = \"test_url_param\";\n$response = $sg->client->contactdb()->custom_fields()->_($custom_field_id)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a Custom Field\n\n**This endpoint allows you to delete a custom field by ID.**\n\nThe contactdb is a database of your contacts for [Twilio SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).\n\n### DELETE /contactdb/custom_fields/{custom_field_id}\n\n\n```php\n$custom_field_id = \"test_url_param\";\n$response = $sg->client->contactdb()->custom_fields()->_($custom_field_id)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Create a List\n\n**This endpoint allows you to create a list for your recipients.**\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### POST /contactdb/lists\n\n\n```php\n$request_body = json_decode('{\n  \"name\": \"your list name\"\n}');\n$response = $sg->client->contactdb()->lists()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all lists\n\n**This endpoint allows you to retrieve all of your recipient lists. If you don't have any lists, an empty array will be returned.**\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### GET /contactdb/lists\n\n\n```php\n$response = $sg->client->contactdb()->lists()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete Multiple lists\n\n**This endpoint allows you to delete multiple recipient lists.**\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### DELETE /contactdb/lists\n\n\n```php\n$request_body = json_decode('[\n  1,\n  2,\n  3,\n  4\n]');\n$response = $sg->client->contactdb()->lists()->delete($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update a List\n\n**This endpoint allows you to update the name of one of your recipient lists.**\n\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### PATCH /contactdb/lists/{list_id}\n\n\n```php\n$request_body = json_decode('{\n  \"name\": \"newlistname\"\n}');\n$query_params = json_decode('{\"list_id\": 1}');\n$list_id = \"test_url_param\";\n$response = $sg->client->contactdb()->lists()->_($list_id)->patch($request_body, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a single list\n\nThis endpoint allows you to retrieve a single recipient list.\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### GET /contactdb/lists/{list_id}\n\n\n```php\n$query_params = json_decode('{\"list_id\": 1}');\n$list_id = \"test_url_param\";\n$response = $sg->client->contactdb()->lists()->_($list_id)->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a List\n\n**This endpoint allows you to delete a specific recipient list with the given ID.**\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### DELETE /contactdb/lists/{list_id}\n\n\n```php\n$query_params = json_decode('{\"delete_contacts\": \"true\"}');\n$list_id = \"test_url_param\";\n$response = $sg->client->contactdb()->lists()->_($list_id)->delete(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Add Multiple Recipients to a List\n\n**This endpoint allows you to add multiple recipients to a list.**\n\nAdds existing recipients to a list, passing in the recipient IDs to add. Recipient IDs should be passed exactly as they are returned from recipient endpoints.\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### POST /contactdb/lists/{list_id}/recipients\n\n\n```php\n$request_body = json_decode('[\n  \"recipient_id1\",\n  \"recipient_id2\"\n]');\n$list_id = \"test_url_param\";\n$response = $sg->client->contactdb()->lists()->_($list_id)->recipients()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all recipients on a List\n\n**This endpoint allows you to retrieve all recipients on the list with the given ID.**\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### GET /contactdb/lists/{list_id}/recipients\n\n\n```php\n$query_params = json_decode('{\"page\": 1, \"page_size\": 1}');\n$list_id = \"test_url_param\";\n$response = $sg->client->contactdb()->lists()->_($list_id)->recipients()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Add a Single Recipient to a List\n\n**This endpoint allows you to add a single recipient to a list.**\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### POST /contactdb/lists/{list_id}/recipients/{recipient_id}\n\n\n```php\n$list_id = \"test_url_param\";\n$recipient_id = \"test_url_param\";\n$response = $sg->client->contactdb()->lists()->_($list_id)->recipients()->_($recipient_id)->post();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a Single Recipient from a Single List\n\n**This endpoint allows you to delete a single recipient from a list.**\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### DELETE /contactdb/lists/{list_id}/recipients/{recipient_id}\n\n\n```php\n$query_params = json_decode('{\"recipient_id\": 1, \"list_id\": 1}');\n$list_id = \"test_url_param\";\n$recipient_id = \"test_url_param\";\n$response = $sg->client->contactdb()->lists()->_($list_id)->recipients()->_($recipient_id)->delete(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update Recipient\n\n**This endpoint allows you to update one or more recipients.**\n\nThe body of an API call to this endpoint must include an array of one or more recipient objects.\n\nIt is of note that you can add custom field data as parameters on recipient objects. We have provided an example using some of the default custom fields Twilio SendGrid provides.\n\nThe contactdb is a database of your contacts for [Twilio SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).\n\n### PATCH /contactdb/recipients\n\n\n```php\n$request_body = json_decode('[\n  {\n    \"email\": \"jones@example.com\",\n    \"first_name\": \"Guy\",\n    \"last_name\": \"Jones\"\n  }\n]');\n$response = $sg->client->contactdb()->recipients()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Add recipients\n\n**This endpoint allows you to add a Marketing Campaigns recipient.**\n\nIt is of note that you can add custom field data as a parameter on this endpoint. We have provided an example using some of the default custom fields Twilio SendGrid provides.\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### POST /contactdb/recipients\n\n\n```php\n$request_body = json_decode('[\n  {\n    \"age\": 25,\n    \"email\": \"example@example.com\",\n    \"first_name\": \"\",\n    \"last_name\": \"User\"\n  },\n  {\n    \"age\": 25,\n    \"email\": \"example2@example.com\",\n    \"first_name\": \"Example\",\n    \"last_name\": \"User\"\n  }\n]');\n$response = $sg->client->contactdb()->recipients()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve recipients\n\n**This endpoint allows you to retrieve all of your Marketing Campaigns recipients.**\n\nBatch deletion of a page makes it possible to receive an empty page of recipients before reaching the end of\nthe list of recipients. To avoid this issue; iterate over pages until a 404 is retrieved.\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### GET /contactdb/recipients\n\n\n```php\n$query_params = json_decode('{\"page\": 1, \"page_size\": 1}');\n$response = $sg->client->contactdb()->recipients()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete Recipient\n\n**This endpoint allows you to delete one or more recipients.**\n\nThe body of an API call to this endpoint must include an array of recipient IDs of the recipients you want to delete.\n\nThe contactdb is a database of your contacts for [Twilio SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).\n\n### DELETE /contactdb/recipients\n\n\n```php\n$request_body = json_decode('[\n  \"recipient_id1\",\n  \"recipient_id2\"\n]');\n$response = $sg->client->contactdb()->recipients()->delete($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve the count of billable recipients\n\n**This endpoint allows you to retrieve the number of Marketing Campaigns recipients that you will be billed for.**\n\nYou are billed for marketing campaigns based on the highest number of recipients you have had in your account at one time. This endpoint will allow you to know the current billable count value.\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### GET /contactdb/recipients/billable_count\n\n\n```php\n$response = $sg->client->contactdb()->recipients()->billable_count()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a Count of Recipients\n\n**This endpoint allows you to retrieve the total number of Marketing Campaigns recipients.**\n\nThe contactdb is a database of your contacts for [Twilio SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).\n\n### GET /contactdb/recipients/count\n\n\n```php\n$response = $sg->client->contactdb()->recipients()->count()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve recipients matching search criteria\n\n**This endpoint allows you to perform a search on all of your Marketing Campaigns recipients.**\n\nfield_name:\n\n* is a variable that is substituted for your actual custom field name from your recipient.\n* Text fields must be url-encoded. Date fields are searchable only by UNIX timestamp (e.g. 2/2/2015 becomes 1422835200)\n* If field_name is a 'reserved' date field, such as created_at or updated_at, the system will internally convert\nyour epoch time to a date range encompassing the entire day. For example, an epoch time of 1422835600 converts to\nMon, 02 Feb 2015 00:06:40 GMT, but internally the system will search from Mon, 02 Feb 2015 00:00:00 GMT through\nMon, 02 Feb 2015 23:59:59 GMT.\n\nThe contactdb is a database of your contacts for [Twilio SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).\n\n### GET /contactdb/recipients/search\n\n\n```php\n$query_params = json_decode('{\"{field_name}\": \"test_string\"}');\n$response = $sg->client->contactdb()->recipients()->search()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve recipients matching search criteria using segment conditions\n\n**This endpoint allows you to perform a search using segment conditions on all of your Marketing Campaigns recipients.**\n\nValid operators for search depend on the type of the field you are segmenting:\n\n* **Dates:**\n    * \"eq\", \"ne\", \"lt\" (before), \"gt\" (after)\n        * You may use MM/DD/YYYY for day granularity or an epoch for second granularity.\n    * \"empty\", \"not_empty\"\n    * \"is within\"\n        * You may use an ISO 8601 date format or the # of days.\n* **Text:** \"contains\", \"eq\" (is - matches the full field), \"ne\" (is not - matches any field where the entire field is not the condition value), \"empty\", \"not_empty\"\n* **Numbers:** \"eq\", \"lt\", \"gt\", \"empty\", \"not_empty\"\n* **Email Clicks and Opens:** \"eq\" (opened), \"ne\" (not opened)\n\nField values must all be a string.\n\nSearch conditions using \"eq\" or \"ne\" for email clicks and opens should provide a \"field\" of either *clicks.campaign_identifier* or *opens.campaign_identifier*. The condition value should be a string containing the id of a completed campaign.\n\nSearch conditions list may contain multiple conditions, joined by an \"and\" or \"or\" in the \"and_or\" field. The first condition in the conditions list must have an empty \"and_or\", and subsequent conditions must all specify an \"and_or\".\n\nThe contactdb is a database of your contacts for [Twilio SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).\n\n### POST /contactdb/recipients/search\n\n\n```php\n$query_params = json_decode('{\"page\": 1, \"page_size\": 1}');\n$request_body = json_decode('{\n  \"conditions\": [\n    {\n      \"and_or\": \"\",\n      \"field\": \"last_name\",\n      \"operator\": \"eq\",\n      \"value\": \"Miller\"\n    },\n    {\n      \"and_or\": \"and\",\n      \"field\": \"last_clicked\",\n      \"operator\": \"gt\",\n      \"value\": \"01/02/2015\"\n    },\n    {\n      \"and_or\": \"or\",\n      \"field\": \"clicks.campaign_identifier\",\n      \"operator\": \"eq\",\n      \"value\": \"513\"\n    }\n  ],\n}');\n$response = $sg->client->contactdb()->recipients()->search()->post($request_body, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a single recipient\n\n**This endpoint allows you to retrieve a single recipient by ID from your contact database.**\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### GET /contactdb/recipients/{recipient_id}\n\n\n```php\n$recipient_id = \"test_url_param\";\n$response = $sg->client->contactdb()->recipients()->_($recipient_id)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a Recipient\n\n**This endpoint allows you to delete a single recipient with the given ID from your contact database.**\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### DELETE /contactdb/recipients/{recipient_id}\n\n\n```php\n$recipient_id = \"test_url_param\";\n$response = $sg->client->contactdb()->recipients()->_($recipient_id)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve the lists that a recipient is on\n\n**This endpoint allows you to retrieve the lists that a given recipient belongs to.**\n\nEach recipient can be on many lists. This endpoint gives you all of the lists that any one recipient has been added to.\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\n### GET /contactdb/recipients/{recipient_id}/lists\n\n\n```php\n$recipient_id = \"test_url_param\";\n$response = $sg->client->contactdb()->recipients()->_($recipient_id)->lists()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve reserved fields\n\n**This endpoint allows you to list all fields that are reserved and can't be used for custom field names.**\n\nThe contactdb is a database of your contacts for [Twilio SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).\n\n### GET /contactdb/reserved_fields\n\n\n```php\n$response = $sg->client->contactdb()->reserved_fields()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Create a Segment\n\n**This endpoint allows you to create a segment.**\n\nAll recipients in your contactdb will be added or removed automatically depending on whether they match the criteria for this segment.\n\nList Id:\n\n* Send this to segment from an existing list\n* Don't send this in order to segment from your entire contactdb.\n\nValid operators for create and update depend on the type of the field you are segmenting:\n\n* **Dates:**\n    * \"eq\", \"ne\", \"lt\" (before), \"gt\" (after)\n        * You may use MM/DD/YYYY for day granularity or an epoch for second granularity.\n    * \"empty\", \"not_empty\"\n    * \"is within\"\n        * You may use an ISO 8601 date format or the # of days.\n* **Text:** \"contains\", \"eq\" (is - matches the full field), \"ne\" (is not - matches any field where the entire field is not the condition value), \"empty\", \"not_empty\"\n* **Numbers:** \"eq\", \"lt\", \"gt\", \"empty\", \"not_empty\"\n* **Email Clicks and Opens:** \"eq\" (opened), \"ne\" (not opened)\n\nField values must all be a string.\n\nSegment conditions using \"eq\" or \"ne\" for email clicks and opens should provide a \"field\" of either *clicks.campaign_identifier* or *opens.campaign_identifier*. The condition value should be a string containing the id of a completed campaign.\n\nSegments may contain multiple conditions, joined by an \"and\" or \"or\" in the \"and_or\" field. The first condition in the conditions list must have an empty \"and_or\", and subsequent conditions must all specify an \"and_or\".\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\nFor more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).\n\n### POST /contactdb/segments\n\n\n```php\n$request_body = json_decode('{\n  \"conditions\": [\n    {\n      \"and_or\": \"\",\n      \"field\": \"last_name\",\n      \"operator\": \"eq\",\n      \"value\": \"Miller\"\n    },\n    {\n      \"and_or\": \"and\",\n      \"field\": \"last_clicked\",\n      \"operator\": \"gt\",\n      \"value\": \"01/02/2015\"\n    },\n    {\n      \"and_or\": \"or\",\n      \"field\": \"clicks.campaign_identifier\",\n      \"operator\": \"eq\",\n      \"value\": \"513\"\n    }\n  ],\n  \"list_id\": 4,\n  \"name\": \"Last Name Miller\"\n}');\n$response = $sg->client->contactdb()->segments()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all segments\n\n**This endpoint allows you to retrieve all of your segments.**\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\nFor more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).\n\n### GET /contactdb/segments\n\n\n```php\n$response = $sg->client->contactdb()->segments()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update a segment\n\n**This endpoint allows you to update a segment.**\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\nFor more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).\n\n### PATCH /contactdb/segments/{segment_id}\n\n\n```php\n$request_body = json_decode('{\n  \"conditions\": [\n    {\n      \"and_or\": \"\",\n      \"field\": \"last_name\",\n      \"operator\": \"eq\",\n      \"value\": \"Miller\"\n    }\n  ],\n  \"list_id\": 5,\n  \"name\": \"The Millers\"\n}');\n$query_params = json_decode('{\"segment_id\": \"test_string\"}');\n$segment_id = \"test_url_param\";\n$response = $sg->client->contactdb()->segments()->_($segment_id)->patch($request_body, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a segment\n\n**This endpoint allows you to retrieve a single segment with the given ID.**\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\nFor more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).\n\n### GET /contactdb/segments/{segment_id}\n\n\n```php\n$query_params = json_decode('{\"segment_id\": 1}');\n$segment_id = \"test_url_param\";\n$response = $sg->client->contactdb()->segments()->_($segment_id)->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a segment\n\n**This endpoint allows you to delete a segment from your recipients database.**\n\nYou also have the option to delete all the contacts from your Marketing Campaigns recipient database who were in this segment.\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\nFor more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).\n\n### DELETE /contactdb/segments/{segment_id}\n\n\n```php\n$query_params = json_decode('{\"delete_contacts\": \"true\"}');\n$segment_id = \"test_url_param\";\n$response = $sg->client->contactdb()->segments()->_($segment_id)->delete(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve recipients on a segment\n\n**This endpoint allows you to retrieve all of the recipients in a segment with the given ID.**\n\nThe Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.\n\nFor more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).\n\n### GET /contactdb/segments/{segment_id}/recipients\n\n\n```php\n$query_params = json_decode('{\"page\": 1, \"page_size\": 1}');\n$segment_id = \"test_url_param\";\n$response = $sg->client->contactdb()->segments()->_($segment_id)->recipients()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"devices\"></a>\n# DEVICES\n\n## Retrieve email statistics by device type.\n\n**This endpoint allows you to retrieve your email statistics segmented by the device type.**\n\n**We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.\n\n## Available Device Types\n| **Device** | **Description** | **Example** |\n|---|---|---|\n| Desktop | Email software on a desktop computer. | I.E., Outlook, Sparrow, or Apple Mail. |\n| Webmail | A web-based email client. | I.E., Yahoo, Google, AOL, or Outlook.com. |\n| Phone | A smartphone. | iPhone, Android, Blackberry, etc.\n| Tablet | A tablet computer. | iPad, Android based tablet, etc. |\n| Other | An unrecognized device. |\n\nAdvanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).\n\n### GET /devices/stats\n\n\n```php\n$query_params = json_decode('{\"aggregated_by\": \"day\", \"limit\": 1, \"start_date\": \"2016-01-01\", \"end_date\": \"2016-04-01\", \"offset\": 1}');\n$response = $sg->client->devices()->stats()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n\n<a name=\"email-activity\"></a>\n# EMAIL ACTIVITY\n\n## Getting Started With the Email Activity Feed API\n\n**This endpoint allows you to query your messages.**\n\nEmail Activity Feed allows you to search and download a CSV of your recent email event activity. For more information on how to get started, please see our [Getting Started Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Tutorials/getting_started_email_activity_api.html).\n\n<a name=\"geo\"></a>\n# GEO\n\n## Retrieve email statistics by country and state/province.\n\n**This endpoint allows you to retrieve your email statistics segmented by country and state/province.**\n\n**We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.\n\nAdvanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).\n\n### GET /geo/stats\n\n\n```php\n$query_params = json_decode('{\"end_date\": \"2016-04-01\", \"country\": \"US\", \"aggregated_by\": \"day\", \"limit\": 1, \"offset\": 1, \"start_date\": \"2016-01-01\"}');\n$response = $sg->client->geo()->stats()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"ips\"></a>\n# IPS\n\n## Retrieve all IP addresses\n\n**This endpoint allows you to retrieve a list of all assigned and unassigned IPs.**\n\nThe response includes warm-up status, pools, assigned subusers, and authentication info. The start_date field corresponds to when warmup started for that IP.\n\nA single IP address or a range of IP addresses may be dedicated to an account in order to send email for multiple domains. The reputation of this IP is based on the aggregate performance of all the senders who use it.\n\n### GET /ips\n\n\n```php\n$query_params = json_decode('{\"subuser\": \"test_string\", \"ip\": \"test_string\", \"limit\": 1, \"exclude_whitelabels\": \"true\", \"offset\": 1}');\n$response = $sg->client->ips()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all assigned IPs\n\n**This endpoint allows you to retrieve only assigned IP addresses.**\n\nA single IP address or a range of IP addresses may be dedicated to an account in order to send email for multiple domains. The reputation of this IP is based on the aggregate performance of all the senders who use it.\n\n### GET /ips/assigned\n\n\n```php\n$response = $sg->client->ips()->assigned()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Create an IP pool.\n\n**This endpoint allows you to create an IP pool.**\n\n**Each user can create up to 10 different IP pools.**\n\nIP Pools allow you to group your dedicated Twilio SendGrid IP addresses together. For example, you could create separate pools for your transactional and marketing email. When sending marketing emails, specify that you want to use the marketing IP pool. This allows you to maintain separate reputations for your different email traffic.\n\nIP pools can only be used with authenticated IP addresses.\n\nIf an IP pool is NOT specified for an email, it will use any IP available, including ones in pools.\n\n### POST /ips/pools\n\n\n```php\n$request_body = json_decode('{\n  \"name\": \"marketing\"\n}');\n$response = $sg->client->ips()->pools()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all IP pools.\n\n**This endpoint allows you to retrieve all of your IP pools.**\n\nIP Pools allow you to group your dedicated Twilio SendGrid IP addresses together. For example, you could create separate pools for your transactional and marketing email. When sending marketing emails, specify that you want to use the marketing IP pool. This allows you to maintain separate reputations for your different email traffic.\n\nIP pools can only be used with authenticated IP addresses.\n\nIf an IP pool is NOT specified for an email, it will use any IP available, including ones in pools.\n\n### GET /ips/pools\n\n\n```php\n$response = $sg->client->ips()->pools()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update an IP pools name.\n\n**This endpoint allows you to update the name of an IP pool.**\n\nIP Pools allow you to group your dedicated Twilio SendGrid IP addresses together. For example, you could create separate pools for your transactional and marketing email. When sending marketing emails, specify that you want to use the marketing IP pool. This allows you to maintain separate reputations for your different email traffic.\n\nIP pools can only be used with authenticated IP addresses.\n\nIf an IP pool is NOT specified for an email, it will use any IP available, including ones in pools.\n\n### PUT /ips/pools/{pool_name}\n\n\n```php\n$request_body = json_decode('{\n  \"name\": \"new_pool_name\"\n}');\n$pool_name = \"test_url_param\";\n$response = $sg->client->ips()->pools()->_($pool_name)->put($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all IPs in a specified pool.\n\n**This endpoint allows you to list all of the IP addresses that are in a specific IP pool.**\n\nIP Pools allow you to group your dedicated Twilio SendGrid IP addresses together. For example, you could create separate pools for your transactional and marketing email. When sending marketing emails, specify that you want to use the marketing IP pool. This allows you to maintain separate reputations for your different email traffic.\n\nIP pools can only be used with authenticated IP addresses.\n\nIf an IP pool is NOT specified for an email, it will use any IP available, including ones in pools.\n\n### GET /ips/pools/{pool_name}\n\n\n```php\n$pool_name = \"test_url_param\";\n$response = $sg->client->ips()->pools()->_($pool_name)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete an IP pool.\n\n**This endpoint allows you to delete an IP pool.**\n\nIP Pools allow you to group your dedicated Twilio SendGrid IP addresses together. For example, you could create separate pools for your transactional and marketing email. When sending marketing emails, specify that you want to use the marketing IP pool. This allows you to maintain separate reputations for your different email traffic.\n\nIP pools can only be used with authenticated IP addresses.\n\nIf an IP pool is NOT specified for an email, it will use any IP available, including ones in pools.\n\n### DELETE /ips/pools/{pool_name}\n\n\n```php\n$pool_name = \"test_url_param\";\n$response = $sg->client->ips()->pools()->_($pool_name)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Add an IP address to a pool\n\n**This endpoint allows you to add an IP address to an IP pool.**\n\nYou can add the same IP address to multiple pools. It may take up to 60 seconds for your IP address to be added to a pool after your request is made.\n\nA single IP address or a range of IP addresses may be dedicated to an account in order to send email for multiple domains. The reputation of this IP is based on the aggregate performance of all the senders who use it.\n\n### POST /ips/pools/{pool_name}/ips\n\n\n```php\n$request_body = json_decode('{\n  \"ip\": \"0.0.0.0\"\n}');\n$pool_name = \"test_url_param\";\n$response = $sg->client->ips()->pools()->_($pool_name)->ips()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Remove an IP address from a pool.\n\n**This endpoint allows you to remove an IP address from an IP pool.**\n\nThe same IP address can be added to multiple IP pools.\n\nA single IP address or a range of IP addresses may be dedicated to an account in order to send email for multiple domains. The reputation of this IP is based on the aggregate performance of all the senders who use it.\n\n### DELETE /ips/pools/{pool_name}/ips/{ip}\n\n\n```php\n$pool_name = \"test_url_param\";\n$ip = \"test_url_param\";\n$response = $sg->client->ips()->pools()->_($pool_name)->ips()->_($ip)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Add an IP to warmup\n\n**This endpoint allows you to enter an IP address into warmup mode.**\n\nTwilio SendGrid can automatically warm up dedicated IP addresses by limiting the amount of mail that can be sent through them per hour, with the limit determined by how long the IP address has been in warmup. See the [warmup schedule](https://sendgrid.com/docs/API_Reference/Web_API_v3/IP_Management/ip_warmup_schedule.html) for more details on how Twilio SendGrid limits your email traffic for IPs in warmup.\n\nFor more general information about warming up IPs, please see our [Classroom](https://sendgrid.com/docs/Classroom/Deliver/Delivery_Introduction/warming_up_ips.html).\n\n### POST /ips/warmup\n\n\n```php\n$request_body = json_decode('{\n  \"ip\": \"0.0.0.0\"\n}');\n$response = $sg->client->ips()->warmup()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all IPs currently in warmup\n\n**This endpoint allows you to retrieve all of your IP addresses that are currently warming up.**\n\nTwilio SendGrid can automatically warm up dedicated IP addresses by limiting the amount of mail that can be sent through them per hour, with the limit determined by how long the IP address has been in warmup. See the [warmup schedule](https://sendgrid.com/docs/API_Reference/Web_API_v3/IP_Management/ip_warmup_schedule.html) for more details on how Twilio SendGrid limits your email traffic for IPs in warmup.\n\nFor more general information about warming up IPs, please see our [Classroom](https://sendgrid.com/docs/Classroom/Deliver/Delivery_Introduction/warming_up_ips.html).\n\n### GET /ips/warmup\n\n\n```php\n$response = $sg->client->ips()->warmup()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve warmup status for a specific IP address\n\n**This endpoint allows you to retrieve the warmup status for a specific IP address.**\n\nTwilio SendGrid can automatically warm up dedicated IP addresses by limiting the amount of mail that can be sent through them per hour, with the limit determined by how long the IP address has been in warmup. See the [warmup schedule](https://sendgrid.com/docs/API_Reference/Web_API_v3/IP_Management/ip_warmup_schedule.html) for more details on how Twilio SendGrid limits your email traffic for IPs in warmup.\n\nFor more general information about warming up IPs, please see our [Classroom](https://sendgrid.com/docs/Classroom/Deliver/Delivery_Introduction/warming_up_ips.html).\n\n### GET /ips/warmup/{ip_address}\n\n\n```php\n$ip_address = \"test_url_param\";\n$response = $sg->client->ips()->warmup()->_($ip_address)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Remove an IP from warmup\n\n**This endpoint allows you to remove an IP address from warmup mode.**\n\nTwilio SendGrid can automatically warm up dedicated IP addresses by limiting the amount of mail that can be sent through them per hour, with the limit determined by how long the IP address has been in warmup. See the [warmup schedule](https://sendgrid.com/docs/API_Reference/Web_API_v3/IP_Management/ip_warmup_schedule.html) for more details on how Twilio SendGrid limits your email traffic for IPs in warmup.\n\nFor more general information about warming up IPs, please see our [Classroom](https://sendgrid.com/docs/Classroom/Deliver/Delivery_Introduction/warming_up_ips.html).\n\n### DELETE /ips/warmup/{ip_address}\n\n\n```php\n$ip_address = \"test_url_param\";\n$response = $sg->client->ips()->warmup()->_($ip_address)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all IP pools an IP address belongs to\n\n**This endpoint allows you to see which IP pools a particular IP address has been added to.**\n\nThe same IP address can be added to multiple IP pools.\n\nA single IP address or a range of IP addresses may be dedicated to an account in order to send email for multiple domains. The reputation of this IP is based on the aggregate performance of all the senders who use it.\n\n### GET /ips/{ip_address}\n\n\n```php\n$ip_address = \"test_url_param\";\n$response = $sg->client->ips()->_($ip_address)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"mail\"></a>\n# MAIL\n\n## Create a batch ID\n\n**This endpoint allows you to generate a new batch ID. This batch ID can be associated with scheduled sends via the mail/send endpoint.**\n\nIf you set the SMTPAPI header `batch_id`, it allows you to then associate multiple scheduled mail/send requests together with the same ID. Then at anytime up to 10 minutes before the scheduled date, you can cancel all of the mail/send requests that have this batch ID by calling the Cancel Scheduled Send endpoint.\n\nMore Information:\n\n* [Scheduling Parameters > Batch ID](https://sendgrid.com/docs/API_Reference/SMTP_API/scheduling_parameters.html)\n\n### POST /mail/batch\n\n\n```php\n$response = $sg->client->mail()->batch()->post();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Validate batch ID\n\n**This endpoint allows you to validate a batch ID.**\n\nIf you set the SMTPAPI header `batch_id`, it allows you to then associate multiple scheduled mail/send requests together with the same ID. Then at anytime up to 10 minutes before the scheduled date, you can cancel all of the mail/send requests that have this batch ID by calling the Cancel Scheduled Send endpoint.\n\nMore Information:\n\n* [Scheduling Parameters > Batch ID](https://sendgrid.com/docs/API_Reference/SMTP_API/scheduling_parameters.html)\n\n### GET /mail/batch/{batch_id}\n\n\n```php\n$batch_id = \"test_url_param\";\n$response = $sg->client->mail()->batch()->_($batch_id)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## v3 Mail Send\n\nThis endpoint allows you to send the email over Twilio SendGrid's v3 Web API, the most recent version of our API. If you are looking for documentation about the v2 Mail Send endpoint, please see our [v2 API Reference](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).\n\n* Top level parameters are referred to as \"global\".\n* Individual fields within the personalizations array will override any other global, or message level, parameters that are defined outside of personalizations.\n\n* Note: bypass_bounce_management, bypass_spam_management, and bypass_unsubscribe_management cannot\n* be combined with bypass_list_management\n\nFor an overview of the v3 Mail Send endpoint, please visit our [v3 API Reference](https://sendgrid.com/docs/API_Reference/Web_API_v3/Mail/index.html)\n\nFor more detailed information about how to use the v3 Mail Send endpoint, please visit our [Classroom](https://sendgrid.com/docs/Classroom/Send/v3_Mail_Send/index.html).\n\n### POST /mail/send\n\nThis endpoint has a helper, check it out [here](lib/helpers/mail/README.md).\n\n```php\n$request_body = json_decode('{\n  \"asm\": {\n    \"group_id\": 1,\n    \"groups_to_display\": [\n      1,\n      2,\n      3\n    ]\n  },\n  \"attachments\": [\n    {\n      \"content\": \"[BASE64 encoded content block here]\",\n      \"content_id\": \"ii_139db99fdb5c3704\",\n      \"disposition\": \"inline\",\n      \"filename\": \"file1.jpg\",\n      \"name\": \"file1\",\n      \"type\": \"jpg\"\n    }\n  ],\n  \"batch_id\": \"[YOUR BATCH ID GOES HERE]\",\n  \"categories\": [\n    \"category1\",\n    \"category2\"\n  ],\n  \"content\": [\n    {\n      \"type\": \"text/html\",\n      \"value\": \"<html><p>Hello, world!</p><img src=[CID GOES HERE]></img></html>\"\n    }\n  ],\n  \"custom_args\": {\n    \"New Argument 1\": \"New Value 1\",\n    \"activationAttempt\": \"1\",\n    \"customerAccountNumber\": \"[CUSTOMER ACCOUNT NUMBER GOES HERE]\"\n  },\n  \"from\": {\n    \"email\": \"sam.smith@example.com\",\n    \"name\": \"Sam Smith\"\n  },\n  \"headers\": {},\n  \"ip_pool_name\": \"[YOUR POOL NAME GOES HERE]\",\n  \"mail_settings\": {\n    \"bcc\": {\n      \"email\": \"ben.doe@example.com\",\n      \"enable\": true\n    },\n    \"bypass_bounce_management\": {\n      \"enable\": true\n    },\n    \"bypass_list_management\": {\n      \"enable\": true\n    },\n    \"bypass_spam_management\": {\n      \"enable\": true\n    },\n    \"bypass_unsubscribe_management\": {\n      \"enable\": true\n    },\n\n    \"footer\": {\n      \"enable\": true,\n      \"html\": \"<p>Thanks</br>The Twilio SendGrid Team</p>\",\n      \"text\": \"Thanks,/n The Twilio SendGrid Team\"\n    },\n    \"sandbox_mode\": {\n      \"enable\": false\n    },\n    \"spam_check\": {\n      \"enable\": true,\n      \"post_to_url\": \"http://example.com/compliance\",\n      \"threshold\": 3\n    }\n  },\n  \"personalizations\": [\n    {\n      \"bcc\": [\n        {\n          \"email\": \"sam.doe@example.com\",\n          \"name\": \"Sam Doe\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"jane.doe@example.com\",\n          \"name\": \"Jane Doe\"\n        }\n      ],\n      \"custom_args\": {\n        \"New Argument 1\": \"New Value 1\",\n        \"activationAttempt\": \"1\",\n        \"customerAccountNumber\": \"[CUSTOMER ACCOUNT NUMBER GOES HERE]\"\n      },\n      \"headers\": {\n        \"X-Accept-Language\": \"en\",\n        \"X-Mailer\": \"MyApp\"\n      },\n      \"send_at\": 1409348513,\n      \"subject\": \"Hello, World!\",\n      \"substitutions\": {\n        \"id\": \"substitutions\",\n        \"type\": \"object\"\n      },\n      \"to\": [\n        {\n          \"email\": \"john.doe@example.com\",\n          \"name\": \"John Doe\"\n        }\n      ]\n    }\n  ],\n  \"reply_to\": {\n    \"email\": \"sam.smith@example.com\",\n    \"name\": \"Sam Smith\"\n  },\n  \"sections\": {\n    \"section\": {\n      \":sectionName1\": \"section 1 text\",\n      \":sectionName2\": \"section 2 text\"\n    }\n  },\n  \"send_at\": 1409348513,\n  \"subject\": \"Hello, World!\",\n  \"template_id\": \"[YOUR TEMPLATE ID GOES HERE]\",\n  \"tracking_settings\": {\n    \"click_tracking\": {\n      \"enable\": true,\n      \"enable_text\": true\n    },\n    \"ganalytics\": {\n      \"enable\": true,\n      \"utm_campaign\": \"[NAME OF YOUR REFERRER SOURCE]\",\n      \"utm_content\": \"[USE THIS SPACE TO DIFFERENTIATE YOUR EMAIL FROM ADS]\",\n      \"utm_medium\": \"[NAME OF YOUR MARKETING MEDIUM e.g. email]\",\n      \"utm_name\": \"[NAME OF YOUR CAMPAIGN]\",\n      \"utm_term\": \"[IDENTIFY PAID KEYWORDS HERE]\"\n    },\n    \"open_tracking\": {\n      \"enable\": true,\n      \"substitution_tag\": \"%opentrack\"\n    },\n    \"subscription_tracking\": {\n      \"enable\": true,\n      \"html\": \"If you would like to unsubscribe and stop receiving these emails <% clickhere %>.\",\n      \"substitution_tag\": \"<%click here%>\",\n      \"text\": \"If you would like to unsubscribe and stop receiving these emails <% click here %>.\"\n    }\n  }\n}');\n$response = $sg->client->mail()->send()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"mail-settings\"></a>\n# MAIL SETTINGS\n\n## Retrieve all mail settings\n\n**This endpoint allows you to retrieve a list of all mail settings.**\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### GET /mail_settings\n\n\n```php\n$query_params = json_decode('{\"limit\": 1, \"offset\": 1}');\n$response = $sg->client->mail_settings()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update address whitelist mail settings\n\n**This endpoint allows you to update your current email address whitelist settings.**\n\nThe address whitelist setting whitelists a specified email address or domain for which mail should never be suppressed. For example, you own the domain example.com, and one or more of your recipients use email@example.com addresses, by placing example.com in the address whitelist setting, all bounces, blocks, and unsubscribes logged for that domain will be ignored and sent as if under normal sending conditions.\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### PATCH /mail_settings/address_whitelist\n\n\n```php\n$request_body = json_decode('{\n  \"enabled\": true,\n  \"list\": [\n    \"email1@example.com\",\n    \"example.com\"\n  ]\n}');\n$response = $sg->client->mail_settings()->address_whitelist()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve address whitelist mail settings\n\n**This endpoint allows you to retrieve your current email address whitelist settings.**\n\nThe address whitelist setting whitelists a specified email address or domain for which mail should never be suppressed. For example, you own the domain example.com, and one or more of your recipients use email@example.com addresses, by placing example.com in the address whitelist setting, all bounces, blocks, and unsubscribes logged for that domain will be ignored and sent as if under normal sending conditions.\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### GET /mail_settings/address_whitelist\n\n\n```php\n$response = $sg->client->mail_settings()->address_whitelist()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update BCC mail settings\n\n**This endpoint allows you to update your current BCC mail settings.**\n\nWhen the BCC mail setting is enabled, Twilio SendGrid will automatically send a blind carbon copy (BCC) to an address for every email sent without adding that address to the header. Please note that only one email address may be entered in this field. If you wish to distribute BCCs to multiple addresses you will need to create a distribution group or use forwarding rules.\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### PATCH /mail_settings/bcc\n\n\n```php\n$request_body = json_decode('{\n  \"email\": \"email@example.com\",\n  \"enabled\": false\n}');\n$response = $sg->client->mail_settings()->bcc()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all BCC mail settings\n\n**This endpoint allows you to retrieve your current BCC mail settings.**\n\nWhen the BCC mail setting is enabled, Twilio SendGrid will automatically send a blind carbon copy (BCC) to an address for every email sent without adding that address to the header. Please note that only one email address may be entered in this field. If you wish to distribute BCCs to multiple addresses you will need to create a distribution group or use forwarding rules.\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### GET /mail_settings/bcc\n\n\n```php\n$response = $sg->client->mail_settings()->bcc()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update bounce purge mail settings\n\n**This endpoint allows you to update your current bounce purge settings.**\n\nThis setting allows you to set a schedule for Twilio SendGrid to automatically delete contacts from your soft and hard bounce suppression lists.\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### PATCH /mail_settings/bounce_purge\n\n\n```php\n$request_body = json_decode('{\n  \"enabled\": true,\n  \"hard_bounces\": 5,\n  \"soft_bounces\": 5\n}');\n$response = $sg->client->mail_settings()->bounce_purge()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve bounce purge mail settings\n\n**This endpoint allows you to retrieve your current bounce purge settings.**\n\nThis setting allows you to set a schedule for Twilio SendGrid to automatically delete contacts from your soft and hard bounce suppression lists.\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### GET /mail_settings/bounce_purge\n\n\n```php\n$response = $sg->client->mail_settings()->bounce_purge()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update footer mail settings\n\n**This endpoint allows you to update your current Footer mail settings.**\n\nThe footer setting will insert a custom footer at the bottom of the text and HTML bodies. Use the embedded HTML editor and plain text entry fields to create the content of the footers to be inserted into your emails.\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### PATCH /mail_settings/footer\n\n\n```php\n$request_body = json_decode('{\n  \"enabled\": true,\n  \"html_content\": \"...\",\n  \"plain_content\": \"...\"\n}');\n$response = $sg->client->mail_settings()->footer()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve footer mail settings\n\n**This endpoint allows you to retrieve your current Footer mail settings.**\n\nThe footer setting will insert a custom footer at the bottom of the text and HTML bodies. Use the embedded HTML editor and plain text entry fields to create the content of the footers to be inserted into your emails.\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### GET /mail_settings/footer\n\n\n```php\n$response = $sg->client->mail_settings()->footer()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update forward bounce mail settings\n\n**This endpoint allows you to update your current bounce forwarding mail settings.**\n\nActivating this setting allows you to specify an email address to which bounce reports are forwarded.\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### PATCH /mail_settings/forward_bounce\n\n\n```php\n$request_body = json_decode('{\n  \"email\": \"example@example.com\",\n  \"enabled\": true\n}');\n$response = $sg->client->mail_settings()->forward_bounce()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve forward bounce mail settings\n\n**This endpoint allows you to retrieve your current bounce forwarding mail settings.**\n\nActivating this setting allows you to specify an email address to which bounce reports are forwarded.\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### GET /mail_settings/forward_bounce\n\n\n```php\n$response = $sg->client->mail_settings()->forward_bounce()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update forward spam mail settings\n\n**This endpoint allows you to update your current Forward Spam mail settings.**\n\nEnabling the forward spam setting allows you to specify an email address to which spam reports will be forwarded.\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### PATCH /mail_settings/forward_spam\n\n\n```php\n$request_body = json_decode('{\n  \"email\": \"\",\n  \"enabled\": false\n}');\n$response = $sg->client->mail_settings()->forward_spam()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve forward spam mail settings\n\n**This endpoint allows you to retrieve your current Forward Spam mail settings.**\n\nEnabling the forward spam setting allows you to specify an email address to which spam reports will be forwarded.\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### GET /mail_settings/forward_spam\n\n\n```php\n$response = $sg->client->mail_settings()->forward_spam()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update plain content mail settings\n\n**This endpoint allows you to update your current Plain Content mail settings.**\n\nThe plain content setting will automatically convert any plain text emails that you send to HTML before sending.\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### PATCH /mail_settings/plain_content\n\n\n```php\n$request_body = json_decode('{\n  \"enabled\": false\n}');\n$response = $sg->client->mail_settings()->plain_content()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve plain content mail settings\n\n**This endpoint allows you to retrieve your current Plain Content mail settings.**\n\nThe plain content setting will automatically convert any plain text emails that you send to HTML before sending.\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrids' [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### GET /mail_settings/plain_content\n\n\n```php\n$response = $sg->client->mail_settings()->plain_content()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update spam check mail settings\n\n**This endpoint allows you to update your current spam checker mail settings.**\n\nThe spam checker filter notifies you when emails are detected that exceed a predefined spam threshold.\n\nMail settings allow you to tell Twilio Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### PATCH /mail_settings/spam_check\n\n\n```php\n$request_body = json_decode('{\n  \"enabled\": true,\n  \"max_score\": 5,\n  \"url\": \"url\"\n}');\n$response = $sg->client->mail_settings()->spam_check()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve spam check mail settings\n\n**This endpoint allows you to retrieve your current Spam Checker mail settings.**\n\nThe spam checker filter notifies you when emails are detected that exceed a predefined spam threshold.\n\nMail settings allow you to tell Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### GET /mail_settings/spam_check\n\n\n```php\n$response = $sg->client->mail_settings()->spam_check()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update template mail settings\n\n**This endpoint allows you to update your current legacy email template settings.**\n\nThis setting refers to our original email templates. We currently support more fully featured [transactional templates](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).\n\nThe legacy email template setting wraps an HTML template around your email content. This can be useful for sending out marketing email and/or other HTML formatted messages.\n\nMail settings allow you to tell Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### PATCH /mail_settings/template\n\n\n```php\n$request_body = json_decode('{\n  \"enabled\": true,\n  \"html_content\": \"<% body %>\"\n}');\n$response = $sg->client->mail_settings()->template()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve legacy template mail settings\n\n**This endpoint allows you to retrieve your current legacy email template settings.**\n\nThis setting refers to our original email templates. We currently support more fully featured [transactional templates](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).\n\nThe legacy email template setting wraps an HTML template around your email content. This can be useful for sending out marketing email and/or other HTML formatted messages.\n\nMail settings allow you to tell Twilio SendGrid specific things to do to every email that you send to your recipients over Twilio SendGrid's [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).\n\n### GET /mail_settings/template\n\n\n```php\n$response = $sg->client->mail_settings()->template()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"mailbox-providers\"></a>\n# MAILBOX PROVIDERS\n\n## Retrieve email statistics by mailbox provider.\n\n**This endpoint allows you to retrieve your email statistics segmented by recipient mailbox provider.**\n\n**We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.\n\nAdvanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).\n\n### GET /mailbox_providers/stats\n\n\n```php\n$query_params = json_decode('{\"end_date\": \"2016-04-01\", \"mailbox_providers\": \"test_string\", \"aggregated_by\": \"day\", \"limit\": 1, \"offset\": 1, \"start_date\": \"2016-01-01\"}');\n$response = $sg->client->mailbox_providers()->stats()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"partner-settings\"></a>\n# PARTNER SETTINGS\n\n## Returns a list of all partner settings.\n\n**This endpoint allows you to retrieve a list of all partner settings that you can enable.**\n\nOur partner settings allow you to integrate your Twilio SendGrid account with our partners to increase your Twilio SendGrid experience and functionality. For more information about our partners, and how you can begin integrating with them, please visit our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/partners.html).\n\n### GET /partner_settings\n\n\n```php\n$query_params = json_decode('{\"limit\": 1, \"offset\": 1}');\n$response = $sg->client->partner_settings()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Updates New Relic partner settings.\n\n**This endpoint allows you to update or change your New Relic partner settings.**\n\nOur partner settings allow you to integrate your Twilio SendGrid account with our partners to increase your Twilio SendGrid experience and functionality. For more information about our partners, and how you can begin integrating with them, please visit our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/partners.html).\n\nBy integrating with New Relic, you can send your Twilio SendGrid email statistics to your New Relic Dashboard. If you enable this setting, your stats will be sent to New Relic every 5 minutes. You will need your New Relic License Key to enable this setting. For more information, please see our [Classroom](https://sendgrid.com/docs/Classroom/Track/Collecting_Data/new_relic.html).\n\n### PATCH /partner_settings/new_relic\n\n\n```php\n$request_body = json_decode('{\n  \"enable_subuser_statistics\": true,\n  \"enabled\": true,\n  \"license_key\": \"\"\n}');\n$response = $sg->client->partner_settings()->new_relic()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Returns all New Relic partner settings.\n\n**This endpoint allows you to retrieve your current New Relic partner settings.**\n\nOur partner settings allow you to integrate your Twilio SendGrid account with our partners to increase your Twilio SendGrid experience and functionality. For more information about our partners, and how you can begin integrating with them, please visit our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/partners.html).\n\nBy integrating with New Relic, you can send your Twilio SendGrid email statistics to your New Relic Dashboard. If you enable this setting, your stats will be sent to New Relic every 5 minutes. You will need your New Relic License Key to enable this setting. For more information, please see our [Classroom](https://sendgrid.com/docs/Classroom/Track/Collecting_Data/new_relic.html).\n\n### GET /partner_settings/new_relic\n\n\n```php\n$response = $sg->client->partner_settings()->new_relic()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"scopes\"></a>\n# SCOPES\n\n## Retrieve a list of scopes for which this user has access.\n\n**This endpoint returns a list of all scopes that this user has access to.**\n\nAPI Keys can be used to authenticate the use of [SendGrids v3 Web API](https://sendgrid.com/docs/API_Reference/Web_API_v3/index.html), or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html). API Keys may be assigned certain permissions, or scopes, that limit which API endpoints they are able to access. For a more detailed explanation of how you can use API Key permissions, please visit our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/api_keys.html#-API-Key-Permissions) or [Classroom](https://sendgrid.com/docs/Classroom/Basics/API/api_key_permissions.html).\n\n### GET /scopes\n\n\n```php\n$response = $sg->client->scopes()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"senders\"></a>\n# SENDERS\n\n## Create a Sender Identity\n\n**This endpoint allows you to create a new sender identity.**\n\n*You may create up to 100 unique sender identities.*\n\nSender Identities are required to be verified before use. If your domain has been authenticated it will auto verify on creation. Otherwise, an email will be sent to the `from.email`.\n\n### POST /senders\n\n\n```php\n$request_body = json_decode('{\n  \"address\": \"123 Elm St.\",\n  \"address_2\": \"Apt. 456\",\n  \"city\": \"Denver\",\n  \"country\": \"United States\",\n  \"from\": {\n    \"email\": \"from@example.com\",\n    \"name\": \"Example INC\"\n  },\n  \"nickname\": \"My Sender ID\",\n  \"reply_to\": {\n    \"email\": \"replyto@example.com\",\n    \"name\": \"Example INC\"\n  },\n  \"state\": \"Colorado\",\n  \"zip\": \"80202\"\n}');\n$response = $sg->client->senders()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Get all Sender Identities\n\n**This endpoint allows you to retrieve a list of all sender identities that have been created for your account.**\n\nSender Identities are required to be verified before use. If your domain has been authenticated it will auto verify on creation. Otherwise, an email will be sent to the `from.email`.\n\n### GET /senders\n\n\n```php\n$response = $sg->client->senders()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update a Sender Identity\n\n**This endpoint allows you to update a sender identity.**\n\nUpdates to `from.email` require re-verification. If your domain has been authenticated it will auto verify on creation. Otherwise, an email will be sent to the `from.email`.\n\nPartial updates are allowed, but fields that are marked as \"required\" in the POST (create) endpoint must not be nil if that field is included in the PATCH request.\n\n### PATCH /senders/{sender_id}\n\n\n```php\n$request_body = json_decode('{\n  \"address\": \"123 Elm St.\",\n  \"address_2\": \"Apt. 456\",\n  \"city\": \"Denver\",\n  \"country\": \"United States\",\n  \"from\": {\n    \"email\": \"from@example.com\",\n    \"name\": \"Example INC\"\n  },\n  \"nickname\": \"My Sender ID\",\n  \"reply_to\": {\n    \"email\": \"replyto@example.com\",\n    \"name\": \"Example INC\"\n  },\n  \"state\": \"Colorado\",\n  \"zip\": \"80202\"\n}');\n$sender_id = \"test_url_param\";\n$response = $sg->client->senders()->_($sender_id)->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## View a Sender Identity\n\n**This endpoint allows you to retrieve a specific sender identity.**\n\nSender Identities are required to be verified before use. If your domain has been authenticated it will auto verify on creation. Otherwise, an email will be sent to the `from.email`.\n\n### GET /senders/{sender_id}\n\n\n```php\n$sender_id = \"test_url_param\";\n$response = $sg->client->senders()->_($sender_id)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a Sender Identity\n\n**This endpoint allows you to delete one of your sender identities.**\n\nSender Identities are required to be verified before use. If your domain has been authenticated it will auto verify on creation. Otherwise, an email will be sent to the `from.email`.\n\n### DELETE /senders/{sender_id}\n\n\n```php\n$sender_id = \"test_url_param\";\n$response = $sg->client->senders()->_($sender_id)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Resend Sender Identity Verification\n\n**This endpoint allows you to resend a sender identity verification email.**\n\nSender Identities are required to be verified before use. If your domain has been authenticated it will auto verify on creation. Otherwise, an email will be sent to the `from.email`.\n\n### POST /senders/{sender_id}/resend_verification\n\n\n```php\n$sender_id = \"test_url_param\";\n$response = $sg->client->senders()->_($sender_id)->resend_verification()->post();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"sender-authentication\"></a>\n# SENDER AUTHENTICATION\n\n## Create an authenticated domain.\n\n**This endpoint allows you to create a domain authentication for one of your domains.**\n\nIf you are creating a domain authentication that you would like a subuser to use, you have two options:\n1. Use the \"username\" parameter. This allows you to create am authenticated subuser. This means the subuser is able to see and modify the created authentication.\n2. Use the Association workflow (see Associate Domain section). This allows you to assign a domain authentication created by the parent to a subuser. This means the subuser will default to the assigned domain authentication, but will not be able to see or modify that authentication. However, if the subuser creates their own domain authentication it will overwrite the assigned domain authentication.\n\nA domain authentication allows you to remove the via or sent on behalf of message that your recipients see when they read your emails. Authenticating a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that Twilio SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, Twilio SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.\n\nFor more information on domain authentication, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-domain-authentication/)\n\n### POST /whitelabel/domains\n\n\n```php\n$request_body = json_decode('{\n  \"automatic_security\": false,\n  \"custom_spf\": true,\n  \"default\": true,\n  \"domain\": \"example.com\",\n  \"ips\": [\n    \"192.168.1.1\",\n    \"192.168.1.2\"\n  ],\n  \"subdomain\": \"news\",\n  \"username\": \"john@example.com\"\n}');\n$response = $sg->client->whitelabel()->domains()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## List all domain authentications.\n\n**This endpoint allows you to retrieve a list of all domain authentications you have created.**\n\nA domain authentication allows you to remove the via or sent on behalf of message that your recipients see when they read your emails. Authenticating a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that Twilio SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, Twilio SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.\n\nFor more information on domain authentication, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-domain-authentication/)\n\n### GET /whitelabel/domains\n\n\n```php\n$query_params = json_decode('{\"username\": \"test_string\", \"domain\": \"test_string\", \"exclude_subusers\": \"true\", \"limit\": 1, \"offset\": 1}');\n$response = $sg->client->whitelabel()->domains()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Get the default domain authentication.\n\n**This endpoint allows you to retrieve the default authentication for a domain.**\n\nA domain authentication allows you to remove the via or sent on behalf of message that your recipients see when they read your emails. Authenticating a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that Twilio SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, Twilio SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.\n\nFor more information on domain authentication, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-domain-authentication/)\n\n## URI Parameters\n| URI Parameter   | Type   | Description  |\n|---|---|---|\n| domain | string  |The domain to find a default domain whitelabel for. |\n\n### GET /whitelabel/domains/default\n\n\n```php\n$response = $sg->client->whitelabel()->domains()->default()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## List the domain authentication associated with the given user.\n\n**This endpoint allows you to retrieve all of the domain authentications that have been assigned to a specific subuser.**\n\nA domain authentication allows you to remove the via or sent on behalf of message that your recipients see when they read your emails. Authenticating a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that Twilio  can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, Twilio SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.\n\nDomain authentications can be associated with (i.e. assigned to) subusers from a parent account. This functionality allows subusers to send mail using their parent's authenticated domains. To associate a domain authentication with a subuser, the parent account must first create the domain authentication and validate it. The parent may then associate the domain authentication via the subuser management tools.\n\nFor more information on domain authentication, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-domain-authentication/)\n\n## URI Parameters\n| URI Parameter   | Type  | Description  |\n|---|---|---|\n| username | string  | Username of the subuser to find associated whitelabels for. |\n\n### GET /whitelabel/domains/subuser\n\n\n```php\n$response = $sg->client->whitelabel()->domains()->subuser()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Disassociate a domain authentication from a given user.\n\n**This endpoint allows you to disassociate a specific domain authentication from a subuser.**\n\nA domain authentication allows you to remove the via or sent on behalf of message that your recipients see when they read your emails. Authenticating a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that Twilio SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, Twilio SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.\n\nDomain authentications can be associated with (i.e. assigned to) subusers from a parent account. This functionality allows subusers to send mail using their parent's authenticated domains. To associate a domain authentication with a subuser, the parent account must first create the domain authentication and validate it. The parent may then associate the domain authentication via the subuser management tools.\n\nFor more information on domain authentication, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-domain-authentication/)\n\n## URI Parameters\n| URI Parameter   | Type  | Required?  | Description  |\n|---|---|---|---|\n| username | string  | required  | Username for the subuser to find associated whitelabels for. |\n\n### DELETE /whitelabel/domains/subuser\n\n\n```php\n$response = $sg->client->whitelabel()->domains()->subuser()->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update a domain authentication.\n\n**This endpoint allows you to update the settings for a domain authentication.**\n\nA domain authentication allows you to remove the via or sent on behalf of message that your recipients see when they read your emails. Authenticating a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that Twilio SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, Twilio SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.\n\nFor more information on domain authentication, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-domain-authentication/)\n\n### PATCH /whitelabel/domains/{domain_id}\n\n\n```php\n$request_body = json_decode('{\n  \"custom_spf\": true,\n  \"default\": false\n}');\n$domain_id = \"test_url_param\";\n$response = $sg->client->whitelabel()->domains()->_($domain_id)->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a domain authentication.\n\n**This endpoint allows you to retrieve a specific domain authentication.**\n\nA domain authentication allows you to remove the via or sent on behalf of message that your recipients see when they read your emails. Authenticating a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that Twilio SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, Twilio SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.\n\nFor more information on domain authentication, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-domain-authentication/)\n\n\n### GET /whitelabel/domains/{domain_id}\n\n\n```php\n$domain_id = \"test_url_param\";\n$response = $sg->client->whitelabel()->domains()->_($domain_id)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a domain authentication.\n\n**This endpoint allows you to delete a domain authentication.**\n\nA domain authentication allows you to remove the via or sent on behalf of message that your recipients see when they read your emails. Authenticating a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that Twilio SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, Twilio SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.\n\nFor more information on domain authentication, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-domain-authentication/)\n\n### DELETE /whitelabel/domains/{domain_id}\n\n\n```php\n$domain_id = \"test_url_param\";\n$response = $sg->client->whitelabel()->domains()->_($domain_id)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Associate a domain authentication with a given user.\n\n**This endpoint allows you to associate a specific domain authentication with a subuser.**\n\nA domain authentication allows you to remove the via or sent on behalf of message that your recipients see when they read your emails. Authenticating a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that Twilio SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, Twilio SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.\n\nDomain authentications can be associated with (i.e. assigned to) subusers from a parent account. This functionality allows subusers to send mail using their parent's authenticated domains. To associate a domain authentication with a subuser, the parent account must first create the domain authentication and validate it. The parent may then associate the domain authentication via the subuser management tools.\n\nFor more information on domain authentication, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-domain-authentication/)\n\n## URI Parameters\n| URI Parameter   | Type   | Description  |\n|---|---|---|\n| domain_id | integer   | ID of the domain whitelabel to associate with the subuser. |\n\n### POST /whitelabel/domains/{domain_id}/subuser\n\n\n```php\n$request_body = json_decode('{\n  \"username\": \"jane@example.com\"\n}');\n$domain_id = \"test_url_param\";\n$response = $sg->client->whitelabel()->domains()->_($domain_id)->subuser()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Add an IP to a domain authentication.\n\n**This endpoint allows you to add an IP address to a domain authentication.**\n\nA domain authentication allows you to remove the via or sent on behalf of message that your recipients see when they read your emails. Authenticating a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that Twilio SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, Twilio SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.\n\nFor more information on domain authentication, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-domain-authentication/)\n\n## URI Parameters\n| URI Parameter   | Type  |  Description  |\n|---|---|---|\n| id | integer  | ID of the domain to which you are adding an IP |\n\n### POST /whitelabel/domains/{id}/ips\n\n\n```php\n$request_body = json_decode('{\n  \"ip\": \"192.168.0.1\"\n}');\n$id = \"test_url_param\";\n$response = $sg->client->whitelabel()->domains()->_($id)->ips()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Remove an IP from a domain authentication.\n\n**This endpoint allows you to remove a domain's IP address from that domain's authentication.**\n\nA domain authentication allows you to remove the via or sent on behalf of message that your recipients see when they read your emails. Authenticating a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that Twilio SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, Twilio SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.\n\nFor more information on domain authentication, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-domain-authentication/)\n\n## URI Parameters\n| URI Parameter   | Type  | Description  |\n|---|---|---|\n| id | integer  | ID of the domain whitelabel to delete the IP from. |\n| ip | string | IP to remove from the domain whitelabel. |\n\n### DELETE /whitelabel/domains/{id}/ips/{ip}\n\n\n```php\n$id = \"test_url_param\";\n$ip = \"test_url_param\";\n$response = $sg->client->whitelabel()->domains()->_($id)->ips()->_($ip)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Validate a domain authentication.\n\n**This endpoint allows you to validate a domain authentication. If it fails, it will return an error message describing why the domain could not be validated.**\n\nA domain authentication allows you to remove the via or sent on behalf of message that your recipients see when they read your emails. Authenticating a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that Twilio SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, Twilio SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.\n\nFor more information on domain authentication, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-domain-authentication/)\n\n## URI Parameters\n| URI Parameter   | Type   | Description  |\n|---|---|---|\n| id | integer  |ID of the domain whitelabel to validate. |\n\n### POST /whitelabel/domains/{id}/validate\n\n\n```php\n$id = \"test_url_param\";\n$response = $sg->client->whitelabel()->domains()->_($id)->validate()->post();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Create a reverse DNS record\n\n**This endpoint allows you to create a reverse DNS record.**\n\nWhen creating a reverse DNS record, you should use the same subdomain that you used when you created a domain authentication.\n\nReverse DNS consists of a subdomain and domain that will be used to generate a record for a given IP. Once Twilio SendGrid has verified that the appropriate A record for the IP has been created, the appropriate reverse DNS record for the IP is generated.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-reverse-dns/).\n\n### POST /whitelabel/ips\n\n\n```php\n$request_body = json_decode('{\n  \"domain\": \"example.com\",\n  \"ip\": \"192.168.1.1\",\n  \"subdomain\": \"email\"\n}');\n$response = $sg->client->whitelabel()->ips()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all reverse DNS records\n\n**This endpoint allows you to retrieve all of the reverse DNS records that have been created by this account.**\n\nYou may include a search key by using the \"ip\" parameter. This enables you to perform a prefix search for a given IP segment (e.g. \"192.\").\n\nReverse DNS consists of a subdomain and domain that will be used to generate a record for a given IP. Once Twilio SendGrid has verified that the appropriate A record for the IP has been created, the appropriate reverse DNS record for the IP is generated.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-reverse-dns/).\n\n### GET /whitelabel/ips\n\n\n```php\n$query_params = json_decode('{\"ip\": \"test_string\", \"limit\": 1, \"offset\": 1}');\n$response = $sg->client->whitelabel()->ips()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve an reverse DNS record\n\n**This endpoint allows you to retrieve a reverse DNS record.**\n\nReverse DNS consists of a subdomain and domain that will be used to generate a record for a given IP. Once Twilio SendGrid has verified that the appropriate A record for the IP has been created, the appropriate reverse DNS record for the IP is generated.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-reverse-dns/).\n\n### GET /whitelabel/ips/{id}\n\n\n```php\n$id = \"test_url_param\";\n$response = $sg->client->whitelabel()->ips()->_($id)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete an reverse DNS record\n\n**This endpoint allows you to delete a reverse DNS record.**\n\nReverse DNS consists of a subdomain and domain that will be used to generate a record for a given IP. Once Twilio SendGrid has verified that the appropriate A record for the IP has been created, the appropriate reverse DNS record for the IP is generated.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-reverse-dns/).\n\n### DELETE /whitelabel/ips/{id}\n\n\n```php\n$id = \"test_url_param\";\n$response = $sg->client->whitelabel()->ips()->_($id)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Validate a reverse DNS record\n\n**This endpoint allows you to validate a reverse DNS record.**\n\nReverse DNS consists of a subdomain and domain that will be used to generate a record for a given IP. Once Twilio SendGrid has verified that the appropriate A record for the IP has been created, the appropriate reverse DNS record for the IP is generated.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-reverse-dns/).\n\n### POST /whitelabel/ips/{id}/validate\n\n\n```php\n$id = \"test_url_param\";\n$response = $sg->client->whitelabel()->ips()->_($id)->validate()->post();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Create a Branded Link\n\n**This endpoint allows you to create a new link branding.**\n\nEmail link branding allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-link-branding/).\n\n### POST /whitelabel/links\n\n\n```php\n$request_body = json_decode('{\n  \"default\": true,\n  \"domain\": \"example.com\",\n  \"subdomain\": \"mail\"\n}');\n$query_params = json_decode('{\"limit\": 1, \"offset\": 1}');\n$response = $sg->client->whitelabel()->links()->post($request_body, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all link brandings\n\n**This endpoint allows you to retrieve all link brandings.**\n\nEmail link branding allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-link-branding/).\n\n### GET /whitelabel/links\n\n\n```php\n$query_params = json_decode('{\"limit\": 1}');\n$response = $sg->client->whitelabel()->links()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a Default Link Branding\n\n**This endpoint allows you to retrieve the default link branding.**\n\nDefault link branding is the actual link branding to be used when sending messages. If there are multiple link brandings, the default is determined by the following order:\n<ul>\n  <li>Validated link branding marked as \"default\"</li>\n  <li>Legacy link brands (migrated from the whitelabel wizard)</li>\n  <li>Default Twilio SendGrid link whitelabel (i.e. 100.ct.sendgrid.net)</li>\n</ul>\n\nEmail link branding allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-link-branding/).\n\n### GET /whitelabel/links/default\n\n\n```php\n$query_params = json_decode('{\"domain\": \"test_string\"}');\n$response = $sg->client->whitelabel()->links()->default()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve Associated Link Branding\n\n**This endpoint allows you to retrieve the associated link branding for a subuser.**\n\nLink branding can be associated with subusers from the parent account. This functionality allows\nsubusers to send mail using their parent's link brands. To associate a link branding, the parent account\nmust first create a branded link and validate it. The parent may then associate that branded link with a subuser via the API or the Subuser Management page in the user interface.\n\nEmail link branding allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-link-branding/).\n\n### GET /whitelabel/links/subuser\n\n\n```php\n$query_params = json_decode('{\"username\": \"test_string\"}');\n$response = $sg->client->whitelabel()->links()->subuser()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Disassociate a Link Branding\n\n**This endpoint allows you to disassociate a link branding from a subuser.**\n\nLink branding can be associated with subusers from the parent account. This functionality allows\nsubusers to send mail using their parent's link brands. To associate a link branding, the parent account\nmust first create a branded link and validate it. The parent may then associate that branded link with a subuser via the API or the Subuser Management page in the user interface.\n\nEmail link branding allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-link-branding/).\n\n### DELETE /whitelabel/links/subuser\n\n\n```php\n$query_params = json_decode('{\"username\": \"test_string\"}');\n$response = $sg->client->whitelabel()->links()->subuser()->delete(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update a Link Branding\n\n**This endpoint allows you to update a specific link branding. You can use this endpoint to change a branded link's default status.**\n\nEmail link branding allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-link-branding/).\n\n### PATCH /whitelabel/links/{id}\n\n\n```php\n$request_body = json_decode('{\n  \"default\": true\n}');\n$id = \"test_url_param\";\n$response = $sg->client->whitelabel()->links()->_($id)->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a Link Branding\n\n**This endpoint allows you to retrieve a specific link branding.**\n\nEmail link branding allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-link-branding/).\n\n### GET /whitelabel/links/{id}\n\n\n```php\n$id = \"test_url_param\";\n$response = $sg->client->whitelabel()->links()->_($id)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a Link Branding\n\n**This endpoint allows you to delete a link branding.**\n\nEmail link branding allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-link-branding/).\n\n### DELETE /whitelabel/links/{id}\n\n\n```php\n$id = \"test_url_param\";\n$response = $sg->client->whitelabel()->links()->_($id)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Validate a Link Branding\n\n**This endpoint allows you to validate a link branding.**\n\nEmail link branding allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-link-branding/).\n\n### POST /whitelabel/links/{id}/validate\n\n\n```php\n$id = \"test_url_param\";\n$response = $sg->client->whitelabel()->links()->_($id)->validate()->post();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Associate a Link Branding\n\n**This endpoint allows you to associate a link branding with a subuser account.**\n\nLink branding can be associated with subusers from the parent account. This functionality allows\nsubusers to send mail using their parent's link brands. To associate a link branding, the parent account\nmust first create a branded link and validate it. The parent may then associate that branded link with a subuser via the API or the Subuser Management page in the user interface.\n\nEmail link branding allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-link-branding/).\n\n### POST /whitelabel/links/{link_id}/subuser\n\n\n```php\n$request_body = json_decode('{\n  \"username\": \"jane@example.com\"\n}');\n$link_id = \"test_url_param\";\n$response = $sg->client->whitelabel()->links()->_($link_id)->subuser()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n\n<a name=\"stats\"></a>\n# STATS\n\n## Retrieve global email statistics\n\n**This endpoint allows you to retrieve all of your global email statistics between a given date range.**\n\nParent accounts will see aggregated stats for their account and all subuser accounts. Subuser accounts will only see their own stats.\n\n### GET /stats\n\n\n```php\n$query_params = json_decode('{\"aggregated_by\": \"day\", \"limit\": 1, \"start_date\": \"2016-01-01\", \"end_date\": \"2016-04-01\", \"offset\": 1}');\n$response = $sg->client->stats()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"subusers\"></a>\n# SUBUSERS\n\n## Create Subuser\n\nThis endpoint allows you to retrieve a list of all of your subusers. You can choose to retrieve specific subusers as well as limit the results that come back from the API.\n\nFor more information about Subusers:\n\n* [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)\n* [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)\n\n### POST /subusers\n\n\n```php\n$request_body = json_decode('{\n  \"email\": \"John@example.com\",\n  \"ips\": [\n    \"1.1.1.1\",\n    \"2.2.2.2\"\n  ],\n  \"password\": \"johns_password\",\n  \"username\": \"John@example.com\"\n}');\n$response = $sg->client->subusers()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## List all Subusers\n\nThis endpoint allows you to retrieve a list of all of your subusers. You can choose to retrieve specific subusers as well as limit the results that come back from the API.\n\nFor more information about Subusers:\n\n* [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)\n* [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)\n\n### GET /subusers\n\n\n```php\n$query_params = json_decode('{\"username\": \"test_string\", \"limit\": 1, \"offset\": 1}');\n$response = $sg->client->subusers()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve Subuser Reputations\n\nSubuser sender reputations give a good idea how well a sender is doing with regards to how recipients and recipient servers react to the mail that is being received. When a bounce, spam report, or other negative action happens on a sent email, it will effect your sender rating.\n\nThis endpoint allows you to request the reputations for your subusers.\n\n### GET /subusers/reputations\n\n\n```php\n$query_params = json_decode('{\"usernames\": \"test_string\"}');\n$response = $sg->client->subusers()->reputations()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve email statistics for your subusers.\n\n**This endpoint allows you to retrieve the email statistics for the given subusers.**\n\nYou may retrieve statistics for up to 10 different subusers by including an additional _subusers_ parameter for each additional subuser.\n\nWhile you can always view the statistics for all email activity on your account, subuser statistics enable you to view specific segments of your stats. Emails sent, bounces, and spam reports are always tracked for subusers. Unsubscribes, clicks, and opens are tracked if you have enabled the required settings.\n\nFor more information, see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/subuser.html).\n\n### GET /subusers/stats\n\n\n```php\n$query_params = json_decode('{\"end_date\": \"2016-04-01\", \"aggregated_by\": \"day\", \"limit\": 1, \"offset\": 1, \"start_date\": \"2016-01-01\", \"subusers\": \"test_string\"}');\n$response = $sg->client->subusers()->stats()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve monthly stats for all subusers\n\n**This endpoint allows you to retrieve the monthly email statistics for all subusers over the given date range.**\n\nWhile you can always view the statistics for all email activity on your account, subuser statistics enable you to view specific segments of your stats for your subusers. Emails sent, bounces, and spam reports are always tracked for subusers. Unsubscribes, clicks, and opens are tracked if you have enabled the required settings.\n\nWhen using the `sort_by_metric` to sort your stats by a specific metric, you can not sort by the following metrics:\n`bounce_drops`, `deferred`, `invalid_emails`, `processed`, `spam_report_drops`, `spam_reports`, or `unsubscribe_drops`.\n\nFor more information, see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/subuser.html).\n\n### GET /subusers/stats/monthly\n\n\n```php\n$query_params = json_decode('{\"subuser\": \"test_string\", \"limit\": 1, \"sort_by_metric\": \"test_string\", \"offset\": 1, \"date\": \"test_string\", \"sort_by_direction\": \"asc\"}');\n$response = $sg->client->subusers()->stats()->monthly()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n##  Retrieve the totals for each email statistic metric for all subusers.\n\n**This endpoint allows you to retrieve the total sums of each email statistic metric for all subusers over the given date range.**\n\n\nWhile you can always view the statistics for all email activity on your account, subuser statistics enable you to view specific segments of your stats. Emails sent, bounces, and spam reports are always tracked for subusers. Unsubscribes, clicks, and opens are tracked if you have enabled the required settings.\n\nFor more information, see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/subuser.html).\n\n### GET /subusers/stats/sums\n\n\n```php\n$query_params = json_decode('{\"end_date\": \"2016-04-01\", \"aggregated_by\": \"day\", \"limit\": 1, \"sort_by_metric\": \"test_string\", \"offset\": 1, \"start_date\": \"2016-01-01\", \"sort_by_direction\": \"asc\"}');\n$response = $sg->client->subusers()->stats()->sums()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Enable/disable a subuser\n\nThis endpoint allows you to enable or disable a subuser.\n\nFor more information about Subusers:\n\n* [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)\n* [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)\n\n### PATCH /subusers/{subuser_name}\n\n\n```php\n$request_body = json_decode('{\n  \"disabled\": false\n}');\n$subuser_name = \"test_url_param\";\n$response = $sg->client->subusers()->_($subuser_name)->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a subuser\n\nThis endpoint allows you to delete a subuser. This is a permanent action, once deleted a subuser cannot be retrieved.\n\nFor more information about Subusers:\n\n* [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)\n* [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)\n\n### DELETE /subusers/{subuser_name}\n\n\n```php\n$subuser_name = \"test_url_param\";\n$response = $sg->client->subusers()->_($subuser_name)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update IPs assigned to a subuser\n\nEach subuser should be assigned to an IP address, from which all of this subuser's mail will be sent. Often, this is the same IP as the parent account, but each subuser can have their own, or multiple, IP addresses as well.\n\nMore information:\n\n* [How to request more IPs](https://sendgrid.com/docs/Classroom/Basics/Account/adding_an_additional_dedicated_ip_to_your_account.html)\n* [How to set up reverse DNS](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-reverse-dns/)\n\n### PUT /subusers/{subuser_name}/ips\n\n\n```php\n$request_body = json_decode('[\n  \"127.0.0.1\"\n]');\n$subuser_name = \"test_url_param\";\n$response = $sg->client->subusers()->_($subuser_name)->ips()->put($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update Monitor Settings for a subuser\n\nSubuser monitor settings allow you to receive a sample of an outgoing message by a specific customer at a specific frequency of emails.\n\n### PUT /subusers/{subuser_name}/monitor\n\n\n```php\n$request_body = json_decode('{\n  \"email\": \"example@example.com\",\n  \"frequency\": 500\n}');\n$subuser_name = \"test_url_param\";\n$response = $sg->client->subusers()->_($subuser_name)->monitor()->put($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Create monitor settings\n\nSubuser monitor settings allow you to receive a sample of an outgoing message by a specific customer at a specific frequency of emails.\n\n### POST /subusers/{subuser_name}/monitor\n\n\n```php\n$request_body = json_decode('{\n  \"email\": \"example@example.com\",\n  \"frequency\": 50000\n}');\n$subuser_name = \"test_url_param\";\n$response = $sg->client->subusers()->_($subuser_name)->monitor()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve monitor settings for a subuser\n\nSubuser monitor settings allow you to receive a sample of an outgoing message by a specific customer at a specific frequency of emails.\n\n### GET /subusers/{subuser_name}/monitor\n\n\n```php\n$subuser_name = \"test_url_param\";\n$response = $sg->client->subusers()->_($subuser_name)->monitor()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete monitor settings\n\nSubuser monitor settings allow you to receive a sample of an outgoing message by a specific customer at a specific frequency of emails.\n\n### DELETE /subusers/{subuser_name}/monitor\n\n\n```php\n$subuser_name = \"test_url_param\";\n$response = $sg->client->subusers()->_($subuser_name)->monitor()->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve the monthly email statistics for a single subuser\n\n**This endpoint allows you to retrieve the monthly email statistics for a specific subuser.**\n\nWhile you can always view the statistics for all email activity on your account, subuser statistics enable you to view specific segments of your stats for your subusers. Emails sent, bounces, and spam reports are always tracked for subusers. Unsubscribes, clicks, and opens are tracked if you have enabled the required settings.\n\nWhen using the `sort_by_metric` to sort your stats by a specific metric, you can not sort by the following metrics:\n`bounce_drops`, `deferred`, `invalid_emails`, `processed`, `spam_report_drops`, `spam_reports`, or `unsubscribe_drops`.\n\nFor more information, see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/subuser.html).\n\n### GET /subusers/{subuser_name}/stats/monthly\n\n\n```php\n$query_params = json_decode('{\"date\": \"test_string\", \"sort_by_direction\": \"asc\", \"limit\": 1, \"sort_by_metric\": \"test_string\", \"offset\": 1}');\n$subuser_name = \"test_url_param\";\n$response = $sg->client->subusers()->_($subuser_name)->stats()->monthly()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"suppression\"></a>\n# SUPPRESSION\n\n## Retrieve all blocks\n\n**This endpoint allows you to retrieve a list of all email addresses that are currently on your blocks list.**\n\n[Blocks](https://sendgrid.com/docs/Glossary/blocks.html) happen when your message was rejected for a reason related to the message, not the recipient address. This can happen when your mail server IP address has been added to a blacklist or blocked by an ISP, or if the message content is flagged by a filter on the receiving server.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/blocks.html).\n\n### GET /suppression/blocks\n\n\n```php\n$query_params = json_decode('{\"start_time\": 1, \"limit\": 1, \"end_time\": 1, \"offset\": 1}');\n$response = $sg->client->suppression()->blocks()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete blocks\n\n**This endpoint allows you to delete all email addresses on your blocks list.**\n\nThere are two options for deleting blocked emails:\n\n1. You can delete all blocked emails by setting `delete_all` to true in the request body.\n2. You can delete some blocked emails by specifying the email addresses in an array in the request body.\n\n[Blocks](https://sendgrid.com/docs/Glossary/blocks.html) happen when your message was rejected for a reason related to the message, not the recipient address. This can happen when your mail server IP address has been added to a blacklist or blocked by an ISP, or if the message content is flagged by a filter on the receiving server.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/blocks.html).\n\n### DELETE /suppression/blocks\n\n\n```php\n$request_body = json_decode('{\n  \"delete_all\": false,\n  \"emails\": [\n    \"example1@example.com\",\n    \"example2@example.com\"\n  ]\n}');\n$response = $sg->client->suppression()->blocks()->delete($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a specific block\n\n**This endpoint allows you to retrieve a specific email address from your blocks list.**\n\n[Blocks](https://sendgrid.com/docs/Glossary/blocks.html) happen when your message was rejected for a reason related to the message, not the recipient address. This can happen when your mail server IP address has been added to a blacklist or blocked by an ISP, or if the message content is flagged by a filter on the receiving server.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/blocks.html).\n\n### GET /suppression/blocks/{email}\n\n\n```php\n$email = \"test_url_param\";\n$response = $sg->client->suppression()->blocks()->_($email)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a specific block\n\n**This endpoint allows you to delete a specific email address from your blocks list.**\n\n[Blocks](https://sendgrid.com/docs/Glossary/blocks.html) happen when your message was rejected for a reason related to the message, not the recipient address. This can happen when your mail server IP address has been added to a blacklist or blocked by an ISP, or if the message content is flagged by a filter on the receiving server.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/blocks.html).\n\n### DELETE /suppression/blocks/{email}\n\n\n```php\n$email = \"test_url_param\";\n$response = $sg->client->suppression()->blocks()->_($email)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all bounces\n\n**This endpoint allows you to retrieve all of your bounces.**\n\nBounces are messages that are returned to the server that sent it.\n\nFor more information see:\n\n* [User Guide > Bounces](https://sendgrid.com/docs/User_Guide/Suppressions/bounces.html) for more information\n* [Glossary > Bounces](https://sendgrid.com/docs/Glossary/Bounces.html)\n\n### GET /suppression/bounces\n\n\n```php\n$query_params = json_decode('{\"start_time\": 1, \"end_time\": 1}');\n$response = $sg->client->suppression()->bounces()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete bounces\n\n**This endpoint allows you to delete all of your bounces. You can also use this endpoint to remove a specific email address from your bounce list.**\n\nBounces are messages that are returned to the server that sent it.\n\nFor more information see:\n\n* [User Guide > Bounces](https://sendgrid.com/docs/User_Guide/Suppressions/bounces.html) for more information\n* [Glossary > Bounces](https://sendgrid.com/docs/Glossary/Bounces.html)\n* [Classroom > List Scrubbing Guide](https://sendgrid.com/docs/Classroom/Deliver/list_scrubbing.html)\n\nNote: the `delete_all` and `emails` parameters should be used independently of each other as they have different purposes.\n\n### DELETE /suppression/bounces\n\n\n```php\n$request_body = json_decode('{\n  \"delete_all\": true,\n  \"emails\": [\n    \"example@example.com\",\n    \"example2@example.com\"\n  ]\n}');\n$response = $sg->client->suppression()->bounces()->delete($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a Bounce\n\n**This endpoint allows you to retrieve a specific bounce for a given email address.**\n\nBounces are messages that are returned to the server that sent it.\n\nFor more information see:\n\n* [User Guide > Bounces](https://sendgrid.com/docs/User_Guide/Suppressions/bounces.html) for more information\n* [Glossary > Bounces](https://sendgrid.com/docs/Glossary/Bounces.html)\n* [Classroom > List Scrubbing Guide](https://sendgrid.com/docs/Classroom/Deliver/list_scrubbing.html)\n\n### GET /suppression/bounces/{email}\n\n\n```php\n$email = \"test_url_param\";\n$response = $sg->client->suppression()->bounces()->_($email)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a bounce\n\n**This endpoint allows you to remove an email address from your bounce list.**\n\nBounces are messages that are returned to the server that sent it. This endpoint allows you to delete a single email addresses from your bounce list.\n\nFor more information see:\n\n* [User Guide > Bounces](https://sendgrid.com/docs/User_Guide/Suppressions/bounces.html) for more information\n* [Glossary > Bounces](https://sendgrid.com/docs/Glossary/Bounces.html)\n* [Classroom > List Scrubbing Guide](https://sendgrid.com/docs/Classroom/Deliver/list_scrubbing.html)\n\n### DELETE /suppression/bounces/{email}\n\n\n```php\n$query_params = json_decode('{\"email_address\": \"example@example.com\"}');\n$email = \"test_url_param\";\n$response = $sg->client->suppression()->bounces()->_($email)->delete(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all invalid emails\n\n**This endpoint allows you to retrieve a list of all invalid email addresses.**\n\nAn invalid email occurs when you attempt to send email to an address that is formatted in a manner that does not meet internet email format standards or the email does not exist at the recipients mail server.\n\nExamples include addresses without the @ sign or addresses that include certain special characters and/or spaces. This response can come from our own server or the recipient mail server.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/invalid_emails.html).\n\n### GET /suppression/invalid_emails\n\n\n```php\n$query_params = json_decode('{\"start_time\": 1, \"limit\": 1, \"end_time\": 1, \"offset\": 1}');\n$response = $sg->client->suppression()->invalid_emails()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete invalid emails\n\n**This endpoint allows you to remove email addresses from your invalid email address list.**\n\nThere are two options for deleting invalid email addresses:\n\n1) You can delete all invalid email addresses by setting `delete_all` to true in the request body.\n2) You can delete some invalid email addresses by specifying certain addresses in an array in the request body.\n\nAn invalid email occurs when you attempt to send email to an address that is formatted in a manner that does not meet internet email format standards or the email does not exist at the recipients mail server.\n\nExamples include addresses without the @ sign or addresses that include certain special characters and/or spaces. This response can come from our own server or the recipient mail server.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/invalid_emails.html).\n\n### DELETE /suppression/invalid_emails\n\n\n```php\n$request_body = json_decode('{\n  \"delete_all\": false,\n  \"emails\": [\n    \"example1@example.com\",\n    \"example2@example.com\"\n  ]\n}');\n$response = $sg->client->suppression()->invalid_emails()->delete($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a specific invalid email\n\n**This endpoint allows you to retrieve a specific invalid email addresses.**\n\nAn invalid email occurs when you attempt to send email to an address that is formatted in a manner that does not meet internet email format standards or the email does not exist at the recipients mail server.\n\nExamples include addresses without the @ sign or addresses that include certain special characters and/or spaces. This response can come from our own server or the recipient mail server.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/invalid_emails.html).\n\n### GET /suppression/invalid_emails/{email}\n\n\n```php\n$email = \"test_url_param\";\n$response = $sg->client->suppression()->invalid_emails()->_($email)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a specific invalid email\n\n**This endpoint allows you to remove a specific email address from the invalid email address list.**\n\nAn invalid email occurs when you attempt to send email to an address that is formatted in a manner that does not meet internet email format standards or the email does not exist at the recipients mail server.\n\nExamples include addresses without the @ sign or addresses that include certain special characters and/or spaces. This response can come from our own server or the recipient mail server.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/invalid_emails.html).\n\n### DELETE /suppression/invalid_emails/{email}\n\n\n```php\n$email = \"test_url_param\";\n$response = $sg->client->suppression()->invalid_emails()->_($email)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a specific spam report\n\n**This endpoint allows you to retrieve a specific spam report.**\n\n[Spam reports](https://sendgrid.com/docs/Glossary/spam_reports.html) happen when a recipient indicates that they think your email is [spam](https://sendgrid.com/docs/Glossary/spam.html) and then their email provider reports this to Twilio SendGrid.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/spam_reports.html).\n\n### GET /suppression/spam_report/{email}\n\n\n```php\n$email = \"test_url_param\";\n$response = $sg->client->suppression()->spam_reports()->_($email)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a specific spam report\n\n**This endpoint allows you to delete a specific spam report.**\n\n[Spam reports](https://sendgrid.com/docs/Glossary/spam_reports.html) happen when a recipient indicates that they think your email is [spam](https://sendgrid.com/docs/Glossary/spam.html) and then their email provider reports this to Twilio SendGrid.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/spam_reports.html).\n\n### DELETE /suppression/spam_report/{email}\n\n\n```php\n$email = \"test_url_param\";\n$response = $sg->client->suppression()->spam_reports()->_($email)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all spam reports\n\n**This endpoint allows you to retrieve all spam reports.**\n\n[Spam reports](https://sendgrid.com/docs/Glossary/spam_reports.html) happen when a recipient indicates that they think your email is [spam](https://sendgrid.com/docs/Glossary/spam.html) and then their email provider reports this to Twilio SendGrid.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/spam_reports.html).\n\n### GET /suppression/spam_reports\n\n\n```php\n$query_params = json_decode('{\"start_time\": 1, \"limit\": 1, \"end_time\": 1, \"offset\": 1}');\n$response = $sg->client->suppression()->spam_reports()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete spam reports\n\n**This endpoint allows you to delete your spam reports.**\n\nThere are two options for deleting spam reports:\n\n1) You can delete all spam reports by setting \"delete_all\" to true in the request body.\n2) You can delete some spam reports by specifying the email addresses in an array in the request body.\n\n[Spam reports](https://sendgrid.com/docs/Glossary/spam_reports.html) happen when a recipient indicates that they think your email is [spam](https://sendgrid.com/docs/Glossary/spam.html) and then their email provider reports this to Twilio SendGrid.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/spam_reports.html).\n\n### DELETE /suppression/spam_reports\n\n\n```php\n$request_body = json_decode('{\n  \"delete_all\": false,\n  \"emails\": [\n    \"example1@example.com\",\n    \"example2@example.com\"\n  ]\n}');\n$response = $sg->client->suppression()->spam_reports()->delete($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all global suppressions\n\n**This endpoint allows you to retrieve a list of all email address that are globally suppressed.**\n\nA global suppression (or global unsubscribe) is an email address of a recipient who does not want to receive any of your messages. A globally suppressed recipient will be removed from any email you send. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/global_unsubscribes.html).\n\n### GET /suppression/unsubscribes\n\n\n```php\n$query_params = json_decode('{\"start_time\": 1, \"limit\": 1, \"end_time\": 1, \"offset\": 1}');\n$response = $sg->client->suppression()->unsubscribes()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"templates\"></a>\n# TEMPLATES\n\n## Create a transactional template.\n\n**This endpoint allows you to create a transactional template.**\n\nEach user can create up to 300 different transactional templates. Transactional templates are specific to accounts and subusers. Templates created on a parent account will not be accessible from the subuser accounts.\n\nTransactional templates are templates created specifically for transactional email and are not to be confused with [Marketing Campaigns templates](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/templates.html). For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).\n\n### POST /templates\n\n\n```php\n$request_body = json_decode('{\n  \"name\": \"example_name\"\n}');\n$response = $sg->client->templates()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all transactional templates (legacy & dynamic).\n\n**This endpoint allows you to retrieve all transactional templates.**\n\nEach user can create up to 300 different transactional templates. Transactional templates are specific to accounts and subusers. Templates created on a parent account will not be accessible from the subuser accounts.\n\nTransactional templates are templates created specifically for transactional email and are not to be confused with [Marketing Campaigns templates](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/templates.html). For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).\n\n### GET /templates\n\n\n```php\n$query_params = json_decode('{\"generations\": \"legacy,dynamic\"}');\n$response = $sg->client->templates()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Edit a transactional template.\n\n**This endpoint allows you to edit a transactional template.**\n\nEach user can create up to 300 different transactional templates. Transactional templates are specific to accounts and subusers. Templates created on a parent account will not be accessible from the subuser accounts.\n\nTransactional templates are templates created specifically for transactional email and are not to be confused with [Marketing Campaigns templates](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/templates.html). For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).\n\n\n### PATCH /templates/{template_id}\n\n\n```php\n$request_body = json_decode('{\n  \"name\": \"new_example_name\"\n}');\n$template_id = \"test_url_param\";\n$response = $sg->client->templates()->_($template_id)->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a single transactional template.\n\n**This endpoint allows you to retrieve a single transactional template.**\n\nEach user can create up to 300 different transactional templates. Transactional templates are specific to accounts and subusers. Templates created on a parent account will not be accessible from the subuser accounts.\n\nTransactional templates are templates created specifically for transactional email and are not to be confused with [Marketing Campaigns templates](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/templates.html). For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).\n\n\n### GET /templates/{template_id}\n\n\n```php\n$template_id = \"test_url_param\";\n$response = $sg->client->templates()->_($template_id)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a template.\n\n**This endpoint allows you to delete a transactional template.**\n\nEach user can create up to 300 different transactional templates. Transactional templates are specific to accounts and subusers. Templates created on a parent account will not be accessible from the subuser accounts.\n\nTransactional templates are templates created specifically for transactional email and are not to be confused with [Marketing Campaigns templates](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/templates.html). For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).\n\n\n### DELETE /templates/{template_id}\n\n\n```php\n$template_id = \"test_url_param\";\n$response = $sg->client->templates()->_($template_id)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Create a new transactional template version.\n\n**This endpoint allows you to create a new version of a template.**\n\nEach transactional template can have multiple versions, each version with its own subject and content. Each user can have up to 300 versions across all templates.\n\nFor more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).\n\n\n### POST /templates/{template_id}/versions\n\n\n```php\n$request_body = json_decode('{\n  \"active\": 1,\n  \"html_content\": \"<%body%>\",\n  \"name\": \"example_version_name\",\n  \"plain_content\": \"<%body%>\",\n  \"subject\": \"<%subject%>\",\n  \"template_id\": \"ddb96bbc-9b92-425e-8979-99464621b543\"\n}');\n$template_id = \"test_url_param\";\n$response = $sg->client->templates()->_($template_id)->versions()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Edit a transactional template version.\n\n**This endpoint allows you to edit a version of one of your transactional templates.**\n\nEach transactional template can have multiple versions, each version with its own subject and content. Each user can have up to 300 versions across all templates.\n\nFor more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).\n\n## URI Parameters\n| URI Parameter | Type | Description |\n|---|---|---|\n| template_id | string | The ID of the original template |\n| version_id | string | The ID of the template version |\n\n### PATCH /templates/{template_id}/versions/{version_id}\n\n\n```php\n$request_body = json_decode('{\n  \"active\": 1,\n  \"html_content\": \"<%body%>\",\n  \"name\": \"updated_example_name\",\n  \"plain_content\": \"<%body%>\",\n  \"subject\": \"<%subject%>\"\n}');\n$template_id = \"test_url_param\";\n$version_id = \"test_url_param\";\n$response = $sg->client->templates()->_($template_id)->versions()->_($version_id)->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a specific transactional template version.\n\n**This endpoint allows you to retrieve a specific version of a template.**\n\nEach transactional template can have multiple versions, each version with its own subject and content. Each user can have up to 300 versions across all templates.\n\nFor more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).\n\n## URI Parameters\n| URI Parameter | Type | Description |\n|---|---|---|\n| template_id | string | The ID of the original template |\n| version_id | string |  The ID of the template version |\n\n### GET /templates/{template_id}/versions/{version_id}\n\n\n```php\n$template_id = \"test_url_param\";\n$version_id = \"test_url_param\";\n$response = $sg->client->templates()->_($template_id)->versions()->_($version_id)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a transactional template version.\n\n**This endpoint allows you to delete one of your transactional template versions.**\n\nEach transactional template can have multiple versions, each version with its own subject and content. Each user can have up to 300 versions across all templates.\n\nFor more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).\n\n## URI Parameters\n| URI Parameter | Type | Description |\n|---|---|---|\n| template_id | string | The ID of the original template |\n| version_id | string | The ID of the template version |\n\n### DELETE /templates/{template_id}/versions/{version_id}\n\n\n```php\n$template_id = \"test_url_param\";\n$version_id = \"test_url_param\";\n$response = $sg->client->templates()->_($template_id)->versions()->_($version_id)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Activate a transactional template version.\n\n**This endpoint allows you to activate a version of one of your templates.**\n\nEach transactional template can have multiple versions, each version with its own subject and content. Each user can have up to 300 versions across all templates.\n\n\nFor more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).\n\n## URI Parameters\n| URI Parameter | Type | Description |\n|---|---|---|\n| template_id | string | The ID of the original template |\n| version_id | string |  The ID of the template version |\n\n### POST /templates/{template_id}/versions/{version_id}/activate\n\n\n```php\n$template_id = \"test_url_param\";\n$version_id = \"test_url_param\";\n$response = $sg->client->templates()->_($template_id)->versions()->_($version_id)->activate()->post();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"tracking-settings\"></a>\n# TRACKING SETTINGS\n\n## Retrieve Tracking Settings\n\n**This endpoint allows you to retrieve a list of all tracking settings that you can enable on your account.**\n\nYou can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.\n\nFor more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).\n\n### GET /tracking_settings\n\n\n```php\n$query_params = json_decode('{\"limit\": 1, \"offset\": 1}');\n$response = $sg->client->tracking_settings()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update Click Tracking Settings\n\n**This endpoint allows you to change your current click tracking setting. You can enable, or disable, click tracking using this endpoint.**\n\nYou can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.\n\nFor more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).\n\n### PATCH /tracking_settings/click\n\n\n```php\n$request_body = json_decode('{\n  \"enabled\": true\n}');\n$response = $sg->client->tracking_settings()->click()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve Click Track Settings\n\n**This endpoint allows you to retrieve your current click tracking setting.**\n\nYou can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.\n\nFor more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).\n\n### GET /tracking_settings/click\n\n\n```php\n$response = $sg->client->tracking_settings()->click()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update Google Analytics Settings\n\n**This endpoint allows you to update your current setting for Google Analytics.**\n\nFor more information about using Google Analytics, please refer to [Googles URL Builder](https://support.google.com/analytics/answer/1033867?hl=en) and their article on [\"Best Practices for Campaign Building\"](https://support.google.com/analytics/answer/1037445).\n\nWe default the settings to Googles recommendations. For more information, see [Google Analytics Demystified](https://sendgrid.com/docs/Classroom/Track/Collecting_Data/google_analytics_demystified_ga_statistics_vs_sg_statistics.html).\n\nYou can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.\n\nFor more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).\n\n### PATCH /tracking_settings/google_analytics\n\n\n```php\n$request_body = json_decode('{\n  \"enabled\": true,\n  \"utm_campaign\": \"website\",\n  \"utm_content\": \"\",\n  \"utm_medium\": \"email\",\n  \"utm_source\": \"sendgrid.com\",\n  \"utm_term\": \"\"\n}');\n$response = $sg->client->tracking_settings()->google_analytics()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve Google Analytics Settings\n\n**This endpoint allows you to retrieve your current setting for Google Analytics.**\n\nFor more information about using Google Analytics, please refer to [Googles URL Builder](https://support.google.com/analytics/answer/1033867?hl=en) and their article on [\"Best Practices for Campaign Building\"](https://support.google.com/analytics/answer/1037445).\n\nWe default the settings to Googles recommendations. For more information, see [Google Analytics Demystified](https://sendgrid.com/docs/Classroom/Track/Collecting_Data/google_analytics_demystified_ga_statistics_vs_sg_statistics.html).\n\nYou can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.\n\nFor more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).\n\n### GET /tracking_settings/google_analytics\n\n\n```php\n$response = $sg->client->tracking_settings()->google_analytics()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update Open Tracking Settings\n\n**This endpoint allows you to update your current settings for open tracking.**\n\nOpen Tracking adds an invisible image at the end of the email which can track email opens. If the email recipient has images enabled on their email client, a request to Twilio SendGrid's server for the invisible image is executed and an open event is logged. These events are logged in the Statistics portal, Email Activity interface, and are reported by the Event Webhook.\n\nYou can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.\n\nFor more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).\n\n### PATCH /tracking_settings/open\n\n\n```php\n$request_body = json_decode('{\n  \"enabled\": true\n}');\n$response = $sg->client->tracking_settings()->open()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Get Open Tracking Settings\n\n**This endpoint allows you to retrieve your current settings for open tracking.**\n\nOpen Tracking adds an invisible image at the end of the email which can track email opens. If the email recipient has images enabled on their email client, a request to Twilio SendGrid's server for the invisible image is executed and an open event is logged. These events are logged in the Statistics portal, Email Activity interface, and are reported by the Event Webhook.\n\nYou can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.\n\nFor more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).\n\n### GET /tracking_settings/open\n\n\n```php\n$response = $sg->client->tracking_settings()->open()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update Subscription Tracking Settings\n\n**This endpoint allows you to update your current settings for subscription tracking.**\n\nSubscription tracking adds links to the bottom of your emails that allows your recipients to subscribe to, or unsubscribe from, your emails.\n\nYou can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.\n\nFor more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).\n\n### PATCH /tracking_settings/subscription\n\n\n```php\n$request_body = json_decode('{\n  \"enabled\": true,\n  \"html_content\": \"html content\",\n  \"landing\": \"landing page html\",\n  \"plain_content\": \"text content\",\n  \"replace\": \"replacement tag\",\n  \"url\": \"url\"\n}');\n$response = $sg->client->tracking_settings()->subscription()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve Subscription Tracking Settings\n\n**This endpoint allows you to retrieve your current settings for subscription tracking.**\n\nSubscription tracking adds links to the bottom of your emails that allows your recipients to subscribe to, or unsubscribe from, your emails.\n\nYou can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.\n\nFor more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).\n\n### GET /tracking_settings/subscription\n\n\n```php\n$response = $sg->client->tracking_settings()->subscription()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n<a name=\"user\"></a>\n# USER\n\n## Get a user's account information.\n\n**This endpoint allows you to retrieve your user account details.**\n\nYour user's account information includes the user's account type and reputation.\n\nKeeping your user profile up to date is important. This will help Twilio SendGrid to verify who you are as well as contact you should we need to.\n\nFor more information about your user profile:\n\n* [Twilio SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)\n\n### GET /user/account\n\n\n```php\n$response = $sg->client->user()->account()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve your credit balance\n\n**This endpoint allows you to retrieve the current credit balance for your account.**\n\nYour monthly credit allotment limits the number of emails you may send before incurring overage charges. For more information about credits and billing, please visit our [Classroom](https://sendgrid.com/docs/Classroom/Basics/Billing/billing_info_and_faqs.html).\n\n### GET /user/credits\n\n\n```php\n$response = $sg->client->user()->credits()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update your account email address\n\n**This endpoint allows you to update the email address currently on file for your account.**\n\nKeeping your user profile up to date is important. This will help Twilio SendGrid to verify who you are as well as contact you should we need to.\n\nFor more information about your user profile:\n\n* [Twilio SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)\n\n### PUT /user/email\n\n\n```php\n$request_body = json_decode('{\n  \"email\": \"example@example.com\"\n}');\n$response = $sg->client->user()->email()->put($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve your account email address\n\n**This endpoint allows you to retrieve the email address currently on file for your account.**\n\nKeeping your user profile up to date is important. This will help Twilio SendGrid to verify who you are as well as contact you should we need to.\n\nFor more information about your user profile:\n\n* [Twilio SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)\n\n### GET /user/email\n\n\n```php\n$response = $sg->client->user()->email()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update your password\n\n**This endpoint allows you to update your password.**\n\nKeeping your user profile up to date is important. This will help Twilio SendGrid to verify who you are as well as contact you should we need to.\n\nFor more information about your user profile:\n\n* [Twilio SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)\n\n### PUT /user/password\n\n\n```php\n$request_body = json_decode('{\n  \"new_password\": \"new_password\",\n  \"old_password\": \"old_password\"\n}');\n$response = $sg->client->user()->password()->put($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update a user's profile\n\n**This endpoint allows you to update your current profile details.**\n\nKeeping your user profile up to date is important. This will help Twilio SendGrid to verify who you are as well as contact you should we need to.\n\nFor more information about your user profile:\n\n* [Twilio SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)\n\nIt should be noted that any one or more of the parameters can be updated via the PATCH /user/profile endpoint. The only requirement is that you include at least one when you PATCH.\n\n### PATCH /user/profile\n\n\n```php\n$request_body = json_decode('{\n  \"city\": \"Orange\",\n  \"first_name\": \"Example\",\n  \"last_name\": \"User\"\n}');\n$response = $sg->client->user()->profile()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Get a user's profile\n\nKeeping your user profile up to date is important. This will help Twilio SendGrid to verify who you are as well as contact you should we need to.\n\nFor more information about your user profile:\n\n* [Twilio SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)\n\n### GET /user/profile\n\n\n```php\n$response = $sg->client->user()->profile()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Cancel or pause a scheduled send\n\n**This endpoint allows you to cancel or pause an email that has been scheduled to be sent.**\n\nIf the maximum number of cancellations/pauses are added, HTTP 400 will\nbe returned.\n\nThe Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header.Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.\n\n### POST /user/scheduled_sends\n\n\n```php\n$request_body = json_decode('{\n  \"batch_id\": \"YOUR_BATCH_ID\",\n  \"status\": \"pause\"\n}');\n$response = $sg->client->user()->scheduled_sends()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all scheduled sends\n\n**This endpoint allows you to retrieve all cancel/paused scheduled send information.**\n\nThe Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header.Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.\n\n### GET /user/scheduled_sends\n\n\n```php\n$response = $sg->client->user()->scheduled_sends()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update user scheduled send information\n\n**This endpoint allows you to update the status of a scheduled send for the given `batch_id`.**\n\nThe Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header.Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.\n\n### PATCH /user/scheduled_sends/{batch_id}\n\n\n```php\n$request_body = json_decode('{\n  \"status\": \"pause\"\n}');\n$batch_id = \"test_url_param\";\n$response = $sg->client->user()->scheduled_sends()->_($batch_id)->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve scheduled send\n\n**This endpoint allows you to retrieve the cancel/paused scheduled send information for a specific `batch_id`.**\n\nThe Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header.Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.\n\n### GET /user/scheduled_sends/{batch_id}\n\n\n```php\n$batch_id = \"test_url_param\";\n$response = $sg->client->user()->scheduled_sends()->_($batch_id)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a cancellation or pause of a scheduled send\n\n**This endpoint allows you to delete the cancellation/pause of a scheduled send.**\n\nThe Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header.Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.\n\n### DELETE /user/scheduled_sends/{batch_id}\n\n\n```php\n$batch_id = \"test_url_param\";\n$response = $sg->client->user()->scheduled_sends()->_($batch_id)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update Enforced TLS settings\n\n**This endpoint allows you to update your current Enforced TLS settings.**\n\nThe Enforced TLS settings specify whether or not the recipient is required to support TLS or have a valid certificate. See the [SMTP Ports User Guide](https://sendgrid.com/docs/Classroom/Basics/Email_Infrastructure/smtp_ports.html) for more information on opportunistic TLS.\n\n**Note:** If either setting is enabled and the recipient does not support TLS or have a valid certificate, we drop the message and send a block event with TLS required but not supported as the description.\n\n### PATCH /user/settings/enforced_tls\n\n\n```php\n$request_body = json_decode('{\n  \"require_tls\": true,\n  \"require_valid_cert\": false\n}');\n$response = $sg->client->user()->settings()->enforced_tls()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve current Enforced TLS settings.\n\n**This endpoint allows you to retrieve your current Enforced TLS settings.**\n\nThe Enforced TLS settings specify whether or not the recipient is required to support TLS or have a valid certificate. See the [SMTP Ports User Guide](https://sendgrid.com/docs/Classroom/Basics/Email_Infrastructure/smtp_ports.html) for more information on opportunistic TLS.\n\n**Note:** If either setting is enabled and the recipient does not support TLS or have a valid certificate, we drop the message and send a block event with TLS required but not supported as the description.\n\n### GET /user/settings/enforced_tls\n\n\n```php\n$response = $sg->client->user()->settings()->enforced_tls()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update your username\n\n**This endpoint allows you to update the username for your account.**\n\nKeeping your user profile up to date is important. This will help Twilio SendGrid to verify who you are as well as contact you should we need to.\n\nFor more information about your user profile:\n\n* [Twilio SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)\n\n### PUT /user/username\n\n\n```php\n$request_body = json_decode('{\n  \"username\": \"test_username\"\n}');\n$response = $sg->client->user()->username()->put($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve your username\n\n**This endpoint allows you to retrieve your current account username.**\n\nKeeping your user profile up to date is important. This will help Twilio SendGrid to verify who you are as well as contact you should we need to.\n\nFor more information about your user profile:\n\n* [Twilio SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)\n\n### GET /user/username\n\n\n```php\n$response = $sg->client->user()->username()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update Event Notification Settings\n\n**This endpoint allows you to update your current event webhook settings.**\n\nIf an event type is marked as `true`, then the event webhook will include information about that event.\n\nTwilio SendGrid's Event Webhook will notify a URL of your choice via HTTP POST with information about events that occur as Twilio SendGrid processes your email.\n\nCommon uses of this data are to remove unsubscribes, react to spam reports, determine unengaged recipients, identify bounced email addresses, or create advanced analytics of your email program.\n\n### PATCH /user/webhooks/event/settings\n\n\n```php\n$request_body = json_decode('{\n  \"bounce\": true,\n  \"click\": true,\n  \"deferred\": true,\n  \"delivered\": true,\n  \"dropped\": true,\n  \"enabled\": true,\n  \"group_resubscribe\": true,\n  \"group_unsubscribe\": true,\n  \"open\": true,\n  \"processed\": true,\n  \"spam_report\": true,\n  \"unsubscribe\": true,\n  \"url\": \"url\"\n}');\n$response = $sg->client->user()->webhooks()->event()->settings()->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve Event Webhook settings\n\n**This endpoint allows you to retrieve your current event webhook settings.**\n\nIf an event type is marked as `true`, then the event webhook will include information about that event.\n\nTwilio SendGrid's Event Webhook will notify a URL of your choice via HTTP POST with information about events that occur as Twilio SendGrid processes your email.\n\nCommon uses of this data are to remove unsubscribes, react to spam reports, determine unengaged recipients, identify bounced email addresses, or create advanced analytics of your email program.\n\n### GET /user/webhooks/event/settings\n\n\n```php\n$response = $sg->client->user()->webhooks()->event()->settings()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Test Event Notification Settings\n\n**This endpoint allows you to test your event webhook by sending a fake event notification post to the provided URL.**\n\nTwilio SendGrid's Event Webhook will notify a URL of your choice via HTTP POST with information about events that occur as Twilio SendGrid processes your email.\n\nCommon uses of this data are to remove unsubscribes, react to spam reports, determine unengaged recipients, identify bounced email addresses, or create advanced analytics of your email program.\n\n### POST /user/webhooks/event/test\n\n\n```php\n$request_body = json_decode('{\n  \"url\": \"url\"\n}');\n$response = $sg->client->user()->webhooks()->event()->test()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Create a parse setting\n\n**This endpoint allows you to create a new inbound parse setting.**\n\nThe inbound parse webhook allows you to have incoming emails parsed, extracting some or all of the content, and then have that content POSTed by Twilio SendGrid to a URL of your choosing. For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Webhooks/parse.html).\n\n### POST /user/webhooks/parse/settings\n\n\n```php\n$request_body = json_decode('{\n  \"hostname\": \"myhostname.com\",\n  \"send_raw\": false,\n  \"spam_check\": true,\n  \"url\": \"http://email.myhosthame.com\"\n}');\n$response = $sg->client->user()->webhooks()->parse()->settings()->post($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve all parse settings\n\n**This endpoint allows you to retrieve all of your current inbound parse settings.**\n\nThe inbound parse webhook allows you to have incoming emails parsed, extracting some or all of the content, and then have that content POSTed by Twilio SendGrid to a URL of your choosing. For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Webhooks/parse.html).\n\n### GET /user/webhooks/parse/settings\n\n\n```php\n$response = $sg->client->user()->webhooks()->parse()->settings()->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Update a parse setting\n\n**This endpoint allows you to update a specific inbound parse setting.**\n\nThe inbound parse webhook allows you to have incoming emails parsed, extracting some or all of the content, and then have that content POSTed by Twilio SendGrid to a URL of your choosing. For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Webhooks/parse.html).\n\n### PATCH /user/webhooks/parse/settings/{hostname}\n\n\n```php\n$request_body = json_decode('{\n  \"send_raw\": true,\n  \"spam_check\": false,\n  \"url\": \"http://newdomain.com/parse\"\n}');\n$hostname = \"test_url_param\";\n$response = $sg->client->user()->webhooks()->parse()->settings()->_($hostname)->patch($request_body);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieve a specific parse setting\n\n**This endpoint allows you to retrieve a specific inbound parse setting.**\n\nThe inbound parse webhook allows you to have incoming emails parsed, extracting some or all of the content, and then have that content POSTed by Twilio SendGrid to a URL of your choosing. For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Webhooks/parse.html).\n\n### GET /user/webhooks/parse/settings/{hostname}\n\n\n```php\n$hostname = \"test_url_param\";\n$response = $sg->client->user()->webhooks()->parse()->settings()->_($hostname)->get();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Delete a parse setting\n\n**This endpoint allows you to delete a specific inbound parse setting.**\n\nThe inbound parse webhook allows you to have incoming emails parsed, extracting some or all of the content, and then have that content POSTed by Twilio SendGrid to a URL of your choosing. For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Webhooks/parse.html).\n\n### DELETE /user/webhooks/parse/settings/{hostname}\n\n\n```php\n$hostname = \"test_url_param\";\n$response = $sg->client->user()->webhooks()->parse()->settings()->_($hostname)->delete();\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n## Retrieves Inbound Parse Webhook statistics.\n\n**This endpoint allows you to retrieve the statistics for your Parse Webhook usage.**\n\nTwilio SendGrid's Inbound Parse Webhook allows you to parse the contents and attachments of incoming emails. The Parse API can then POST the parsed emails to a URL that you specify. The Inbound Parse Webhook cannot parse messages greater than 20MB in size, including all attachments.\n\nThere are a number of pre-made integrations for the Twilio SendGrid Parse Webhook which make processing events easy. You can find these integrations in the [Library Index](https://sendgrid.com/docs/Integrate/libraries.html#-Webhook-Libraries).\n\n### GET /user/webhooks/parse/stats\n\n\n```php\n$query_params = json_decode('{\"aggregated_by\": \"day\", \"limit\": \"test_string\", \"start_date\": \"2016-01-01\", \"end_date\": \"2016-04-01\", \"offset\": \"test_string\"}');\n$response = $sg->client->user()->webhooks()->parse()->stats()->get(null, $query_params);\nprint $response->statusCode() . \"\\n\";\nprint $response->body() . \"\\n\";\nprint_r($response->headers());\n```\n"
        },
        {
          "name": "USE_CASES.md",
          "type": "blob",
          "size": 45.255859375,
          "content": "This documentation provides examples for specific use cases. Please [open an issue](https://github.com/sendgrid/sendgrid-php/issues) or make a pull request for any use cases you would like us to document here. Thank you!\n\n# Table of Contents\n- [Table of Contents](#table-of-contents)\n- [Attachments](#attachments)\n- [Attaching a File from Box](#attaching-a-file-from-box)\n- [Attaching a File from S3](#attaching-a-file-from-s3)\n- [Kitchen Sink - an example with all settings used](#kitchen-sink)\n- [Send an Email to a Single Recipient](#send-an-email-to-a-single-recipient)\n- [Send an Email to Multiple Recipients](#send-an-email-to-multiple-recipients)\n- [Send Multiple Emails to Multiple Recipients](#send-multiple-emails-to-multiple-recipients)\n- [Send Multiple Emails with Personalizations](#multiple-email-personalizations)\n- [Set Region](#set-region)\n- [Transactional Templates](#transactional-templates)\n- [Legacy Templates](#legacy-templates)\n- [Send an Email With Twilio Email (Pilot)](#send-an-email-with-twilio-email-pilot)\n- [Send an SMS Message](#send-an-sms-message)\n- [How to Set up a Domain Authentication](#how-to-set-up-a-domain-authentication)\n- [How to View Email Statistics](#how-to-view-email-statistics)\n- [How to Use the Email Activity Feed](#how-to-use-the-email-activity-feed-api)\n- [Deploying to Heroku](#deploying-to-heroku)\n- [Google App Engine Installation](#google-app-engine-installation)\n\n<a name=\"attachments\"></a>\n# Attachments\n\nHere is an example of attaching a text file to your email, assuming that text file `my_file.txt` is located in the same directory. You can use the `addAttachments` method to add an array attachments.\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\nuse SendGrid\\Mail\\Mail;\n\n$email = new Mail();\n$email->setFrom(\"test@example.com\", \"Example User\");\n$email->setSubject(\"Sending with Twilio SendGrid is Fun\");\n$email->addTo(\"test@example.com\", \"Example User\");\n$email->addContent(\"text/plain\", \"and easy to do anywhere, even with PHP\");\n$email->addContent(\n    \"text/html\", \"<strong>and easy to do anywhere, even with PHP</strong>\"\n);\n\n$file_encoded = base64_encode(file_get_contents('my_file.txt'));\n$email->addAttachment(\n    $file_encoded,\n    \"application/text\",\n    \"my_file.txt\",\n    \"attachment\"\n);\n\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\n<a name=\"box-attachment-example\"></a>\n# Attaching a File from Box\n\nYou can attach a file from [Box](https://www.box.com) to your emails.\nBecause there is no official Box SDK for PHP, this example requires\n[firebase/php-jwt](https://github.com/firebase/php-jwt) to generate a\n[JSON Web Token](https://jwt.io) assertion. Before using this code, you should\nset up a JWT application on [Box](https://developer.box.com/docs/setting-up-a-jwt-app).\nFor more information about authenticating with JWT, see\n[this page](https://developer.box.com/docs/construct-jwt-claim-manually).\n\nAfter completing the setup tutorial, you will want to make sure your app’s\nconfiguration settings have at least the following options enabled:\n\n**Application Access**\n* Enterprise\n\n**Application Scopes**\n* Read all files and folders stored in Box\n* Read and write all files and folders stored in Box\n* Manage users\n\n**Advanced Features**\n* Perform Actions as Users\n\nRemember to reauthorize your app\n[here](https://app.box.com/master/settings/openbox) after making any changes to\nyour app’s JWT scopes.\n\n```php\n<?php\n// This example assumes you're using Composer for both the sendgrid-php library and php-jwt.\nrequire 'vendor/autoload.php';\n\nuse \\Firebase\\JWT\\JWT;\n\n$fileOwner = 'email@example.com'; // Replace with the email you use to sign in to Box\n$filePath = '/path/to/file.txt'; // Replace with the path on Box to the file you will attach\n// Replace with the path to your Box config file. Keep it in a secure location!\n$boxConfig = json_decode(file_get_contents('/path/to/boxConfig.json'));\n\n$path = explode('/', $filePath);\nif (!empty($path[0])){\n    // Adds a blank element to beginning of array in case $filePath does not have a preceding forward slash.\n    array_unshift($path, '');\n}\n\n$header = array(\n    'alg' => 'RS256',\n    'typ' => 'JWT',\n    'kid' => $boxConfig->boxAppSettings->appAuth->publicKeyID\n);\n$claims = array(\n    'iss' => $boxConfig->boxAppSettings->clientID,\n    'sub' => $boxConfig->enterpriseID,\n    'box_sub_type' => 'enterprise',\n    'aud' => 'https://api.box.com/oauth2/token',\n    'jti' => bin2hex(openssl_random_pseudo_bytes(16)),\n    'exp' => time() + 50\n);\n\n$privateKey = openssl_get_privatekey(\n    $boxConfig->boxAppSettings->appAuth->privateKey,\n    $boxConfig->boxAppSettings->appAuth->passphrase\n);\n\n$assertion = JWT::encode($claims, $privateKey, 'RS256', null, $header);\n\n// Get access token\n$url = 'https://api.box.com/oauth2/token';\n$data = array(\n    'grant_type' => 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n    'client_id' => $boxConfig->boxAppSettings->clientID,\n    'client_secret' => $boxConfig->boxAppSettings->clientSecret,\n    'assertion' => $assertion\n);\n$ch = curl_init($url);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));\n$result = json_decode(curl_exec($ch));\ncurl_close($ch);\n$accessToken = $result->access_token;\n\n// Get user ID\n$url = 'https://api.box.com/2.0/users';\n$ch = curl_init($url);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    'Authorization: Bearer '.$accessToken\n));\n$result = json_decode(curl_exec($ch));\ncurl_close($ch);\nforeach ($result->entries as $entry){\n    if ($entry->login === $fileOwner){\n        $userId = $entry->id;\n    }\n}\n\n// Get file ID\n$url = 'https://api.box.com/2.0/search';\n$data = array(\n    'query' => urlencode(end($path))\n);\n$urlEncoded = http_build_query($data);\n$ch = curl_init($url.'?'.$urlEncoded);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    'Authorization: Bearer '.$accessToken,\n    'As-User: '.$userId\n));\n$result = json_decode(curl_exec($ch));\ncurl_close($ch);\nforeach ($result->entries as $entry){\n    if (count($entry->path_collection->entries) === count($path) -1){\n        if (count($path) > 2){\n            // File is located in a subdirectory.\n            for ($i = 1; $i < (count($path) - 1); $i++){\n                if ($path[$i] === $entry->path_collection->entries[$i]->name){\n                    $fileId = $entry->id;\n                }\n            }\n        } else {\n            // File is located in default directory.\n            $fileId = $entry->id;\n        }\n    }\n}\n\nif (isset($fileId) && isset($userId)){\n    // Get file data\n    $url = 'https://api.box.com/2.0/files/'.$fileId.'/content';\n    $ch = curl_init($url);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);\n    curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n        'Authorization: Bearer '.$accessToken,\n        'As-User: '.$userId\n    ));\n    $result = curl_exec($ch);\n    $contentType = curl_getinfo($ch, CURLINFO_CONTENT_TYPE);\n    curl_close($ch);\n\n    $attachmentFilename = end($path);\n    $attachmentContent = base64_encode($result);\n    $attachmentContentType = $contentType;\n\n    $email = new \\SendGrid\\Mail\\Mail();\n    $email->setFrom(\"test@example.com\", \"Example User\");\n    $email->setSubject(\"Attaching a File from Box\");\n    $email->addTo(\"test@example.com\", \"Example User\");\n    $email->addContent(\"text/plain\", \"See attached file from Box.\");\n    $email->addContent(\n        \"text/html\", \"<strong>See attached file from Box.</strong>\"\n    );\n\n    $attachment = new \\SendGrid\\Mail\\Attachment();\n    $attachment->setContent($attachmentContent);\n    $attachment->setType($attachmentContentType);\n    $attachment->setFilename($attachmentFilename);\n    $attachment->setDisposition(\"attachment\");\n    $attachment->setContentId($attachmentFilename); // Only used if disposition is set to inline\n    $email->addAttachment($attachment);\n\n    $sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\n    try {\n        $response = $sendgrid->send($email);\n        print $response->statusCode() . \"\\n\";\n        print_r($response->headers());\n        print $response->body() . \"\\n\";\n    } catch (Exception $e) {\n        echo 'Caught exception: '. $e->getMessage() .\"\\n\";\n    }\n} else {\n    echo \"Error: file or owner could not be located\\n\";\n}\n```\n\n<a name=\"s3-attachment-example\"></a>\n# Attaching a File from S3\n\nYou can attach a file from [Amazon S3 storage](https://aws.amazon.com/s3/) to your emails. In addition to sendgrid-php, this requires the [AWS SDK for PHP](https://aws.amazon.com/sdk-for-php/). Please follow the [Getting Started](https://docs.aws.amazon.com/sdk-for-php/v3/developer-guide/getting-started_index.html) tutorial at Amazon if you haven’t set up your AWS SDK installation yet.\n\n```php\n<?php\n// This example assumes you're using Composer for both\n// the sendgrid-php library and the AWS SDK for PHP.\nrequire 'vendor/autoload.php';\nuse Aws\\S3\\S3Client;\nuse Aws\\S3\\Exception\\S3Exception;\n$bucket = '*** Your Bucket Name ***';\n$keyname = '*** Your Object Key ***';\n$s3 = new S3Client([\n    'version' => 'latest',\n    'region'  => 'us-east-1' // This should match the region of your S3 bucket.\n]);\ntry {\n    // Get the object.\n    // See https://docs.aws.amazon.com/AmazonS3/latest/dev/RetrieveObjSingleOpPHP.html\n    $result = $s3->getObject([\n        'Bucket' => $bucket,\n        'Key'    => $keyname\n    ]);\n    $keyExplode = explode('/',$keyname);\n    $attachmentFilename = end($keyExplode);\n    $attachmentContent = base64_encode($result['Body']);\n    $attachmentContentType = $result['ContentType'];\n\n    $email = new \\SendGrid\\Mail\\Mail();\n    $email->setFrom(\"test@example.com\", \"Example User\");\n    $email->setSubject(\"Attaching a File from S3\");\n    $email->addTo(\"test@example.com\", \"Example User\");\n    $email->addContent(\"text/plain\", \"See attached file from S3.\");\n    $email->addContent(\n        \"text/html\", \"<strong>See attached file from S3.</strong>\"\n    );\n\n    $attachment = new \\SendGrid\\Mail\\Attachment();\n    $attachment->setContent($attachmentContent);\n    $attachment->setType($attachmentContentType);\n    $attachment->setFilename($attachmentFilename);\n    $attachment->setDisposition(\"attachment\");\n    $attachment->setContentId($attachmentFilename); //Only used if disposition is set to inline\n    $email->addAttachment($attachment);\n    $sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\n    try {\n        $response = $sendgrid->send($email);\n        print $response->statusCode() . \"\\n\";\n        print_r($response->headers());\n        print $response->body() . \"\\n\";\n    } catch (Exception $e) {\n        echo 'Caught exception: '. $e->getMessage() .\"\\n\";\n    }\n} catch (S3Exception $e) {\n    echo 'Caught exception: '. $e->getMessage() . \"\\n\";\n}\n```\n\n<a name=\"kitchen-sink\"></a>\n# Kitchen Sink - an example with all settings used\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\nuse SendGrid\\Mail\\Mail;\n\n$email = new Mail();\n\n// For a detailed description of each of these settings,\n// please see the\n// [documentation](https://sendgrid.com/docs/API_Reference/api_v3.html).\n$email->setSubject(\"Sending with Twilio SendGrid is Fun 2\");\n\n$email->addTo(\"test@example.com\", \"Example User\");\n$email->addTo(\"test+1@example.com\", \"Example User1\");\n$toEmails = [\n    \"test+2@example.com\" => \"Example User2\",\n    \"test+3@example.com\" => \"Example User3\"\n];\n$email->addTos($toEmails);\n\n$email->addCc(\"test+4@example.com\", \"Example User4\");\n$ccEmails = [\n    \"test+5@example.com\" => \"Example User5\",\n    \"test+6@example.com\" => \"Example User6\"\n];\n$email->addCcs($ccEmails);\n\n$email->addBcc(\"test+7@example.com\", \"Example User7\");\n$bccEmails = [\n    \"test+8@example.com\" => \"Example User8\",\n    \"test+9@example.com\" => \"Example User9\"\n];\n$email->addBccs($bccEmails);\n\n$email->addHeader(\"X-Test1\", \"Test1\");\n$email->addHeader(\"X-Test2\", \"Test2\");\n$headers = [\n    \"X-Test3\" => \"Test3\",\n    \"X-Test4\" => \"Test4\",\n];\n$email->addHeaders($headers);\n\n$email->addDynamicTemplateData(\"subject1\", \"Example Subject 1\");\n$email->addDynamicTemplateData(\"name1\", \"Example Name 1\");\n$email->addDynamicTemplateData(\"city1\", \"Denver\");\n$substitutions = [\n    \"subject2\" => \"Example Subject 2\",\n    \"name2\" => \"Example Name 2\",\n    \"city2\" => \"Orange\"\n];\n$email->addDynamicTemplateDatas($substitutions);\n\n$email->addCustomArg(\"marketing1\", \"false\");\n$email->addCustomArg(\"transactional1\", \"true\");\n$email->addCustomArg(\"category\", \"name\");\n$customArgs = [\n    \"marketing2\" => \"true\",\n    \"transactional2\" => \"false\",\n    \"category\" => \"name\"\n];\n$email->addCustomArgs($customArgs);\n\n$email->setSendAt(1461775051);\n\n// You can add a personalization index or personalization parameter to the above\n// methods to add and update multiple personalizations. You can learn more about\n// personalizations [here](https://sendgrid.com/docs/Classroom/Send/v3_Mail_Send/personalizations.html).\n\n// The values below this comment are global to an entire message\n\n$email->setFrom(\"test@example.com\", \"Twilio SendGrid\");\n\n$email->setGlobalSubject(\"Sending with Twilio SendGrid is Fun and Global 2\");\n\n$email->addContent(\n    \"text/plain\",\n    \"and easy to do anywhere, even with PHP\"\n);\n$email->addContent(\n    \"text/html\",\n    \"<strong>and easy to do anywhere, even with PHP</strong>\"\n);\n$contents = [\n    \"text/calendar\" => \"Party Time!!\",\n    \"text/calendar2\" => \"Party Time 2!!\"\n];\n$email->addContents($contents);\n\n$email->addAttachment(\n    \"base64 encoded content1\",\n    \"image/png\",\n    \"banner.png\",\n    \"inline\",\n    \"Banner\"\n);\n$attachments = [\n    [\n        \"base64 encoded content2\",\n        \"image/jpeg\",\n        \"banner2.jpeg\",\n        \"attachment\",\n        \"Banner 3\"\n    ],\n    [\n        \"base64 encoded content3\",\n        \"image/gif\",\n        \"banner3.gif\",\n        \"inline\",\n        \"Banner 3\"\n    ]\n];\n$email->addAttachments($attachments);\n\n$email->setTemplateId(\"d-13b8f94fbcae4ec6b75270d6cb59f932\");\n\n$email->addGlobalHeader(\"X-Day\", \"Monday\");\n$globalHeaders = [\n    \"X-Month\" => \"January\",\n    \"X-Year\" => \"2017\"\n];\n$email->addGlobalHeaders($globalHeaders);\n\n$email->addSection(\"%section1%\", \"Substitution for Section 1 Tag\");\n$sections = [\n    \"%section3%\" => \"Substitution for Section 3 Tag\",\n    \"%section4%\" => \"Substitution for Section 4 Tag\"\n];\n$email->addSections($sections);\n\n$email->addCategory(\"Category 1\");\n$categories = [\n    \"Category 2\",\n    \"Category 3\"\n];\n$email->addCategories($categories);\n\n$email->setBatchId(\n    \"MWQxZmIyODYtNjE1Ni0xMWU1LWI3ZTUtMDgwMDI3OGJkMmY2LWEzMmViMjYxMw\"\n);\n\n$email->setReplyTo(\"dx+replyto2@example.com\", \"DX Team Reply To 2\");\n\n$email->setAsm(1, [1, 2, 3, 4]);\n\n$email->setIpPoolName(\"23\");\n\n// Mail Settings\n$email->setBccSettings(true, \"bcc@example.com\");\n// Note: Bypass Spam, Bounce, and Unsubscribe management cannot\n// be combined with Bypass List Management\n$email->enableBypassBounceManagement();\n$email->enableBypassListManagement();\n$email->enableBypassSpamManagement();\n$email->enableBypassUnsubscribeManagement();\n//$email->disableBypassListManagement();\n$email->setFooter(true, \"Footer\", \"<strong>Footer</strong>\");\n$email->enableSandBoxMode();\n//$email->disableSandBoxMode();\n$email->setSpamCheck(true, 1, \"http://mydomain.com\");\n\n// Tracking Settings\n$email->setClickTracking(true, true);\n$email->setOpenTracking(true, \"--sub--\");\n$email->setSubscriptionTracking(\n    true,\n    \"subscribe\",\n    \"<bold>subscribe</bold>\",\n    \"%%sub%%\"\n);\n$email->setGanalytics(\n    true,\n    \"utm_source\",\n    \"utm_medium\",\n    \"utm_term\",\n    \"utm_content\",\n    \"utm_campaign\"\n);\n\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\nOR\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\nuse SendGrid\\Mail\\Asm;\nuse SendGrid\\Mail\\Attachment;\nuse SendGrid\\Mail\\BatchId;\nuse SendGrid\\Mail\\Bcc;\nuse SendGrid\\Mail\\BccSettings;\nuse SendGrid\\Mail\\BypassBounceManagement;\nuse SendGrid\\Mail\\BypassListManagement;\nuse SendGrid\\Mail\\BypassSpamManagement;\nuse SendGrid\\Mail\\BypassUnsubscribeManagement;\nuse SendGrid\\Mail\\Category;\nuse SendGrid\\Mail\\Cc;\nuse SendGrid\\Mail\\ClickTracking;\nuse SendGrid\\Mail\\Content;\nuse SendGrid\\Mail\\CustomArg;\nuse SendGrid\\Mail\\Footer;\nuse SendGrid\\Mail\\From;\nuse SendGrid\\Mail\\Ganalytics;\nuse SendGrid\\Mail\\GroupId;\nuse SendGrid\\Mail\\GroupsToDisplay;\nuse SendGrid\\Mail\\Header;\nuse SendGrid\\Mail\\HtmlContent;\nuse SendGrid\\Mail\\IpPoolName;\nuse SendGrid\\Mail\\Mail;\nuse SendGrid\\Mail\\MailSettings;\nuse SendGrid\\Mail\\OpenTracking;\nuse SendGrid\\Mail\\PlainTextContent;\nuse SendGrid\\Mail\\ReplyTo;\nuse SendGrid\\Mail\\SandBoxMode;\nuse SendGrid\\Mail\\Section;\nuse SendGrid\\Mail\\SendAt;\nuse SendGrid\\Mail\\SpamCheck;\nuse SendGrid\\Mail\\Subject;\nuse SendGrid\\Mail\\SubscriptionTracking;\nuse SendGrid\\Mail\\Substitution;\nuse SendGrid\\Mail\\TemplateId;\nuse SendGrid\\Mail\\To;\nuse SendGrid\\Mail\\TrackingSettings;\n\n$email = new Mail();\n\n// For a detailed description of each of these settings,\n// please see the\n// [documentation](https://sendgrid.com/docs/API_Reference/api_v3.html).\n$email->setSubject(\n    new Subject(\"Sending with Twilio SendGrid is Fun 2\")\n);\n\n$email->addTo(new To(\"test@example.com\", \"Example User\"));\n$email->addTo(new To(\"test+1@example.com\", \"Example User1\"));\n$toEmails = [\n    new To(\"test+2@example.com\", \"Example User2\"),\n    new To(\"test+3@example.com\", \"Example User3\")\n];\n$email->addTos($toEmails);\n\n$email->addCc(new Cc(\"test+4@example.com\", \"Example User4\"));\n$ccEmails = [\n    new Cc(\"test+5@example.com\", \"Example User5\"),\n    new Cc(\"test+6@example.com\", \"Example User6\")\n];\n$email->addCcs($ccEmails);\n\n$email->addBcc(\n    new Bcc(\"test+7@example.com\", \"Example User7\")\n);\n$bccEmails = [\n    new Bcc(\"test+8@example.com\", \"Example User8\"),\n    new Bcc(\"test+9@example.com\", \"Example User9\")\n];\n$email->addBccs($bccEmails);\n\n$email->addHeader(new Header(\"X-Test1\", \"Test1\"));\n$email->addHeader(new Header(\"X-Test2\", \"Test2\"));\n$headers = [\n    new Header(\"X-Test3\", \"Test3\"),\n    new Header(\"X-Test4\", \"Test4\")\n];\n$email->addHeaders($headers);\n\n$email->addDynamicTemplateData(\n    new Substitution(\"subject1\", \"Example Subject 1\")\n);\n$email->addDynamicTemplateData(\n    new Substitution(\"name\", \"Example Name 1\")\n);\n$email->addDynamicTemplateData(\n    new Substitution(\"city1\", \"Denver\")\n);\n$substitutions = [\n    new Substitution(\"subject2\", \"Example Subject 2\"),\n    new Substitution(\"name2\", \"Example Name 2\"),\n    new Substitution(\"city2\", \"Orange\")\n];\n$email->addDynamicTemplateDatas($substitutions);\n\n$email->addCustomArg(new CustomArg(\"marketing1\", \"false\"));\n$email->addCustomArg(new CustomArg(\"transactional1\", \"true\"));\n$email->addCustomArg(new CustomArg(\"category\", \"name\"));\n$customArgs = [\n    new CustomArg(\"marketing2\", \"true\"),\n    new CustomArg(\"transactional2\", \"false\"),\n    new CustomArg(\"category\", \"name\")\n];\n$email->addCustomArgs($customArgs);\n\n$email->setSendAt(new SendAt(1461775051));\n\n// You can add a personalization index or personalization parameter to the above\n// methods to add and update multiple personalizations. You can learn more about\n// personalizations [here](https://sendgrid.com/docs/Classroom/Send/v3_Mail_Send/personalizations.html).\n\n// The values below this comment are global to an entire message\n\n$email->setFrom(new From(\"test@example.com\", \"Twilio SendGrid\"));\n\n$email->setGlobalSubject(\n    new Subject(\"Sending with Twilio SendGrid is Fun and Global 2\")\n);\n\n$plainTextContent = new PlainTextContent(\n    \"and easy to do anywhere, even with PHP\"\n);\n$htmlContent = new HtmlContent(\n    \"<strong>and easy to do anywhere, even with PHP</strong>\"\n);\n$email->addContent($plainTextContent);\n$email->addContent($htmlContent);\n$contents = [\n    new Content(\"text/calendar\", \"Party Time!!\"),\n    new Content(\"text/calendar2\", \"Party Time 2!!\")\n];\n$email->addContents($contents);\n\n$email->addAttachment(\n    new Attachment(\n        \"base64 encoded content1\",\n        \"image/png\",\n        \"banner.png\",\n        \"inline\",\n        \"Banner\"\n    )\n);\n$attachments = [\n    new Attachment(\n        \"base64 encoded content2\",\n        \"banner2.jpeg\",\n        \"image/jpeg\",\n        \"attachment\",\n        \"Banner 3\"\n    ),\n    new Attachment(\n        \"base64 encoded content3\",\n        \"banner3.gif\",\n        \"image/gif\",\n        \"inline\",\n        \"Banner 3\"\n    )\n];\n$email->addAttachments($attachments);\n\n$email->setTemplateId(\n    new TemplateId(\"d-13b8f94fbcae4ec6b75270d6cb59f932\")\n);\n\n$email->addGlobalHeader(new Header(\"X-Day\", \"Monday\"));\n$globalHeaders = [\n    new Header(\"X-Month\", \"January\"),\n    new Header(\"X-Year\", \"2017\")\n];\n$email->addGlobalHeaders($globalHeaders);\n\n$email->addSection(\n    new Section(\n        \"%section1%\",\n        \"Substitution for Section 1 Tag\"\n    )\n);\n\n$sections = [\n    new Section(\n        \"%section3%\",\n        \"Substitution for Section 3 Tag\"\n    ),\n    new Section(\n        \"%section4%\",\n        \"Substitution for Section 4 Tag\"\n    )\n];\n$email->addSections($sections);\n\n$email->addCategory(new Category(\"Category 1\"));\n$categories = [\n    new Category(\"Category 2\"),\n    new Category(\"Category 3\")\n];\n$email->addCategories($categories);\n\n$email->setBatchId(\n    new BatchId(\n        \"MWQxZmIyODYtNjE1Ni0xMWU1LWI3ZTUtMDgwMDI3OGJkMmY2LWEzMmViMjYxMw\"\n    )\n);\n\n$email->setReplyTo(\n    new ReplyTo(\n        \"dx+replyto2@example.com\",\n        \"DX Team Reply To 2\"\n    )\n);\n\n$asm = new Asm(\n    new GroupId(1),\n    new GroupsToDisplay([1,2,3,4])\n);\n$email->setAsm($asm);\n\n$email->setIpPoolName(new IpPoolName(\"23\"));\n\n$mail_settings = new MailSettings();\n$mail_settings->setBccSettings(\n    new BccSettings(true, \"bcc@example.com\")\n);\n\n// Note: Bypass Spam, Bounce, and Unsubscribe management cannot\n// be combined with Bypass List Management\n$mail_settings->setBypassBounceManagement(\n    new BypassBounceManagement(true)\n);\n$mail_settings->setBypassSpamManagement(\n    new BypassSpamManagement(true)\n);\n$mail_settings->setBypassUnsubscribeManagement(\n    new BypassUnsubscribeManagement(true)\n);\n\n// OR\n$mail_settings->setBypassListManagement(\n    new BypassListManagement(true)\n);\n\n$mail_settings->setFooter(\n    new Footer(true, \"Footer\", \"<strong>Footer</strong>\")\n);\n$mail_settings->setSandBoxMode(new SandBoxMode(true));\n$mail_settings->setSpamCheck(\n    new SpamCheck(true, 1, \"http://mydomain.com\")\n);\n$email->setMailSettings($mail_settings);\n\n$tracking_settings = new TrackingSettings();\n$tracking_settings->setClickTracking(\n    new ClickTracking(true, true)\n);\n$tracking_settings->setOpenTracking(\n    new OpenTracking(true, \"--sub--\")\n);\n$tracking_settings->setSubscriptionTracking(\n    new SubscriptionTracking(\n        true,\n        \"subscribe\",\n        \"<bold>subscribe</bold>\",\n        \"%%sub%%\"\n    )\n);\n$tracking_settings->setGanalytics(\n    new Ganalytics(\n        true,\n        \"utm_source\",\n        \"utm_medium\",\n        \"utm_term\",\n        \"utm_content\",\n        \"utm_campaign\"\n    )\n);\n$email->setTrackingSettings($tracking_settings);\n\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\n<a name=\"single-email-single-recipient\"></a>\n# Send an Email to a Single Recipient\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\nuse SendGrid\\Mail\\Mail;\n\n$email = new Mail();\n$email->setFrom(\"test@example.com\", \"Example User\");\n$email->setSubject(\"Sending with Twilio SendGrid is Fun\");\n$email->addTo(\"test@example.com\", \"Example User\");\n$email->addContent(\"text/plain\", \"and easy to do anywhere, even with PHP\");\n$email->addContent(\n    \"text/html\", \"<strong>and easy to do anywhere, even with PHP</strong>\"\n);\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\nOR\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\nuse SendGrid\\Mail\\From;\nuse SendGrid\\Mail\\HtmlContent;\nuse SendGrid\\Mail\\Mail;\nuse SendGrid\\Mail\\PlainTextContent;\nuse SendGrid\\Mail\\Subject;\nuse SendGrid\\Mail\\To;\n\n$from = new From(\"test@example.com\", \"Example User\");\n$subject = new Subject(\"Sending with Twilio SendGrid is Fun\");\n$to = new To(\"test@example.com\", \"Example User\");\n$plainTextContent = new PlainTextContent(\n    \"and easy to do anywhere, even with PHP\"\n);\n$htmlContent = new HtmlContent(\n    \"<strong>and easy to do anywhere, even with PHP</strong>\"\n);\n$email = new Mail(\n    $from,\n    $to,\n    $subject,\n    $plainTextContent,\n    $htmlContent\n);\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\n<a name=\"single-email-multiple-recipients\"></a>\n# Send an Email to Multiple Recipients\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\nuse SendGrid\\Mail\\Mail;\n\n$email = new Mail();\n$email->setFrom(\"test@example.com\", \"Example User\");\n$tos = [\n    \"test+test1@example.com\" => \"Example User1\",\n    \"test+test2@example.com\" => \"Example User2\",\n    \"test+test3@example.com\" => \"Example User3\"\n];\n$email->addTos($tos);\n$email->setSubject(\"Sending with Twilio SendGrid is Fun\");\n$email->addContent(\"text/plain\", \"and easy to do anywhere, even with PHP\");\n$email->addContent(\n    \"text/html\", \"<strong>and easy to do anywhere, even with PHP</strong>\"\n);\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\nOR\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\nuse SendGrid\\Mail\\From;\nuse SendGrid\\Mail\\HtmlContent;\nuse SendGrid\\Mail\\Mail;\nuse SendGrid\\Mail\\PlainTextContent;\nuse SendGrid\\Mail\\Subject;\nuse SendGrid\\Mail\\To;\n\n$from = new From(\"test@example.com\", \"Example User\");\n$tos = [\n    new To(\"test+test1@example.com\", \"Example User1\"),\n    new To(\"test+test2@example.com\", \"Example User2\"),\n    new To(\"test+test3@example.com\", \"Example User3\")\n];\n$subject = new Subject(\"Sending with Twilio SendGrid is Fun\");\n$plainTextContent = new PlainTextContent(\n    \"and easy to do anywhere, even with PHP\"\n);\n$htmlContent = new HtmlContent(\n    \"<strong>and easy to do anywhere, even with PHP</strong>\"\n);\n$email = new Mail(\n    $from,\n    $tos,\n    $subject,\n    $plainTextContent,\n    $htmlContent\n);\n\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\n<a name=\"multiple-emails-multiple-recipients\"></a>\n# Send Multiple Emails to Multiple Recipients\n\nNote that [transactional templates](#transactional-templates) may be a better option for this use case, especially for more complex uses.\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\nuse SendGrid\\Mail\\From;\nuse SendGrid\\Mail\\HtmlContent;\nuse SendGrid\\Mail\\Mail;\nuse SendGrid\\Mail\\PlainTextContent;\nuse SendGrid\\Mail\\Subject;\nuse SendGrid\\Mail\\To;\n\n$from = new From(\"test@example.com\", \"Example User\");\n$tos = [\n    new To(\n        \"test+test1@example.com\",\n        \"Example User1\",\n        [\n            '-name-' => 'Example User 1',\n            '-github-' => 'http://github.com/example_user1'\n        ],\n        \"Subject 1 -name-\"\n    ),\n    new To(\n        \"test+test2@example.com\",\n        \"Example User2\",\n        [\n            '-name-' => 'Example User 2',\n            '-github-' => 'http://github.com/example_user2'\n        ],\n        \"Subject 2 -name-\"\n    ),\n    new To(\n        \"test+test3@example.com\",\n        \"Example User3\",\n        [\n            '-name-' => 'Example User 3',\n            '-github-' => 'http://github.com/example_user3'\n        ]\n    )\n];\n$subject = new Subject(\"Hi -name-!\"); // default subject\n$globalSubstitutions = [\n    '-time-' => \"2018-05-03 23:10:29\"\n];\n$plainTextContent = new PlainTextContent(\n    \"Hello -name-, your github is -github- sent at -time-\"\n);\n$htmlContent = new HtmlContent(\n    \"<strong>Hello -name-, your github is <a href=\\\"-github-\\\">here</a></strong> sent at -time-\"\n);\n$email = new Mail(\n    $from,\n    $tos,\n    $subject, // or array of subjects, these take precedence\n    $plainTextContent,\n    $htmlContent,\n    $globalSubstitutions\n);\n\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\nOR\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\nuse SendGrid\\Mail\\From;\nuse SendGrid\\Mail\\HtmlContent;\nuse SendGrid\\Mail\\Mail;\nuse SendGrid\\Mail\\PlainTextContent;\nuse SendGrid\\Mail\\To;\n\n$from = new From(\"test@example.com\", \"Example User\");\n$tos = [\n    new To(\n        \"test+test1@example.com\",\n        \"Example User1\",\n        [\n            '-name-' => 'Example User 1',\n            '-github-' => 'http://github.com/example_user1'\n        ],\n        \"Example User1 -name-\"\n    ),\n    new To(\n        \"test+test2@example.com\",\n        \"Example User2\",\n        [\n            '-name-' => 'Example User 2',\n            '-github-' => 'http://github.com/example_user2'\n        ],\n        \"Example User2 -name-\"\n    ),\n    new To(\n        \"test+test3@example.com\",\n        \"Example User3\",\n        [\n            '-name-' => 'Example User 3',\n            '-github-' => 'http://github.com/example_user3'\n        ]\n    )\n];\n$subject = [\n    \"Subject 1 -name-\",\n    \"Subject 2 -name-\"\n];\n$globalSubstitutions = [\n    '-time-' => \"2018-05-03 23:10:29\"\n];\n$plainTextContent = new PlainTextContent(\n    \"Hello -name-, your github is -github- sent at -time-\"\n);\n$htmlContent = new HtmlContent(\n    \"<strong>Hello -name-, your github is <a href=\\\"-github-\\\">here</a></strong> sent at -time-\"\n);\n$email = new Mail(\n    $from,\n    $tos,\n    $subject, // or array of subjects, these take precedence\n    $plainTextContent,\n    $htmlContent,\n    $globalSubstitutions\n);\n\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\n<a name=\"multiple-email-personalizations\"></a>\n# Send Multiple Emails with Personalizations\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\nuse SendGrid\\Mail\\From;\nuse SendGrid\\Mail\\Mail;\nuse SendGrid\\Mail\\Personalization;\nuse SendGrid\\Mail\\Subject;\nuse SendGrid\\Mail\\To;\n\n$from = new From(\"test@example.com\", \"Twilio Sendgrid\");\n$to = new To(\n    \"test+test1@example.com\",\n    \"Example User1\",\n    [\n        '-name-' => 'Example User 1'\n    ],\n    \"Example User1 -name-\"\n );\n$subject = new Subject(\"Hello from Twilio Sendgrid!\");\n$plainTextContent = new PlainTextContent(\n    \"How's it going -name-?\"\n);\n$htmlContent = new HtmlContent(\n    \"<strong>How's it going -name-?</strong>\"\n);\n$email = new Mail($from, $to, $subject, $plainTextContent, $htmlContent);\n\n$personalization0 = new Personalization();\n$personalization0->addTo(new To(\n        \"test+test2@example.com\",\n        \"Example User2\",\n        [\n            '-name-' => 'Example User 2'\n        ],\n        \"Example User2 -name-\"\n));\n$personalization0->addTo(new To(\n        \"test+test3@example.com\",\n        \"Example User3\",\n        [\n            '-name-' => 'Example User 3'\n        ],\n        \"Example User3 -name-\"\n));\n$personalization0->setSubject(new Subject(\"Hello from Twilio Sendgrid!\"));\n$email->addPersonalization($personalization0);\n\n$personalization1 = new Personalization();\n$personalization1->addTo(new To(\n        \"test+test3@example.com\",\n        \"Example User4\",\n        [\n            '-name-' => 'Example User 4'\n        ],\n        \"Example User4 -name-\"\n));\n$personalization1->addTo(new To(\n        \"test+test4@example.com\",\n        \"Example User5\",\n        [\n            '-name-' => 'Example User 5'\n        ],\n        \"Example User5 -name-\"\n));\n$personalization1->addFrom(new From(\n    \"test5@example.com\" => \"Twilio\"\n))\n$personalization1->setSubject(new Subject(\"Hello from Twilio!\"));\n$mail->addPersonalization($personalization1);\n\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\n<a name=\"set-region\"></a>\n# Set Region\nThe SendGrid object can also be used to set the region to \"eu\", which will send the request to https://api.eu.sendgrid.com/. By default, it is set to https://api.sendgrid.com/, e.g.\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\n$sendgrid->setDataResidency(\"eu\");\n\nOR\n\n$sendgrid->setDataResidency(\"global\");\n```\n\n<a name=\"transactional-templates\"></a>\n# Transactional Templates\n\nFor this example, we assume you have created a [dynamic transactional template](https://sendgrid.com/docs/ui/sending-email/how-to-send-an-email-with-dynamic-transactional-templates/) in the UI or via the API. Following is the template content we used for testing.\n\nTemplate ID (replace with your own):\n\n```text\nd-13b8f94fbcae4ec6b75270d6cb59f932\n```\n\nEmail Subject:\n\n```text\n{{ subject }}\n```\n\nTemplate Body:\n\n```html\n<html>\n<head>\n\t<title></title>\n</head>\n<body>\nHello {{ name }},\n<br /><br/>\nI'm glad you are trying out the template feature!\n<br /><br/>\nI hope you are having a great day in {{ city }} :)\n<br /><br/>\n</body>\n</html>\n```\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\nuse SendGrid\\Mail\\From;\nuse SendGrid\\Mail\\To;\nuse SendGrid\\Mail\\Mail;\n\n$from = new From(\"test@example.com\", \"Example User\");\n$tos = [\n    new To(\n        \"test+test1@example.com\",\n        \"Example User1\",\n        [\n            'subject' => 'Subject 1',\n            'name' => 'Example User 1',\n            'city' => 'Denver'\n        ]\n    ),\n    new To(\n        \"test+test2@example.com\",\n        \"Example User2\",\n        [\n            'subject' => 'Subject 2',\n            'name' => 'Example User 2',\n            'city' => 'Irvine'\n        ]\n    ),\n    new To(\n        \"test+test3@example.com\",\n        \"Example User3\",\n        [\n            'subject' => 'Subject 3',\n            'name' => 'Example User 3',\n            'city' => 'Redwood City'\n        ]\n    )\n];\n$email = new Mail(\n    $from,\n    $tos\n);\n$email->setTemplateId(\"d-13b8f94fbcae4ec6b75270d6cb59f932\");\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\nOR\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\nuse SendGrid\\Mail\\Mail;\n\n$email = new Mail();\n$email->setFrom(\"test@sendgrid.com\", \"Example User\");\n$email->setSubject(\"I'm replacing the subject tag\");\n$email->addTo(\n    \"test+test1@example.com\",\n    \"Example User1\",\n    [\n        \"subject\" => \"Subject 1\",\n        \"name\" => \"Example User 1\",\n        \"city\" => \"Denver\"\n    ],\n    0\n);\n$email->addTo(\n    \"test+test2@example.com\",\n    \"Example User2\",\n    [\n        \"subject\" => \"Subject 2\",\n        \"name\" => \"Example User 2\",\n        \"city\" => \"Denver\"\n    ],\n    1\n);\n$email->addTo(\n    \"test+test3@example.com\",\n    \"Example User3\",\n    [\n        \"subject\" => \"Subject 3\",\n        \"name\" => \"Example User 3\",\n        \"city\" => \"Redwood City\"\n    ],\n    2\n);\n$email->setTemplateId(\"d-13b8f94fbcae4ec6b75270d6cb59f932\");\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\n<a name=\"legacy-templates\"></a>\n# Legacy Templates\n\nFor this example, we assume you have created a [legacy transactional template](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html) in the UI or via the API. Following is the template content we used for testing.\n\nTemplate ID (replace with your own):\n\n```text\n13b8f94f-bcae-4ec6-b752-70d6cb59f932\n```\n\nEmail Subject:\n\n```text\n<%subject%>\n```\n\nTemplate Body:\n\n```html\n<html>\n<head>\n\t<title></title>\n</head>\n<body>\nHello -name-,\n<br /><br/>\nI'm glad you are trying out the template feature!\n<br /><br/>\n<%body%>\n<br /><br/>\nI hope you are having a great day in -city- :)\n<br /><br/>\n</body>\n</html>\n```\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\nuse \\SendGrid\\Mail\\From;\nuse \\SendGrid\\Mail\\To;\nuse \\SendGrid\\Mail\\Subject;\nuse \\SendGrid\\Mail\\PlainTextContent;\nuse \\SendGrid\\Mail\\HtmlContent;\nuse \\SendGrid\\Mail\\Mail;\n\n$from = new From(\"test@example.com\", \"Example User\");\n$tos = [\n    new To(\n        \"test+test1@example.com\",\n        \"Example User1\",\n        [\n            '-name-' => 'Example User 1',\n            '-city-' => 'Denver'\n        ]\n    ),\n    new To(\n        \"test+test2@example.com\",\n        \"Example User2\",\n        [\n            '-name-' => 'Example User 2',\n            '-city-' => 'Irvine'\n        ]\n    ),\n    new To(\n        \"test+test3@example.com\",\n        \"Example User3\",\n        [\n            '-name-' => 'Example User 3',\n            '-city-' => 'Redwood City'\n        ]\n    )\n];\n$subject = new Subject(\"I'm replacing the subject tag\");\n$plainTextContent = new PlainTextContent(\n    \"I'm replacing the **body tag**\"\n);\n$htmlContent = new HtmlContent(\n    \"I'm replacing the <strong>body tag</strong>\"\n);\n$email = new Mail(\n    $from,\n    $tos,\n    $subject,\n    $plainTextContent,\n    $htmlContent\n);\n$email->setTemplateId(\"13b8f94f-bcae-4ec6-b752-70d6cb59f932\");\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\nOR\n\n```php\n<?php\n// Uncomment next line if you're not using a dependency loader (such as Composer)\n// require_once '<PATH TO>/sendgrid-php.php';\n\nuse SendGrid\\Mail\\Mail;\n\n$email = new Mail();\n$email->setFrom(\"test@sendgrid.com\", \"Example User\");\n$email->setSubject(\"I'm replacing the subject tag\");\n$email->addTo(\n    \"test+test1@example.com\",\n    \"Example User1\",\n    [\n        \"-name-\" => \"Example User 1\",\n        \"-city-\" => \"Denver\"\n    ],\n    0\n);\n$email->addTo(\n    \"test+test2@example.com\",\n    \"Example User2\",\n    [\n        \"-name-\" => \"Example User 2\",\n        \"-city-\" => \"Denver\"\n    ],\n    1\n);\n$email->addTo(\n    \"test+test3@example.com\",\n    \"Example User3\",\n    [\n        \"-name-\" => \"Example User 3\",\n        \"-city-\" => \"Redwood City\"\n    ],\n    2\n);\n$email->addContent(\"text/plain\", \"I'm replacing the **body tag**\");\n$email->addContent(\"text/html\", \"I'm replacing the <strong>body tag</strong>\");\n$email->setTemplateId(\"13b8f94f-bcae-4ec6-b752-70d6cb59f932\");\n$sendgrid = new \\SendGrid(getenv('SENDGRID_API_KEY'));\ntry {\n    $response = $sendgrid->send($email);\n    print $response->statusCode() . \"\\n\";\n    print_r($response->headers());\n    print $response->body() . \"\\n\";\n} catch (Exception $e) {\n    echo 'Caught exception: '.  $e->getMessage(). \"\\n\";\n}\n```\n\n# Send an Email With Twilio Email (Pilot)\n\n### 1. Obtain a Free Twilio Account\n\nSign up for a free Twilio account [here](https://www.twilio.com/try-twilio?source=sendgrid-php).\n\n### 2. Set Up Your Environment Variables\n\nThe Twilio API allows for authentication using with either an API key/secret or your Account SID/Auth Token. You can create an API key [here](https://twil.io/get-api-key) or obtain your Account SID and Auth Token [here](https://twil.io/console).\n\nOnce you have those, follow the steps below based on your operating system.\n\n#### Linux/Mac\n\n```bash\necho \"export TWILIO_API_KEY='YOUR_TWILIO_API_KEY'\" > twilio.env\necho \"export TWILIO_API_SECRET='YOUR_TWILIO_API_SECRET'\" >> twilio.env\n\n# or\n\necho \"export TWILIO_ACCOUNT_SID='YOUR_TWILIO_ACCOUNT_SID'\" > twilio.env\necho \"export TWILIO_AUTH_TOKEN='YOUR_TWILIO_AUTH_TOKEN'\" >> twilio.env\n```\n\nThen:\n\n```bash\necho \"twilio.env\" >> .gitignore\nsource ./twilio.env\n```\n\n#### Windows\n\nTemporarily set the environment variable (accessible only during the current CLI session):\n\n```bash\nset TWILIO_API_KEY=YOUR_TWILIO_API_KEY\nset TWILIO_API_SECRET=YOUR_TWILIO_API_SECRET\n\n: or\n\nset TWILIO_ACCOUNT_SID=YOUR_TWILIO_ACCOUNT_SID\nset TWILIO_AUTH_TOKEN=YOUR_TWILIO_AUTH_TOKEN\n```\n\nOr permanently set the environment variable (accessible in all subsequent CLI sessions):\n\n```bash\nsetx TWILIO_API_KEY \"YOUR_TWILIO_API_KEY\"\nsetx TWILIO_API_SECRET \"YOUR_TWILIO_API_SECRET\"\n\n: or\n\nsetx TWILIO_ACCOUNT_SID \"YOUR_TWILIO_ACCOUNT_SID\"\nsetx TWILIO_AUTH_TOKEN \"YOUR_TWILIO_AUTH_TOKEN\"\n```\n\n### 3. Initialize the Twilio Email Client\n\n```php\n$twilioEmail = new \\TwilioEmail(\\getenv('TWILIO_API_KEY'), \\getenv('TWILIO_API_SECRET'));\n\n// or\n\n$twilioEmail = new \\TwilioEmail(\\getenv('TWILIO_ACCOUNT_SID'), \\getenv('TWILIO_AUTH_TOKEN'));\n```\n\nThis client has the same interface as the `SendGrid` client.\n\n# Send an SMS Message\n\nFirst, follow the above steps for creating a Twilio account and setting up environment variables with the proper credentials.\n\nThen, install the Twilio Helper Library.\n\n```bash\ncomposer require twilio/sdk\n```\n\nFinally, send a message.\n\n```php\n<?php\n$sid = \\getenv('TWILIO_ACCOUNT_SID');\n$token = \\getenv('TWILIO_AUTH_TOKEN');\n\n$client = new \\Twilio\\Rest\\Client($sid, $token);\n$message = $client->messages->create(\n  '8881231234', // Text this number\n  [\n    'from' => '9991231234', // From a valid Twilio number\n    'body' => 'Hello from Twilio!'\n  ]\n);\n```\n\nFor more information, please visit the [Twilio SMS PHP documentation](https://www.twilio.com/docs/sms/quickstart/php).\n\n<a name=\"domain-authentication\"></a>\n# How to Set up a Domain Authentication\n\nYou can find documentation for how to setup a domain authentication via the UI [here](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-domain-authentication/) and via API [here](USAGE.md#sender-authentication).\n\nFind more information about all of Twilio SendGrid's authentication related documentation [here](https://sendgrid.com/docs/ui/account-and-settings/).\n\n<a name=\"email-stats\"></a>\n# How to View Email Statistics\n\nYou can find documentation for how to view your email statistics via the UI [here](https://app.sendgrid.com/statistics) and via API [here](USAGE.md#stats).\n\nAlternatively, we can post events to a URL of your choice via our [Event Webhook](https://sendgrid.com/docs/for-developers/tracking-events/event/) about events that occur as Twilio SendGrid processes your email.\n\n<a name=\"email-activity\"></a>\n# How to Use the Email Activity Feed API\n\nIn order to gain access to the Email Activity Feed API, you must [purchase](https://app.sendgrid.com/settings/billing/addons/email_activity) additional email activity history. To learn about Sendgrid's API to download information from the Email Activity feed, get started [here](https://sendgrid.com/docs/API_Reference/Web_API_v3/Tutorials/getting_started_email_activity_api.html).\n\n<a name=\"heroku\"></a>\n# Deploying to Heroku\n\nUse the button below to instantly setup your own Simple instance for sending email using SendGrid on Heroku.\n\n<a href=\"https://heroku.com/deploy?template=https://github.com/sendgrid/sendgrid-php/tree/example-heroku-hello-email\">\n  <img src=\"https://www.herokucdn.com/deploy/button.svg\" alt=\"Deploy\">\n</a>\n\n<a name=\"GAE-instructions\"></a>\n# Google App Engine Installation\n\nGoogle App Engine installations with Composer require the creation of file `php.ini` in the base folder(the same directory as the `app.yaml` file). You can read more about this file [here](https://cloud.google.com/appengine/docs/standard/php/config/php_ini).\n\nThe file `php.ini` should contain:\n\n```ini\ngoogle_app_engine.enable_curl_lite = 1\n```\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.376953125,
          "content": "{\n  \"name\": \"sendgrid/sendgrid\",\n  \"description\": \"This library allows you to quickly and easily send emails through Twilio SendGrid using PHP.\",\n  \"homepage\": \"http://github.com/sendgrid/sendgrid-php\",\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"SendGrid\",\n    \"sendgrid\",\n    \"Twilio SendGrid\",\n    \"twilio sendgrid\",\n    \"email\",\n    \"send\",\n    \"grid\"\n  ],\n  \"require\": {\n    \"php\": \">=7.3\",\n    \"sendgrid/php-http-client\": \"~4.1\",\n    \"starkbank/ecdsa\": \"^2.1.0\",\n    \"ext-curl\": \"*\",\n    \"ext-json\": \"*\",\n    \"ext-mbstring\": \"*\",\n    \"ext-openssl\": \"*\",\n    \"ext-gmp\": \"*\"\n  },\n  \"require-dev\": {\n    \"phpunit/phpunit\": \"^9\",\n    \"squizlabs/php_codesniffer\": \"3.*\",\n    \"swaggest/json-diff\": \"^3.4\",\n    \"phpstan/phpstan\": \"^1.5\"\n  },\n  \"replace\": {\n    \"sendgrid/sendgrid-php\": \"*\"\n  },\n  \"type\": \"library\",\n  \"autoload\": {\n    \"psr-4\": {\n      \"SendGrid\\\\Contacts\\\\\": \"lib/contacts/\",\n      \"SendGrid\\\\EventWebhook\\\\\": \"lib/eventwebhook/\",\n      \"SendGrid\\\\Helper\\\\\": \"lib/helper/\",\n      \"SendGrid\\\\Mail\\\\\": \"lib/mail/\",\n      \"SendGrid\\\\Stats\\\\\": \"lib/stats/\"\n    },\n    \"classmap\": [\n      \"lib/BaseSendGridClientInterface.php\",\n      \"lib/SendGrid.php\",\n      \"lib/TwilioEmail.php\"\n    ]\n  },\n  \"autoload-dev\": {\n    \"psr-4\": {\n      \"SendGrid\\\\Tests\\\\Integration\\\\\": \"test/integration\",\n      \"SendGrid\\\\Tests\\\\Unit\\\\\": \"test/unit\"\n    },\n    \"classmap\": [\n      \"test/BaseTestClass.php\"\n    ]\n  }\n}\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpcs.xml",
          "type": "blob",
          "size": 10.0712890625,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\"PSR2\">\n    <description>The PSR-2 coding standard.</description>\n    <arg name=\"tab-width\" value=\"4\"/>\n\n    <!-- 2. General -->\n\n    <!-- 2.1 Basic Coding Standard -->\n\n    <!-- Include the whole PSR-1 standard -->\n    <rule ref=\"PSR1\"/>\n\n    <!-- 2.2 Files -->\n\n    <!-- All PHP files MUST use the Unix LF (linefeed) line ending. -->\n    <rule ref=\"Generic.Files.LineEndings\">\n        <properties>\n            <property name=\"eolChar\" value=\"\\n\"/>\n        </properties>\n    </rule>\n\n    <!-- All PHP files MUST end with a single blank line. -->\n    <!-- checked in Files/EndFileNewlineSniff -->\n\n    <!-- The closing ?> tag MUST be omitted from files containing only PHP. -->\n    <!-- checked in Files/ClosingTagSniff -->\n\n    <!-- 2.3 Lines -->\n\n    <!-- The soft limit on line length MUST be 120 characters; automated style checkers MUST warn but MUST NOT error at the soft limit. -->\n    <rule ref=\"Generic.Files.LineLength\">\n        <properties>\n            <property name=\"lineLimit\" value=\"120\"/>\n            <property name=\"absoluteLineLimit\" value=\"0\"/>\n        </properties>\n    </rule>\n\n    <!-- There MUST NOT be trailing whitespace at the end of non-blank lines. -->\n    <rule ref=\"Squiz.WhiteSpace.SuperfluousWhitespace.StartFile\">\n        <severity>0</severity>\n    </rule>\n    <rule ref=\"Squiz.WhiteSpace.SuperfluousWhitespace.EndFile\">\n        <severity>0</severity>\n    </rule>\n    <rule ref=\"Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines\">\n        <severity>0</severity>\n    </rule>\n\n    <!-- There MUST NOT be more than one statement per line. -->\n    <rule ref=\"Generic.Formatting.DisallowMultipleStatements\"/>\n\n    <!-- 2.4 Indenting -->\n\n    <!-- Code MUST use an indent of 4 spaces, and MUST NOT use tabs for indenting. -->\n    <rule ref=\"Generic.WhiteSpace.ScopeIndent\">\n        <properties>\n            <property name=\"ignoreIndentationTokens\" type=\"array\">\n                <element value=\"T_COMMENT\"/>\n                <element value=\"T_DOC_COMMENT_OPEN_TAG\"/>\n            </property>\n        </properties>\n    </rule>\n    <rule ref=\"Generic.WhiteSpace.DisallowTabIndent\"/>\n\n    <!-- 2.5 Keywords and True/False/Null -->\n\n    <!-- PHP keywords MUST be in lower case. -->\n    <rule ref=\"Generic.PHP.LowerCaseKeyword\"/>\n\n    <!-- The PHP constants true, false, and null MUST be in lower case. -->\n    <rule ref=\"Generic.PHP.LowerCaseConstant\"/>\n\n    <!-- 3. Namespace and Use Declarations -->\n\n    <!-- When present, there MUST be one blank line after the namespace declaration. -->\n    <!-- checked in Namespaces/NamespaceDeclarationSniff -->\n\n    <!-- When present, all use declarations MUST go after the namespace declaration.\n         There MUST be one use keyword per declaration.\n         There MUST be one blank line after the use block. -->\n    <!-- checked in Namespaces/UseDeclarationSniff -->\n\n    <!-- 4. Classes, Properties, and Methods -->\n\n    <!-- 4.1. Extends and Implements -->\n\n    <!-- The extends and implements keywords MUST be declared on the same line as the class name.\n         The opening brace for the class go MUST go on its own line; the closing brace for the class MUST go on the next line after the body.\n         Lists of implements MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one interface per line. -->\n    <!-- checked in Classes/ClassDeclarationSniff -->\n\n    <!-- 4.2. Properties -->\n\n    <!-- Visibility MUST be declared on all properties.\n         The var keyword MUST NOT be used to declare a property.\n         There MUST NOT be more than one property declared per statement.\n         Property names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility. -->\n    <!-- checked in Classes/PropertyDeclarationSniff -->\n\n    <!-- 4.3 Methods -->\n\n    <!-- Visibility MUST be declared on all methods. -->\n    <rule ref=\"Squiz.Scope.MethodScope\"/>\n    <rule ref=\"Squiz.WhiteSpace.ScopeKeywordSpacing\"/>\n\n    <!-- Method names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility. -->\n    <!-- checked in Methods/MethodDeclarationSniff -->\n\n    <!-- Method names MUST NOT be declared with a space after the method name. The opening brace MUST go on its own line, and the closing brace MUST go on the next line following the body. There MUST NOT be a space after the opening parenthesis, and there MUST NOT be a space before the closing parenthesis. -->\n    <!-- checked in Methods/FunctionClosingBraceSniff -->\n    <rule ref=\"Squiz.Functions.FunctionDeclaration\"/>\n    <rule ref=\"Squiz.Functions.LowercaseFunctionKeywords\"/>\n\n    <!-- 4.4 Method Arguments -->\n\n    <!-- In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma. -->\n    <rule ref=\"Squiz.Functions.FunctionDeclarationArgumentSpacing\">\n        <properties>\n            <property name=\"equalsSpacing\" value=\"1\"/>\n        </properties>\n    </rule>\n    <rule ref=\"Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint\">\n        <severity>0</severity>\n    </rule>\n\n    <!-- Method arguments with default values MUST go at the end of the argument list. -->\n    <rule ref=\"PEAR.Functions.ValidDefaultValue\"/>\n\n    <!-- Argument lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument per line. When the argument list is split across multiple lines, the closing parenthesis and opening brace MUST be placed together on their own line with one space between them. -->\n    <rule ref=\"Squiz.Functions.MultiLineFunctionDeclaration\"/>\n\n    <!-- 4.5 abstract, final, and static -->\n\n    <!-- When present, the abstract and final declarations MUST precede the visibility declaration.\n         When present, the static declaration MUST come after the visibility declaration. -->\n    <!-- checked in Methods/MethodDeclarationSniff -->\n\n    <!-- 4.6 Method and Function Calls -->\n\n    <!-- When making a method or function call, there MUST NOT be a space between the method or function name and the opening parenthesis, there MUST NOT be a space after the opening parenthesis, and there MUST NOT be a space before the closing parenthesis. In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma.\n    Argument lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument per line. -->\n    <rule ref=\"Generic.Functions.FunctionCallArgumentSpacing\"/>\n    <rule ref=\"PSR2.Methods.FunctionCallSignature.SpaceAfterCloseBracket\">\n        <severity>0</severity>\n    </rule>\n    <rule ref=\"PSR2.Methods.FunctionCallSignature.OpeningIndent\">\n        <severity>0</severity>\n    </rule>\n\n    <!-- 5. Control Structures -->\n\n    <!-- The general style rules for control structures are as follows:\n    There MUST be one space after the control structure keyword\n    There MUST NOT be a space after the opening parenthesis\n    There MUST NOT be a space before the closing parenthesis\n    There MUST be one space between the closing parenthesis and the opening brace\n    The structure body MUST be indented once\n    The closing brace MUST be on the next line after the body -->\n    <rule ref=\"Squiz.ControlStructures.ControlSignature\"/>\n    <rule ref=\"Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpen\" />\n    <rule ref=\"Squiz.WhiteSpace.ControlStructureSpacing.SpacingBeforeClose\" />\n    <rule ref=\"Squiz.WhiteSpace.ScopeClosingBrace\"/>\n    <rule ref=\"Squiz.ControlStructures.ForEachLoopDeclaration\"/>\n    <rule ref=\"Squiz.ControlStructures.ForLoopDeclaration\"/>\n    <rule ref=\"Squiz.ControlStructures.LowercaseDeclaration\"/>\n    <!-- checked in ControlStructures/ControlStructureSpacingSniff -->\n\n    <!-- exclude this message as it is already checked Generic.PHP.LowerCaseKeyword -->\n    <rule ref=\"Squiz.ControlStructures.ForEachLoopDeclaration.AsNotLower\">\n        <severity>0</severity>\n    </rule>\n\n    <!-- The body of each structure MUST be enclosed by braces. This standardizes how the structures look, and reduces the likelihood of introducing errors as new lines get added to the body. -->\n    <rule ref=\"Generic.ControlStructures.InlineControlStructure\"/>\n\n    <!-- 5.1. if, elseif, else -->\n\n    <!-- The keyword elseif SHOULD be used instead of else if so that all control keywords look like single words. -->\n    <!-- checked in ControlStructures/ElseIfDeclarationSniff -->\n\n    <!-- 5.2. switch, case -->\n\n    <!-- The case statement MUST be indented once from switch, and the break keyword (or other terminating keyword) MUST be indented at the same level as the case body. There MUST be a comment such as // no break when fall-through is intentional in a non-empty case body. -->\n    <!-- checked in ControlStructures/SwitchDeclarationSniff -->\n\n    <!-- 6. Closures -->\n\n    <!-- Closures MUST be declared with a space after the function keyword, and a space before and after the use keyword.\n    The opening brace MUST go on the same line, and the closing brace MUST go on the next line following the body.\n    There MUST NOT be a space after the opening parenthesis of the argument list or variable list, and there MUST NOT be a space before the closing parenthesis of the argument list or variable list.\n    In the argument list and variable list, there MUST NOT be a space before each comma, and there MUST be one space after each comma.\n    Closure arguments with default values MUST go at the end of the argument list.\n    Argument lists and variable lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument or variable per line.\n    When the ending list (whether or arguments or variables) is split across multiple lines, the closing parenthesis and opening brace MUST be placed together on their own line with one space between them. -->\n    <!-- checked in Squiz.Functions.MultiLineFunctionDeclaration -->\n</ruleset>"
        },
        {
          "name": "prism.sh",
          "type": "blob",
          "size": 0.34375,
          "content": "#!/bin/bash\nset -e\n\nrm -rf prism && mkdir -p prism && cd prism\ngit clone --depth 1 https://github.com/sendgrid/sendgrid-oai .\ncd prism\n\ndocker compose build --parallel\n\nif [ -z \"$command\" ]; then\n  docker compose up --force-recreate --abort-on-container-exit --remove-orphans\nelse\n  docker compose run helper-runner \"$command\"\n  docker compose down\nfi\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "sendgrid-php.php",
          "type": "blob",
          "size": 0.9736328125,
          "content": "<?php\n/**\n * This file is used to load the Composer autoloader if required.\n */\n\nuse SendGrid\\Mail\\Mail;\n\n// Define path/existence of Composer autoloader\n$composerAutoloadFile = __DIR__ . '/vendor/autoload.php';\n$composerAutoloadFileExists = (is_file($composerAutoloadFile));\n\n// Can't locate SendGrid\\Mail\\Mail class?\nif (!class_exists(Mail::class)) {\n    // Suggest to load Composer autoloader of project\n    if (!$composerAutoloadFileExists) {\n        //  Can't load the Composer autoloader in this project folder\n        error_log(\"Composer autoloader not found. Execute 'composer install' in the project folder first.\");\n    } else {\n        // Load Composer autoloader\n        require_once $composerAutoloadFile;\n\n        // If desired class still not existing\n        if (!class_exists(Mail::class)) {\n            // Suggest to review the Composer autoloader settings\n            error_log(\"Error finding SendGrid classes. Please review your autoloading configuration.\");\n        }\n    }\n}\n"
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "twilio_sendgrid_logo.png",
          "type": "blob",
          "size": 14.25390625,
          "content": null
        }
      ]
    }
  ]
}