{
  "metadata": {
    "timestamp": 1736711873393,
    "page": 222,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "doctrine/reflection",
      "stars": 2939,
      "defaultBranch": "1.2.x",
      "files": [
        {
          "name": ".doctrine-project.json",
          "type": "blob",
          "size": 0.6357421875,
          "content": "{\n    \"active\": false,\n    \"name\": \"Reflection\",\n    \"slug\": \"reflection\",\n    \"docsSlug\": \"doctrine-reflection\",\n    \"versions\": [\n        {\n            \"name\": \"1.2\",\n            \"branchName\": \"1.2.x\",\n            \"slug\": \"1.2\",\n            \"current\": true,\n            \"aliases\": [\n                \"current\",\n                \"stable\"\n            ]\n        },\n        {\n            \"name\": \"1.1\",\n            \"branchName\": \"1.1.x\",\n            \"slug\": \"1.1\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.0\",\n            \"branchName\": \"1.0\",\n            \"slug\": \"1.0\",\n            \"maintained\": false\n        }\n    ]\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.181640625,
          "content": "/docs export-ignore\n/tests export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/.travis.yml export-ignore\n/phpunit.xml.dist export-ignore\n/phpcs.xml.dist export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0830078125,
          "content": "/vendor/\n/composer.lock\n/phpunit.xml\n/phpcs.xml\n/.phpcs-cache\n/.phpunit.result.cache\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "Copyright (c) 2006-2015 Doctrine Project\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.9580078125,
          "content": "⚠ This package is abandoned, consider migrating to alternatives, such as\n`roave/better-reflection`. Features that are still useful to Doctrine have been\nmoved to `doctrine/persistence`⚠\n\n# Doctrine Reflection\n\n[![Build Status](https://travis-ci.org/doctrine/reflection.svg)](https://travis-ci.org/doctrine/reflection)\n[![Code Coverage](https://codecov.io/gh/doctrine/dbal/branch/reflection/graph/badge.svg)](https://codecov.io/gh/doctrine/reflection/branch/1.2.x)\n\nThe Doctrine Reflection project is a simple library used by the various Doctrine projects which adds some additional functionality on top of the reflection functionality that comes with PHP. It allows you to get the reflection information about classes, methods and properties statically.\n\n## More resources:\n\n* [Website](https://www.doctrine-project.org/)\n* [Documentation](https://www.doctrine-project.org/projects/doctrine-reflection/en/latest/)\n* [Downloads](https://github.com/doctrine/reflection/releases)\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.8525390625,
          "content": "{\n    \"name\": \"doctrine/reflection\",\n    \"type\": \"library\",\n    \"description\": \"The Doctrine Reflection project is a simple library used by the various Doctrine projects which adds some additional functionality on top of the reflection functionality that comes with PHP. It allows you to get the reflection information about classes, methods and properties statically.\",\n    \"keywords\": [\n        \"reflection\",\n        \"static\"\n    ],\n    \"homepage\": \"https://www.doctrine-project.org/projects/reflection.html\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\"name\": \"Guilherme Blanco\", \"email\": \"guilhermeblanco@gmail.com\"},\n        {\"name\": \"Roman Borschel\", \"email\": \"roman@code-factory.org\"},\n        {\"name\": \"Benjamin Eberlei\", \"email\": \"kontakt@beberlei.de\"},\n        {\"name\": \"Jonathan Wage\", \"email\": \"jonwage@gmail.com\"},\n        {\"name\": \"Johannes Schmitt\", \"email\": \"schmittjoh@gmail.com\"},\n        {\"name\": \"Marco Pivetta\", \"email\": \"ocramius@gmail.com\"}\n    ],\n    \"require\": {\n        \"php\": \"^7.1 || ^8.0\",\n        \"ext-tokenizer\": \"*\",\n        \"doctrine/annotations\": \"^1.0 || ^2.0\"\n    },\n    \"require-dev\": {\n        \"doctrine/coding-standard\": \"^9\",\n        \"doctrine/common\": \"^3.3\",\n        \"phpstan/phpstan\": \"^1.4.10\",\n        \"phpstan/phpstan-phpunit\": \"^1\",\n        \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.5\"\n    },\n    \"conflict\": {\n        \"doctrine/common\": \"<2.9\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Doctrine\\\\Common\\\\\": \"lib/Doctrine/Common\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Doctrine\\\\Tests\\\\\": \"tests/Doctrine/Tests\",\n            \"Doctrine\\\\Tests_PHP74\\\\\": \"tests/Doctrine/Tests_PHP74\"\n        }\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"dealerdirect/phpcodesniffer-composer-installer\": true\n        },\n        \"sort-packages\": true\n    },\n    \"abandoned\": \"roave/better-reflection\"\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpcs.xml.dist",
          "type": "blob",
          "size": 1.8525390625,
          "content": "<?xml version=\"1.0\"?>\n<ruleset>\n    <arg name=\"basepath\" value=\".\"/>\n    <arg name=\"extensions\" value=\"php\"/>\n    <arg name=\"parallel\" value=\"80\"/>\n    <arg name=\"cache\" value=\".phpcs-cache\"/>\n    <arg name=\"colors\"/>\n\n    <!-- Ignore warnings and show progress of the run -->\n    <arg value=\"nps\"/>\n\n    <config name=\"php_version\" value=\"70100\"/>\n\n    <file>lib</file>\n    <file>tests</file>\n\n    <rule ref=\"Doctrine\">\n        <exclude name=\"SlevomatCodingStandard.TypeHints.DeclareStrictTypes\"/>\n        <exclude name=\"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint\"/>\n        <exclude name=\"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint\"/>\n        <exclude name=\"SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingParameterTypeHint\"/>\n        <exclude name=\"SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingReturnTypeHint\"/>\n    </rule>\n\n    <rule ref=\"PSR1.Classes.ClassDeclaration.MultipleClasses\">\n        <exclude-pattern>*/tests/*</exclude-pattern>\n    </rule>\n\n    <rule ref=\"Squiz.Classes.ClassFileName.NoMatch\">\n        <exclude-pattern>*/tests/*</exclude-pattern>\n    </rule>\n\n    <rule ref=\"Squiz.NamingConventions.ValidVariableName.NotCamelCaps\">\n        <exclude-pattern>tests/*</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming\">\n        <exclude-pattern>lib/Doctrine/Common/Reflection/ClassFinderInterface.php</exclude-pattern>\n        <exclude-pattern>lib/Doctrine/Common/Reflection/ReflectionProviderInterface.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint\">\n        <exclude-pattern>tests/*</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint\">\n        <exclude-pattern>tests/*</exclude-pattern>\n    </rule>\n</ruleset>\n"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.1474609375,
          "content": "parameters:\n    level: 3\n    paths:\n        - lib\n        - tests\n    phpVersion: 80106\n\nincludes:\n    - vendor/phpstan/phpstan-phpunit/extension.neon\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.748046875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n         colors=\"true\"\n         beStrictAboutOutputDuringTests=\"true\"\n         beStrictAboutTodoAnnotatedTests=\"true\"\n         bootstrap=\"./tests/Doctrine/Tests/TestInit.php\"\n>\n    <testsuites>\n        <testsuite name=\"Doctrine Event Manager Test Suite\">\n            <directory>./tests/Doctrine/Tests</directory>\n            <directory phpVersion=\"7.4\" phpVersionOperator=\">=\">./tests/Doctrine/Tests_PHP74</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist>\n            <directory>./lib/Doctrine/</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}