{
  "metadata": {
    "timestamp": 1736712222275,
    "page": 940,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pereorga/minimalist-web-notepad",
      "stars": 1213,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0068359375,
          "content": "/_tmp/\n"
        },
        {
          "name": ".htaccess",
          "type": "blob",
          "size": 0.4404296875,
          "content": "Options -Indexes\nRewriteEngine On\nRewriteRule ^([a-zA-Z0-9_-]+)$ index.php?note=$1 [QSA]\n\n<IfModule mod_headers.c>\n    Header set X-Robots-Tag: \"noindex, nofollow\"\n</IfModule>\n\n# Uncomment the lines below to enable basic authentication.\n# See https://httpd.apache.org/docs/current/programs/htpasswd.html for generating your .htpasswd\n\n# AuthType basic\n# AuthName \"website.name\"\n# AuthUserFile \"/home/user/update-path-to.htpasswd\"\n# Require valid-user\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.1416015625,
          "content": "# Minimalist Web Notepad\n\nThis is an open-source clone of the now-defunct notepad.cc: \"a piece of paper in the cloud\".\n\nSee demo at https://notes.orga.cat or https://notes.orga.cat/whatever.\n\n## Installation\n\nMake sure the web server is allowed to write to the `_tmp` directory.\n\n### On Apache\n\nYou may need to enable mod_rewrite and allow `.htaccess` files in your site configuration.\nSee [How To Set Up mod_rewrite for Apache](https://www.digitalocean.com/community/tutorials/how-to-set-up-mod_rewrite-for-apache-on-ubuntu-14-04).\n\n### On Nginx\n\nTo enable URL rewriting, put something like this in your configuration file:\n\nIf the project resides in the root directory:\n```\nlocation / {\n    rewrite ^/([a-zA-Z0-9_-]+)$ /index.php?note=$1;\n}\n```\n\nIf the project resides in a subdirectory:\n```\nlocation ~* ^/notes/([a-zA-Z0-9_-]+)$ {\n    try_files $uri /notes/index.php?note=$1;\n}\n```\n\nIf parameters need to be passed in Nginx (such as `?raw`), then `&$args` needs to be added to the end of the `$1` match:\n```\nlocation ~* ^/notes/([a-zA-Z0-9_-]+)$ {\n    try_files $uri /notes/index.php?note=$1&$args;\n}\n```\n\n## Usage (CLI)\n\nUsing the command-line interface you can both save and retrieve notes. Here are some examples using `curl`:\n\nRetrieve a note's content and save it to a local file:\n\n```\ncurl https://example.com/notes/test > test.txt\n```\n\nSave specific text to a note:\n\n```\ncurl https://example.com/notes/test -d 'hello,\n\nwelcome to my pad!\n'\n```\n\nSave the content of a local file (e.g., `/etc/hosts`) to a note:\n\n```\ncat /etc/hosts | curl https://example.com/notes/hosts --data-binary @-\n```\n\n## Copyright and license\n\nCopyright 2012 Pere Orga <pere@orga.cat>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this work except in compliance with the License.\nYou may obtain a copy of the License at:\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "_tmp",
          "type": "tree",
          "content": null
        },
        {
          "name": "favicon.ico",
          "type": "blob",
          "size": 0.19140625,
          "content": null
        },
        {
          "name": "favicon.svg",
          "type": "blob",
          "size": 5.05078125,
          "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"256\" height=\"256\"><defs><pattern id=\"a\" width=\"124.249\" height=\"124.249\" patternTransform=\"translate(-9.091 793.763)scale(2.10569)\" patternUnits=\"userSpaceOnUse\"><path d=\"M0 0h124.249v124.249H0z\" style=\"fill:none;stroke:none\"/><path d=\"M5.811 4.423h114.895v115.401H5.811z\" style=\"fill:none;stroke:none\"/><path d=\"M127.143 123.857c8.25.024 13.643 3.442 14.286 12.5l-.358 81.786c-.663 12.098-7.174 11.968-12.857 13.571l-51.964.179c-9.844-1.036-14.749-4.883-16.429-14.643l.893-79.821c.401-5.982 2.243-10.784 7.857-12.5z\" style=\"fill:#fff;fill-opacity:1;stroke:#000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\" transform=\"translate(-22.223 -113.568)\"/><path d=\"m129.92 124.11-17.385 80.143c-2.936 11.593-9.448 10.453-15.635 11.046l-37.03-.207.844-77.663c.401-5.982 2.243-10.784 7.857-12.5l61.35-.82z\" style=\"opacity:.26180258;fill:#000;fill-opacity:1;stroke:none\" transform=\"translate(-22.223 -113.568)\"/><path d=\"m69.7 1015.997 60.357-.253m-60.735-9.723 60.356-.252m-60.167-9.912 60.357-.253m-60.736-9.723 60.357-.252M68.343 975.37l60.357-.253m-60.736-9.723 60.357-.252m-60.167-9.912 60.356-.253m-60.735-9.723 60.357-.252\" style=\"fill:none;stroke:#646464;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\" transform=\"translate(-22.223 -909.93)\"/><path d=\"M37.143 990.576c-10.843-2.959-7.691-8.897-5.061-14.982l24.53-47.64c1.536-4.243 7.428-7.25 11.245-6.663l60.357-.357c3.71.86 8.788.808 4.286 7.142l-27.457 53.694c-1.024 5.81-7.643 8.762-11.497 8.911z\" style=\"fill:#5fd5d4;fill-opacity:1;stroke:#000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\" transform=\"translate(-22.223 -909.93)\"/><path d=\"m65.536 937.846 45.714-.253m-52.321 8.824 45.714-.252\" style=\"fill:none;stroke:#171718;stroke-width:4;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\" transform=\"translate(-22.223 -909.93)\"/><path d=\"M122.986 128.784c0 .662-.396 1.2-.884 1.2s-.884-.538-.884-1.2c0-.663.396-1.2.884-1.2s.884.537.884 1.2\" style=\"fill:#26272a;fill-opacity:1;fill-rule:nonzero;stroke:none\" transform=\"matrix(2.04511 0 0 1.47368 -149.542 -174.508)\"/><path d=\"M122.321 128.59c-7.036-7.322 3.267-13.748 4.286-6.25\" style=\"fill:none;stroke:#838382;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\" transform=\"translate(-22.223 -113.568)\"/><path d=\"M122.986 128.784c0 .662-.396 1.2-.884 1.2s-.884-.538-.884-1.2c0-.663.396-1.2.884-1.2s.884.537.884 1.2\" style=\"fill:#26272a;fill-opacity:1;fill-rule:nonzero;stroke:none\" transform=\"matrix(2.04511 0 0 1.47368 -160.01 -174.045)\"/><path d=\"M122.321 128.59c-7.036-7.322 3.267-13.748 4.286-6.25\" style=\"fill:none;stroke:#838382;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\" transform=\"translate(-32.692 -113.105)\"/><path d=\"M122.986 128.784c0 .662-.396 1.2-.884 1.2s-.884-.538-.884-1.2c0-.663.396-1.2.884-1.2s.884.537.884 1.2\" style=\"fill:#26272a;fill-opacity:1;fill-rule:nonzero;stroke:none\" transform=\"matrix(2.04511 0 0 1.47368 -170.746 -174.049)\"/><path d=\"M122.321 128.59c-7.036-7.322 3.267-13.748 4.286-6.25\" style=\"fill:none;stroke:#838382;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\" transform=\"translate(-43.428 -113.109)\"/><path d=\"M122.986 128.784c0 .662-.396 1.2-.884 1.2s-.884-.538-.884-1.2c0-.663.396-1.2.884-1.2s.884.537.884 1.2\" style=\"fill:#26272a;fill-opacity:1;fill-rule:nonzero;stroke:none\" transform=\"matrix(2.04511 0 0 1.47368 -181.652 -173.796)\"/><path d=\"M122.321 128.59c-7.036-7.322 3.267-13.748 4.286-6.25\" style=\"fill:none;stroke:#838382;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\" transform=\"translate(-54.334 -112.856)\"/><path d=\"M122.986 128.784c0 .662-.396 1.2-.884 1.2s-.884-.538-.884-1.2c0-.663.396-1.2.884-1.2s.884.537.884 1.2\" style=\"fill:#26272a;fill-opacity:1;fill-rule:nonzero;stroke:none\" transform=\"matrix(2.04511 0 0 1.47368 -192.222 -173.587)\"/><path d=\"M122.321 128.59c-7.036-7.322 3.267-13.748 4.286-6.25\" style=\"fill:none;stroke:#838382;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\" transform=\"translate(-64.904 -112.647)\"/><path d=\"M122.986 128.784c0 .662-.396 1.2-.884 1.2s-.884-.538-.884-1.2c0-.663.396-1.2.884-1.2s.884.537.884 1.2\" style=\"fill:#26272a;fill-opacity:1;fill-rule:nonzero;stroke:none\" transform=\"matrix(2.04511 0 0 1.47368 -203.636 -173.46)\"/><path d=\"M122.321 128.59c-7.036-7.322 3.267-13.748 4.286-6.25\" style=\"fill:none;stroke:#838382;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\" transform=\"translate(-76.318 -112.521)\"/></pattern></defs><path d=\"M-9.091 793.763h261.63v261.63H-9.091z\" style=\"fill:url(#a);stroke:none\" transform=\"translate(0 -796.362)\"/></svg>"
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 3.8779296875,
          "content": "<?php\n\n// Path to the directory to save the notes in, without trailing slash.\n// Should be outside the document root, if possible.\n$save_path = '_tmp';\n\n// Disable caching.\nheader('Cache-Control: no-store');\n\n// If no note name is provided, or if the name is too long, or if it contains invalid characters.\nif (!isset($_GET['note']) || strlen($_GET['note']) > 64 || !preg_match('/^[a-zA-Z0-9_-]+$/', $_GET['note'])) {\n\n    // Generate a name with 5 random unambiguous characters. Redirect to it.\n    header(\"Location: \" . substr(str_shuffle('234579abcdefghjkmnpqrstwxyz'), -5));\n    die;\n}\n\n$path = $save_path . '/' . $_GET['note'];\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $text = isset($_POST['text']) ? $_POST['text'] : file_get_contents(\"php://input\");\n    // Update file.\n    file_put_contents($path, $text);\n\n    // If provided input is empty, delete file.\n    if (!strlen($text)) {\n        unlink($path);\n    }\n    die;\n}\n\n// Print raw file when explicitly requested, or if the client is curl or wget.\nif (isset($_GET['raw']) || strpos($_SERVER['HTTP_USER_AGENT'], 'curl') === 0 || strpos($_SERVER['HTTP_USER_AGENT'], 'Wget') === 0) {\n    if (is_file($path)) {\n        header('Content-type: text/plain');\n        readfile($path);\n    } else {\n        header('HTTP/1.0 404 Not Found');\n    }\n    die;\n}\n?><!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title><?php print $_GET['note']; ?></title>\n<link rel=\"icon\" href=\"favicon.ico\" sizes=\"any\">\n<link rel=\"icon\" href=\"favicon.svg\" type=\"image/svg+xml\">\n<style>\nbody {\n    margin: 0;\n    background: #ebeef1;\n}\n.container {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    bottom: 20px;\n    left: 20px;\n}\n#content {\n    margin: 0;\n    padding: 20px;\n    overflow-y: auto;\n    resize: none;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    border: 1px solid #ddd;\n    outline: none;\n}\n#printable {\n    display: none;\n}\n@media (prefers-color-scheme: dark) {\n    body {\n        background: #333b4d;\n    }\n    #content {\n        background: #24262b;\n        color: #fff;\n        border-color: #495265;\n    }\n}\n@media print {\n    .container {\n        display: none;\n    }\n    #printable {\n        display: block;\n        white-space: pre-wrap;\n        word-break: break-word;\n    }\n}\n</style>\n</head>\n<body>\n<div class=\"container\">\n<textarea id=\"content\"><?php\nif (is_file($path)) {\n    print htmlspecialchars(file_get_contents($path), ENT_QUOTES, 'UTF-8');\n}\n?></textarea>\n</div>\n<pre id=\"printable\"></pre>\n<script>\nfunction uploadContent() {\n    if (content !== textarea.value) {\n        var temp = textarea.value;\n        var request = new XMLHttpRequest();\n        request.open('POST', window.location.href, true);\n        request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n        request.onload = function() {\n            if (request.readyState === 4) {\n\n                // If the request has ended, check again after 1 second.\n                content = temp;\n                setTimeout(uploadContent, 1000);\n            }\n        }\n        request.onerror = function() {\n\n            // Try again after 1 second.\n            setTimeout(uploadContent, 1000);\n        }\n        request.send('text=' + encodeURIComponent(temp));\n\n        // Update the printable contents.\n        printable.removeChild(printable.firstChild);\n        printable.appendChild(document.createTextNode(temp));\n    }\n    else {\n\n        // If the content has not changed, check again after 1 second.\n        setTimeout(uploadContent, 1000);\n    }\n}\n\nvar textarea = document.getElementById('content');\nvar printable = document.getElementById('printable');\nvar content = textarea.value;\n\n// Initialize the printable contents with the initial value of the textarea.\nprintable.appendChild(document.createTextNode(content));\n\ntextarea.focus();\nuploadContent();\n</script>\n</body>\n</html>\n"
        }
      ]
    }
  ]
}