{
  "metadata": {
    "timestamp": 1736712145551,
    "page": 771,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "beyondcode/laravel-self-diagnosis",
      "stars": 1428,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3046875,
          "content": "; This file is for unifying the coding style for different editors and IDEs.\n; More information at http://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3857421875,
          "content": "# Path-based git attributes\n# https://www.kernel.org/pub/software/scm/git/docs/gitattributes.html\n\n# Ignore all test and documentation with \"export-ignore\".\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/.travis.yml        export-ignore\n/phpunit.xml.dist   export-ignore\n/.scrutinizer.yml   export-ignore\n/tests              export-ignore\n/.editorconfig      export-ignore\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.08984375,
          "content": "build\ncomposer.lock\ndocs\nvendor\ncoverage\n.idea\n.phpunit.result.cache\n.phpunit.cache\n.vscode\n"
        },
        {
          "name": ".scrutinizer.yml",
          "type": "blob",
          "size": 0.564453125,
          "content": "filter:\n    excluded_paths: [tests/*]\n\nchecks:\n    php:\n        remove_extra_empty_lines: true\n        remove_php_closing_tag: true\n        remove_trailing_whitespace: true\n        fix_use_statements:\n            remove_unused: true\n            preserve_multiple: false\n            preserve_blanklines: true\n            order_alphabetically: true\n        fix_php_opening_tag: true\n        fix_linefeed: true\n        fix_line_ending: true\n        fix_identation_4spaces: true\n        fix_doc_comments: true\n\ntools:\n    external_code_coverage:\n        timeout: 600\n        runs: 4"
        },
        {
          "name": ".styleci.yml",
          "type": "blob",
          "size": 0.064453125,
          "content": "preset: laravel\n\ndisabled:\n  - single_class_element_per_statement\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.4453125,
          "content": "language: php\nsudo: required\n\nphp:\n  - 7.1\n  - 7.2\n  - 7.3\n\nenv:\n  matrix:\n    - COMPOSER_FLAGS=\"--prefer-lowest\"\n    - COMPOSER_FLAGS=\"\"\n\nbefore_script:\n  - travis_retry composer self-update\n  - travis_retry composer update ${COMPOSER_FLAGS} --no-interaction --prefer-source\n\nscript:\n  - vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover\n\nafter_script:\n  - php vendor/bin/ocular code-coverage:upload --format=php-clover coverage.clover\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.1318359375,
          "content": "# Changelog\n\nAll notable changes to `laravel-self-diagnosis` will be documented in this file\n\n## 1.0.0 - 201X-XX-XX\n\n- initial release\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.90234375,
          "content": "# Contributing\n\nContributions are **welcome** and will be fully **credited**.\n\nPlease read and understand the contribution guide before creating an issue or pull request.\n\n## Etiquette\n\nThis project is open source, and as such, the maintainers give their free time to build and maintain the source code\nheld within. They make the code freely available in the hope that it will be of use to other developers. It would be\nextremely unfair for them to suffer abuse or anger for their hard work.\n\nPlease be considerate towards maintainers when raising issues or presenting pull requests. Let's show the\nworld that developers are civilized and selfless people.\n\nIt's the duty of the maintainer to ensure that all submissions to the project are of sufficient\nquality to benefit the project. Many developers have different skillsets, strengths, and weaknesses. Respect the maintainer's decision, and do not be upset or abusive if your submission is not used.\n\n## Viability\n\nWhen requesting or submitting new features, first consider whether it might be useful to others. Open\nsource projects are used by many developers, who may have entirely different needs to your own. Think about\nwhether or not your feature is likely to be used by other users of the project.\n\n## Procedure\n\nBefore filing an issue:\n\n- Attempt to replicate the problem, to ensure that it wasn't a coincidental incident.\n- Check to make sure your feature suggestion isn't already present within the project.\n- Check the pull requests tab to ensure that the bug doesn't have a fix in progress.\n- Check the pull requests tab to ensure that the feature isn't already in progress.\n\nBefore submitting a pull request:\n\n- Check the codebase to ensure that your feature doesn't already exist.\n- Check the pull requests to ensure that another person hasn't already submitted the feature or fix.\n\n## Requirements\n\nIf the project maintainer has any additional requirements, you will find them listed here.\n\n- **[PSR-2 Coding Standard](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md)** - The easiest way to apply the conventions is to install [PHP Code Sniffer](https://pear.php.net/package/PHP_CodeSniffer).\n\n- **Add tests!** - Your patch won't be accepted if it doesn't have tests.\n\n- **Document any change in behaviour** - Make sure the `README.md` and any other relevant documentation are kept up-to-date.\n\n- **Consider our release cycle** - We try to follow [SemVer v2.0.0](https://semver.org/). Randomly breaking public APIs is not an option.\n\n- **One pull request per feature** - If you want to do more than one thing, send multiple pull requests.\n\n- **Send coherent history** - Make sure each individual commit in your pull request is meaningful. If you had to make multiple intermediate commits while developing, please [squash them](https://www.git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Changing-Multiple-Commit-Messages) before submitting.\n\n**Happy coding**!\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.072265625,
          "content": "The MIT License (MIT)\n\nCopyright (c) Beyond Code GmbH <hello@beyondco.de>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.537109375,
          "content": "# Perform Self-Diagnosis Tests On Your Laravel Application\n\n[![Latest Version on Packagist](https://img.shields.io/packagist/v/beyondcode/laravel-self-diagnosis.svg?style=flat-square)](https://packagist.org/packages/beyondcode/laravel-self-diagnosis)\n[![Total Downloads](https://img.shields.io/packagist/dt/beyondcode/laravel-self-diagnosis.svg?style=flat-square)](https://packagist.org/packages/beyondcode/laravel-self-diagnosis)\n\nThis package allows you to run self-diagnosis tests on your Laravel application. It comes with multiple checks out of the box and allows you to add custom checks yourself.\n\nHere is an example output of the command:\n\n![All Checks passed](https://beyondco.de/github/self-diagnosis/checks_green.png)\n\n## Included checks\n\n- Is the APP_KEY set?\n- Are your composer dependencies up to date with the composer.lock file?\n- Do you have the correct PHP version installed?\n- Do you have the correct PHP extensions installed?\n- Can a connection to the database be established?\n- Do the `storage` and `bootstrap/cache` directories have the correct permissions?\n- Does the `.env` file exist?\n- Is the maintenance mode disabled?\n- Are the required locales installed on the system?\n- Are there environment variables that exist in `.env.example` but not in `.env`?\n- Are there any migrations that need to be run?\n- Is the storage directory linked?\n- Can Redis be accessed?\n\n### Development environment checks\n\n- Is the configuration not cached?\n- Are the routes not cached?\n- Are there environment variables that exist in `.env` but not in `.env.example`?\n\n### Production environment checks\n\n- Is the configuration cached?\n- Are the routes cached?\n- Is the xdebug PHP extension disabled?\n- Is APP_DEBUG set to false?\n- Are certain servers reachable?\n- Are certain supervisor programs running?\n\n## Installation\n\nYou can install the package via composer:\n\n```bash\ncomposer require beyondcode/laravel-self-diagnosis\n```\n\n## Usage\n\nJust call the artisan command to start the checks:\n\n```bash\nphp artisan self-diagnosis\n```\n\n### Customization\n\nYou can publish the configuration file, that contains all available checks using:\n\n```bash\nphp artisan vendor:publish --provider=BeyondCode\\\\SelfDiagnosis\\\\SelfDiagnosisServiceProvider\n```\n\nThis will publish a `self-diagnosis.php` file in your `config` folder. This file contains all the checks that will be performed on your application.\n\n```php\n<?php\n\nreturn [\n\n    /*\n     * A list of environment aliases mapped to the actual environment configuration.\n     */\n    'environment_aliases' => [\n        'prod' => 'production',\n        'live' => 'production',\n        'local' => 'development',\n    ],\n\n    /*\n     * Common checks that will be performed on all environments.\n     */\n    'checks' => [\n        \\BeyondCode\\SelfDiagnosis\\Checks\\AppKeyIsSet::class,\n        \\BeyondCode\\SelfDiagnosis\\Checks\\CorrectPhpVersionIsInstalled::class,\n        \\BeyondCode\\SelfDiagnosis\\Checks\\DatabaseCanBeAccessed::class => [\n            'default_connection' => true,\n            'connections' => [],\n        ],\n        \\BeyondCode\\SelfDiagnosis\\Checks\\DirectoriesHaveCorrectPermissions::class => [\n            'directories' => [\n                storage_path(),\n                base_path('bootstrap/cache'),\n            ],\n        ],\n        \\BeyondCode\\SelfDiagnosis\\Checks\\EnvFileExists::class,\n        \\BeyondCode\\SelfDiagnosis\\Checks\\ExampleEnvironmentVariablesAreSet::class,\n        \\BeyondCode\\SelfDiagnosis\\Checks\\LocalesAreInstalled::class => [\n            'required_locales' => [\n                'en_US',\n                'en_US.utf8',\n            ],\n        ],\n        \\BeyondCode\\SelfDiagnosis\\Checks\\MaintenanceModeNotEnabled::class,\n        \\BeyondCode\\SelfDiagnosis\\Checks\\MigrationsAreUpToDate::class,\n        \\BeyondCode\\SelfDiagnosis\\Checks\\PhpExtensionsAreInstalled::class => [\n            'extensions' => [\n                'openssl',\n                'PDO',\n                'mbstring',\n                'tokenizer',\n                'xml',\n                'ctype',\n                'json',\n            ],\n            'include_composer_extensions' => true,\n        ],\n        \\BeyondCode\\SelfDiagnosis\\Checks\\StorageDirectoryIsLinked::class,\n    ],\n\n    /*\n     * Environment specific checks that will only be performed for the corresponding environment.\n     */\n    'environment_checks' => [\n        'development' => [\n            \\BeyondCode\\SelfDiagnosis\\Checks\\ComposerWithDevDependenciesIsUpToDate::class => [\n                'additional_options' => '--ignore-platform-reqs',\n            ],\n            \\BeyondCode\\SelfDiagnosis\\Checks\\ConfigurationIsNotCached::class,\n            \\BeyondCode\\SelfDiagnosis\\Checks\\RoutesAreNotCached::class,\n        ],\n        'production' => [\n            \\BeyondCode\\SelfDiagnosis\\Checks\\ComposerWithoutDevDependenciesIsUpToDate::class => [\n                'additional_options' => '--ignore-platform-reqs',\n            ],\n            \\BeyondCode\\SelfDiagnosis\\Checks\\ConfigurationIsCached::class,\n            \\BeyondCode\\SelfDiagnosis\\Checks\\DebugModeIsNotEnabled::class,\n            \\BeyondCode\\SelfDiagnosis\\Checks\\PhpExtensionsAreDisabled::class => [\n                'extensions' => [\n                    'xdebug',\n                ],\n            ],\n            \\BeyondCode\\SelfDiagnosis\\Checks\\RedisCanBeAccessed::class => [\n                'default_connection' => true,\n                'connections' => [],\n            ],\n            \\BeyondCode\\SelfDiagnosis\\Checks\\RoutesAreCached::class,\n            \\BeyondCode\\SelfDiagnosis\\Checks\\ServersArePingable::class => [\n                'servers' => [\n                    'www.google.com',\n                    ['host' => 'www.google.com', 'port' => 8080],\n                    '8.8.8.8',\n                    ['host' => '8.8.8.8', 'port' => 8080, 'timeout' => 5],\n                ],\n            ],\n            \\BeyondCode\\SelfDiagnosis\\Checks\\SupervisorProgramsAreRunning::class => [\n                'programs' => [\n                    'horizon',\n                ],\n                'restarted_within' => 300, // max seconds since last restart, 0 to disable check\n            ],\n        ],\n    ],\n\n];\n```\n\n#### Available Configuration Options\n\nThe following options are available for the individual checks:\n\n- [`BeyondCode\\SelfDiagnosis\\Checks\\ComposerWithDevDependenciesIsUpToDate`](src/Checks/ComposerWithDevDependenciesIsUpToDate.php)\n  - **additional_options** *(string, optional parameters like `'--ignore-platform-reqs'`)*: optional arguments for composer\n- [`BeyondCode\\SelfDiagnosis\\Checks\\ComposerWithoutDevDependenciesIsUpToDate`](src/Checks/ComposerWithoutDevDependenciesIsUpToDate.php)\n  - **additional_options** *(string, optional parameters like `'--ignore-platform-reqs'`)*: optional arguments for composer\n- [`BeyondCode\\SelfDiagnosis\\Checks\\DatabaseCanBeAccessed`](src/Checks/DatabaseCanBeAccessed.php)\n  - **default_connection** *(boolean, default: `true`)*: if the default connection should be checked\n  - **connections** *(array, list of connection names like `['mysql', 'sqlsrv']`, default: `[]`)*: additional connections to check\n- [`BeyondCode\\SelfDiagnosis\\Checks\\DirectoriesHaveCorrectPermissions`](src/Checks/DirectoriesHaveCorrectPermissions.php)\n  - **directories** *(array, list of directory paths like `[storage_path(), base_path('bootstrap/cache')]`, default: `[]`)*: directories to check\n- [`BeyondCode\\SelfDiagnosis\\Checks\\LocalesAreInstalled`](src/Checks/LocalesAreInstalled.php)\n  - **required_locales** *(array, list of locales like `['en_US', 'en_US.utf8']`, default: `[]`)*: locales to check\n- [`BeyondCode\\SelfDiagnosis\\Checks\\PhpExtensionsAreDisabled`](src/Checks/PhpExtensionsAreDisabled.php)\n  - **extensions** *(array, list of extension names like `['xdebug', 'zlib']`, default: `[]`)*: extensions to check\n- [`BeyondCode\\SelfDiagnosis\\Checks\\PhpExtensionsAreInstalled`](src/Checks/PhpExtensionsAreInstalled.php)\n  - **extensions** *(array, list of extension names like `['openssl', 'PDO']`, default: `[]`)*: extensions to check\n  - **include_composer_extensions** *(boolean, default: `false`)*: if required extensions defined in `composer.json` should be checked\n- [`BeyondCode\\SelfDiagnosis\\Checks\\RedisCanBeAccessed`](src/Checks/RedisCanBeAccessed.php)\n  - **default_connection** *(boolean, default: `true`)*: if the default connection should be checked\n  - **connections** *(array, list of connection names like `['cache_1', 'cache_2']`, default: `[]`)*: additional connections to check\n- [`BeyondCode\\SelfDiagnosis\\Checks\\SupervisorProgramsAreRunning`](src/Checks/SupervisorProgramsAreRunning.php)\n  - **programs** *(array, list of programs like `['horizon', 'another-program']`, default: `[]`)*: programs that are required to be running\n  - **restarted_within** *(integer, max allowed seconds since last restart of programs (`0` = disabled), default: `0`)*: verifies that programs have been restarted recently to grab code updates\n- [`BeyondCode\\SelfDiagnosis\\Checks\\ServersArePingable`](src/Checks/ServersArePingable.php)\n  - **servers** *(array, list of servers and parameters like `['google.com', ['host' => 'google.com', 'port' => 8080]]`)*: servers to ping\n\n### Custom Checks\n\nYou can create custom checks, by implementing the [`BeyondCode\\SelfDiagnosis\\Checks\\Check`](src/Checks/Check.php) interface and adding the class to the config file.\nLike this:\n\n```php\n<?php\n\nuse BeyondCode\\SelfDiagnosis\\Checks\\Check;\n\nclass MyCustomCheck implements Check\n{\n    /**\n     * The name of the check.\n     *\n     * @param array $config\n     * @return string\n     */\n    public function name(array $config): string\n    {\n        return 'My custom check.';\n    }\n\n    /**\n     * Perform the actual verification of this check.\n     *\n     * @param array $config\n     * @return bool\n     */\n    public function check(array $config): bool\n    {\n        return true;\n    }\n\n    /**\n     * The error message to display in case the check does not pass.\n     *\n     * @param array $config\n     * @return string\n     */\n    public function message(array $config): string\n    {\n        return 'This is the error message that users see if \"check\" returns false.';\n    }\n}\n```\n\n\n### Example Output\n\n\n![Some Checks failed](https://beyondco.de/github/self-diagnosis/checks_red.png)\n\n### Testing\n\n``` bash\ncomposer test\n```\n\n### Changelog\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information what has changed recently.\n\n## Contributing\n\nPlease see [CONTRIBUTING](CONTRIBUTING.md) for details.\n\n### Security\n\nIf you discover any security related issues, please email marcel@beyondco.de instead of using the issue tracker.\n\n## Credits\n\n- [Marcel Pociot](https://github.com/mpociot)\n- [All Contributors](../../contributors)\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.509765625,
          "content": "{\n    \"name\": \"beyondcode/laravel-self-diagnosis\",\n    \"description\": \"Perform various self diagnosis tests on your Laravel application.\",\n    \"keywords\": [\n        \"beyondcode\",\n        \"laravel-self-diagnosis\"\n    ],\n    \"homepage\": \"https://github.com/beyondcode/laravel-self-diagnosis\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Marcel Pociot\",\n            \"email\": \"marcel@beyondco.de\",\n            \"homepage\": \"https://beyondcode.de\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.2\",\n        \"composer/semver\": \"^1.4|^3.0\",\n        \"geerlingguy/ping\": \"^1.1\",\n        \"illuminate/support\": \"^9.0|^10.0|^11.0\",\n        \"vlucas/phpdotenv\": \"^5.0\"\n    },\n    \"require-dev\": {\n        \"larapack/dd\": \"^1.0\",\n        \"mockery/mockery\": \"^1.0\",\n        \"orchestra/testbench\": \"^7.0|^8.0\",\n        \"phpunit/phpunit\": \"^9.5.10\",\n        \"predis/predis\": \"^1.1\",\n        \"scrutinizer/ocular\": \"^1.5\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"BeyondCode\\\\SelfDiagnosis\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"BeyondCode\\\\SelfDiagnosis\\\\Tests\\\\\": \"tests\"\n        }\n    },\n    \"scripts\": {\n        \"test\": \"vendor/bin/phpunit\",\n        \"test-coverage\": \"vendor/bin/phpunit --coverage-html coverage\"\n    },\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"extra\": {\n        \"laravel\": {\n            \"providers\": [\n                \"BeyondCode\\\\SelfDiagnosis\\\\SelfDiagnosisServiceProvider\"\n            ]\n        }\n    }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.6875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" bootstrap=\"vendor/autoload.php\" backupGlobals=\"false\" colors=\"true\" processIsolation=\"false\" stopOnFailure=\"false\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.4/phpunit.xsd\">\n  <coverage>\n    <report>\n      <clover outputFile=\"build/logs/clover.xml\"/>\n      <html outputDirectory=\"build/coverage\"/>\n      <text outputFile=\"build/coverage.txt\"/>\n    </report>\n  </coverage>\n  <testsuites>\n    <testsuite name=\"BeyondCode Test Suite\">\n      <directory>tests</directory>\n    </testsuite>\n  </testsuites>\n  <logging>\n    <junit outputFile=\"build/report.junit.xml\"/>\n  </logging>\n</phpunit>\n"
        },
        {
          "name": "phpunit.xml.dist.bak",
          "type": "blob",
          "size": 0.982421875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit bootstrap=\"vendor/autoload.php\"\n         backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         colors=\"true\"\n         verbose=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\">\n    <testsuites>\n        <testsuite name=\"BeyondCode Test Suite\">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist>\n            <directory suffix=\".php\">src/</directory>\n        </whitelist>\n    </filter>\n    <logging>\n        <log type=\"tap\" target=\"build/report.tap\"/>\n        <log type=\"junit\" target=\"build/report.junit.xml\"/>\n        <log type=\"coverage-html\" target=\"build/coverage\"/>\n        <log type=\"coverage-text\" target=\"build/coverage.txt\"/>\n        <log type=\"coverage-clover\" target=\"build/logs/clover.xml\"/>\n    </logging>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "translations",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}