{
  "metadata": {
    "timestamp": 1736712228566,
    "page": 954,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "spatie/laravel-mail-preview",
      "stars": 1197,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.21484375,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4521484375,
          "content": "# Path-based git attributes\n# https://www.kernel.org/pub/software/scm/git/docs/gitattributes.html\n\n# Ignore all test and documentation with \"export-ignore\".\n/.github            export-ignore\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/phpunit.xml.dist   export-ignore\n/tests              export-ignore\n/.editorconfig      export-ignore\n/.php_cs.dist       export-ignore\n/psalm.xml          export-ignore\n/psalm.xml.dist     export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1396484375,
          "content": ".idea\n.php_cs\n.php_cs.cache\n.phpunit.result.cache\nbuild\ncomposer.lock\ncoverage\nphpunit.xml\npsalm.xml\nvendor\n.php-cs-fixer.cache\n.phpunit.cache\n"
        },
        {
          "name": ".php_cs.dist.php",
          "type": "blob",
          "size": 1.251953125,
          "content": "<?php\n\n$finder = Symfony\\Component\\Finder\\Finder::create()\n    ->in([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->name('*.php')\n    ->notName('*.blade.php')\n    ->ignoreDotFiles(true)\n    ->ignoreVCS(true);\n\nreturn (new PhpCsFixer\\Config())\n    ->setRules([\n        '@PSR12' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'ordered_imports' => ['sort_algorithm' => 'alpha'],\n        'no_unused_imports' => true,\n        'not_operator_with_successor_space' => true,\n        'trailing_comma_in_multiline' => true,\n        'phpdoc_scalar' => true,\n        'unary_operator_spaces' => true,\n        'binary_operator_spaces' => true,\n        'blank_line_before_statement' => [\n            'statements' => ['break', 'continue', 'declare', 'return', 'throw', 'try'],\n        ],\n        'phpdoc_single_line_var_spacing' => true,\n        'phpdoc_var_without_name' => true,\n        'class_attributes_separation' => [\n            'elements' => [\n                'method' => 'one',\n            ],\n        ],\n        'method_argument_space' => [\n            'on_multiline' => 'ensure_fully_multiline',\n            'keep_multiple_spaces_after_comma' => true,\n        ],\n        'single_trait_insert_per_statement' => true,\n    ])\n    ->setFinder($finder);\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.076171875,
          "content": "# Changelog\n\nAll notable changes to `laravel-mail-preview` will be documented in this file.\n\n## 6.2.0 - 2024-04-22\n\n### What's Changed\n\n* Convert symfony Addresses to jsonable email adresses for the .html preview by @rudiedirkx in https://github.com/spatie/laravel-mail-preview/pull/104\n\n### New Contributors\n\n* @rudiedirkx made their first contribution in https://github.com/spatie/laravel-mail-preview/pull/104\n\n**Full Changelog**: https://github.com/spatie/laravel-mail-preview/compare/6.1.0...6.2.0\n\n## v4.0.1 - 2024-04-08\n\n### What's Changed\n\n* Convert symfony Addresses to jsonable email adresses for the .html preview by @rudiedirkx in https://github.com/spatie/laravel-mail-preview/pull/104\n\n### New Contributors\n\n* @rudiedirkx made their first contribution in https://github.com/spatie/laravel-mail-preview/pull/104\n\n**Full Changelog**: https://github.com/spatie/laravel-mail-preview/compare/6.1.0...v4.0.1\n\n## 6.1.0 - 2024-03-08\n\n### What's Changed\n\n* Laravel 11.x Compatibility by @laravel-shift in https://github.com/spatie/laravel-mail-preview/pull/103\n* Allow to change default filename date format by @ekateiva in https://github.com/spatie/laravel-mail-preview/pull/102\n\n### New Contributors\n\n* @laravel-shift made their first contribution in https://github.com/spatie/laravel-mail-preview/pull/103\n* @ekateiva made their first contribution in https://github.com/spatie/laravel-mail-preview/pull/102\n\n**Full Changelog**: https://github.com/spatie/laravel-mail-preview/compare/6.0.6...6.1.0\n\n## 6.0.6 - 2023-09-14\n\n### What's Changed\n\n- Add default by @dododedodonl in https://github.com/spatie/laravel-mail-preview/pull/100\n\n### New Contributors\n\n- @dododedodonl made their first contribution in https://github.com/spatie/laravel-mail-preview/pull/100\n\n**Full Changelog**: https://github.com/spatie/laravel-mail-preview/compare/6.0.5...6.0.6\n\n## 6.0.5 - 2023-01-25\n\n- support L10\n\n**Full Changelog**: https://github.com/spatie/laravel-mail-preview/compare/6.0.4...6.0.5\n\n## 6.0.4 - 2022-09-01\n\n### What's Changed\n\n- Prevent closePopup from running immediately by @mrk-j in https://github.com/spatie/laravel-mail-preview/pull/98\n\n**Full Changelog**: https://github.com/spatie/laravel-mail-preview/compare/6.0.3...6.0.4\n\n## 6.0.3 - 2022-08-19\n\n### What's Changed\n\n- fix: make setTimeoutInSeconds works by @bernardo-campos in https://github.com/spatie/laravel-mail-preview/pull/97\n\n### New Contributors\n\n- @bernardo-campos made their first contribution in https://github.com/spatie/laravel-mail-preview/pull/97\n\n**Full Changelog**: https://github.com/spatie/laravel-mail-preview/compare/6.0.2...6.0.3\n\n## 6.0.2 - 2022-05-30\n\n### What's Changed\n\n- Run parent transport constructor by @mrk-j in https://github.com/spatie/laravel-mail-preview/pull/83\n\n**Full Changelog**: https://github.com/spatie/laravel-mail-preview/compare/6.0.1...6.0.2\n\n## 6.0.1 - 2022-03-02\n\n## What's Changed\n\n- Fix wrong class in readme.md by @spoyntersmith in https://github.com/spatie/laravel-mail-preview/pull/80\n- Fix HTML preview for Laravel 9 by @mrk-j in https://github.com/spatie/laravel-mail-preview/pull/82\n\n## New Contributors\n\n- @spoyntersmith made their first contribution in https://github.com/spatie/laravel-mail-preview/pull/80\n\n**Full Changelog**: https://github.com/spatie/laravel-mail-preview/compare/6.0.0...6.0.1\n\n## 6.0.0 - 2022-01-13\n\n- add support for Laravel 9\n- drop support for Laravel 8\n\n## 5.2.0 - 2021-04-01\n\n- add `assertNothingSent`\n\n## 5.1.4 - 2021-03-12\n\n- MailManager extension in afterResolving() for better service ordering (#73)\n\n## 5.1.3 - 2021-02-15\n\n- remove stray ray calls\n\n## 5.1.2 - 2021-02-15\n\n- fix missing return in bodyContains and two minor fixes (#64)\n\n## 5.1.1 - 2021-02-07\n\n- style update\n\n## 5.1.0 - 2021-02-07\n\n- add assertion methods\n- add open eml version to overlay\n\n## 5.0.4 - 2021-01-28\n\n- allow to dynamically switch storage path\n\n## 5.0.3 - 2021-01-28\n\n- fix displaying mails\n\n## 5.0.2 - 2021-01-28\n\n- add `enabled` option\n\n## 5.0.1 - 2021-01-28\n\n- fix middleware name\n\n## 5.0.0 - 2021-01-28\n\n- rewrite of the package to modern standards\n\n## 4.0.1 - 2021-01-27\n\n- first release after transfer from themsaid/laravel-mail-preview\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0927734375,
          "content": "# The MIT License (MIT)\n\nCopyright (c) Spatie <info@spatie.be>\n\n> Permission is hereby granted, free of charge, to any person obtaining a copy\n> of this software and associated documentation files (the \"Software\"), to deal\n> in the Software without restriction, including without limitation the rights\n> to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n> copies of the Software, and to permit persons to whom the Software is\n> furnished to do so, subject to the following conditions:\n>\n> The above copyright notice and this permission notice shall be included in\n> all copies or substantial portions of the Software.\n>\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n> FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n> AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n> LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n> OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n> THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.3994140625,
          "content": "\n# A mail driver to quickly preview mail\n\n[![Latest Version on Packagist](https://img.shields.io/packagist/v/spatie/laravel-mail-preview.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-mail-preview)\n[![run-tests](https://github.com/spatie/laravel-mail-preview/actions/workflows/run-tests.yml/badge.svg)](https://github.com/spatie/laravel-mail-preview/actions/workflows/run-tests.yml)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE.md)\n[![Total Downloads](https://img.shields.io/packagist/dt/spatie/laravel-mail-preview.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-mail-preview)\n\nThis package can display a small overlay whenever a mail is sent. The overlay contains a link to the mail that was just sent.\n\n<img alt=\"screenshot\" src=\"https://github.com/spatie/laravel-mail-preview/blob/main/docs/images/overlay.png?raw=true\" width=\"400\" />\n\nThis can be handy when testing out emails in a local environment. \n\n## Support us\n\n[<img src=\"https://github-ads.s3.eu-central-1.amazonaws.com/laravel-mail-preview.jpg?t=1\" width=\"419px\" />](https://spatie.be/github-ad-click/laravel-mail-preview)\n\nWe invest a lot of resources into creating [best in class open source packages](https://spatie.be/open-source). You can support us by [buying one of our paid products](https://spatie.be/open-source/support-us).\n\nWe highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using. You'll find our address on [our contact page](https://spatie.be/about-us). We publish all received postcards on [our virtual postcard wall](https://spatie.be/open-source/postcards).\n\n## Installation\n\nYou can install the package via composer:\n\n```bash\ncomposer require spatie/laravel-mail-preview\n```\n\n### Configuring the mail transport\n\nThis package contains a mail transport called `preview`. We recommend to only use this transport in non-production environments. To use the `preview` transport, change the `mailers.smtp.transport` to `preview` in your `config/mail.php` file:\n\n```php\n// in config/mail.php\n\n'mailers' => [\n    'smtp' => [\n        'transport' => 'preview',\n        // ...\n    ],\n    // ...\n],\n```\n\n### Registering the preview middleware route\n\nThe package can display a link to sent mails whenever they are sent. To use this feature, you must add the `Spatie\\MailPreview\\Http\\Middleware\\AddMailPreviewOverlayToResponse` middleware to the `web` middleware group in your kernel.\n\n```php\n// in app/Http/Kernel.php\n\nprotected $middlewareGroups = [\n    'web' => [\n        // other middleware\n        \n        \\Spatie\\MailPreview\\Http\\Middleware\\AddMailPreviewOverlayToResponse::class,\n    ],\n    \n    // ...\n];\n```\n\nYou must also add the `mailPreview` to your routes file. Typically, the routes file will be located at `routes/web.php`.\n\n```php\n// in routes/web.php\n\nRoute::mailPreview();\n```\n\nThis will register a route to display sent mails at `/spatie-mail-preview`. To customize the URL, pass the URL you want to the macro.\n\n```php\nRoute::mailPreview('custom-url-where-sent-mails-will-be-shown');\n```\n\n### Publishing the config file\n\nOptionally, you can publish the config file with:\n\n```bash\nphp artisan vendor:publish --provider=\"Spatie\\MailPreview\\MailPreviewServiceProvider\" --tag=\"mail-preview-config\"\n```\n\nThis is the content of the config file that will be published at `config/mail-preview.php`:\n\n```php\nreturn [\n    /*\n     * By default, the overlay will only be shown and mail will only be stored\n     * when the application is in debug mode.\n     */\n    'enabled' => env('APP_DEBUG', false),\n\n    /*\n     * All mails will be stored in the given directory.\n     */\n    'storage_path' => storage_path('email-previews'),\n\n    /*\n     * This option determines how long generated preview files will be kept.\n     */\n    'maximum_lifetime_in_seconds' => 60,\n\n    /*\n     * When enabled, a link to mail will be added to the response\n     * every time a mail is sent.\n     */\n    'show_link_to_preview' => true,\n\n    /*\n     * Determines how long the preview pop up should remain visible.\n     *\n     * Set this to `false` if the popup should stay visible.\n     */\n    'popup_timeout_in_seconds' => 8,\n    \n    /**\n     * Determines the date format used for the file names.\n     *\n     * The default 'u' stands for microseconds.\n     */\n    'filename_date_format' => 'u',\n];\n\n```\n\n### Publishing the views\n\nOptionally, you can publish the views that render the preview overlay and the mail itself.\n\n```bash\nphp artisan vendor:publish --provider=\"Spatie\\MailPreview\\MailPreviewServiceProvider\" --tag=\"mail-preview-views\"\n```\n\nYou can modify the views that will be published at `resources/views/vendor/mail-preview` to your liking.\n\n## Usage\n\nEverytime an email is sent, an `.html` and `.eml` file will be saved in the directory specified in the `storage_path` of the `mail-preview` config file.  The name includes the first recipient and the subject:\n\n```\n1457904864_john_at_example_com_invoice_000234.html\n1457904864_john_at_example_com_invoice_000234.eml\n```\n\nYou can open the `.html` file in a web browser.  The `.eml` file in your default email client to have a realistic look\nof the final output.\n\n### Preview in a web browser\n\nWhen you open the `.html` file in a web browser you'll be able to see how your email will look.\n\nAt the beginning of the generated file you'll find an HTML comment with all the message info:\n\n```html\n<!--\nFrom:{\"info@acme.com\":\"Acme HQ\"},\nto:{\"jack@gmail.com\":\"Jack Black\"},\nreply-to:{\"info@acme.com\"},\ncc:[{\"finance@acme.com\":\"Acme Finance\"}, {\"management@acme.com\":\"Acme Management\"}],\nbcc:null,\nsubject:Invoice #000234\n-->\n```\n\n### Events\n\nWhenever a mail is stored on disk, the `Spatie\\MailPreview\\Events\\MailStoredEvent` will be fired. It has three public properties:\n\n- `message`: an instance of `Swift_Mime_SimpleMessage`\n- `pathToHtmlVersion`: the path to the html version of the sent mail\n- `pathToEmlVersion`: the path to the email version of the sent mail\n\n### Making assertions against sent mails\n\nCurrently, using Laravel's `Mail::fake` you cannot make any assertions against the content of a mail, as the using the fake will not render the mail. \n\nThe `SentMails` facade provided this package does allow you to make asserts against the content.\n\nThis allows you to make assertions on the content of a mail, without having the mailable in scope.\n\n```php\n// in a test\n\nArtisan::call(CommandThatSendsMail::class);\n\nSpatie\\MailPreview\\Facades\\SentMails::assertLastContains('something in your mail');\n```\n\nLet's explain other available assertions method using this mailable as example.\n\n```php\nnamespace App\\Mail;\n\nuse Illuminate\\Mail\\Mailable;\n\nclass MyNewSongMailable extends Mailable\n{\n    public function build()\n    {\n        $this\n            ->to('ringo@example.com')\n            ->cc('paul@examle.com')\n            ->bcc('john@examle.com')\n            ->subject('Here comes the sun')\n            ->html(\"It's been a long cold lonely winter\");\n    }\n}\n```\n\nIn your code you can send that mailable with:\n\n```php\nMail::send(new MyNewSongMailable());\n```\n\nIn your tests you can assert that the mail was sent using the `assertSent` function. You should pass a callable to `assertSent` which will get an instance of `SentMail` to it. Each sent mail will be passed to the callable. If the callable returns `true` the assertions passes.\n\n```php\nuse Spatie\\MailPreview\\Facades\\SentMails;\nuse \\Spatie\\MailPreview\\SentMails\\SentMail;\n\nSentMails::assertSent(fn (SentMail $mail) => $mail->bodyContains('winter')); // will pass\nSentMails::assertSent(fn (SentMail $mail) => $mail->bodyContains('spring')); // will not pass\n```\n\nYou can use as many assertion methods on the `SentMail` as you like.\n\n```php\nSentMails::assertSent(function (SentMail $mail)  {\n    return\n        $mail->subjectContains('sun') &&\n        $mail->hasTo('ringo@example.com')\n        $mail->bodyContains('winter');\n```\n\nThe `Spatie\\MailPreview\\Facades\\SentMails` has the following assertions methods:\n\n- `assertCount(int $expectedCount)`: assert how many mails were sent\n- `assertLastContains(string $expectedSubstring)`: assert that the body of the last sent mail contains a given substring\n- `assertSent($findMailCallable, int $expectedCount = 1)`: explained above\n- `assertTimesSent(int $expectedCount, Closure $findMail)`\n- `assertNotSent(Closure $findMail)`\n\nAdditionally, the `Spatie\\MailPreview\\Facades\\SentMails` has these methods:\n\n- `all`: returns an array of sent mails. Each item will be an instance of  `sentMail`\n- `count()`: returns the amount of mails sent\n- `last`: returns an instance of `SentMail` for the last sent mail. If no mail was sent `null` will be returned.\n- `lastContains`: returns `true` if the body of the last sent mail contains the given substring\n- `timesSent($findMailCallable)`: returns the amount of mails the were sent and that passed the given callable\n\nThe `sentMail` class provides these assertions:\n\n- `assertSubjectContains($expectedSubstring)`\n- `assertFrom($expectedAddress)`\n- `assertTo$expectedAddress)`\n- `assertCc($expectedAddress)`\n- `assertBcc($expectedAddress)`\n- `assertContains($substring)`: will pass if the body of the mail contains the substring\n\nAdditionally, `sentMail` contains these methods:\n\n- `subject()`: return the body of a mail\n- `to()`: returns all to recipients as an array\n- `cc()`: returns all cc recipients as an array\n- `bcc()`: returns all bcc recipients as an array\n- `body()`: returns the body of a mail\n- `subjectContains)`: returns a boolean\n- `hasFrom($expectedAddress)`: return a boolean\n- `hasTo($expectedAddress)`: return a boolean\n- `hasCc($expectedAddress)`: return a boolean\n- `hasBcc($expectedAddress)`: return a boolean\n\n## Changelog\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information on what has changed recently.\n\n## UPGRADING\n\nPlease see [UPGRADING](UPGRADING.md) for what to do to switch over from `themsaid/laravel-mail-preview`, and how to upgrade to newer major versions.\n\n## Contributing\n\nPlease see [CONTRIBUTING](https://github.com/spatie/.github/blob/main/CONTRIBUTING.md) for details.\n\n## Security Vulnerabilities\n\nPlease review [our security policy](../../security/policy) on how to report security vulnerabilities.\n\n## Credits\n\n- [Freek Van der Herten](https://github.com/freekmurze)\n- [Mohamed Said](https://github.com/themsaid)\n- [All Contributors](../../contributors)\n\nThe initial version of this package was created by Mohamed Said, who graciously entrusted this package to us at Spatie.\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n"
        },
        {
          "name": "UPGRADING.md",
          "type": "blob",
          "size": 0.4853515625,
          "content": "## From v4 to v5\n\nv5 is a rewrite of the package. We recommend uninstalling v4, and following the installation instructions of v5. We estimate that this will take you only a couple of minutes.\n\n## Coming from themsaid/laravel-mail-preview\n\nIf you were using `themsaid/laravel-mail-preview` previously, you can use `v4` of this package which is 100% compatible with `themsaid/laravel-mail-preview`. Just change the package in your `composer.json` to\n\n```\n\"spatie/laravel-mail-preview\": \"^4.0\",\n```\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.5224609375,
          "content": "{\n    \"name\": \"spatie/laravel-mail-preview\",\n    \"description\": \"A mail driver to quickly preview mail\",\n    \"keywords\": [\n        \"laravel\",\n        \"mail\"\n    ],\n    \"homepage\": \"https://github.com/themsaid/laravel-preview-mail-driver\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Freek Van der Herten\",\n            \"email\": \"freek@spatie.be\"\n        },\n        {\n            \"name\": \"Mohamed Said\",\n            \"email\": \"themsaid@gmail.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.2\",\n        \"illuminate/filesystem\": \"^10.0|^11.0\",\n        \"illuminate/mail\": \"^10.0|^11.0\",\n        \"illuminate/support\": \"^10.0|^11.0\",\n        \"spatie/laravel-package-tools\": \"^1.11\"\n    },\n    \"require-dev\": {\n        \"orchestra/testbench\": \"^8.0|^9.0\",\n        \"spatie/ray\": \"^1.27\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Spatie\\\\MailPreview\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Spatie\\\\MailPreview\\\\Tests\\\\\": \"tests\"\n        }\n    },\n    \"extra\": {\n        \"laravel\": {\n            \"providers\": [\n                \"Spatie\\\\MailPreview\\\\MailPreviewServiceProvider\"\n            ],\n            \"aliases\": {\n                \"sentMails\": \"Spatie\\\\MailPreview\\\\Facades\\\\SentMails\"\n            }\n        }\n    },\n    \"scripts\": {\n        \"test\": \"vendor/bin/phpunit --colors=always\",\n        \"test-coverage\": \"vendor/bin/phpunit --coverage-html coverage\"\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"config\": {\n        \"sort-packages\": true\n    }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.5703125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" bootstrap=\"vendor/autoload.php\" backupGlobals=\"false\" colors=\"true\" processIsolation=\"false\" stopOnFailure=\"false\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.5/phpunit.xsd\" cacheDirectory=\".phpunit.cache\" backupStaticProperties=\"false\">\n  <testsuites>\n    <testsuite name=\"Test Suite\">\n      <directory>tests</directory>\n    </testsuite>\n  </testsuites>\n  <source>\n    <include>\n      <directory suffix=\".php\">src/</directory>\n    </include>\n  </source>\n</phpunit>\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}