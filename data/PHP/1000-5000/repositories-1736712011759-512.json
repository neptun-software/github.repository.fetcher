{
  "metadata": {
    "timestamp": 1736712011759,
    "page": 512,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mewebstudio/Purifier",
      "stars": 1894,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1689453125,
          "content": "* text=auto\n\n/tests export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/.travis.yml export-ignore\n/phpunit.xml.dist export-ignore\n/README.md export-ignore"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.185546875,
          "content": "/bootstrap/compiled.php\n.env.*.php\n.env.php\ncomposer.lock\nvendor\n/.idea\n/.settings\n\n# Homestead & vagrant\n/.vagrant\nVagrantfile\nHomestead.yaml\nafter.sh\naliases\n\n# Tests\n.phpunit.result.cache"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.623046875,
          "content": "language: php\n\nphp:\n  - 7.2\n  - 7.3\n  - 7.4\n  - 8.0\n  - nightly\n\nmatrix:\n    fast_finish: true\n    allow_failures:\n        - php: nightly\n\n# This triggers builds to run on the new TravisCI infrastructure.\n# See: http://docs.travis-ci.com/user/workers/container-based-infrastructure/\nsudo: false\n\n## Cache composer\ncache:\n  directories:\n    - $HOME/.composer/cache\n\nbefore_script:\n  - travis_retry composer self-update\n  - COMPOSER_MEMORY_LIMIT=-1 travis_retry composer install --prefer-source --no-interaction --dev\n\nscript:\n  - vendor/bin/phpunit --coverage-clover=coverage.xml\n\nafter_script:\n  - bash <(curl -s https://codecov.io/bash)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0703125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 MeWebStudio - Muharrem ERÄ°N\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.296875,
          "content": "# HTMLPurifier for Laravel 5/6/7/8/9/10/11\n\n[![Build Status](https://travis-ci.org/mewebstudio/Purifier.svg?branch=master)](https://travis-ci.org/github/mewebstudio/Purifier)\n[![codecov](https://codecov.io/gh/mewebstudio/Purifier/branch/master/graph/badge.svg)](https://codecov.io/gh/mewebstudio/Purifier)\n[![Latest Stable Version](https://poser.pugx.org/mews/Purifier/v/stable.svg)](https://packagist.org/packages/mews/Purifier)\n[![Latest Unstable Version](https://poser.pugx.org/mews/Purifier/v/unstable.svg)](https://packagist.org/packages/mews/Purifier)\n[![License](https://poser.pugx.org/mews/Purifier/license.svg)](https://packagist.org/packages/mews/Purifier)\n[![Total Downloads](https://poser.pugx.org/mews/Purifier/downloads.svg)](https://packagist.org/packages/mews/Purifier)\n\nA simple [Laravel](http://www.laravel.com/) service provider for easily using [HTMLPurifier](http://htmlpurifier.org/) inside Laravel. From their website:\n\n> HTML Purifier is a standards-compliant HTML filter library written in PHP. HTML Purifier will not only remove all malicious code (better known as XSS) with a thoroughly audited, secure yet permissive whitelist, it will also make sure your documents are standards compliant, something only achievable with a comprehensive knowledge of W3C's specifications. Tired of using BBCode due to the current landscape of deficient or insecure HTML filters? Have a WYSIWYG editor but never been able to use it? Looking for high-quality, standards-compliant, open-source components for that application you're building? HTML Purifier is for you!\n\n## Installation\n\n### For Laravel 5.5+\n\nRequire this package with composer:\n```\ncomposer require mews/purifier\n```\n\nThe service provider will be auto-discovered. You do not need to add the provider anywhere. \n\n### For Laravel 5.0 to 5.4\n\nRequire this package with composer:\n```\ncomposer require mews/purifier\n```\n\nFind the `providers` key in `config/app.php` and register the HTMLPurifier Service Provider.\n\n```php\n    'providers' => [\n        // ...\n        Mews\\Purifier\\PurifierServiceProvider::class,\n    ]\n```\n\nFind the `aliases` key in `config/app.php` and register the Purifier alias.\n\n```php\n    'aliases' => [\n        // ...\n        'Purifier' => Mews\\Purifier\\Facades\\Purifier::class,\n    ]\n```\n\n### For Laravel 4\n\nCheck out [HTMLPurifier for Laravel 4](https://github.com/mewebstudio/Purifier/tree/master-l4)\n\n\n## Usage\n\n\nUse these methods inside your requests or middleware, wherever you need the HTML cleaned up:\n\n```php\nclean(Input::get('inputname'));\n```\nor\n\n```php\nPurifier::clean(Input::get('inputname'));\n```\n\ndynamic config\n```php\nclean('This is my H1 title', 'titles');\nclean('This is my H1 title', array('Attr.EnableID' => true));\n```\nor\n\n```php\nPurifier::clean('This is my H1 title', 'titles');\nPurifier::clean('This is my H1 title', array('Attr.EnableID' => true));\n```\n\nuse [URI filter](http://htmlpurifier.org/docs/enduser-uri-filter.html)\n\n```php\nPurifier::clean('This is my H1 title', 'titles', function (HTMLPurifier_Config $config) {\n    $uri = $config->getDefinition('URI');\n    $uri->addFilter(new HTMLPurifier_URIFilter_NameOfFilter(), $config);\n});\n```\n\nAlternatively, in Laravel 7+, if you're looking to clean your HTML inside your Eloquent models, you can use our custom casts:\n\n```php\n<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Mews\\Purifier\\Casts\\CleanHtml;\nuse Mews\\Purifier\\Casts\\CleanHtmlInput;\nuse Mews\\Purifier\\Casts\\CleanHtmlOutput;\n\nclass Monster extends Model\n{\n    protected $casts = [\n        'bio'            => CleanHtml::class, // cleans both when getting and setting the value\n        'description'    => CleanHtmlInput::class, // cleans when setting the value\n        'history'        => CleanHtmlOutput::class, // cleans when getting the value\n    ];\n}\n```\n\n## Configuration\n\nTo use your own settings, publish config.\n\n```\nphp artisan vendor:publish --provider=\"Mews\\Purifier\\PurifierServiceProvider\"\n```\n\nConfig file `config/purifier.php` should like this\n\n```php\n\nreturn [\n    'encoding'           => 'UTF-8',\n    'finalize'           => true,\n    'ignoreNonStrings'   => false,\n    'cachePath'          => storage_path('app/purifier'),\n    'cacheFileMode'      => 0755,\n    'settings'      => [\n        'default' => [\n            'HTML.Doctype'             => 'HTML 4.01 Transitional',\n            'HTML.Allowed'             => 'div,b,strong,i,em,u,a[href|title],ul,ol,li,p[style],br,span[style],img[width|height|alt|src]',\n            'CSS.AllowedProperties'    => 'font,font-size,font-weight,font-style,font-family,text-decoration,padding-left,color,background-color,text-align',\n            'AutoFormat.AutoParagraph' => true,\n            'AutoFormat.RemoveEmpty'   => true,\n        ],\n        'test'    => [\n            'Attr.EnableID' => 'true',\n        ],\n        \"youtube\" => [\n            \"HTML.SafeIframe\"      => 'true',\n            \"URI.SafeIframeRegexp\" => \"%^(http://|https://|//)(www.youtube.com/embed/|player.vimeo.com/video/)%\",\n        ],\n        'custom_definition' => [\n            'id'  => 'html5-definitions',\n            'rev' => 1,\n            'debug' => false,\n            'elements' => [\n                // http://developers.whatwg.org/sections.html\n                ['section', 'Block', 'Flow', 'Common'],\n                ['nav',     'Block', 'Flow', 'Common'],\n                ['article', 'Block', 'Flow', 'Common'],\n                ['aside',   'Block', 'Flow', 'Common'],\n                ['header',  'Block', 'Flow', 'Common'],\n                ['footer',  'Block', 'Flow', 'Common'],\n\t\t\t\t\n\t\t\t\t// Content model actually excludes several tags, not modelled here\n                ['address', 'Block', 'Flow', 'Common'],\n                ['hgroup', 'Block', 'Required: h1 | h2 | h3 | h4 | h5 | h6', 'Common'],\n\t\t\t\t\n\t\t\t\t// http://developers.whatwg.org/grouping-content.html\n                ['figure', 'Block', 'Optional: (figcaption, Flow) | (Flow, figcaption) | Flow', 'Common'],\n                ['figcaption', 'Inline', 'Flow', 'Common'],\n\t\t\t\t\n\t\t\t\t// http://developers.whatwg.org/the-video-element.html#the-video-element\n                ['video', 'Block', 'Optional: (source, Flow) | (Flow, source) | Flow', 'Common', [\n                    'src' => 'URI',\n\t\t\t\t\t'type' => 'Text',\n\t\t\t\t\t'width' => 'Length',\n\t\t\t\t\t'height' => 'Length',\n\t\t\t\t\t'poster' => 'URI',\n\t\t\t\t\t'preload' => 'Enum#auto,metadata,none',\n\t\t\t\t\t'controls' => 'Bool',\n                ]],\n                ['source', 'Block', 'Flow', 'Common', [\n\t\t\t\t\t'src' => 'URI',\n\t\t\t\t\t'type' => 'Text',\n                ]],\n\n\t\t\t\t// http://developers.whatwg.org/text-level-semantics.html\n                ['s',    'Inline', 'Inline', 'Common'],\n                ['var',  'Inline', 'Inline', 'Common'],\n                ['sub',  'Inline', 'Inline', 'Common'],\n                ['sup',  'Inline', 'Inline', 'Common'],\n                ['mark', 'Inline', 'Inline', 'Common'],\n                ['wbr',  'Inline', 'Empty', 'Core'],\n\t\t\t\t\n\t\t\t\t// http://developers.whatwg.org/edits.html\n                ['ins', 'Block', 'Flow', 'Common', ['cite' => 'URI', 'datetime' => 'CDATA']],\n                ['del', 'Block', 'Flow', 'Common', ['cite' => 'URI', 'datetime' => 'CDATA']],\n            ],\n            'attributes' => [\n                ['iframe', 'allowfullscreen', 'Bool'],\n                ['table', 'height', 'Text'],\n                ['td', 'border', 'Text'],\n                ['th', 'border', 'Text'],\n                ['tr', 'width', 'Text'],\n                ['tr', 'height', 'Text'],\n                ['tr', 'border', 'Text'],\n            ],\n        ],\n        'custom_attributes' => [\n            ['a', 'target', 'Enum#_blank,_self,_target,_top'],\n        ],\n        'custom_elements' => [\n            ['u', 'Inline', 'Inline', 'Common'],\n        ],\n    ],\n\n];\n```\n\n## Change log\n\nPlease see the [Github Releases Tab](https://github.com/mewebstudio/Purifier/releases) for more information on what has changed recently.\n\n## Security\n\nIf you discover any security related issues, please email [the author](mailto:me@mewebstudio.com) instead of using the issue tracker.\n\n## Credits\n\n- [HTMLPurifier.org](http://htmlpurifier.org/) - created the actual HTMLPurifier this package uses;\n- [Muharrem ERÄ°N](https://github.com/mewebstudio) - package author and maintainer;\n- [All Contributors](https://github.com/mewebstudio/Purifier/graphs/contributors)\n\n## License\n\nMIT. Please see the [license file](https://github.com/mewebstudio/Purifier/blob/master/LICENSE) for more information.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.7587890625,
          "content": "{\n    \"name\": \"mews/purifier\",\n    \"type\": \"package\",\n    \"description\": \"Laravel 5/6/7/8/9/10 HtmlPurifier Package\",\n    \"keywords\": [\n        \"Laravel HtmlPurifier\",\n        \"Laravel Purifier\",\n        \"Laravel Security\",\n        \"HtmlPurifier\",\n        \"Purifier\",\n        \"security\",\n        \"xss\"\n    ],\n    \"homepage\": \"https://github.com/mewebstudio/purifier\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Muharrem ERÄ°N\",\n            \"email\": \"me@mewebstudio.com\",\n            \"homepage\": \"https://github.com/mewebstudio\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^7.2|^8.0\",\n        \"illuminate/config\": \"^5.8|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n        \"illuminate/support\": \"^5.8|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n        \"illuminate/filesystem\": \"^5.8|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n        \"ezyang/htmlpurifier\": \"^4.16.0\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^8.0|^9.0|^10.0\",\n        \"mockery/mockery\": \"^1.3.3\",\n        \"graham-campbell/testbench\": \"^3.2|^5.5.1|^6.1\"\n    },\n    \"suggest\": {\n        \"laravel/framework\": \"To test the Laravel bindings\",\n        \"laravel/lumen-framework\": \"To test the Lumen bindings\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Mews\\\\Purifier\\\\\": \"src/\"\n        },\n        \"files\": [\n            \"src/helpers.php\"\n        ]\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Mews\\\\Tests\\\\Purifier\\\\\": \"tests/\"\n        }\n    },\n    \"extra\": {\n        \"laravel\": {\n            \"providers\": [\n                \"Mews\\\\Purifier\\\\PurifierServiceProvider\"\n            ],\n            \"aliases\": {\n                \"Purifier\": \"Mews\\\\Purifier\\\\Facades\\\\Purifier\"\n            }\n        }\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.9091796875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         beStrictAboutTestsThatDoNotTestAnything=\"true\"\n         beStrictAboutOutputDuringTests=\"true\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         failOnRisky=\"true\"\n         failOnWarning=\"true\"\n         processIsolation=\"false\"\n         stopOnError=\"false\"\n         stopOnFailure=\"false\"\n         verbose=\"true\"\n>\n    <testsuites>\n        <testsuite name=\"Laravel Purifier Test Suite\">\n            <directory suffix=\"Test.php\">./tests</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">./src</directory>\n        </whitelist>\n    </filter>\n</phpunit>"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.9091796875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         beStrictAboutTestsThatDoNotTestAnything=\"true\"\n         beStrictAboutOutputDuringTests=\"true\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         failOnRisky=\"true\"\n         failOnWarning=\"true\"\n         processIsolation=\"false\"\n         stopOnError=\"false\"\n         stopOnFailure=\"false\"\n         verbose=\"true\"\n>\n    <testsuites>\n        <testsuite name=\"Laravel Purifier Test Suite\">\n            <directory suffix=\"Test.php\">./tests</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">./src</directory>\n        </whitelist>\n    </filter>\n</phpunit>"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}