{
  "metadata": {
    "timestamp": 1736711964236,
    "page": 418,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "slimkit/plus",
      "stars": 2201,
      "defaultBranch": "2.4",
      "files": [
        {
          "name": ".babelrc",
          "type": "blob",
          "size": 0.0810546875,
          "content": "{\n  \"presets\": [\n    \"@vue/app\"\n  ],\n  \"plugins\": [\"transform-class-properties\"]\n}\n"
        },
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".codacy.yml",
          "type": "blob",
          "size": 0.2802734375,
          "content": "---\nexclude_paths:\n    - config\n    - database\n    - docs\n    - packages/*/assets\n    - packages/*/config\n    - packages/*/database\n    - packages/*/resources\n    - packages/*/routes\n    - packages/*/tests\n    - public\n    - resources\n    - routes\n    - storage\n    - tests\n    - vendor\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.033203125,
          "content": ".docker\n.git\n.github\nnode_modules\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2685546875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml}]\nindent_size = 2\n\n[*.{js,jsx,vue}]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1474609375,
          "content": "* text=auto\npackages/*/assets/* linguist-vendored\npackages/*/resource/* linguist-vendored\npublic/assets/* linguist-vendored\nCHANGELOG.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.98046875,
          "content": ".idea\n.DS_Store\n.vscode\n.vagrant\n.plus.yml\n\ncomposer.lock\nyarn.lock\njpush.log\n\n/config/component.php\n/config/component_routes.php\n/config/providers.php\n/node_modules\n/public/hot\n/public/storage\n/storage/*.key\n/vendor\n/resources/views/vendor\n/nbproject\n/.vagrant\n.env\n.env.backup\n.phpunit.result.cache\nHomestead.json\nHomestead.yaml\nnpm-debug.log\nyarn-error.log\n_ide_helper.php\n\n# Created by https://www.gitignore.io/api/macos,laravel,phpstorm\n# Edit at https://www.gitignore.io/?templates=macos,laravel,phpstorm\n\n### Laravel ###\n/vendor/\nnode_modules/\nnpm-debug.log\nyarn-error.log\n\n# Laravel 4 specific\nbootstrap/compiled.php\napp/storage/\n\n# Laravel 5 & Lumen specific\npublic/storage\npublic/hot\nstorage/*.key\n.env\nHomestead.yaml\nHomestead.json\n/.vagrant\n.phpunit.result.cache\n\n### macOS ###\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n### PhpStorm ###\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/**/usage.statistics.xml\n.idea/**/dictionaries\n.idea/**/shelf\n\n# Generated files\n.idea/**/contentModel.xml\n\n# Sensitive or high-churn files\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n.idea/**/dbnavigator.xml\n\n# Gradle\n.idea/**/gradle.xml\n.idea/**/libraries\n\n# Gradle and Maven with auto-import\n# When using Gradle or Maven with auto-import, you should exclude module files,\n# since they will be recreated, and may cause churn.  Uncomment if using\n# auto-import.\n# .idea/modules.xml\n# .idea/*.iml\n# .idea/modules\n# *.iml\n# *.ipr\n\n# CMake\ncmake-build-*/\n\n# Mongo Explorer plugin\n.idea/**/mongoSettings.xml\n\n# File-based project format\n*.iws\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n# Editor-based Rest Client\n.idea/httpRequests\n\n# Android studio 3.1+ serialized cache file\n.idea/caches/build_file_checksums.ser\n\n### PhpStorm Patch ###\n# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721\n\n# *.iml\n# modules.xml\n# .idea/misc.xml\n# *.ipr\n\n# Sonarlint plugin\n.idea/**/sonarlint/\n\n# SonarQube Plugin\n.idea/**/sonarIssues.xml\n\n# Markdown Navigator plugin\n.idea/**/markdown-navigator.xml\n.idea/**/markdown-navigator/\n\n# End of https://www.gitignore.io/api/macos,laravel,phpstorm\n"
        },
        {
          "name": ".postcssrc.js",
          "type": "blob",
          "size": 0.19140625,
          "content": "// https://github.com/michael-ciniawsky/postcss-load-config\n\nmodule.exports = {\n  \"plugins\": {\n    // to edit target browsers: use \"browserlist\" field in package.json\n    \"autoprefixer\": {}\n  }\n}\n"
        },
        {
          "name": ".styleci.yml",
          "type": "blob",
          "size": 0.1044921875,
          "content": "preset: laravel\nrisky: false\ndisabled:\n  - unused_use\nfinder:\n  not-name:\n    - index.php\n    - server.php\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.173828125,
          "content": "sudo: false\nbranches:\n  except:\n    - gh-pages\nlanguage: php\nphp:\n  - 7.1.3 # 必须构建最低要求版本\n  - 7.1\n  - 7.2\n  - 7.3\nenv:\n  #  - DB=mysql\n  - DB=postgres\nservices:\n  #  - mysql\n  - postgresql\ncache:\n  directories:\n    - $HOME/.composer/cache\nbefore_install:\n  # Check and create database.\n  - sh -c \"if [ '$DB' = 'postgres' ]; then psql -c 'create database plus;' -U postgres; echo $DB; fi\"\n  - sh -c \"if [ '$DB' = 'mysql' ]; then mysql -e 'CREATE DATABASE IF NOT EXISTS plus;'; echo $DB; fi\"\n  - php ./scripts/travis-ci-settings.php $DB\ninstall:\n  - composer install\n  - php artisan app:key-generate\n  - php artisan migrate -vvv\n  - php artisan db:seed -vvv\n  - php artisan vendor:publish --all -vvv\nscript: php vendor/bin/phpunit --coverage-clover=coverage.xml\nafter_script:\n  - php vendor/bin/codacycoverage clover coverage.xml\n  - bash <(curl -s https://codecov.io/bash)\njobs:\n  include:\n    - stage: Build\n      name: Build Assets Test\n      language: node_js\n      node_js: 10\n      cache:\n        directories:\n          - \"node_modules\"\n      services: null\n      env: null\n      before_install: null\n      install: npm install\n      script: npm run dev\n      after_script: null\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 8.1865234375,
          "content": "### update\n[2020-11-04]\n1. 更新laravel框架至[8.x](https://laravel.com/docs/8.x)\n\n### Bug Fixes\n[2020-11-04]\n* issue: [{type: bug, version: 2.3.0}: vendor文件夹下载不下来](https://github.com/slimkit/plus/issues/843)\n* issue: [无法登陆后台](https://github.com/slimkit/plus/issues/839)\n* issue: [ERROR: Trying to access array offset on value of type null](https://github.com/slimkit/plus/issues/838)\n\n* **动态:** 修复动态热门话题报错 fix [#586](https://github.com/slimkit/plus/issues/586) ([a6b49ae](https://github.com/slimkit/plus/commit/a6b49ae))\n* **动态:** 修复动态热门话题报错 fix [#586](https://github.com/slimkit/plus/issues/586) ([69be235](https://github.com/slimkit/plus/commit/69be235))\n* **动态:** 修复动态热门话题报错 fix [#586](https://github.com/slimkit/plus/issues/586) ([d47e3dd](https://github.com/slimkit/plus/commit/d47e3dd))\n* **Admin:** 修复后台动态管理预览动态图片非原本动态图片 Bug ([da22ac9](https://github.com/slimkit/plus/commit/da22ac9)), closes [#624](https://github.com/slimkit/plus/issues/624)\n* **IM:** 修复未使用环信情况下后台更新用户资料永远都会失败问题 ([155005a](https://github.com/slimkit/plus/commit/155005a))\n* **News:** 兼容 PC 需要获取置顶用户信息需求 ([cfbc299](https://github.com/slimkit/plus/commit/cfbc299))\n* **PC:** 动图识别的问题 ([035520a](https://github.com/slimkit/plus/commit/035520a))\n* **PC:** 系统消息类型 ([96a6090](https://github.com/slimkit/plus/commit/96a6090))\n* **PC:** 修补消息类型 ([b003e45](https://github.com/slimkit/plus/commit/b003e45))\n* **PC:** 修复开源版圈子页面报错的问题 ([b9a65cd](https://github.com/slimkit/plus/commit/b9a65cd))\n* **PC:** 修复全局评论时没有自动添加评论的问题 ([26284d0](https://github.com/slimkit/plus/commit/26284d0)), closes [#629](https://github.com/slimkit/plus/issues/629)\n* **PC:** 修复帖子的图片 mime 解析错误的问题 ([f3c57b2](https://github.com/slimkit/plus/commit/f3c57b2))\n* **PC:** 修复系统消息被拒绝的状态 ([cab0119](https://github.com/slimkit/plus/commit/cab0119))\n* **PC:** 在个人主页转发动态时会添加到其他人个人主页时间线中的问题 ([5faf023](https://github.com/slimkit/plus/commit/5faf023)), closes [#628](https://github.com/slimkit/plus/issues/628)\n* **SPA:** 参与话题的人数据错误的问题 ([0049580](https://github.com/slimkit/plus/commit/0049580))\n* **SPA:** 定位后保存当前位置信息到服务器 ([1eb93c0](https://github.com/slimkit/plus/commit/1eb93c0)), closes [#480](https://github.com/slimkit/plus/issues/480)\n* **SPA:** 动图不能播放的问题 ([06bcd3d](https://github.com/slimkit/plus/commit/06bcd3d))\n* **SPA:** 发起聊天时跳转到错误的路由的问题 ([9565f01](https://github.com/slimkit/plus/commit/9565f01))\n* **SPA:** 解决安卓微信下无法上传图片的问题(hack) ([b390b44](https://github.com/slimkit/plus/commit/b390b44))\n* **SPA:** 解决安卓微信下无法上传图片的问题(hack) ([5840826](https://github.com/slimkit/plus/commit/5840826))\n* **SPA:** 某些情况下弹起键盘框会导致字体重复的问题 ([72027c0](https://github.com/slimkit/plus/commit/72027c0))\n* **SPA:** 容器最大宽度限制 ([2fa7978](https://github.com/slimkit/plus/commit/2fa7978))\n* **SPA:** 头像引用路径不正常的问题 ([788002a](https://github.com/slimkit/plus/commit/788002a)), closes [#657](https://github.com/slimkit/plus/issues/657)\n* **SPA:** 无时间时显示为 NaN 的问题 ([20fedea](https://github.com/slimkit/plus/commit/20fedea)), closes [#655](https://github.com/slimkit/plus/issues/655)\n* **SPA:** 修补消息类型 ([5670f7d](https://github.com/slimkit/plus/commit/5670f7d))\n* **SPA:** 修复动态列表出现两次的问题 ([82d2a27](https://github.com/slimkit/plus/commit/82d2a27))\n* **SPA:** 修复合并代码后的一些问题 ([5a52f5d](https://github.com/slimkit/plus/commit/5a52f5d))\n* **SPA:** 修复获取数据时数量传出10而判断为15的问题 ([673080c](https://github.com/slimkit/plus/commit/673080c))\n* **SPA:** 修复如果资讯被打赏则无法显示系统消息的问题 ([77657be](https://github.com/slimkit/plus/commit/77657be)), closes [#654](https://github.com/slimkit/plus/issues/654)\n* **SPA:** 修复头像为空时会报错的问题 ([570691a](https://github.com/slimkit/plus/commit/570691a))\n* **SPA:** 修复未读消息小红点提示 ([94a7606](https://github.com/slimkit/plus/commit/94a7606)), closes [#529](https://github.com/slimkit/plus/issues/529)\n* **SPA:** 修复未读消息小红点提示 ([e69e6e8](https://github.com/slimkit/plus/commit/e69e6e8)), closes [#529](https://github.com/slimkit/plus/issues/529)\n* **SPA:** 修复未读消息小红点提示 ([74dd0c1](https://github.com/slimkit/plus/commit/74dd0c1)), closes [#529](https://github.com/slimkit/plus/issues/529)\n* **SPA:** 修复系统消息文本不正确的问题 ([a4195d4](https://github.com/slimkit/plus/commit/a4195d4))\n* **SPA:** 修复消息错误显示小红点 ([4dc0550](https://github.com/slimkit/plus/commit/4dc0550)), closes [#529](https://github.com/slimkit/plus/issues/529)\n* **SPA:** 修复消息错误显示小红点 ([1e56725](https://github.com/slimkit/plus/commit/1e56725)), closes [#529](https://github.com/slimkit/plus/issues/529)\n* **SPA:** 修复消息错误显示小红点 ([d8838fb](https://github.com/slimkit/plus/commit/d8838fb)), closes [#529](https://github.com/slimkit/plus/issues/529)\n* **SPA:** 修复消息页面含有时间差的问题 ([f451ae0](https://github.com/slimkit/plus/commit/f451ae0))\n* **SPA:** 修复在 hash 模式下无法微信登录的问题 ([5b5281c](https://github.com/slimkit/plus/commit/5b5281c))\n* **SPA:** 修正动态卡片时间 ([b9ad1fc](https://github.com/slimkit/plus/commit/b9ad1fc))\n* **SPA:** 修正动态卡片时间 ([c57333d](https://github.com/slimkit/plus/commit/c57333d))\n* **SPA:** 一些翻译问题 ([0db0012](https://github.com/slimkit/plus/commit/0db0012))\n* **SPA:** 一些翻译问题 ([af69326](https://github.com/slimkit/plus/commit/af69326))\n* **SPA:** 移除多余符号 ([9e7a23b](https://github.com/slimkit/plus/commit/9e7a23b))\n* **SPA:** 在每次进入聊天室或发送消息后清空未读聊天数量 ([c6091c0](https://github.com/slimkit/plus/commit/c6091c0))\n* **SPA:** 直辖市的定位问题 ([2a9e44b](https://github.com/slimkit/plus/commit/2a9e44b))\n* **SPA:** 资讯被打赏时无法正常显示消息预览的问题 ([a0dbd58](https://github.com/slimkit/plus/commit/a0dbd58)), closes [#654](https://github.com/slimkit/plus/issues/654)\n* **SPA:** GIF -> Gif ([cbe870a](https://github.com/slimkit/plus/commit/cbe870a)), closes [#644](https://github.com/slimkit/plus/issues/644)\n* 签到若未登录，不返回rank字段 ([f00c455](https://github.com/slimkit/plus/commit/f00c455))\n* 转发时at用户没有反应的问题 ([9430f5c](https://github.com/slimkit/plus/commit/9430f5c))\n* Fixed local CDN gif bepass ([ba50f4d](https://github.com/slimkit/plus/commit/ba50f4d))\n\n\n### Features\n\n* **动态:** 增加动态话题列表返回关注状态功能 ([0cd3f10](https://github.com/slimkit/plus/commit/0cd3f10))\n* **Music:** Add a list songs API ([5342b4f](https://github.com/slimkit/plus/commit/5342b4f))\n* **Music:** List api add multiple get ([925b85e](https://github.com/slimkit/plus/commit/925b85e)), closes [#625](https://github.com/slimkit/plus/issues/625)\n* **PC:** 增加 ThinkSNS 下载二维码 ([8740301](https://github.com/slimkit/plus/commit/8740301))\n* **PC:** 增加右侧在线咨询弹框 ([65f601f](https://github.com/slimkit/plus/commit/65f601f))\n* **PC:** GIF 动图按顺序播放 ([0eb45d1](https://github.com/slimkit/plus/commit/0eb45d1))\n* **SPA:** GIF 动图播放 ([69c7ac3](https://github.com/slimkit/plus/commit/69c7ac3))\n* Add using Tags find users ([6035fdc](https://github.com/slimkit/plus/commit/6035fdc))\n* **SPA:** 动态话题 ([157cf3a](https://github.com/slimkit/plus/commit/157cf3a)), closes [#467](https://github.com/slimkit/plus/issues/467)\n* **SPA:** 多国语言文本替换 ([e015aec](https://github.com/slimkit/plus/commit/e015aec))\n* **SPA:** 好友功能 ([6f53f4c](https://github.com/slimkit/plus/commit/6f53f4c))\n* **SPA:** 增加 QQ 在线咨询可选功能 ([284fc35](https://github.com/slimkit/plus/commit/284fc35))\n"
        },
        {
          "name": "Dockerfile-fpm",
          "type": "blob",
          "size": 2.3525390625,
          "content": "FROM php:7.2-fpm\n\n# install the PHP extensions we need\nRUN set -ex; \\\n\tpecl channel-update pecl.php.net; \\\n\t\\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\t\\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tlibfreetype6-dev \\\n\t\tlibjpeg62-turbo-dev \\\n\t    libmcrypt-dev \\\n\t    libpng-dev \\\n\t    libxml2-dev \\\n\t    libmemcached-dev \\\n\t    zlib1g-dev \\\n\t; \\\n\tdocker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/; \\\n\tdocker-php-ext-install -j$(nproc) iconv gd; \\\n\tdocker-php-ext-install \\\n\t\tsoap \\\n\t\tpdo_mysql \\\n\t\tzip \\\n\t\tmbstring \\\n\t\topcache \\\n\t; \\\n\tpecl install channel://pecl.php.net/mcrypt-1.0.1; \\\n\tpecl install memcached; \\\n\tdocker-php-ext-enable mcrypt; \\\n\tdocker-php-ext-enable memcached; \\\n# reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies\n\tapt-mark auto '.*' > /dev/null; \\\n\tapt-mark manual $savedAptMark; \\\n\tldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so \\\n\t\t| awk '/=>/ { print $3 }' \\\n\t\t| sort -u \\\n\t\t| xargs -r dpkg-query -S \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -rt apt-mark manual; \\\n\t\\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nRUN { \\\n\t\techo 'opcache.memory_consumption=128'; \\\n\t\techo 'opcache.interned_strings_buffer=8'; \\\n\t\techo 'opcache.max_accelerated_files=4000'; \\\n\t\techo 'opcache.revalidate_freq=2'; \\\n\t\techo 'opcache.fast_shutdown=1'; \\\n\t\techo 'opcache.enable_cli=1'; \\\n\t} > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\n# Install Composer\n# see https://getcomposer.org/download/\nRUN curl -s http://getcomposer.org/installer | php; \\\n\techo \"export PATH=${PATH}:/var/www/vendor/bin\" >> ~/.bashrc; \\\n\tmv composer.phar /usr/local/bin/composer\n\n## Load Plus(ThinkSNS+)\nCOPY . /usr/src/plus\nRUN set -ex; \\\n\trm -rf /var/www; \\\n\tmkdir /var/www; \\\n\tchown -R www-data:www-data /usr/src/plus; \\\n\tchown -R www-data:www-data /var/www\nUSER www-data\nRUN set -ex; \\\n\tcomposer install \\\n\t\t--no-dev \\\n\t\t--optimize-autoloader \\\n\t\t--classmap-authoritative \\\n\t\t--ignore-platform-reqs \\\n\t\t--working-dir=/usr/src/plus\nUSER root\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN set -ex; \\\n\tchmod -f +x /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nWORKDIR /var/www\nVOLUME /var/www\n\nCMD [\"php-fpm\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 4.755859375,
          "content": "                            ThinkSNS开源授权许可协议\n    \n    感谢您选择 ThinkSNS（简称TS），ThinkSNS 专研 10 年致力于为用户提供全面的 SNS\n    社区软件系统产品源码及开发服务解决方案。\n\n    智士软件（北京）有限公司为ThinkSNS系统开发商，依法独立拥有ThinkSNS产品著作权（\n    中华人民共和国国家版权局著作权登记号 2011SR069454）。\n\n    智士软件（北京）有限公司网址为 http://www.zhishisoft.com，ThinkSNS 官方网站\n    网址为 http://www.thinksns.com。版权所有 (C) 2008-Present，智士软件（北京）\n    有限公司保留所有权利。\n    ThinkSNS著作权已在中华人民共和国国家版权局注册，著作权受到法律和国际公约保护。\n    使用者：无论个人或组织、营利与否、用途如何（包括以学习和研究为目的），均需仔细阅读\n    本文内容，理解、同意、并遵守本须知的全部条款，方可从官方渠道下载开源代码(视为默认\n    知悉)，免费使用ThinkSNS开源代码。\n\n    智士软件（北京）有限公司拥有对本使用须知的最终解释权。\n\n    一、许可的权利\n\n        1、您可以在完全遵守本使用须知的基础上，将本软件应用于非商业用途、非营利性质\n           的社区建设，而不必支付软件授权费用；\n\n        2、您可以在官方规定的约束和限制范围内修改ThinkSNS开源代码或界面风格以适应您的网站要求；\n\n        3、您可以将开源代码部署到您的独立服务器/域名进行非商业用途、非营利性质使用；\n\n        4、您拥有使用本软件构建您的社区，站内全部会员资料、文章及相关信息的所有权，并\n           独立承担与文章内容的相关法律义务；\n\n        5、付费获得商业授权之后，您可以将本软件应用于商业用途，同时依据所购买的授权类型\n           中确定的技术支持期限、技术支持方式和技术支持内容，自购买时刻起，在技术支持期\n           限内拥有通过指定的方式获得指定范围内的技术支持服务。商业授权用户享有反映和提\n           出意见的权力，相关意见将被作为首要考虑，但没有一定被采纳的承诺或保证。\n    \n    二、规定的约束和限制\n\n        1、未付费购买官方版本商业／旗舰授权之前，禁止将开源代码用于商业用途（包括但不限于\n           企业网站、经营性网站、以营利为目或实现营利的网站）。购买商业授权请访问：\n           http://www.thinksns.com/buy.html 购买服务页面参考相关说明，点击在线咨询，\n           也可以直接致电授权业务专线17311245680了解费用详情及最新优惠；\n\n        2、不得对本软件或与之关联的商业授权进行出租、出售、抵押或发放子许可证；\n\n        3、无论用途如何、是否经过修改或美化、修改程度如何，只要使用 ThinkSNS 的整体或任何\n           部分，未经官方授权许可，禁止清除或修改前端(页面页脚处)／后台配置的 Powered by\n           ThinkSNS ©2018 ZhishiSoft All Rights Reserved及官网网站、友情链接等版权\n           信息。否则视为侵权，须依法向官方支付产品原价授权费及50%(授权费)侵权赔偿金；\n\n        4、禁止ThinkSNS的整体或任何部分基础上以发展任何衍生版本、修改版本或第三方版本用于\n           重新分发；\n\n        5、如果您未能遵守本使用须知，违反相关约束，您的开源版使用将被终止，所被许可的权利将\n           被收回，并承担相应法律责任，承担相应罚款罚金。\n    \n    三、有限担保和免责声明\n\n        1、本软件及所附带的文件是作为不提供任何明确的或隐含的赔偿或担保的形式提供的；\n\n        2、用户出于自愿而使用本软件，您必须了解使用本软件的风险，在尚未购买产品技术服务之前，\n           我们不承诺提供任何形式的技术支持、使用担保，也不承担任何因使用本软件而产生问题的\n           相关责任；\n        \n        3、智士软件（北京）有限公司不对使用本软件构建的社区中的文章或信息承担责任。\n\n        4、有关ThinkSNS商业授权协议与售后服务的详细内容，均由ThinkSNS官方独家提供。\n    \n    您一旦开始安装ThinkSNS开源代码，即被视为完全理解并接受本须知的各项条款，在享有上述条款授\n    予的权力的同时，受到相关的约束和限制。协议许可范围以外的行为，将直接违反本授权协议并构成侵\n    权，我们有权随时终止授权，责令停止损害，并保留追究相关责任的权力。\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.18359375,
          "content": "<img align=\"right\" width=\"100px\" src=\"https://github.com/slimkit/plus/raw/master/public/plus.png\" alt=\"Plus (ThinkSNS+) Logo\">\n\n# Plus (ThinkSNS+)\n\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/8320deaa80b8489f95fcedaae6df079d)](https://www.codacy.com/app/slimkit/plus?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=slimkit/plus&amp;utm_campaign=Badge_Grade)\n[![Codacy Badge](https://api.codacy.com/project/badge/Coverage/8320deaa80b8489f95fcedaae6df079d)](https://www.codacy.com/app/slimkit/plus?utm_source=github.com&utm_medium=referral&utm_content=slimkit/plus&utm_campaign=Badge_Coverage)\n[![StyleCI](https://github.styleci.io/repos/76627423/shield?branch=master)](https://github.styleci.io/repos/76627423)\n[![Build Status](https://travis-ci.org/slimkit/plus.svg?branch=master)](https://travis-ci.org/slimkit/plus)\n[![QQ Group](https://img.shields.io/badge/QQ%20Group-651240785-red.svg?longCache=true&style=flat-square)](//shang.qq.com/wpa/qunwpa?idkey=01b61bdf8a7efc2a40ab4caab2d14793f340e5fe5d09aa0c2c17f3115a579678)\n\n[Plus (ThinkSNS+)](http://www.thinksns.com) 是使用 [Laravel](https://laravel.com/) 框架开发；一个功能强大、易于开发和动态拓展的社交系统。Plus 是遵循 **PSR 规范** 代码统一，并功能块松耦合。你安装完成 Plus 并不意味着已经成功安装了所有功能，因为 Plus 使用 **模块化** 的\n原则，所以你安装完成后拥有了所有可以被请求的 REST 接口和后台管理面板，你可能还需要安装如下模块：\n\n- 一个对搜索引擎支持良好的大屏 Web 界面 👉 [ThinkSNS Plus PC](https://github.com/zhiyicx/plus-component-pcos)\n- 极大程度还原原生 APP 体验的 SPA (Single Page Application) 应用 👉 [ThinkSNS Plus SPA](https://github.com/zhiyicx/plus-component-h5)\n- 一个更加强大的大屏 Web 界面应用 (但它是收费的) 👉 [Plus PC](https://github.com/zhiyicx/plus-component-pc)\n\n> 如果你关注 ThinkSNS 所属公司更多开源产品，请看[ThinkSNS 官网](http://www.thinksns.com)\n\n## 特点\n\nPlus 是基于 Laravel 所开发，它拥有下面的几个主要特点：\n\n1. 跟随 Laravel 一同升级，但是我们放弃 LTS 版本，长期的框架不变，虽然会趋于稳定，但是 Plus 是一款长期规划维护的开源项目，随时升级框架以便我们可以尽情的使用新的技术和特性\n2. 前后端分离，Plus 安装完成只拥有功能快的 REST 接口部分，可以利用接口开发任何形态的客户端\n3. 后台管理面板采用 Vue.js 开发\n4. 使用 PHP 7 严格模式，以数据类型来限制开发人员的不规范开发\n5. 完全符合 PSR 规范，代码风格选择的是比 PSR-2 更加严格的规范\n6. 完善的文档，是的！在开源社区中， 一个开源项目的文档很重要。\n\n## 文档\n\n你可以在我们的文档网站上看到所有文档 👉 [https://slimkit.github.io](https://slimkit.github.io)\n\n它被分为以下几个部分：\n\n- [快速开始 · 安装](https://slimkit.github.io/docs/server-getting-started-installation.html)\n- [指南](https://slimkit.github.io/docs/server-guides-package.html)\n- [REST API v2](https://slimkit.github.io/docs/api-v2-overview.html)\n\n当然，有一些并不在网站上，而是在 Plus 代码仓库中：\n\n- [贡献指南 & 贡献者感谢名单](https://github.com/slimkit/plus/blob/master/.github/CONTRIBUTING.md)\n- [行为守则](https://github.com/slimkit/plus/blob/master/.github/CODE_OF_CONDUCT.md)\n\n## 安装\n\n安装 Plus 是一件非常简单的事情，但是你要先做到以下几点必须：\n\n- PHP 版本必须大于 `7.1.3`\n- 你已下载并安装过 `Composer`\n- 你拥有一个 `MySQL` 或者 `PostgreSQL` 等数据库\n\n下载程序：\n\n```shell\ncomposer create-project slimkit/plus\n```\n\n基本配置：\n\n下载完成后进入程序的 `storage/configure/` 目录，你会看到一个 `plus.yml.example` 文件，复制一份命名为 `plus.yml` 然后打开这份 Yaml 配置文件，进行你数据库等信息的配置。\n\n生成数据表以及默认填充数据：\n\n```shell\nphp artisan migrate --seed\n```\n\n软链公开磁盘并发布静态资产：\n\n```shell\nphp artisan storage:link\nphp artisan vendor:publish --all\n```\n\n运行 Plus 程序：\n\n```shell\nphp artisan serve\n```\n\n现在你可以访问 `http://127.0.0.1:8000` 查看你安装的 Plus 程序了，但是上述只是一份简单的安装，更加详细或者可以运行在\n正式环境的安装指南请参阅 👉 [安装指南](https://slimkit.github.io/docs/server-getting-started-installation.html)\n\n## 交流 & 支持\n\n你可以申请加入官方 QQ 群进行交流，群号 `143325287`。\n\n## 贡献\n\n这个仓库的贡献者并不代表只是 Plus 的贡献者，我们也会把 Laravel 的贡献者加入感谢名单，因为他们为 Laravel 所做出的贡献，也使得 Plus 项目更加强大。\n\n感谢所有为 Plus 贡献的人！\n<a href=\"https://github.com/slimkit/plus/graphs/contributors\"><img src=\"https://opencollective.com/plus/contributors.svg?width=890\" /></a>\n\n### [行为守则](https://github.com/slimkit/plus/blob/master/.github/CODE_OF_CONDUCT.md)\n\n我们按照开源项目社区的建议，为 Plus 提供了我们期望参与者遵守的行为准则，请 [阅读准则](https://github.com/slimkit/plus/blob/master/.github/CODE_OF_CONDUCT.md) 全文，以便了解哪些行为是我们不会容忍的。\n\n### [贡献指南](https://github.com/slimkit/plus/blob/master/.github/CONTRIBUTING.md)\n\n阅读我们的 [贡献指南](https://github.com/slimkit/plus/blob/master/.github/CONTRIBUTING.md)，了解我们的开发过程，\n如题提出错误修正或者建议，我们在贡献指南中包含了所有的贡献者名单。\n\n## 赞助\n\n首先，我们有一个特约赞助商 👉 [成都 · 智艺创想](http://www.zhiyicx.com)，该赞助商为 Plus 团队提供了一个开发的基础，提供工作场所以及提供商务处理事宜，并且开发了如下商业项目：\n\n- ThinkSNS Plus Android 客户端\n- ThinkSNS Plus iOS 客户端\n- 一个强大且全面的大屏 Web 界面应用\n- 问答模块\n- 圈子社群模块\n\n如果你对这些商业模块感兴趣，可以联系 QQ `3515923610` 了解更多细节。\n\n### 赞助商\n\n感谢所有赞助商！(如果你也支持这个项目，[√成为赞助商](https://opencollective.com/plus#sponsor))\n\n<a href=\"https://opencollective.com/plus/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/plus/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/plus/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/plus/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/plus/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/plus/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/plus/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/plus/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/plus/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/plus/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/plus/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/plus/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/plus/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/plus/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/plus/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/plus/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/plus/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/plus/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/plus/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/plus/sponsor/9/avatar.svg\"></a>\n\n## 优秀项目推荐\n\n- [PHP CORS](https://github.com/medz/cors) 专为 PHP 开发的“跨域资源共享”中间件，快速解决 PHP 设置跨域问题\n- [Notadd](https://github.com/notadd/notadd) 基于 Nest.js 的微服务开发架构，异步高性能应用、AOP（面向切面编程）\n\n## License\n\nPlus 代码采用企业定制许可证发布，请参阅完整的[许可证文本](https://github.com/slimkit/plus/blob/master/LICENSE)\n\nCopyright © 2018 Chengdu [ZhiYiChuangXiang](http://zhiyicx.com) Technology Co., Ltd. All rights reserved.\n"
        },
        {
          "name": "_ide_helper.php",
          "type": "blob",
          "size": 709.5185546875,
          "content": "<?php\n\n/*\n * +----------------------------------------------------------------------+\n * |                          ThinkSNS Plus                               |\n * +----------------------------------------------------------------------+\n * | Copyright (c) 2016-Present ZhiYiChuangXiang Technology Co., Ltd.     |\n * +----------------------------------------------------------------------+\n * | This source file is subject to enterprise private license, that is   |\n * | bundled with this package in the file LICENSE, and is available      |\n * | through the world-wide-web at the following url:                     |\n * | https://github.com/slimkit/plus/blob/master/LICENSE                  |\n * +----------------------------------------------------------------------+\n * | Author: Slim Kit Group <master@zhiyicx.com>                          |\n * | Homepage: www.thinksns.com                                           |\n * +----------------------------------------------------------------------+\n */\n\n/**\n * A helper file for Laravel, to provide autocomplete information to your IDE\n * Generated for Laravel 2.4.1.\n *\n * This file should not be included in your code, only analyzed by your IDE!\n *\n * @author Barry vd. Heuvel <barryvdh@gmail.com>\n *\n * @see https://github.com/barryvdh/laravel-ide-helper\n */\n\nnamespace Illuminate\\Support\\Facades {\n        /**\n         * @see \\Illuminate\\Contracts\\Foundation\\Application\n         */\n        class App\n        {\n            /**\n             * Get the version number of the Laravel framework.\n             *\n             * @return string\n             *\n             * @author Seven Du <shiweidu@outlook.com>\n             * @static\n             */\n            public static function getLaravelVersion()\n            {\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->getLaravelVersion();\n            }\n\n            /**\n             * Register the core class aliases in the container.\n             *\n             * @return void\n             * @static\n             */\n            public static function registerCoreContainerAliases()\n            {\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->registerCoreContainerAliases();\n            }\n\n            /**\n             * The app configure path.\n             *\n             * @param  string  $path\n             * @return string\n             * @static\n             */\n            public static function appConfigurePath($path = '')\n            {\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->appConfigurePath($path);\n            }\n\n            /**\n             * Get the app YAML configure filename.\n             *\n             * @return string\n             * @static\n             */\n            public static function appYamlConfigureFile()\n            {\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->appYamlConfigureFile();\n            }\n\n            /**\n             * Get the version number of the application.\n             *\n             * @return string\n             * @static\n             */\n            public static function version()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->version();\n            }\n\n            /**\n             * Run the given array of bootstrap classes.\n             *\n             * @param  string[]  $bootstrappers\n             * @return void\n             * @static\n             */\n            public static function bootstrapWith($bootstrappers)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->bootstrapWith($bootstrappers);\n            }\n\n            /**\n             * Register a callback to run after loading the environment.\n             *\n             * @param  \\Closure  $callback\n             * @return void\n             * @static\n             */\n            public static function afterLoadingEnvironment($callback)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->afterLoadingEnvironment($callback);\n            }\n\n            /**\n             * Register a callback to run before a bootstrapper.\n             *\n             * @param  string  $bootstrapper\n             * @param  \\Closure  $callback\n             * @return void\n             * @static\n             */\n            public static function beforeBootstrapping($bootstrapper, $callback)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->beforeBootstrapping($bootstrapper, $callback);\n            }\n\n            /**\n             * Register a callback to run after a bootstrapper.\n             *\n             * @param  string  $bootstrapper\n             * @param  \\Closure  $callback\n             * @return void\n             * @static\n             */\n            public static function afterBootstrapping($bootstrapper, $callback)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->afterBootstrapping($bootstrapper, $callback);\n            }\n\n            /**\n             * Determine if the application has been bootstrapped before.\n             *\n             * @return bool\n             * @static\n             */\n            public static function hasBeenBootstrapped()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->hasBeenBootstrapped();\n            }\n\n            /**\n             * Set the base path for the application.\n             *\n             * @param  string  $basePath\n             * @return \\Zhiyi\\Plus\\Application\n             * @static\n             */\n            public static function setBasePath($basePath)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->setBasePath($basePath);\n            }\n\n            /**\n             * Get the path to the application \"app\" directory.\n             *\n             * @param  string  $path\n             * @return string\n             * @static\n             */\n            public static function path($path = '')\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->path($path);\n            }\n\n            /**\n             * Set the application directory.\n             *\n             * @param  string  $path\n             * @return \\Zhiyi\\Plus\\Application\n             * @static\n             */\n            public static function useAppPath($path)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->useAppPath($path);\n            }\n\n            /**\n             * Get the base path of the Laravel installation.\n             *\n             * @param  string  $path  Optionally, a path to append to the base path\n             * @return string\n             * @static\n             */\n            public static function basePath($path = '')\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->basePath($path);\n            }\n\n            /**\n             * Get the path to the bootstrap directory.\n             *\n             * @param  string  $path  Optionally, a path to append to the bootstrap path\n             * @return string\n             * @static\n             */\n            public static function bootstrapPath($path = '')\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->bootstrapPath($path);\n            }\n\n            /**\n             * Get the path to the application configuration files.\n             *\n             * @param  string  $path  Optionally, a path to append to the config path\n             * @return string\n             * @static\n             */\n            public static function configPath($path = '')\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->configPath($path);\n            }\n\n            /**\n             * Get the path to the database directory.\n             *\n             * @param  string  $path  Optionally, a path to append to the database path\n             * @return string\n             * @static\n             */\n            public static function databasePath($path = '')\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->databasePath($path);\n            }\n\n            /**\n             * Set the database directory.\n             *\n             * @param  string  $path\n             * @return \\Zhiyi\\Plus\\Application\n             * @static\n             */\n            public static function useDatabasePath($path)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->useDatabasePath($path);\n            }\n\n            /**\n             * Get the path to the language files.\n             *\n             * @return string\n             * @static\n             */\n            public static function langPath()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->langPath();\n            }\n\n            /**\n             * Get the path to the public / web directory.\n             *\n             * @return string\n             * @static\n             */\n            public static function publicPath()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->publicPath();\n            }\n\n            /**\n             * Get the path to the storage directory.\n             *\n             * @return string\n             * @static\n             */\n            public static function storagePath()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->storagePath();\n            }\n\n            /**\n             * Set the storage directory.\n             *\n             * @param  string  $path\n             * @return \\Zhiyi\\Plus\\Application\n             * @static\n             */\n            public static function useStoragePath($path)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->useStoragePath($path);\n            }\n\n            /**\n             * Get the path to the resources directory.\n             *\n             * @param  string  $path\n             * @return string\n             * @static\n             */\n            public static function resourcePath($path = '')\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->resourcePath($path);\n            }\n\n            /**\n             * Get the path to the environment file directory.\n             *\n             * @return string\n             * @static\n             */\n            public static function environmentPath()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->environmentPath();\n            }\n\n            /**\n             * Set the directory for the environment file.\n             *\n             * @param  string  $path\n             * @return \\Zhiyi\\Plus\\Application\n             * @static\n             */\n            public static function useEnvironmentPath($path)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->useEnvironmentPath($path);\n            }\n\n            /**\n             * Set the environment file to be loaded during bootstrapping.\n             *\n             * @param  string  $file\n             * @return \\Zhiyi\\Plus\\Application\n             * @static\n             */\n            public static function loadEnvironmentFrom($file)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->loadEnvironmentFrom($file);\n            }\n\n            /**\n             * Get the environment file the application is using.\n             *\n             * @return string\n             * @static\n             */\n            public static function environmentFile()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->environmentFile();\n            }\n\n            /**\n             * Get the fully qualified path to the environment file.\n             *\n             * @return string\n             * @static\n             */\n            public static function environmentFilePath()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->environmentFilePath();\n            }\n\n            /**\n             * Get or check the current application environment.\n             *\n             * @param  string|array  $environments\n             * @return string|bool\n             * @static\n             */\n            public static function environment(...$environments)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->environment(...$environments);\n            }\n\n            /**\n             * Determine if application is in local environment.\n             *\n             * @return bool\n             * @static\n             */\n            public static function isLocal()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->isLocal();\n            }\n\n            /**\n             * Determine if application is in production environment.\n             *\n             * @return bool\n             * @static\n             */\n            public static function isProduction()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->isProduction();\n            }\n\n            /**\n             * Detect the application's current environment.\n             *\n             * @param  \\Closure  $callback\n             * @return string\n             * @static\n             */\n            public static function detectEnvironment($callback)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->detectEnvironment($callback);\n            }\n\n            /**\n             * Determine if the application is running in the console.\n             *\n             * @return bool\n             * @static\n             */\n            public static function runningInConsole()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->runningInConsole();\n            }\n\n            /**\n             * Determine if the application is running unit tests.\n             *\n             * @return bool\n             * @static\n             */\n            public static function runningUnitTests()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->runningUnitTests();\n            }\n\n            /**\n             * Register all of the configured providers.\n             *\n             * @return void\n             * @static\n             */\n            public static function registerConfiguredProviders()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->registerConfiguredProviders();\n            }\n\n            /**\n             * Register a service provider with the application.\n             *\n             * @param  \\Illuminate\\Support\\ServiceProvider|string  $provider\n             * @param  bool  $force\n             * @return \\Illuminate\\Support\\ServiceProvider\n             * @static\n             */\n            public static function register($provider, $force = false)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->register($provider, $force);\n            }\n\n            /**\n             * Get the registered service provider instance if it exists.\n             *\n             * @param  \\Illuminate\\Support\\ServiceProvider|string  $provider\n             * @return \\Illuminate\\Support\\ServiceProvider|null\n             * @static\n             */\n            public static function getProvider($provider)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->getProvider($provider);\n            }\n\n            /**\n             * Get the registered service provider instances if any exist.\n             *\n             * @param  \\Illuminate\\Support\\ServiceProvider|string  $provider\n             * @return array\n             * @static\n             */\n            public static function getProviders($provider)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->getProviders($provider);\n            }\n\n            /**\n             * Resolve a service provider instance from the class name.\n             *\n             * @param  string  $provider\n             * @return \\Illuminate\\Support\\ServiceProvider\n             * @static\n             */\n            public static function resolveProvider($provider)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->resolveProvider($provider);\n            }\n\n            /**\n             * Load and boot all of the remaining deferred providers.\n             *\n             * @return void\n             * @static\n             */\n            public static function loadDeferredProviders()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->loadDeferredProviders();\n            }\n\n            /**\n             * Load the provider for a deferred service.\n             *\n             * @param  string  $service\n             * @return void\n             * @static\n             */\n            public static function loadDeferredProvider($service)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->loadDeferredProvider($service);\n            }\n\n            /**\n             * Register a deferred provider and service.\n             *\n             * @param  string  $provider\n             * @param  string|null  $service\n             * @return void\n             * @static\n             */\n            public static function registerDeferredProvider($provider, $service = null)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->registerDeferredProvider($provider, $service);\n            }\n\n            /**\n             * Resolve the given type from the container.\n             *\n             * @param  string  $abstract\n             * @param  array  $parameters\n             * @return mixed\n             * @static\n             */\n            public static function make($abstract, $parameters = [])\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->make($abstract, $parameters);\n            }\n\n            /**\n             * Determine if the given abstract type has been bound.\n             *\n             * @param  string  $abstract\n             * @return bool\n             * @static\n             */\n            public static function bound($abstract)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->bound($abstract);\n            }\n\n            /**\n             * Determine if the application has booted.\n             *\n             * @return bool\n             * @static\n             */\n            public static function isBooted()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->isBooted();\n            }\n\n            /**\n             * Boot the application's service providers.\n             *\n             * @return void\n             * @static\n             */\n            public static function boot()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->boot();\n            }\n\n            /**\n             * Register a new boot listener.\n             *\n             * @param  callable  $callback\n             * @return void\n             * @static\n             */\n            public static function booting($callback)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->booting($callback);\n            }\n\n            /**\n             * Register a new \"booted\" listener.\n             *\n             * @param  callable  $callback\n             * @return void\n             * @static\n             */\n            public static function booted($callback)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->booted($callback);\n            }\n\n            /**\n             * @static\n             */\n            public static function handle($request, $type = 1, $catch = true)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->handle($request, $type, $catch);\n            }\n\n            /**\n             * Determine if middleware has been disabled for the application.\n             *\n             * @return bool\n             * @static\n             */\n            public static function shouldSkipMiddleware()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->shouldSkipMiddleware();\n            }\n\n            /**\n             * Get the path to the cached services.php file.\n             *\n             * @return string\n             * @static\n             */\n            public static function getCachedServicesPath()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->getCachedServicesPath();\n            }\n\n            /**\n             * Get the path to the cached packages.php file.\n             *\n             * @return string\n             * @static\n             */\n            public static function getCachedPackagesPath()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->getCachedPackagesPath();\n            }\n\n            /**\n             * Determine if the application configuration is cached.\n             *\n             * @return bool\n             * @static\n             */\n            public static function configurationIsCached()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->configurationIsCached();\n            }\n\n            /**\n             * Get the path to the configuration cache file.\n             *\n             * @return string\n             * @static\n             */\n            public static function getCachedConfigPath()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->getCachedConfigPath();\n            }\n\n            /**\n             * Determine if the application routes are cached.\n             *\n             * @return bool\n             * @static\n             */\n            public static function routesAreCached()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->routesAreCached();\n            }\n\n            /**\n             * Get the path to the routes cache file.\n             *\n             * @return string\n             * @static\n             */\n            public static function getCachedRoutesPath()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->getCachedRoutesPath();\n            }\n\n            /**\n             * Determine if the application events are cached.\n             *\n             * @return bool\n             * @static\n             */\n            public static function eventsAreCached()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->eventsAreCached();\n            }\n\n            /**\n             * Get the path to the events cache file.\n             *\n             * @return string\n             * @static\n             */\n            public static function getCachedEventsPath()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->getCachedEventsPath();\n            }\n\n            /**\n             * Add new prefix to list of absolute path prefixes.\n             *\n             * @param  string  $prefix\n             * @return \\Zhiyi\\Plus\\Application\n             * @static\n             */\n            public static function addAbsoluteCachePathPrefix($prefix)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->addAbsoluteCachePathPrefix($prefix);\n            }\n\n            /**\n             * Determine if the application is currently down for maintenance.\n             *\n             * @return bool\n             * @static\n             */\n            public static function isDownForMaintenance()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->isDownForMaintenance();\n            }\n\n            /**\n             * Throw an HttpException with the given data.\n             *\n             * @param  int  $code\n             * @param  string  $message\n             * @param  array  $headers\n             * @return void\n             *\n             * @throws \\Symfony\\Component\\HttpKernel\\Exception\\HttpException\n             * @throws \\Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException\n             * @static\n             */\n            public static function abort($code, $message = '', $headers = [])\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->abort($code, $message, $headers);\n            }\n\n            /**\n             * Register a terminating callback with the application.\n             *\n             * @param  callable|string  $callback\n             * @return \\Zhiyi\\Plus\\Application\n             * @static\n             */\n            public static function terminating($callback)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->terminating($callback);\n            }\n\n            /**\n             * Terminate the application.\n             *\n             * @return void\n             * @static\n             */\n            public static function terminate()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->terminate();\n            }\n\n            /**\n             * Get the service providers that have been loaded.\n             *\n             * @return array\n             * @static\n             */\n            public static function getLoadedProviders()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->getLoadedProviders();\n            }\n\n            /**\n             * Determine if the given service provider is loaded.\n             *\n             * @param  string  $provider\n             * @return bool\n             * @static\n             */\n            public static function providerIsLoaded($provider)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->providerIsLoaded($provider);\n            }\n\n            /**\n             * Get the application's deferred services.\n             *\n             * @return array\n             * @static\n             */\n            public static function getDeferredServices()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->getDeferredServices();\n            }\n\n            /**\n             * Set the application's deferred services.\n             *\n             * @param  array  $services\n             * @return void\n             * @static\n             */\n            public static function setDeferredServices($services)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->setDeferredServices($services);\n            }\n\n            /**\n             * Add an array of services to the application's deferred services.\n             *\n             * @param  array  $services\n             * @return void\n             * @static\n             */\n            public static function addDeferredServices($services)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->addDeferredServices($services);\n            }\n\n            /**\n             * Determine if the given service is a deferred service.\n             *\n             * @param  string  $service\n             * @return bool\n             * @static\n             */\n            public static function isDeferredService($service)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->isDeferredService($service);\n            }\n\n            /**\n             * Configure the real-time facade namespace.\n             *\n             * @param  string  $namespace\n             * @return void\n             * @static\n             */\n            public static function provideFacades($namespace)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->provideFacades($namespace);\n            }\n\n            /**\n             * Get the current application locale.\n             *\n             * @return string\n             * @static\n             */\n            public static function getLocale()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->getLocale();\n            }\n\n            /**\n             * Get the current application fallback locale.\n             *\n             * @return string\n             * @static\n             */\n            public static function getFallbackLocale()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->getFallbackLocale();\n            }\n\n            /**\n             * Set the current application locale.\n             *\n             * @param  string  $locale\n             * @return void\n             * @static\n             */\n            public static function setLocale($locale)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->setLocale($locale);\n            }\n\n            /**\n             * Set the current application fallback locale.\n             *\n             * @param  string  $fallbackLocale\n             * @return void\n             * @static\n             */\n            public static function setFallbackLocale($fallbackLocale)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->setFallbackLocale($fallbackLocale);\n            }\n\n            /**\n             * Determine if application locale is the given locale.\n             *\n             * @param  string  $locale\n             * @return bool\n             * @static\n             */\n            public static function isLocale($locale)\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->isLocale($locale);\n            }\n\n            /**\n             * Flush the container of all bindings and resolved instances.\n             *\n             * @return void\n             * @static\n             */\n            public static function flush()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->flush();\n            }\n\n            /**\n             * Get the application namespace.\n             *\n             * @return string\n             *\n             * @throws \\RuntimeException\n             * @static\n             */\n            public static function getNamespace()\n            {            //Method inherited from \\Illuminate\\Foundation\\Application\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->getNamespace();\n            }\n\n            /**\n             * Define a contextual binding.\n             *\n             * @param  array|string  $concrete\n             * @return \\Illuminate\\Contracts\\Container\\ContextualBindingBuilder\n             * @static\n             */\n            public static function when($concrete)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->when($concrete);\n            }\n\n            /**\n             * Returns true if the container can return an entry for the given identifier.\n             *\n             * Returns false otherwise.\n             *\n             * `has($id)` returning true does not mean that `get($id)` will not throw an exception.\n             * It does however mean that `get($id)` will not throw a `NotFoundExceptionInterface`.\n             *\n             * @param  string  $id  Identifier of the entry to look for.\n             * @return bool\n             * @static\n             */\n            public static function has($id)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->has($id);\n            }\n\n            /**\n             * Determine if the given abstract type has been resolved.\n             *\n             * @param  string  $abstract\n             * @return bool\n             * @static\n             */\n            public static function resolved($abstract)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->resolved($abstract);\n            }\n\n            /**\n             * Determine if a given type is shared.\n             *\n             * @param  string  $abstract\n             * @return bool\n             * @static\n             */\n            public static function isShared($abstract)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->isShared($abstract);\n            }\n\n            /**\n             * Determine if a given string is an alias.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function isAlias($name)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->isAlias($name);\n            }\n\n            /**\n             * Register a binding with the container.\n             *\n             * @param  string  $abstract\n             * @param  \\Closure|string|null  $concrete\n             * @param  bool  $shared\n             * @return void\n             * @static\n             */\n            public static function bind($abstract, $concrete = null, $shared = false)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->bind($abstract, $concrete, $shared);\n            }\n\n            /**\n             * Determine if the container has a method binding.\n             *\n             * @param  string  $method\n             * @return bool\n             * @static\n             */\n            public static function hasMethodBinding($method)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->hasMethodBinding($method);\n            }\n\n            /**\n             * Bind a callback to resolve with Container::call.\n             *\n             * @param  array|string  $method\n             * @param  \\Closure  $callback\n             * @return void\n             * @static\n             */\n            public static function bindMethod($method, $callback)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->bindMethod($method, $callback);\n            }\n\n            /**\n             * Get the method binding for the given method.\n             *\n             * @param  string  $method\n             * @param  mixed  $instance\n             * @return mixed\n             * @static\n             */\n            public static function callMethodBinding($method, $instance)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->callMethodBinding($method, $instance);\n            }\n\n            /**\n             * Add a contextual binding to the container.\n             *\n             * @param  string  $concrete\n             * @param  string  $abstract\n             * @param  \\Closure|string  $implementation\n             * @return void\n             * @static\n             */\n            public static function addContextualBinding($concrete, $abstract, $implementation)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->addContextualBinding($concrete, $abstract, $implementation);\n            }\n\n            /**\n             * Register a binding if it hasn't already been registered.\n             *\n             * @param  string  $abstract\n             * @param  \\Closure|string|null  $concrete\n             * @param  bool  $shared\n             * @return void\n             * @static\n             */\n            public static function bindIf($abstract, $concrete = null, $shared = false)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->bindIf($abstract, $concrete, $shared);\n            }\n\n            /**\n             * Register a shared binding in the container.\n             *\n             * @param  string  $abstract\n             * @param  \\Closure|string|null  $concrete\n             * @return void\n             * @static\n             */\n            public static function singleton($abstract, $concrete = null)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->singleton($abstract, $concrete);\n            }\n\n            /**\n             * Register a shared binding if it hasn't already been registered.\n             *\n             * @param  string  $abstract\n             * @param  \\Closure|string|null  $concrete\n             * @return void\n             * @static\n             */\n            public static function singletonIf($abstract, $concrete = null)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->singletonIf($abstract, $concrete);\n            }\n\n            /**\n             * \"Extend\" an abstract type in the container.\n             *\n             * @param  string  $abstract\n             * @param  \\Closure  $closure\n             * @return void\n             *\n             * @throws \\InvalidArgumentException\n             * @static\n             */\n            public static function extend($abstract, $closure)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->extend($abstract, $closure);\n            }\n\n            /**\n             * Register an existing instance as shared in the container.\n             *\n             * @param  string  $abstract\n             * @param  mixed  $instance\n             * @return mixed\n             * @static\n             */\n            public static function instance($abstract, $instance)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->instance($abstract, $instance);\n            }\n\n            /**\n             * Assign a set of tags to a given binding.\n             *\n             * @param  array|string  $abstracts\n             * @param  array|mixed  $tags\n             * @return void\n             * @static\n             */\n            public static function tag($abstracts, $tags)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->tag($abstracts, $tags);\n            }\n\n            /**\n             * Resolve all of the bindings for a given tag.\n             *\n             * @param  string  $tag\n             * @return \\Illuminate\\Container\\iterable\n             * @static\n             */\n            public static function tagged($tag)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->tagged($tag);\n            }\n\n            /**\n             * Alias a type to a different name.\n             *\n             * @param  string  $abstract\n             * @param  string  $alias\n             * @return void\n             *\n             * @throws \\LogicException\n             * @static\n             */\n            public static function alias($abstract, $alias)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->alias($abstract, $alias);\n            }\n\n            /**\n             * Bind a new callback to an abstract's rebind event.\n             *\n             * @param  string  $abstract\n             * @param  \\Closure  $callback\n             * @return mixed\n             * @static\n             */\n            public static function rebinding($abstract, $callback)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->rebinding($abstract, $callback);\n            }\n\n            /**\n             * Refresh an instance on the given target and method.\n             *\n             * @param  string  $abstract\n             * @param  mixed  $target\n             * @param  string  $method\n             * @return mixed\n             * @static\n             */\n            public static function refresh($abstract, $target, $method)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->refresh($abstract, $target, $method);\n            }\n\n            /**\n             * Wrap the given closure such that its dependencies will be injected when executed.\n             *\n             * @param  \\Closure  $callback\n             * @param  array  $parameters\n             * @return \\Closure\n             * @static\n             */\n            public static function wrap($callback, $parameters = [])\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->wrap($callback, $parameters);\n            }\n\n            /**\n             * Call the given Closure / class@method and inject its dependencies.\n             *\n             * @param  callable|string  $callback\n             * @param  \\Illuminate\\Container\\array<string,  mixed>  $parameters\n             * @param  string|null  $defaultMethod\n             * @return mixed\n             *\n             * @throws \\InvalidArgumentException\n             * @static\n             */\n            public static function call($callback, $parameters = [], $defaultMethod = null)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->call($callback, $parameters, $defaultMethod);\n            }\n\n            /**\n             * Get a closure to resolve the given type from the container.\n             *\n             * @param  string  $abstract\n             * @return \\Closure\n             * @static\n             */\n            public static function factory($abstract)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->factory($abstract);\n            }\n\n            /**\n             * An alias function name for make().\n             *\n             * @param  string  $abstract\n             * @param  array  $parameters\n             * @return mixed\n             *\n             * @throws \\Illuminate\\Contracts\\Container\\BindingResolutionException\n             * @static\n             */\n            public static function makeWith($abstract, $parameters = [])\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->makeWith($abstract, $parameters);\n            }\n\n            /**\n             * Finds an entry of the container by its identifier and returns it.\n             *\n             * @param  string  $id  Identifier of the entry to look for.\n             * @return mixed Entry.\n             *\n             * @throws NotFoundExceptionInterface No entry was found for **this** identifier.\n             * @throws ContainerExceptionInterface Error while retrieving the entry.\n             * @static\n             */\n            public static function get($id)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->get($id);\n            }\n\n            /**\n             * Instantiate a concrete instance of the given type.\n             *\n             * @param  \\Closure|string  $concrete\n             * @return mixed\n             *\n             * @throws \\Illuminate\\Contracts\\Container\\BindingResolutionException\n             * @static\n             */\n            public static function build($concrete)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->build($concrete);\n            }\n\n            /**\n             * Register a new resolving callback.\n             *\n             * @param  \\Closure|string  $abstract\n             * @param  \\Closure|null  $callback\n             * @return void\n             * @static\n             */\n            public static function resolving($abstract, $callback = null)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->resolving($abstract, $callback);\n            }\n\n            /**\n             * Register a new after resolving callback for all types.\n             *\n             * @param  \\Closure|string  $abstract\n             * @param  \\Closure|null  $callback\n             * @return void\n             * @static\n             */\n            public static function afterResolving($abstract, $callback = null)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->afterResolving($abstract, $callback);\n            }\n\n            /**\n             * Get the container's bindings.\n             *\n             * @return array\n             * @static\n             */\n            public static function getBindings()\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->getBindings();\n            }\n\n            /**\n             * Get the alias for an abstract if available.\n             *\n             * @param  string  $abstract\n             * @return string\n             * @static\n             */\n            public static function getAlias($abstract)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->getAlias($abstract);\n            }\n\n            /**\n             * Remove all of the extender callbacks for a given type.\n             *\n             * @param  string  $abstract\n             * @return void\n             * @static\n             */\n            public static function forgetExtenders($abstract)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->forgetExtenders($abstract);\n            }\n\n            /**\n             * Remove a resolved instance from the instance cache.\n             *\n             * @param  string  $abstract\n             * @return void\n             * @static\n             */\n            public static function forgetInstance($abstract)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->forgetInstance($abstract);\n            }\n\n            /**\n             * Clear all of the instances from the container.\n             *\n             * @return void\n             * @static\n             */\n            public static function forgetInstances()\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->forgetInstances();\n            }\n\n            /**\n             * Get the globally available instance of the container.\n             *\n             * @return static\n             * @static\n             */\n            public static function getInstance()\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                return \\Zhiyi\\Plus\\Application::getInstance();\n            }\n\n            /**\n             * Set the shared instance of the container.\n             *\n             * @param  \\Illuminate\\Contracts\\Container\\Container|null  $container\n             * @return \\Illuminate\\Contracts\\Container\\Container|static\n             * @static\n             */\n            public static function setInstance($container = null)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                return \\Zhiyi\\Plus\\Application::setInstance($container);\n            }\n\n            /**\n             * Determine if a given offset exists.\n             *\n             * @param  string  $key\n             * @return bool\n             * @static\n             */\n            public static function offsetExists($key)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->offsetExists($key);\n            }\n\n            /**\n             * Get the value at a given offset.\n             *\n             * @param  string  $key\n             * @return mixed\n             * @static\n             */\n            public static function offsetGet($key)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                return $instance->offsetGet($key);\n            }\n\n            /**\n             * Set the value at a given offset.\n             *\n             * @param  string  $key\n             * @param  mixed  $value\n             * @return void\n             * @static\n             */\n            public static function offsetSet($key, $value)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->offsetSet($key, $value);\n            }\n\n            /**\n             * Unset the value at a given offset.\n             *\n             * @param  string  $key\n             * @return void\n             * @static\n             */\n            public static function offsetUnset($key)\n            {            //Method inherited from \\Illuminate\\Container\\Container\n                /** @var \\Zhiyi\\Plus\\Application $instance */\n                $instance->offsetUnset($key);\n            }\n        }\n        /**\n         * @see \\Illuminate\\Contracts\\Console\\Kernel\n         */\n        class Artisan\n        {\n            /**\n             * Run the console application.\n             *\n             * @param  \\Symfony\\Component\\Console\\Input\\InputInterface  $input\n             * @param  \\Symfony\\Component\\Console\\Output\\OutputInterface|null  $output\n             * @return int\n             * @static\n             */\n            public static function handle($input, $output = null)\n            {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel\n                /** @var \\Zhiyi\\Plus\\Console\\Kernel $instance */\n                return $instance->handle($input, $output);\n            }\n\n            /**\n             * Terminate the application.\n             *\n             * @param  \\Symfony\\Component\\Console\\Input\\InputInterface  $input\n             * @param  int  $status\n             * @return void\n             * @static\n             */\n            public static function terminate($input, $status)\n            {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel\n                /** @var \\Zhiyi\\Plus\\Console\\Kernel $instance */\n                $instance->terminate($input, $status);\n            }\n\n            /**\n             * Register a Closure based command with the application.\n             *\n             * @param  string  $signature\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Foundation\\Console\\ClosureCommand\n             * @static\n             */\n            public static function command($signature, $callback)\n            {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel\n                /** @var \\Zhiyi\\Plus\\Console\\Kernel $instance */\n                return $instance->command($signature, $callback);\n            }\n\n            /**\n             * Register the given command with the console application.\n             *\n             * @param  \\Symfony\\Component\\Console\\Command\\Command  $command\n             * @return void\n             * @static\n             */\n            public static function registerCommand($command)\n            {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel\n                /** @var \\Zhiyi\\Plus\\Console\\Kernel $instance */\n                $instance->registerCommand($command);\n            }\n\n            /**\n             * Run an Artisan console command by name.\n             *\n             * @param  string  $command\n             * @param  array  $parameters\n             * @param  \\Symfony\\Component\\Console\\Output\\OutputInterface|null  $outputBuffer\n             * @return int\n             *\n             * @throws \\Symfony\\Component\\Console\\Exception\\CommandNotFoundException\n             * @static\n             */\n            public static function call($command, $parameters = [], $outputBuffer = null)\n            {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel\n                /** @var \\Zhiyi\\Plus\\Console\\Kernel $instance */\n                return $instance->call($command, $parameters, $outputBuffer);\n            }\n\n            /**\n             * Queue the given console command.\n             *\n             * @param  string  $command\n             * @param  array  $parameters\n             * @return \\Illuminate\\Foundation\\Bus\\PendingDispatch\n             * @static\n             */\n            public static function queue($command, $parameters = [])\n            {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel\n                /** @var \\Zhiyi\\Plus\\Console\\Kernel $instance */\n                return $instance->queue($command, $parameters);\n            }\n\n            /**\n             * Get all of the commands registered with the console.\n             *\n             * @return array\n             * @static\n             */\n            public static function all()\n            {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel\n                /** @var \\Zhiyi\\Plus\\Console\\Kernel $instance */\n                return $instance->all();\n            }\n\n            /**\n             * Get the output for the last run command.\n             *\n             * @return string\n             * @static\n             */\n            public static function output()\n            {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel\n                /** @var \\Zhiyi\\Plus\\Console\\Kernel $instance */\n                return $instance->output();\n            }\n\n            /**\n             * Bootstrap the application for artisan commands.\n             *\n             * @return void\n             * @static\n             */\n            public static function bootstrap()\n            {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel\n                /** @var \\Zhiyi\\Plus\\Console\\Kernel $instance */\n                $instance->bootstrap();\n            }\n\n            /**\n             * Set the Artisan application instance.\n             *\n             * @param  \\Illuminate\\Console\\Application  $artisan\n             * @return void\n             * @static\n             */\n            public static function setArtisan($artisan)\n            {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel\n                /** @var \\Zhiyi\\Plus\\Console\\Kernel $instance */\n                $instance->setArtisan($artisan);\n            }\n        }\n        /**\n         * @see \\Illuminate\\Auth\\AuthManager\n         * @see \\Illuminate\\Contracts\\Auth\\Factory\n         * @see \\Illuminate\\Contracts\\Auth\\Guard\n         * @see \\Illuminate\\Contracts\\Auth\\StatefulGuard\n         */\n        class Auth\n        {\n            /**\n             * Attempt to get the guard from the local cache.\n             *\n             * @param  string|null  $name\n             * @return \\Illuminate\\Contracts\\Auth\\Guard|\\Illuminate\\Contracts\\Auth\\StatefulGuard\n             * @static\n             */\n            public static function guard($name = null)\n            {\n                /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                return $instance->guard($name);\n            }\n\n            /**\n             * Create a session based authentication guard.\n             *\n             * @param  string  $name\n             * @param  array  $config\n             * @return \\Illuminate\\Auth\\SessionGuard\n             * @static\n             */\n            public static function createSessionDriver($name, $config)\n            {\n                /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                return $instance->createSessionDriver($name, $config);\n            }\n\n            /**\n             * Create a token based authentication guard.\n             *\n             * @param  string  $name\n             * @param  array  $config\n             * @return \\Illuminate\\Auth\\TokenGuard\n             * @static\n             */\n            public static function createTokenDriver($name, $config)\n            {\n                /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                return $instance->createTokenDriver($name, $config);\n            }\n\n            /**\n             * Get the default authentication driver name.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDefaultDriver()\n            {\n                /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                return $instance->getDefaultDriver();\n            }\n\n            /**\n             * Set the default guard driver the factory should serve.\n             *\n             * @param  string  $name\n             * @return void\n             * @static\n             */\n            public static function shouldUse($name)\n            {\n                /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                $instance->shouldUse($name);\n            }\n\n            /**\n             * Set the default authentication driver name.\n             *\n             * @param  string  $name\n             * @return void\n             * @static\n             */\n            public static function setDefaultDriver($name)\n            {\n                /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                $instance->setDefaultDriver($name);\n            }\n\n            /**\n             * Register a new callback based request guard.\n             *\n             * @param  string  $driver\n             * @param  callable  $callback\n             * @return \\Illuminate\\Auth\\AuthManager\n             * @static\n             */\n            public static function viaRequest($driver, $callback)\n            {\n                /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                return $instance->viaRequest($driver, $callback);\n            }\n\n            /**\n             * Get the user resolver callback.\n             *\n             * @return \\Closure\n             * @static\n             */\n            public static function userResolver()\n            {\n                /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                return $instance->userResolver();\n            }\n\n            /**\n             * Set the callback to be used to resolve users.\n             *\n             * @param  \\Closure  $userResolver\n             * @return \\Illuminate\\Auth\\AuthManager\n             * @static\n             */\n            public static function resolveUsersUsing($userResolver)\n            {\n                /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                return $instance->resolveUsersUsing($userResolver);\n            }\n\n            /**\n             * Register a custom driver creator Closure.\n             *\n             * @param  string  $driver\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Auth\\AuthManager\n             * @static\n             */\n            public static function extend($driver, $callback)\n            {\n                /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                return $instance->extend($driver, $callback);\n            }\n\n            /**\n             * Register a custom provider creator Closure.\n             *\n             * @param  string  $name\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Auth\\AuthManager\n             * @static\n             */\n            public static function provider($name, $callback)\n            {\n                /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                return $instance->provider($name, $callback);\n            }\n\n            /**\n             * Determines if any guards have already been resolved.\n             *\n             * @return bool\n             * @static\n             */\n            public static function hasResolvedGuards()\n            {\n                /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                return $instance->hasResolvedGuards();\n            }\n\n            /**\n             * Create the user provider implementation for the driver.\n             *\n             * @param  string|null  $provider\n             * @return \\Illuminate\\Contracts\\Auth\\UserProvider|null\n             *\n             * @throws \\InvalidArgumentException\n             * @static\n             */\n            public static function createUserProvider($provider = null)\n            {\n                /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                return $instance->createUserProvider($provider);\n            }\n\n            /**\n             * Get the default user provider name.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDefaultUserProvider()\n            {\n                /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                return $instance->getDefaultUserProvider();\n            }\n\n            /**\n             * Get the currently authenticated user.\n             *\n             * @return \\Zhiyi\\Plus\\Models\\User|null\n             * @static\n             */\n            public static function user()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->user();\n            }\n\n            /**\n             * Get the ID for the currently authenticated user.\n             *\n             * @return int|string|null\n             * @static\n             */\n            public static function id()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->id();\n            }\n\n            /**\n             * Log a user into the application without sessions or cookies.\n             *\n             * @param  array  $credentials\n             * @return bool\n             * @static\n             */\n            public static function once($credentials = [])\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->once($credentials);\n            }\n\n            /**\n             * Log the given user ID into the application without sessions or cookies.\n             *\n             * @param  mixed  $id\n             * @return \\Zhiyi\\Plus\\Models\\User|false\n             * @static\n             */\n            public static function onceUsingId($id)\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->onceUsingId($id);\n            }\n\n            /**\n             * Validate a user's credentials.\n             *\n             * @param  array  $credentials\n             * @return bool\n             * @static\n             */\n            public static function validate($credentials = [])\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->validate($credentials);\n            }\n\n            /**\n             * Attempt to authenticate using HTTP Basic Auth.\n             *\n             * @param  string  $field\n             * @param  array  $extraConditions\n             * @return \\Symfony\\Component\\HttpFoundation\\Response|null\n             * @static\n             */\n            public static function basic($field = 'email', $extraConditions = [])\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->basic($field, $extraConditions);\n            }\n\n            /**\n             * Perform a stateless HTTP Basic login attempt.\n             *\n             * @param  string  $field\n             * @param  array  $extraConditions\n             * @return \\Symfony\\Component\\HttpFoundation\\Response|null\n             * @static\n             */\n            public static function onceBasic($field = 'email', $extraConditions = [])\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->onceBasic($field, $extraConditions);\n            }\n\n            /**\n             * Attempt to authenticate a user using the given credentials.\n             *\n             * @param  array  $credentials\n             * @param  bool  $remember\n             * @return bool\n             * @static\n             */\n            public static function attempt($credentials = [], $remember = false)\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->attempt($credentials, $remember);\n            }\n\n            /**\n             * Log the given user ID into the application.\n             *\n             * @param  mixed  $id\n             * @param  bool  $remember\n             * @return \\Zhiyi\\Plus\\Models\\User|false\n             * @static\n             */\n            public static function loginUsingId($id, $remember = false)\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->loginUsingId($id, $remember);\n            }\n\n            /**\n             * Log a user into the application.\n             *\n             * @param  \\Illuminate\\Contracts\\Auth\\Authenticatable  $user\n             * @param  bool  $remember\n             * @return void\n             * @static\n             */\n            public static function login($user, $remember = false)\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                $instance->login($user, $remember);\n            }\n\n            /**\n             * Log the user out of the application.\n             *\n             * @return void\n             * @static\n             */\n            public static function logout()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                $instance->logout();\n            }\n\n            /**\n             * Log the user out of the application on their current device only.\n             *\n             * This method does not cycle the \"remember\" token.\n             *\n             * @return void\n             * @static\n             */\n            public static function logoutCurrentDevice()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                $instance->logoutCurrentDevice();\n            }\n\n            /**\n             * Invalidate other sessions for the current user.\n             *\n             * The application must be using the AuthenticateSession middleware.\n             *\n             * @param  string  $password\n             * @param  string  $attribute\n             * @return bool|null\n             * @static\n             */\n            public static function logoutOtherDevices($password, $attribute = 'password')\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->logoutOtherDevices($password, $attribute);\n            }\n\n            /**\n             * Register an authentication attempt event listener.\n             *\n             * @param  mixed  $callback\n             * @return void\n             * @static\n             */\n            public static function attempting($callback)\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                $instance->attempting($callback);\n            }\n\n            /**\n             * Get the last user we attempted to authenticate.\n             *\n             * @return \\Zhiyi\\Plus\\Models\\User\n             * @static\n             */\n            public static function getLastAttempted()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->getLastAttempted();\n            }\n\n            /**\n             * Get a unique identifier for the auth session value.\n             *\n             * @return string\n             * @static\n             */\n            public static function getName()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->getName();\n            }\n\n            /**\n             * Get the name of the cookie used to store the \"recaller\".\n             *\n             * @return string\n             * @static\n             */\n            public static function getRecallerName()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->getRecallerName();\n            }\n\n            /**\n             * Determine if the user was authenticated via \"remember me\" cookie.\n             *\n             * @return bool\n             * @static\n             */\n            public static function viaRemember()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->viaRemember();\n            }\n\n            /**\n             * Get the cookie creator instance used by the guard.\n             *\n             * @return \\Illuminate\\Contracts\\Cookie\\QueueingFactory\n             *\n             * @throws \\RuntimeException\n             * @static\n             */\n            public static function getCookieJar()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->getCookieJar();\n            }\n\n            /**\n             * Set the cookie creator instance used by the guard.\n             *\n             * @param  \\Illuminate\\Contracts\\Cookie\\QueueingFactory  $cookie\n             * @return void\n             * @static\n             */\n            public static function setCookieJar($cookie)\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                $instance->setCookieJar($cookie);\n            }\n\n            /**\n             * Get the event dispatcher instance.\n             *\n             * @return \\Illuminate\\Contracts\\Events\\Dispatcher\n             * @static\n             */\n            public static function getDispatcher()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->getDispatcher();\n            }\n\n            /**\n             * Set the event dispatcher instance.\n             *\n             * @param  \\Illuminate\\Contracts\\Events\\Dispatcher  $events\n             * @return void\n             * @static\n             */\n            public static function setDispatcher($events)\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                $instance->setDispatcher($events);\n            }\n\n            /**\n             * Get the session store used by the guard.\n             *\n             * @return \\Illuminate\\Contracts\\Session\\Session\n             * @static\n             */\n            public static function getSession()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->getSession();\n            }\n\n            /**\n             * Return the currently cached user.\n             *\n             * @return \\Zhiyi\\Plus\\Models\\User|null\n             * @static\n             */\n            public static function getUser()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->getUser();\n            }\n\n            /**\n             * Set the current user.\n             *\n             * @param  \\Illuminate\\Contracts\\Auth\\Authenticatable  $user\n             * @return \\Illuminate\\Auth\\SessionGuard\n             * @static\n             */\n            public static function setUser($user)\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->setUser($user);\n            }\n\n            /**\n             * Get the current request instance.\n             *\n             * @return \\Symfony\\Component\\HttpFoundation\\Request\n             * @static\n             */\n            public static function getRequest()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->getRequest();\n            }\n\n            /**\n             * Set the current request instance.\n             *\n             * @param  \\Symfony\\Component\\HttpFoundation\\Request  $request\n             * @return \\Illuminate\\Auth\\SessionGuard\n             * @static\n             */\n            public static function setRequest($request)\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->setRequest($request);\n            }\n\n            /**\n             * Determine if current user is authenticated. If not, throw an exception.\n             *\n             * @return \\Zhiyi\\Plus\\Models\\User\n             *\n             * @throws \\Illuminate\\Auth\\AuthenticationException\n             * @static\n             */\n            public static function authenticate()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->authenticate();\n            }\n\n            /**\n             * Determine if the guard has a user instance.\n             *\n             * @return bool\n             * @static\n             */\n            public static function hasUser()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->hasUser();\n            }\n\n            /**\n             * Determine if the current user is authenticated.\n             *\n             * @return bool\n             * @static\n             */\n            public static function check()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->check();\n            }\n\n            /**\n             * Determine if the current user is a guest.\n             *\n             * @return bool\n             * @static\n             */\n            public static function guest()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->guest();\n            }\n\n            /**\n             * Get the user provider used by the guard.\n             *\n             * @return \\Illuminate\\Contracts\\Auth\\UserProvider\n             * @static\n             */\n            public static function getProvider()\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                return $instance->getProvider();\n            }\n\n            /**\n             * Set the user provider used by the guard.\n             *\n             * @param  \\Illuminate\\Contracts\\Auth\\UserProvider  $provider\n             * @return void\n             * @static\n             */\n            public static function setProvider($provider)\n            {\n                /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                $instance->setProvider($provider);\n            }\n\n            /**\n             * Register a custom macro.\n             *\n             * @param  string  $name\n             * @param  object|callable  $macro\n             * @return void\n             * @static\n             */\n            public static function macro($name, $macro)\n            {\n                \\Illuminate\\Auth\\SessionGuard::macro($name, $macro);\n            }\n\n            /**\n             * Mix another object into the class.\n             *\n             * @param  object  $mixin\n             * @param  bool  $replace\n             * @return void\n             *\n             * @throws \\ReflectionException\n             * @static\n             */\n            public static function mixin($mixin, $replace = true)\n            {\n                \\Illuminate\\Auth\\SessionGuard::mixin($mixin, $replace);\n            }\n\n            /**\n             * Checks if macro is registered.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function hasMacro($name)\n            {\n                return \\Illuminate\\Auth\\SessionGuard::hasMacro($name);\n            }\n        }\n        /**\n         * @see \\Illuminate\\View\\Compilers\\BladeCompiler\n         */\n        class Blade\n        {\n            /**\n             * Compile the view at the given path.\n             *\n             * @param  string|null  $path\n             * @return void\n             * @static\n             */\n            public static function compile($path = null)\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->compile($path);\n            }\n\n            /**\n             * Get the path currently being compiled.\n             *\n             * @return string\n             * @static\n             */\n            public static function getPath()\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                return $instance->getPath();\n            }\n\n            /**\n             * Set the path currently being compiled.\n             *\n             * @param  string  $path\n             * @return void\n             * @static\n             */\n            public static function setPath($path)\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->setPath($path);\n            }\n\n            /**\n             * Compile the given Blade template contents.\n             *\n             * @param  string  $value\n             * @return string\n             * @static\n             */\n            public static function compileString($value)\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                return $instance->compileString($value);\n            }\n\n            /**\n             * Strip the parentheses from the given expression.\n             *\n             * @param  string  $expression\n             * @return string\n             * @static\n             */\n            public static function stripParentheses($expression)\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                return $instance->stripParentheses($expression);\n            }\n\n            /**\n             * Register a custom Blade compiler.\n             *\n             * @param  callable  $compiler\n             * @return void\n             * @static\n             */\n            public static function extend($compiler)\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->extend($compiler);\n            }\n\n            /**\n             * Get the extensions used by the compiler.\n             *\n             * @return array\n             * @static\n             */\n            public static function getExtensions()\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                return $instance->getExtensions();\n            }\n\n            /**\n             * Register an \"if\" statement directive.\n             *\n             * @param  string  $name\n             * @param  callable  $callback\n             * @return void\n             * @static\n             */\n            public static function if($name, $callback)\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->if($name, $callback);\n            }\n\n            /**\n             * Check the result of a condition.\n             *\n             * @param  string  $name\n             * @param  array  $parameters\n             * @return bool\n             * @static\n             */\n            public static function check($name, ...$parameters)\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                return $instance->check($name, ...$parameters);\n            }\n\n            /**\n             * Register a class-based component alias directive.\n             *\n             * @param  string  $class\n             * @param  string|null  $alias\n             * @param  string  $prefix\n             * @return void\n             * @static\n             */\n            public static function component($class, $alias = null, $prefix = '')\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->component($class, $alias, $prefix);\n            }\n\n            /**\n             * Register an array of class-based components.\n             *\n             * @param  array  $components\n             * @param  string  $prefix\n             * @return void\n             * @static\n             */\n            public static function components($components, $prefix = '')\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->components($components, $prefix);\n            }\n\n            /**\n             * Get the registered class component aliases.\n             *\n             * @return array\n             * @static\n             */\n            public static function getClassComponentAliases()\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                return $instance->getClassComponentAliases();\n            }\n\n            /**\n             * Register a class-based component namespace.\n             *\n             * @param  string  $namespace\n             * @param  string  $prefix\n             * @return void\n             * @static\n             */\n            public static function componentNamespace($namespace, $prefix)\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->componentNamespace($namespace, $prefix);\n            }\n\n            /**\n             * Get the registered class component namespaces.\n             *\n             * @return array\n             * @static\n             */\n            public static function getClassComponentNamespaces()\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                return $instance->getClassComponentNamespaces();\n            }\n\n            /**\n             * Register a component alias directive.\n             *\n             * @param  string  $path\n             * @param  string|null  $alias\n             * @return void\n             * @static\n             */\n            public static function aliasComponent($path, $alias = null)\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->aliasComponent($path, $alias);\n            }\n\n            /**\n             * Register an include alias directive.\n             *\n             * @param  string  $path\n             * @param  string|null  $alias\n             * @return void\n             * @static\n             */\n            public static function include($path, $alias = null)\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->include($path, $alias);\n            }\n\n            /**\n             * Register an include alias directive.\n             *\n             * @param  string  $path\n             * @param  string|null  $alias\n             * @return void\n             * @static\n             */\n            public static function aliasInclude($path, $alias = null)\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->aliasInclude($path, $alias);\n            }\n\n            /**\n             * Register a handler for custom directives.\n             *\n             * @param  string  $name\n             * @param  callable  $handler\n             * @return void\n             *\n             * @throws \\InvalidArgumentException\n             * @static\n             */\n            public static function directive($name, $handler)\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->directive($name, $handler);\n            }\n\n            /**\n             * Get the list of custom directives.\n             *\n             * @return array\n             * @static\n             */\n            public static function getCustomDirectives()\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                return $instance->getCustomDirectives();\n            }\n\n            /**\n             * Register a new precompiler.\n             *\n             * @param  callable  $precompiler\n             * @return void\n             * @static\n             */\n            public static function precompiler($precompiler)\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->precompiler($precompiler);\n            }\n\n            /**\n             * Set the echo format to be used by the compiler.\n             *\n             * @param  string  $format\n             * @return void\n             * @static\n             */\n            public static function setEchoFormat($format)\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->setEchoFormat($format);\n            }\n\n            /**\n             * Set the \"echo\" format to double encode entities.\n             *\n             * @return void\n             * @static\n             */\n            public static function withDoubleEncoding()\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->withDoubleEncoding();\n            }\n\n            /**\n             * Set the \"echo\" format to not double encode entities.\n             *\n             * @return void\n             * @static\n             */\n            public static function withoutDoubleEncoding()\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->withoutDoubleEncoding();\n            }\n\n            /**\n             * Indicate that component tags should not be compiled.\n             *\n             * @return void\n             * @static\n             */\n            public static function withoutComponentTags()\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                $instance->withoutComponentTags();\n            }\n\n            /**\n             * Get the path to the compiled version of a view.\n             *\n             * @param  string  $path\n             * @return string\n             * @static\n             */\n            public static function getCompiledPath($path)\n            {            //Method inherited from \\Illuminate\\View\\Compilers\\Compiler\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                return $instance->getCompiledPath($path);\n            }\n\n            /**\n             * Determine if the view at the given path is expired.\n             *\n             * @param  string  $path\n             * @return bool\n             * @static\n             */\n            public static function isExpired($path)\n            {            //Method inherited from \\Illuminate\\View\\Compilers\\Compiler\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                return $instance->isExpired($path);\n            }\n\n            /**\n             * Get a new component hash for a component name.\n             *\n             * @param  string  $component\n             * @return string\n             * @static\n             */\n            public static function newComponentHash($component)\n            {\n                return \\Illuminate\\View\\Compilers\\BladeCompiler::newComponentHash($component);\n            }\n\n            /**\n             * Compile a class component opening.\n             *\n             * @param  string  $component\n             * @param  string  $alias\n             * @param  string  $data\n             * @param  string  $hash\n             * @return string\n             * @static\n             */\n            public static function compileClassComponentOpening($component, $alias, $data, $hash)\n            {\n                return \\Illuminate\\View\\Compilers\\BladeCompiler::compileClassComponentOpening($component, $alias, $data, $hash);\n            }\n\n            /**\n             * Compile the end-component statements into valid PHP.\n             *\n             * @return string\n             * @static\n             */\n            public static function compileEndComponentClass()\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                return $instance->compileEndComponentClass();\n            }\n\n            /**\n             * Sanitize the given component attribute value.\n             *\n             * @param  mixed  $value\n             * @return mixed\n             * @static\n             */\n            public static function sanitizeComponentAttribute($value)\n            {\n                return \\Illuminate\\View\\Compilers\\BladeCompiler::sanitizeComponentAttribute($value);\n            }\n\n            /**\n             * Compile an end-once block into valid PHP.\n             *\n             * @return string\n             * @static\n             */\n            public static function compileEndOnce()\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                return $instance->compileEndOnce();\n            }\n\n            /**\n             * Compile Blade echos into valid PHP.\n             *\n             * @param  string  $value\n             * @return string\n             * @static\n             */\n            public static function compileEchos($value)\n            {\n                /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                return $instance->compileEchos($value);\n            }\n        }\n        /**\n         * @method static \\Illuminate\\Broadcasting\\Broadcasters\\Broadcaster channel(string $channel, callable|string  $callback, array $options = [])\n         * @method static mixed auth(\\Illuminate\\Http\\Request $request)\n         *\n         * @see \\Illuminate\\Contracts\\Broadcasting\\Factory\n         */\n        class Broadcast\n        {\n            /**\n             * Register the routes for handling broadcast authentication and sockets.\n             *\n             * @param  array|null  $attributes\n             * @return void\n             * @static\n             */\n            public static function routes($attributes = null)\n            {\n                /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                $instance->routes($attributes);\n            }\n\n            /**\n             * Get the socket ID for the given request.\n             *\n             * @param  \\Illuminate\\Http\\Request|null  $request\n             * @return string|null\n             * @static\n             */\n            public static function socket($request = null)\n            {\n                /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                return $instance->socket($request);\n            }\n\n            /**\n             * Begin broadcasting an event.\n             *\n             * @param  mixed|null  $event\n             * @return \\Illuminate\\Broadcasting\\PendingBroadcast\n             * @static\n             */\n            public static function event($event = null)\n            {\n                /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                return $instance->event($event);\n            }\n\n            /**\n             * Queue the given event for broadcast.\n             *\n             * @param  mixed  $event\n             * @return void\n             * @static\n             */\n            public static function queue($event)\n            {\n                /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                $instance->queue($event);\n            }\n\n            /**\n             * Get a driver instance.\n             *\n             * @param  string|null  $driver\n             * @return mixed\n             * @static\n             */\n            public static function connection($driver = null)\n            {\n                /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                return $instance->connection($driver);\n            }\n\n            /**\n             * Get a driver instance.\n             *\n             * @param  string|null  $name\n             * @return mixed\n             * @static\n             */\n            public static function driver($name = null)\n            {\n                /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                return $instance->driver($name);\n            }\n\n            /**\n             * Get the default driver name.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDefaultDriver()\n            {\n                /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                return $instance->getDefaultDriver();\n            }\n\n            /**\n             * Set the default driver name.\n             *\n             * @param  string  $name\n             * @return void\n             * @static\n             */\n            public static function setDefaultDriver($name)\n            {\n                /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                $instance->setDefaultDriver($name);\n            }\n\n            /**\n             * Disconnect the given disk and remove from local cache.\n             *\n             * @param  string|null  $name\n             * @return void\n             * @static\n             */\n            public static function purge($name = null)\n            {\n                /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                $instance->purge($name);\n            }\n\n            /**\n             * Register a custom driver creator Closure.\n             *\n             * @param  string  $driver\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Broadcasting\\BroadcastManager\n             * @static\n             */\n            public static function extend($driver, $callback)\n            {\n                /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                return $instance->extend($driver, $callback);\n            }\n        }\n        /**\n         * @see \\Illuminate\\Contracts\\Bus\\Dispatcher\n         */\n        class Bus\n        {\n            /**\n             * Dispatch a command to its appropriate handler.\n             *\n             * @param  mixed  $command\n             * @return mixed\n             * @static\n             */\n            public static function dispatch($command)\n            {\n                /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                return $instance->dispatch($command);\n            }\n\n            /**\n             * Dispatch a command to its appropriate handler in the current process.\n             *\n             * Queuable jobs will be dispatched to the \"sync\" queue.\n             *\n             * @param  mixed  $command\n             * @param  mixed  $handler\n             * @return mixed\n             * @static\n             */\n            public static function dispatchSync($command, $handler = null)\n            {\n                /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                return $instance->dispatchSync($command, $handler);\n            }\n\n            /**\n             * Dispatch a command to its appropriate handler in the current process without using the synchronous queue.\n             *\n             * @param  mixed  $command\n             * @param  mixed  $handler\n             * @return mixed\n             * @static\n             */\n            public static function dispatchNow($command, $handler = null)\n            {\n                /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                return $instance->dispatchNow($command, $handler);\n            }\n\n            /**\n             * Attempt to find the batch with the given ID.\n             *\n             * @param  string  $batchId\n             * @return \\Illuminate\\Bus\\Batch|null\n             * @static\n             */\n            public static function findBatch($batchId)\n            {\n                /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                return $instance->findBatch($batchId);\n            }\n\n            /**\n             * Create a new batch of queueable jobs.\n             *\n             * @param  \\Illuminate\\Support\\Collection|array|mixed  $jobs\n             * @return \\Illuminate\\Bus\\PendingBatch\n             * @static\n             */\n            public static function batch($jobs)\n            {\n                /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                return $instance->batch($jobs);\n            }\n\n            /**\n             * Create a new chain of queueable jobs.\n             *\n             * @param  \\Illuminate\\Support\\Collection|array  $jobs\n             * @return \\Illuminate\\Foundation\\Bus\\PendingChain\n             * @static\n             */\n            public static function chain($jobs)\n            {\n                /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                return $instance->chain($jobs);\n            }\n\n            /**\n             * Determine if the given command has a handler.\n             *\n             * @param  mixed  $command\n             * @return bool\n             * @static\n             */\n            public static function hasCommandHandler($command)\n            {\n                /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                return $instance->hasCommandHandler($command);\n            }\n\n            /**\n             * Retrieve the handler for a command.\n             *\n             * @param  mixed  $command\n             * @return bool|mixed\n             * @static\n             */\n            public static function getCommandHandler($command)\n            {\n                /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                return $instance->getCommandHandler($command);\n            }\n\n            /**\n             * Dispatch a command to its appropriate handler behind a queue.\n             *\n             * @param  mixed  $command\n             * @return mixed\n             * @static\n             */\n            public static function dispatchToQueue($command)\n            {\n                /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                return $instance->dispatchToQueue($command);\n            }\n\n            /**\n             * Dispatch a command to its appropriate handler after the current process.\n             *\n             * @param  mixed  $command\n             * @param  mixed  $handler\n             * @return void\n             * @static\n             */\n            public static function dispatchAfterResponse($command, $handler = null)\n            {\n                /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                $instance->dispatchAfterResponse($command, $handler);\n            }\n\n            /**\n             * Set the pipes through which commands should be piped before dispatching.\n             *\n             * @param  array  $pipes\n             * @return \\Illuminate\\Bus\\Dispatcher\n             * @static\n             */\n            public static function pipeThrough($pipes)\n            {\n                /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                return $instance->pipeThrough($pipes);\n            }\n\n            /**\n             * Map a command to a handler.\n             *\n             * @param  array  $map\n             * @return \\Illuminate\\Bus\\Dispatcher\n             * @static\n             */\n            public static function map($map)\n            {\n                /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                return $instance->map($map);\n            }\n\n            /**\n             * Assert if a job was dispatched based on a truth-test callback.\n             *\n             * @param  string|\\Closure  $command\n             * @param  callable|int|null  $callback\n             * @return void\n             * @static\n             */\n            public static function assertDispatched($command, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                $instance->assertDispatched($command, $callback);\n            }\n\n            /**\n             * Assert if a job was pushed a number of times.\n             *\n             * @param  string  $command\n             * @param  int  $times\n             * @return void\n             * @static\n             */\n            public static function assertDispatchedTimes($command, $times = 1)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                $instance->assertDispatchedTimes($command, $times);\n            }\n\n            /**\n             * Determine if a job was dispatched based on a truth-test callback.\n             *\n             * @param  string|\\Closure  $command\n             * @param  callable|null  $callback\n             * @return void\n             * @static\n             */\n            public static function assertNotDispatched($command, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                $instance->assertNotDispatched($command, $callback);\n            }\n\n            /**\n             * Assert if a job was dispatched after the response was sent based on a truth-test callback.\n             *\n             * @param  string|\\Closure  $command\n             * @param  callable|int|null  $callback\n             * @return void\n             * @static\n             */\n            public static function assertDispatchedAfterResponse($command, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                $instance->assertDispatchedAfterResponse($command, $callback);\n            }\n\n            /**\n             * Assert if a job was pushed after the response was sent a number of times.\n             *\n             * @param  string  $command\n             * @param  int  $times\n             * @return void\n             * @static\n             */\n            public static function assertDispatchedAfterResponseTimes($command, $times = 1)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                $instance->assertDispatchedAfterResponseTimes($command, $times);\n            }\n\n            /**\n             * Determine if a job was dispatched based on a truth-test callback.\n             *\n             * @param  string|\\Closure  $command\n             * @param  callable|null  $callback\n             * @return void\n             * @static\n             */\n            public static function assertNotDispatchedAfterResponse($command, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                $instance->assertNotDispatchedAfterResponse($command, $callback);\n            }\n\n            /**\n             * Assert if a batch was dispatched based on a truth-test callback.\n             *\n             * @param  callable  $callback\n             * @return void\n             * @static\n             */\n            public static function assertBatched($callback)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                $instance->assertBatched($callback);\n            }\n\n            /**\n             * Get all of the jobs matching a truth-test callback.\n             *\n             * @param  string  $command\n             * @param  callable|null  $callback\n             * @return \\Illuminate\\Support\\Collection\n             * @static\n             */\n            public static function dispatched($command, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                return $instance->dispatched($command, $callback);\n            }\n\n            /**\n             * Get all of the jobs dispatched after the response was sent matching a truth-test callback.\n             *\n             * @param  string  $command\n             * @param  callable|null  $callback\n             * @return \\Illuminate\\Support\\Collection\n             * @static\n             */\n            public static function dispatchedAfterResponse($command, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                return $instance->dispatchedAfterResponse($command, $callback);\n            }\n\n            /**\n             * Get all of the pending batches matching a truth-test callback.\n             *\n             * @param  callable  $callback\n             * @return \\Illuminate\\Support\\Collection\n             * @static\n             */\n            public static function batched($callback)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                return $instance->batched($callback);\n            }\n\n            /**\n             * Determine if there are any stored commands for a given class.\n             *\n             * @param  string  $command\n             * @return bool\n             * @static\n             */\n            public static function hasDispatched($command)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                return $instance->hasDispatched($command);\n            }\n\n            /**\n             * Determine if there are any stored commands for a given class.\n             *\n             * @param  string  $command\n             * @return bool\n             * @static\n             */\n            public static function hasDispatchedAfterResponse($command)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                return $instance->hasDispatchedAfterResponse($command);\n            }\n\n            /**\n             * Record the fake pending batch dispatch.\n             *\n             * @param  \\Illuminate\\Bus\\PendingBatch  $pendingBatch\n             * @return \\Illuminate\\Bus\\Batch\n             * @static\n             */\n            public static function recordPendingBatch($pendingBatch)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                return $instance->recordPendingBatch($pendingBatch);\n            }\n        }\n        /**\n         * @see \\Illuminate\\Cache\\CacheManager\n         * @see \\Illuminate\\Cache\\Repository\n         */\n        class Cache\n        {\n            /**\n             * Get a cache store instance by name, wrapped in a repository.\n             *\n             * @param  string|null  $name\n             * @return \\Illuminate\\Contracts\\Cache\\Repository\n             * @static\n             */\n            public static function store($name = null)\n            {\n                /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                return $instance->store($name);\n            }\n\n            /**\n             * Get a cache driver instance.\n             *\n             * @param  string|null  $driver\n             * @return \\Illuminate\\Contracts\\Cache\\Repository\n             * @static\n             */\n            public static function driver($driver = null)\n            {\n                /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                return $instance->driver($driver);\n            }\n\n            /**\n             * Create a new cache repository with the given implementation.\n             *\n             * @param  \\Illuminate\\Contracts\\Cache\\Store  $store\n             * @return \\Illuminate\\Cache\\Repository\n             * @static\n             */\n            public static function repository($store)\n            {\n                /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                return $instance->repository($store);\n            }\n\n            /**\n             * Re-set the event dispatcher on all resolved cache repositories.\n             *\n             * @return void\n             * @static\n             */\n            public static function refreshEventDispatcher()\n            {\n                /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                $instance->refreshEventDispatcher();\n            }\n\n            /**\n             * Get the default cache driver name.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDefaultDriver()\n            {\n                /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                return $instance->getDefaultDriver();\n            }\n\n            /**\n             * Set the default cache driver name.\n             *\n             * @param  string  $name\n             * @return void\n             * @static\n             */\n            public static function setDefaultDriver($name)\n            {\n                /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                $instance->setDefaultDriver($name);\n            }\n\n            /**\n             * Unset the given driver instances.\n             *\n             * @param  array|string|null  $name\n             * @return \\Illuminate\\Cache\\CacheManager\n             * @static\n             */\n            public static function forgetDriver($name = null)\n            {\n                /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                return $instance->forgetDriver($name);\n            }\n\n            /**\n             * Disconnect the given driver and remove from local cache.\n             *\n             * @param  string|null  $name\n             * @return void\n             * @static\n             */\n            public static function purge($name = null)\n            {\n                /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                $instance->purge($name);\n            }\n\n            /**\n             * Register a custom driver creator Closure.\n             *\n             * @param  string  $driver\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Cache\\CacheManager\n             * @static\n             */\n            public static function extend($driver, $callback)\n            {\n                /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                return $instance->extend($driver, $callback);\n            }\n\n            /**\n             * Determine if an item exists in the cache.\n             *\n             * @param  string  $key\n             * @return bool\n             * @static\n             */\n            public static function has($key)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->has($key);\n            }\n\n            /**\n             * Determine if an item doesn't exist in the cache.\n             *\n             * @param  string  $key\n             * @return bool\n             * @static\n             */\n            public static function missing($key)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->missing($key);\n            }\n\n            /**\n             * Retrieve an item from the cache by key.\n             *\n             * @param  string  $key\n             * @param  mixed  $default\n             * @return mixed\n             * @static\n             */\n            public static function get($key, $default = null)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->get($key, $default);\n            }\n\n            /**\n             * Retrieve multiple items from the cache by key.\n             *\n             * Items not found in the cache will have a null value.\n             *\n             * @param  array  $keys\n             * @return array\n             * @static\n             */\n            public static function many($keys)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->many($keys);\n            }\n\n            /**\n             * Obtains multiple cache items by their unique keys.\n             *\n             * @param  \\Psr\\SimpleCache\\iterable  $keys  A list of keys that can obtained in a single operation.\n             * @param  mixed  $default  Default value to return for keys that do not exist.\n             * @return \\Psr\\SimpleCache\\iterable A list of key => value pairs. Cache keys that do not exist or are stale will have $default as value.\n             *\n             * @throws \\Psr\\SimpleCache\\InvalidArgumentException\n             *                                                   MUST be thrown if $keys is neither an array nor a Traversable,\n             *                                                   or if any of the $keys are not a legal value.\n             * @static\n             */\n            public static function getMultiple($keys, $default = null)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->getMultiple($keys, $default);\n            }\n\n            /**\n             * Retrieve an item from the cache and delete it.\n             *\n             * @param  string  $key\n             * @param  mixed  $default\n             * @return mixed\n             * @static\n             */\n            public static function pull($key, $default = null)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->pull($key, $default);\n            }\n\n            /**\n             * Store an item in the cache.\n             *\n             * @param  string  $key\n             * @param  mixed  $value\n             * @param  \\DateTimeInterface|\\DateInterval|int|null  $ttl\n             * @return bool\n             * @static\n             */\n            public static function put($key, $value, $ttl = null)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->put($key, $value, $ttl);\n            }\n\n            /**\n             * Persists data in the cache, uniquely referenced by a key with an optional expiration TTL time.\n             *\n             * @param  string  $key  The key of the item to store.\n             * @param  mixed  $value  The value of the item to store, must be serializable.\n             * @param  null|int|\\DateInterval  $ttl  Optional. The TTL value of this item. If no value is sent and\n             *                                       the driver supports TTL then the library may set a default value\n             *                                       for it or let the driver take care of that.\n             * @return bool True on success and false on failure.\n             *\n             * @throws \\Psr\\SimpleCache\\InvalidArgumentException\n             *                                                   MUST be thrown if the $key string is not a legal value.\n             * @static\n             */\n            public static function set($key, $value, $ttl = null)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->set($key, $value, $ttl);\n            }\n\n            /**\n             * Store multiple items in the cache for a given number of seconds.\n             *\n             * @param  array  $values\n             * @param  \\DateTimeInterface|\\DateInterval|int|null  $ttl\n             * @return bool\n             * @static\n             */\n            public static function putMany($values, $ttl = null)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->putMany($values, $ttl);\n            }\n\n            /**\n             * Persists a set of key => value pairs in the cache, with an optional TTL.\n             *\n             * @param  \\Psr\\SimpleCache\\iterable  $values  A list of key => value pairs for a multiple-set operation.\n             * @param  null|int|\\DateInterval  $ttl  Optional. The TTL value of this item. If no value is sent and\n             *                                       the driver supports TTL then the library may set a default value\n             *                                       for it or let the driver take care of that.\n             * @return bool True on success and false on failure.\n             *\n             * @throws \\Psr\\SimpleCache\\InvalidArgumentException\n             *                                                   MUST be thrown if $values is neither an array nor a Traversable,\n             *                                                   or if any of the $values are not a legal value.\n             * @static\n             */\n            public static function setMultiple($values, $ttl = null)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->setMultiple($values, $ttl);\n            }\n\n            /**\n             * Store an item in the cache if the key does not exist.\n             *\n             * @param  string  $key\n             * @param  mixed  $value\n             * @param  \\DateTimeInterface|\\DateInterval|int|null  $ttl\n             * @return bool\n             * @static\n             */\n            public static function add($key, $value, $ttl = null)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->add($key, $value, $ttl);\n            }\n\n            /**\n             * Increment the value of an item in the cache.\n             *\n             * @param  string  $key\n             * @param  mixed  $value\n             * @return int|bool\n             * @static\n             */\n            public static function increment($key, $value = 1)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->increment($key, $value);\n            }\n\n            /**\n             * Decrement the value of an item in the cache.\n             *\n             * @param  string  $key\n             * @param  mixed  $value\n             * @return int|bool\n             * @static\n             */\n            public static function decrement($key, $value = 1)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->decrement($key, $value);\n            }\n\n            /**\n             * Store an item in the cache indefinitely.\n             *\n             * @param  string  $key\n             * @param  mixed  $value\n             * @return bool\n             * @static\n             */\n            public static function forever($key, $value)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->forever($key, $value);\n            }\n\n            /**\n             * Get an item from the cache, or execute the given Closure and store the result.\n             *\n             * @param  string  $key\n             * @param  \\DateTimeInterface|\\DateInterval|int|null  $ttl\n             * @param  \\Closure  $callback\n             * @return mixed\n             * @static\n             */\n            public static function remember($key, $ttl, $callback)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->remember($key, $ttl, $callback);\n            }\n\n            /**\n             * Get an item from the cache, or execute the given Closure and store the result forever.\n             *\n             * @param  string  $key\n             * @param  \\Closure  $callback\n             * @return mixed\n             * @static\n             */\n            public static function sear($key, $callback)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->sear($key, $callback);\n            }\n\n            /**\n             * Get an item from the cache, or execute the given Closure and store the result forever.\n             *\n             * @param  string  $key\n             * @param  \\Closure  $callback\n             * @return mixed\n             * @static\n             */\n            public static function rememberForever($key, $callback)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->rememberForever($key, $callback);\n            }\n\n            /**\n             * Remove an item from the cache.\n             *\n             * @param  string  $key\n             * @return bool\n             * @static\n             */\n            public static function forget($key)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->forget($key);\n            }\n\n            /**\n             * Delete an item from the cache by its unique key.\n             *\n             * @param  string  $key  The unique cache key of the item to delete.\n             * @return bool True if the item was successfully removed. False if there was an error.\n             *\n             * @throws \\Psr\\SimpleCache\\InvalidArgumentException\n             *                                                   MUST be thrown if the $key string is not a legal value.\n             * @static\n             */\n            public static function delete($key)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->delete($key);\n            }\n\n            /**\n             * Deletes multiple cache items in a single operation.\n             *\n             * @param  \\Psr\\SimpleCache\\iterable  $keys  A list of string-based keys to be deleted.\n             * @return bool True if the items were successfully removed. False if there was an error.\n             *\n             * @throws \\Psr\\SimpleCache\\InvalidArgumentException\n             *                                                   MUST be thrown if $keys is neither an array nor a Traversable,\n             *                                                   or if any of the $keys are not a legal value.\n             * @static\n             */\n            public static function deleteMultiple($keys)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->deleteMultiple($keys);\n            }\n\n            /**\n             * Wipes clean the entire cache's keys.\n             *\n             * @return bool True on success and false on failure.\n             * @static\n             */\n            public static function clear()\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->clear();\n            }\n\n            /**\n             * Begin executing a new tags operation if the store supports it.\n             *\n             * @param  array|mixed  $names\n             * @return \\Illuminate\\Cache\\TaggedCache\n             *\n             * @throws \\BadMethodCallException\n             * @static\n             */\n            public static function tags($names)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->tags($names);\n            }\n\n            /**\n             * Determine if the current store supports tags.\n             *\n             * @return bool\n             * @static\n             */\n            public static function supportsTags()\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->supportsTags();\n            }\n\n            /**\n             * Get the default cache time.\n             *\n             * @return int|null\n             * @static\n             */\n            public static function getDefaultCacheTime()\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->getDefaultCacheTime();\n            }\n\n            /**\n             * Set the default cache time in seconds.\n             *\n             * @param  int|null  $seconds\n             * @return \\Illuminate\\Cache\\Repository\n             * @static\n             */\n            public static function setDefaultCacheTime($seconds)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->setDefaultCacheTime($seconds);\n            }\n\n            /**\n             * Get the cache store implementation.\n             *\n             * @return \\Illuminate\\Contracts\\Cache\\Store\n             * @static\n             */\n            public static function getStore()\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->getStore();\n            }\n\n            /**\n             * Get the event dispatcher instance.\n             *\n             * @return \\Illuminate\\Contracts\\Events\\Dispatcher\n             * @static\n             */\n            public static function getEventDispatcher()\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->getEventDispatcher();\n            }\n\n            /**\n             * Set the event dispatcher instance.\n             *\n             * @param  \\Illuminate\\Contracts\\Events\\Dispatcher  $events\n             * @return void\n             * @static\n             */\n            public static function setEventDispatcher($events)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                $instance->setEventDispatcher($events);\n            }\n\n            /**\n             * Determine if a cached value exists.\n             *\n             * @param  string  $key\n             * @return bool\n             * @static\n             */\n            public static function offsetExists($key)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->offsetExists($key);\n            }\n\n            /**\n             * Retrieve an item from the cache by key.\n             *\n             * @param  string  $key\n             * @return mixed\n             * @static\n             */\n            public static function offsetGet($key)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->offsetGet($key);\n            }\n\n            /**\n             * Store an item in the cache for the default time.\n             *\n             * @param  string  $key\n             * @param  mixed  $value\n             * @return void\n             * @static\n             */\n            public static function offsetSet($key, $value)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                $instance->offsetSet($key, $value);\n            }\n\n            /**\n             * Remove an item from the cache.\n             *\n             * @param  string  $key\n             * @return void\n             * @static\n             */\n            public static function offsetUnset($key)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                $instance->offsetUnset($key);\n            }\n\n            /**\n             * Register a custom macro.\n             *\n             * @param  string  $name\n             * @param  object|callable  $macro\n             * @return void\n             * @static\n             */\n            public static function macro($name, $macro)\n            {\n                \\Illuminate\\Cache\\Repository::macro($name, $macro);\n            }\n\n            /**\n             * Mix another object into the class.\n             *\n             * @param  object  $mixin\n             * @param  bool  $replace\n             * @return void\n             *\n             * @throws \\ReflectionException\n             * @static\n             */\n            public static function mixin($mixin, $replace = true)\n            {\n                \\Illuminate\\Cache\\Repository::mixin($mixin, $replace);\n            }\n\n            /**\n             * Checks if macro is registered.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function hasMacro($name)\n            {\n                return \\Illuminate\\Cache\\Repository::hasMacro($name);\n            }\n\n            /**\n             * Dynamically handle calls to the class.\n             *\n             * @param  string  $method\n             * @param  array  $parameters\n             * @return mixed\n             *\n             * @throws \\BadMethodCallException\n             * @static\n             */\n            public static function macroCall($method, $parameters)\n            {\n                /** @var \\Illuminate\\Cache\\Repository $instance */\n                return $instance->macroCall($method, $parameters);\n            }\n\n            /**\n             * Get a lock instance.\n             *\n             * @param  string  $name\n             * @param  int  $seconds\n             * @param  string|null  $owner\n             * @return \\Illuminate\\Contracts\\Cache\\Lock\n             * @static\n             */\n            public static function lock($name, $seconds = 0, $owner = null)\n            {\n                /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                return $instance->lock($name, $seconds, $owner);\n            }\n\n            /**\n             * Restore a lock instance using the owner identifier.\n             *\n             * @param  string  $name\n             * @param  string  $owner\n             * @return \\Illuminate\\Contracts\\Cache\\Lock\n             * @static\n             */\n            public static function restoreLock($name, $owner)\n            {\n                /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                return $instance->restoreLock($name, $owner);\n            }\n\n            /**\n             * Remove all items from the cache.\n             *\n             * @return bool\n             * @static\n             */\n            public static function flush()\n            {\n                /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                return $instance->flush();\n            }\n\n            /**\n             * Get the Redis connection instance.\n             *\n             * @return \\Illuminate\\Redis\\Connections\\Connection\n             * @static\n             */\n            public static function connection()\n            {\n                /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                return $instance->connection();\n            }\n\n            /**\n             * Set the connection name to be used.\n             *\n             * @param  string  $connection\n             * @return void\n             * @static\n             */\n            public static function setConnection($connection)\n            {\n                /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                $instance->setConnection($connection);\n            }\n\n            /**\n             * Get the Redis database instance.\n             *\n             * @return \\Illuminate\\Contracts\\Redis\\Factory\n             * @static\n             */\n            public static function getRedis()\n            {\n                /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                return $instance->getRedis();\n            }\n\n            /**\n             * Get the cache key prefix.\n             *\n             * @return string\n             * @static\n             */\n            public static function getPrefix()\n            {\n                /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                return $instance->getPrefix();\n            }\n\n            /**\n             * Set the cache key prefix.\n             *\n             * @param  string  $prefix\n             * @return void\n             * @static\n             */\n            public static function setPrefix($prefix)\n            {\n                /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                $instance->setPrefix($prefix);\n            }\n        }\n        /**\n         * @see \\Illuminate\\Config\\Repository\n         */\n        class Config\n        {\n            /**\n             * Determine if the given configuration value exists.\n             *\n             * @param  string  $key\n             * @return bool\n             * @static\n             */\n            public static function has($key)\n            {\n                /** @var \\Illuminate\\Config\\Repository $instance */\n                return $instance->has($key);\n            }\n\n            /**\n             * Get the specified configuration value.\n             *\n             * @param  array|string  $key\n             * @param  mixed  $default\n             * @return mixed\n             * @static\n             */\n            public static function get($key, $default = null)\n            {\n                /** @var \\Illuminate\\Config\\Repository $instance */\n                return $instance->get($key, $default);\n            }\n\n            /**\n             * Get many configuration values.\n             *\n             * @param  array  $keys\n             * @return array\n             * @static\n             */\n            public static function getMany($keys)\n            {\n                /** @var \\Illuminate\\Config\\Repository $instance */\n                return $instance->getMany($keys);\n            }\n\n            /**\n             * Set a given configuration value.\n             *\n             * @param  array|string  $key\n             * @param  mixed  $value\n             * @return void\n             * @static\n             */\n            public static function set($key, $value = null)\n            {\n                /** @var \\Illuminate\\Config\\Repository $instance */\n                $instance->set($key, $value);\n            }\n\n            /**\n             * Prepend a value onto an array configuration value.\n             *\n             * @param  string  $key\n             * @param  mixed  $value\n             * @return void\n             * @static\n             */\n            public static function prepend($key, $value)\n            {\n                /** @var \\Illuminate\\Config\\Repository $instance */\n                $instance->prepend($key, $value);\n            }\n\n            /**\n             * Push a value onto an array configuration value.\n             *\n             * @param  string  $key\n             * @param  mixed  $value\n             * @return void\n             * @static\n             */\n            public static function push($key, $value)\n            {\n                /** @var \\Illuminate\\Config\\Repository $instance */\n                $instance->push($key, $value);\n            }\n\n            /**\n             * Get all of the configuration items for the application.\n             *\n             * @return array\n             * @static\n             */\n            public static function all()\n            {\n                /** @var \\Illuminate\\Config\\Repository $instance */\n                return $instance->all();\n            }\n\n            /**\n             * Determine if the given configuration option exists.\n             *\n             * @param  string  $key\n             * @return bool\n             * @static\n             */\n            public static function offsetExists($key)\n            {\n                /** @var \\Illuminate\\Config\\Repository $instance */\n                return $instance->offsetExists($key);\n            }\n\n            /**\n             * Get a configuration option.\n             *\n             * @param  string  $key\n             * @return mixed\n             * @static\n             */\n            public static function offsetGet($key)\n            {\n                /** @var \\Illuminate\\Config\\Repository $instance */\n                return $instance->offsetGet($key);\n            }\n\n            /**\n             * Set a configuration option.\n             *\n             * @param  string  $key\n             * @param  mixed  $value\n             * @return void\n             * @static\n             */\n            public static function offsetSet($key, $value)\n            {\n                /** @var \\Illuminate\\Config\\Repository $instance */\n                $instance->offsetSet($key, $value);\n            }\n\n            /**\n             * Unset a configuration option.\n             *\n             * @param  string  $key\n             * @return void\n             * @static\n             */\n            public static function offsetUnset($key)\n            {\n                /** @var \\Illuminate\\Config\\Repository $instance */\n                $instance->offsetUnset($key);\n            }\n        }\n        /**\n         * @see \\Illuminate\\Cookie\\CookieJar\n         */\n        class Cookie\n        {\n            /**\n             * Create a new cookie instance.\n             *\n             * @param  string  $name\n             * @param  string  $value\n             * @param  int  $minutes\n             * @param  string|null  $path\n             * @param  string|null  $domain\n             * @param  bool|null  $secure\n             * @param  bool  $httpOnly\n             * @param  bool  $raw\n             * @param  string|null  $sameSite\n             * @return \\Symfony\\Component\\HttpFoundation\\Cookie\n             * @static\n             */\n            public static function make($name, $value, $minutes = 0, $path = null, $domain = null, $secure = null, $httpOnly = true, $raw = false, $sameSite = null)\n            {\n                /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                return $instance->make($name, $value, $minutes, $path, $domain, $secure, $httpOnly, $raw, $sameSite);\n            }\n\n            /**\n             * Create a cookie that lasts \"forever\" (five years).\n             *\n             * @param  string  $name\n             * @param  string  $value\n             * @param  string|null  $path\n             * @param  string|null  $domain\n             * @param  bool|null  $secure\n             * @param  bool  $httpOnly\n             * @param  bool  $raw\n             * @param  string|null  $sameSite\n             * @return \\Symfony\\Component\\HttpFoundation\\Cookie\n             * @static\n             */\n            public static function forever($name, $value, $path = null, $domain = null, $secure = null, $httpOnly = true, $raw = false, $sameSite = null)\n            {\n                /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                return $instance->forever($name, $value, $path, $domain, $secure, $httpOnly, $raw, $sameSite);\n            }\n\n            /**\n             * Expire the given cookie.\n             *\n             * @param  string  $name\n             * @param  string|null  $path\n             * @param  string|null  $domain\n             * @return \\Symfony\\Component\\HttpFoundation\\Cookie\n             * @static\n             */\n            public static function forget($name, $path = null, $domain = null)\n            {\n                /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                return $instance->forget($name, $path, $domain);\n            }\n\n            /**\n             * Determine if a cookie has been queued.\n             *\n             * @param  string  $key\n             * @param  string|null  $path\n             * @return bool\n             * @static\n             */\n            public static function hasQueued($key, $path = null)\n            {\n                /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                return $instance->hasQueued($key, $path);\n            }\n\n            /**\n             * Get a queued cookie instance.\n             *\n             * @param  string  $key\n             * @param  mixed  $default\n             * @param  string|null  $path\n             * @return \\Symfony\\Component\\HttpFoundation\\Cookie|null\n             * @static\n             */\n            public static function queued($key, $default = null, $path = null)\n            {\n                /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                return $instance->queued($key, $default, $path);\n            }\n\n            /**\n             * Queue a cookie to send with the next response.\n             *\n             * @param  array  $parameters\n             * @return void\n             * @static\n             */\n            public static function queue(...$parameters)\n            {\n                /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                $instance->queue(...$parameters);\n            }\n\n            /**\n             * Remove a cookie from the queue.\n             *\n             * @param  string  $name\n             * @param  string|null  $path\n             * @return void\n             * @static\n             */\n            public static function unqueue($name, $path = null)\n            {\n                /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                $instance->unqueue($name, $path);\n            }\n\n            /**\n             * Set the default path and domain for the jar.\n             *\n             * @param  string  $path\n             * @param  string  $domain\n             * @param  bool  $secure\n             * @param  string|null  $sameSite\n             * @return \\Illuminate\\Cookie\\CookieJar\n             * @static\n             */\n            public static function setDefaultPathAndDomain($path, $domain, $secure = false, $sameSite = null)\n            {\n                /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                return $instance->setDefaultPathAndDomain($path, $domain, $secure, $sameSite);\n            }\n\n            /**\n             * Get the cookies which have been queued for the next request.\n             *\n             * @return \\Symfony\\Component\\HttpFoundation\\Cookie[]\n             * @static\n             */\n            public static function getQueuedCookies()\n            {\n                /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                return $instance->getQueuedCookies();\n            }\n\n            /**\n             * Register a custom macro.\n             *\n             * @param  string  $name\n             * @param  object|callable  $macro\n             * @return void\n             * @static\n             */\n            public static function macro($name, $macro)\n            {\n                \\Illuminate\\Cookie\\CookieJar::macro($name, $macro);\n            }\n\n            /**\n             * Mix another object into the class.\n             *\n             * @param  object  $mixin\n             * @param  bool  $replace\n             * @return void\n             *\n             * @throws \\ReflectionException\n             * @static\n             */\n            public static function mixin($mixin, $replace = true)\n            {\n                \\Illuminate\\Cookie\\CookieJar::mixin($mixin, $replace);\n            }\n\n            /**\n             * Checks if macro is registered.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function hasMacro($name)\n            {\n                return \\Illuminate\\Cookie\\CookieJar::hasMacro($name);\n            }\n        }\n        /**\n         * @see \\Illuminate\\Encryption\\Encrypter\n         */\n        class Crypt\n        {\n            /**\n             * Determine if the given key and cipher combination is valid.\n             *\n             * @param  string  $key\n             * @param  string  $cipher\n             * @return bool\n             * @static\n             */\n            public static function supported($key, $cipher)\n            {\n                return \\Illuminate\\Encryption\\Encrypter::supported($key, $cipher);\n            }\n\n            /**\n             * Create a new encryption key for the given cipher.\n             *\n             * @param  string  $cipher\n             * @return string\n             * @static\n             */\n            public static function generateKey($cipher)\n            {\n                return \\Illuminate\\Encryption\\Encrypter::generateKey($cipher);\n            }\n\n            /**\n             * Encrypt the given value.\n             *\n             * @param  mixed  $value\n             * @param  bool  $serialize\n             * @return string\n             *\n             * @throws \\Illuminate\\Contracts\\Encryption\\EncryptException\n             * @static\n             */\n            public static function encrypt($value, $serialize = true)\n            {\n                /** @var \\Illuminate\\Encryption\\Encrypter $instance */\n                return $instance->encrypt($value, $serialize);\n            }\n\n            /**\n             * Encrypt a string without serialization.\n             *\n             * @param  string  $value\n             * @return string\n             *\n             * @throws \\Illuminate\\Contracts\\Encryption\\EncryptException\n             * @static\n             */\n            public static function encryptString($value)\n            {\n                /** @var \\Illuminate\\Encryption\\Encrypter $instance */\n                return $instance->encryptString($value);\n            }\n\n            /**\n             * Decrypt the given value.\n             *\n             * @param  string  $payload\n             * @param  bool  $unserialize\n             * @return mixed\n             *\n             * @throws \\Illuminate\\Contracts\\Encryption\\DecryptException\n             * @static\n             */\n            public static function decrypt($payload, $unserialize = true)\n            {\n                /** @var \\Illuminate\\Encryption\\Encrypter $instance */\n                return $instance->decrypt($payload, $unserialize);\n            }\n\n            /**\n             * Decrypt the given string without unserialization.\n             *\n             * @param  string  $payload\n             * @return string\n             *\n             * @throws \\Illuminate\\Contracts\\Encryption\\DecryptException\n             * @static\n             */\n            public static function decryptString($payload)\n            {\n                /** @var \\Illuminate\\Encryption\\Encrypter $instance */\n                return $instance->decryptString($payload);\n            }\n\n            /**\n             * Get the encryption key.\n             *\n             * @return string\n             * @static\n             */\n            public static function getKey()\n            {\n                /** @var \\Illuminate\\Encryption\\Encrypter $instance */\n                return $instance->getKey();\n            }\n        }\n        /**\n         * @see \\Illuminate\\Database\\DatabaseManager\n         * @see \\Illuminate\\Database\\Connection\n         */\n        class DB\n        {\n            /**\n             * Get a database connection instance.\n             *\n             * @param  string|null  $name\n             * @return \\Illuminate\\Database\\Connection\n             * @static\n             */\n            public static function connection($name = null)\n            {\n                /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                return $instance->connection($name);\n            }\n\n            /**\n             * Disconnect from the given database and remove from local cache.\n             *\n             * @param  string|null  $name\n             * @return void\n             * @static\n             */\n            public static function purge($name = null)\n            {\n                /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                $instance->purge($name);\n            }\n\n            /**\n             * Disconnect from the given database.\n             *\n             * @param  string|null  $name\n             * @return void\n             * @static\n             */\n            public static function disconnect($name = null)\n            {\n                /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                $instance->disconnect($name);\n            }\n\n            /**\n             * Reconnect to the given database.\n             *\n             * @param  string|null  $name\n             * @return \\Illuminate\\Database\\Connection\n             * @static\n             */\n            public static function reconnect($name = null)\n            {\n                /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                return $instance->reconnect($name);\n            }\n\n            /**\n             * Set the default database connection for the callback execution.\n             *\n             * @param  string  $name\n             * @param  callable  $callback\n             * @return mixed\n             * @static\n             */\n            public static function usingConnection($name, $callback)\n            {\n                /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                return $instance->usingConnection($name, $callback);\n            }\n\n            /**\n             * Get the default connection name.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDefaultConnection()\n            {\n                /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                return $instance->getDefaultConnection();\n            }\n\n            /**\n             * Set the default connection name.\n             *\n             * @param  string  $name\n             * @return void\n             * @static\n             */\n            public static function setDefaultConnection($name)\n            {\n                /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                $instance->setDefaultConnection($name);\n            }\n\n            /**\n             * Get all of the support drivers.\n             *\n             * @return array\n             * @static\n             */\n            public static function supportedDrivers()\n            {\n                /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                return $instance->supportedDrivers();\n            }\n\n            /**\n             * Get all of the drivers that are actually available.\n             *\n             * @return array\n             * @static\n             */\n            public static function availableDrivers()\n            {\n                /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                return $instance->availableDrivers();\n            }\n\n            /**\n             * Register an extension connection resolver.\n             *\n             * @param  string  $name\n             * @param  callable  $resolver\n             * @return void\n             * @static\n             */\n            public static function extend($name, $resolver)\n            {\n                /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                $instance->extend($name, $resolver);\n            }\n\n            /**\n             * Return all of the created connections.\n             *\n             * @return array\n             * @static\n             */\n            public static function getConnections()\n            {\n                /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                return $instance->getConnections();\n            }\n\n            /**\n             * Set the database reconnector callback.\n             *\n             * @param  callable  $reconnector\n             * @return void\n             * @static\n             */\n            public static function setReconnector($reconnector)\n            {\n                /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                $instance->setReconnector($reconnector);\n            }\n\n            /**\n             * Determine if the connected database is a MariaDB database.\n             *\n             * @return bool\n             * @static\n             */\n            public static function isMaria()\n            {\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->isMaria();\n            }\n\n            /**\n             * Get a schema builder instance for the connection.\n             *\n             * @return \\Illuminate\\Database\\Schema\\MySqlBuilder\n             * @static\n             */\n            public static function getSchemaBuilder()\n            {\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getSchemaBuilder();\n            }\n\n            /**\n             * Get the schema state for the connection.\n             *\n             * @param  \\Illuminate\\Filesystem\\Filesystem|null  $files\n             * @param  callable|null  $processFactory\n             * @return \\Illuminate\\Database\\Schema\\MySqlSchemaState\n             * @static\n             */\n            public static function getSchemaState($files = null, $processFactory = null)\n            {\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getSchemaState($files, $processFactory);\n            }\n\n            /**\n             * Set the query grammar to the default implementation.\n             *\n             * @return void\n             * @static\n             */\n            public static function useDefaultQueryGrammar()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                $instance->useDefaultQueryGrammar();\n            }\n\n            /**\n             * Set the schema grammar to the default implementation.\n             *\n             * @return void\n             * @static\n             */\n            public static function useDefaultSchemaGrammar()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                $instance->useDefaultSchemaGrammar();\n            }\n\n            /**\n             * Set the query post processor to the default implementation.\n             *\n             * @return void\n             * @static\n             */\n            public static function useDefaultPostProcessor()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                $instance->useDefaultPostProcessor();\n            }\n\n            /**\n             * Begin a fluent query against a database table.\n             *\n             * @param  \\Closure|\\Illuminate\\Database\\Query\\Builder|string  $table\n             * @param  string|null  $as\n             * @return \\Illuminate\\Database\\Query\\Builder\n             * @static\n             */\n            public static function table($table, $as = null)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->table($table, $as);\n            }\n\n            /**\n             * Get a new query builder instance.\n             *\n             * @return \\Illuminate\\Database\\Query\\Builder\n             * @static\n             */\n            public static function query()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->query();\n            }\n\n            /**\n             * Run a select statement and return a single result.\n             *\n             * @param  string  $query\n             * @param  array  $bindings\n             * @param  bool  $useReadPdo\n             * @return mixed\n             * @static\n             */\n            public static function selectOne($query, $bindings = [], $useReadPdo = true)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->selectOne($query, $bindings, $useReadPdo);\n            }\n\n            /**\n             * Run a select statement against the database.\n             *\n             * @param  string  $query\n             * @param  array  $bindings\n             * @return array\n             * @static\n             */\n            public static function selectFromWriteConnection($query, $bindings = [])\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->selectFromWriteConnection($query, $bindings);\n            }\n\n            /**\n             * Run a select statement against the database.\n             *\n             * @param  string  $query\n             * @param  array  $bindings\n             * @param  bool  $useReadPdo\n             * @return array\n             * @static\n             */\n            public static function select($query, $bindings = [], $useReadPdo = true)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->select($query, $bindings, $useReadPdo);\n            }\n\n            /**\n             * Run a select statement against the database and returns a generator.\n             *\n             * @param  string  $query\n             * @param  array  $bindings\n             * @param  bool  $useReadPdo\n             * @return \\Generator\n             * @static\n             */\n            public static function cursor($query, $bindings = [], $useReadPdo = true)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->cursor($query, $bindings, $useReadPdo);\n            }\n\n            /**\n             * Run an insert statement against the database.\n             *\n             * @param  string  $query\n             * @param  array  $bindings\n             * @return bool\n             * @static\n             */\n            public static function insert($query, $bindings = [])\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->insert($query, $bindings);\n            }\n\n            /**\n             * Run an update statement against the database.\n             *\n             * @param  string  $query\n             * @param  array  $bindings\n             * @return int\n             * @static\n             */\n            public static function update($query, $bindings = [])\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->update($query, $bindings);\n            }\n\n            /**\n             * Run a delete statement against the database.\n             *\n             * @param  string  $query\n             * @param  array  $bindings\n             * @return int\n             * @static\n             */\n            public static function delete($query, $bindings = [])\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->delete($query, $bindings);\n            }\n\n            /**\n             * Execute an SQL statement and return the boolean result.\n             *\n             * @param  string  $query\n             * @param  array  $bindings\n             * @return bool\n             * @static\n             */\n            public static function statement($query, $bindings = [])\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->statement($query, $bindings);\n            }\n\n            /**\n             * Run an SQL statement and get the number of rows affected.\n             *\n             * @param  string  $query\n             * @param  array  $bindings\n             * @return int\n             * @static\n             */\n            public static function affectingStatement($query, $bindings = [])\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->affectingStatement($query, $bindings);\n            }\n\n            /**\n             * Run a raw, unprepared query against the PDO connection.\n             *\n             * @param  string  $query\n             * @return bool\n             * @static\n             */\n            public static function unprepared($query)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->unprepared($query);\n            }\n\n            /**\n             * Execute the given callback in \"dry run\" mode.\n             *\n             * @param  \\Closure  $callback\n             * @return array\n             * @static\n             */\n            public static function pretend($callback)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->pretend($callback);\n            }\n\n            /**\n             * Bind values to their parameters in the given statement.\n             *\n             * @param  \\PDOStatement  $statement\n             * @param  array  $bindings\n             * @return void\n             * @static\n             */\n            public static function bindValues($statement, $bindings)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                $instance->bindValues($statement, $bindings);\n            }\n\n            /**\n             * Prepare the query bindings for execution.\n             *\n             * @param  array  $bindings\n             * @return array\n             * @static\n             */\n            public static function prepareBindings($bindings)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->prepareBindings($bindings);\n            }\n\n            /**\n             * Log a query in the connection's query log.\n             *\n             * @param  string  $query\n             * @param  array  $bindings\n             * @param  float|null  $time\n             * @return void\n             * @static\n             */\n            public static function logQuery($query, $bindings, $time = null)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                $instance->logQuery($query, $bindings, $time);\n            }\n\n            /**\n             * Register a database query listener with the connection.\n             *\n             * @param  \\Closure  $callback\n             * @return void\n             * @static\n             */\n            public static function listen($callback)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                $instance->listen($callback);\n            }\n\n            /**\n             * Get a new raw query expression.\n             *\n             * @param  mixed  $value\n             * @return \\Illuminate\\Database\\Query\\Expression\n             * @static\n             */\n            public static function raw($value)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->raw($value);\n            }\n\n            /**\n             * Indicate if any records have been modified.\n             *\n             * @param  bool  $value\n             * @return void\n             * @static\n             */\n            public static function recordsHaveBeenModified($value = true)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                $instance->recordsHaveBeenModified($value);\n            }\n\n            /**\n             * Is Doctrine available?\n             *\n             * @return bool\n             * @static\n             */\n            public static function isDoctrineAvailable()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->isDoctrineAvailable();\n            }\n\n            /**\n             * Get a Doctrine Schema Column instance.\n             *\n             * @param  string  $table\n             * @param  string  $column\n             * @return \\Doctrine\\DBAL\\Schema\\Column\n             * @static\n             */\n            public static function getDoctrineColumn($table, $column)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getDoctrineColumn($table, $column);\n            }\n\n            /**\n             * Get the Doctrine DBAL schema manager for the connection.\n             *\n             * @return \\Doctrine\\DBAL\\Schema\\AbstractSchemaManager\n             * @static\n             */\n            public static function getDoctrineSchemaManager()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getDoctrineSchemaManager();\n            }\n\n            /**\n             * Get the Doctrine DBAL database connection instance.\n             *\n             * @return \\Doctrine\\DBAL\\Connection\n             * @static\n             */\n            public static function getDoctrineConnection()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getDoctrineConnection();\n            }\n\n            /**\n             * Get the current PDO connection.\n             *\n             * @return \\PDO\n             * @static\n             */\n            public static function getPdo()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getPdo();\n            }\n\n            /**\n             * Get the current PDO connection parameter without executing any reconnect logic.\n             *\n             * @return \\PDO|\\Closure|null\n             * @static\n             */\n            public static function getRawPdo()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getRawPdo();\n            }\n\n            /**\n             * Get the current PDO connection used for reading.\n             *\n             * @return \\PDO\n             * @static\n             */\n            public static function getReadPdo()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getReadPdo();\n            }\n\n            /**\n             * Get the current read PDO connection parameter without executing any reconnect logic.\n             *\n             * @return \\PDO|\\Closure|null\n             * @static\n             */\n            public static function getRawReadPdo()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getRawReadPdo();\n            }\n\n            /**\n             * Set the PDO connection.\n             *\n             * @param  \\PDO|\\Closure|null  $pdo\n             * @return \\Illuminate\\Database\\MySqlConnection\n             * @static\n             */\n            public static function setPdo($pdo)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->setPdo($pdo);\n            }\n\n            /**\n             * Set the PDO connection used for reading.\n             *\n             * @param  \\PDO|\\Closure|null  $pdo\n             * @return \\Illuminate\\Database\\MySqlConnection\n             * @static\n             */\n            public static function setReadPdo($pdo)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->setReadPdo($pdo);\n            }\n\n            /**\n             * Get the database connection name.\n             *\n             * @return string|null\n             * @static\n             */\n            public static function getName()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getName();\n            }\n\n            /**\n             * Get an option from the configuration options.\n             *\n             * @param  string|null  $option\n             * @return mixed\n             * @static\n             */\n            public static function getConfig($option = null)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getConfig($option);\n            }\n\n            /**\n             * Get the PDO driver name.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDriverName()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getDriverName();\n            }\n\n            /**\n             * Get the query grammar used by the connection.\n             *\n             * @return \\Illuminate\\Database\\Query\\Grammars\\Grammar\n             * @static\n             */\n            public static function getQueryGrammar()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getQueryGrammar();\n            }\n\n            /**\n             * Set the query grammar used by the connection.\n             *\n             * @param  \\Illuminate\\Database\\Query\\Grammars\\Grammar  $grammar\n             * @return \\Illuminate\\Database\\MySqlConnection\n             * @static\n             */\n            public static function setQueryGrammar($grammar)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->setQueryGrammar($grammar);\n            }\n\n            /**\n             * Get the schema grammar used by the connection.\n             *\n             * @return \\Illuminate\\Database\\Schema\\Grammars\\Grammar\n             * @static\n             */\n            public static function getSchemaGrammar()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getSchemaGrammar();\n            }\n\n            /**\n             * Set the schema grammar used by the connection.\n             *\n             * @param  \\Illuminate\\Database\\Schema\\Grammars\\Grammar  $grammar\n             * @return \\Illuminate\\Database\\MySqlConnection\n             * @static\n             */\n            public static function setSchemaGrammar($grammar)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->setSchemaGrammar($grammar);\n            }\n\n            /**\n             * Get the query post processor used by the connection.\n             *\n             * @return \\Illuminate\\Database\\Query\\Processors\\Processor\n             * @static\n             */\n            public static function getPostProcessor()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getPostProcessor();\n            }\n\n            /**\n             * Set the query post processor used by the connection.\n             *\n             * @param  \\Illuminate\\Database\\Query\\Processors\\Processor  $processor\n             * @return \\Illuminate\\Database\\MySqlConnection\n             * @static\n             */\n            public static function setPostProcessor($processor)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->setPostProcessor($processor);\n            }\n\n            /**\n             * Get the event dispatcher used by the connection.\n             *\n             * @return \\Illuminate\\Contracts\\Events\\Dispatcher\n             * @static\n             */\n            public static function getEventDispatcher()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getEventDispatcher();\n            }\n\n            /**\n             * Set the event dispatcher instance on the connection.\n             *\n             * @param  \\Illuminate\\Contracts\\Events\\Dispatcher  $events\n             * @return \\Illuminate\\Database\\MySqlConnection\n             * @static\n             */\n            public static function setEventDispatcher($events)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->setEventDispatcher($events);\n            }\n\n            /**\n             * Unset the event dispatcher for this connection.\n             *\n             * @return void\n             * @static\n             */\n            public static function unsetEventDispatcher()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                $instance->unsetEventDispatcher();\n            }\n\n            /**\n             * Determine if the connection is in a \"dry run\".\n             *\n             * @return bool\n             * @static\n             */\n            public static function pretending()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->pretending();\n            }\n\n            /**\n             * Get the connection query log.\n             *\n             * @return array\n             * @static\n             */\n            public static function getQueryLog()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getQueryLog();\n            }\n\n            /**\n             * Clear the query log.\n             *\n             * @return void\n             * @static\n             */\n            public static function flushQueryLog()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                $instance->flushQueryLog();\n            }\n\n            /**\n             * Enable the query log on the connection.\n             *\n             * @return void\n             * @static\n             */\n            public static function enableQueryLog()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                $instance->enableQueryLog();\n            }\n\n            /**\n             * Disable the query log on the connection.\n             *\n             * @return void\n             * @static\n             */\n            public static function disableQueryLog()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                $instance->disableQueryLog();\n            }\n\n            /**\n             * Determine whether we're logging queries.\n             *\n             * @return bool\n             * @static\n             */\n            public static function logging()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->logging();\n            }\n\n            /**\n             * Get the name of the connected database.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDatabaseName()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getDatabaseName();\n            }\n\n            /**\n             * Set the name of the connected database.\n             *\n             * @param  string  $database\n             * @return \\Illuminate\\Database\\MySqlConnection\n             * @static\n             */\n            public static function setDatabaseName($database)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->setDatabaseName($database);\n            }\n\n            /**\n             * Get the table prefix for the connection.\n             *\n             * @return string\n             * @static\n             */\n            public static function getTablePrefix()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->getTablePrefix();\n            }\n\n            /**\n             * Set the table prefix in use by the connection.\n             *\n             * @param  string  $prefix\n             * @return \\Illuminate\\Database\\MySqlConnection\n             * @static\n             */\n            public static function setTablePrefix($prefix)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->setTablePrefix($prefix);\n            }\n\n            /**\n             * Set the table prefix and return the grammar.\n             *\n             * @param  \\Illuminate\\Database\\Grammar  $grammar\n             * @return \\Illuminate\\Database\\Grammar\n             * @static\n             */\n            public static function withTablePrefix($grammar)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->withTablePrefix($grammar);\n            }\n\n            /**\n             * Register a connection resolver.\n             *\n             * @param  string  $driver\n             * @param  \\Closure  $callback\n             * @return void\n             * @static\n             */\n            public static function resolverFor($driver, $callback)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                \\Illuminate\\Database\\MySqlConnection::resolverFor($driver, $callback);\n            }\n\n            /**\n             * Get the connection resolver for the given driver.\n             *\n             * @param  string  $driver\n             * @return mixed\n             * @static\n             */\n            public static function getResolver($driver)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                return \\Illuminate\\Database\\MySqlConnection::getResolver($driver);\n            }\n\n            /**\n             * Execute a Closure within a transaction.\n             *\n             * @param  \\Closure  $callback\n             * @param  int  $attempts\n             * @return mixed\n             *\n             * @throws \\Throwable\n             * @static\n             */\n            public static function transaction($callback, $attempts = 1)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->transaction($callback, $attempts);\n            }\n\n            /**\n             * Start a new database transaction.\n             *\n             * @return void\n             *\n             * @throws \\Throwable\n             * @static\n             */\n            public static function beginTransaction()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                $instance->beginTransaction();\n            }\n\n            /**\n             * Commit the active database transaction.\n             *\n             * @return void\n             *\n             * @throws \\Throwable\n             * @static\n             */\n            public static function commit()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                $instance->commit();\n            }\n\n            /**\n             * Rollback the active database transaction.\n             *\n             * @param  int|null  $toLevel\n             * @return void\n             *\n             * @throws \\Throwable\n             * @static\n             */\n            public static function rollBack($toLevel = null)\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                $instance->rollBack($toLevel);\n            }\n\n            /**\n             * Get the number of active transactions.\n             *\n             * @return int\n             * @static\n             */\n            public static function transactionLevel()\n            {            //Method inherited from \\Illuminate\\Database\\Connection\n                /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                return $instance->transactionLevel();\n            }\n        }\n        /**\n         * @see \\Illuminate\\Events\\Dispatcher\n         */\n        class Event\n        {\n            /**\n             * Register an event listener with the dispatcher.\n             *\n             * @param  \\Closure|string|array  $events\n             * @param  \\Closure|string|null  $listener\n             * @return void\n             * @static\n             */\n            public static function listen($events, $listener = null)\n            {\n                /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                $instance->listen($events, $listener);\n            }\n\n            /**\n             * Determine if a given event has listeners.\n             *\n             * @param  string  $eventName\n             * @return bool\n             * @static\n             */\n            public static function hasListeners($eventName)\n            {\n                /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                return $instance->hasListeners($eventName);\n            }\n\n            /**\n             * Determine if the given event has any wildcard listeners.\n             *\n             * @param  string  $eventName\n             * @return bool\n             * @static\n             */\n            public static function hasWildcardListeners($eventName)\n            {\n                /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                return $instance->hasWildcardListeners($eventName);\n            }\n\n            /**\n             * Register an event and payload to be fired later.\n             *\n             * @param  string  $event\n             * @param  array  $payload\n             * @return void\n             * @static\n             */\n            public static function push($event, $payload = [])\n            {\n                /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                $instance->push($event, $payload);\n            }\n\n            /**\n             * Flush a set of pushed events.\n             *\n             * @param  string  $event\n             * @return void\n             * @static\n             */\n            public static function flush($event)\n            {\n                /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                $instance->flush($event);\n            }\n\n            /**\n             * Register an event subscriber with the dispatcher.\n             *\n             * @param  object|string  $subscriber\n             * @return void\n             * @static\n             */\n            public static function subscribe($subscriber)\n            {\n                /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                $instance->subscribe($subscriber);\n            }\n\n            /**\n             * Fire an event until the first non-null response is returned.\n             *\n             * @param  string|object  $event\n             * @param  mixed  $payload\n             * @return array|null\n             * @static\n             */\n            public static function until($event, $payload = [])\n            {\n                /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                return $instance->until($event, $payload);\n            }\n\n            /**\n             * Fire an event and call the listeners.\n             *\n             * @param  string|object  $event\n             * @param  mixed  $payload\n             * @param  bool  $halt\n             * @return array|null\n             * @static\n             */\n            public static function dispatch($event, $payload = [], $halt = false)\n            {\n                /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                return $instance->dispatch($event, $payload, $halt);\n            }\n\n            /**\n             * Get all of the listeners for a given event name.\n             *\n             * @param  string  $eventName\n             * @return array\n             * @static\n             */\n            public static function getListeners($eventName)\n            {\n                /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                return $instance->getListeners($eventName);\n            }\n\n            /**\n             * Register an event listener with the dispatcher.\n             *\n             * @param  \\Closure|string  $listener\n             * @param  bool  $wildcard\n             * @return \\Closure\n             * @static\n             */\n            public static function makeListener($listener, $wildcard = false)\n            {\n                /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                return $instance->makeListener($listener, $wildcard);\n            }\n\n            /**\n             * Create a class based listener using the IoC container.\n             *\n             * @param  string  $listener\n             * @param  bool  $wildcard\n             * @return \\Closure\n             * @static\n             */\n            public static function createClassListener($listener, $wildcard = false)\n            {\n                /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                return $instance->createClassListener($listener, $wildcard);\n            }\n\n            /**\n             * Remove a set of listeners from the dispatcher.\n             *\n             * @param  string  $event\n             * @return void\n             * @static\n             */\n            public static function forget($event)\n            {\n                /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                $instance->forget($event);\n            }\n\n            /**\n             * Forget all of the pushed listeners.\n             *\n             * @return void\n             * @static\n             */\n            public static function forgetPushed()\n            {\n                /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                $instance->forgetPushed();\n            }\n\n            /**\n             * Set the queue resolver implementation.\n             *\n             * @param  callable  $resolver\n             * @return \\Illuminate\\Events\\Dispatcher\n             * @static\n             */\n            public static function setQueueResolver($resolver)\n            {\n                /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                return $instance->setQueueResolver($resolver);\n            }\n\n            /**\n             * Register a custom macro.\n             *\n             * @param  string  $name\n             * @param  object|callable  $macro\n             * @return void\n             * @static\n             */\n            public static function macro($name, $macro)\n            {\n                \\Illuminate\\Events\\Dispatcher::macro($name, $macro);\n            }\n\n            /**\n             * Mix another object into the class.\n             *\n             * @param  object  $mixin\n             * @param  bool  $replace\n             * @return void\n             *\n             * @throws \\ReflectionException\n             * @static\n             */\n            public static function mixin($mixin, $replace = true)\n            {\n                \\Illuminate\\Events\\Dispatcher::mixin($mixin, $replace);\n            }\n\n            /**\n             * Checks if macro is registered.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function hasMacro($name)\n            {\n                return \\Illuminate\\Events\\Dispatcher::hasMacro($name);\n            }\n\n            /**\n             * Assert if an event was dispatched based on a truth-test callback.\n             *\n             * @param  string|\\Closure  $event\n             * @param  callable|int|null  $callback\n             * @return void\n             * @static\n             */\n            public static function assertDispatched($event, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\EventFake $instance */\n                $instance->assertDispatched($event, $callback);\n            }\n\n            /**\n             * Assert if an event was dispatched a number of times.\n             *\n             * @param  string  $event\n             * @param  int  $times\n             * @return void\n             * @static\n             */\n            public static function assertDispatchedTimes($event, $times = 1)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\EventFake $instance */\n                $instance->assertDispatchedTimes($event, $times);\n            }\n\n            /**\n             * Determine if an event was dispatched based on a truth-test callback.\n             *\n             * @param  string|\\Closure  $event\n             * @param  callable|null  $callback\n             * @return void\n             * @static\n             */\n            public static function assertNotDispatched($event, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\EventFake $instance */\n                $instance->assertNotDispatched($event, $callback);\n            }\n\n            /**\n             * Get all of the events matching a truth-test callback.\n             *\n             * @param  string  $event\n             * @param  callable|null  $callback\n             * @return \\Illuminate\\Support\\Collection\n             * @static\n             */\n            public static function dispatched($event, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\EventFake $instance */\n                return $instance->dispatched($event, $callback);\n            }\n\n            /**\n             * Determine if the given event has been dispatched.\n             *\n             * @param  string  $event\n             * @return bool\n             * @static\n             */\n            public static function hasDispatched($event)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\EventFake $instance */\n                return $instance->hasDispatched($event);\n            }\n        }\n        /**\n         * @see \\Illuminate\\Filesystem\\Filesystem\n         */\n        class File\n        {\n            /**\n             * Determine if a file or directory exists.\n             *\n             * @param  string  $path\n             * @return bool\n             * @static\n             */\n            public static function exists($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->exists($path);\n            }\n\n            /**\n             * Determine if a file or directory is missing.\n             *\n             * @param  string  $path\n             * @return bool\n             * @static\n             */\n            public static function missing($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->missing($path);\n            }\n\n            /**\n             * Get the contents of a file.\n             *\n             * @param  string  $path\n             * @param  bool  $lock\n             * @return string\n             *\n             * @throws \\Illuminate\\Contracts\\Filesystem\\FileNotFoundException\n             * @static\n             */\n            public static function get($path, $lock = false)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->get($path, $lock);\n            }\n\n            /**\n             * Get contents of a file with shared access.\n             *\n             * @param  string  $path\n             * @return string\n             * @static\n             */\n            public static function sharedGet($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->sharedGet($path);\n            }\n\n            /**\n             * Get the returned value of a file.\n             *\n             * @param  string  $path\n             * @param  array  $data\n             * @return mixed\n             *\n             * @throws \\Illuminate\\Contracts\\Filesystem\\FileNotFoundException\n             * @static\n             */\n            public static function getRequire($path, $data = [])\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->getRequire($path, $data);\n            }\n\n            /**\n             * Require the given file once.\n             *\n             * @param  string  $path\n             * @param  array  $data\n             * @return mixed\n             * @static\n             */\n            public static function requireOnce($path, $data = [])\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->requireOnce($path, $data);\n            }\n\n            /**\n             * Get the contents of a file one line at a time.\n             *\n             * @param  string  $path\n             * @return \\Illuminate\\Support\\LazyCollection\n             *\n             * @throws \\Illuminate\\Contracts\\Filesystem\\FileNotFoundException\n             * @static\n             */\n            public static function lines($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->lines($path);\n            }\n\n            /**\n             * Get the MD5 hash of the file at the given path.\n             *\n             * @param  string  $path\n             * @return string\n             * @static\n             */\n            public static function hash($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->hash($path);\n            }\n\n            /**\n             * Write the contents of a file.\n             *\n             * @param  string  $path\n             * @param  string  $contents\n             * @param  bool  $lock\n             * @return int|bool\n             * @static\n             */\n            public static function put($path, $contents, $lock = false)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->put($path, $contents, $lock);\n            }\n\n            /**\n             * Write the contents of a file, replacing it atomically if it already exists.\n             *\n             * @param  string  $path\n             * @param  string  $content\n             * @return void\n             * @static\n             */\n            public static function replace($path, $content)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                $instance->replace($path, $content);\n            }\n\n            /**\n             * Prepend to a file.\n             *\n             * @param  string  $path\n             * @param  string  $data\n             * @return int\n             * @static\n             */\n            public static function prepend($path, $data)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->prepend($path, $data);\n            }\n\n            /**\n             * Append to a file.\n             *\n             * @param  string  $path\n             * @param  string  $data\n             * @return int\n             * @static\n             */\n            public static function append($path, $data)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->append($path, $data);\n            }\n\n            /**\n             * Get or set UNIX mode of a file or directory.\n             *\n             * @param  string  $path\n             * @param  int|null  $mode\n             * @return mixed\n             * @static\n             */\n            public static function chmod($path, $mode = null)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->chmod($path, $mode);\n            }\n\n            /**\n             * Delete the file at a given path.\n             *\n             * @param  string|array  $paths\n             * @return bool\n             * @static\n             */\n            public static function delete($paths)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->delete($paths);\n            }\n\n            /**\n             * Move a file to a new location.\n             *\n             * @param  string  $path\n             * @param  string  $target\n             * @return bool\n             * @static\n             */\n            public static function move($path, $target)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->move($path, $target);\n            }\n\n            /**\n             * Copy a file to a new location.\n             *\n             * @param  string  $path\n             * @param  string  $target\n             * @return bool\n             * @static\n             */\n            public static function copy($path, $target)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->copy($path, $target);\n            }\n\n            /**\n             * Create a symlink to the target file or directory. On Windows, a hard link is created if the target is a file.\n             *\n             * @param  string  $target\n             * @param  string  $link\n             * @return void\n             * @static\n             */\n            public static function link($target, $link)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                $instance->link($target, $link);\n            }\n\n            /**\n             * Create a relative symlink to the target file or directory.\n             *\n             * @param  string  $target\n             * @param  string  $link\n             * @return void\n             * @static\n             */\n            public static function relativeLink($target, $link)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                $instance->relativeLink($target, $link);\n            }\n\n            /**\n             * Extract the file name from a file path.\n             *\n             * @param  string  $path\n             * @return string\n             * @static\n             */\n            public static function name($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->name($path);\n            }\n\n            /**\n             * Extract the trailing name component from a file path.\n             *\n             * @param  string  $path\n             * @return string\n             * @static\n             */\n            public static function basename($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->basename($path);\n            }\n\n            /**\n             * Extract the parent directory from a file path.\n             *\n             * @param  string  $path\n             * @return string\n             * @static\n             */\n            public static function dirname($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->dirname($path);\n            }\n\n            /**\n             * Extract the file extension from a file path.\n             *\n             * @param  string  $path\n             * @return string\n             * @static\n             */\n            public static function extension($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->extension($path);\n            }\n\n            /**\n             * Guess the file extension from the mime-type of a given file.\n             *\n             * @param  string  $path\n             * @return string|null\n             * @static\n             */\n            public static function guessExtension($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->guessExtension($path);\n            }\n\n            /**\n             * Get the file type of a given file.\n             *\n             * @param  string  $path\n             * @return string\n             * @static\n             */\n            public static function type($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->type($path);\n            }\n\n            /**\n             * Get the mime-type of a given file.\n             *\n             * @param  string  $path\n             * @return string|false\n             * @static\n             */\n            public static function mimeType($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->mimeType($path);\n            }\n\n            /**\n             * Get the file size of a given file.\n             *\n             * @param  string  $path\n             * @return int\n             * @static\n             */\n            public static function size($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->size($path);\n            }\n\n            /**\n             * Get the file's last modification time.\n             *\n             * @param  string  $path\n             * @return int\n             * @static\n             */\n            public static function lastModified($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->lastModified($path);\n            }\n\n            /**\n             * Determine if the given path is a directory.\n             *\n             * @param  string  $directory\n             * @return bool\n             * @static\n             */\n            public static function isDirectory($directory)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->isDirectory($directory);\n            }\n\n            /**\n             * Determine if the given path is readable.\n             *\n             * @param  string  $path\n             * @return bool\n             * @static\n             */\n            public static function isReadable($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->isReadable($path);\n            }\n\n            /**\n             * Determine if the given path is writable.\n             *\n             * @param  string  $path\n             * @return bool\n             * @static\n             */\n            public static function isWritable($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->isWritable($path);\n            }\n\n            /**\n             * Determine if the given path is a file.\n             *\n             * @param  string  $file\n             * @return bool\n             * @static\n             */\n            public static function isFile($file)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->isFile($file);\n            }\n\n            /**\n             * Find path names matching a given pattern.\n             *\n             * @param  string  $pattern\n             * @param  int  $flags\n             * @return array\n             * @static\n             */\n            public static function glob($pattern, $flags = 0)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->glob($pattern, $flags);\n            }\n\n            /**\n             * Get an array of all files in a directory.\n             *\n             * @param  string  $directory\n             * @param  bool  $hidden\n             * @return \\Symfony\\Component\\Finder\\SplFileInfo[]\n             * @static\n             */\n            public static function files($directory, $hidden = false)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->files($directory, $hidden);\n            }\n\n            /**\n             * Get all of the files from the given directory (recursive).\n             *\n             * @param  string  $directory\n             * @param  bool  $hidden\n             * @return \\Symfony\\Component\\Finder\\SplFileInfo[]\n             * @static\n             */\n            public static function allFiles($directory, $hidden = false)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->allFiles($directory, $hidden);\n            }\n\n            /**\n             * Get all of the directories within a given directory.\n             *\n             * @param  string  $directory\n             * @return array\n             * @static\n             */\n            public static function directories($directory)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->directories($directory);\n            }\n\n            /**\n             * Ensure a directory exists.\n             *\n             * @param  string  $path\n             * @param  int  $mode\n             * @param  bool  $recursive\n             * @return void\n             * @static\n             */\n            public static function ensureDirectoryExists($path, $mode = 493, $recursive = true)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                $instance->ensureDirectoryExists($path, $mode, $recursive);\n            }\n\n            /**\n             * Create a directory.\n             *\n             * @param  string  $path\n             * @param  int  $mode\n             * @param  bool  $recursive\n             * @param  bool  $force\n             * @return bool\n             * @static\n             */\n            public static function makeDirectory($path, $mode = 493, $recursive = false, $force = false)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->makeDirectory($path, $mode, $recursive, $force);\n            }\n\n            /**\n             * Move a directory.\n             *\n             * @param  string  $from\n             * @param  string  $to\n             * @param  bool  $overwrite\n             * @return bool\n             * @static\n             */\n            public static function moveDirectory($from, $to, $overwrite = false)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->moveDirectory($from, $to, $overwrite);\n            }\n\n            /**\n             * Copy a directory from one location to another.\n             *\n             * @param  string  $directory\n             * @param  string  $destination\n             * @param  int|null  $options\n             * @return bool\n             * @static\n             */\n            public static function copyDirectory($directory, $destination, $options = null)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->copyDirectory($directory, $destination, $options);\n            }\n\n            /**\n             * Recursively delete a directory.\n             *\n             * The directory itself may be optionally preserved.\n             *\n             * @param  string  $directory\n             * @param  bool  $preserve\n             * @return bool\n             * @static\n             */\n            public static function deleteDirectory($directory, $preserve = false)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->deleteDirectory($directory, $preserve);\n            }\n\n            /**\n             * Remove all of the directories within a given directory.\n             *\n             * @param  string  $directory\n             * @return bool\n             * @static\n             */\n            public static function deleteDirectories($directory)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->deleteDirectories($directory);\n            }\n\n            /**\n             * Empty the specified directory of all files and folders.\n             *\n             * @param  string  $directory\n             * @return bool\n             * @static\n             */\n            public static function cleanDirectory($directory)\n            {\n                /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                return $instance->cleanDirectory($directory);\n            }\n\n            /**\n             * Register a custom macro.\n             *\n             * @param  string  $name\n             * @param  object|callable  $macro\n             * @return void\n             * @static\n             */\n            public static function macro($name, $macro)\n            {\n                \\Illuminate\\Filesystem\\Filesystem::macro($name, $macro);\n            }\n\n            /**\n             * Mix another object into the class.\n             *\n             * @param  object  $mixin\n             * @param  bool  $replace\n             * @return void\n             *\n             * @throws \\ReflectionException\n             * @static\n             */\n            public static function mixin($mixin, $replace = true)\n            {\n                \\Illuminate\\Filesystem\\Filesystem::mixin($mixin, $replace);\n            }\n\n            /**\n             * Checks if macro is registered.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function hasMacro($name)\n            {\n                return \\Illuminate\\Filesystem\\Filesystem::hasMacro($name);\n            }\n        }\n        /**\n         * @see \\Illuminate\\Contracts\\Auth\\Access\\Gate\n         */\n        class Gate\n        {\n            /**\n             * Determine if a given ability has been defined.\n             *\n             * @param  string|array  $ability\n             * @return bool\n             * @static\n             */\n            public static function has($ability)\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->has($ability);\n            }\n\n            /**\n             * Define a new ability.\n             *\n             * @param  string  $ability\n             * @param  callable|string  $callback\n             * @return \\Illuminate\\Auth\\Access\\Gate\n             *\n             * @throws \\InvalidArgumentException\n             * @static\n             */\n            public static function define($ability, $callback)\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->define($ability, $callback);\n            }\n\n            /**\n             * Define abilities for a resource.\n             *\n             * @param  string  $name\n             * @param  string  $class\n             * @param  array|null  $abilities\n             * @return \\Illuminate\\Auth\\Access\\Gate\n             * @static\n             */\n            public static function resource($name, $class, $abilities = null)\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->resource($name, $class, $abilities);\n            }\n\n            /**\n             * Define a policy class for a given class type.\n             *\n             * @param  string  $class\n             * @param  string  $policy\n             * @return \\Illuminate\\Auth\\Access\\Gate\n             * @static\n             */\n            public static function policy($class, $policy)\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->policy($class, $policy);\n            }\n\n            /**\n             * Register a callback to run before all Gate checks.\n             *\n             * @param  callable  $callback\n             * @return \\Illuminate\\Auth\\Access\\Gate\n             * @static\n             */\n            public static function before($callback)\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->before($callback);\n            }\n\n            /**\n             * Register a callback to run after all Gate checks.\n             *\n             * @param  callable  $callback\n             * @return \\Illuminate\\Auth\\Access\\Gate\n             * @static\n             */\n            public static function after($callback)\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->after($callback);\n            }\n\n            /**\n             * Determine if the given ability should be granted for the current user.\n             *\n             * @param  string  $ability\n             * @param  array|mixed  $arguments\n             * @return bool\n             * @static\n             */\n            public static function allows($ability, $arguments = [])\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->allows($ability, $arguments);\n            }\n\n            /**\n             * Determine if the given ability should be denied for the current user.\n             *\n             * @param  string  $ability\n             * @param  array|mixed  $arguments\n             * @return bool\n             * @static\n             */\n            public static function denies($ability, $arguments = [])\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->denies($ability, $arguments);\n            }\n\n            /**\n             * Determine if all of the given abilities should be granted for the current user.\n             *\n             * @param  \\Illuminate\\Auth\\Access\\iterable|string  $abilities\n             * @param  array|mixed  $arguments\n             * @return bool\n             * @static\n             */\n            public static function check($abilities, $arguments = [])\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->check($abilities, $arguments);\n            }\n\n            /**\n             * Determine if any one of the given abilities should be granted for the current user.\n             *\n             * @param  \\Illuminate\\Auth\\Access\\iterable|string  $abilities\n             * @param  array|mixed  $arguments\n             * @return bool\n             * @static\n             */\n            public static function any($abilities, $arguments = [])\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->any($abilities, $arguments);\n            }\n\n            /**\n             * Determine if all of the given abilities should be denied for the current user.\n             *\n             * @param  \\Illuminate\\Auth\\Access\\iterable|string  $abilities\n             * @param  array|mixed  $arguments\n             * @return bool\n             * @static\n             */\n            public static function none($abilities, $arguments = [])\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->none($abilities, $arguments);\n            }\n\n            /**\n             * Determine if the given ability should be granted for the current user.\n             *\n             * @param  string  $ability\n             * @param  array|mixed  $arguments\n             * @return \\Illuminate\\Auth\\Access\\Response\n             *\n             * @throws \\Illuminate\\Auth\\Access\\AuthorizationException\n             * @static\n             */\n            public static function authorize($ability, $arguments = [])\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->authorize($ability, $arguments);\n            }\n\n            /**\n             * Inspect the user for the given ability.\n             *\n             * @param  string  $ability\n             * @param  array|mixed  $arguments\n             * @return \\Illuminate\\Auth\\Access\\Response\n             * @static\n             */\n            public static function inspect($ability, $arguments = [])\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->inspect($ability, $arguments);\n            }\n\n            /**\n             * Get the raw result from the authorization callback.\n             *\n             * @param  string  $ability\n             * @param  array|mixed  $arguments\n             * @return mixed\n             *\n             * @throws \\Illuminate\\Auth\\Access\\AuthorizationException\n             * @static\n             */\n            public static function raw($ability, $arguments = [])\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->raw($ability, $arguments);\n            }\n\n            /**\n             * Get a policy instance for a given class.\n             *\n             * @param  object|string  $class\n             * @return mixed\n             * @static\n             */\n            public static function getPolicyFor($class)\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->getPolicyFor($class);\n            }\n\n            /**\n             * Specify a callback to be used to guess policy names.\n             *\n             * @param  callable  $callback\n             * @return \\Illuminate\\Auth\\Access\\Gate\n             * @static\n             */\n            public static function guessPolicyNamesUsing($callback)\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->guessPolicyNamesUsing($callback);\n            }\n\n            /**\n             * Build a policy class instance of the given type.\n             *\n             * @param  object|string  $class\n             * @return mixed\n             *\n             * @throws \\Illuminate\\Contracts\\Container\\BindingResolutionException\n             * @static\n             */\n            public static function resolvePolicy($class)\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->resolvePolicy($class);\n            }\n\n            /**\n             * Get a gate instance for the given user.\n             *\n             * @param  \\Illuminate\\Contracts\\Auth\\Authenticatable|mixed  $user\n             * @return static\n             * @static\n             */\n            public static function forUser($user)\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->forUser($user);\n            }\n\n            /**\n             * Get all of the defined abilities.\n             *\n             * @return array\n             * @static\n             */\n            public static function abilities()\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->abilities();\n            }\n\n            /**\n             * Get all of the defined policies.\n             *\n             * @return array\n             * @static\n             */\n            public static function policies()\n            {\n                /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                return $instance->policies();\n            }\n        }\n        /**\n         * @see \\Illuminate\\Hashing\\HashManager\n         */\n        class Hash\n        {\n            /**\n             * Create an instance of the Bcrypt hash Driver.\n             *\n             * @return \\Illuminate\\Hashing\\BcryptHasher\n             * @static\n             */\n            public static function createBcryptDriver()\n            {\n                /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                return $instance->createBcryptDriver();\n            }\n\n            /**\n             * Create an instance of the Argon2i hash Driver.\n             *\n             * @return \\Illuminate\\Hashing\\ArgonHasher\n             * @static\n             */\n            public static function createArgonDriver()\n            {\n                /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                return $instance->createArgonDriver();\n            }\n\n            /**\n             * Create an instance of the Argon2id hash Driver.\n             *\n             * @return \\Illuminate\\Hashing\\Argon2IdHasher\n             * @static\n             */\n            public static function createArgon2idDriver()\n            {\n                /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                return $instance->createArgon2idDriver();\n            }\n\n            /**\n             * Get information about the given hashed value.\n             *\n             * @param  string  $hashedValue\n             * @return array\n             * @static\n             */\n            public static function info($hashedValue)\n            {\n                /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                return $instance->info($hashedValue);\n            }\n\n            /**\n             * Hash the given value.\n             *\n             * @param  string  $value\n             * @param  array  $options\n             * @return string\n             * @static\n             */\n            public static function make($value, $options = [])\n            {\n                /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                return $instance->make($value, $options);\n            }\n\n            /**\n             * Check the given plain value against a hash.\n             *\n             * @param  string  $value\n             * @param  string  $hashedValue\n             * @param  array  $options\n             * @return bool\n             * @static\n             */\n            public static function check($value, $hashedValue, $options = [])\n            {\n                /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                return $instance->check($value, $hashedValue, $options);\n            }\n\n            /**\n             * Check if the given hash has been hashed using the given options.\n             *\n             * @param  string  $hashedValue\n             * @param  array  $options\n             * @return bool\n             * @static\n             */\n            public static function needsRehash($hashedValue, $options = [])\n            {\n                /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                return $instance->needsRehash($hashedValue, $options);\n            }\n\n            /**\n             * Get the default driver name.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDefaultDriver()\n            {\n                /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                return $instance->getDefaultDriver();\n            }\n\n            /**\n             * Get a driver instance.\n             *\n             * @param  string|null  $driver\n             * @return mixed\n             *\n             * @throws \\InvalidArgumentException\n             * @static\n             */\n            public static function driver($driver = null)\n            {            //Method inherited from \\Illuminate\\Support\\Manager\n                /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                return $instance->driver($driver);\n            }\n\n            /**\n             * Register a custom driver creator Closure.\n             *\n             * @param  string  $driver\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Hashing\\HashManager\n             * @static\n             */\n            public static function extend($driver, $callback)\n            {            //Method inherited from \\Illuminate\\Support\\Manager\n                /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                return $instance->extend($driver, $callback);\n            }\n\n            /**\n             * Get all of the created \"drivers\".\n             *\n             * @return array\n             * @static\n             */\n            public static function getDrivers()\n            {            //Method inherited from \\Illuminate\\Support\\Manager\n                /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                return $instance->getDrivers();\n            }\n        }\n        /**\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest accept(string $contentType)\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest acceptJson()\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest asForm()\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest asJson()\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest asMultipart()\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest attach(string $name, string $contents, string|null $filename = null, array $headers = [])\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest baseUrl(string $url)\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest beforeSending(callable $callback)\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest bodyFormat(string $format)\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest contentType(string $contentType)\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest retry(int $times, int $sleep = 0)\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest stub(callable $callback)\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest timeout(int $seconds)\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest withBasicAuth(string $username, string $password)\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest withBody(resource|string $content, string $contentType)\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest withCookies(array $cookies, string $domain)\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest withDigestAuth(string $username, string $password)\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest withHeaders(array $headers)\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest withOptions(array $options)\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest withToken(string $token, string $type = 'Bearer')\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest withoutRedirecting()\n         * @method static \\Illuminate\\Http\\Client\\PendingRequest withoutVerifying()\n         * @method static \\Illuminate\\Http\\Client\\Response delete(string $url, array $data = [])\n         * @method static \\Illuminate\\Http\\Client\\Response get(string $url, array $query = [])\n         * @method static \\Illuminate\\Http\\Client\\Response head(string $url, array $query = [])\n         * @method static \\Illuminate\\Http\\Client\\Response patch(string $url, array $data = [])\n         * @method static \\Illuminate\\Http\\Client\\Response post(string $url, array $data = [])\n         * @method static \\Illuminate\\Http\\Client\\Response put(string $url, array $data = [])\n         * @method static \\Illuminate\\Http\\Client\\Response send(string $method, string $url, array $options = [])\n         *\n         * @see \\Illuminate\\Http\\Client\\Factory\n         */\n        class Http\n        {\n            /**\n             * Create a new response instance for use during stubbing.\n             *\n             * @param  array|string  $body\n             * @param  int  $status\n             * @param  array  $headers\n             * @return \\GuzzleHttp\\Promise\\PromiseInterface\n             * @static\n             */\n            public static function response($body = null, $status = 200, $headers = [])\n            {\n                return \\Illuminate\\Http\\Client\\Factory::response($body, $status, $headers);\n            }\n\n            /**\n             * Get an invokable object that returns a sequence of responses in order for use during stubbing.\n             *\n             * @param  array  $responses\n             * @return \\Illuminate\\Http\\Client\\ResponseSequence\n             * @static\n             */\n            public static function sequence($responses = [])\n            {\n                /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                return $instance->sequence($responses);\n            }\n\n            /**\n             * Register a stub callable that will intercept requests and be able to return stub responses.\n             *\n             * @param  callable|array  $callback\n             * @return \\Illuminate\\Http\\Client\\Factory\n             * @static\n             */\n            public static function fake($callback = null)\n            {\n                /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                return $instance->fake($callback);\n            }\n\n            /**\n             * Register a response sequence for the given URL pattern.\n             *\n             * @param  string  $url\n             * @return \\Illuminate\\Http\\Client\\ResponseSequence\n             * @static\n             */\n            public static function fakeSequence($url = '*')\n            {\n                /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                return $instance->fakeSequence($url);\n            }\n\n            /**\n             * Stub the given URL using the given callback.\n             *\n             * @param  string  $url\n             * @param  \\Illuminate\\Http\\Client\\Response|\\GuzzleHttp\\Promise\\PromiseInterface|callable  $callback\n             * @return \\Illuminate\\Http\\Client\\Factory\n             * @static\n             */\n            public static function stubUrl($url, $callback)\n            {\n                /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                return $instance->stubUrl($url, $callback);\n            }\n\n            /**\n             * Record a request response pair.\n             *\n             * @param  \\Illuminate\\Http\\Client\\Request  $request\n             * @param  \\Illuminate\\Http\\Client\\Response  $response\n             * @return void\n             * @static\n             */\n            public static function recordRequestResponsePair($request, $response)\n            {\n                /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                $instance->recordRequestResponsePair($request, $response);\n            }\n\n            /**\n             * Assert that a request / response pair was recorded matching a given truth test.\n             *\n             * @param  callable  $callback\n             * @return void\n             * @static\n             */\n            public static function assertSent($callback)\n            {\n                /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                $instance->assertSent($callback);\n            }\n\n            /**\n             * Assert that a request / response pair was not recorded matching a given truth test.\n             *\n             * @param  callable  $callback\n             * @return void\n             * @static\n             */\n            public static function assertNotSent($callback)\n            {\n                /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                $instance->assertNotSent($callback);\n            }\n\n            /**\n             * Assert that no request / response pair was recorded.\n             *\n             * @return void\n             * @static\n             */\n            public static function assertNothingSent()\n            {\n                /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                $instance->assertNothingSent();\n            }\n\n            /**\n             * Assert how many requests have been recorded.\n             *\n             * @param  int  $count\n             * @return void\n             * @static\n             */\n            public static function assertSentCount($count)\n            {\n                /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                $instance->assertSentCount($count);\n            }\n\n            /**\n             * Assert that every created response sequence is empty.\n             *\n             * @return void\n             * @static\n             */\n            public static function assertSequencesAreEmpty()\n            {\n                /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                $instance->assertSequencesAreEmpty();\n            }\n\n            /**\n             * Get a collection of the request / response pairs matching the given truth test.\n             *\n             * @param  callable  $callback\n             * @return \\Illuminate\\Support\\Collection\n             * @static\n             */\n            public static function recorded($callback = null)\n            {\n                /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                return $instance->recorded($callback);\n            }\n\n            /**\n             * Register a custom macro.\n             *\n             * @param  string  $name\n             * @param  object|callable  $macro\n             * @return void\n             * @static\n             */\n            public static function macro($name, $macro)\n            {\n                \\Illuminate\\Http\\Client\\Factory::macro($name, $macro);\n            }\n\n            /**\n             * Mix another object into the class.\n             *\n             * @param  object  $mixin\n             * @param  bool  $replace\n             * @return void\n             *\n             * @throws \\ReflectionException\n             * @static\n             */\n            public static function mixin($mixin, $replace = true)\n            {\n                \\Illuminate\\Http\\Client\\Factory::mixin($mixin, $replace);\n            }\n\n            /**\n             * Checks if macro is registered.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function hasMacro($name)\n            {\n                return \\Illuminate\\Http\\Client\\Factory::hasMacro($name);\n            }\n\n            /**\n             * Dynamically handle calls to the class.\n             *\n             * @param  string  $method\n             * @param  array  $parameters\n             * @return mixed\n             *\n             * @throws \\BadMethodCallException\n             * @static\n             */\n            public static function macroCall($method, $parameters)\n            {\n                /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                return $instance->macroCall($method, $parameters);\n            }\n        }\n        /**\n         * @see \\Illuminate\\Translation\\Translator\n         */\n        class Lang\n        {\n            /**\n             * Determine if a translation exists for a given locale.\n             *\n             * @param  string  $key\n             * @param  string|null  $locale\n             * @return bool\n             * @static\n             */\n            public static function hasForLocale($key, $locale = null)\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                return $instance->hasForLocale($key, $locale);\n            }\n\n            /**\n             * Determine if a translation exists.\n             *\n             * @param  string  $key\n             * @param  string|null  $locale\n             * @param  bool  $fallback\n             * @return bool\n             * @static\n             */\n            public static function has($key, $locale = null, $fallback = true)\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                return $instance->has($key, $locale, $fallback);\n            }\n\n            /**\n             * Get the translation for the given key.\n             *\n             * @param  string  $key\n             * @param  array  $replace\n             * @param  string|null  $locale\n             * @param  bool  $fallback\n             * @return string|array\n             * @static\n             */\n            public static function get($key, $replace = [], $locale = null, $fallback = true)\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                return $instance->get($key, $replace, $locale, $fallback);\n            }\n\n            /**\n             * Get a translation according to an integer value.\n             *\n             * @param  string  $key\n             * @param  \\Countable|int|array  $number\n             * @param  array  $replace\n             * @param  string|null  $locale\n             * @return string\n             * @static\n             */\n            public static function choice($key, $number, $replace = [], $locale = null)\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                return $instance->choice($key, $number, $replace, $locale);\n            }\n\n            /**\n             * Add translation lines to the given locale.\n             *\n             * @param  array  $lines\n             * @param  string  $locale\n             * @param  string  $namespace\n             * @return void\n             * @static\n             */\n            public static function addLines($lines, $locale, $namespace = '*')\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                $instance->addLines($lines, $locale, $namespace);\n            }\n\n            /**\n             * Load the specified language group.\n             *\n             * @param  string  $namespace\n             * @param  string  $group\n             * @param  string  $locale\n             * @return void\n             * @static\n             */\n            public static function load($namespace, $group, $locale)\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                $instance->load($namespace, $group, $locale);\n            }\n\n            /**\n             * Add a new namespace to the loader.\n             *\n             * @param  string  $namespace\n             * @param  string  $hint\n             * @return void\n             * @static\n             */\n            public static function addNamespace($namespace, $hint)\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                $instance->addNamespace($namespace, $hint);\n            }\n\n            /**\n             * Add a new JSON path to the loader.\n             *\n             * @param  string  $path\n             * @return void\n             * @static\n             */\n            public static function addJsonPath($path)\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                $instance->addJsonPath($path);\n            }\n\n            /**\n             * Parse a key into namespace, group, and item.\n             *\n             * @param  string  $key\n             * @return array\n             * @static\n             */\n            public static function parseKey($key)\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                return $instance->parseKey($key);\n            }\n\n            /**\n             * Get the message selector instance.\n             *\n             * @return \\Illuminate\\Translation\\MessageSelector\n             * @static\n             */\n            public static function getSelector()\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                return $instance->getSelector();\n            }\n\n            /**\n             * Set the message selector instance.\n             *\n             * @param  \\Illuminate\\Translation\\MessageSelector  $selector\n             * @return void\n             * @static\n             */\n            public static function setSelector($selector)\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                $instance->setSelector($selector);\n            }\n\n            /**\n             * Get the language line loader implementation.\n             *\n             * @return \\Illuminate\\Contracts\\Translation\\Loader\n             * @static\n             */\n            public static function getLoader()\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                return $instance->getLoader();\n            }\n\n            /**\n             * Get the default locale being used.\n             *\n             * @return string\n             * @static\n             */\n            public static function locale()\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                return $instance->locale();\n            }\n\n            /**\n             * Get the default locale being used.\n             *\n             * @return string\n             * @static\n             */\n            public static function getLocale()\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                return $instance->getLocale();\n            }\n\n            /**\n             * Set the default locale.\n             *\n             * @param  string  $locale\n             * @return void\n             * @static\n             */\n            public static function setLocale($locale)\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                $instance->setLocale($locale);\n            }\n\n            /**\n             * Get the fallback locale being used.\n             *\n             * @return string\n             * @static\n             */\n            public static function getFallback()\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                return $instance->getFallback();\n            }\n\n            /**\n             * Set the fallback locale being used.\n             *\n             * @param  string  $fallback\n             * @return void\n             * @static\n             */\n            public static function setFallback($fallback)\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                $instance->setFallback($fallback);\n            }\n\n            /**\n             * Set the loaded translation groups.\n             *\n             * @param  array  $loaded\n             * @return void\n             * @static\n             */\n            public static function setLoaded($loaded)\n            {\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                $instance->setLoaded($loaded);\n            }\n\n            /**\n             * Set the parsed value of a key.\n             *\n             * @param  string  $key\n             * @param  array  $parsed\n             * @return void\n             * @static\n             */\n            public static function setParsedKey($key, $parsed)\n            {            //Method inherited from \\Illuminate\\Support\\NamespacedItemResolver\n                /** @var \\Illuminate\\Translation\\Translator $instance */\n                $instance->setParsedKey($key, $parsed);\n            }\n\n            /**\n             * Register a custom macro.\n             *\n             * @param  string  $name\n             * @param  object|callable  $macro\n             * @return void\n             * @static\n             */\n            public static function macro($name, $macro)\n            {\n                \\Illuminate\\Translation\\Translator::macro($name, $macro);\n            }\n\n            /**\n             * Mix another object into the class.\n             *\n             * @param  object  $mixin\n             * @param  bool  $replace\n             * @return void\n             *\n             * @throws \\ReflectionException\n             * @static\n             */\n            public static function mixin($mixin, $replace = true)\n            {\n                \\Illuminate\\Translation\\Translator::mixin($mixin, $replace);\n            }\n\n            /**\n             * Checks if macro is registered.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function hasMacro($name)\n            {\n                return \\Illuminate\\Translation\\Translator::hasMacro($name);\n            }\n        }\n        /**\n         * @method static void write(string $level, string $message, array $context = [])\n         * @method static void listen(\\Closure $callback)\n         *\n         * @see \\Illuminate\\Log\\Logger\n         */\n        class Log\n        {\n            /**\n             * Create a new, on-demand aggregate logger instance.\n             *\n             * @param  array  $channels\n             * @param  string|null  $channel\n             * @return \\Psr\\Log\\LoggerInterface\n             * @static\n             */\n            public static function stack($channels, $channel = null)\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                return $instance->stack($channels, $channel);\n            }\n\n            /**\n             * Get a log channel instance.\n             *\n             * @param  string|null  $channel\n             * @return \\Psr\\Log\\LoggerInterface\n             * @static\n             */\n            public static function channel($channel = null)\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                return $instance->channel($channel);\n            }\n\n            /**\n             * Get a log driver instance.\n             *\n             * @param  string|null  $driver\n             * @return \\Psr\\Log\\LoggerInterface\n             * @static\n             */\n            public static function driver($driver = null)\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                return $instance->driver($driver);\n            }\n\n            /**\n             * @return array\n             * @static\n             */\n            public static function getChannels()\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                return $instance->getChannels();\n            }\n\n            /**\n             * Get the default log driver name.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDefaultDriver()\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                return $instance->getDefaultDriver();\n            }\n\n            /**\n             * Set the default log driver name.\n             *\n             * @param  string  $name\n             * @return void\n             * @static\n             */\n            public static function setDefaultDriver($name)\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                $instance->setDefaultDriver($name);\n            }\n\n            /**\n             * Register a custom driver creator Closure.\n             *\n             * @param  string  $driver\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Log\\LogManager\n             * @static\n             */\n            public static function extend($driver, $callback)\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                return $instance->extend($driver, $callback);\n            }\n\n            /**\n             * Unset the given channel instance.\n             *\n             * @param  string|null  $driver\n             * @return \\Illuminate\\Log\\LogManager\n             * @static\n             */\n            public static function forgetChannel($driver = null)\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                return $instance->forgetChannel($driver);\n            }\n\n            /**\n             * System is unusable.\n             *\n             * @param  string  $message\n             * @param  array  $context\n             * @return void\n             * @static\n             */\n            public static function emergency($message, $context = [])\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                $instance->emergency($message, $context);\n            }\n\n            /**\n             * Action must be taken immediately.\n             *\n             * Example: Entire website down, database unavailable, etc. This should\n             * trigger the SMS alerts and wake you up.\n             *\n             * @param  string  $message\n             * @param  array  $context\n             * @return void\n             * @static\n             */\n            public static function alert($message, $context = [])\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                $instance->alert($message, $context);\n            }\n\n            /**\n             * Critical conditions.\n             *\n             * Example: Application component unavailable, unexpected exception.\n             *\n             * @param  string  $message\n             * @param  array  $context\n             * @return void\n             * @static\n             */\n            public static function critical($message, $context = [])\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                $instance->critical($message, $context);\n            }\n\n            /**\n             * Runtime errors that do not require immediate action but should typically\n             * be logged and monitored.\n             *\n             * @param  string  $message\n             * @param  array  $context\n             * @return void\n             * @static\n             */\n            public static function error($message, $context = [])\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                $instance->error($message, $context);\n            }\n\n            /**\n             * Exceptional occurrences that are not errors.\n             *\n             * Example: Use of deprecated APIs, poor use of an API, undesirable things\n             * that are not necessarily wrong.\n             *\n             * @param  string  $message\n             * @param  array  $context\n             * @return void\n             * @static\n             */\n            public static function warning($message, $context = [])\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                $instance->warning($message, $context);\n            }\n\n            /**\n             * Normal but significant events.\n             *\n             * @param  string  $message\n             * @param  array  $context\n             * @return void\n             * @static\n             */\n            public static function notice($message, $context = [])\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                $instance->notice($message, $context);\n            }\n\n            /**\n             * Interesting events.\n             *\n             * Example: User logs in, SQL logs.\n             *\n             * @param  string  $message\n             * @param  array  $context\n             * @return void\n             * @static\n             */\n            public static function info($message, $context = [])\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                $instance->info($message, $context);\n            }\n\n            /**\n             * Detailed debug information.\n             *\n             * @param  string  $message\n             * @param  array  $context\n             * @return void\n             * @static\n             */\n            public static function debug($message, $context = [])\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                $instance->debug($message, $context);\n            }\n\n            /**\n             * Logs with an arbitrary level.\n             *\n             * @param  mixed  $level\n             * @param  string  $message\n             * @param  array  $context\n             * @return void\n             * @static\n             */\n            public static function log($level, $message, $context = [])\n            {\n                /** @var \\Illuminate\\Log\\LogManager $instance */\n                $instance->log($level, $message, $context);\n            }\n        }\n        /**\n         * @method static mixed laterOn(string $queue, \\DateTimeInterface|\\DateInterval|int $delay, \\Illuminate\\Contracts\\Mail\\Mailable|string|array $view)\n         * @method static mixed queueOn(string $queue, \\Illuminate\\Contracts\\Mail\\Mailable|string|array $view)\n         * @method static void plain(string $view, array $data, $callback)\n         * @method static void html(string $html, $callback)\n         *\n         * @see \\Illuminate\\Mail\\Mailer\n         * @see \\Illuminate\\Support\\Testing\\Fakes\\MailFake\n         */\n        class Mail\n        {\n            /**\n             * Get a mailer instance by name.\n             *\n             * @param  string|null  $name\n             * @return \\Illuminate\\Mail\\Mailer\n             * @static\n             */\n            public static function mailer($name = null)\n            {\n                /** @var \\Illuminate\\Mail\\MailManager $instance */\n                return $instance->mailer($name);\n            }\n\n            /**\n             * Get a mailer driver instance.\n             *\n             * @param  string|null  $driver\n             * @return \\Illuminate\\Mail\\Mailer\n             * @static\n             */\n            public static function driver($driver = null)\n            {\n                /** @var \\Illuminate\\Mail\\MailManager $instance */\n                return $instance->driver($driver);\n            }\n\n            /**\n             * Create a new transport instance.\n             *\n             * @param  array  $config\n             * @return \\Swift_Transport\n             * @static\n             */\n            public static function createTransport($config)\n            {\n                /** @var \\Illuminate\\Mail\\MailManager $instance */\n                return $instance->createTransport($config);\n            }\n\n            /**\n             * Get the default mail driver name.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDefaultDriver()\n            {\n                /** @var \\Illuminate\\Mail\\MailManager $instance */\n                return $instance->getDefaultDriver();\n            }\n\n            /**\n             * Set the default mail driver name.\n             *\n             * @param  string  $name\n             * @return void\n             * @static\n             */\n            public static function setDefaultDriver($name)\n            {\n                /** @var \\Illuminate\\Mail\\MailManager $instance */\n                $instance->setDefaultDriver($name);\n            }\n\n            /**\n             * Disconnect the given mailer and remove from local cache.\n             *\n             * @param  string|null  $name\n             * @return void\n             * @static\n             */\n            public static function purge($name = null)\n            {\n                /** @var \\Illuminate\\Mail\\MailManager $instance */\n                $instance->purge($name);\n            }\n\n            /**\n             * Register a custom transport creator Closure.\n             *\n             * @param  string  $driver\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Mail\\MailManager\n             * @static\n             */\n            public static function extend($driver, $callback)\n            {\n                /** @var \\Illuminate\\Mail\\MailManager $instance */\n                return $instance->extend($driver, $callback);\n            }\n\n            /**\n             * Assert if a mailable was sent based on a truth-test callback.\n             *\n             * @param  string|\\Closure  $mailable\n             * @param  callable|int|null  $callback\n             * @return void\n             * @static\n             */\n            public static function assertSent($mailable, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                $instance->assertSent($mailable, $callback);\n            }\n\n            /**\n             * Determine if a mailable was not sent based on a truth-test callback.\n             *\n             * @param  string  $mailable\n             * @param  callable|null  $callback\n             * @return void\n             * @static\n             */\n            public static function assertNotSent($mailable, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                $instance->assertNotSent($mailable, $callback);\n            }\n\n            /**\n             * Assert that no mailables were sent.\n             *\n             * @return void\n             * @static\n             */\n            public static function assertNothingSent()\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                $instance->assertNothingSent();\n            }\n\n            /**\n             * Assert if a mailable was queued based on a truth-test callback.\n             *\n             * @param  string|\\Closure  $mailable\n             * @param  callable|int|null  $callback\n             * @return void\n             * @static\n             */\n            public static function assertQueued($mailable, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                $instance->assertQueued($mailable, $callback);\n            }\n\n            /**\n             * Determine if a mailable was not queued based on a truth-test callback.\n             *\n             * @param  string  $mailable\n             * @param  callable|null  $callback\n             * @return void\n             * @static\n             */\n            public static function assertNotQueued($mailable, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                $instance->assertNotQueued($mailable, $callback);\n            }\n\n            /**\n             * Assert that no mailables were queued.\n             *\n             * @return void\n             * @static\n             */\n            public static function assertNothingQueued()\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                $instance->assertNothingQueued();\n            }\n\n            /**\n             * Get all of the mailables matching a truth-test callback.\n             *\n             * @param  string  $mailable\n             * @param  callable|null  $callback\n             * @return \\Illuminate\\Support\\Collection\n             * @static\n             */\n            public static function sent($mailable, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                return $instance->sent($mailable, $callback);\n            }\n\n            /**\n             * Determine if the given mailable has been sent.\n             *\n             * @param  string  $mailable\n             * @return bool\n             * @static\n             */\n            public static function hasSent($mailable)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                return $instance->hasSent($mailable);\n            }\n\n            /**\n             * Get all of the queued mailables matching a truth-test callback.\n             *\n             * @param  string  $mailable\n             * @param  callable|null  $callback\n             * @return \\Illuminate\\Support\\Collection\n             * @static\n             */\n            public static function queued($mailable, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                return $instance->queued($mailable, $callback);\n            }\n\n            /**\n             * Determine if the given mailable has been queued.\n             *\n             * @param  string  $mailable\n             * @return bool\n             * @static\n             */\n            public static function hasQueued($mailable)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                return $instance->hasQueued($mailable);\n            }\n\n            /**\n             * Begin the process of mailing a mailable class instance.\n             *\n             * @param  mixed  $users\n             * @return \\Illuminate\\Mail\\PendingMail\n             * @static\n             */\n            public static function to($users)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                return $instance->to($users);\n            }\n\n            /**\n             * Begin the process of mailing a mailable class instance.\n             *\n             * @param  mixed  $users\n             * @return \\Illuminate\\Mail\\PendingMail\n             * @static\n             */\n            public static function bcc($users)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                return $instance->bcc($users);\n            }\n\n            /**\n             * Send a new message with only a raw text part.\n             *\n             * @param  string  $text\n             * @param  \\Closure|string  $callback\n             * @return void\n             * @static\n             */\n            public static function raw($text, $callback)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                $instance->raw($text, $callback);\n            }\n\n            /**\n             * Send a new message using a view.\n             *\n             * @param  string|array  $view\n             * @param  array  $data\n             * @param  \\Closure|string|null  $callback\n             * @return void\n             * @static\n             */\n            public static function send($view, $data = [], $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                $instance->send($view, $data, $callback);\n            }\n\n            /**\n             * Queue a new e-mail message for sending.\n             *\n             * @param  string|array  $view\n             * @param  string|null  $queue\n             * @return mixed\n             * @static\n             */\n            public static function queue($view, $queue = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                return $instance->queue($view, $queue);\n            }\n\n            /**\n             * Queue a new e-mail message for sending after (n) seconds.\n             *\n             * @param  \\DateTimeInterface|\\DateInterval|int  $delay\n             * @param  \\Illuminate\\Contracts\\Mail\\Mailable|string|array  $view\n             * @param  string|null  $queue\n             * @return mixed\n             * @static\n             */\n            public static function later($delay, $view, $queue = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                return $instance->later($delay, $view, $queue);\n            }\n\n            /**\n             * Get the array of failed recipients.\n             *\n             * @return array\n             * @static\n             */\n            public static function failures()\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                return $instance->failures();\n            }\n        }\n        /**\n         * @see \\Illuminate\\Notifications\\ChannelManager\n         */\n        class Notification\n        {\n            /**\n             * Send the given notification to the given notifiable entities.\n             *\n             * @param  \\Illuminate\\Support\\Collection|array|mixed  $notifiables\n             * @param  mixed  $notification\n             * @return void\n             * @static\n             */\n            public static function send($notifiables, $notification)\n            {\n                /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                $instance->send($notifiables, $notification);\n            }\n\n            /**\n             * Send the given notification immediately.\n             *\n             * @param  \\Illuminate\\Support\\Collection|array|mixed  $notifiables\n             * @param  mixed  $notification\n             * @param  array|null  $channels\n             * @return void\n             * @static\n             */\n            public static function sendNow($notifiables, $notification, $channels = null)\n            {\n                /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                $instance->sendNow($notifiables, $notification, $channels);\n            }\n\n            /**\n             * Get a channel instance.\n             *\n             * @param  string|null  $name\n             * @return mixed\n             * @static\n             */\n            public static function channel($name = null)\n            {\n                /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                return $instance->channel($name);\n            }\n\n            /**\n             * Get the default channel driver name.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDefaultDriver()\n            {\n                /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                return $instance->getDefaultDriver();\n            }\n\n            /**\n             * Get the default channel driver name.\n             *\n             * @return string\n             * @static\n             */\n            public static function deliversVia()\n            {\n                /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                return $instance->deliversVia();\n            }\n\n            /**\n             * Set the default channel driver name.\n             *\n             * @param  string  $channel\n             * @return void\n             * @static\n             */\n            public static function deliverVia($channel)\n            {\n                /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                $instance->deliverVia($channel);\n            }\n\n            /**\n             * Set the locale of notifications.\n             *\n             * @param  string  $locale\n             * @return \\Illuminate\\Notifications\\ChannelManager\n             * @static\n             */\n            public static function locale($locale)\n            {\n                /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                return $instance->locale($locale);\n            }\n\n            /**\n             * Get a driver instance.\n             *\n             * @param  string|null  $driver\n             * @return mixed\n             *\n             * @throws \\InvalidArgumentException\n             * @static\n             */\n            public static function driver($driver = null)\n            {            //Method inherited from \\Illuminate\\Support\\Manager\n                /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                return $instance->driver($driver);\n            }\n\n            /**\n             * Register a custom driver creator Closure.\n             *\n             * @param  string  $driver\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Notifications\\ChannelManager\n             * @static\n             */\n            public static function extend($driver, $callback)\n            {            //Method inherited from \\Illuminate\\Support\\Manager\n                /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                return $instance->extend($driver, $callback);\n            }\n\n            /**\n             * Get all of the created \"drivers\".\n             *\n             * @return array\n             * @static\n             */\n            public static function getDrivers()\n            {            //Method inherited from \\Illuminate\\Support\\Manager\n                /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                return $instance->getDrivers();\n            }\n\n            /**\n             * Assert if a notification was sent based on a truth-test callback.\n             *\n             * @param  mixed  $notifiable\n             * @param  string|\\Closure  $notification\n             * @param  callable|null  $callback\n             * @return void\n             *\n             * @throws \\Exception\n             * @static\n             */\n            public static function assertSentTo($notifiable, $notification, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                $instance->assertSentTo($notifiable, $notification, $callback);\n            }\n\n            /**\n             * Assert if a notification was sent a number of times.\n             *\n             * @param  mixed  $notifiable\n             * @param  string  $notification\n             * @param  int  $times\n             * @return void\n             * @static\n             */\n            public static function assertSentToTimes($notifiable, $notification, $times = 1)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                $instance->assertSentToTimes($notifiable, $notification, $times);\n            }\n\n            /**\n             * Determine if a notification was sent based on a truth-test callback.\n             *\n             * @param  mixed  $notifiable\n             * @param  string|\\Closure  $notification\n             * @param  callable|null  $callback\n             * @return void\n             *\n             * @throws \\Exception\n             * @static\n             */\n            public static function assertNotSentTo($notifiable, $notification, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                $instance->assertNotSentTo($notifiable, $notification, $callback);\n            }\n\n            /**\n             * Assert that no notifications were sent.\n             *\n             * @return void\n             * @static\n             */\n            public static function assertNothingSent()\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                $instance->assertNothingSent();\n            }\n\n            /**\n             * Assert the total amount of times a notification was sent.\n             *\n             * @param  int  $expectedCount\n             * @param  string  $notification\n             * @return void\n             * @static\n             */\n            public static function assertTimesSent($expectedCount, $notification)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                $instance->assertTimesSent($expectedCount, $notification);\n            }\n\n            /**\n             * Get all of the notifications matching a truth-test callback.\n             *\n             * @param  mixed  $notifiable\n             * @param  string  $notification\n             * @param  callable|null  $callback\n             * @return \\Illuminate\\Support\\Collection\n             * @static\n             */\n            public static function sent($notifiable, $notification, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                return $instance->sent($notifiable, $notification, $callback);\n            }\n\n            /**\n             * Determine if there are more notifications left to inspect.\n             *\n             * @param  mixed  $notifiable\n             * @param  string  $notification\n             * @return bool\n             * @static\n             */\n            public static function hasSent($notifiable, $notification)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                return $instance->hasSent($notifiable, $notification);\n            }\n\n            /**\n             * Register a custom macro.\n             *\n             * @param  string  $name\n             * @param  object|callable  $macro\n             * @return void\n             * @static\n             */\n            public static function macro($name, $macro)\n            {\n                \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake::macro($name, $macro);\n            }\n\n            /**\n             * Mix another object into the class.\n             *\n             * @param  object  $mixin\n             * @param  bool  $replace\n             * @return void\n             *\n             * @throws \\ReflectionException\n             * @static\n             */\n            public static function mixin($mixin, $replace = true)\n            {\n                \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake::mixin($mixin, $replace);\n            }\n\n            /**\n             * Checks if macro is registered.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function hasMacro($name)\n            {\n                return \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake::hasMacro($name);\n            }\n        }\n        /**\n         * @method static mixed reset(array $credentials, \\Closure $callback)\n         * @method static string sendResetLink(array $credentials)\n         * @method static \\Illuminate\\Contracts\\Auth\\CanResetPassword getUser(array $credentials)\n         * @method static string createToken(\\Illuminate\\Contracts\\Auth\\CanResetPassword $user)\n         * @method static void deleteToken(\\Illuminate\\Contracts\\Auth\\CanResetPassword $user)\n         * @method static bool tokenExists(\\Illuminate\\Contracts\\Auth\\CanResetPassword $user, string $token)\n         * @method static \\Illuminate\\Auth\\Passwords\\TokenRepositoryInterface getRepository()\n         *\n         * @see \\Illuminate\\Auth\\Passwords\\PasswordBroker\n         */\n        class Password\n        {\n            /**\n             * Attempt to get the broker from the local cache.\n             *\n             * @param  string|null  $name\n             * @return \\Illuminate\\Contracts\\Auth\\PasswordBroker\n             * @static\n             */\n            public static function broker($name = null)\n            {\n                /** @var \\Illuminate\\Auth\\Passwords\\PasswordBrokerManager $instance */\n                return $instance->broker($name);\n            }\n\n            /**\n             * Get the default password broker name.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDefaultDriver()\n            {\n                /** @var \\Illuminate\\Auth\\Passwords\\PasswordBrokerManager $instance */\n                return $instance->getDefaultDriver();\n            }\n\n            /**\n             * Set the default password broker name.\n             *\n             * @param  string  $name\n             * @return void\n             * @static\n             */\n            public static function setDefaultDriver($name)\n            {\n                /** @var \\Illuminate\\Auth\\Passwords\\PasswordBrokerManager $instance */\n                $instance->setDefaultDriver($name);\n            }\n        }\n        /**\n         * @method static void popUsing(string $workerName, callable $callback)\n         *\n         * @see \\Illuminate\\Queue\\QueueManager\n         * @see \\Illuminate\\Queue\\Queue\n         */\n        class Queue\n        {\n            /**\n             * Register an event listener for the before job event.\n             *\n             * @param  mixed  $callback\n             * @return void\n             * @static\n             */\n            public static function before($callback)\n            {\n                /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                $instance->before($callback);\n            }\n\n            /**\n             * Register an event listener for the after job event.\n             *\n             * @param  mixed  $callback\n             * @return void\n             * @static\n             */\n            public static function after($callback)\n            {\n                /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                $instance->after($callback);\n            }\n\n            /**\n             * Register an event listener for the exception occurred job event.\n             *\n             * @param  mixed  $callback\n             * @return void\n             * @static\n             */\n            public static function exceptionOccurred($callback)\n            {\n                /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                $instance->exceptionOccurred($callback);\n            }\n\n            /**\n             * Register an event listener for the daemon queue loop.\n             *\n             * @param  mixed  $callback\n             * @return void\n             * @static\n             */\n            public static function looping($callback)\n            {\n                /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                $instance->looping($callback);\n            }\n\n            /**\n             * Register an event listener for the failed job event.\n             *\n             * @param  mixed  $callback\n             * @return void\n             * @static\n             */\n            public static function failing($callback)\n            {\n                /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                $instance->failing($callback);\n            }\n\n            /**\n             * Register an event listener for the daemon queue stopping.\n             *\n             * @param  mixed  $callback\n             * @return void\n             * @static\n             */\n            public static function stopping($callback)\n            {\n                /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                $instance->stopping($callback);\n            }\n\n            /**\n             * Determine if the driver is connected.\n             *\n             * @param  string|null  $name\n             * @return bool\n             * @static\n             */\n            public static function connected($name = null)\n            {\n                /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                return $instance->connected($name);\n            }\n\n            /**\n             * Resolve a queue connection instance.\n             *\n             * @param  string|null  $name\n             * @return \\Illuminate\\Contracts\\Queue\\Queue\n             * @static\n             */\n            public static function connection($name = null)\n            {\n                /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                return $instance->connection($name);\n            }\n\n            /**\n             * Add a queue connection resolver.\n             *\n             * @param  string  $driver\n             * @param  \\Closure  $resolver\n             * @return void\n             * @static\n             */\n            public static function extend($driver, $resolver)\n            {\n                /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                $instance->extend($driver, $resolver);\n            }\n\n            /**\n             * Add a queue connection resolver.\n             *\n             * @param  string  $driver\n             * @param  \\Closure  $resolver\n             * @return void\n             * @static\n             */\n            public static function addConnector($driver, $resolver)\n            {\n                /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                $instance->addConnector($driver, $resolver);\n            }\n\n            /**\n             * Get the name of the default queue connection.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDefaultDriver()\n            {\n                /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                return $instance->getDefaultDriver();\n            }\n\n            /**\n             * Set the name of the default queue connection.\n             *\n             * @param  string  $name\n             * @return void\n             * @static\n             */\n            public static function setDefaultDriver($name)\n            {\n                /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                $instance->setDefaultDriver($name);\n            }\n\n            /**\n             * Get the full name for the given connection.\n             *\n             * @param  string|null  $connection\n             * @return string\n             * @static\n             */\n            public static function getName($connection = null)\n            {\n                /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                return $instance->getName($connection);\n            }\n\n            /**\n             * Assert if a job was pushed based on a truth-test callback.\n             *\n             * @param  string|\\Closure  $job\n             * @param  callable|int|null  $callback\n             * @return void\n             * @static\n             */\n            public static function assertPushed($job, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                $instance->assertPushed($job, $callback);\n            }\n\n            /**\n             * Assert if a job was pushed based on a truth-test callback.\n             *\n             * @param  string  $queue\n             * @param  string|\\Closure  $job\n             * @param  callable|null  $callback\n             * @return void\n             * @static\n             */\n            public static function assertPushedOn($queue, $job, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                $instance->assertPushedOn($queue, $job, $callback);\n            }\n\n            /**\n             * Assert if a job was pushed with chained jobs based on a truth-test callback.\n             *\n             * @param  string  $job\n             * @param  array  $expectedChain\n             * @param  callable|null  $callback\n             * @return void\n             * @static\n             */\n            public static function assertPushedWithChain($job, $expectedChain = [], $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                $instance->assertPushedWithChain($job, $expectedChain, $callback);\n            }\n\n            /**\n             * Assert if a job was pushed with an empty chain based on a truth-test callback.\n             *\n             * @param  string  $job\n             * @param  callable|null  $callback\n             * @return void\n             * @static\n             */\n            public static function assertPushedWithoutChain($job, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                $instance->assertPushedWithoutChain($job, $callback);\n            }\n\n            /**\n             * Determine if a job was pushed based on a truth-test callback.\n             *\n             * @param  string|\\Closure  $job\n             * @param  callable|null  $callback\n             * @return void\n             * @static\n             */\n            public static function assertNotPushed($job, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                $instance->assertNotPushed($job, $callback);\n            }\n\n            /**\n             * Assert that no jobs were pushed.\n             *\n             * @return void\n             * @static\n             */\n            public static function assertNothingPushed()\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                $instance->assertNothingPushed();\n            }\n\n            /**\n             * Get all of the jobs matching a truth-test callback.\n             *\n             * @param  string  $job\n             * @param  callable|null  $callback\n             * @return \\Illuminate\\Support\\Collection\n             * @static\n             */\n            public static function pushed($job, $callback = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                return $instance->pushed($job, $callback);\n            }\n\n            /**\n             * Determine if there are any stored jobs for a given class.\n             *\n             * @param  string  $job\n             * @return bool\n             * @static\n             */\n            public static function hasPushed($job)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                return $instance->hasPushed($job);\n            }\n\n            /**\n             * Get the size of the queue.\n             *\n             * @param  string|null  $queue\n             * @return int\n             * @static\n             */\n            public static function size($queue = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                return $instance->size($queue);\n            }\n\n            /**\n             * Push a new job onto the queue.\n             *\n             * @param  string  $job\n             * @param  mixed  $data\n             * @param  string|null  $queue\n             * @return mixed\n             * @static\n             */\n            public static function push($job, $data = '', $queue = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                return $instance->push($job, $data, $queue);\n            }\n\n            /**\n             * Push a raw payload onto the queue.\n             *\n             * @param  string  $payload\n             * @param  string|null  $queue\n             * @param  array  $options\n             * @return mixed\n             * @static\n             */\n            public static function pushRaw($payload, $queue = null, $options = [])\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                return $instance->pushRaw($payload, $queue, $options);\n            }\n\n            /**\n             * Push a new job onto the queue after a delay.\n             *\n             * @param  \\DateTimeInterface|\\DateInterval|int  $delay\n             * @param  string  $job\n             * @param  mixed  $data\n             * @param  string|null  $queue\n             * @return mixed\n             * @static\n             */\n            public static function later($delay, $job, $data = '', $queue = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                return $instance->later($delay, $job, $data, $queue);\n            }\n\n            /**\n             * Push a new job onto the queue.\n             *\n             * @param  string  $queue\n             * @param  string  $job\n             * @param  mixed  $data\n             * @return mixed\n             * @static\n             */\n            public static function pushOn($queue, $job, $data = '')\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                return $instance->pushOn($queue, $job, $data);\n            }\n\n            /**\n             * Push a new job onto the queue after a delay.\n             *\n             * @param  string  $queue\n             * @param  \\DateTimeInterface|\\DateInterval|int  $delay\n             * @param  string  $job\n             * @param  mixed  $data\n             * @return mixed\n             * @static\n             */\n            public static function laterOn($queue, $delay, $job, $data = '')\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                return $instance->laterOn($queue, $delay, $job, $data);\n            }\n\n            /**\n             * Pop the next job off of the queue.\n             *\n             * @param  string|null  $queue\n             * @return \\Illuminate\\Contracts\\Queue\\Job|null\n             * @static\n             */\n            public static function pop($queue = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                return $instance->pop($queue);\n            }\n\n            /**\n             * Push an array of jobs onto the queue.\n             *\n             * @param  array  $jobs\n             * @param  mixed  $data\n             * @param  string|null  $queue\n             * @return mixed\n             * @static\n             */\n            public static function bulk($jobs, $data = '', $queue = null)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                return $instance->bulk($jobs, $data, $queue);\n            }\n\n            /**\n             * Get the jobs that have been pushed.\n             *\n             * @return array\n             * @static\n             */\n            public static function pushedJobs()\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                return $instance->pushedJobs();\n            }\n\n            /**\n             * Get the connection name for the queue.\n             *\n             * @return string\n             * @static\n             */\n            public static function getConnectionName()\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                return $instance->getConnectionName();\n            }\n\n            /**\n             * Set the connection name for the queue.\n             *\n             * @param  string  $name\n             * @return \\Illuminate\\Support\\Testing\\Fakes\\QueueFake\n             * @static\n             */\n            public static function setConnectionName($name)\n            {\n                /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                return $instance->setConnectionName($name);\n            }\n\n            /**\n             * Get the backoff for an object-based queue handler.\n             *\n             * @param  mixed  $job\n             * @return mixed\n             * @static\n             */\n            public static function getJobBackoff($job)\n            {            //Method inherited from \\Illuminate\\Queue\\Queue\n                /** @var \\Illuminate\\Queue\\SyncQueue $instance */\n                return $instance->getJobBackoff($job);\n            }\n\n            /**\n             * Get the expiration timestamp for an object-based queue handler.\n             *\n             * @param  mixed  $job\n             * @return mixed\n             * @static\n             */\n            public static function getJobExpiration($job)\n            {            //Method inherited from \\Illuminate\\Queue\\Queue\n                /** @var \\Illuminate\\Queue\\SyncQueue $instance */\n                return $instance->getJobExpiration($job);\n            }\n\n            /**\n             * Register a callback to be executed when creating job payloads.\n             *\n             * @param  callable  $callback\n             * @return void\n             * @static\n             */\n            public static function createPayloadUsing($callback)\n            {            //Method inherited from \\Illuminate\\Queue\\Queue\n                \\Illuminate\\Queue\\SyncQueue::createPayloadUsing($callback);\n            }\n\n            /**\n             * Set the IoC container instance.\n             *\n             * @param  \\Illuminate\\Container\\Container  $container\n             * @return void\n             * @static\n             */\n            public static function setContainer($container)\n            {            //Method inherited from \\Illuminate\\Queue\\Queue\n                /** @var \\Illuminate\\Queue\\SyncQueue $instance */\n                $instance->setContainer($container);\n            }\n        }\n        /**\n         * @see \\Illuminate\\Routing\\Redirector\n         */\n        class Redirect\n        {\n            /**\n             * Create a new redirect response to the \"home\" route.\n             *\n             * @param  int  $status\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function home($status = 302)\n            {\n                /** @var \\Illuminate\\Routing\\Redirector $instance */\n                return $instance->home($status);\n            }\n\n            /**\n             * Create a new redirect response to the previous location.\n             *\n             * @param  int  $status\n             * @param  array  $headers\n             * @param  mixed  $fallback\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function back($status = 302, $headers = [], $fallback = false)\n            {\n                /** @var \\Illuminate\\Routing\\Redirector $instance */\n                return $instance->back($status, $headers, $fallback);\n            }\n\n            /**\n             * Create a new redirect response to the current URI.\n             *\n             * @param  int  $status\n             * @param  array  $headers\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function refresh($status = 302, $headers = [])\n            {\n                /** @var \\Illuminate\\Routing\\Redirector $instance */\n                return $instance->refresh($status, $headers);\n            }\n\n            /**\n             * Create a new redirect response, while putting the current URL in the session.\n             *\n             * @param  string  $path\n             * @param  int  $status\n             * @param  array  $headers\n             * @param  bool|null  $secure\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function guest($path, $status = 302, $headers = [], $secure = null)\n            {\n                /** @var \\Illuminate\\Routing\\Redirector $instance */\n                return $instance->guest($path, $status, $headers, $secure);\n            }\n\n            /**\n             * Create a new redirect response to the previously intended location.\n             *\n             * @param  string  $default\n             * @param  int  $status\n             * @param  array  $headers\n             * @param  bool|null  $secure\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function intended($default = '/', $status = 302, $headers = [], $secure = null)\n            {\n                /** @var \\Illuminate\\Routing\\Redirector $instance */\n                return $instance->intended($default, $status, $headers, $secure);\n            }\n\n            /**\n             * Set the intended url.\n             *\n             * @param  string  $url\n             * @return void\n             * @static\n             */\n            public static function setIntendedUrl($url)\n            {\n                /** @var \\Illuminate\\Routing\\Redirector $instance */\n                $instance->setIntendedUrl($url);\n            }\n\n            /**\n             * Create a new redirect response to the given path.\n             *\n             * @param  string  $path\n             * @param  int  $status\n             * @param  array  $headers\n             * @param  bool|null  $secure\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function to($path, $status = 302, $headers = [], $secure = null)\n            {\n                /** @var \\Illuminate\\Routing\\Redirector $instance */\n                return $instance->to($path, $status, $headers, $secure);\n            }\n\n            /**\n             * Create a new redirect response to an external URL (no validation).\n             *\n             * @param  string  $path\n             * @param  int  $status\n             * @param  array  $headers\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function away($path, $status = 302, $headers = [])\n            {\n                /** @var \\Illuminate\\Routing\\Redirector $instance */\n                return $instance->away($path, $status, $headers);\n            }\n\n            /**\n             * Create a new redirect response to the given HTTPS path.\n             *\n             * @param  string  $path\n             * @param  int  $status\n             * @param  array  $headers\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function secure($path, $status = 302, $headers = [])\n            {\n                /** @var \\Illuminate\\Routing\\Redirector $instance */\n                return $instance->secure($path, $status, $headers);\n            }\n\n            /**\n             * Create a new redirect response to a named route.\n             *\n             * @param  string  $route\n             * @param  mixed  $parameters\n             * @param  int  $status\n             * @param  array  $headers\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function route($route, $parameters = [], $status = 302, $headers = [])\n            {\n                /** @var \\Illuminate\\Routing\\Redirector $instance */\n                return $instance->route($route, $parameters, $status, $headers);\n            }\n\n            /**\n             * Create a new redirect response to a signed named route.\n             *\n             * @param  string  $route\n             * @param  mixed  $parameters\n             * @param  \\DateTimeInterface|\\DateInterval|int|null  $expiration\n             * @param  int  $status\n             * @param  array  $headers\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function signedRoute($route, $parameters = [], $expiration = null, $status = 302, $headers = [])\n            {\n                /** @var \\Illuminate\\Routing\\Redirector $instance */\n                return $instance->signedRoute($route, $parameters, $expiration, $status, $headers);\n            }\n\n            /**\n             * Create a new redirect response to a signed named route.\n             *\n             * @param  string  $route\n             * @param  \\DateTimeInterface|\\DateInterval|int|null  $expiration\n             * @param  mixed  $parameters\n             * @param  int  $status\n             * @param  array  $headers\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function temporarySignedRoute($route, $expiration, $parameters = [], $status = 302, $headers = [])\n            {\n                /** @var \\Illuminate\\Routing\\Redirector $instance */\n                return $instance->temporarySignedRoute($route, $expiration, $parameters, $status, $headers);\n            }\n\n            /**\n             * Create a new redirect response to a controller action.\n             *\n             * @param  string|array  $action\n             * @param  mixed  $parameters\n             * @param  int  $status\n             * @param  array  $headers\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function action($action, $parameters = [], $status = 302, $headers = [])\n            {\n                /** @var \\Illuminate\\Routing\\Redirector $instance */\n                return $instance->action($action, $parameters, $status, $headers);\n            }\n\n            /**\n             * Get the URL generator instance.\n             *\n             * @return \\Illuminate\\Routing\\UrlGenerator\n             * @static\n             */\n            public static function getUrlGenerator()\n            {\n                /** @var \\Illuminate\\Routing\\Redirector $instance */\n                return $instance->getUrlGenerator();\n            }\n\n            /**\n             * Set the active session store.\n             *\n             * @param  \\Illuminate\\Session\\Store  $session\n             * @return void\n             * @static\n             */\n            public static function setSession($session)\n            {\n                /** @var \\Illuminate\\Routing\\Redirector $instance */\n                $instance->setSession($session);\n            }\n\n            /**\n             * Register a custom macro.\n             *\n             * @param  string  $name\n             * @param  object|callable  $macro\n             * @return void\n             * @static\n             */\n            public static function macro($name, $macro)\n            {\n                \\Illuminate\\Routing\\Redirector::macro($name, $macro);\n            }\n\n            /**\n             * Mix another object into the class.\n             *\n             * @param  object  $mixin\n             * @param  bool  $replace\n             * @return void\n             *\n             * @throws \\ReflectionException\n             * @static\n             */\n            public static function mixin($mixin, $replace = true)\n            {\n                \\Illuminate\\Routing\\Redirector::mixin($mixin, $replace);\n            }\n\n            /**\n             * Checks if macro is registered.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function hasMacro($name)\n            {\n                return \\Illuminate\\Routing\\Redirector::hasMacro($name);\n            }\n        }\n\n        class Redis\n        {\n            /**\n             * Get a Redis connection by name.\n             *\n             * @param  string|null  $name\n             * @return \\Illuminate\\Redis\\Connections\\Connection\n             * @static\n             */\n            public static function connection($name = null)\n            {\n                /** @var \\Illuminate\\Redis\\RedisManager $instance */\n                return $instance->connection($name);\n            }\n\n            /**\n             * Resolve the given connection by name.\n             *\n             * @param  string|null  $name\n             * @return \\Illuminate\\Redis\\Connections\\Connection\n             *\n             * @throws \\InvalidArgumentException\n             * @static\n             */\n            public static function resolve($name = null)\n            {\n                /** @var \\Illuminate\\Redis\\RedisManager $instance */\n                return $instance->resolve($name);\n            }\n\n            /**\n             * Return all of the created connections.\n             *\n             * @return array\n             * @static\n             */\n            public static function connections()\n            {\n                /** @var \\Illuminate\\Redis\\RedisManager $instance */\n                return $instance->connections();\n            }\n\n            /**\n             * Enable the firing of Redis command events.\n             *\n             * @return void\n             * @static\n             */\n            public static function enableEvents()\n            {\n                /** @var \\Illuminate\\Redis\\RedisManager $instance */\n                $instance->enableEvents();\n            }\n\n            /**\n             * Disable the firing of Redis command events.\n             *\n             * @return void\n             * @static\n             */\n            public static function disableEvents()\n            {\n                /** @var \\Illuminate\\Redis\\RedisManager $instance */\n                $instance->disableEvents();\n            }\n\n            /**\n             * Set the default driver.\n             *\n             * @param  string  $driver\n             * @return void\n             * @static\n             */\n            public static function setDriver($driver)\n            {\n                /** @var \\Illuminate\\Redis\\RedisManager $instance */\n                $instance->setDriver($driver);\n            }\n\n            /**\n             * Disconnect the given connection and remove from local cache.\n             *\n             * @param  string|null  $name\n             * @return void\n             * @static\n             */\n            public static function purge($name = null)\n            {\n                /** @var \\Illuminate\\Redis\\RedisManager $instance */\n                $instance->purge($name);\n            }\n\n            /**\n             * Register a custom driver creator Closure.\n             *\n             * @param  string  $driver\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Redis\\RedisManager\n             * @static\n             */\n            public static function extend($driver, $callback)\n            {\n                /** @var \\Illuminate\\Redis\\RedisManager $instance */\n                return $instance->extend($driver, $callback);\n            }\n        }\n        /**\n         * @method static mixed filterFiles(mixed $files)\n         *\n         * @see \\Illuminate\\Http\\Request\n         */\n        class Request\n        {\n            /**\n             * Create a new Illuminate HTTP request from server variables.\n             *\n             * @return static\n             * @static\n             */\n            public static function capture()\n            {\n                return \\Illuminate\\Http\\Request::capture();\n            }\n\n            /**\n             * Return the Request instance.\n             *\n             * @return \\Illuminate\\Http\\Request\n             * @static\n             */\n            public static function instance()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->instance();\n            }\n\n            /**\n             * Get the request method.\n             *\n             * @return string\n             * @static\n             */\n            public static function method()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->method();\n            }\n\n            /**\n             * Get the root URL for the application.\n             *\n             * @return string\n             * @static\n             */\n            public static function root()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->root();\n            }\n\n            /**\n             * Get the URL (no query string) for the request.\n             *\n             * @return string\n             * @static\n             */\n            public static function url()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->url();\n            }\n\n            /**\n             * Get the full URL for the request.\n             *\n             * @return string\n             * @static\n             */\n            public static function fullUrl()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->fullUrl();\n            }\n\n            /**\n             * Get the full URL for the request with the added query string parameters.\n             *\n             * @param  array  $query\n             * @return string\n             * @static\n             */\n            public static function fullUrlWithQuery($query)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->fullUrlWithQuery($query);\n            }\n\n            /**\n             * Get the current path info for the request.\n             *\n             * @return string\n             * @static\n             */\n            public static function path()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->path();\n            }\n\n            /**\n             * Get the current decoded path info for the request.\n             *\n             * @return string\n             * @static\n             */\n            public static function decodedPath()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->decodedPath();\n            }\n\n            /**\n             * Get a segment from the URI (1 based index).\n             *\n             * @param  int  $index\n             * @param  string|null  $default\n             * @return string|null\n             * @static\n             */\n            public static function segment($index, $default = null)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->segment($index, $default);\n            }\n\n            /**\n             * Get all of the segments for the request path.\n             *\n             * @return array\n             * @static\n             */\n            public static function segments()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->segments();\n            }\n\n            /**\n             * Determine if the current request URI matches a pattern.\n             *\n             * @param  mixed  $patterns\n             * @return bool\n             * @static\n             */\n            public static function is(...$patterns)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->is(...$patterns);\n            }\n\n            /**\n             * Determine if the route name matches a given pattern.\n             *\n             * @param  mixed  $patterns\n             * @return bool\n             * @static\n             */\n            public static function routeIs(...$patterns)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->routeIs(...$patterns);\n            }\n\n            /**\n             * Determine if the current request URL and query string matches a pattern.\n             *\n             * @param  mixed  $patterns\n             * @return bool\n             * @static\n             */\n            public static function fullUrlIs(...$patterns)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->fullUrlIs(...$patterns);\n            }\n\n            /**\n             * Determine if the request is the result of an AJAX call.\n             *\n             * @return bool\n             * @static\n             */\n            public static function ajax()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->ajax();\n            }\n\n            /**\n             * Determine if the request is the result of an PJAX call.\n             *\n             * @return bool\n             * @static\n             */\n            public static function pjax()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->pjax();\n            }\n\n            /**\n             * Determine if the request is the result of an prefetch call.\n             *\n             * @return bool\n             * @static\n             */\n            public static function prefetch()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->prefetch();\n            }\n\n            /**\n             * Determine if the request is over HTTPS.\n             *\n             * @return bool\n             * @static\n             */\n            public static function secure()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->secure();\n            }\n\n            /**\n             * Get the client IP address.\n             *\n             * @return string|null\n             * @static\n             */\n            public static function ip()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->ip();\n            }\n\n            /**\n             * Get the client IP addresses.\n             *\n             * @return array\n             * @static\n             */\n            public static function ips()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->ips();\n            }\n\n            /**\n             * Get the client user agent.\n             *\n             * @return string|null\n             * @static\n             */\n            public static function userAgent()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->userAgent();\n            }\n\n            /**\n             * Merge new input into the current request's input array.\n             *\n             * @param  array  $input\n             * @return \\Illuminate\\Http\\Request\n             * @static\n             */\n            public static function merge($input)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->merge($input);\n            }\n\n            /**\n             * Replace the input for the current request.\n             *\n             * @param  array  $input\n             * @return \\Illuminate\\Http\\Request\n             * @static\n             */\n            public static function replace($input)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->replace($input);\n            }\n\n            /**\n             * This method belongs to Symfony HttpFoundation and is not usually needed when using Laravel.\n             *\n             * Instead, you may use the \"input\" method.\n             *\n             * @param  string  $key\n             * @param  mixed  $default\n             * @return mixed\n             * @static\n             */\n            public static function get($key, $default = null)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->get($key, $default);\n            }\n\n            /**\n             * Get the JSON payload for the request.\n             *\n             * @param  string|null  $key\n             * @param  mixed  $default\n             * @return \\Symfony\\Component\\HttpFoundation\\ParameterBag|mixed\n             * @static\n             */\n            public static function json($key = null, $default = null)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->json($key, $default);\n            }\n\n            /**\n             * Create a new request instance from the given Laravel request.\n             *\n             * @param  \\Illuminate\\Http\\Request  $from\n             * @param  \\Illuminate\\Http\\Request|null  $to\n             * @return static\n             * @static\n             */\n            public static function createFrom($from, $to = null)\n            {\n                return \\Illuminate\\Http\\Request::createFrom($from, $to);\n            }\n\n            /**\n             * Create an Illuminate request from a Symfony instance.\n             *\n             * @param  \\Symfony\\Component\\HttpFoundation\\Request  $request\n             * @return static\n             * @static\n             */\n            public static function createFromBase($request)\n            {\n                return \\Illuminate\\Http\\Request::createFromBase($request);\n            }\n\n            /**\n             * Clones a request and overrides some of its parameters.\n             *\n             * @param  array  $query  The GET parameters\n             * @param  array  $request  The POST parameters\n             * @param  array  $attributes  The request attributes (parameters parsed from the PATH_INFO, ...)\n             * @param  array  $cookies  The COOKIE parameters\n             * @param  array  $files  The FILES parameters\n             * @param  array  $server  The SERVER parameters\n             * @return static\n             * @static\n             */\n            public static function duplicate($query = null, $request = null, $attributes = null, $cookies = null, $files = null, $server = null)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->duplicate($query, $request, $attributes, $cookies, $files, $server);\n            }\n\n            /**\n             * Get the session associated with the request.\n             *\n             * @return \\Illuminate\\Session\\Store\n             *\n             * @throws \\RuntimeException\n             * @static\n             */\n            public static function session()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->session();\n            }\n\n            /**\n             * Get the session associated with the request.\n             *\n             * @return \\Illuminate\\Session\\Store|null\n             * @static\n             */\n            public static function getSession()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getSession();\n            }\n\n            /**\n             * Set the session instance on the request.\n             *\n             * @param  \\Illuminate\\Contracts\\Session\\Session  $session\n             * @return void\n             * @static\n             */\n            public static function setLaravelSession($session)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                $instance->setLaravelSession($session);\n            }\n\n            /**\n             * Get the user making the request.\n             *\n             * @param  string|null  $guard\n             * @return mixed\n             * @static\n             */\n            public static function user($guard = null)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->user($guard);\n            }\n\n            /**\n             * Get the route handling the request.\n             *\n             * @param  string|null  $param\n             * @param  mixed  $default\n             * @return \\Illuminate\\Routing\\Route|object|string|null\n             * @static\n             */\n            public static function route($param = null, $default = null)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->route($param, $default);\n            }\n\n            /**\n             * Get a unique fingerprint for the request / route / IP address.\n             *\n             * @return string\n             *\n             * @throws \\RuntimeException\n             * @static\n             */\n            public static function fingerprint()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->fingerprint();\n            }\n\n            /**\n             * Set the JSON payload for the request.\n             *\n             * @param  \\Symfony\\Component\\HttpFoundation\\ParameterBag  $json\n             * @return \\Illuminate\\Http\\Request\n             * @static\n             */\n            public static function setJson($json)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->setJson($json);\n            }\n\n            /**\n             * Get the user resolver callback.\n             *\n             * @return \\Closure\n             * @static\n             */\n            public static function getUserResolver()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getUserResolver();\n            }\n\n            /**\n             * Set the user resolver callback.\n             *\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Http\\Request\n             * @static\n             */\n            public static function setUserResolver($callback)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->setUserResolver($callback);\n            }\n\n            /**\n             * Get the route resolver callback.\n             *\n             * @return \\Closure\n             * @static\n             */\n            public static function getRouteResolver()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getRouteResolver();\n            }\n\n            /**\n             * Set the route resolver callback.\n             *\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Http\\Request\n             * @static\n             */\n            public static function setRouteResolver($callback)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->setRouteResolver($callback);\n            }\n\n            /**\n             * Get all of the input and files for the request.\n             *\n             * @return array\n             * @static\n             */\n            public static function toArray()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->toArray();\n            }\n\n            /**\n             * Determine if the given offset exists.\n             *\n             * @param  string  $offset\n             * @return bool\n             * @static\n             */\n            public static function offsetExists($offset)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->offsetExists($offset);\n            }\n\n            /**\n             * Get the value at the given offset.\n             *\n             * @param  string  $offset\n             * @return mixed\n             * @static\n             */\n            public static function offsetGet($offset)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->offsetGet($offset);\n            }\n\n            /**\n             * Set the value at the given offset.\n             *\n             * @param  string  $offset\n             * @param  mixed  $value\n             * @return void\n             * @static\n             */\n            public static function offsetSet($offset, $value)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                $instance->offsetSet($offset, $value);\n            }\n\n            /**\n             * Remove the value at the given offset.\n             *\n             * @param  string  $offset\n             * @return void\n             * @static\n             */\n            public static function offsetUnset($offset)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                $instance->offsetUnset($offset);\n            }\n\n            /**\n             * Sets the parameters for this request.\n             *\n             * This method also re-initializes all properties.\n             *\n             * @param  array  $query  The GET parameters\n             * @param  array  $request  The POST parameters\n             * @param  array  $attributes  The request attributes (parameters parsed from the PATH_INFO, ...)\n             * @param  array  $cookies  The COOKIE parameters\n             * @param  array  $files  The FILES parameters\n             * @param  array  $server  The SERVER parameters\n             * @param  string|resource|null  $content  The raw body data\n             * @static\n             */\n            public static function initialize($query = [], $request = [], $attributes = [], $cookies = [], $files = [], $server = [], $content = null)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->initialize($query, $request, $attributes, $cookies, $files, $server, $content);\n            }\n\n            /**\n             * Creates a new request with values from PHP's super globals.\n             *\n             * @return static\n             * @static\n             */\n            public static function createFromGlobals()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                return \\Illuminate\\Http\\Request::createFromGlobals();\n            }\n\n            /**\n             * Creates a Request based on a given URI and configuration.\n             *\n             * The information contained in the URI always take precedence\n             * over the other information (server and parameters).\n             *\n             * @param  string  $uri  The URI\n             * @param  string  $method  The HTTP method\n             * @param  array  $parameters  The query (GET) or request (POST) parameters\n             * @param  array  $cookies  The request cookies ($_COOKIE)\n             * @param  array  $files  The request files ($_FILES)\n             * @param  array  $server  The server parameters ($_SERVER)\n             * @param  string|resource|null  $content  The raw body data\n             * @return static\n             * @static\n             */\n            public static function create($uri, $method = 'GET', $parameters = [], $cookies = [], $files = [], $server = [], $content = null)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                return \\Illuminate\\Http\\Request::create($uri, $method, $parameters, $cookies, $files, $server, $content);\n            }\n\n            /**\n             * Sets a callable able to create a Request instance.\n             *\n             * This is mainly useful when you need to override the Request class\n             * to keep BC with an existing system. It should not be used for any\n             * other purpose.\n             *\n             * @static\n             */\n            public static function setFactory($callable)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                return \\Illuminate\\Http\\Request::setFactory($callable);\n            }\n\n            /**\n             * Overrides the PHP global variables according to this request instance.\n             *\n             * It overrides $_GET, $_POST, $_REQUEST, $_SERVER, $_COOKIE.\n             * $_FILES is never overridden, see rfc1867\n             *\n             * @static\n             */\n            public static function overrideGlobals()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->overrideGlobals();\n            }\n\n            /**\n             * Sets a list of trusted proxies.\n             *\n             * You should only list the reverse proxies that you manage directly.\n             *\n             * @param  array  $proxies  A list of trusted proxies, the string 'REMOTE_ADDR' will be replaced with $_SERVER['REMOTE_ADDR']\n             * @param  int  $trustedHeaderSet  A bit field of Request::HEADER_*, to set which headers to trust from your proxies\n             *\n             * @throws \\InvalidArgumentException When $trustedHeaderSet is invalid\n             * @static\n             */\n            public static function setTrustedProxies($proxies, $trustedHeaderSet)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                return \\Illuminate\\Http\\Request::setTrustedProxies($proxies, $trustedHeaderSet);\n            }\n\n            /**\n             * Gets the list of trusted proxies.\n             *\n             * @return array An array of trusted proxies\n             * @static\n             */\n            public static function getTrustedProxies()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                return \\Illuminate\\Http\\Request::getTrustedProxies();\n            }\n\n            /**\n             * Gets the set of trusted headers from trusted proxies.\n             *\n             * @return int A bit field of Request::HEADER_* that defines which headers are trusted from your proxies\n             * @static\n             */\n            public static function getTrustedHeaderSet()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                return \\Illuminate\\Http\\Request::getTrustedHeaderSet();\n            }\n\n            /**\n             * Sets a list of trusted host patterns.\n             *\n             * You should only list the hosts you manage using regexs.\n             *\n             * @param  array  $hostPatterns  A list of trusted host patterns\n             * @static\n             */\n            public static function setTrustedHosts($hostPatterns)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                return \\Illuminate\\Http\\Request::setTrustedHosts($hostPatterns);\n            }\n\n            /**\n             * Gets the list of trusted host patterns.\n             *\n             * @return array An array of trusted host patterns\n             * @static\n             */\n            public static function getTrustedHosts()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                return \\Illuminate\\Http\\Request::getTrustedHosts();\n            }\n\n            /**\n             * Normalizes a query string.\n             *\n             * It builds a normalized query string, where keys/value pairs are alphabetized,\n             * have consistent escaping and unneeded delimiters are removed.\n             *\n             * @return string A normalized query string for the Request\n             * @static\n             */\n            public static function normalizeQueryString($qs)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                return \\Illuminate\\Http\\Request::normalizeQueryString($qs);\n            }\n\n            /**\n             * Enables support for the _method request parameter to determine the intended HTTP method.\n             *\n             * Be warned that enabling this feature might lead to CSRF issues in your code.\n             * Check that you are using CSRF tokens when required.\n             * If the HTTP method parameter override is enabled, an html-form with method \"POST\" can be altered\n             * and used to send a \"PUT\" or \"DELETE\" request via the _method request parameter.\n             * If these methods are not protected against CSRF, this presents a possible vulnerability.\n             *\n             * The HTTP method can only be overridden when the real HTTP method is POST.\n             *\n             * @static\n             */\n            public static function enableHttpMethodParameterOverride()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                return \\Illuminate\\Http\\Request::enableHttpMethodParameterOverride();\n            }\n\n            /**\n             * Checks whether support for the _method request parameter is enabled.\n             *\n             * @return bool True when the _method request parameter is enabled, false otherwise\n             * @static\n             */\n            public static function getHttpMethodParameterOverride()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                return \\Illuminate\\Http\\Request::getHttpMethodParameterOverride();\n            }\n\n            /**\n             * Whether the request contains a Session which was started in one of the\n             * previous requests.\n             *\n             * @return bool\n             * @static\n             */\n            public static function hasPreviousSession()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->hasPreviousSession();\n            }\n\n            /**\n             * Whether the request contains a Session object.\n             *\n             * This method does not give any information about the state of the session object,\n             * like whether the session is started or not. It is just a way to check if this Request\n             * is associated with a Session instance.\n             *\n             * @return bool true when the Request contains a Session object, false otherwise\n             * @static\n             */\n            public static function hasSession()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->hasSession();\n            }\n\n            /**\n             * @static\n             */\n            public static function setSession($session)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->setSession($session);\n            }\n\n            /**\n             * @internal\n             * @static\n             */\n            public static function setSessionFactory($factory)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->setSessionFactory($factory);\n            }\n\n            /**\n             * Returns the client IP addresses.\n             *\n             * In the returned array the most trusted IP address is first, and the\n             * least trusted one last. The \"real\" client IP address is the last one,\n             * but this is also the least trusted one. Trusted proxies are stripped.\n             *\n             * Use this method carefully; you should use getClientIp() instead.\n             *\n             * @return array The client IP addresses\n             *\n             * @see getClientIp()\n             * @static\n             */\n            public static function getClientIps()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getClientIps();\n            }\n\n            /**\n             * Returns the client IP address.\n             *\n             * This method can read the client IP address from the \"X-Forwarded-For\" header\n             * when trusted proxies were set via \"setTrustedProxies()\". The \"X-Forwarded-For\"\n             * header value is a comma+space separated list of IP addresses, the left-most\n             * being the original client, and each successive proxy that passed the request\n             * adding the IP address where it received the request from.\n             *\n             * If your reverse proxy uses a different header name than \"X-Forwarded-For\",\n             * (\"Client-Ip\" for instance), configure it via the $trustedHeaderSet\n             * argument of the Request::setTrustedProxies() method instead.\n             *\n             * @return string|null The client IP address\n             *\n             * @see getClientIps()\n             * @see https://wikipedia.org/wiki/X-Forwarded-For\n             * @static\n             */\n            public static function getClientIp()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getClientIp();\n            }\n\n            /**\n             * Returns current script name.\n             *\n             * @return string\n             * @static\n             */\n            public static function getScriptName()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getScriptName();\n            }\n\n            /**\n             * Returns the path being requested relative to the executed script.\n             *\n             * The path info always starts with a /.\n             *\n             * Suppose this request is instantiated from /mysite on localhost:\n             *\n             *  * http://localhost/mysite              returns an empty string\n             *  * http://localhost/mysite/about        returns '/about'\n             *  * http://localhost/mysite/enco%20ded   returns '/enco%20ded'\n             *  * http://localhost/mysite/about?var=1  returns '/about'\n             *\n             * @return string The raw path (i.e. not urldecoded)\n             * @static\n             */\n            public static function getPathInfo()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getPathInfo();\n            }\n\n            /**\n             * Returns the root path from which this request is executed.\n             *\n             * Suppose that an index.php file instantiates this request object:\n             *\n             *  * http://localhost/index.php         returns an empty string\n             *  * http://localhost/index.php/page    returns an empty string\n             *  * http://localhost/web/index.php     returns '/web'\n             *  * http://localhost/we%20b/index.php  returns '/we%20b'\n             *\n             * @return string The raw path (i.e. not urldecoded)\n             * @static\n             */\n            public static function getBasePath()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getBasePath();\n            }\n\n            /**\n             * Returns the root URL from which this request is executed.\n             *\n             * The base URL never ends with a /.\n             *\n             * This is similar to getBasePath(), except that it also includes the\n             * script filename (e.g. index.php) if one exists.\n             *\n             * @return string The raw URL (i.e. not urldecoded)\n             * @static\n             */\n            public static function getBaseUrl()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getBaseUrl();\n            }\n\n            /**\n             * Gets the request's scheme.\n             *\n             * @return string\n             * @static\n             */\n            public static function getScheme()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getScheme();\n            }\n\n            /**\n             * Returns the port on which the request is made.\n             *\n             * This method can read the client port from the \"X-Forwarded-Port\" header\n             * when trusted proxies were set via \"setTrustedProxies()\".\n             *\n             * The \"X-Forwarded-Port\" header must contain the client port.\n             *\n             * @return int|string can be a string if fetched from the server bag\n             * @static\n             */\n            public static function getPort()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getPort();\n            }\n\n            /**\n             * Returns the user.\n             *\n             * @return string|null\n             * @static\n             */\n            public static function getUser()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getUser();\n            }\n\n            /**\n             * Returns the password.\n             *\n             * @return string|null\n             * @static\n             */\n            public static function getPassword()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getPassword();\n            }\n\n            /**\n             * Gets the user info.\n             *\n             * @return string A user name and, optionally, scheme-specific information about how to gain authorization to access the server\n             * @static\n             */\n            public static function getUserInfo()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getUserInfo();\n            }\n\n            /**\n             * Returns the HTTP host being requested.\n             *\n             * The port name will be appended to the host if it's non-standard.\n             *\n             * @return string\n             * @static\n             */\n            public static function getHttpHost()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getHttpHost();\n            }\n\n            /**\n             * Returns the requested URI (path and query string).\n             *\n             * @return string The raw URI (i.e. not URI decoded)\n             * @static\n             */\n            public static function getRequestUri()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getRequestUri();\n            }\n\n            /**\n             * Gets the scheme and HTTP host.\n             *\n             * If the URL was called with basic authentication, the user\n             * and the password are not added to the generated string.\n             *\n             * @return string The scheme and HTTP host\n             * @static\n             */\n            public static function getSchemeAndHttpHost()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getSchemeAndHttpHost();\n            }\n\n            /**\n             * Generates a normalized URI (URL) for the Request.\n             *\n             * @return string A normalized URI (URL) for the Request\n             *\n             * @see getQueryString()\n             * @static\n             */\n            public static function getUri()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getUri();\n            }\n\n            /**\n             * Generates a normalized URI for the given path.\n             *\n             * @param  string  $path  A path to use instead of the current one\n             * @return string The normalized URI for the path\n             * @static\n             */\n            public static function getUriForPath($path)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getUriForPath($path);\n            }\n\n            /**\n             * Returns the path as relative reference from the current Request path.\n             *\n             * Only the URIs path component (no schema, host etc.) is relevant and must be given.\n             * Both paths must be absolute and not contain relative parts.\n             * Relative URLs from one resource to another are useful when generating self-contained downloadable document archives.\n             * Furthermore, they can be used to reduce the link size in documents.\n             *\n             * Example target paths, given a base path of \"/a/b/c/d\":\n             * - \"/a/b/c/d\"     -> \"\"\n             * - \"/a/b/c/\"      -> \"./\"\n             * - \"/a/b/\"        -> \"../\"\n             * - \"/a/b/c/other\" -> \"other\"\n             * - \"/a/x/y\"       -> \"../../x/y\"\n             *\n             * @return string The relative target path\n             * @static\n             */\n            public static function getRelativeUriForPath($path)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getRelativeUriForPath($path);\n            }\n\n            /**\n             * Generates the normalized query string for the Request.\n             *\n             * It builds a normalized query string, where keys/value pairs are alphabetized\n             * and have consistent escaping.\n             *\n             * @return string|null A normalized query string for the Request\n             * @static\n             */\n            public static function getQueryString()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getQueryString();\n            }\n\n            /**\n             * Checks whether the request is secure or not.\n             *\n             * This method can read the client protocol from the \"X-Forwarded-Proto\" header\n             * when trusted proxies were set via \"setTrustedProxies()\".\n             *\n             * The \"X-Forwarded-Proto\" header must contain the protocol: \"https\" or \"http\".\n             *\n             * @return bool\n             * @static\n             */\n            public static function isSecure()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->isSecure();\n            }\n\n            /**\n             * Returns the host name.\n             *\n             * This method can read the client host name from the \"X-Forwarded-Host\" header\n             * when trusted proxies were set via \"setTrustedProxies()\".\n             *\n             * The \"X-Forwarded-Host\" header must contain the client host name.\n             *\n             * @return string\n             *\n             * @throws SuspiciousOperationException when the host name is invalid or not trusted\n             * @static\n             */\n            public static function getHost()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getHost();\n            }\n\n            /**\n             * Sets the request method.\n             *\n             * @static\n             */\n            public static function setMethod($method)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->setMethod($method);\n            }\n\n            /**\n             * Gets the request \"intended\" method.\n             *\n             * If the X-HTTP-Method-Override header is set, and if the method is a POST,\n             * then it is used to determine the \"real\" intended HTTP method.\n             *\n             * The _method request parameter can also be used to determine the HTTP method,\n             * but only if enableHttpMethodParameterOverride() has been called.\n             *\n             * The method is always an uppercased string.\n             *\n             * @return string The request method\n             *\n             * @see getRealMethod()\n             * @static\n             */\n            public static function getMethod()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getMethod();\n            }\n\n            /**\n             * Gets the \"real\" request method.\n             *\n             * @return string The request method\n             *\n             * @see getMethod()\n             * @static\n             */\n            public static function getRealMethod()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getRealMethod();\n            }\n\n            /**\n             * Gets the mime type associated with the format.\n             *\n             * @return string|null The associated mime type (null if not found)\n             * @static\n             */\n            public static function getMimeType($format)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getMimeType($format);\n            }\n\n            /**\n             * Gets the mime types associated with the format.\n             *\n             * @return array The associated mime types\n             * @static\n             */\n            public static function getMimeTypes($format)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                return \\Illuminate\\Http\\Request::getMimeTypes($format);\n            }\n\n            /**\n             * Gets the format associated with the mime type.\n             *\n             * @return string|null The format (null if not found)\n             * @static\n             */\n            public static function getFormat($mimeType)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getFormat($mimeType);\n            }\n\n            /**\n             * Associates a format with mime types.\n             *\n             * @param  string|array  $mimeTypes  The associated mime types (the preferred one must be the first as it will be used as the content type)\n             * @static\n             */\n            public static function setFormat($format, $mimeTypes)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->setFormat($format, $mimeTypes);\n            }\n\n            /**\n             * Gets the request format.\n             *\n             * Here is the process to determine the format:\n             *\n             *  * format defined by the user (with setRequestFormat())\n             *  * _format request attribute\n             *  * $default\n             *\n             * @see getPreferredFormat\n             *\n             * @return string|null The request format\n             * @static\n             */\n            public static function getRequestFormat($default = 'html')\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getRequestFormat($default);\n            }\n\n            /**\n             * Sets the request format.\n             *\n             * @static\n             */\n            public static function setRequestFormat($format)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->setRequestFormat($format);\n            }\n\n            /**\n             * Gets the format associated with the request.\n             *\n             * @return string|null The format (null if no content type is present)\n             * @static\n             */\n            public static function getContentType()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getContentType();\n            }\n\n            /**\n             * Sets the default locale.\n             *\n             * @static\n             */\n            public static function setDefaultLocale($locale)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->setDefaultLocale($locale);\n            }\n\n            /**\n             * Get the default locale.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDefaultLocale()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getDefaultLocale();\n            }\n\n            /**\n             * Sets the locale.\n             *\n             * @static\n             */\n            public static function setLocale($locale)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->setLocale($locale);\n            }\n\n            /**\n             * Get the locale.\n             *\n             * @return string\n             * @static\n             */\n            public static function getLocale()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getLocale();\n            }\n\n            /**\n             * Checks if the request method is of specified type.\n             *\n             * @param  string  $method  Uppercase request method (GET, POST etc)\n             * @return bool\n             * @static\n             */\n            public static function isMethod($method)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->isMethod($method);\n            }\n\n            /**\n             * Checks whether or not the method is safe.\n             *\n             * @see https://tools.ietf.org/html/rfc7231#section-4.2.1\n             *\n             * @return bool\n             * @static\n             */\n            public static function isMethodSafe()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->isMethodSafe();\n            }\n\n            /**\n             * Checks whether or not the method is idempotent.\n             *\n             * @return bool\n             * @static\n             */\n            public static function isMethodIdempotent()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->isMethodIdempotent();\n            }\n\n            /**\n             * Checks whether the method is cacheable or not.\n             *\n             * @see https://tools.ietf.org/html/rfc7231#section-4.2.3\n             *\n             * @return bool True for GET and HEAD, false otherwise\n             * @static\n             */\n            public static function isMethodCacheable()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->isMethodCacheable();\n            }\n\n            /**\n             * Returns the protocol version.\n             *\n             * If the application is behind a proxy, the protocol version used in the\n             * requests between the client and the proxy and between the proxy and the\n             * server might be different. This returns the former (from the \"Via\" header)\n             * if the proxy is trusted (see \"setTrustedProxies()\"), otherwise it returns\n             * the latter (from the \"SERVER_PROTOCOL\" server parameter).\n             *\n             * @return string\n             * @static\n             */\n            public static function getProtocolVersion()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getProtocolVersion();\n            }\n\n            /**\n             * Returns the request body content.\n             *\n             * @param  bool  $asResource  If true, a resource will be returned\n             * @return string|resource The request body content or a resource to read the body stream\n             *\n             * @throws \\LogicException\n             * @static\n             */\n            public static function getContent($asResource = false)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getContent($asResource);\n            }\n\n            /**\n             * Gets the Etags.\n             *\n             * @return array The entity tags\n             * @static\n             */\n            public static function getETags()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getETags();\n            }\n\n            /**\n             * @return bool\n             * @static\n             */\n            public static function isNoCache()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->isNoCache();\n            }\n\n            /**\n             * Gets the preferred format for the response by inspecting, in the following order:\n             *   * the request format set using setRequestFormat;\n             *   * the values of the Accept HTTP header.\n             *\n             * Note that if you use this method, you should send the \"Vary: Accept\" header\n             * in the response to prevent any issues with intermediary HTTP caches.\n             *\n             * @static\n             */\n            public static function getPreferredFormat($default = 'html')\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getPreferredFormat($default);\n            }\n\n            /**\n             * Returns the preferred language.\n             *\n             * @param  string[]  $locales  An array of ordered available locales\n             * @return string|null The preferred locale\n             * @static\n             */\n            public static function getPreferredLanguage($locales = null)\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getPreferredLanguage($locales);\n            }\n\n            /**\n             * Gets a list of languages acceptable by the client browser.\n             *\n             * @return array Languages ordered in the user browser preferences\n             * @static\n             */\n            public static function getLanguages()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getLanguages();\n            }\n\n            /**\n             * Gets a list of charsets acceptable by the client browser.\n             *\n             * @return array List of charsets in preferable order\n             * @static\n             */\n            public static function getCharsets()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getCharsets();\n            }\n\n            /**\n             * Gets a list of encodings acceptable by the client browser.\n             *\n             * @return array List of encodings in preferable order\n             * @static\n             */\n            public static function getEncodings()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getEncodings();\n            }\n\n            /**\n             * Gets a list of content types acceptable by the client browser.\n             *\n             * @return array List of content types in preferable order\n             * @static\n             */\n            public static function getAcceptableContentTypes()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->getAcceptableContentTypes();\n            }\n\n            /**\n             * Returns true if the request is a XMLHttpRequest.\n             *\n             * It works if your JavaScript library sets an X-Requested-With HTTP header.\n             * It is known to work with common JavaScript frameworks:\n             *\n             * @see https://wikipedia.org/wiki/List_of_Ajax_frameworks#JavaScript\n             *\n             * @return bool true if the request is an XMLHttpRequest, false otherwise\n             * @static\n             */\n            public static function isXmlHttpRequest()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->isXmlHttpRequest();\n            }\n\n            /**\n             * Checks whether the client browser prefers safe content or not according to RFC8674.\n             *\n             * @see https://tools.ietf.org/html/rfc8674\n             * @static\n             */\n            public static function preferSafeContent()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->preferSafeContent();\n            }\n\n            /**\n             * Indicates whether this request originated from a trusted proxy.\n             *\n             * This can be useful to determine whether or not to trust the\n             * contents of a proxy-specific header.\n             *\n             * @return bool true if the request came from a trusted proxy, false otherwise\n             * @static\n             */\n            public static function isFromTrustedProxy()\n            {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->isFromTrustedProxy();\n            }\n\n            /**\n             * Determine if the given content types match.\n             *\n             * @param  string  $actual\n             * @param  string  $type\n             * @return bool\n             * @static\n             */\n            public static function matchesType($actual, $type)\n            {\n                return \\Illuminate\\Http\\Request::matchesType($actual, $type);\n            }\n\n            /**\n             * Determine if the request is sending JSON.\n             *\n             * @return bool\n             * @static\n             */\n            public static function isJson()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->isJson();\n            }\n\n            /**\n             * Determine if the current request probably expects a JSON response.\n             *\n             * @return bool\n             * @static\n             */\n            public static function expectsJson()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->expectsJson();\n            }\n\n            /**\n             * Determine if the current request is asking for JSON.\n             *\n             * @return bool\n             * @static\n             */\n            public static function wantsJson()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->wantsJson();\n            }\n\n            /**\n             * Determines whether the current requests accepts a given content type.\n             *\n             * @param  string|array  $contentTypes\n             * @return bool\n             * @static\n             */\n            public static function accepts($contentTypes)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->accepts($contentTypes);\n            }\n\n            /**\n             * Return the most suitable content type from the given array based on content negotiation.\n             *\n             * @param  string|array  $contentTypes\n             * @return string|null\n             * @static\n             */\n            public static function prefers($contentTypes)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->prefers($contentTypes);\n            }\n\n            /**\n             * Determine if the current request accepts any content type.\n             *\n             * @return bool\n             * @static\n             */\n            public static function acceptsAnyContentType()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->acceptsAnyContentType();\n            }\n\n            /**\n             * Determines whether a request accepts JSON.\n             *\n             * @return bool\n             * @static\n             */\n            public static function acceptsJson()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->acceptsJson();\n            }\n\n            /**\n             * Determines whether a request accepts HTML.\n             *\n             * @return bool\n             * @static\n             */\n            public static function acceptsHtml()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->acceptsHtml();\n            }\n\n            /**\n             * Get the data format expected in the response.\n             *\n             * @param  string  $default\n             * @return string\n             * @static\n             */\n            public static function format($default = 'html')\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->format($default);\n            }\n\n            /**\n             * Retrieve an old input item.\n             *\n             * @param  string|null  $key\n             * @param  string|array|null  $default\n             * @return string|array\n             * @static\n             */\n            public static function old($key = null, $default = null)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->old($key, $default);\n            }\n\n            /**\n             * Flash the input for the current request to the session.\n             *\n             * @return void\n             * @static\n             */\n            public static function flash()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                $instance->flash();\n            }\n\n            /**\n             * Flash only some of the input to the session.\n             *\n             * @param  array|mixed  $keys\n             * @return void\n             * @static\n             */\n            public static function flashOnly($keys)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                $instance->flashOnly($keys);\n            }\n\n            /**\n             * Flash only some of the input to the session.\n             *\n             * @param  array|mixed  $keys\n             * @return void\n             * @static\n             */\n            public static function flashExcept($keys)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                $instance->flashExcept($keys);\n            }\n\n            /**\n             * Flush all of the old input from the session.\n             *\n             * @return void\n             * @static\n             */\n            public static function flush()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                $instance->flush();\n            }\n\n            /**\n             * Retrieve a server variable from the request.\n             *\n             * @param  string|null  $key\n             * @param  string|array|null  $default\n             * @return string|array|null\n             * @static\n             */\n            public static function server($key = null, $default = null)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->server($key, $default);\n            }\n\n            /**\n             * Determine if a header is set on the request.\n             *\n             * @param  string  $key\n             * @return bool\n             * @static\n             */\n            public static function hasHeader($key)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->hasHeader($key);\n            }\n\n            /**\n             * Retrieve a header from the request.\n             *\n             * @param  string|null  $key\n             * @param  string|array|null  $default\n             * @return string|array|null\n             * @static\n             */\n            public static function header($key = null, $default = null)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->header($key, $default);\n            }\n\n            /**\n             * Get the bearer token from the request headers.\n             *\n             * @return string|null\n             * @static\n             */\n            public static function bearerToken()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->bearerToken();\n            }\n\n            /**\n             * Determine if the request contains a given input item key.\n             *\n             * @param  string|array  $key\n             * @return bool\n             * @static\n             */\n            public static function exists($key)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->exists($key);\n            }\n\n            /**\n             * Determine if the request contains a given input item key.\n             *\n             * @param  string|array  $key\n             * @return bool\n             * @static\n             */\n            public static function has($key)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->has($key);\n            }\n\n            /**\n             * Determine if the request contains any of the given inputs.\n             *\n             * @param  string|array  $keys\n             * @return bool\n             * @static\n             */\n            public static function hasAny($keys)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->hasAny($keys);\n            }\n\n            /**\n             * Apply the callback if the request contains the given input item key.\n             *\n             * @param  string  $key\n             * @param  callable  $callback\n             * @return $this|mixed\n             * @static\n             */\n            public static function whenHas($key, $callback)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->whenHas($key, $callback);\n            }\n\n            /**\n             * Determine if the request contains a non-empty value for an input item.\n             *\n             * @param  string|array  $key\n             * @return bool\n             * @static\n             */\n            public static function filled($key)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->filled($key);\n            }\n\n            /**\n             * Determine if the request contains an empty value for an input item.\n             *\n             * @param  string|array  $key\n             * @return bool\n             * @static\n             */\n            public static function isNotFilled($key)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->isNotFilled($key);\n            }\n\n            /**\n             * Determine if the request contains a non-empty value for any of the given inputs.\n             *\n             * @param  string|array  $keys\n             * @return bool\n             * @static\n             */\n            public static function anyFilled($keys)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->anyFilled($keys);\n            }\n\n            /**\n             * Apply the callback if the request contains a non-empty value for the given input item key.\n             *\n             * @param  string  $key\n             * @param  callable  $callback\n             * @return $this|mixed\n             * @static\n             */\n            public static function whenFilled($key, $callback)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->whenFilled($key, $callback);\n            }\n\n            /**\n             * Determine if the request is missing a given input item key.\n             *\n             * @param  string|array  $key\n             * @return bool\n             * @static\n             */\n            public static function missing($key)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->missing($key);\n            }\n\n            /**\n             * Get the keys for all of the input and files.\n             *\n             * @return array\n             * @static\n             */\n            public static function keys()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->keys();\n            }\n\n            /**\n             * Get all of the input and files for the request.\n             *\n             * @param  array|mixed|null  $keys\n             * @return array\n             * @static\n             */\n            public static function all($keys = null)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->all($keys);\n            }\n\n            /**\n             * Retrieve an input item from the request.\n             *\n             * @param  string|null  $key\n             * @param  mixed  $default\n             * @return mixed\n             * @static\n             */\n            public static function input($key = null, $default = null)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->input($key, $default);\n            }\n\n            /**\n             * Retrieve input as a boolean value.\n             *\n             * Returns true when value is \"1\", \"true\", \"on\", and \"yes\". Otherwise, returns false.\n             *\n             * @param  string|null  $key\n             * @param  bool  $default\n             * @return bool\n             * @static\n             */\n            public static function boolean($key = null, $default = false)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->boolean($key, $default);\n            }\n\n            /**\n             * Get a subset containing the provided keys with values from the input data.\n             *\n             * @param  array|mixed  $keys\n             * @return array\n             * @static\n             */\n            public static function only($keys)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->only($keys);\n            }\n\n            /**\n             * Get all of the input except for a specified array of items.\n             *\n             * @param  array|mixed  $keys\n             * @return array\n             * @static\n             */\n            public static function except($keys)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->except($keys);\n            }\n\n            /**\n             * Retrieve a query string item from the request.\n             *\n             * @param  string|null  $key\n             * @param  string|array|null  $default\n             * @return string|array|null\n             * @static\n             */\n            public static function query($key = null, $default = null)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->query($key, $default);\n            }\n\n            /**\n             * Retrieve a request payload item from the request.\n             *\n             * @param  string|null  $key\n             * @param  string|array|null  $default\n             * @return string|array|null\n             * @static\n             */\n            public static function post($key = null, $default = null)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->post($key, $default);\n            }\n\n            /**\n             * Determine if a cookie is set on the request.\n             *\n             * @param  string  $key\n             * @return bool\n             * @static\n             */\n            public static function hasCookie($key)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->hasCookie($key);\n            }\n\n            /**\n             * Retrieve a cookie from the request.\n             *\n             * @param  string|null  $key\n             * @param  string|array|null  $default\n             * @return string|array|null\n             * @static\n             */\n            public static function cookie($key = null, $default = null)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->cookie($key, $default);\n            }\n\n            /**\n             * Get an array of all of the files on the request.\n             *\n             * @return array\n             * @static\n             */\n            public static function allFiles()\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->allFiles();\n            }\n\n            /**\n             * Determine if the uploaded data contains a file.\n             *\n             * @param  string  $key\n             * @return bool\n             * @static\n             */\n            public static function hasFile($key)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->hasFile($key);\n            }\n\n            /**\n             * Retrieve a file from the request.\n             *\n             * @param  string|null  $key\n             * @param  mixed  $default\n             * @return \\Illuminate\\Http\\UploadedFile|\\Illuminate\\Http\\UploadedFile[]|array|null\n             * @static\n             */\n            public static function file($key = null, $default = null)\n            {\n                /** @var \\Illuminate\\Http\\Request $instance */\n                return $instance->file($key, $default);\n            }\n\n            /**\n             * Register a custom macro.\n             *\n             * @param  string  $name\n             * @param  object|callable  $macro\n             * @return void\n             * @static\n             */\n            public static function macro($name, $macro)\n            {\n                \\Illuminate\\Http\\Request::macro($name, $macro);\n            }\n\n            /**\n             * Mix another object into the class.\n             *\n             * @param  object  $mixin\n             * @param  bool  $replace\n             * @return void\n             *\n             * @throws \\ReflectionException\n             * @static\n             */\n            public static function mixin($mixin, $replace = true)\n            {\n                \\Illuminate\\Http\\Request::mixin($mixin, $replace);\n            }\n\n            /**\n             * Checks if macro is registered.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function hasMacro($name)\n            {\n                return \\Illuminate\\Http\\Request::hasMacro($name);\n            }\n\n            /**\n             * @param  array  $rules\n             * @param  mixed  $params\n             * @static\n             */\n            public static function validate($rules, ...$params)\n            {\n                return \\Illuminate\\Http\\Request::validate($rules, ...$params);\n            }\n\n            /**\n             * @param  string  $errorBag\n             * @param  array  $rules\n             * @param  mixed  $params\n             * @static\n             */\n            public static function validateWithBag($errorBag, $rules, ...$params)\n            {\n                return \\Illuminate\\Http\\Request::validateWithBag($errorBag, $rules, ...$params);\n            }\n\n            /**\n             * @param  mixed  $absolute\n             * @static\n             */\n            public static function hasValidSignature($absolute = true)\n            {\n                return \\Illuminate\\Http\\Request::hasValidSignature($absolute);\n            }\n\n            /**\n             * @static\n             */\n            public static function hasValidRelativeSignature()\n            {\n                return \\Illuminate\\Http\\Request::hasValidRelativeSignature();\n            }\n        }\n        /**\n         * @see \\Illuminate\\Contracts\\Routing\\ResponseFactory\n         */\n        class Response\n        {\n            /**\n             * Create a new response instance.\n             *\n             * @param  string  $content\n             * @param  int  $status\n             * @param  array  $headers\n             * @return \\Illuminate\\Http\\Response\n             * @static\n             */\n            public static function make($content = '', $status = 200, $headers = [])\n            {\n                /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                return $instance->make($content, $status, $headers);\n            }\n\n            /**\n             * Create a new \"no content\" response.\n             *\n             * @param  int  $status\n             * @param  array  $headers\n             * @return \\Illuminate\\Http\\Response\n             * @static\n             */\n            public static function noContent($status = 204, $headers = [])\n            {\n                /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                return $instance->noContent($status, $headers);\n            }\n\n            /**\n             * Create a new response for a given view.\n             *\n             * @param  string|array  $view\n             * @param  array  $data\n             * @param  int  $status\n             * @param  array  $headers\n             * @return \\Illuminate\\Http\\Response\n             * @static\n             */\n            public static function view($view, $data = [], $status = 200, $headers = [])\n            {\n                /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                return $instance->view($view, $data, $status, $headers);\n            }\n\n            /**\n             * Create a new JSON response instance.\n             *\n             * @param  mixed  $data\n             * @param  int  $status\n             * @param  array  $headers\n             * @param  int  $options\n             * @return \\Illuminate\\Http\\JsonResponse\n             * @static\n             */\n            public static function json($data = [], $status = 200, $headers = [], $options = 0)\n            {\n                /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                return $instance->json($data, $status, $headers, $options);\n            }\n\n            /**\n             * Create a new JSONP response instance.\n             *\n             * @param  string  $callback\n             * @param  mixed  $data\n             * @param  int  $status\n             * @param  array  $headers\n             * @param  int  $options\n             * @return \\Illuminate\\Http\\JsonResponse\n             * @static\n             */\n            public static function jsonp($callback, $data = [], $status = 200, $headers = [], $options = 0)\n            {\n                /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                return $instance->jsonp($callback, $data, $status, $headers, $options);\n            }\n\n            /**\n             * Create a new streamed response instance.\n             *\n             * @param  \\Closure  $callback\n             * @param  int  $status\n             * @param  array  $headers\n             * @return \\Symfony\\Component\\HttpFoundation\\StreamedResponse\n             * @static\n             */\n            public static function stream($callback, $status = 200, $headers = [])\n            {\n                /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                return $instance->stream($callback, $status, $headers);\n            }\n\n            /**\n             * Create a new streamed response instance as a file download.\n             *\n             * @param  \\Closure  $callback\n             * @param  string|null  $name\n             * @param  array  $headers\n             * @param  string|null  $disposition\n             * @return \\Symfony\\Component\\HttpFoundation\\StreamedResponse\n             * @static\n             */\n            public static function streamDownload($callback, $name = null, $headers = [], $disposition = 'attachment')\n            {\n                /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                return $instance->streamDownload($callback, $name, $headers, $disposition);\n            }\n\n            /**\n             * Create a new file download response.\n             *\n             * @param  \\SplFileInfo|string  $file\n             * @param  string|null  $name\n             * @param  array  $headers\n             * @param  string|null  $disposition\n             * @return \\Symfony\\Component\\HttpFoundation\\BinaryFileResponse\n             * @static\n             */\n            public static function download($file, $name = null, $headers = [], $disposition = 'attachment')\n            {\n                /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                return $instance->download($file, $name, $headers, $disposition);\n            }\n\n            /**\n             * Return the raw contents of a binary file.\n             *\n             * @param  \\SplFileInfo|string  $file\n             * @param  array  $headers\n             * @return \\Symfony\\Component\\HttpFoundation\\BinaryFileResponse\n             * @static\n             */\n            public static function file($file, $headers = [])\n            {\n                /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                return $instance->file($file, $headers);\n            }\n\n            /**\n             * Create a new redirect response to the given path.\n             *\n             * @param  string  $path\n             * @param  int  $status\n             * @param  array  $headers\n             * @param  bool|null  $secure\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function redirectTo($path, $status = 302, $headers = [], $secure = null)\n            {\n                /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                return $instance->redirectTo($path, $status, $headers, $secure);\n            }\n\n            /**\n             * Create a new redirect response to a named route.\n             *\n             * @param  string  $route\n             * @param  mixed  $parameters\n             * @param  int  $status\n             * @param  array  $headers\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function redirectToRoute($route, $parameters = [], $status = 302, $headers = [])\n            {\n                /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                return $instance->redirectToRoute($route, $parameters, $status, $headers);\n            }\n\n            /**\n             * Create a new redirect response to a controller action.\n             *\n             * @param  string  $action\n             * @param  mixed  $parameters\n             * @param  int  $status\n             * @param  array  $headers\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function redirectToAction($action, $parameters = [], $status = 302, $headers = [])\n            {\n                /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                return $instance->redirectToAction($action, $parameters, $status, $headers);\n            }\n\n            /**\n             * Create a new redirect response, while putting the current URL in the session.\n             *\n             * @param  string  $path\n             * @param  int  $status\n             * @param  array  $headers\n             * @param  bool|null  $secure\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function redirectGuest($path, $status = 302, $headers = [], $secure = null)\n            {\n                /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                return $instance->redirectGuest($path, $status, $headers, $secure);\n            }\n\n            /**\n             * Create a new redirect response to the previously intended location.\n             *\n             * @param  string  $default\n             * @param  int  $status\n             * @param  array  $headers\n             * @param  bool|null  $secure\n             * @return \\Illuminate\\Http\\RedirectResponse\n             * @static\n             */\n            public static function redirectToIntended($default = '/', $status = 302, $headers = [], $secure = null)\n            {\n                /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                return $instance->redirectToIntended($default, $status, $headers, $secure);\n            }\n\n            /**\n             * Register a custom macro.\n             *\n             * @param  string  $name\n             * @param  object|callable  $macro\n             * @return void\n             * @static\n             */\n            public static function macro($name, $macro)\n            {\n                \\Illuminate\\Routing\\ResponseFactory::macro($name, $macro);\n            }\n\n            /**\n             * Mix another object into the class.\n             *\n             * @param  object  $mixin\n             * @param  bool  $replace\n             * @return void\n             *\n             * @throws \\ReflectionException\n             * @static\n             */\n            public static function mixin($mixin, $replace = true)\n            {\n                \\Illuminate\\Routing\\ResponseFactory::mixin($mixin, $replace);\n            }\n\n            /**\n             * Checks if macro is registered.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function hasMacro($name)\n            {\n                return \\Illuminate\\Routing\\ResponseFactory::hasMacro($name);\n            }\n        }\n        /**\n         * @method static \\Illuminate\\Routing\\RouteRegistrar as(string $value)\n         * @method static \\Illuminate\\Routing\\RouteRegistrar domain(string $value)\n         * @method static \\Illuminate\\Routing\\RouteRegistrar middleware(array|string|null $middleware)\n         * @method static \\Illuminate\\Routing\\RouteRegistrar name(string $value)\n         * @method static \\Illuminate\\Routing\\RouteRegistrar namespace(string $value)\n         * @method static \\Illuminate\\Routing\\RouteRegistrar prefix(string  $prefix)\n         * @method static \\Illuminate\\Routing\\RouteRegistrar where(array  $where)\n         *\n         * @see \\Illuminate\\Routing\\Router\n         */\n        class Route\n        {\n            /**\n             * Register a new GET route with the router.\n             *\n             * @param  string  $uri\n             * @param  array|string|callable|null  $action\n             * @return \\Illuminate\\Routing\\Route\n             * @static\n             */\n            public static function get($uri, $action = null)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->get($uri, $action);\n            }\n\n            /**\n             * Register a new POST route with the router.\n             *\n             * @param  string  $uri\n             * @param  array|string|callable|null  $action\n             * @return \\Illuminate\\Routing\\Route\n             * @static\n             */\n            public static function post($uri, $action = null)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->post($uri, $action);\n            }\n\n            /**\n             * Register a new PUT route with the router.\n             *\n             * @param  string  $uri\n             * @param  array|string|callable|null  $action\n             * @return \\Illuminate\\Routing\\Route\n             * @static\n             */\n            public static function put($uri, $action = null)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->put($uri, $action);\n            }\n\n            /**\n             * Register a new PATCH route with the router.\n             *\n             * @param  string  $uri\n             * @param  array|string|callable|null  $action\n             * @return \\Illuminate\\Routing\\Route\n             * @static\n             */\n            public static function patch($uri, $action = null)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->patch($uri, $action);\n            }\n\n            /**\n             * Register a new DELETE route with the router.\n             *\n             * @param  string  $uri\n             * @param  array|string|callable|null  $action\n             * @return \\Illuminate\\Routing\\Route\n             * @static\n             */\n            public static function delete($uri, $action = null)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->delete($uri, $action);\n            }\n\n            /**\n             * Register a new OPTIONS route with the router.\n             *\n             * @param  string  $uri\n             * @param  array|string|callable|null  $action\n             * @return \\Illuminate\\Routing\\Route\n             * @static\n             */\n            public static function options($uri, $action = null)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->options($uri, $action);\n            }\n\n            /**\n             * Register a new route responding to all verbs.\n             *\n             * @param  string  $uri\n             * @param  array|string|callable|null  $action\n             * @return \\Illuminate\\Routing\\Route\n             * @static\n             */\n            public static function any($uri, $action = null)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->any($uri, $action);\n            }\n\n            /**\n             * Register a new Fallback route with the router.\n             *\n             * @param  array|string|callable|null  $action\n             * @return \\Illuminate\\Routing\\Route\n             * @static\n             */\n            public static function fallback($action)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->fallback($action);\n            }\n\n            /**\n             * Create a redirect from one URI to another.\n             *\n             * @param  string  $uri\n             * @param  string  $destination\n             * @param  int  $status\n             * @return \\Illuminate\\Routing\\Route\n             * @static\n             */\n            public static function redirect($uri, $destination, $status = 302)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->redirect($uri, $destination, $status);\n            }\n\n            /**\n             * Create a permanent redirect from one URI to another.\n             *\n             * @param  string  $uri\n             * @param  string  $destination\n             * @return \\Illuminate\\Routing\\Route\n             * @static\n             */\n            public static function permanentRedirect($uri, $destination)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->permanentRedirect($uri, $destination);\n            }\n\n            /**\n             * Register a new route that returns a view.\n             *\n             * @param  string  $uri\n             * @param  string  $view\n             * @param  array  $data\n             * @param  int|array  $status\n             * @param  array  $headers\n             * @return \\Illuminate\\Routing\\Route\n             * @static\n             */\n            public static function view($uri, $view, $data = [], $status = 200, $headers = [])\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->view($uri, $view, $data, $status, $headers);\n            }\n\n            /**\n             * Register a new route with the given verbs.\n             *\n             * @param  array|string  $methods\n             * @param  string  $uri\n             * @param  array|string|callable|null  $action\n             * @return \\Illuminate\\Routing\\Route\n             * @static\n             */\n            public static function match($methods, $uri, $action = null)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->match($methods, $uri, $action);\n            }\n\n            /**\n             * Register an array of resource controllers.\n             *\n             * @param  array  $resources\n             * @param  array  $options\n             * @return void\n             * @static\n             */\n            public static function resources($resources, $options = [])\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                $instance->resources($resources, $options);\n            }\n\n            /**\n             * Route a resource to a controller.\n             *\n             * @param  string  $name\n             * @param  string  $controller\n             * @param  array  $options\n             * @return \\Illuminate\\Routing\\PendingResourceRegistration\n             * @static\n             */\n            public static function resource($name, $controller, $options = [])\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->resource($name, $controller, $options);\n            }\n\n            /**\n             * Register an array of API resource controllers.\n             *\n             * @param  array  $resources\n             * @param  array  $options\n             * @return void\n             * @static\n             */\n            public static function apiResources($resources, $options = [])\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                $instance->apiResources($resources, $options);\n            }\n\n            /**\n             * Route an API resource to a controller.\n             *\n             * @param  string  $name\n             * @param  string  $controller\n             * @param  array  $options\n             * @return \\Illuminate\\Routing\\PendingResourceRegistration\n             * @static\n             */\n            public static function apiResource($name, $controller, $options = [])\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->apiResource($name, $controller, $options);\n            }\n\n            /**\n             * Create a route group with shared attributes.\n             *\n             * @param  array  $attributes\n             * @param  \\Closure|string  $routes\n             * @return void\n             * @static\n             */\n            public static function group($attributes, $routes)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                $instance->group($attributes, $routes);\n            }\n\n            /**\n             * Merge the given array with the last group stack.\n             *\n             * @param  array  $new\n             * @param  bool  $prependExistingPrefix\n             * @return array\n             * @static\n             */\n            public static function mergeWithLastGroup($new, $prependExistingPrefix = true)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->mergeWithLastGroup($new, $prependExistingPrefix);\n            }\n\n            /**\n             * Get the prefix from the last group on the stack.\n             *\n             * @return string\n             * @static\n             */\n            public static function getLastGroupPrefix()\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->getLastGroupPrefix();\n            }\n\n            /**\n             * Add a route to the underlying route collection.\n             *\n             * @param  array|string  $methods\n             * @param  string  $uri\n             * @param  array|string|callable|null  $action\n             * @return \\Illuminate\\Routing\\Route\n             * @static\n             */\n            public static function addRoute($methods, $uri, $action)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->addRoute($methods, $uri, $action);\n            }\n\n            /**\n             * Create a new Route object.\n             *\n             * @param  array|string  $methods\n             * @param  string  $uri\n             * @param  mixed  $action\n             * @return \\Illuminate\\Routing\\Route\n             * @static\n             */\n            public static function newRoute($methods, $uri, $action)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->newRoute($methods, $uri, $action);\n            }\n\n            /**\n             * Return the response returned by the given route.\n             *\n             * @param  string  $name\n             * @return \\Symfony\\Component\\HttpFoundation\\Response\n             * @static\n             */\n            public static function respondWithRoute($name)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->respondWithRoute($name);\n            }\n\n            /**\n             * Dispatch the request to the application.\n             *\n             * @param  \\Illuminate\\Http\\Request  $request\n             * @return \\Symfony\\Component\\HttpFoundation\\Response\n             * @static\n             */\n            public static function dispatch($request)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->dispatch($request);\n            }\n\n            /**\n             * Dispatch the request to a route and return the response.\n             *\n             * @param  \\Illuminate\\Http\\Request  $request\n             * @return \\Symfony\\Component\\HttpFoundation\\Response\n             * @static\n             */\n            public static function dispatchToRoute($request)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->dispatchToRoute($request);\n            }\n\n            /**\n             * Gather the middleware for the given route with resolved class names.\n             *\n             * @param  \\Illuminate\\Routing\\Route  $route\n             * @return array\n             * @static\n             */\n            public static function gatherRouteMiddleware($route)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->gatherRouteMiddleware($route);\n            }\n\n            /**\n             * Create a response instance from the given value.\n             *\n             * @param  \\Symfony\\Component\\HttpFoundation\\Request  $request\n             * @param  mixed  $response\n             * @return \\Symfony\\Component\\HttpFoundation\\Response\n             * @static\n             */\n            public static function prepareResponse($request, $response)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->prepareResponse($request, $response);\n            }\n\n            /**\n             * Static version of prepareResponse.\n             *\n             * @param  \\Symfony\\Component\\HttpFoundation\\Request  $request\n             * @param  mixed  $response\n             * @return \\Symfony\\Component\\HttpFoundation\\Response\n             * @static\n             */\n            public static function toResponse($request, $response)\n            {\n                return \\Illuminate\\Routing\\Router::toResponse($request, $response);\n            }\n\n            /**\n             * Substitute the route bindings onto the route.\n             *\n             * @param  \\Illuminate\\Routing\\Route  $route\n             * @return \\Illuminate\\Routing\\Route\n             *\n             * @throws \\Illuminate\\Database\\Eloquent\\ModelNotFoundException\n             * @static\n             */\n            public static function substituteBindings($route)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->substituteBindings($route);\n            }\n\n            /**\n             * Substitute the implicit Eloquent model bindings for the route.\n             *\n             * @param  \\Illuminate\\Routing\\Route  $route\n             * @return void\n             *\n             * @throws \\Illuminate\\Database\\Eloquent\\ModelNotFoundException\n             * @static\n             */\n            public static function substituteImplicitBindings($route)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                $instance->substituteImplicitBindings($route);\n            }\n\n            /**\n             * Register a route matched event listener.\n             *\n             * @param  string|callable  $callback\n             * @return void\n             * @static\n             */\n            public static function matched($callback)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                $instance->matched($callback);\n            }\n\n            /**\n             * Get all of the defined middleware short-hand names.\n             *\n             * @return array\n             * @static\n             */\n            public static function getMiddleware()\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->getMiddleware();\n            }\n\n            /**\n             * Register a short-hand name for a middleware.\n             *\n             * @param  string  $name\n             * @param  string  $class\n             * @return \\Illuminate\\Routing\\Router\n             * @static\n             */\n            public static function aliasMiddleware($name, $class)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->aliasMiddleware($name, $class);\n            }\n\n            /**\n             * Check if a middlewareGroup with the given name exists.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function hasMiddlewareGroup($name)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->hasMiddlewareGroup($name);\n            }\n\n            /**\n             * Get all of the defined middleware groups.\n             *\n             * @return array\n             * @static\n             */\n            public static function getMiddlewareGroups()\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->getMiddlewareGroups();\n            }\n\n            /**\n             * Register a group of middleware.\n             *\n             * @param  string  $name\n             * @param  array  $middleware\n             * @return \\Illuminate\\Routing\\Router\n             * @static\n             */\n            public static function middlewareGroup($name, $middleware)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->middlewareGroup($name, $middleware);\n            }\n\n            /**\n             * Add a middleware to the beginning of a middleware group.\n             *\n             * If the middleware is already in the group, it will not be added again.\n             *\n             * @param  string  $group\n             * @param  string  $middleware\n             * @return \\Illuminate\\Routing\\Router\n             * @static\n             */\n            public static function prependMiddlewareToGroup($group, $middleware)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->prependMiddlewareToGroup($group, $middleware);\n            }\n\n            /**\n             * Add a middleware to the end of a middleware group.\n             *\n             * If the middleware is already in the group, it will not be added again.\n             *\n             * @param  string  $group\n             * @param  string  $middleware\n             * @return \\Illuminate\\Routing\\Router\n             * @static\n             */\n            public static function pushMiddlewareToGroup($group, $middleware)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->pushMiddlewareToGroup($group, $middleware);\n            }\n\n            /**\n             * Add a new route parameter binder.\n             *\n             * @param  string  $key\n             * @param  string|callable  $binder\n             * @return void\n             * @static\n             */\n            public static function bind($key, $binder)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                $instance->bind($key, $binder);\n            }\n\n            /**\n             * Register a model binder for a wildcard.\n             *\n             * @param  string  $key\n             * @param  string  $class\n             * @param  \\Closure|null  $callback\n             * @return void\n             * @static\n             */\n            public static function model($key, $class, $callback = null)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                $instance->model($key, $class, $callback);\n            }\n\n            /**\n             * Get the binding callback for a given binding.\n             *\n             * @param  string  $key\n             * @return \\Closure|null\n             * @static\n             */\n            public static function getBindingCallback($key)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->getBindingCallback($key);\n            }\n\n            /**\n             * Get the global \"where\" patterns.\n             *\n             * @return array\n             * @static\n             */\n            public static function getPatterns()\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->getPatterns();\n            }\n\n            /**\n             * Set a global where pattern on all routes.\n             *\n             * @param  string  $key\n             * @param  string  $pattern\n             * @return void\n             * @static\n             */\n            public static function pattern($key, $pattern)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                $instance->pattern($key, $pattern);\n            }\n\n            /**\n             * Set a group of global where patterns on all routes.\n             *\n             * @param  array  $patterns\n             * @return void\n             * @static\n             */\n            public static function patterns($patterns)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                $instance->patterns($patterns);\n            }\n\n            /**\n             * Determine if the router currently has a group stack.\n             *\n             * @return bool\n             * @static\n             */\n            public static function hasGroupStack()\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->hasGroupStack();\n            }\n\n            /**\n             * Get the current group stack for the router.\n             *\n             * @return array\n             * @static\n             */\n            public static function getGroupStack()\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->getGroupStack();\n            }\n\n            /**\n             * Get a route parameter for the current route.\n             *\n             * @param  string  $key\n             * @param  string|null  $default\n             * @return mixed\n             * @static\n             */\n            public static function input($key, $default = null)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->input($key, $default);\n            }\n\n            /**\n             * Get the request currently being dispatched.\n             *\n             * @return \\Illuminate\\Http\\Request\n             * @static\n             */\n            public static function getCurrentRequest()\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->getCurrentRequest();\n            }\n\n            /**\n             * Get the currently dispatched route instance.\n             *\n             * @return \\Illuminate\\Routing\\Route|null\n             * @static\n             */\n            public static function getCurrentRoute()\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->getCurrentRoute();\n            }\n\n            /**\n             * Get the currently dispatched route instance.\n             *\n             * @return \\Illuminate\\Routing\\Route|null\n             * @static\n             */\n            public static function current()\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->current();\n            }\n\n            /**\n             * Check if a route with the given name exists.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function has($name)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->has($name);\n            }\n\n            /**\n             * Get the current route name.\n             *\n             * @return string|null\n             * @static\n             */\n            public static function currentRouteName()\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->currentRouteName();\n            }\n\n            /**\n             * Alias for the \"currentRouteNamed\" method.\n             *\n             * @param  mixed  $patterns\n             * @return bool\n             * @static\n             */\n            public static function is(...$patterns)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->is(...$patterns);\n            }\n\n            /**\n             * Determine if the current route matches a pattern.\n             *\n             * @param  mixed  $patterns\n             * @return bool\n             * @static\n             */\n            public static function currentRouteNamed(...$patterns)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->currentRouteNamed(...$patterns);\n            }\n\n            /**\n             * Get the current route action.\n             *\n             * @return string|null\n             * @static\n             */\n            public static function currentRouteAction()\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->currentRouteAction();\n            }\n\n            /**\n             * Alias for the \"currentRouteUses\" method.\n             *\n             * @param  array  $patterns\n             * @return bool\n             * @static\n             */\n            public static function uses(...$patterns)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->uses(...$patterns);\n            }\n\n            /**\n             * Determine if the current route action matches a given action.\n             *\n             * @param  string  $action\n             * @return bool\n             * @static\n             */\n            public static function currentRouteUses($action)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->currentRouteUses($action);\n            }\n\n            /**\n             * Set the unmapped global resource parameters to singular.\n             *\n             * @param  bool  $singular\n             * @return void\n             * @static\n             */\n            public static function singularResourceParameters($singular = true)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                $instance->singularResourceParameters($singular);\n            }\n\n            /**\n             * Set the global resource parameter mapping.\n             *\n             * @param  array  $parameters\n             * @return void\n             * @static\n             */\n            public static function resourceParameters($parameters = [])\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                $instance->resourceParameters($parameters);\n            }\n\n            /**\n             * Get or set the verbs used in the resource URIs.\n             *\n             * @param  array  $verbs\n             * @return array|null\n             * @static\n             */\n            public static function resourceVerbs($verbs = [])\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->resourceVerbs($verbs);\n            }\n\n            /**\n             * Get the underlying route collection.\n             *\n             * @return \\Illuminate\\Routing\\RouteCollectionInterface\n             * @static\n             */\n            public static function getRoutes()\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->getRoutes();\n            }\n\n            /**\n             * Set the route collection instance.\n             *\n             * @param  \\Illuminate\\Routing\\RouteCollection  $routes\n             * @return void\n             * @static\n             */\n            public static function setRoutes($routes)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                $instance->setRoutes($routes);\n            }\n\n            /**\n             * Set the compiled route collection instance.\n             *\n             * @param  array  $routes\n             * @return void\n             * @static\n             */\n            public static function setCompiledRoutes($routes)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                $instance->setCompiledRoutes($routes);\n            }\n\n            /**\n             * Remove any duplicate middleware from the given array.\n             *\n             * @param  array  $middleware\n             * @return array\n             * @static\n             */\n            public static function uniqueMiddleware($middleware)\n            {\n                return \\Illuminate\\Routing\\Router::uniqueMiddleware($middleware);\n            }\n\n            /**\n             * Register a custom macro.\n             *\n             * @param  string  $name\n             * @param  object|callable  $macro\n             * @return void\n             * @static\n             */\n            public static function macro($name, $macro)\n            {\n                \\Illuminate\\Routing\\Router::macro($name, $macro);\n            }\n\n            /**\n             * Mix another object into the class.\n             *\n             * @param  object  $mixin\n             * @param  bool  $replace\n             * @return void\n             *\n             * @throws \\ReflectionException\n             * @static\n             */\n            public static function mixin($mixin, $replace = true)\n            {\n                \\Illuminate\\Routing\\Router::mixin($mixin, $replace);\n            }\n\n            /**\n             * Checks if macro is registered.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function hasMacro($name)\n            {\n                return \\Illuminate\\Routing\\Router::hasMacro($name);\n            }\n\n            /**\n             * Dynamically handle calls to the class.\n             *\n             * @param  string  $method\n             * @param  array  $parameters\n             * @return mixed\n             *\n             * @throws \\BadMethodCallException\n             * @static\n             */\n            public static function macroCall($method, $parameters)\n            {\n                /** @var \\Illuminate\\Routing\\Router $instance */\n                return $instance->macroCall($method, $parameters);\n            }\n\n            /**\n             * @param  mixed  $options\n             * @static\n             */\n            public static function auth($options = [])\n            {\n                return \\Illuminate\\Routing\\Router::auth($options);\n            }\n\n            /**\n             * @static\n             */\n            public static function resetPassword()\n            {\n                return \\Illuminate\\Routing\\Router::resetPassword();\n            }\n\n            /**\n             * @static\n             */\n            public static function confirmPassword()\n            {\n                return \\Illuminate\\Routing\\Router::confirmPassword();\n            }\n\n            /**\n             * @static\n             */\n            public static function emailVerification()\n            {\n                return \\Illuminate\\Routing\\Router::emailVerification();\n            }\n        }\n        /**\n         * @see \\Illuminate\\Database\\Schema\\Builder\n         */\n        class Schema\n        {\n            /**\n             * Determine if the given table exists.\n             *\n             * @param  string  $table\n             * @return bool\n             * @static\n             */\n            public static function hasTable($table)\n            {\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                return $instance->hasTable($table);\n            }\n\n            /**\n             * Get the column listing for a given table.\n             *\n             * @param  string  $table\n             * @return array\n             * @static\n             */\n            public static function getColumnListing($table)\n            {\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                return $instance->getColumnListing($table);\n            }\n\n            /**\n             * Drop all tables from the database.\n             *\n             * @return void\n             * @static\n             */\n            public static function dropAllTables()\n            {\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                $instance->dropAllTables();\n            }\n\n            /**\n             * Drop all views from the database.\n             *\n             * @return void\n             * @static\n             */\n            public static function dropAllViews()\n            {\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                $instance->dropAllViews();\n            }\n\n            /**\n             * Get all of the table names for the database.\n             *\n             * @return array\n             * @static\n             */\n            public static function getAllTables()\n            {\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                return $instance->getAllTables();\n            }\n\n            /**\n             * Get all of the view names for the database.\n             *\n             * @return array\n             * @static\n             */\n            public static function getAllViews()\n            {\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                return $instance->getAllViews();\n            }\n\n            /**\n             * Set the default string length for migrations.\n             *\n             * @param  int  $length\n             * @return void\n             * @static\n             */\n            public static function defaultStringLength($length)\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                \\Illuminate\\Database\\Schema\\MySqlBuilder::defaultStringLength($length);\n            }\n\n            /**\n             * Set the default morph key type for migrations.\n             *\n             * @param  string  $type\n             * @return void\n             * @static\n             */\n            public static function defaultMorphKeyType($type)\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                \\Illuminate\\Database\\Schema\\MySqlBuilder::defaultMorphKeyType($type);\n            }\n\n            /**\n             * Set the default morph key type for migrations to UUIDs.\n             *\n             * @return void\n             * @static\n             */\n            public static function morphUsingUuids()\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                \\Illuminate\\Database\\Schema\\MySqlBuilder::morphUsingUuids();\n            }\n\n            /**\n             * Determine if the given table has a given column.\n             *\n             * @param  string  $table\n             * @param  string  $column\n             * @return bool\n             * @static\n             */\n            public static function hasColumn($table, $column)\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                return $instance->hasColumn($table, $column);\n            }\n\n            /**\n             * Determine if the given table has given columns.\n             *\n             * @param  string  $table\n             * @param  array  $columns\n             * @return bool\n             * @static\n             */\n            public static function hasColumns($table, $columns)\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                return $instance->hasColumns($table, $columns);\n            }\n\n            /**\n             * Get the data type for the given column name.\n             *\n             * @param  string  $table\n             * @param  string  $column\n             * @return string\n             * @static\n             */\n            public static function getColumnType($table, $column)\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                return $instance->getColumnType($table, $column);\n            }\n\n            /**\n             * Modify a table on the schema.\n             *\n             * @param  string  $table\n             * @param  \\Closure  $callback\n             * @return void\n             * @static\n             */\n            public static function table($table, $callback)\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                $instance->table($table, $callback);\n            }\n\n            /**\n             * Create a new table on the schema.\n             *\n             * @param  string  $table\n             * @param  \\Closure  $callback\n             * @return void\n             * @static\n             */\n            public static function create($table, $callback)\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                $instance->create($table, $callback);\n            }\n\n            /**\n             * Drop a table from the schema.\n             *\n             * @param  string  $table\n             * @return void\n             * @static\n             */\n            public static function drop($table)\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                $instance->drop($table);\n            }\n\n            /**\n             * Drop a table from the schema if it exists.\n             *\n             * @param  string  $table\n             * @return void\n             * @static\n             */\n            public static function dropIfExists($table)\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                $instance->dropIfExists($table);\n            }\n\n            /**\n             * Drop columns from a table schema.\n             *\n             * @param  string  $table\n             * @param  string|array  $columns\n             * @return void\n             * @static\n             */\n            public static function dropColumns($table, $columns)\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                $instance->dropColumns($table, $columns);\n            }\n\n            /**\n             * Drop all types from the database.\n             *\n             * @return void\n             *\n             * @throws \\LogicException\n             * @static\n             */\n            public static function dropAllTypes()\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                $instance->dropAllTypes();\n            }\n\n            /**\n             * Rename a table on the schema.\n             *\n             * @param  string  $from\n             * @param  string  $to\n             * @return void\n             * @static\n             */\n            public static function rename($from, $to)\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                $instance->rename($from, $to);\n            }\n\n            /**\n             * Enable foreign key constraints.\n             *\n             * @return bool\n             * @static\n             */\n            public static function enableForeignKeyConstraints()\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                return $instance->enableForeignKeyConstraints();\n            }\n\n            /**\n             * Disable foreign key constraints.\n             *\n             * @return bool\n             * @static\n             */\n            public static function disableForeignKeyConstraints()\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                return $instance->disableForeignKeyConstraints();\n            }\n\n            /**\n             * Register a custom Doctrine mapping type.\n             *\n             * @param  string  $class\n             * @param  string  $name\n             * @param  string  $type\n             * @return void\n             *\n             * @throws \\Doctrine\\DBAL\\DBALException\n             * @throws \\RuntimeException\n             * @static\n             */\n            public static function registerCustomDoctrineType($class, $name, $type)\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                $instance->registerCustomDoctrineType($class, $name, $type);\n            }\n\n            /**\n             * Get the database connection instance.\n             *\n             * @return \\Illuminate\\Database\\Connection\n             * @static\n             */\n            public static function getConnection()\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                return $instance->getConnection();\n            }\n\n            /**\n             * Set the database connection instance.\n             *\n             * @param  \\Illuminate\\Database\\Connection  $connection\n             * @return \\Illuminate\\Database\\Schema\\MySqlBuilder\n             * @static\n             */\n            public static function setConnection($connection)\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                return $instance->setConnection($connection);\n            }\n\n            /**\n             * Set the Schema Blueprint resolver callback.\n             *\n             * @param  \\Closure  $resolver\n             * @return void\n             * @static\n             */\n            public static function blueprintResolver($resolver)\n            {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder\n                /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                $instance->blueprintResolver($resolver);\n            }\n        }\n        /**\n         * @see \\Illuminate\\Session\\SessionManager\n         * @see \\Illuminate\\Session\\Store\n         */\n        class Session\n        {\n            /**\n             * Determine if requests for the same session should wait for each to finish before executing.\n             *\n             * @return bool\n             * @static\n             */\n            public static function shouldBlock()\n            {\n                /** @var \\Illuminate\\Session\\SessionManager $instance */\n                return $instance->shouldBlock();\n            }\n\n            /**\n             * Get the name of the cache store / driver that should be used to acquire session locks.\n             *\n             * @return string|null\n             * @static\n             */\n            public static function blockDriver()\n            {\n                /** @var \\Illuminate\\Session\\SessionManager $instance */\n                return $instance->blockDriver();\n            }\n\n            /**\n             * Get the session configuration.\n             *\n             * @return array\n             * @static\n             */\n            public static function getSessionConfig()\n            {\n                /** @var \\Illuminate\\Session\\SessionManager $instance */\n                return $instance->getSessionConfig();\n            }\n\n            /**\n             * Get the default session driver name.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDefaultDriver()\n            {\n                /** @var \\Illuminate\\Session\\SessionManager $instance */\n                return $instance->getDefaultDriver();\n            }\n\n            /**\n             * Set the default session driver name.\n             *\n             * @param  string  $name\n             * @return void\n             * @static\n             */\n            public static function setDefaultDriver($name)\n            {\n                /** @var \\Illuminate\\Session\\SessionManager $instance */\n                $instance->setDefaultDriver($name);\n            }\n\n            /**\n             * Get a driver instance.\n             *\n             * @param  string|null  $driver\n             * @return mixed\n             *\n             * @throws \\InvalidArgumentException\n             * @static\n             */\n            public static function driver($driver = null)\n            {            //Method inherited from \\Illuminate\\Support\\Manager\n                /** @var \\Illuminate\\Session\\SessionManager $instance */\n                return $instance->driver($driver);\n            }\n\n            /**\n             * Register a custom driver creator Closure.\n             *\n             * @param  string  $driver\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Session\\SessionManager\n             * @static\n             */\n            public static function extend($driver, $callback)\n            {            //Method inherited from \\Illuminate\\Support\\Manager\n                /** @var \\Illuminate\\Session\\SessionManager $instance */\n                return $instance->extend($driver, $callback);\n            }\n\n            /**\n             * Get all of the created \"drivers\".\n             *\n             * @return array\n             * @static\n             */\n            public static function getDrivers()\n            {            //Method inherited from \\Illuminate\\Support\\Manager\n                /** @var \\Illuminate\\Session\\SessionManager $instance */\n                return $instance->getDrivers();\n            }\n\n            /**\n             * Start the session, reading the data from a handler.\n             *\n             * @return bool\n             * @static\n             */\n            public static function start()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->start();\n            }\n\n            /**\n             * Save the session data to storage.\n             *\n             * @return void\n             * @static\n             */\n            public static function save()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->save();\n            }\n\n            /**\n             * Age the flash data for the session.\n             *\n             * @return void\n             * @static\n             */\n            public static function ageFlashData()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->ageFlashData();\n            }\n\n            /**\n             * Get all of the session data.\n             *\n             * @return array\n             * @static\n             */\n            public static function all()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->all();\n            }\n\n            /**\n             * Get a subset of the session data.\n             *\n             * @param  array  $keys\n             * @return array\n             * @static\n             */\n            public static function only($keys)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->only($keys);\n            }\n\n            /**\n             * Checks if a key exists.\n             *\n             * @param  string|array  $key\n             * @return bool\n             * @static\n             */\n            public static function exists($key)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->exists($key);\n            }\n\n            /**\n             * Checks if a key is present and not null.\n             *\n             * @param  string|array  $key\n             * @return bool\n             * @static\n             */\n            public static function has($key)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->has($key);\n            }\n\n            /**\n             * Get an item from the session.\n             *\n             * @param  string  $key\n             * @param  mixed  $default\n             * @return mixed\n             * @static\n             */\n            public static function get($key, $default = null)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->get($key, $default);\n            }\n\n            /**\n             * Get the value of a given key and then forget it.\n             *\n             * @param  string  $key\n             * @param  mixed  $default\n             * @return mixed\n             * @static\n             */\n            public static function pull($key, $default = null)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->pull($key, $default);\n            }\n\n            /**\n             * Determine if the session contains old input.\n             *\n             * @param  string|null  $key\n             * @return bool\n             * @static\n             */\n            public static function hasOldInput($key = null)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->hasOldInput($key);\n            }\n\n            /**\n             * Get the requested item from the flashed input array.\n             *\n             * @param  string|null  $key\n             * @param  mixed  $default\n             * @return mixed\n             * @static\n             */\n            public static function getOldInput($key = null, $default = null)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->getOldInput($key, $default);\n            }\n\n            /**\n             * Replace the given session attributes entirely.\n             *\n             * @param  array  $attributes\n             * @return void\n             * @static\n             */\n            public static function replace($attributes)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->replace($attributes);\n            }\n\n            /**\n             * Put a key / value pair or array of key / value pairs in the session.\n             *\n             * @param  string|array  $key\n             * @param  mixed  $value\n             * @return void\n             * @static\n             */\n            public static function put($key, $value = null)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->put($key, $value);\n            }\n\n            /**\n             * Get an item from the session, or store the default value.\n             *\n             * @param  string  $key\n             * @param  \\Closure  $callback\n             * @return mixed\n             * @static\n             */\n            public static function remember($key, $callback)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->remember($key, $callback);\n            }\n\n            /**\n             * Push a value onto a session array.\n             *\n             * @param  string  $key\n             * @param  mixed  $value\n             * @return void\n             * @static\n             */\n            public static function push($key, $value)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->push($key, $value);\n            }\n\n            /**\n             * Increment the value of an item in the session.\n             *\n             * @param  string  $key\n             * @param  int  $amount\n             * @return mixed\n             * @static\n             */\n            public static function increment($key, $amount = 1)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->increment($key, $amount);\n            }\n\n            /**\n             * Decrement the value of an item in the session.\n             *\n             * @param  string  $key\n             * @param  int  $amount\n             * @return int\n             * @static\n             */\n            public static function decrement($key, $amount = 1)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->decrement($key, $amount);\n            }\n\n            /**\n             * Flash a key / value pair to the session.\n             *\n             * @param  string  $key\n             * @param  mixed  $value\n             * @return void\n             * @static\n             */\n            public static function flash($key, $value = true)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->flash($key, $value);\n            }\n\n            /**\n             * Flash a key / value pair to the session for immediate use.\n             *\n             * @param  string  $key\n             * @param  mixed  $value\n             * @return void\n             * @static\n             */\n            public static function now($key, $value)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->now($key, $value);\n            }\n\n            /**\n             * Reflash all of the session flash data.\n             *\n             * @return void\n             * @static\n             */\n            public static function reflash()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->reflash();\n            }\n\n            /**\n             * Reflash a subset of the current flash data.\n             *\n             * @param  array|mixed  $keys\n             * @return void\n             * @static\n             */\n            public static function keep($keys = null)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->keep($keys);\n            }\n\n            /**\n             * Flash an input array to the session.\n             *\n             * @param  array  $value\n             * @return void\n             * @static\n             */\n            public static function flashInput($value)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->flashInput($value);\n            }\n\n            /**\n             * Remove an item from the session, returning its value.\n             *\n             * @param  string  $key\n             * @return mixed\n             * @static\n             */\n            public static function remove($key)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->remove($key);\n            }\n\n            /**\n             * Remove one or many items from the session.\n             *\n             * @param  string|array  $keys\n             * @return void\n             * @static\n             */\n            public static function forget($keys)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->forget($keys);\n            }\n\n            /**\n             * Remove all of the items from the session.\n             *\n             * @return void\n             * @static\n             */\n            public static function flush()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->flush();\n            }\n\n            /**\n             * Flush the session data and regenerate the ID.\n             *\n             * @return bool\n             * @static\n             */\n            public static function invalidate()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->invalidate();\n            }\n\n            /**\n             * Generate a new session identifier.\n             *\n             * @param  bool  $destroy\n             * @return bool\n             * @static\n             */\n            public static function regenerate($destroy = false)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->regenerate($destroy);\n            }\n\n            /**\n             * Generate a new session ID for the session.\n             *\n             * @param  bool  $destroy\n             * @return bool\n             * @static\n             */\n            public static function migrate($destroy = false)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->migrate($destroy);\n            }\n\n            /**\n             * Determine if the session has been started.\n             *\n             * @return bool\n             * @static\n             */\n            public static function isStarted()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->isStarted();\n            }\n\n            /**\n             * Get the name of the session.\n             *\n             * @return string\n             * @static\n             */\n            public static function getName()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->getName();\n            }\n\n            /**\n             * Set the name of the session.\n             *\n             * @param  string  $name\n             * @return void\n             * @static\n             */\n            public static function setName($name)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->setName($name);\n            }\n\n            /**\n             * Get the current session ID.\n             *\n             * @return string\n             * @static\n             */\n            public static function getId()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->getId();\n            }\n\n            /**\n             * Set the session ID.\n             *\n             * @param  string  $id\n             * @return void\n             * @static\n             */\n            public static function setId($id)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->setId($id);\n            }\n\n            /**\n             * Determine if this is a valid session ID.\n             *\n             * @param  string  $id\n             * @return bool\n             * @static\n             */\n            public static function isValidId($id)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->isValidId($id);\n            }\n\n            /**\n             * Set the existence of the session on the handler if applicable.\n             *\n             * @param  bool  $value\n             * @return void\n             * @static\n             */\n            public static function setExists($value)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->setExists($value);\n            }\n\n            /**\n             * Get the CSRF token value.\n             *\n             * @return string\n             * @static\n             */\n            public static function token()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->token();\n            }\n\n            /**\n             * Regenerate the CSRF token value.\n             *\n             * @return void\n             * @static\n             */\n            public static function regenerateToken()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->regenerateToken();\n            }\n\n            /**\n             * Get the previous URL from the session.\n             *\n             * @return string|null\n             * @static\n             */\n            public static function previousUrl()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->previousUrl();\n            }\n\n            /**\n             * Set the \"previous\" URL in the session.\n             *\n             * @param  string  $url\n             * @return void\n             * @static\n             */\n            public static function setPreviousUrl($url)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->setPreviousUrl($url);\n            }\n\n            /**\n             * Specify that the user has confirmed their password.\n             *\n             * @return void\n             * @static\n             */\n            public static function passwordConfirmed()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->passwordConfirmed();\n            }\n\n            /**\n             * Get the underlying session handler implementation.\n             *\n             * @return \\SessionHandlerInterface\n             * @static\n             */\n            public static function getHandler()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->getHandler();\n            }\n\n            /**\n             * Determine if the session handler needs a request.\n             *\n             * @return bool\n             * @static\n             */\n            public static function handlerNeedsRequest()\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                return $instance->handlerNeedsRequest();\n            }\n\n            /**\n             * Set the request on the handler instance.\n             *\n             * @param  \\Illuminate\\Http\\Request  $request\n             * @return void\n             * @static\n             */\n            public static function setRequestOnHandler($request)\n            {\n                /** @var \\Illuminate\\Session\\Store $instance */\n                $instance->setRequestOnHandler($request);\n            }\n        }\n        /**\n         * @see \\Illuminate\\Filesystem\\FilesystemManager\n         */\n        class Storage\n        {\n            /**\n             * Get a filesystem instance.\n             *\n             * @param  string|null  $name\n             * @return \\Illuminate\\Filesystem\\FilesystemAdapter\n             * @static\n             */\n            public static function drive($name = null)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                return $instance->drive($name);\n            }\n\n            /**\n             * Get a filesystem instance.\n             *\n             * @param  string|null  $name\n             * @return \\Illuminate\\Filesystem\\FilesystemAdapter\n             * @static\n             */\n            public static function disk($name = null)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                return $instance->disk($name);\n            }\n\n            /**\n             * Get a default cloud filesystem instance.\n             *\n             * @return \\Illuminate\\Filesystem\\FilesystemAdapter\n             * @static\n             */\n            public static function cloud()\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                return $instance->cloud();\n            }\n\n            /**\n             * Create an instance of the local driver.\n             *\n             * @param  array  $config\n             * @return \\Illuminate\\Filesystem\\FilesystemAdapter\n             * @static\n             */\n            public static function createLocalDriver($config)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                return $instance->createLocalDriver($config);\n            }\n\n            /**\n             * Create an instance of the ftp driver.\n             *\n             * @param  array  $config\n             * @return \\Illuminate\\Filesystem\\FilesystemAdapter\n             * @static\n             */\n            public static function createFtpDriver($config)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                return $instance->createFtpDriver($config);\n            }\n\n            /**\n             * Create an instance of the sftp driver.\n             *\n             * @param  array  $config\n             * @return \\Illuminate\\Filesystem\\FilesystemAdapter\n             * @static\n             */\n            public static function createSftpDriver($config)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                return $instance->createSftpDriver($config);\n            }\n\n            /**\n             * Create an instance of the Amazon S3 driver.\n             *\n             * @param  array  $config\n             * @return \\Illuminate\\Contracts\\Filesystem\\Cloud\n             * @static\n             */\n            public static function createS3Driver($config)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                return $instance->createS3Driver($config);\n            }\n\n            /**\n             * Set the given disk instance.\n             *\n             * @param  string  $name\n             * @param  mixed  $disk\n             * @return \\Illuminate\\Filesystem\\FilesystemManager\n             * @static\n             */\n            public static function set($name, $disk)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                return $instance->set($name, $disk);\n            }\n\n            /**\n             * Get the default driver name.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDefaultDriver()\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                return $instance->getDefaultDriver();\n            }\n\n            /**\n             * Get the default cloud driver name.\n             *\n             * @return string\n             * @static\n             */\n            public static function getDefaultCloudDriver()\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                return $instance->getDefaultCloudDriver();\n            }\n\n            /**\n             * Unset the given disk instances.\n             *\n             * @param  array|string  $disk\n             * @return \\Illuminate\\Filesystem\\FilesystemManager\n             * @static\n             */\n            public static function forgetDisk($disk)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                return $instance->forgetDisk($disk);\n            }\n\n            /**\n             * Disconnect the given disk and remove from local cache.\n             *\n             * @param  string|null  $name\n             * @return void\n             * @static\n             */\n            public static function purge($name = null)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                $instance->purge($name);\n            }\n\n            /**\n             * Register a custom driver creator Closure.\n             *\n             * @param  string  $driver\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Filesystem\\FilesystemManager\n             * @static\n             */\n            public static function extend($driver, $callback)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                return $instance->extend($driver, $callback);\n            }\n\n            /**\n             * Assert that the given file exists.\n             *\n             * @param  string|array  $path\n             * @return \\Illuminate\\Filesystem\\FilesystemAdapter\n             * @static\n             */\n            public static function assertExists($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->assertExists($path);\n            }\n\n            /**\n             * Assert that the given file does not exist.\n             *\n             * @param  string|array  $path\n             * @return \\Illuminate\\Filesystem\\FilesystemAdapter\n             * @static\n             */\n            public static function assertMissing($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->assertMissing($path);\n            }\n\n            /**\n             * Determine if a file exists.\n             *\n             * @param  string  $path\n             * @return bool\n             * @static\n             */\n            public static function exists($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->exists($path);\n            }\n\n            /**\n             * Determine if a file or directory is missing.\n             *\n             * @param  string  $path\n             * @return bool\n             * @static\n             */\n            public static function missing($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->missing($path);\n            }\n\n            /**\n             * Get the full path for the file at the given \"short\" path.\n             *\n             * @param  string  $path\n             * @return string\n             * @static\n             */\n            public static function path($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->path($path);\n            }\n\n            /**\n             * Get the contents of a file.\n             *\n             * @param  string  $path\n             * @return string\n             *\n             * @throws \\Illuminate\\Contracts\\Filesystem\\FileNotFoundException\n             * @static\n             */\n            public static function get($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->get($path);\n            }\n\n            /**\n             * Create a streamed response for a given file.\n             *\n             * @param  string  $path\n             * @param  string|null  $name\n             * @param  array|null  $headers\n             * @param  string|null  $disposition\n             * @return \\Symfony\\Component\\HttpFoundation\\StreamedResponse\n             * @static\n             */\n            public static function response($path, $name = null, $headers = [], $disposition = 'inline')\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->response($path, $name, $headers, $disposition);\n            }\n\n            /**\n             * Create a streamed download response for a given file.\n             *\n             * @param  string  $path\n             * @param  string|null  $name\n             * @param  array|null  $headers\n             * @return \\Symfony\\Component\\HttpFoundation\\StreamedResponse\n             * @static\n             */\n            public static function download($path, $name = null, $headers = [])\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->download($path, $name, $headers);\n            }\n\n            /**\n             * Write the contents of a file.\n             *\n             * @param  string  $path\n             * @param  string|resource  $contents\n             * @param  mixed  $options\n             * @return bool\n             * @static\n             */\n            public static function put($path, $contents, $options = [])\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->put($path, $contents, $options);\n            }\n\n            /**\n             * Store the uploaded file on the disk.\n             *\n             * @param  string  $path\n             * @param  \\Illuminate\\Http\\File|\\Illuminate\\Http\\UploadedFile|string  $file\n             * @param  mixed  $options\n             * @return string|false\n             * @static\n             */\n            public static function putFile($path, $file, $options = [])\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->putFile($path, $file, $options);\n            }\n\n            /**\n             * Store the uploaded file on the disk with a given name.\n             *\n             * @param  string  $path\n             * @param  \\Illuminate\\Http\\File|\\Illuminate\\Http\\UploadedFile|string  $file\n             * @param  string  $name\n             * @param  mixed  $options\n             * @return string|false\n             * @static\n             */\n            public static function putFileAs($path, $file, $name, $options = [])\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->putFileAs($path, $file, $name, $options);\n            }\n\n            /**\n             * Get the visibility for the given path.\n             *\n             * @param  string  $path\n             * @return string\n             * @static\n             */\n            public static function getVisibility($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->getVisibility($path);\n            }\n\n            /**\n             * Set the visibility for the given path.\n             *\n             * @param  string  $path\n             * @param  string  $visibility\n             * @return bool\n             * @static\n             */\n            public static function setVisibility($path, $visibility)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->setVisibility($path, $visibility);\n            }\n\n            /**\n             * Prepend to a file.\n             *\n             * @param  string  $path\n             * @param  string  $data\n             * @param  string  $separator\n             * @return bool\n             * @static\n             */\n            public static function prepend($path, $data, $separator = '\n')\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->prepend($path, $data, $separator);\n            }\n\n            /**\n             * Append to a file.\n             *\n             * @param  string  $path\n             * @param  string  $data\n             * @param  string  $separator\n             * @return bool\n             * @static\n             */\n            public static function append($path, $data, $separator = '\n')\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->append($path, $data, $separator);\n            }\n\n            /**\n             * Delete the file at a given path.\n             *\n             * @param  string|array  $paths\n             * @return bool\n             * @static\n             */\n            public static function delete($paths)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->delete($paths);\n            }\n\n            /**\n             * Copy a file to a new location.\n             *\n             * @param  string  $from\n             * @param  string  $to\n             * @return bool\n             * @static\n             */\n            public static function copy($from, $to)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->copy($from, $to);\n            }\n\n            /**\n             * Move a file to a new location.\n             *\n             * @param  string  $from\n             * @param  string  $to\n             * @return bool\n             * @static\n             */\n            public static function move($from, $to)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->move($from, $to);\n            }\n\n            /**\n             * Get the file size of a given file.\n             *\n             * @param  string  $path\n             * @return int\n             * @static\n             */\n            public static function size($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->size($path);\n            }\n\n            /**\n             * Get the mime-type of a given file.\n             *\n             * @param  string  $path\n             * @return string|false\n             * @static\n             */\n            public static function mimeType($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->mimeType($path);\n            }\n\n            /**\n             * Get the file's last modification time.\n             *\n             * @param  string  $path\n             * @return int\n             * @static\n             */\n            public static function lastModified($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->lastModified($path);\n            }\n\n            /**\n             * Get the URL for the file at the given path.\n             *\n             * @param  string  $path\n             * @return string\n             *\n             * @throws \\RuntimeException\n             * @static\n             */\n            public static function url($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->url($path);\n            }\n\n            /**\n             * Get a resource to read the file.\n             *\n             * @param  string  $path\n             * @return resource|null The path resource or null on failure.\n             *\n             * @throws \\Illuminate\\Contracts\\Filesystem\\FileNotFoundException\n             * @static\n             */\n            public static function readStream($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->readStream($path);\n            }\n\n            /**\n             * Write a new file using a stream.\n             *\n             * @param  string  $path\n             * @param  resource  $resource\n             * @param  array  $options\n             * @return bool\n             *\n             * @throws \\InvalidArgumentException If $resource is not a file handle.\n             * @throws \\Illuminate\\Contracts\\Filesystem\\FileExistsException\n             * @static\n             */\n            public static function writeStream($path, $resource, $options = [])\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->writeStream($path, $resource, $options);\n            }\n\n            /**\n             * Get a temporary URL for the file at the given path.\n             *\n             * @param  string  $path\n             * @param  \\DateTimeInterface  $expiration\n             * @param  array  $options\n             * @return string\n             *\n             * @throws \\RuntimeException\n             * @static\n             */\n            public static function temporaryUrl($path, $expiration, $options = [])\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->temporaryUrl($path, $expiration, $options);\n            }\n\n            /**\n             * Get a temporary URL for the file at the given path.\n             *\n             * @param  \\League\\Flysystem\\AwsS3v3\\AwsS3Adapter  $adapter\n             * @param  string  $path\n             * @param  \\DateTimeInterface  $expiration\n             * @param  array  $options\n             * @return string\n             * @static\n             */\n            public static function getAwsTemporaryUrl($adapter, $path, $expiration, $options)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->getAwsTemporaryUrl($adapter, $path, $expiration, $options);\n            }\n\n            /**\n             * Get an array of all files in a directory.\n             *\n             * @param  string|null  $directory\n             * @param  bool  $recursive\n             * @return array\n             * @static\n             */\n            public static function files($directory = null, $recursive = false)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->files($directory, $recursive);\n            }\n\n            /**\n             * Get all of the files from the given directory (recursive).\n             *\n             * @param  string|null  $directory\n             * @return array\n             * @static\n             */\n            public static function allFiles($directory = null)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->allFiles($directory);\n            }\n\n            /**\n             * Get all of the directories within a given directory.\n             *\n             * @param  string|null  $directory\n             * @param  bool  $recursive\n             * @return array\n             * @static\n             */\n            public static function directories($directory = null, $recursive = false)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->directories($directory, $recursive);\n            }\n\n            /**\n             * Get all (recursive) of the directories within a given directory.\n             *\n             * @param  string|null  $directory\n             * @return array\n             * @static\n             */\n            public static function allDirectories($directory = null)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->allDirectories($directory);\n            }\n\n            /**\n             * Create a directory.\n             *\n             * @param  string  $path\n             * @return bool\n             * @static\n             */\n            public static function makeDirectory($path)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->makeDirectory($path);\n            }\n\n            /**\n             * Recursively delete a directory.\n             *\n             * @param  string  $directory\n             * @return bool\n             * @static\n             */\n            public static function deleteDirectory($directory)\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->deleteDirectory($directory);\n            }\n\n            /**\n             * Flush the Flysystem cache.\n             *\n             * @return void\n             * @static\n             */\n            public static function flushCache()\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                $instance->flushCache();\n            }\n\n            /**\n             * Get the Flysystem driver.\n             *\n             * @return \\League\\Flysystem\\FilesystemInterface\n             * @static\n             */\n            public static function getDriver()\n            {\n                /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                return $instance->getDriver();\n            }\n        }\n        /**\n         * @see \\Illuminate\\Routing\\UrlGenerator\n         */\n        class URL\n        {\n            /**\n             * Get the full URL for the current request.\n             *\n             * @return string\n             * @static\n             */\n            public static function full()\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->full();\n            }\n\n            /**\n             * Get the current URL for the request.\n             *\n             * @return string\n             * @static\n             */\n            public static function current()\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->current();\n            }\n\n            /**\n             * Get the URL for the previous request.\n             *\n             * @param  mixed  $fallback\n             * @return string\n             * @static\n             */\n            public static function previous($fallback = false)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->previous($fallback);\n            }\n\n            /**\n             * Generate an absolute URL to the given path.\n             *\n             * @param  string  $path\n             * @param  mixed  $extra\n             * @param  bool|null  $secure\n             * @return string\n             * @static\n             */\n            public static function to($path, $extra = [], $secure = null)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->to($path, $extra, $secure);\n            }\n\n            /**\n             * Generate a secure, absolute URL to the given path.\n             *\n             * @param  string  $path\n             * @param  array  $parameters\n             * @return string\n             * @static\n             */\n            public static function secure($path, $parameters = [])\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->secure($path, $parameters);\n            }\n\n            /**\n             * Generate the URL to an application asset.\n             *\n             * @param  string  $path\n             * @param  bool|null  $secure\n             * @return string\n             * @static\n             */\n            public static function asset($path, $secure = null)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->asset($path, $secure);\n            }\n\n            /**\n             * Generate the URL to a secure asset.\n             *\n             * @param  string  $path\n             * @return string\n             * @static\n             */\n            public static function secureAsset($path)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->secureAsset($path);\n            }\n\n            /**\n             * Generate the URL to an asset from a custom root domain such as CDN, etc.\n             *\n             * @param  string  $root\n             * @param  string  $path\n             * @param  bool|null  $secure\n             * @return string\n             * @static\n             */\n            public static function assetFrom($root, $path, $secure = null)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->assetFrom($root, $path, $secure);\n            }\n\n            /**\n             * Get the default scheme for a raw URL.\n             *\n             * @param  bool|null  $secure\n             * @return string\n             * @static\n             */\n            public static function formatScheme($secure = null)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->formatScheme($secure);\n            }\n\n            /**\n             * Create a signed route URL for a named route.\n             *\n             * @param  string  $name\n             * @param  mixed  $parameters\n             * @param  \\DateTimeInterface|\\DateInterval|int|null  $expiration\n             * @param  bool  $absolute\n             * @return string\n             *\n             * @throws \\InvalidArgumentException\n             * @static\n             */\n            public static function signedRoute($name, $parameters = [], $expiration = null, $absolute = true)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->signedRoute($name, $parameters, $expiration, $absolute);\n            }\n\n            /**\n             * Create a temporary signed route URL for a named route.\n             *\n             * @param  string  $name\n             * @param  \\DateTimeInterface|\\DateInterval|int  $expiration\n             * @param  array  $parameters\n             * @param  bool  $absolute\n             * @return string\n             * @static\n             */\n            public static function temporarySignedRoute($name, $expiration, $parameters = [], $absolute = true)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->temporarySignedRoute($name, $expiration, $parameters, $absolute);\n            }\n\n            /**\n             * Determine if the given request has a valid signature.\n             *\n             * @param  \\Illuminate\\Http\\Request  $request\n             * @param  bool  $absolute\n             * @return bool\n             * @static\n             */\n            public static function hasValidSignature($request, $absolute = true)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->hasValidSignature($request, $absolute);\n            }\n\n            /**\n             * Determine if the given request has a valid signature for a relative URL.\n             *\n             * @param  \\Illuminate\\Http\\Request  $request\n             * @return bool\n             * @static\n             */\n            public static function hasValidRelativeSignature($request)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->hasValidRelativeSignature($request);\n            }\n\n            /**\n             * Determine if the signature from the given request matches the URL.\n             *\n             * @param  \\Illuminate\\Http\\Request  $request\n             * @param  bool  $absolute\n             * @return bool\n             * @static\n             */\n            public static function hasCorrectSignature($request, $absolute = true)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->hasCorrectSignature($request, $absolute);\n            }\n\n            /**\n             * Determine if the expires timestamp from the given request is not from the past.\n             *\n             * @param  \\Illuminate\\Http\\Request  $request\n             * @return bool\n             * @static\n             */\n            public static function signatureHasNotExpired($request)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->signatureHasNotExpired($request);\n            }\n\n            /**\n             * Get the URL to a named route.\n             *\n             * @param  string  $name\n             * @param  mixed  $parameters\n             * @param  bool  $absolute\n             * @return string\n             *\n             * @throws \\Symfony\\Component\\Routing\\Exception\\RouteNotFoundException\n             * @static\n             */\n            public static function route($name, $parameters = [], $absolute = true)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->route($name, $parameters, $absolute);\n            }\n\n            /**\n             * Get the URL for a given route instance.\n             *\n             * @param  \\Illuminate\\Routing\\Route  $route\n             * @param  mixed  $parameters\n             * @param  bool  $absolute\n             * @return string\n             *\n             * @throws \\Illuminate\\Routing\\Exceptions\\UrlGenerationException\n             * @static\n             */\n            public static function toRoute($route, $parameters, $absolute)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->toRoute($route, $parameters, $absolute);\n            }\n\n            /**\n             * Get the URL to a controller action.\n             *\n             * @param  string|array  $action\n             * @param  mixed  $parameters\n             * @param  bool  $absolute\n             * @return string\n             *\n             * @throws \\InvalidArgumentException\n             * @static\n             */\n            public static function action($action, $parameters = [], $absolute = true)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->action($action, $parameters, $absolute);\n            }\n\n            /**\n             * Format the array of URL parameters.\n             *\n             * @param  mixed|array  $parameters\n             * @return array\n             * @static\n             */\n            public static function formatParameters($parameters)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->formatParameters($parameters);\n            }\n\n            /**\n             * Get the base URL for the request.\n             *\n             * @param  string  $scheme\n             * @param  string|null  $root\n             * @return string\n             * @static\n             */\n            public static function formatRoot($scheme, $root = null)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->formatRoot($scheme, $root);\n            }\n\n            /**\n             * Format the given URL segments into a single URL.\n             *\n             * @param  string  $root\n             * @param  string  $path\n             * @param  \\Illuminate\\Routing\\Route|null  $route\n             * @return string\n             * @static\n             */\n            public static function format($root, $path, $route = null)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->format($root, $path, $route);\n            }\n\n            /**\n             * Determine if the given path is a valid URL.\n             *\n             * @param  string  $path\n             * @return bool\n             * @static\n             */\n            public static function isValidUrl($path)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->isValidUrl($path);\n            }\n\n            /**\n             * Set the default named parameters used by the URL generator.\n             *\n             * @param  array  $defaults\n             * @return void\n             * @static\n             */\n            public static function defaults($defaults)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                $instance->defaults($defaults);\n            }\n\n            /**\n             * Get the default named parameters used by the URL generator.\n             *\n             * @return array\n             * @static\n             */\n            public static function getDefaultParameters()\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->getDefaultParameters();\n            }\n\n            /**\n             * Force the scheme for URLs.\n             *\n             * @param  string|null  $scheme\n             * @return void\n             * @static\n             */\n            public static function forceScheme($scheme)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                $instance->forceScheme($scheme);\n            }\n\n            /**\n             * Set the forced root URL.\n             *\n             * @param  string|null  $root\n             * @return void\n             * @static\n             */\n            public static function forceRootUrl($root)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                $instance->forceRootUrl($root);\n            }\n\n            /**\n             * Set a callback to be used to format the host of generated URLs.\n             *\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Routing\\UrlGenerator\n             * @static\n             */\n            public static function formatHostUsing($callback)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->formatHostUsing($callback);\n            }\n\n            /**\n             * Set a callback to be used to format the path of generated URLs.\n             *\n             * @param  \\Closure  $callback\n             * @return \\Illuminate\\Routing\\UrlGenerator\n             * @static\n             */\n            public static function formatPathUsing($callback)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->formatPathUsing($callback);\n            }\n\n            /**\n             * Get the path formatter being used by the URL generator.\n             *\n             * @return \\Closure\n             * @static\n             */\n            public static function pathFormatter()\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->pathFormatter();\n            }\n\n            /**\n             * Get the request instance.\n             *\n             * @return \\Illuminate\\Http\\Request\n             * @static\n             */\n            public static function getRequest()\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->getRequest();\n            }\n\n            /**\n             * Set the current request instance.\n             *\n             * @param  \\Illuminate\\Http\\Request  $request\n             * @return void\n             * @static\n             */\n            public static function setRequest($request)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                $instance->setRequest($request);\n            }\n\n            /**\n             * Set the route collection.\n             *\n             * @param  \\Illuminate\\Routing\\RouteCollectionInterface  $routes\n             * @return \\Illuminate\\Routing\\UrlGenerator\n             * @static\n             */\n            public static function setRoutes($routes)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->setRoutes($routes);\n            }\n\n            /**\n             * Set the session resolver for the generator.\n             *\n             * @param  callable  $sessionResolver\n             * @return \\Illuminate\\Routing\\UrlGenerator\n             * @static\n             */\n            public static function setSessionResolver($sessionResolver)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->setSessionResolver($sessionResolver);\n            }\n\n            /**\n             * Set the encryption key resolver.\n             *\n             * @param  callable  $keyResolver\n             * @return \\Illuminate\\Routing\\UrlGenerator\n             * @static\n             */\n            public static function setKeyResolver($keyResolver)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->setKeyResolver($keyResolver);\n            }\n\n            /**\n             * Set the root controller namespace.\n             *\n             * @param  string  $rootNamespace\n             * @return \\Illuminate\\Routing\\UrlGenerator\n             * @static\n             */\n            public static function setRootControllerNamespace($rootNamespace)\n            {\n                /** @var \\Illuminate\\Routing\\UrlGenerator $instance */\n                return $instance->setRootControllerNamespace($rootNamespace);\n            }\n\n            /**\n             * Register a custom macro.\n             *\n             * @param  string  $name\n             * @param  object|callable  $macro\n             * @return void\n             * @static\n             */\n            public static function macro($name, $macro)\n            {\n                \\Illuminate\\Routing\\UrlGenerator::macro($name, $macro);\n            }\n\n            /**\n             * Mix another object into the class.\n             *\n             * @param  object  $mixin\n             * @param  bool  $replace\n             * @return void\n             *\n             * @throws \\ReflectionException\n             * @static\n             */\n            public static function mixin($mixin, $replace = true)\n            {\n                \\Illuminate\\Routing\\UrlGenerator::mixin($mixin, $replace);\n            }\n\n            /**\n             * Checks if macro is registered.\n             *\n             * @param  string  $name\n             * @return bool\n             * @static\n             */\n            public static function hasMacro($name)\n            {\n                return \\Illuminate\\Routing\\UrlGenerator::hasMacro($name);\n            }\n        }\n        /**\n         * @see \\Illuminate\\Validation\\Factory\n         */\n        class Validator\n        {\n            /**\n             * Create a new Validator instance.\n             *\n             * @param  array  $data\n             * @param  array  $rules\n             * @param  array  $messages\n             * @param  array  $customAttributes\n             * @return \\Illuminate\\Validation\\Validator\n             * @static\n             */\n            public static function make($data, $rules, $messages = [], $customAttributes = [])\n            {\n                /** @var \\Illuminate\\Validation\\Factory $instance */\n                return $instance->make($data, $rules, $messages, $customAttributes);\n            }\n\n            /**\n             * Validate the given data against the provided rules.\n             *\n             * @param  array  $data\n             * @param  array  $rules\n             * @param  array  $messages\n             * @param  array  $customAttributes\n             * @return array\n             *\n             * @throws \\Illuminate\\Validation\\ValidationException\n             * @static\n             */\n            public static function validate($data, $rules, $messages = [], $customAttributes = [])\n            {\n                /** @var \\Illuminate\\Validation\\Factory $instance */\n                return $instance->validate($data, $rules, $messages, $customAttributes);\n            }\n\n            /**\n             * Register a custom validator extension.\n             *\n             * @param  string  $rule\n             * @param  \\Closure|string  $extension\n             * @param  string|null  $message\n             * @return void\n             * @static\n             */\n            public static function extend($rule, $extension, $message "
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "artisan",
          "type": "blob",
          "size": 1.646484375,
          "content": "#!/usr/bin/env php\n<?php\n\ndefine('LARAVEL_START', microtime(true));\n\n/*\n|--------------------------------------------------------------------------\n| Register The Auto Loader\n|--------------------------------------------------------------------------\n|\n| Composer provides a convenient, automatically generated class loader\n| for our application. We just need to utilize it! We'll require it\n| into the script here so that we do not have to worry about the\n| loading of any our classes \"manually\". Feels great to relax.\n|\n*/\n\nrequire __DIR__.'/vendor/autoload.php';\n\n$app = require_once __DIR__.'/bootstrap/app.php';\n\n/*\n|--------------------------------------------------------------------------\n| Run The Artisan Application\n|--------------------------------------------------------------------------\n|\n| When we run the console application, the current CLI command will be\n| executed in this console and the response sent back to a terminal\n| or another output device for the developers. Here goes nothing!\n|\n*/\n\n$kernel = $app->make(Illuminate\\Contracts\\Console\\Kernel::class);\n\n$status = $kernel->handle(\n    $input = new Symfony\\Component\\Console\\Input\\ArgvInput,\n    new Symfony\\Component\\Console\\Output\\ConsoleOutput\n);\n\n/*\n|--------------------------------------------------------------------------\n| Shutdown The Application\n|--------------------------------------------------------------------------\n|\n| Once Artisan has finished running, we will fire off the shutdown events\n| so that any final work may be done by the application before we shut\n| down the process. This is the last thing to happen to the request.\n|\n*/\n\n$kernel->terminate($input, $status);\n\nexit($status);\n"
        },
        {
          "name": "bootstrap",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.34375,
          "content": "codecov:\n  notify:\n    require_ci_to_pass: yes\n\ncoverage:\n  precision: 2\n  round: down\n  range: 0...100\n\n  status:\n    project: yes\n    patch: yes\n    changes: no\n\nparsers:\n  gcov:\n    branch_detection:\n      conditional: yes\n      loop: yes\n      method: no\n      macro: no\n\ncomment:\n  layout: \"header, diff\"\n  behavior: default\n  require_changes: no\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 5.361328125,
          "content": "{\n    \"name\": \"slimkit/plus\",\n    \"description\": \"The Plus(ThinkSNS+) is a powerful, easy-to-develop social system built with Laravel.\",\n    \"keywords\": [\n        \"thinksns\",\n        \"web\",\n        \"php\",\n        \"laravel\",\n        \"sns\",\n        \"user\",\n        \"think\",\n        \"app\"\n    ],\n    \"license\": \"Apache-2.0\",\n    \"type\": \"project\",\n    \"repositories\": [\n        {\n            \"type\": \"artifact\",\n            \"url\": \"resources/repositorie/zips/\"\n        },\n        {\n            \"type\": \"path\",\n            \"url\": \"packages/slimkit-plus-appversion\",\n            \"options\": {\n                \"symlink\": true,\n                \"plus-soft\": true\n            }\n        },\n        {\n            \"type\": \"path\",\n            \"url\": \"packages/slimkit-plus-around-amap\",\n            \"options\": {\n                \"symlink\": true,\n                \"plus-soft\": true\n            }\n        },\n        {\n            \"type\": \"path\",\n            \"url\": \"packages/slimkit-plus-checkin\",\n            \"options\": {\n                \"symlink\": true,\n                \"plus-soft\": true\n            }\n        },\n        {\n            \"type\": \"path\",\n            \"url\": \"packages/slimkit-plus-feed\",\n            \"options\": {\n                \"symlink\": true,\n                \"plus-soft\": true\n            }\n        },\n        {\n            \"type\": \"path\",\n            \"url\": \"packages/slimkit-plus-id\",\n            \"options\": {\n                \"symlink\": true,\n                \"plus-soft\": true\n            }\n        },\n        {\n            \"type\": \"path\",\n            \"url\": \"packages/slimkit-plus-music\",\n            \"options\": {\n                \"symlink\": true,\n                \"plus-soft\": true\n            }\n        },\n        {\n            \"type\": \"path\",\n            \"url\": \"packages/slimkit-plus-news\",\n            \"options\": {\n                \"symlink\": true,\n                \"plus-soft\": true\n            }\n        },\n        {\n            \"type\": \"path\",\n            \"url\": \"packages/slimkit-plus-socialite\",\n            \"options\": {\n                \"symlink\": true,\n                \"plus-soft\": true\n            }\n        },\n        {\n            \"type\": \"path\",\n            \"url\": \"packages/zhiyicx-plus-pc\",\n            \"options\": {\n                \"symlink\": true,\n                \"plus-soft\": true\n            }\n        }\n    ],\n    \"require\": {\n        \"php\": \"^7.3|^7.4|^8.0\",\n        \"aliyuncs/oss-sdk-php\": \"^2.4\",\n        \"doctrine/dbal\": \"^2.12\",\n        \"erusev/parsedown\": \"^1.7\",\n        \"ezyang/htmlpurifier\": \"^4.13\",\n        \"fideloper/proxy\": \"^4.4\",\n        \"fruitcake/laravel-cors\": \"^2.0\",\n        \"guzzlehttp/guzzle\": \"^6.5\",\n        \"intervention/image\": \"^2.5\",\n        \"ext-json\": \"*\",\n        \"barryvdh/laravel-ide-helper\": \"^2.6\",\n        \"jenssegers/agent\": \"^2.6\",\n        \"jpush/jpush\": \"^3.6\",\n        \"laravel/framework\": \"^8.12\",\n        \"laravel/tinker\": \"^2.5\",\n        \"laravel/ui\": \"^3.0\",\n        \"league/html-to-markdown\": \"^4.10\",\n        \"league/omnipay\": \"^3.0\",\n        \"lokielse/omnipay-alipay\": \"^3.0\",\n        \"lokielse/omnipay-wechatpay\": \"^3.0\",\n        \"medz/cors\": \"^1.5\",\n        \"mavinoo/laravel-batch\": \"^2.2\",\n        \"medz/gb-t-2260\": \"^1.0\",\n        \"medz/laravel-jpush-notification-channel\": \"^1.0\",\n        \"overtrue/easy-sms\": \"^1.1.24\",\n        \"pingplusplus/pingpp-php\": \"^2.2\",\n        \"predis/predis\": \"^1.1\",\n        \"symfony/finder\": \"^5.1\",\n        \"symfony/yaml\": \"^5.1\",\n        \"tymon/jwt-auth\": \"^1.0\",\n        \"slimkit/plus-appversion\": \"2.4.1\",\n        \"slimkit/plus-around-amap\": \"2.4.1\",\n        \"slimkit/plus-checkin\": \"2.4.1\",\n        \"slimkit/plus-feed\": \"2.4.1\",\n        \"slimkit/plus-id\": \"2.4.1\",\n        \"slimkit/plus-music\": \"2.4.1\",\n        \"slimkit/plus-news\": \"2.4.1\",\n        \"slimkit/plus-socialite\": \"2.4.1\",\n        \"zhiyicx/plus-pc\": \"2.4.1\"\n    },\n    \"require-dev\": {\n        \"beyondcode/laravel-dump-server\": \"^1.6\",\n        \"codacy/coverage\": \"^1.4\",\n        \"filp/whoops\": \"^2.9\",\n        \"facade/ignition\": \"^2.5\",\n        \"fakerphp/faker\": \"^1.10\",\n        \"mockery/mockery\": \"^1.4\",\n        \"nunomaduro/collision\": \"^5.1\",\n        \"phpunit/phpunit\": \"^9.3.3\",\n        \"laravel/telescope\": \"^4.2\"\n    },\n    \"config\": {\n        \"platform\": {\n            \"php\": \"7.4\"\n        },\n        \"optimize-autoloader\": true,\n        \"preferred-install\": \"dist\",\n        \"sort-packages\": true\n    },\n    \"autoload\": {\n        \"files\": [\n            \"app/helpers.php\"\n        ],\n        \"psr-4\": {\n            \"Zhiyi\\\\Plus\\\\\": \"app/\",\n            \"Database\\\\Factories\\\\\": \"database/factories/\",\n            \"Database\\\\Seeders\\\\\": \"database/seeders/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Zhiyi\\\\Plus\\\\Tests\\\\\": \"tests/\"\n        }\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"2.1-dev\"\n        },\n        \"laravel\": {\n            \"dont-discover\": []\n        }\n    },\n    \"scripts\": {\n        \"post-autoload-dump\": [\n            \"Illuminate\\\\Foundation\\\\ComposerScripts::postAutoloadDump\",\n            \"@php artisan package:discover --ansi\"\n        ],\n        \"post-root-package-install\": [\n            \"@php -r \\\"file_exists('storage/configure/.env') || copy('storage/configure/.env.example', 'storage/configure/.env');\\\"\"\n        ],\n        \"post-create-project-cmd\": [\n            \"@php artisan key:generate --ansi\",\n            \"@php artisan jwt:secret --force --ansi\"\n        ]\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "database",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-entrypoint.sh",
          "type": "blob",
          "size": 1.37890625,
          "content": "#!/bin/bash\nset -euo pipefail\n\nPLUS_NAME=Plus\\(ThinkSNS\\+\\)\nPLUS_SRC_PATH=/usr/src/plus\nPLUS_TARGET_PATH=/var/www\nPHP_FPM_RUNNING_USER=www-data\nPHP_FPM_RUNNING_GROUP=www-data\n\nif ! [ -e $PLUS_SRC_PATH/public/index.php -o \"$(ls -A $PLUS_SRC_PATH)\" ]; then\n\techo >&2 \"ERROR: The $PLUS_NAME code was not found in PHP-FPM container path \\\"$PLUS_SRC_PATH\\\"\"\n\texit 1\nfi\n\nif ! [ -e $PLUS_TARGET_PATH/plus/index.php -o \"$(ls -A $PLUS_TARGET_PATH)\" ]; then\n\techo >&2 \"$PLUS_NAME not found in \\\"$PLUS_TARGET_PATH\\\" - copying now...\"\n\n\tif [ \"$(ls -A $PLUS_TARGET_PATH)\" ]; then\n\t\techo >&2 \"WARNING: \\\"$PLUS_TARGET_PATH\\\" is not empty - press Ctrl+C now if this is an error!\"\n\t\t( set -x; ls -A $PLUS_TARGET_PATH; sleep 10 )\n\tfi\n\n\tcd $PLUS_TARGET_PATH\n\ttar \\\n\t\t--create \\\n\t\t--file - \\\n\t\t--one-file-system \\\n\t\t--directory \"$PLUS_SRC_PATH\" \\\n\t\t--owner \"$PHP_FPM_RUNNING_USER\" \\\n\t\t--group \"$PHP_FPM_RUNNING_GROUP\" \\\n\t. | tar --extract --file -\n\n\techo >&2 \"SUCCESS: Complete! $PLUS_NAME has been successfully copied to \\\"$PLUS_TARGET_PATH\\\"\"\nfi\n\nif ! [ -e $PLUS_TARGET_PATH/storage/configure/.env ]; then\n\techo >&2 \"Copying \\`.env\\` file to \\\"$PLUS_TARGET_PATH/storage/configure/\\\" path\"\n\tcp $PLUS_SRC_PATH/storage/configure/.env.example $PLUS_TARGET_PATH/storage/configure/.env\n\n\techo >&2 \"Generating $PLUS_NAME App encryption key and JWT Authentication Secret\"\n\tcd $PLUS_TARGET_PATH\n\tphp artisan app:key-generate\nfi\n\nexec \"$@\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 591.5029296875,
          "content": "{\n    \"version\": \"2.4.1\",\n    \"lockfileVersion\": 1,\n    \"requires\": true,\n    \"dependencies\": {\n        \"@babel/code-frame\": {\n            \"version\": \"7.10.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/code-frame/download/@babel/code-frame-7.10.4.tgz\",\n            \"integrity\": \"sha1-Fo2ho26Q2miujUnA8bSMfGJJITo=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/highlight\": \"^7.10.4\"\n            }\n        },\n        \"@babel/compat-data\": {\n            \"version\": \"7.15.0\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.15.0.tgz\",\n            \"integrity\": \"sha512-0NqAC1IJE0S0+lL1SWFMxMkz1pKCNCjI4tr2Zx4LJSXxCLAdr6KyArnY+sno5m3yH9g737ygOyPABDsnXkpxiA==\",\n            \"dev\": true\n        },\n        \"@babel/core\": {\n            \"version\": \"7.15.8\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.15.8.tgz\",\n            \"integrity\": \"sha512-3UG9dsxvYBMYwRv+gS41WKHno4K60/9GPy1CJaH6xy3Elq8CTtvtjT5R5jmNhXfCYLX2mTw+7/aq5ak/gOE0og==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/code-frame\": \"^7.15.8\",\n                \"@babel/generator\": \"^7.15.8\",\n                \"@babel/helper-compilation-targets\": \"^7.15.4\",\n                \"@babel/helper-module-transforms\": \"^7.15.8\",\n                \"@babel/helpers\": \"^7.15.4\",\n                \"@babel/parser\": \"^7.15.8\",\n                \"@babel/template\": \"^7.15.4\",\n                \"@babel/traverse\": \"^7.15.4\",\n                \"@babel/types\": \"^7.15.6\",\n                \"convert-source-map\": \"^1.7.0\",\n                \"debug\": \"^4.1.0\",\n                \"gensync\": \"^1.0.0-beta.2\",\n                \"json5\": \"^2.1.2\",\n                \"semver\": \"^6.3.0\",\n                \"source-map\": \"^0.5.0\"\n            },\n            \"dependencies\": {\n                \"@babel/code-frame\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.15.8.tgz\",\n                    \"integrity\": \"sha512-2IAnmn8zbvC/jKYhq5Ki9I+DwjlrtMPUCH/CpHvqI4dNnlwHwsxoIhlc8WcYY5LSYknXQtAlFYuHfqAFCvQ4Wg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/highlight\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/generator\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.15.8.tgz\",\n                    \"integrity\": \"sha512-ECmAKstXbp1cvpTTZciZCgfOt6iN64lR0d+euv3UZisU5awfRawOvg07Utn/qBGuH4bRIEZKrA/4LzZyXhZr8g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.6\",\n                        \"jsesc\": \"^2.5.1\",\n                        \"source-map\": \"^0.5.0\"\n                    }\n                },\n                \"@babel/helper-function-name\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.15.4.tgz\",\n                    \"integrity\": \"sha512-Z91cOMM4DseLIGOnog+Z8OI6YseR9bua+HpvLAQ2XayUGU+neTtX+97caALaLdyu53I/fjhbeCnWnRH1O3jFOw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-get-function-arity\": \"^7.15.4\",\n                        \"@babel/template\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-get-function-arity\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.15.4.tgz\",\n                    \"integrity\": \"sha512-1/AlxSF92CmGZzHnC515hm4SirTxtpDnLEJ0UyEMgTMZN+6bxXKg04dKhiRx5Enel+SUA1G1t5Ed/yQia0efrA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-hoist-variables\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.15.4.tgz\",\n                    \"integrity\": \"sha512-VTy085egb3jUGVK9ycIxQiPbquesq0HUQ+tPO0uv5mPEBZipk+5FkRKiWq5apuyTE9FUrjENB0rCf8y+n+UuhA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-member-expression-to-functions\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.15.4.tgz\",\n                    \"integrity\": \"sha512-cokOMkxC/BTyNP1AlY25HuBWM32iCEsLPI4BHDpJCHHm1FU2E7dKWWIXJgQgSFiu4lp8q3bL1BIKwqkSUviqtA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-module-imports\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.15.4.tgz\",\n                    \"integrity\": \"sha512-jeAHZbzUwdW/xHgHQ3QmWR4Jg6j15q4w/gCfwZvtqOxoo5DKtLHk8Bsf4c5RZRC7NmLEs+ohkdq8jFefuvIxAA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-module-transforms\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.15.8.tgz\",\n                    \"integrity\": \"sha512-DfAfA6PfpG8t4S6npwzLvTUpp0sS7JrcuaMiy1Y5645laRJIp/LiLGIBbQKaXSInK8tiGNI7FL7L8UvB8gdUZg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-module-imports\": \"^7.15.4\",\n                        \"@babel/helper-replace-supers\": \"^7.15.4\",\n                        \"@babel/helper-simple-access\": \"^7.15.4\",\n                        \"@babel/helper-split-export-declaration\": \"^7.15.4\",\n                        \"@babel/helper-validator-identifier\": \"^7.15.7\",\n                        \"@babel/template\": \"^7.15.4\",\n                        \"@babel/traverse\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.6\"\n                    }\n                },\n                \"@babel/helper-optimise-call-expression\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.15.4.tgz\",\n                    \"integrity\": \"sha512-E/z9rfbAOt1vDW1DR7k4SzhzotVV5+qMciWV6LaG1g4jeFrkDlJedjtV4h0i4Q/ITnUu+Pk08M7fczsB9GXBDw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-replace-supers\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.15.4.tgz\",\n                    \"integrity\": \"sha512-/ztT6khaXF37MS47fufrKvIsiQkx1LBRvSJNzRqmbyeZnTwU9qBxXYLaaT/6KaxfKhjs2Wy8kG8ZdsFUuWBjzw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-member-expression-to-functions\": \"^7.15.4\",\n                        \"@babel/helper-optimise-call-expression\": \"^7.15.4\",\n                        \"@babel/traverse\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-simple-access\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.15.4.tgz\",\n                    \"integrity\": \"sha512-UzazrDoIVOZZcTeHHEPYrr1MvTR/K+wgLg6MY6e1CJyaRhbibftF6fR2KU2sFRtI/nERUZR9fBd6aKgBlIBaPg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-split-export-declaration\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.15.4.tgz\",\n                    \"integrity\": \"sha512-HsFqhLDZ08DxCpBdEVtKmywj6PQbwnF6HHybur0MAnkAKnlS6uHkwnmRIkElB2Owpfb4xL4NwDmDLFubueDXsw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-validator-identifier\": {\n                    \"version\": \"7.15.7\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.15.7.tgz\",\n                    \"integrity\": \"sha512-K4JvCtQqad9OY2+yTU8w+E82ywk/fe+ELNlt1G8z3bVGlZfn/hOcQQsUhGhW/N+tb3fxK800wLtKOE/aM0m72w==\",\n                    \"dev\": true\n                },\n                \"@babel/highlight\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.14.5.tgz\",\n                    \"integrity\": \"sha512-qf9u2WFWVV0MppaL877j2dBtQIDgmidgjGk5VIMw3OadXvYaXn66U1BFlH2t4+t3i+8PhedppRv+i40ABzd+gg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.5\",\n                        \"chalk\": \"^2.0.0\",\n                        \"js-tokens\": \"^4.0.0\"\n                    }\n                },\n                \"@babel/parser\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.15.8.tgz\",\n                    \"integrity\": \"sha512-BRYa3wcQnjS/nqI8Ac94pYYpJfojHVvVXJ97+IDCImX4Jc8W8Xv1+47enbruk+q1etOpsQNwnfFcNGw+gtPGxA==\",\n                    \"dev\": true\n                },\n                \"@babel/template\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.15.4.tgz\",\n                    \"integrity\": \"sha512-UgBAfEa1oGuYgDIPM2G+aHa4Nlo9Lh6mGD2bDBGMTbYnc38vulXPuC1MGjYILIEmlwl6Rd+BPR9ee3gm20CBtg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/traverse\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.15.4.tgz\",\n                    \"integrity\": \"sha512-W6lQD8l4rUbQR/vYgSuCAE75ADyyQvOpFVsvPPdkhf6lATXAsQIG9YdtOcu8BB1dZ0LKu+Zo3c1wEcbKeuhdlA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/generator\": \"^7.15.4\",\n                        \"@babel/helper-function-name\": \"^7.15.4\",\n                        \"@babel/helper-hoist-variables\": \"^7.15.4\",\n                        \"@babel/helper-split-export-declaration\": \"^7.15.4\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\",\n                        \"debug\": \"^4.1.0\",\n                        \"globals\": \"^11.1.0\"\n                    }\n                },\n                \"@babel/types\": {\n                    \"version\": \"7.15.6\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.15.6.tgz\",\n                    \"integrity\": \"sha512-BPU+7QhqNjmWyDO0/vitH/CuhpV8ZmK1wpKva8nuyNF5MJfuRNWMc+hc14+u9xT93kvykMdncrJT19h74uB1Ig==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.9\",\n                        \"to-fast-properties\": \"^2.0.0\"\n                    }\n                },\n                \"debug\": {\n                    \"version\": \"4.3.2\",\n                    \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.2.tgz\",\n                    \"integrity\": \"sha512-mOp8wKcvj7XxC78zLgw/ZA+6TSgkoE2C/ienthhRD298T7UNwAg9diBpLRxC0mOezLl4B0xV7M0cCO6P/O0Xhw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ms\": \"2.1.2\"\n                    }\n                },\n                \"ms\": {\n                    \"version\": \"2.1.2\",\n                    \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n                    \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n                    \"dev\": true\n                },\n                \"semver\": {\n                    \"version\": \"6.3.0\",\n                    \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.0.tgz\",\n                    \"integrity\": \"sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/generator\": {\n            \"version\": \"7.12.5\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/generator/download/@babel/generator-7.12.5.tgz?cache=0&sync_timestamp=1604441332971&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fgenerator%2Fdownload%2F%40babel%2Fgenerator-7.12.5.tgz\",\n            \"integrity\": \"sha1-osUN5ci21wirlb5eYFOTbBiEpN4=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/types\": \"^7.12.5\",\n                \"jsesc\": \"^2.5.1\",\n                \"source-map\": \"^0.5.0\"\n            }\n        },\n        \"@babel/helper-annotate-as-pure\": {\n            \"version\": \"7.10.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-annotate-as-pure/download/@babel/helper-annotate-as-pure-7.10.4.tgz?cache=0&sync_timestamp=1593522826156&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-annotate-as-pure%2Fdownload%2F%40babel%2Fhelper-annotate-as-pure-7.10.4.tgz\",\n            \"integrity\": \"sha1-W/DUlaP3V6w72ki1vzs7ownHK6M=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/types\": \"^7.10.4\"\n            }\n        },\n        \"@babel/helper-builder-binary-assignment-operator-visitor\": {\n            \"version\": \"7.10.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-builder-binary-assignment-operator-visitor/download/@babel/helper-builder-binary-assignment-operator-visitor-7.10.4.tgz\",\n            \"integrity\": \"sha1-uwt18xv5jL+f8UPBrleLhydK4aM=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-explode-assignable-expression\": \"^7.10.4\",\n                \"@babel/types\": \"^7.10.4\"\n            }\n        },\n        \"@babel/helper-compilation-targets\": {\n            \"version\": \"7.15.4\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.15.4.tgz\",\n            \"integrity\": \"sha512-rMWPCirulnPSe4d+gwdWXLfAXTTBj8M3guAf5xFQJ0nvFY7tfNAFnWdqaHegHlgDZOCT4qvhF3BYlSJag8yhqQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/compat-data\": \"^7.15.0\",\n                \"@babel/helper-validator-option\": \"^7.14.5\",\n                \"browserslist\": \"^4.16.6\",\n                \"semver\": \"^6.3.0\"\n            },\n            \"dependencies\": {\n                \"browserslist\": {\n                    \"version\": \"4.17.0\",\n                    \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.17.0.tgz\",\n                    \"integrity\": \"sha512-g2BJ2a0nEYvEFQC208q8mVAhfNwpZ5Mu8BwgtCdZKO3qx98HChmeg448fPdUzld8aFmfLgVh7yymqV+q1lJZ5g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"caniuse-lite\": \"^1.0.30001254\",\n                        \"colorette\": \"^1.3.0\",\n                        \"electron-to-chromium\": \"^1.3.830\",\n                        \"escalade\": \"^3.1.1\",\n                        \"node-releases\": \"^1.1.75\"\n                    }\n                },\n                \"caniuse-lite\": {\n                    \"version\": \"1.0.30001258\",\n                    \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001258.tgz\",\n                    \"integrity\": \"sha512-RBByOG6xWXUp0CR2/WU2amXz3stjKpSl5J1xU49F1n2OxD//uBZO4wCKUiG+QMGf7CHGfDDcqoKriomoGVxTeA==\",\n                    \"dev\": true\n                },\n                \"colorette\": {\n                    \"version\": \"1.4.0\",\n                    \"resolved\": \"https://registry.npmjs.org/colorette/-/colorette-1.4.0.tgz\",\n                    \"integrity\": \"sha512-Y2oEozpomLn7Q3HFP7dpww7AtMJplbM9lGZP6RDfHqmbeRjiwRg4n6VM6j4KLmRke85uWEI7JqF17f3pqdRA0g==\",\n                    \"dev\": true\n                },\n                \"electron-to-chromium\": {\n                    \"version\": \"1.3.843\",\n                    \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.843.tgz\",\n                    \"integrity\": \"sha512-OWEwAbzaVd1Lk9MohVw8LxMXFlnYd9oYTYxfX8KS++kLLjDfbovLOcEEXwRhG612dqGQ6+44SZvim0GXuBRiKg==\",\n                    \"dev\": true\n                },\n                \"node-releases\": {\n                    \"version\": \"1.1.75\",\n                    \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-1.1.75.tgz\",\n                    \"integrity\": \"sha512-Qe5OUajvqrqDSy6wrWFmMwfJ0jVgwiw4T3KqmbTcZ62qW0gQkheXYhcFM1+lOVcGUoRxcEcfyvFMAnDgaF1VWw==\",\n                    \"dev\": true\n                },\n                \"semver\": {\n                    \"version\": \"6.3.0\",\n                    \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.0.tgz\",\n                    \"integrity\": \"sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/helper-create-class-features-plugin\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-create-class-features-plugin/download/@babel/helper-create-class-features-plugin-7.12.1.tgz?cache=0&sync_timestamp=1602802060378&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-create-class-features-plugin%2Fdownload%2F%40babel%2Fhelper-create-class-features-plugin-7.12.1.tgz\",\n            \"integrity\": \"sha1-PEWZj0Me3UqSFMXx060USKYTf24=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-function-name\": \"^7.10.4\",\n                \"@babel/helper-member-expression-to-functions\": \"^7.12.1\",\n                \"@babel/helper-optimise-call-expression\": \"^7.10.4\",\n                \"@babel/helper-replace-supers\": \"^7.12.1\",\n                \"@babel/helper-split-export-declaration\": \"^7.10.4\"\n            }\n        },\n        \"@babel/helper-create-regexp-features-plugin\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-create-regexp-features-plugin/download/@babel/helper-create-regexp-features-plugin-7.12.1.tgz?cache=0&sync_timestamp=1602800231050&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-create-regexp-features-plugin%2Fdownload%2F%40babel%2Fhelper-create-regexp-features-plugin-7.12.1.tgz\",\n            \"integrity\": \"sha1-GLEwLUZ3+dxHQP6MntlmgOKdN+g=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-annotate-as-pure\": \"^7.10.4\",\n                \"@babel/helper-regex\": \"^7.10.4\",\n                \"regexpu-core\": \"^4.7.1\"\n            }\n        },\n        \"@babel/helper-define-map\": {\n            \"version\": \"7.10.5\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-define-map/download/@babel/helper-define-map-7.10.5.tgz\",\n            \"integrity\": \"sha1-tTwQ23imQIABUmkrEzkxR6y5uzA=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-function-name\": \"^7.10.4\",\n                \"@babel/types\": \"^7.10.5\",\n                \"lodash\": \"^4.17.19\"\n            }\n        },\n        \"@babel/helper-define-polyfill-provider\": {\n            \"version\": \"0.2.3\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.2.3.tgz\",\n            \"integrity\": \"sha512-RH3QDAfRMzj7+0Nqu5oqgO5q9mFtQEVvCRsi8qCEfzLR9p2BHfn5FzhSB2oj1fF7I2+DcTORkYaQ6aTR9Cofew==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-compilation-targets\": \"^7.13.0\",\n                \"@babel/helper-module-imports\": \"^7.12.13\",\n                \"@babel/helper-plugin-utils\": \"^7.13.0\",\n                \"@babel/traverse\": \"^7.13.0\",\n                \"debug\": \"^4.1.1\",\n                \"lodash.debounce\": \"^4.0.8\",\n                \"resolve\": \"^1.14.2\",\n                \"semver\": \"^6.1.2\"\n            },\n            \"dependencies\": {\n                \"@babel/code-frame\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.15.8.tgz\",\n                    \"integrity\": \"sha512-2IAnmn8zbvC/jKYhq5Ki9I+DwjlrtMPUCH/CpHvqI4dNnlwHwsxoIhlc8WcYY5LSYknXQtAlFYuHfqAFCvQ4Wg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/highlight\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/generator\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.15.8.tgz\",\n                    \"integrity\": \"sha512-ECmAKstXbp1cvpTTZciZCgfOt6iN64lR0d+euv3UZisU5awfRawOvg07Utn/qBGuH4bRIEZKrA/4LzZyXhZr8g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.6\",\n                        \"jsesc\": \"^2.5.1\",\n                        \"source-map\": \"^0.5.0\"\n                    }\n                },\n                \"@babel/helper-function-name\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.15.4.tgz\",\n                    \"integrity\": \"sha512-Z91cOMM4DseLIGOnog+Z8OI6YseR9bua+HpvLAQ2XayUGU+neTtX+97caALaLdyu53I/fjhbeCnWnRH1O3jFOw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-get-function-arity\": \"^7.15.4\",\n                        \"@babel/template\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-get-function-arity\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.15.4.tgz\",\n                    \"integrity\": \"sha512-1/AlxSF92CmGZzHnC515hm4SirTxtpDnLEJ0UyEMgTMZN+6bxXKg04dKhiRx5Enel+SUA1G1t5Ed/yQia0efrA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-hoist-variables\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.15.4.tgz\",\n                    \"integrity\": \"sha512-VTy085egb3jUGVK9ycIxQiPbquesq0HUQ+tPO0uv5mPEBZipk+5FkRKiWq5apuyTE9FUrjENB0rCf8y+n+UuhA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-module-imports\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.15.4.tgz\",\n                    \"integrity\": \"sha512-jeAHZbzUwdW/xHgHQ3QmWR4Jg6j15q4w/gCfwZvtqOxoo5DKtLHk8Bsf4c5RZRC7NmLEs+ohkdq8jFefuvIxAA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                },\n                \"@babel/helper-split-export-declaration\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.15.4.tgz\",\n                    \"integrity\": \"sha512-HsFqhLDZ08DxCpBdEVtKmywj6PQbwnF6HHybur0MAnkAKnlS6uHkwnmRIkElB2Owpfb4xL4NwDmDLFubueDXsw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-validator-identifier\": {\n                    \"version\": \"7.15.7\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.15.7.tgz\",\n                    \"integrity\": \"sha512-K4JvCtQqad9OY2+yTU8w+E82ywk/fe+ELNlt1G8z3bVGlZfn/hOcQQsUhGhW/N+tb3fxK800wLtKOE/aM0m72w==\",\n                    \"dev\": true\n                },\n                \"@babel/highlight\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.14.5.tgz\",\n                    \"integrity\": \"sha512-qf9u2WFWVV0MppaL877j2dBtQIDgmidgjGk5VIMw3OadXvYaXn66U1BFlH2t4+t3i+8PhedppRv+i40ABzd+gg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.5\",\n                        \"chalk\": \"^2.0.0\",\n                        \"js-tokens\": \"^4.0.0\"\n                    }\n                },\n                \"@babel/parser\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.15.8.tgz\",\n                    \"integrity\": \"sha512-BRYa3wcQnjS/nqI8Ac94pYYpJfojHVvVXJ97+IDCImX4Jc8W8Xv1+47enbruk+q1etOpsQNwnfFcNGw+gtPGxA==\",\n                    \"dev\": true\n                },\n                \"@babel/template\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.15.4.tgz\",\n                    \"integrity\": \"sha512-UgBAfEa1oGuYgDIPM2G+aHa4Nlo9Lh6mGD2bDBGMTbYnc38vulXPuC1MGjYILIEmlwl6Rd+BPR9ee3gm20CBtg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/traverse\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.15.4.tgz\",\n                    \"integrity\": \"sha512-W6lQD8l4rUbQR/vYgSuCAE75ADyyQvOpFVsvPPdkhf6lATXAsQIG9YdtOcu8BB1dZ0LKu+Zo3c1wEcbKeuhdlA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/generator\": \"^7.15.4\",\n                        \"@babel/helper-function-name\": \"^7.15.4\",\n                        \"@babel/helper-hoist-variables\": \"^7.15.4\",\n                        \"@babel/helper-split-export-declaration\": \"^7.15.4\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\",\n                        \"debug\": \"^4.1.0\",\n                        \"globals\": \"^11.1.0\"\n                    }\n                },\n                \"@babel/types\": {\n                    \"version\": \"7.15.6\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.15.6.tgz\",\n                    \"integrity\": \"sha512-BPU+7QhqNjmWyDO0/vitH/CuhpV8ZmK1wpKva8nuyNF5MJfuRNWMc+hc14+u9xT93kvykMdncrJT19h74uB1Ig==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.9\",\n                        \"to-fast-properties\": \"^2.0.0\"\n                    }\n                },\n                \"debug\": {\n                    \"version\": \"4.3.2\",\n                    \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.2.tgz\",\n                    \"integrity\": \"sha512-mOp8wKcvj7XxC78zLgw/ZA+6TSgkoE2C/ienthhRD298T7UNwAg9diBpLRxC0mOezLl4B0xV7M0cCO6P/O0Xhw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ms\": \"2.1.2\"\n                    }\n                },\n                \"ms\": {\n                    \"version\": \"2.1.2\",\n                    \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n                    \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n                    \"dev\": true\n                },\n                \"semver\": {\n                    \"version\": \"6.3.0\",\n                    \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.0.tgz\",\n                    \"integrity\": \"sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/helper-explode-assignable-expression\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-explode-assignable-expression/download/@babel/helper-explode-assignable-expression-7.12.1.tgz?cache=0&sync_timestamp=1602800239433&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-explode-assignable-expression%2Fdownload%2F%40babel%2Fhelper-explode-assignable-expression-7.12.1.tgz\",\n            \"integrity\": \"sha1-gAakZmlcSthqKl8vsVtfLDGtVjM=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/types\": \"^7.12.1\"\n            }\n        },\n        \"@babel/helper-function-name\": {\n            \"version\": \"7.10.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-function-name/download/@babel/helper-function-name-7.10.4.tgz?cache=0&sync_timestamp=1593522836308&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-function-name%2Fdownload%2F%40babel%2Fhelper-function-name-7.10.4.tgz\",\n            \"integrity\": \"sha1-0tOyDFmtjEcRL6fSqUvAnV74Lxo=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-get-function-arity\": \"^7.10.4\",\n                \"@babel/template\": \"^7.10.4\",\n                \"@babel/types\": \"^7.10.4\"\n            }\n        },\n        \"@babel/helper-get-function-arity\": {\n            \"version\": \"7.10.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-get-function-arity/download/@babel/helper-get-function-arity-7.10.4.tgz?cache=0&sync_timestamp=1593522827189&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-get-function-arity%2Fdownload%2F%40babel%2Fhelper-get-function-arity-7.10.4.tgz\",\n            \"integrity\": \"sha1-mMHL6g4jMvM/mkZhuM4VBbLBm6I=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/types\": \"^7.10.4\"\n            }\n        },\n        \"@babel/helper-hoist-variables\": {\n            \"version\": \"7.10.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-hoist-variables/download/@babel/helper-hoist-variables-7.10.4.tgz?cache=0&sync_timestamp=1593522826778&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-hoist-variables%2Fdownload%2F%40babel%2Fhelper-hoist-variables-7.10.4.tgz\",\n            \"integrity\": \"sha1-1JsAHR1aaMpeZgTdoBpil/fJOB4=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/types\": \"^7.10.4\"\n            }\n        },\n        \"@babel/helper-member-expression-to-functions\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-member-expression-to-functions/download/@babel/helper-member-expression-to-functions-7.12.1.tgz?cache=0&sync_timestamp=1602800239601&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-member-expression-to-functions%2Fdownload%2F%40babel%2Fhelper-member-expression-to-functions-7.12.1.tgz\",\n            \"integrity\": \"sha1-+6Dy/P8/ugDm7LZku15uJuLWFlw=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/types\": \"^7.12.1\"\n            }\n        },\n        \"@babel/helper-module-imports\": {\n            \"version\": \"7.12.5\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-module-imports/download/@babel/helper-module-imports-7.12.5.tgz?cache=0&sync_timestamp=1604441333220&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-module-imports%2Fdownload%2F%40babel%2Fhelper-module-imports-7.12.5.tgz\",\n            \"integrity\": \"sha1-G/wCKfeUmI927QpNTpCGCFC1Tfs=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/types\": \"^7.12.5\"\n            }\n        },\n        \"@babel/helper-module-transforms\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-module-transforms/download/@babel/helper-module-transforms-7.12.1.tgz?cache=0&sync_timestamp=1602802059560&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-module-transforms%2Fdownload%2F%40babel%2Fhelper-module-transforms-7.12.1.tgz\",\n            \"integrity\": \"sha1-eVT+xx9bMsSOSzA7Q3w0RT/XJHw=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-module-imports\": \"^7.12.1\",\n                \"@babel/helper-replace-supers\": \"^7.12.1\",\n                \"@babel/helper-simple-access\": \"^7.12.1\",\n                \"@babel/helper-split-export-declaration\": \"^7.11.0\",\n                \"@babel/helper-validator-identifier\": \"^7.10.4\",\n                \"@babel/template\": \"^7.10.4\",\n                \"@babel/traverse\": \"^7.12.1\",\n                \"@babel/types\": \"^7.12.1\",\n                \"lodash\": \"^4.17.19\"\n            }\n        },\n        \"@babel/helper-optimise-call-expression\": {\n            \"version\": \"7.10.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-optimise-call-expression/download/@babel/helper-optimise-call-expression-7.10.4.tgz?cache=0&sync_timestamp=1593522827576&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-optimise-call-expression%2Fdownload%2F%40babel%2Fhelper-optimise-call-expression-7.10.4.tgz\",\n            \"integrity\": \"sha1-UNyWQT1ZT5lad5BZBbBYk813lnM=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/types\": \"^7.10.4\"\n            }\n        },\n        \"@babel/helper-plugin-utils\": {\n            \"version\": \"7.10.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-plugin-utils/download/@babel/helper-plugin-utils-7.10.4.tgz?cache=0&sync_timestamp=1593521148758&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-plugin-utils%2Fdownload%2F%40babel%2Fhelper-plugin-utils-7.10.4.tgz\",\n            \"integrity\": \"sha1-L3WoMSadT2d95JmG3/WZJ1M883U=\",\n            \"dev\": true\n        },\n        \"@babel/helper-regex\": {\n            \"version\": \"7.10.5\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-regex/download/@babel/helper-regex-7.10.5.tgz?cache=0&sync_timestamp=1594751535064&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-regex%2Fdownload%2F%40babel%2Fhelper-regex-7.10.5.tgz\",\n            \"integrity\": \"sha1-Mt+7eYmQc8QVVXBToZvQVarlCuA=\",\n            \"dev\": true,\n            \"requires\": {\n                \"lodash\": \"^4.17.19\"\n            }\n        },\n        \"@babel/helper-remap-async-to-generator\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-remap-async-to-generator/download/@babel/helper-remap-async-to-generator-7.12.1.tgz?cache=0&sync_timestamp=1602800240049&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-remap-async-to-generator%2Fdownload%2F%40babel%2Fhelper-remap-async-to-generator-7.12.1.tgz\",\n            \"integrity\": \"sha1-jE27+RYxT2BH3AXmoiFwdCODR/0=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-annotate-as-pure\": \"^7.10.4\",\n                \"@babel/helper-wrap-function\": \"^7.10.4\",\n                \"@babel/types\": \"^7.12.1\"\n            }\n        },\n        \"@babel/helper-replace-supers\": {\n            \"version\": \"7.12.5\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-replace-supers/download/@babel/helper-replace-supers-7.12.5.tgz?cache=0&sync_timestamp=1604441333491&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-replace-supers%2Fdownload%2F%40babel%2Fhelper-replace-supers-7.12.5.tgz\",\n            \"integrity\": \"sha1-8AmhdUO7u84WsGIGrnO2PT/KaNk=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-member-expression-to-functions\": \"^7.12.1\",\n                \"@babel/helper-optimise-call-expression\": \"^7.10.4\",\n                \"@babel/traverse\": \"^7.12.5\",\n                \"@babel/types\": \"^7.12.5\"\n            }\n        },\n        \"@babel/helper-simple-access\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-simple-access/download/@babel/helper-simple-access-7.12.1.tgz?cache=0&sync_timestamp=1602802050087&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-simple-access%2Fdownload%2F%40babel%2Fhelper-simple-access-7.12.1.tgz\",\n            \"integrity\": \"sha1-MkJ+WqYVR9OOsebq9f0UJv2tkTY=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/types\": \"^7.12.1\"\n            }\n        },\n        \"@babel/helper-skip-transparent-expression-wrappers\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-skip-transparent-expression-wrappers/download/@babel/helper-skip-transparent-expression-wrappers-7.12.1.tgz?cache=0&sync_timestamp=1602800240125&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-skip-transparent-expression-wrappers%2Fdownload%2F%40babel%2Fhelper-skip-transparent-expression-wrappers-7.12.1.tgz\",\n            \"integrity\": \"sha1-Ri3GOn5DWt6EaDhcY9K4TM5LPL8=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/types\": \"^7.12.1\"\n            }\n        },\n        \"@babel/helper-split-export-declaration\": {\n            \"version\": \"7.11.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-split-export-declaration/download/@babel/helper-split-export-declaration-7.11.0.tgz?cache=0&sync_timestamp=1596144786980&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhelper-split-export-declaration%2Fdownload%2F%40babel%2Fhelper-split-export-declaration-7.11.0.tgz\",\n            \"integrity\": \"sha1-+KSRJErPamdhWKxCBykRuoOtCZ8=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/types\": \"^7.11.0\"\n            }\n        },\n        \"@babel/helper-validator-identifier\": {\n            \"version\": \"7.10.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-validator-identifier/download/@babel/helper-validator-identifier-7.10.4.tgz\",\n            \"integrity\": \"sha1-p4x6clHgH2FlEtMbEK3PUq2l4NI=\",\n            \"dev\": true\n        },\n        \"@babel/helper-validator-option\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.14.5.tgz\",\n            \"integrity\": \"sha512-OX8D5eeX4XwcroVW45NMvoYaIuFI+GQpA2a8Gi+X/U/cDUIRsV37qQfF905F0htTRCREQIB4KqPeaveRJUl3Ow==\",\n            \"dev\": true\n        },\n        \"@babel/helper-wrap-function\": {\n            \"version\": \"7.12.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/helper-wrap-function/download/@babel/helper-wrap-function-7.12.3.tgz\",\n            \"integrity\": \"sha1-MzIzn8TR+78cJ9eVjCfTRwjpkNk=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-function-name\": \"^7.10.4\",\n                \"@babel/template\": \"^7.10.4\",\n                \"@babel/traverse\": \"^7.10.4\",\n                \"@babel/types\": \"^7.10.4\"\n            }\n        },\n        \"@babel/helpers\": {\n            \"version\": \"7.15.4\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/helpers/-/helpers-7.15.4.tgz\",\n            \"integrity\": \"sha512-V45u6dqEJ3w2rlryYYXf6i9rQ5YMNu4FLS6ngs8ikblhu2VdR1AqAd6aJjBzmf2Qzh6KOLqKHxEN9+TFbAkAVQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/template\": \"^7.15.4\",\n                \"@babel/traverse\": \"^7.15.4\",\n                \"@babel/types\": \"^7.15.4\"\n            },\n            \"dependencies\": {\n                \"@babel/code-frame\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.15.8.tgz\",\n                    \"integrity\": \"sha512-2IAnmn8zbvC/jKYhq5Ki9I+DwjlrtMPUCH/CpHvqI4dNnlwHwsxoIhlc8WcYY5LSYknXQtAlFYuHfqAFCvQ4Wg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/highlight\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/generator\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.15.8.tgz\",\n                    \"integrity\": \"sha512-ECmAKstXbp1cvpTTZciZCgfOt6iN64lR0d+euv3UZisU5awfRawOvg07Utn/qBGuH4bRIEZKrA/4LzZyXhZr8g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.6\",\n                        \"jsesc\": \"^2.5.1\",\n                        \"source-map\": \"^0.5.0\"\n                    }\n                },\n                \"@babel/helper-function-name\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.15.4.tgz\",\n                    \"integrity\": \"sha512-Z91cOMM4DseLIGOnog+Z8OI6YseR9bua+HpvLAQ2XayUGU+neTtX+97caALaLdyu53I/fjhbeCnWnRH1O3jFOw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-get-function-arity\": \"^7.15.4\",\n                        \"@babel/template\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-get-function-arity\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.15.4.tgz\",\n                    \"integrity\": \"sha512-1/AlxSF92CmGZzHnC515hm4SirTxtpDnLEJ0UyEMgTMZN+6bxXKg04dKhiRx5Enel+SUA1G1t5Ed/yQia0efrA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-hoist-variables\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.15.4.tgz\",\n                    \"integrity\": \"sha512-VTy085egb3jUGVK9ycIxQiPbquesq0HUQ+tPO0uv5mPEBZipk+5FkRKiWq5apuyTE9FUrjENB0rCf8y+n+UuhA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-split-export-declaration\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.15.4.tgz\",\n                    \"integrity\": \"sha512-HsFqhLDZ08DxCpBdEVtKmywj6PQbwnF6HHybur0MAnkAKnlS6uHkwnmRIkElB2Owpfb4xL4NwDmDLFubueDXsw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-validator-identifier\": {\n                    \"version\": \"7.15.7\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.15.7.tgz\",\n                    \"integrity\": \"sha512-K4JvCtQqad9OY2+yTU8w+E82ywk/fe+ELNlt1G8z3bVGlZfn/hOcQQsUhGhW/N+tb3fxK800wLtKOE/aM0m72w==\",\n                    \"dev\": true\n                },\n                \"@babel/highlight\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.14.5.tgz\",\n                    \"integrity\": \"sha512-qf9u2WFWVV0MppaL877j2dBtQIDgmidgjGk5VIMw3OadXvYaXn66U1BFlH2t4+t3i+8PhedppRv+i40ABzd+gg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.5\",\n                        \"chalk\": \"^2.0.0\",\n                        \"js-tokens\": \"^4.0.0\"\n                    }\n                },\n                \"@babel/parser\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.15.8.tgz\",\n                    \"integrity\": \"sha512-BRYa3wcQnjS/nqI8Ac94pYYpJfojHVvVXJ97+IDCImX4Jc8W8Xv1+47enbruk+q1etOpsQNwnfFcNGw+gtPGxA==\",\n                    \"dev\": true\n                },\n                \"@babel/template\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.15.4.tgz\",\n                    \"integrity\": \"sha512-UgBAfEa1oGuYgDIPM2G+aHa4Nlo9Lh6mGD2bDBGMTbYnc38vulXPuC1MGjYILIEmlwl6Rd+BPR9ee3gm20CBtg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/traverse\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.15.4.tgz\",\n                    \"integrity\": \"sha512-W6lQD8l4rUbQR/vYgSuCAE75ADyyQvOpFVsvPPdkhf6lATXAsQIG9YdtOcu8BB1dZ0LKu+Zo3c1wEcbKeuhdlA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/generator\": \"^7.15.4\",\n                        \"@babel/helper-function-name\": \"^7.15.4\",\n                        \"@babel/helper-hoist-variables\": \"^7.15.4\",\n                        \"@babel/helper-split-export-declaration\": \"^7.15.4\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\",\n                        \"debug\": \"^4.1.0\",\n                        \"globals\": \"^11.1.0\"\n                    }\n                },\n                \"@babel/types\": {\n                    \"version\": \"7.15.6\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.15.6.tgz\",\n                    \"integrity\": \"sha512-BPU+7QhqNjmWyDO0/vitH/CuhpV8ZmK1wpKva8nuyNF5MJfuRNWMc+hc14+u9xT93kvykMdncrJT19h74uB1Ig==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.9\",\n                        \"to-fast-properties\": \"^2.0.0\"\n                    }\n                },\n                \"debug\": {\n                    \"version\": \"4.3.2\",\n                    \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.2.tgz\",\n                    \"integrity\": \"sha512-mOp8wKcvj7XxC78zLgw/ZA+6TSgkoE2C/ienthhRD298T7UNwAg9diBpLRxC0mOezLl4B0xV7M0cCO6P/O0Xhw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ms\": \"2.1.2\"\n                    }\n                },\n                \"ms\": {\n                    \"version\": \"2.1.2\",\n                    \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n                    \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/highlight\": {\n            \"version\": \"7.10.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/highlight/download/@babel/highlight-7.10.4.tgz?cache=0&sync_timestamp=1593522818552&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fhighlight%2Fdownload%2F%40babel%2Fhighlight-7.10.4.tgz\",\n            \"integrity\": \"sha1-fRvf1ldTU4+r5sOFls23bZrGAUM=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-validator-identifier\": \"^7.10.4\",\n                \"chalk\": \"^2.0.0\",\n                \"js-tokens\": \"^4.0.0\"\n            }\n        },\n        \"@babel/parser\": {\n            \"version\": \"7.12.5\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/parser/download/@babel/parser-7.12.5.tgz?cache=0&sync_timestamp=1604441064345&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fparser%2Fdownload%2F%40babel%2Fparser-7.12.5.tgz\",\n            \"integrity\": \"sha1-tK8y3dRzwL+mQ71/8HKLjnG4HqA=\",\n            \"dev\": true\n        },\n        \"@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining\": {\n            \"version\": \"7.15.4\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining/-/plugin-bugfix-v8-spread-parameters-in-optional-chaining-7.15.4.tgz\",\n            \"integrity\": \"sha512-eBnpsl9tlhPhpI10kU06JHnrYXwg3+V6CaP2idsCXNef0aeslpqyITXQ74Vfk5uHgY7IG7XP0yIH8b42KSzHog==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.15.4\",\n                \"@babel/plugin-proposal-optional-chaining\": \"^7.14.5\"\n            },\n            \"dependencies\": {\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                },\n                \"@babel/helper-skip-transparent-expression-wrappers\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.15.4.tgz\",\n                    \"integrity\": \"sha512-BMRLsdh+D1/aap19TycS4eD1qELGrCBJwzaY9IE8LrpJtJb+H7rQkPIdsfgnMtLBA6DJls7X9z93Z4U8h7xw0A==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-validator-identifier\": {\n                    \"version\": \"7.15.7\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.15.7.tgz\",\n                    \"integrity\": \"sha512-K4JvCtQqad9OY2+yTU8w+E82ywk/fe+ELNlt1G8z3bVGlZfn/hOcQQsUhGhW/N+tb3fxK800wLtKOE/aM0m72w==\",\n                    \"dev\": true\n                },\n                \"@babel/types\": {\n                    \"version\": \"7.15.6\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.15.6.tgz\",\n                    \"integrity\": \"sha512-BPU+7QhqNjmWyDO0/vitH/CuhpV8ZmK1wpKva8nuyNF5MJfuRNWMc+hc14+u9xT93kvykMdncrJT19h74uB1Ig==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.9\",\n                        \"to-fast-properties\": \"^2.0.0\"\n                    }\n                }\n            }\n        },\n        \"@babel/plugin-proposal-async-generator-functions\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-proposal-async-generator-functions/download/@babel/plugin-proposal-async-generator-functions-7.12.1.tgz?cache=0&sync_timestamp=1602800241810&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-proposal-async-generator-functions%2Fdownload%2F%40babel%2Fplugin-proposal-async-generator-functions-7.12.1.tgz\",\n            \"integrity\": \"sha1-3GwRcOJ9isqZ/2X0klvQaxyQVQ4=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\",\n                \"@babel/helper-remap-async-to-generator\": \"^7.12.1\",\n                \"@babel/plugin-syntax-async-generators\": \"^7.8.0\"\n            }\n        },\n        \"@babel/plugin-proposal-class-properties\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-class-properties/-/plugin-proposal-class-properties-7.14.5.tgz\",\n            \"integrity\": \"sha512-q/PLpv5Ko4dVc1LYMpCY7RVAAO4uk55qPwrIuJ5QJ8c6cVuAmhu7I/49JOppXL6gXf7ZHzpRVEUZdYoPLM04Gg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-create-class-features-plugin\": \"^7.14.5\",\n                \"@babel/helper-plugin-utils\": \"^7.14.5\"\n            },\n            \"dependencies\": {\n                \"@babel/code-frame\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.14.5.tgz\",\n                    \"integrity\": \"sha512-9pzDqyc6OLDaqe+zbACgFkb6fKMNG6CObKpnYXChRsvYGyEdc7CA2BaqeOM+vOtCS5ndmJicPJhKAwYRI6UfFw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/highlight\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/generator\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.15.4.tgz\",\n                    \"integrity\": \"sha512-d3itta0tu+UayjEORPNz6e1T3FtvWlP5N4V5M+lhp/CxT4oAA7/NcScnpRyspUMLK6tu9MNHmQHxRykuN2R7hw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\",\n                        \"jsesc\": \"^2.5.1\",\n                        \"source-map\": \"^0.5.0\"\n                    }\n                },\n                \"@babel/helper-annotate-as-pure\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.15.4.tgz\",\n                    \"integrity\": \"sha512-QwrtdNvUNsPCj2lfNQacsGSQvGX8ee1ttrBrcozUP2Sv/jylewBP/8QFe6ZkBsC8T/GYWonNAWJV4aRR9AL2DA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-create-class-features-plugin\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.15.4.tgz\",\n                    \"integrity\": \"sha512-7ZmzFi+DwJx6A7mHRwbuucEYpyBwmh2Ca0RvI6z2+WLZYCqV0JOaLb+u0zbtmDicebgKBZgqbYfLaKNqSgv5Pw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-annotate-as-pure\": \"^7.15.4\",\n                        \"@babel/helper-function-name\": \"^7.15.4\",\n                        \"@babel/helper-member-expression-to-functions\": \"^7.15.4\",\n                        \"@babel/helper-optimise-call-expression\": \"^7.15.4\",\n                        \"@babel/helper-replace-supers\": \"^7.15.4\",\n                        \"@babel/helper-split-export-declaration\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-function-name\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.15.4.tgz\",\n                    \"integrity\": \"sha512-Z91cOMM4DseLIGOnog+Z8OI6YseR9bua+HpvLAQ2XayUGU+neTtX+97caALaLdyu53I/fjhbeCnWnRH1O3jFOw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-get-function-arity\": \"^7.15.4\",\n                        \"@babel/template\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-get-function-arity\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.15.4.tgz\",\n                    \"integrity\": \"sha512-1/AlxSF92CmGZzHnC515hm4SirTxtpDnLEJ0UyEMgTMZN+6bxXKg04dKhiRx5Enel+SUA1G1t5Ed/yQia0efrA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-hoist-variables\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.15.4.tgz\",\n                    \"integrity\": \"sha512-VTy085egb3jUGVK9ycIxQiPbquesq0HUQ+tPO0uv5mPEBZipk+5FkRKiWq5apuyTE9FUrjENB0rCf8y+n+UuhA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-member-expression-to-functions\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.15.4.tgz\",\n                    \"integrity\": \"sha512-cokOMkxC/BTyNP1AlY25HuBWM32iCEsLPI4BHDpJCHHm1FU2E7dKWWIXJgQgSFiu4lp8q3bL1BIKwqkSUviqtA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-optimise-call-expression\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.15.4.tgz\",\n                    \"integrity\": \"sha512-E/z9rfbAOt1vDW1DR7k4SzhzotVV5+qMciWV6LaG1g4jeFrkDlJedjtV4h0i4Q/ITnUu+Pk08M7fczsB9GXBDw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                },\n                \"@babel/helper-replace-supers\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.15.4.tgz\",\n                    \"integrity\": \"sha512-/ztT6khaXF37MS47fufrKvIsiQkx1LBRvSJNzRqmbyeZnTwU9qBxXYLaaT/6KaxfKhjs2Wy8kG8ZdsFUuWBjzw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-member-expression-to-functions\": \"^7.15.4\",\n                        \"@babel/helper-optimise-call-expression\": \"^7.15.4\",\n                        \"@babel/traverse\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-split-export-declaration\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.15.4.tgz\",\n                    \"integrity\": \"sha512-HsFqhLDZ08DxCpBdEVtKmywj6PQbwnF6HHybur0MAnkAKnlS6uHkwnmRIkElB2Owpfb4xL4NwDmDLFubueDXsw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-validator-identifier\": {\n                    \"version\": \"7.15.7\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.15.7.tgz\",\n                    \"integrity\": \"sha512-K4JvCtQqad9OY2+yTU8w+E82ywk/fe+ELNlt1G8z3bVGlZfn/hOcQQsUhGhW/N+tb3fxK800wLtKOE/aM0m72w==\",\n                    \"dev\": true\n                },\n                \"@babel/highlight\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.14.5.tgz\",\n                    \"integrity\": \"sha512-qf9u2WFWVV0MppaL877j2dBtQIDgmidgjGk5VIMw3OadXvYaXn66U1BFlH2t4+t3i+8PhedppRv+i40ABzd+gg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.5\",\n                        \"chalk\": \"^2.0.0\",\n                        \"js-tokens\": \"^4.0.0\"\n                    }\n                },\n                \"@babel/parser\": {\n                    \"version\": \"7.15.7\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.15.7.tgz\",\n                    \"integrity\": \"sha512-rycZXvQ+xS9QyIcJ9HXeDWf1uxqlbVFAUq0Rq0dbc50Zb/+wUe/ehyfzGfm9KZZF0kBejYgxltBXocP+gKdL2g==\",\n                    \"dev\": true\n                },\n                \"@babel/template\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.15.4.tgz\",\n                    \"integrity\": \"sha512-UgBAfEa1oGuYgDIPM2G+aHa4Nlo9Lh6mGD2bDBGMTbYnc38vulXPuC1MGjYILIEmlwl6Rd+BPR9ee3gm20CBtg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/traverse\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.15.4.tgz\",\n                    \"integrity\": \"sha512-W6lQD8l4rUbQR/vYgSuCAE75ADyyQvOpFVsvPPdkhf6lATXAsQIG9YdtOcu8BB1dZ0LKu+Zo3c1wEcbKeuhdlA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/generator\": \"^7.15.4\",\n                        \"@babel/helper-function-name\": \"^7.15.4\",\n                        \"@babel/helper-hoist-variables\": \"^7.15.4\",\n                        \"@babel/helper-split-export-declaration\": \"^7.15.4\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\",\n                        \"debug\": \"^4.1.0\",\n                        \"globals\": \"^11.1.0\"\n                    }\n                },\n                \"@babel/types\": {\n                    \"version\": \"7.15.6\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.15.6.tgz\",\n                    \"integrity\": \"sha512-BPU+7QhqNjmWyDO0/vitH/CuhpV8ZmK1wpKva8nuyNF5MJfuRNWMc+hc14+u9xT93kvykMdncrJT19h74uB1Ig==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.9\",\n                        \"to-fast-properties\": \"^2.0.0\"\n                    }\n                },\n                \"debug\": {\n                    \"version\": \"4.3.2\",\n                    \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.2.tgz\",\n                    \"integrity\": \"sha512-mOp8wKcvj7XxC78zLgw/ZA+6TSgkoE2C/ienthhRD298T7UNwAg9diBpLRxC0mOezLl4B0xV7M0cCO6P/O0Xhw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ms\": \"2.1.2\"\n                    }\n                },\n                \"ms\": {\n                    \"version\": \"2.1.2\",\n                    \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n                    \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-proposal-class-static-block\": {\n            \"version\": \"7.15.4\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-class-static-block/-/plugin-proposal-class-static-block-7.15.4.tgz\",\n            \"integrity\": \"sha512-M682XWrrLNk3chXCjoPUQWOyYsB93B9z3mRyjtqqYJWDf2mfCdIYgDrA11cgNVhAQieaq6F2fn2f3wI0U4aTjA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-create-class-features-plugin\": \"^7.15.4\",\n                \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\"\n            },\n            \"dependencies\": {\n                \"@babel/code-frame\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.15.8.tgz\",\n                    \"integrity\": \"sha512-2IAnmn8zbvC/jKYhq5Ki9I+DwjlrtMPUCH/CpHvqI4dNnlwHwsxoIhlc8WcYY5LSYknXQtAlFYuHfqAFCvQ4Wg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/highlight\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/generator\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.15.8.tgz\",\n                    \"integrity\": \"sha512-ECmAKstXbp1cvpTTZciZCgfOt6iN64lR0d+euv3UZisU5awfRawOvg07Utn/qBGuH4bRIEZKrA/4LzZyXhZr8g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.6\",\n                        \"jsesc\": \"^2.5.1\",\n                        \"source-map\": \"^0.5.0\"\n                    }\n                },\n                \"@babel/helper-annotate-as-pure\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.15.4.tgz\",\n                    \"integrity\": \"sha512-QwrtdNvUNsPCj2lfNQacsGSQvGX8ee1ttrBrcozUP2Sv/jylewBP/8QFe6ZkBsC8T/GYWonNAWJV4aRR9AL2DA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-create-class-features-plugin\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.15.4.tgz\",\n                    \"integrity\": \"sha512-7ZmzFi+DwJx6A7mHRwbuucEYpyBwmh2Ca0RvI6z2+WLZYCqV0JOaLb+u0zbtmDicebgKBZgqbYfLaKNqSgv5Pw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-annotate-as-pure\": \"^7.15.4\",\n                        \"@babel/helper-function-name\": \"^7.15.4\",\n                        \"@babel/helper-member-expression-to-functions\": \"^7.15.4\",\n                        \"@babel/helper-optimise-call-expression\": \"^7.15.4\",\n                        \"@babel/helper-replace-supers\": \"^7.15.4\",\n                        \"@babel/helper-split-export-declaration\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-function-name\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.15.4.tgz\",\n                    \"integrity\": \"sha512-Z91cOMM4DseLIGOnog+Z8OI6YseR9bua+HpvLAQ2XayUGU+neTtX+97caALaLdyu53I/fjhbeCnWnRH1O3jFOw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-get-function-arity\": \"^7.15.4\",\n                        \"@babel/template\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-get-function-arity\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.15.4.tgz\",\n                    \"integrity\": \"sha512-1/AlxSF92CmGZzHnC515hm4SirTxtpDnLEJ0UyEMgTMZN+6bxXKg04dKhiRx5Enel+SUA1G1t5Ed/yQia0efrA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-hoist-variables\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.15.4.tgz\",\n                    \"integrity\": \"sha512-VTy085egb3jUGVK9ycIxQiPbquesq0HUQ+tPO0uv5mPEBZipk+5FkRKiWq5apuyTE9FUrjENB0rCf8y+n+UuhA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-member-expression-to-functions\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.15.4.tgz\",\n                    \"integrity\": \"sha512-cokOMkxC/BTyNP1AlY25HuBWM32iCEsLPI4BHDpJCHHm1FU2E7dKWWIXJgQgSFiu4lp8q3bL1BIKwqkSUviqtA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-optimise-call-expression\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.15.4.tgz\",\n                    \"integrity\": \"sha512-E/z9rfbAOt1vDW1DR7k4SzhzotVV5+qMciWV6LaG1g4jeFrkDlJedjtV4h0i4Q/ITnUu+Pk08M7fczsB9GXBDw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                },\n                \"@babel/helper-replace-supers\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.15.4.tgz\",\n                    \"integrity\": \"sha512-/ztT6khaXF37MS47fufrKvIsiQkx1LBRvSJNzRqmbyeZnTwU9qBxXYLaaT/6KaxfKhjs2Wy8kG8ZdsFUuWBjzw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-member-expression-to-functions\": \"^7.15.4\",\n                        \"@babel/helper-optimise-call-expression\": \"^7.15.4\",\n                        \"@babel/traverse\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-split-export-declaration\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.15.4.tgz\",\n                    \"integrity\": \"sha512-HsFqhLDZ08DxCpBdEVtKmywj6PQbwnF6HHybur0MAnkAKnlS6uHkwnmRIkElB2Owpfb4xL4NwDmDLFubueDXsw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-validator-identifier\": {\n                    \"version\": \"7.15.7\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.15.7.tgz\",\n                    \"integrity\": \"sha512-K4JvCtQqad9OY2+yTU8w+E82ywk/fe+ELNlt1G8z3bVGlZfn/hOcQQsUhGhW/N+tb3fxK800wLtKOE/aM0m72w==\",\n                    \"dev\": true\n                },\n                \"@babel/highlight\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.14.5.tgz\",\n                    \"integrity\": \"sha512-qf9u2WFWVV0MppaL877j2dBtQIDgmidgjGk5VIMw3OadXvYaXn66U1BFlH2t4+t3i+8PhedppRv+i40ABzd+gg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.5\",\n                        \"chalk\": \"^2.0.0\",\n                        \"js-tokens\": \"^4.0.0\"\n                    }\n                },\n                \"@babel/parser\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.15.8.tgz\",\n                    \"integrity\": \"sha512-BRYa3wcQnjS/nqI8Ac94pYYpJfojHVvVXJ97+IDCImX4Jc8W8Xv1+47enbruk+q1etOpsQNwnfFcNGw+gtPGxA==\",\n                    \"dev\": true\n                },\n                \"@babel/template\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.15.4.tgz\",\n                    \"integrity\": \"sha512-UgBAfEa1oGuYgDIPM2G+aHa4Nlo9Lh6mGD2bDBGMTbYnc38vulXPuC1MGjYILIEmlwl6Rd+BPR9ee3gm20CBtg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/traverse\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.15.4.tgz\",\n                    \"integrity\": \"sha512-W6lQD8l4rUbQR/vYgSuCAE75ADyyQvOpFVsvPPdkhf6lATXAsQIG9YdtOcu8BB1dZ0LKu+Zo3c1wEcbKeuhdlA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/generator\": \"^7.15.4\",\n                        \"@babel/helper-function-name\": \"^7.15.4\",\n                        \"@babel/helper-hoist-variables\": \"^7.15.4\",\n                        \"@babel/helper-split-export-declaration\": \"^7.15.4\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\",\n                        \"debug\": \"^4.1.0\",\n                        \"globals\": \"^11.1.0\"\n                    }\n                },\n                \"@babel/types\": {\n                    \"version\": \"7.15.6\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.15.6.tgz\",\n                    \"integrity\": \"sha512-BPU+7QhqNjmWyDO0/vitH/CuhpV8ZmK1wpKva8nuyNF5MJfuRNWMc+hc14+u9xT93kvykMdncrJT19h74uB1Ig==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.9\",\n                        \"to-fast-properties\": \"^2.0.0\"\n                    }\n                },\n                \"debug\": {\n                    \"version\": \"4.3.2\",\n                    \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.2.tgz\",\n                    \"integrity\": \"sha512-mOp8wKcvj7XxC78zLgw/ZA+6TSgkoE2C/ienthhRD298T7UNwAg9diBpLRxC0mOezLl4B0xV7M0cCO6P/O0Xhw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ms\": \"2.1.2\"\n                    }\n                },\n                \"ms\": {\n                    \"version\": \"2.1.2\",\n                    \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n                    \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-proposal-decorators\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-proposal-decorators/download/@babel/plugin-proposal-decorators-7.12.1.tgz?cache=0&sync_timestamp=1602800229034&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-proposal-decorators%2Fdownload%2F%40babel%2Fplugin-proposal-decorators-7.12.1.tgz\",\n            \"integrity\": \"sha1-WScUOf7UFFRWxBBnRQVDruMy0V8=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-create-class-features-plugin\": \"^7.12.1\",\n                \"@babel/helper-plugin-utils\": \"^7.10.4\",\n                \"@babel/plugin-syntax-decorators\": \"^7.12.1\"\n            }\n        },\n        \"@babel/plugin-proposal-dynamic-import\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-dynamic-import/-/plugin-proposal-dynamic-import-7.14.5.tgz\",\n            \"integrity\": \"sha512-ExjiNYc3HDN5PXJx+bwC50GIx/KKanX2HiggnIUAYedbARdImiCU4RhhHfdf0Kd7JNXGpsBBBCOm+bBVy3Gb0g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\"\n            },\n            \"dependencies\": {\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-proposal-export-namespace-from\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-export-namespace-from/-/plugin-proposal-export-namespace-from-7.14.5.tgz\",\n            \"integrity\": \"sha512-g5POA32bXPMmSBu5Dx/iZGLGnKmKPc5AiY7qfZgurzrCYgIztDlHFbznSNCoQuv57YQLnQfaDi7dxCtLDIdXdA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                \"@babel/plugin-syntax-export-namespace-from\": \"^7.8.3\"\n            },\n            \"dependencies\": {\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-proposal-json-strings\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-proposal-json-strings/download/@babel/plugin-proposal-json-strings-7.12.1.tgz?cache=0&sync_timestamp=1602800231781&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-proposal-json-strings%2Fdownload%2F%40babel%2Fplugin-proposal-json-strings-7.12.1.tgz\",\n            \"integrity\": \"sha1-1FQjtRdxTu3VYhqd/cA/qfTrJBw=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\",\n                \"@babel/plugin-syntax-json-strings\": \"^7.8.0\"\n            }\n        },\n        \"@babel/plugin-proposal-logical-assignment-operators\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-logical-assignment-operators/-/plugin-proposal-logical-assignment-operators-7.14.5.tgz\",\n            \"integrity\": \"sha512-YGn2AvZAo9TwyhlLvCCWxD90Xq8xJ4aSgaX3G5D/8DW94L8aaT+dS5cSP+Z06+rCJERGSr9GxMBZ601xoc2taw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\"\n            },\n            \"dependencies\": {\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-proposal-nullish-coalescing-operator\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-nullish-coalescing-operator/-/plugin-proposal-nullish-coalescing-operator-7.14.5.tgz\",\n            \"integrity\": \"sha512-gun/SOnMqjSb98Nkaq2rTKMwervfdAoz6NphdY0vTfuzMfryj+tDGb2n6UkDKwez+Y8PZDhE3D143v6Gepp4Hg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\"\n            },\n            \"dependencies\": {\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-proposal-numeric-separator\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-numeric-separator/-/plugin-proposal-numeric-separator-7.14.5.tgz\",\n            \"integrity\": \"sha512-yiclALKe0vyZRZE0pS6RXgjUOt87GWv6FYa5zqj15PvhOGFO69R5DusPlgK/1K5dVnCtegTiWu9UaBSrLLJJBg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\"\n            },\n            \"dependencies\": {\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-proposal-object-rest-spread\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-proposal-object-rest-spread/download/@babel/plugin-proposal-object-rest-spread-7.12.1.tgz?cache=0&sync_timestamp=1602800240952&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-proposal-object-rest-spread%2Fdownload%2F%40babel%2Fplugin-proposal-object-rest-spread-7.12.1.tgz\",\n            \"integrity\": \"sha1-3vm9A86g+bcig9rA7CLSicdpEGk=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\",\n                \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.0\",\n                \"@babel/plugin-transform-parameters\": \"^7.12.1\"\n            }\n        },\n        \"@babel/plugin-proposal-optional-catch-binding\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-proposal-optional-catch-binding/download/@babel/plugin-proposal-optional-catch-binding-7.12.1.tgz?cache=0&sync_timestamp=1602800232182&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-proposal-optional-catch-binding%2Fdownload%2F%40babel%2Fplugin-proposal-optional-catch-binding-7.12.1.tgz\",\n            \"integrity\": \"sha1-zMJCGvZNOq5QtVinHO3pKaWrKUI=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\",\n                \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.0\"\n            }\n        },\n        \"@babel/plugin-proposal-optional-chaining\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-optional-chaining/-/plugin-proposal-optional-chaining-7.14.5.tgz\",\n            \"integrity\": \"sha512-ycz+VOzo2UbWNI1rQXxIuMOzrDdHGrI23fRiz/Si2R4kv2XZQ1BK8ccdHwehMKBlcH/joGW/tzrUmo67gbJHlQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.14.5\",\n                \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\"\n            },\n            \"dependencies\": {\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                },\n                \"@babel/helper-skip-transparent-expression-wrappers\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.15.4.tgz\",\n                    \"integrity\": \"sha512-BMRLsdh+D1/aap19TycS4eD1qELGrCBJwzaY9IE8LrpJtJb+H7rQkPIdsfgnMtLBA6DJls7X9z93Z4U8h7xw0A==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-validator-identifier\": {\n                    \"version\": \"7.15.7\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.15.7.tgz\",\n                    \"integrity\": \"sha512-K4JvCtQqad9OY2+yTU8w+E82ywk/fe+ELNlt1G8z3bVGlZfn/hOcQQsUhGhW/N+tb3fxK800wLtKOE/aM0m72w==\",\n                    \"dev\": true\n                },\n                \"@babel/types\": {\n                    \"version\": \"7.15.6\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.15.6.tgz\",\n                    \"integrity\": \"sha512-BPU+7QhqNjmWyDO0/vitH/CuhpV8ZmK1wpKva8nuyNF5MJfuRNWMc+hc14+u9xT93kvykMdncrJT19h74uB1Ig==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.9\",\n                        \"to-fast-properties\": \"^2.0.0\"\n                    }\n                }\n            }\n        },\n        \"@babel/plugin-proposal-private-methods\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-private-methods/-/plugin-proposal-private-methods-7.14.5.tgz\",\n            \"integrity\": \"sha512-838DkdUA1u+QTCplatfq4B7+1lnDa/+QMI89x5WZHBcnNv+47N8QEj2k9I2MUU9xIv8XJ4XvPCviM/Dj7Uwt9g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-create-class-features-plugin\": \"^7.14.5\",\n                \"@babel/helper-plugin-utils\": \"^7.14.5\"\n            },\n            \"dependencies\": {\n                \"@babel/code-frame\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.15.8.tgz\",\n                    \"integrity\": \"sha512-2IAnmn8zbvC/jKYhq5Ki9I+DwjlrtMPUCH/CpHvqI4dNnlwHwsxoIhlc8WcYY5LSYknXQtAlFYuHfqAFCvQ4Wg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/highlight\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/generator\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.15.8.tgz\",\n                    \"integrity\": \"sha512-ECmAKstXbp1cvpTTZciZCgfOt6iN64lR0d+euv3UZisU5awfRawOvg07Utn/qBGuH4bRIEZKrA/4LzZyXhZr8g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.6\",\n                        \"jsesc\": \"^2.5.1\",\n                        \"source-map\": \"^0.5.0\"\n                    }\n                },\n                \"@babel/helper-annotate-as-pure\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.15.4.tgz\",\n                    \"integrity\": \"sha512-QwrtdNvUNsPCj2lfNQacsGSQvGX8ee1ttrBrcozUP2Sv/jylewBP/8QFe6ZkBsC8T/GYWonNAWJV4aRR9AL2DA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-create-class-features-plugin\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.15.4.tgz\",\n                    \"integrity\": \"sha512-7ZmzFi+DwJx6A7mHRwbuucEYpyBwmh2Ca0RvI6z2+WLZYCqV0JOaLb+u0zbtmDicebgKBZgqbYfLaKNqSgv5Pw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-annotate-as-pure\": \"^7.15.4\",\n                        \"@babel/helper-function-name\": \"^7.15.4\",\n                        \"@babel/helper-member-expression-to-functions\": \"^7.15.4\",\n                        \"@babel/helper-optimise-call-expression\": \"^7.15.4\",\n                        \"@babel/helper-replace-supers\": \"^7.15.4\",\n                        \"@babel/helper-split-export-declaration\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-function-name\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.15.4.tgz\",\n                    \"integrity\": \"sha512-Z91cOMM4DseLIGOnog+Z8OI6YseR9bua+HpvLAQ2XayUGU+neTtX+97caALaLdyu53I/fjhbeCnWnRH1O3jFOw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-get-function-arity\": \"^7.15.4\",\n                        \"@babel/template\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-get-function-arity\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.15.4.tgz\",\n                    \"integrity\": \"sha512-1/AlxSF92CmGZzHnC515hm4SirTxtpDnLEJ0UyEMgTMZN+6bxXKg04dKhiRx5Enel+SUA1G1t5Ed/yQia0efrA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-hoist-variables\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.15.4.tgz\",\n                    \"integrity\": \"sha512-VTy085egb3jUGVK9ycIxQiPbquesq0HUQ+tPO0uv5mPEBZipk+5FkRKiWq5apuyTE9FUrjENB0rCf8y+n+UuhA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-member-expression-to-functions\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.15.4.tgz\",\n                    \"integrity\": \"sha512-cokOMkxC/BTyNP1AlY25HuBWM32iCEsLPI4BHDpJCHHm1FU2E7dKWWIXJgQgSFiu4lp8q3bL1BIKwqkSUviqtA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-optimise-call-expression\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.15.4.tgz\",\n                    \"integrity\": \"sha512-E/z9rfbAOt1vDW1DR7k4SzhzotVV5+qMciWV6LaG1g4jeFrkDlJedjtV4h0i4Q/ITnUu+Pk08M7fczsB9GXBDw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                },\n                \"@babel/helper-replace-supers\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.15.4.tgz\",\n                    \"integrity\": \"sha512-/ztT6khaXF37MS47fufrKvIsiQkx1LBRvSJNzRqmbyeZnTwU9qBxXYLaaT/6KaxfKhjs2Wy8kG8ZdsFUuWBjzw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-member-expression-to-functions\": \"^7.15.4\",\n                        \"@babel/helper-optimise-call-expression\": \"^7.15.4\",\n                        \"@babel/traverse\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-split-export-declaration\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.15.4.tgz\",\n                    \"integrity\": \"sha512-HsFqhLDZ08DxCpBdEVtKmywj6PQbwnF6HHybur0MAnkAKnlS6uHkwnmRIkElB2Owpfb4xL4NwDmDLFubueDXsw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-validator-identifier\": {\n                    \"version\": \"7.15.7\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.15.7.tgz\",\n                    \"integrity\": \"sha512-K4JvCtQqad9OY2+yTU8w+E82ywk/fe+ELNlt1G8z3bVGlZfn/hOcQQsUhGhW/N+tb3fxK800wLtKOE/aM0m72w==\",\n                    \"dev\": true\n                },\n                \"@babel/highlight\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.14.5.tgz\",\n                    \"integrity\": \"sha512-qf9u2WFWVV0MppaL877j2dBtQIDgmidgjGk5VIMw3OadXvYaXn66U1BFlH2t4+t3i+8PhedppRv+i40ABzd+gg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.5\",\n                        \"chalk\": \"^2.0.0\",\n                        \"js-tokens\": \"^4.0.0\"\n                    }\n                },\n                \"@babel/parser\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.15.8.tgz\",\n                    \"integrity\": \"sha512-BRYa3wcQnjS/nqI8Ac94pYYpJfojHVvVXJ97+IDCImX4Jc8W8Xv1+47enbruk+q1etOpsQNwnfFcNGw+gtPGxA==\",\n                    \"dev\": true\n                },\n                \"@babel/template\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.15.4.tgz\",\n                    \"integrity\": \"sha512-UgBAfEa1oGuYgDIPM2G+aHa4Nlo9Lh6mGD2bDBGMTbYnc38vulXPuC1MGjYILIEmlwl6Rd+BPR9ee3gm20CBtg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/traverse\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.15.4.tgz\",\n                    \"integrity\": \"sha512-W6lQD8l4rUbQR/vYgSuCAE75ADyyQvOpFVsvPPdkhf6lATXAsQIG9YdtOcu8BB1dZ0LKu+Zo3c1wEcbKeuhdlA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/generator\": \"^7.15.4\",\n                        \"@babel/helper-function-name\": \"^7.15.4\",\n                        \"@babel/helper-hoist-variables\": \"^7.15.4\",\n                        \"@babel/helper-split-export-declaration\": \"^7.15.4\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\",\n                        \"debug\": \"^4.1.0\",\n                        \"globals\": \"^11.1.0\"\n                    }\n                },\n                \"@babel/types\": {\n                    \"version\": \"7.15.6\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.15.6.tgz\",\n                    \"integrity\": \"sha512-BPU+7QhqNjmWyDO0/vitH/CuhpV8ZmK1wpKva8nuyNF5MJfuRNWMc+hc14+u9xT93kvykMdncrJT19h74uB1Ig==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.9\",\n                        \"to-fast-properties\": \"^2.0.0\"\n                    }\n                },\n                \"debug\": {\n                    \"version\": \"4.3.2\",\n                    \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.2.tgz\",\n                    \"integrity\": \"sha512-mOp8wKcvj7XxC78zLgw/ZA+6TSgkoE2C/ienthhRD298T7UNwAg9diBpLRxC0mOezLl4B0xV7M0cCO6P/O0Xhw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ms\": \"2.1.2\"\n                    }\n                },\n                \"ms\": {\n                    \"version\": \"2.1.2\",\n                    \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n                    \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-proposal-private-property-in-object\": {\n            \"version\": \"7.15.4\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.15.4.tgz\",\n            \"integrity\": \"sha512-X0UTixkLf0PCCffxgu5/1RQyGGbgZuKoI+vXP4iSbJSYwPb7hu06omsFGBvQ9lJEvwgrxHdS8B5nbfcd8GyUNA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-annotate-as-pure\": \"^7.15.4\",\n                \"@babel/helper-create-class-features-plugin\": \"^7.15.4\",\n                \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\"\n            },\n            \"dependencies\": {\n                \"@babel/code-frame\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.15.8.tgz\",\n                    \"integrity\": \"sha512-2IAnmn8zbvC/jKYhq5Ki9I+DwjlrtMPUCH/CpHvqI4dNnlwHwsxoIhlc8WcYY5LSYknXQtAlFYuHfqAFCvQ4Wg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/highlight\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/generator\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.15.8.tgz\",\n                    \"integrity\": \"sha512-ECmAKstXbp1cvpTTZciZCgfOt6iN64lR0d+euv3UZisU5awfRawOvg07Utn/qBGuH4bRIEZKrA/4LzZyXhZr8g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.6\",\n                        \"jsesc\": \"^2.5.1\",\n                        \"source-map\": \"^0.5.0\"\n                    }\n                },\n                \"@babel/helper-annotate-as-pure\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.15.4.tgz\",\n                    \"integrity\": \"sha512-QwrtdNvUNsPCj2lfNQacsGSQvGX8ee1ttrBrcozUP2Sv/jylewBP/8QFe6ZkBsC8T/GYWonNAWJV4aRR9AL2DA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-create-class-features-plugin\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.15.4.tgz\",\n                    \"integrity\": \"sha512-7ZmzFi+DwJx6A7mHRwbuucEYpyBwmh2Ca0RvI6z2+WLZYCqV0JOaLb+u0zbtmDicebgKBZgqbYfLaKNqSgv5Pw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-annotate-as-pure\": \"^7.15.4\",\n                        \"@babel/helper-function-name\": \"^7.15.4\",\n                        \"@babel/helper-member-expression-to-functions\": \"^7.15.4\",\n                        \"@babel/helper-optimise-call-expression\": \"^7.15.4\",\n                        \"@babel/helper-replace-supers\": \"^7.15.4\",\n                        \"@babel/helper-split-export-declaration\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-function-name\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.15.4.tgz\",\n                    \"integrity\": \"sha512-Z91cOMM4DseLIGOnog+Z8OI6YseR9bua+HpvLAQ2XayUGU+neTtX+97caALaLdyu53I/fjhbeCnWnRH1O3jFOw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-get-function-arity\": \"^7.15.4\",\n                        \"@babel/template\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-get-function-arity\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.15.4.tgz\",\n                    \"integrity\": \"sha512-1/AlxSF92CmGZzHnC515hm4SirTxtpDnLEJ0UyEMgTMZN+6bxXKg04dKhiRx5Enel+SUA1G1t5Ed/yQia0efrA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-hoist-variables\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.15.4.tgz\",\n                    \"integrity\": \"sha512-VTy085egb3jUGVK9ycIxQiPbquesq0HUQ+tPO0uv5mPEBZipk+5FkRKiWq5apuyTE9FUrjENB0rCf8y+n+UuhA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-member-expression-to-functions\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.15.4.tgz\",\n                    \"integrity\": \"sha512-cokOMkxC/BTyNP1AlY25HuBWM32iCEsLPI4BHDpJCHHm1FU2E7dKWWIXJgQgSFiu4lp8q3bL1BIKwqkSUviqtA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-optimise-call-expression\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.15.4.tgz\",\n                    \"integrity\": \"sha512-E/z9rfbAOt1vDW1DR7k4SzhzotVV5+qMciWV6LaG1g4jeFrkDlJedjtV4h0i4Q/ITnUu+Pk08M7fczsB9GXBDw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                },\n                \"@babel/helper-replace-supers\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.15.4.tgz\",\n                    \"integrity\": \"sha512-/ztT6khaXF37MS47fufrKvIsiQkx1LBRvSJNzRqmbyeZnTwU9qBxXYLaaT/6KaxfKhjs2Wy8kG8ZdsFUuWBjzw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-member-expression-to-functions\": \"^7.15.4\",\n                        \"@babel/helper-optimise-call-expression\": \"^7.15.4\",\n                        \"@babel/traverse\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-split-export-declaration\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.15.4.tgz\",\n                    \"integrity\": \"sha512-HsFqhLDZ08DxCpBdEVtKmywj6PQbwnF6HHybur0MAnkAKnlS6uHkwnmRIkElB2Owpfb4xL4NwDmDLFubueDXsw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-validator-identifier\": {\n                    \"version\": \"7.15.7\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.15.7.tgz\",\n                    \"integrity\": \"sha512-K4JvCtQqad9OY2+yTU8w+E82ywk/fe+ELNlt1G8z3bVGlZfn/hOcQQsUhGhW/N+tb3fxK800wLtKOE/aM0m72w==\",\n                    \"dev\": true\n                },\n                \"@babel/highlight\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.14.5.tgz\",\n                    \"integrity\": \"sha512-qf9u2WFWVV0MppaL877j2dBtQIDgmidgjGk5VIMw3OadXvYaXn66U1BFlH2t4+t3i+8PhedppRv+i40ABzd+gg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.5\",\n                        \"chalk\": \"^2.0.0\",\n                        \"js-tokens\": \"^4.0.0\"\n                    }\n                },\n                \"@babel/parser\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.15.8.tgz\",\n                    \"integrity\": \"sha512-BRYa3wcQnjS/nqI8Ac94pYYpJfojHVvVXJ97+IDCImX4Jc8W8Xv1+47enbruk+q1etOpsQNwnfFcNGw+gtPGxA==\",\n                    \"dev\": true\n                },\n                \"@babel/template\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.15.4.tgz\",\n                    \"integrity\": \"sha512-UgBAfEa1oGuYgDIPM2G+aHa4Nlo9Lh6mGD2bDBGMTbYnc38vulXPuC1MGjYILIEmlwl6Rd+BPR9ee3gm20CBtg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/traverse\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.15.4.tgz\",\n                    \"integrity\": \"sha512-W6lQD8l4rUbQR/vYgSuCAE75ADyyQvOpFVsvPPdkhf6lATXAsQIG9YdtOcu8BB1dZ0LKu+Zo3c1wEcbKeuhdlA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/generator\": \"^7.15.4\",\n                        \"@babel/helper-function-name\": \"^7.15.4\",\n                        \"@babel/helper-hoist-variables\": \"^7.15.4\",\n                        \"@babel/helper-split-export-declaration\": \"^7.15.4\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\",\n                        \"debug\": \"^4.1.0\",\n                        \"globals\": \"^11.1.0\"\n                    }\n                },\n                \"@babel/types\": {\n                    \"version\": \"7.15.6\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.15.6.tgz\",\n                    \"integrity\": \"sha512-BPU+7QhqNjmWyDO0/vitH/CuhpV8ZmK1wpKva8nuyNF5MJfuRNWMc+hc14+u9xT93kvykMdncrJT19h74uB1Ig==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.9\",\n                        \"to-fast-properties\": \"^2.0.0\"\n                    }\n                },\n                \"debug\": {\n                    \"version\": \"4.3.2\",\n                    \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.2.tgz\",\n                    \"integrity\": \"sha512-mOp8wKcvj7XxC78zLgw/ZA+6TSgkoE2C/ienthhRD298T7UNwAg9diBpLRxC0mOezLl4B0xV7M0cCO6P/O0Xhw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ms\": \"2.1.2\"\n                    }\n                },\n                \"ms\": {\n                    \"version\": \"2.1.2\",\n                    \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n                    \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-proposal-unicode-property-regex\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-proposal-unicode-property-regex/download/@babel/plugin-proposal-unicode-property-regex-7.12.1.tgz?cache=0&sync_timestamp=1602800241079&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-proposal-unicode-property-regex%2Fdownload%2F%40babel%2Fplugin-proposal-unicode-property-regex-7.12.1.tgz\",\n            \"integrity\": \"sha1-Khg5WNQXdluerjNPR3WOXWqC4HI=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-create-regexp-features-plugin\": \"^7.12.1\",\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-syntax-async-generators\": {\n            \"version\": \"7.8.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-syntax-async-generators/download/@babel/plugin-syntax-async-generators-7.8.4.tgz\",\n            \"integrity\": \"sha1-qYP7Gusuw/btBCohD2QOkOeG/g0=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.8.0\"\n            }\n        },\n        \"@babel/plugin-syntax-class-properties\": {\n            \"version\": \"7.12.13\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz\",\n            \"integrity\": \"sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.12.13\"\n            },\n            \"dependencies\": {\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-syntax-class-static-block\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz\",\n            \"integrity\": \"sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.14.5\"\n            },\n            \"dependencies\": {\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-syntax-decorators\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-syntax-decorators/download/@babel/plugin-syntax-decorators-7.12.1.tgz?cache=0&sync_timestamp=1602800232071&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-syntax-decorators%2Fdownload%2F%40babel%2Fplugin-syntax-decorators-7.12.1.tgz\",\n            \"integrity\": \"sha1-gai1NbKER2xBvm3gaFOogCuYxd0=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-syntax-dynamic-import\": {\n            \"version\": \"7.8.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-syntax-dynamic-import/download/@babel/plugin-syntax-dynamic-import-7.8.3.tgz\",\n            \"integrity\": \"sha1-Yr+Ysto80h1iYVT8lu5bPLaOrLM=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.8.0\"\n            }\n        },\n        \"@babel/plugin-syntax-export-namespace-from\": {\n            \"version\": \"7.8.3\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-export-namespace-from/-/plugin-syntax-export-namespace-from-7.8.3.tgz\",\n            \"integrity\": \"sha512-MXf5laXo6c1IbEbegDmzGPwGNTsHZmEy6QGznu5Sh2UCWvueywb2ee+CCE4zQiZstxU9BMoQO9i6zUFSY0Kj0Q==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.8.3\"\n            }\n        },\n        \"@babel/plugin-syntax-json-strings\": {\n            \"version\": \"7.8.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-syntax-json-strings/download/@babel/plugin-syntax-json-strings-7.8.3.tgz\",\n            \"integrity\": \"sha1-AcohtmjNghjJ5kDLbdiMVBKyyWo=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.8.0\"\n            }\n        },\n        \"@babel/plugin-syntax-jsx\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-syntax-jsx/download/@babel/plugin-syntax-jsx-7.12.1.tgz?cache=0&sync_timestamp=1602800233054&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-syntax-jsx%2Fdownload%2F%40babel%2Fplugin-syntax-jsx-7.12.1.tgz\",\n            \"integrity\": \"sha1-nZ01fMgYqnrnk1kXwSV/Z2d6CSY=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-syntax-logical-assignment-operators\": {\n            \"version\": \"7.10.4\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz\",\n            \"integrity\": \"sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": {\n            \"version\": \"7.8.3\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz\",\n            \"integrity\": \"sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.8.0\"\n            }\n        },\n        \"@babel/plugin-syntax-numeric-separator\": {\n            \"version\": \"7.10.4\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz\",\n            \"integrity\": \"sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-syntax-object-rest-spread\": {\n            \"version\": \"7.8.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-syntax-object-rest-spread/download/@babel/plugin-syntax-object-rest-spread-7.8.3.tgz\",\n            \"integrity\": \"sha1-YOIl7cvZimQDMqLnLdPmbxr1WHE=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.8.0\"\n            }\n        },\n        \"@babel/plugin-syntax-optional-catch-binding\": {\n            \"version\": \"7.8.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-syntax-optional-catch-binding/download/@babel/plugin-syntax-optional-catch-binding-7.8.3.tgz\",\n            \"integrity\": \"sha1-YRGiZbz7Ag6579D9/X0mQCue1sE=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.8.0\"\n            }\n        },\n        \"@babel/plugin-syntax-optional-chaining\": {\n            \"version\": \"7.8.3\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz\",\n            \"integrity\": \"sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.8.0\"\n            }\n        },\n        \"@babel/plugin-syntax-private-property-in-object\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz\",\n            \"integrity\": \"sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.14.5\"\n            },\n            \"dependencies\": {\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-syntax-top-level-await\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz\",\n            \"integrity\": \"sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.14.5\"\n            },\n            \"dependencies\": {\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-transform-arrow-functions\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-arrow-functions/download/@babel/plugin-transform-arrow-functions-7.12.1.tgz?cache=0&sync_timestamp=1602800233566&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-arrow-functions%2Fdownload%2F%40babel%2Fplugin-transform-arrow-functions-7.12.1.tgz\",\n            \"integrity\": \"sha1-gIP/yGrI53f74ktZZ8SyUh88srM=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-async-to-generator\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-async-to-generator/download/@babel/plugin-transform-async-to-generator-7.12.1.tgz?cache=0&sync_timestamp=1602800242155&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-async-to-generator%2Fdownload%2F%40babel%2Fplugin-transform-async-to-generator-7.12.1.tgz\",\n            \"integrity\": \"sha1-OEmknMKiLpdDy9a1KSbTAzcimvE=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-module-imports\": \"^7.12.1\",\n                \"@babel/helper-plugin-utils\": \"^7.10.4\",\n                \"@babel/helper-remap-async-to-generator\": \"^7.12.1\"\n            }\n        },\n        \"@babel/plugin-transform-block-scoped-functions\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-block-scoped-functions/download/@babel/plugin-transform-block-scoped-functions-7.12.1.tgz?cache=0&sync_timestamp=1602800233803&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-block-scoped-functions%2Fdownload%2F%40babel%2Fplugin-transform-block-scoped-functions-7.12.1.tgz\",\n            \"integrity\": \"sha1-8qGjZb3itxEuCm3tkGf918B5Bdk=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-block-scoping\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-block-scoping/download/@babel/plugin-transform-block-scoping-7.12.1.tgz?cache=0&sync_timestamp=1602800233459&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-block-scoping%2Fdownload%2F%40babel%2Fplugin-transform-block-scoping-7.12.1.tgz\",\n            \"integrity\": \"sha1-8O5yeHS0KiCKSKWGuEw9IiwrvvE=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-classes\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-classes/download/@babel/plugin-transform-classes-7.12.1.tgz?cache=0&sync_timestamp=1602802059995&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-classes%2Fdownload%2F%40babel%2Fplugin-transform-classes-7.12.1.tgz\",\n            \"integrity\": \"sha1-ZeZQ/K3dPYjdzmfA+DSj1DajLbY=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-annotate-as-pure\": \"^7.10.4\",\n                \"@babel/helper-define-map\": \"^7.10.4\",\n                \"@babel/helper-function-name\": \"^7.10.4\",\n                \"@babel/helper-optimise-call-expression\": \"^7.10.4\",\n                \"@babel/helper-plugin-utils\": \"^7.10.4\",\n                \"@babel/helper-replace-supers\": \"^7.12.1\",\n                \"@babel/helper-split-export-declaration\": \"^7.10.4\",\n                \"globals\": \"^11.1.0\"\n            }\n        },\n        \"@babel/plugin-transform-computed-properties\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-computed-properties/download/@babel/plugin-transform-computed-properties-7.12.1.tgz?cache=0&sync_timestamp=1602800233906&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-computed-properties%2Fdownload%2F%40babel%2Fplugin-transform-computed-properties-7.12.1.tgz\",\n            \"integrity\": \"sha1-1oz2ybf4OKikFEutvpdUHqCQSFI=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-destructuring\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-destructuring/download/@babel/plugin-transform-destructuring-7.12.1.tgz?cache=0&sync_timestamp=1602800233701&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-destructuring%2Fdownload%2F%40babel%2Fplugin-transform-destructuring-7.12.1.tgz\",\n            \"integrity\": \"sha1-uaVw/g0KjUYBFkE8tPl+jgiy+Ec=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-dotall-regex\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-dotall-regex/download/@babel/plugin-transform-dotall-regex-7.12.1.tgz?cache=0&sync_timestamp=1602800241190&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-dotall-regex%2Fdownload%2F%40babel%2Fplugin-transform-dotall-regex-7.12.1.tgz\",\n            \"integrity\": \"sha1-odFsFIYoF7ZAnApnjW+Tc8qc2XU=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-create-regexp-features-plugin\": \"^7.12.1\",\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-duplicate-keys\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-duplicate-keys/download/@babel/plugin-transform-duplicate-keys-7.12.1.tgz?cache=0&sync_timestamp=1602800235384&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-duplicate-keys%2Fdownload%2F%40babel%2Fplugin-transform-duplicate-keys-7.12.1.tgz\",\n            \"integrity\": \"sha1-dFZhuropWsBuaGgieXpp+6osoig=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-exponentiation-operator\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-exponentiation-operator/download/@babel/plugin-transform-exponentiation-operator-7.12.1.tgz?cache=0&sync_timestamp=1602800235495&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-exponentiation-operator%2Fdownload%2F%40babel%2Fplugin-transform-exponentiation-operator-7.12.1.tgz\",\n            \"integrity\": \"sha1-sPLtNWuhvhQo7K8Sj/iiTwKDCuA=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-builder-binary-assignment-operator-visitor\": \"^7.10.4\",\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-for-of\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-for-of/download/@babel/plugin-transform-for-of-7.12.1.tgz?cache=0&sync_timestamp=1602800234012&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-for-of%2Fdownload%2F%40babel%2Fplugin-transform-for-of-7.12.1.tgz\",\n            \"integrity\": \"sha1-B2QPKIZ+0W+VEcmciIKR9WCSHPo=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-function-name\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-function-name/download/@babel/plugin-transform-function-name-7.12.1.tgz?cache=0&sync_timestamp=1602800234134&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-function-name%2Fdownload%2F%40babel%2Fplugin-transform-function-name-7.12.1.tgz\",\n            \"integrity\": \"sha1-LsdiWMcP4IxtfaFUADpIBiDrpmc=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-function-name\": \"^7.10.4\",\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-literals\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-literals/download/@babel/plugin-transform-literals-7.12.1.tgz?cache=0&sync_timestamp=1602800235597&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-literals%2Fdownload%2F%40babel%2Fplugin-transform-literals-7.12.1.tgz\",\n            \"integrity\": \"sha1-1zuAOiazcBfd+dO7j03Fi/uAb1c=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-member-expression-literals\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.14.5.tgz\",\n            \"integrity\": \"sha512-WkNXxH1VXVTKarWFqmso83xl+2V3Eo28YY5utIkbsmXoItO8Q3aZxN4BTS2k0hz9dGUloHK26mJMyQEYfkn/+Q==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.14.5\"\n            },\n            \"dependencies\": {\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-transform-modules-amd\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-modules-amd/download/@babel/plugin-transform-modules-amd-7.12.1.tgz?cache=0&sync_timestamp=1602802064278&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-modules-amd%2Fdownload%2F%40babel%2Fplugin-transform-modules-amd-7.12.1.tgz\",\n            \"integrity\": \"sha1-MVQwCwJhhWZu67DA7X+EFf789vk=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-module-transforms\": \"^7.12.1\",\n                \"@babel/helper-plugin-utils\": \"^7.10.4\",\n                \"babel-plugin-dynamic-import-node\": \"^2.3.3\"\n            }\n        },\n        \"@babel/plugin-transform-modules-commonjs\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-modules-commonjs/download/@babel/plugin-transform-modules-commonjs-7.12.1.tgz?cache=0&sync_timestamp=1602802063892&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-modules-commonjs%2Fdownload%2F%40babel%2Fplugin-transform-modules-commonjs-7.12.1.tgz\",\n            \"integrity\": \"sha1-+kAxJFQmNseGz5tGCg/7tIqG5kg=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-module-transforms\": \"^7.12.1\",\n                \"@babel/helper-plugin-utils\": \"^7.10.4\",\n                \"@babel/helper-simple-access\": \"^7.12.1\",\n                \"babel-plugin-dynamic-import-node\": \"^2.3.3\"\n            }\n        },\n        \"@babel/plugin-transform-modules-systemjs\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-modules-systemjs/download/@babel/plugin-transform-modules-systemjs-7.12.1.tgz?cache=0&sync_timestamp=1602802063412&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-modules-systemjs%2Fdownload%2F%40babel%2Fplugin-transform-modules-systemjs-7.12.1.tgz\",\n            \"integrity\": \"sha1-Zj/qYg1ZPJPyFKRkzTmb9txoMIY=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-hoist-variables\": \"^7.10.4\",\n                \"@babel/helper-module-transforms\": \"^7.12.1\",\n                \"@babel/helper-plugin-utils\": \"^7.10.4\",\n                \"@babel/helper-validator-identifier\": \"^7.10.4\",\n                \"babel-plugin-dynamic-import-node\": \"^2.3.3\"\n            }\n        },\n        \"@babel/plugin-transform-modules-umd\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-modules-umd/download/@babel/plugin-transform-modules-umd-7.12.1.tgz?cache=0&sync_timestamp=1602802064711&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-modules-umd%2Fdownload%2F%40babel%2Fplugin-transform-modules-umd-7.12.1.tgz\",\n            \"integrity\": \"sha1-61ohjWscaPPWIXuPosyC/sZUeQI=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-module-transforms\": \"^7.12.1\",\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-named-capturing-groups-regex\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-named-capturing-groups-regex/download/@babel/plugin-transform-named-capturing-groups-regex-7.12.1.tgz?cache=0&sync_timestamp=1602800241290&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-named-capturing-groups-regex%2Fdownload%2F%40babel%2Fplugin-transform-named-capturing-groups-regex-7.12.1.tgz\",\n            \"integrity\": \"sha1-tAf1yWvg2fX4hGdJf6grMKw+h1M=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-create-regexp-features-plugin\": \"^7.12.1\"\n            }\n        },\n        \"@babel/plugin-transform-new-target\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-new-target/download/@babel/plugin-transform-new-target-7.12.1.tgz?cache=0&sync_timestamp=1602800235712&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-new-target%2Fdownload%2F%40babel%2Fplugin-transform-new-target-7.12.1.tgz\",\n            \"integrity\": \"sha1-gAc/Au4bstNlw0FkkOCFyVdZ3sA=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-object-super\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-object-super/download/@babel/plugin-transform-object-super-7.12.1.tgz?cache=0&sync_timestamp=1602802058628&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-object-super%2Fdownload%2F%40babel%2Fplugin-transform-object-super-7.12.1.tgz\",\n            \"integrity\": \"sha1-TqCGlrjS5lhB0MdwZIKwSL7RBm4=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\",\n                \"@babel/helper-replace-supers\": \"^7.12.1\"\n            }\n        },\n        \"@babel/plugin-transform-parameters\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-parameters/download/@babel/plugin-transform-parameters-7.12.1.tgz?cache=0&sync_timestamp=1602800236149&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-parameters%2Fdownload%2F%40babel%2Fplugin-transform-parameters-7.12.1.tgz\",\n            \"integrity\": \"sha1-0uljsDh3FlDJIu/1k3mclthTJV0=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-property-literals\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.14.5.tgz\",\n            \"integrity\": \"sha512-r1uilDthkgXW8Z1vJz2dKYLV1tuw2xsbrp3MrZmD99Wh9vsfKoob+JTgri5VUb/JqyKRXotlOtwgu4stIYCmnw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.14.5\"\n            },\n            \"dependencies\": {\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-transform-regenerator\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-regenerator/download/@babel/plugin-transform-regenerator-7.12.1.tgz?cache=0&sync_timestamp=1602800236618&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-regenerator%2Fdownload%2F%40babel%2Fplugin-transform-regenerator-7.12.1.tgz\",\n            \"integrity\": \"sha1-Xwoo2EL2RiKB8GqWToi6jXq0l1M=\",\n            \"dev\": true,\n            \"requires\": {\n                \"regenerator-transform\": \"^0.14.2\"\n            }\n        },\n        \"@babel/plugin-transform-reserved-words\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.14.5.tgz\",\n            \"integrity\": \"sha512-cv4F2rv1nD4qdexOGsRQXJrOcyb5CrgjUH9PKrrtyhSDBNWGxd0UIitjyJiWagS+EbUGjG++22mGH1Pub8D6Vg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.14.5\"\n            },\n            \"dependencies\": {\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-transform-runtime\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-runtime/download/@babel/plugin-transform-runtime-7.12.1.tgz?cache=0&sync_timestamp=1602800227616&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-runtime%2Fdownload%2F%40babel%2Fplugin-transform-runtime-7.12.1.tgz\",\n            \"integrity\": \"sha1-BLeSBX60YDif9qQZjjd2FOoee6U=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-module-imports\": \"^7.12.1\",\n                \"@babel/helper-plugin-utils\": \"^7.10.4\",\n                \"resolve\": \"^1.8.1\",\n                \"semver\": \"^5.5.1\"\n            }\n        },\n        \"@babel/plugin-transform-shorthand-properties\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-shorthand-properties/download/@babel/plugin-transform-shorthand-properties-7.12.1.tgz?cache=0&sync_timestamp=1602800237133&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-shorthand-properties%2Fdownload%2F%40babel%2Fplugin-transform-shorthand-properties-7.12.1.tgz\",\n            \"integrity\": \"sha1-C/nKxVUPzgz98ENCD2YdZF/cdeM=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-spread\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-spread/download/@babel/plugin-transform-spread-7.12.1.tgz?cache=0&sync_timestamp=1602800242265&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-spread%2Fdownload%2F%40babel%2Fplugin-transform-spread-7.12.1.tgz\",\n            \"integrity\": \"sha1-Un+fMRvk7H/cK3m7ife/iEs+Hh4=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\",\n                \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.12.1\"\n            }\n        },\n        \"@babel/plugin-transform-sticky-regex\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-sticky-regex/download/@babel/plugin-transform-sticky-regex-7.12.1.tgz?cache=0&sync_timestamp=1602800237248&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-sticky-regex%2Fdownload%2F%40babel%2Fplugin-transform-sticky-regex-7.12.1.tgz\",\n            \"integrity\": \"sha1-XCTPUN45bTDpmvyNHHAOi84PXK8=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\",\n                \"@babel/helper-regex\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-template-literals\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-template-literals/download/@babel/plugin-transform-template-literals-7.12.1.tgz?cache=0&sync_timestamp=1602800237453&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-template-literals%2Fdownload%2F%40babel%2Fplugin-transform-template-literals-7.12.1.tgz\",\n            \"integrity\": \"sha1-tD7ObtmnnAxxEZ9XbSme8J2UKEM=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-typeof-symbol\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-typeof-symbol/download/@babel/plugin-transform-typeof-symbol-7.12.1.tgz?cache=0&sync_timestamp=1602800237638&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-typeof-symbol%2Fdownload%2F%40babel%2Fplugin-transform-typeof-symbol-7.12.1.tgz\",\n            \"integrity\": \"sha1-nKa+ND1CUS+8LmgjaoKuZLx694o=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/plugin-transform-unicode-escapes\": {\n            \"version\": \"7.14.5\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.14.5.tgz\",\n            \"integrity\": \"sha512-crTo4jATEOjxj7bt9lbYXcBAM3LZaUrbP2uUdxb6WIorLmjNKSpHfIybgY4B8SRpbf8tEVIWH3Vtm7ayCrKocA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.14.5\"\n            },\n            \"dependencies\": {\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/plugin-transform-unicode-regex\": {\n            \"version\": \"7.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/plugin-transform-unicode-regex/download/@babel/plugin-transform-unicode-regex-7.12.1.tgz?cache=0&sync_timestamp=1602800241610&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fplugin-transform-unicode-regex%2Fdownload%2F%40babel%2Fplugin-transform-unicode-regex-7.12.1.tgz\",\n            \"integrity\": \"sha1-zJZh9hOQ21xl4/66zO/Vxqw/rss=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-create-regexp-features-plugin\": \"^7.12.1\",\n                \"@babel/helper-plugin-utils\": \"^7.10.4\"\n            }\n        },\n        \"@babel/preset-env\": {\n            \"version\": \"7.3.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/preset-env/download/@babel/preset-env-7.3.4.tgz?cache=0&sync_timestamp=1602802054477&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fpreset-env%2Fdownload%2F%40babel%2Fpreset-env-7.3.4.tgz\",\n            \"integrity\": \"sha1-iHzzi20jyC8ZtRNSmL2xYAYuM+E=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-module-imports\": \"^7.0.0\",\n                \"@babel/helper-plugin-utils\": \"^7.0.0\",\n                \"@babel/plugin-proposal-async-generator-functions\": \"^7.2.0\",\n                \"@babel/plugin-proposal-json-strings\": \"^7.2.0\",\n                \"@babel/plugin-proposal-object-rest-spread\": \"^7.3.4\",\n                \"@babel/plugin-proposal-optional-catch-binding\": \"^7.2.0\",\n                \"@babel/plugin-proposal-unicode-property-regex\": \"^7.2.0\",\n                \"@babel/plugin-syntax-async-generators\": \"^7.2.0\",\n                \"@babel/plugin-syntax-json-strings\": \"^7.2.0\",\n                \"@babel/plugin-syntax-object-rest-spread\": \"^7.2.0\",\n                \"@babel/plugin-syntax-optional-catch-binding\": \"^7.2.0\",\n                \"@babel/plugin-transform-arrow-functions\": \"^7.2.0\",\n                \"@babel/plugin-transform-async-to-generator\": \"^7.3.4\",\n                \"@babel/plugin-transform-block-scoped-functions\": \"^7.2.0\",\n                \"@babel/plugin-transform-block-scoping\": \"^7.3.4\",\n                \"@babel/plugin-transform-classes\": \"^7.3.4\",\n                \"@babel/plugin-transform-computed-properties\": \"^7.2.0\",\n                \"@babel/plugin-transform-destructuring\": \"^7.2.0\",\n                \"@babel/plugin-transform-dotall-regex\": \"^7.2.0\",\n                \"@babel/plugin-transform-duplicate-keys\": \"^7.2.0\",\n                \"@babel/plugin-transform-exponentiation-operator\": \"^7.2.0\",\n                \"@babel/plugin-transform-for-of\": \"^7.2.0\",\n                \"@babel/plugin-transform-function-name\": \"^7.2.0\",\n                \"@babel/plugin-transform-literals\": \"^7.2.0\",\n                \"@babel/plugin-transform-modules-amd\": \"^7.2.0\",\n                \"@babel/plugin-transform-modules-commonjs\": \"^7.2.0\",\n                \"@babel/plugin-transform-modules-systemjs\": \"^7.3.4\",\n                \"@babel/plugin-transform-modules-umd\": \"^7.2.0\",\n                \"@babel/plugin-transform-named-capturing-groups-regex\": \"^7.3.0\",\n                \"@babel/plugin-transform-new-target\": \"^7.0.0\",\n                \"@babel/plugin-transform-object-super\": \"^7.2.0\",\n                \"@babel/plugin-transform-parameters\": \"^7.2.0\",\n                \"@babel/plugin-transform-regenerator\": \"^7.3.4\",\n                \"@babel/plugin-transform-shorthand-properties\": \"^7.2.0\",\n                \"@babel/plugin-transform-spread\": \"^7.2.0\",\n                \"@babel/plugin-transform-sticky-regex\": \"^7.2.0\",\n                \"@babel/plugin-transform-template-literals\": \"^7.2.0\",\n                \"@babel/plugin-transform-typeof-symbol\": \"^7.2.0\",\n                \"@babel/plugin-transform-unicode-regex\": \"^7.2.0\",\n                \"browserslist\": \"^4.3.4\",\n                \"invariant\": \"^2.2.2\",\n                \"js-levenshtein\": \"^1.1.3\",\n                \"semver\": \"^5.3.0\"\n            }\n        },\n        \"@babel/preset-modules\": {\n            \"version\": \"0.1.4\",\n            \"resolved\": \"https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.4.tgz\",\n            \"integrity\": \"sha512-J36NhwnfdzpmH41M1DrnkkgAqhZaqr/NBdPfQ677mLzlaXo+oDiv1deyCDtgAhz8p328otdob0Du7+xgHGZbKg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-plugin-utils\": \"^7.0.0\",\n                \"@babel/plugin-proposal-unicode-property-regex\": \"^7.4.4\",\n                \"@babel/plugin-transform-dotall-regex\": \"^7.4.4\",\n                \"@babel/types\": \"^7.4.4\",\n                \"esutils\": \"^2.0.2\"\n            }\n        },\n        \"@babel/runtime\": {\n            \"version\": \"7.12.5\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/runtime/download/@babel/runtime-7.12.5.tgz?cache=0&sync_timestamp=1604441331796&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Fruntime%2Fdownload%2F%40babel%2Fruntime-7.12.5.tgz\",\n            \"integrity\": \"sha1-QQ5+SHRB4bNgwpvnFdhw2bmFiC4=\",\n            \"dev\": true,\n            \"requires\": {\n                \"regenerator-runtime\": \"^0.13.4\"\n            }\n        },\n        \"@babel/runtime-corejs2\": {\n            \"version\": \"7.12.5\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/runtime-corejs2/download/@babel/runtime-corejs2-7.12.5.tgz\",\n            \"integrity\": \"sha1-OC7DjwgmNl6WEY4ouBJJwcYbrOM=\",\n            \"dev\": true,\n            \"requires\": {\n                \"core-js\": \"^2.6.5\",\n                \"regenerator-runtime\": \"^0.13.4\"\n            }\n        },\n        \"@babel/template\": {\n            \"version\": \"7.10.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/template/download/@babel/template-7.10.4.tgz?cache=0&sync_timestamp=1593522831608&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Ftemplate%2Fdownload%2F%40babel%2Ftemplate-7.10.4.tgz\",\n            \"integrity\": \"sha1-MlGZbEIA68cdGo/EBfupQPNrong=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/code-frame\": \"^7.10.4\",\n                \"@babel/parser\": \"^7.10.4\",\n                \"@babel/types\": \"^7.10.4\"\n            }\n        },\n        \"@babel/traverse\": {\n            \"version\": \"7.12.5\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/traverse/download/@babel/traverse-7.12.5.tgz?cache=0&sync_timestamp=1604443180245&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Ftraverse%2Fdownload%2F%40babel%2Ftraverse-7.12.5.tgz\",\n            \"integrity\": \"sha1-eKDGjI6KNeTKz9MduLswPVYG8JU=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/code-frame\": \"^7.10.4\",\n                \"@babel/generator\": \"^7.12.5\",\n                \"@babel/helper-function-name\": \"^7.10.4\",\n                \"@babel/helper-split-export-declaration\": \"^7.11.0\",\n                \"@babel/parser\": \"^7.12.5\",\n                \"@babel/types\": \"^7.12.5\",\n                \"debug\": \"^4.1.0\",\n                \"globals\": \"^11.1.0\",\n                \"lodash\": \"^4.17.19\"\n            },\n            \"dependencies\": {\n                \"debug\": {\n                    \"version\": \"4.2.0\",\n                    \"resolved\": \"https://registry.npm.taobao.org/debug/download/debug-4.2.0.tgz?cache=0&sync_timestamp=1600502871403&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fdebug%2Fdownload%2Fdebug-4.2.0.tgz\",\n                    \"integrity\": \"sha1-fxUPk5IOlMWPVXTC/QGjEQ7/5/E=\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ms\": \"2.1.2\"\n                    }\n                },\n                \"ms\": {\n                    \"version\": \"2.1.2\",\n                    \"resolved\": \"https://registry.npm.taobao.org/ms/download/ms-2.1.2.tgz?cache=0&sync_timestamp=1575472461218&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fms%2Fdownload%2Fms-2.1.2.tgz\",\n                    \"integrity\": \"sha1-0J0fNXtEP0kzgqjrPM0YOHKuYAk=\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@babel/types\": {\n            \"version\": \"7.12.6\",\n            \"resolved\": \"https://registry.npm.taobao.org/@babel/types/download/@babel/types-7.12.6.tgz?cache=0&sync_timestamp=1604486455234&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40babel%2Ftypes%2Fdownload%2F%40babel%2Ftypes-7.12.6.tgz\",\n            \"integrity\": \"sha1-rg5V7xzOH7yIHNJvgjTrPmV+3JY=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-validator-identifier\": \"^7.10.4\",\n                \"lodash\": \"^4.17.19\",\n                \"to-fast-properties\": \"^2.0.0\"\n            }\n        },\n        \"@discoveryjs/json-ext\": {\n            \"version\": \"0.5.5\",\n            \"resolved\": \"https://registry.npmjs.org/@discoveryjs/json-ext/-/json-ext-0.5.5.tgz\",\n            \"integrity\": \"sha512-6nFkfkmSeV/rqSaS4oWHgmpnYw194f6hmWF5is6b0J1naJZoiD0NTc9AiUwPHvWsowkjuHErCZT1wa0jg+BLIA==\",\n            \"dev\": true\n        },\n        \"@hutson/parse-repository-url\": {\n            \"version\": \"3.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/@hutson/parse-repository-url/-/parse-repository-url-3.0.2.tgz\",\n            \"integrity\": \"sha512-H9XAx3hc0BQHY6l+IFSWHDySypcXsvsuLhgYLUGywmJ5pswRVQJUHpOsobnLYp2ZUaUlKiKDrgWWhosOwAEM8Q==\",\n            \"dev\": true\n        },\n        \"@nodelib/fs.scandir\": {\n            \"version\": \"2.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\",\n            \"integrity\": \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@nodelib/fs.stat\": \"2.0.5\",\n                \"run-parallel\": \"^1.1.9\"\n            }\n        },\n        \"@nodelib/fs.stat\": {\n            \"version\": \"2.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\",\n            \"integrity\": \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\",\n            \"dev\": true\n        },\n        \"@nodelib/fs.walk\": {\n            \"version\": \"1.2.8\",\n            \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\",\n            \"integrity\": \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@nodelib/fs.scandir\": \"2.1.5\",\n                \"fastq\": \"^1.6.0\"\n            }\n        },\n        \"@slimkit/plus-editor\": {\n            \"version\": \"0.0.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/@slimkit/plus-editor/download/@slimkit/plus-editor-0.0.3.tgz\",\n            \"integrity\": \"sha1-N7buBrv7ToyMjrdw4YJHghWMy4M=\",\n            \"requires\": {\n                \"highlight.js\": \"^9.11.0\",\n                \"highlight.js-async-webpack\": \"^1.0.4\"\n            },\n            \"dependencies\": {\n                \"highlight.js\": {\n                    \"version\": \"9.18.5\",\n                    \"resolved\": \"https://registry.npmjs.org/highlight.js/-/highlight.js-9.18.5.tgz\",\n                    \"integrity\": \"sha512-a5bFyofd/BHCX52/8i8uJkjr9DYwXIPnM/plwI6W7ezItLGqzt7X2G2nXuYSfsIJdkwwj/g9DG1LkcGJI/dDoA==\"\n                }\n            }\n        },\n        \"@trysound/sax\": {\n            \"version\": \"0.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/@trysound/sax/-/sax-0.2.0.tgz\",\n            \"integrity\": \"sha512-L7z9BgrNEcYyUYtF+HaEfiS5ebkh9jXqbszz7pC0hRBPaatV0XjSD3+eHrpqFemQfgwiFF0QPIarnIihIDn7OA==\",\n            \"dev\": true\n        },\n        \"@types/babel__core\": {\n            \"version\": \"7.1.16\",\n            \"resolved\": \"https://registry.npmjs.org/@types/babel__core/-/babel__core-7.1.16.tgz\",\n            \"integrity\": \"sha512-EAEHtisTMM+KaKwfWdC3oyllIqswlznXCIVCt7/oRNrh+DhgT4UEBNC/jlADNjvw7UnfbcdkGQcPVZ1xYiLcrQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/parser\": \"^7.1.0\",\n                \"@babel/types\": \"^7.0.0\",\n                \"@types/babel__generator\": \"*\",\n                \"@types/babel__template\": \"*\",\n                \"@types/babel__traverse\": \"*\"\n            }\n        },\n        \"@types/babel__generator\": {\n            \"version\": \"7.6.3\",\n            \"resolved\": \"https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.6.3.tgz\",\n            \"integrity\": \"sha512-/GWCmzJWqV7diQW54smJZzWbSFf4QYtF71WCKhcx6Ru/tFyQIY2eiiITcCAeuPbNSvT9YCGkVMqqvSk2Z0mXiA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/types\": \"^7.0.0\"\n            }\n        },\n        \"@types/babel__template\": {\n            \"version\": \"7.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.1.tgz\",\n            \"integrity\": \"sha512-azBFKemX6kMg5Io+/rdGT0dkGreboUVR0Cdm3fz9QJWpaQGJRQXl7C+6hOTCZcMll7KFyEQpgbYI2lHdsS4U7g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/parser\": \"^7.1.0\",\n                \"@babel/types\": \"^7.0.0\"\n            }\n        },\n        \"@types/babel__traverse\": {\n            \"version\": \"7.14.2\",\n            \"resolved\": \"https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.14.2.tgz\",\n            \"integrity\": \"sha512-K2waXdXBi2302XUdcHcR1jCeU0LL4TD9HRs/gk0N2Xvrht+G/BfJa4QObBQZfhMdxiCpV3COl5Nfq4uKTeTnJA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/types\": \"^7.3.0\"\n            }\n        },\n        \"@types/clean-css\": {\n            \"version\": \"4.2.5\",\n            \"resolved\": \"https://registry.npmjs.org/@types/clean-css/-/clean-css-4.2.5.tgz\",\n            \"integrity\": \"sha512-NEzjkGGpbs9S9fgC4abuBvTpVwE3i+Acu9BBod3PUyjDVZcNsGx61b8r2PphR61QGPnn0JHVs5ey6/I4eTrkxw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/node\": \"*\",\n                \"source-map\": \"^0.6.0\"\n            },\n            \"dependencies\": {\n                \"source-map\": {\n                    \"version\": \"0.6.1\",\n                    \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n                    \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"@types/eslint\": {\n            \"version\": \"7.28.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/eslint/-/eslint-7.28.1.tgz\",\n            \"integrity\": \"sha512-XhZKznR3i/W5dXqUhgU9fFdJekufbeBd5DALmkuXoeFcjbQcPk+2cL+WLHf6Q81HWAnM2vrslIHpGVyCAviRwg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/estree\": \"*\",\n                \"@types/json-schema\": \"*\"\n            }\n        },\n        \"@types/eslint-scope\": {\n            \"version\": \"3.7.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/eslint-scope/-/eslint-scope-3.7.1.tgz\",\n            \"integrity\": \"sha512-SCFeogqiptms4Fg29WpOTk5nHIzfpKCemSN63ksBQYKTcXoJEmJagV+DhVmbapZzY4/5YaOV1nZwrsU79fFm1g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/eslint\": \"*\",\n                \"@types/estree\": \"*\"\n            }\n        },\n        \"@types/estree\": {\n            \"version\": \"0.0.50\",\n            \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-0.0.50.tgz\",\n            \"integrity\": \"sha512-C6N5s2ZFtuZRj54k2/zyRhNDjJwwcViAM3Nbm8zjBpbqAdZ00mr0CFxvSKeO8Y/e03WVFLpQMdHYVfUd6SB+Hw==\",\n            \"dev\": true\n        },\n        \"@types/glob\": {\n            \"version\": \"7.1.4\",\n            \"resolved\": \"https://registry.npmjs.org/@types/glob/-/glob-7.1.4.tgz\",\n            \"integrity\": \"sha512-w+LsMxKyYQm347Otw+IfBXOv9UWVjpHpCDdbBMt8Kz/xbvCYNjP+0qPh91Km3iKfSRLBB0P7fAMf0KHrPu+MyA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/minimatch\": \"*\",\n                \"@types/node\": \"*\"\n            }\n        },\n        \"@types/http-proxy\": {\n            \"version\": \"1.17.7\",\n            \"resolved\": \"https://registry.npmjs.org/@types/http-proxy/-/http-proxy-1.17.7.tgz\",\n            \"integrity\": \"sha512-9hdj6iXH64tHSLTY+Vt2eYOGzSogC+JQ2H7bdPWkuh7KXP5qLllWx++t+K9Wk556c3dkDdPws/SpMRi0sdCT1w==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/node\": \"*\"\n            }\n        },\n        \"@types/imagemin\": {\n            \"version\": \"8.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/@types/imagemin/-/imagemin-8.0.0.tgz\",\n            \"integrity\": \"sha512-B9X2CUeDv/uUeY9CqkzSTfmsLkeJP6PkmXlh4lODBbf9SwpmNuLS30WzUOi863dgsjY3zt3gY5q2F+UdifRi1A==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/node\": \"*\"\n            }\n        },\n        \"@types/imagemin-gifsicle\": {\n            \"version\": \"7.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/imagemin-gifsicle/-/imagemin-gifsicle-7.0.1.tgz\",\n            \"integrity\": \"sha512-kUz6sUh0P95JOS0RGEaaemWUrASuw+dLsWIveK2UZJx74id/B9epgblMkCk/r5MjUWbZ83wFvacG5Rb/f97gyA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/imagemin\": \"*\"\n            }\n        },\n        \"@types/imagemin-mozjpeg\": {\n            \"version\": \"8.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/imagemin-mozjpeg/-/imagemin-mozjpeg-8.0.1.tgz\",\n            \"integrity\": \"sha512-kMQWEoKxxhlnH4POI3qfW9DjXlQfi80ux3l2b3j5R3eudSCoUIzKQLkfMjNJ6eMYnMWBcB+rfQOWqIzdIwFGKw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/imagemin\": \"*\"\n            }\n        },\n        \"@types/imagemin-optipng\": {\n            \"version\": \"5.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/imagemin-optipng/-/imagemin-optipng-5.2.1.tgz\",\n            \"integrity\": \"sha512-XCM/3q+HUL7v4zOqMI+dJ5dTxT+MUukY9KU49DSnYb/4yWtSMHJyADP+WHSMVzTR63J2ZvfUOzSilzBNEQW78g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/imagemin\": \"*\"\n            }\n        },\n        \"@types/imagemin-svgo\": {\n            \"version\": \"8.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/imagemin-svgo/-/imagemin-svgo-8.0.1.tgz\",\n            \"integrity\": \"sha512-YafkdrVAcr38U0Ln1C+L1n4SIZqC47VBHTyxCq7gTUSd1R9MdIvMcrljWlgU1M9O68WZDeQWUrKipKYfEOCOvQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/imagemin\": \"*\",\n                \"@types/svgo\": \"^1\"\n            }\n        },\n        \"@types/json-schema\": {\n            \"version\": \"7.0.9\",\n            \"resolved\": \"https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.9.tgz\",\n            \"integrity\": \"sha512-qcUXuemtEu+E5wZSJHNxUXeCZhAfXKQ41D+duX+VYPde7xyEVZci+/oXKJL13tnRs9lR2pr4fod59GT6/X1/yQ==\",\n            \"dev\": true\n        },\n        \"@types/minimatch\": {\n            \"version\": \"3.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/@types/minimatch/-/minimatch-3.0.5.tgz\",\n            \"integrity\": \"sha512-Klz949h02Gz2uZCMGwDUSDS1YBlTdDDgbWHi+81l29tQALUtvz4rAYi5uoVhE5Lagoq6DeqAUlbrHvW/mXDgdQ==\",\n            \"dev\": true\n        },\n        \"@types/minimist\": {\n            \"version\": \"1.2.2\",\n            \"resolved\": \"https://registry.npmjs.org/@types/minimist/-/minimist-1.2.2.tgz\",\n            \"integrity\": \"sha512-jhuKLIRrhvCPLqwPcx6INqmKeiA5EWrsCOPhrlFSrbrmU4ZMPjj5Ul/oLCMDO98XRUIwVm78xICz4EPCektzeQ==\",\n            \"dev\": true\n        },\n        \"@types/node\": {\n            \"version\": \"16.10.3\",\n            \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-16.10.3.tgz\",\n            \"integrity\": \"sha512-ho3Ruq+fFnBrZhUYI46n/bV2GjwzSkwuT4dTf0GkuNFmnb8nq4ny2z9JEVemFi6bdEJanHLlYfy9c6FN9B9McQ==\",\n            \"dev\": true\n        },\n        \"@types/normalize-package-data\": {\n            \"version\": \"2.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/normalize-package-data/-/normalize-package-data-2.4.1.tgz\",\n            \"integrity\": \"sha512-Gj7cI7z+98M282Tqmp2K5EIsoouUEzbBJhQQzDE3jSIRk6r9gsz0oUokqIUR4u1R3dMHo0pDHM7sNOHyhulypw==\",\n            \"dev\": true\n        },\n        \"@types/parse-json\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/@types/parse-json/-/parse-json-4.0.0.tgz\",\n            \"integrity\": \"sha512-//oorEZjL6sbPcKUaCdIGlIUeH26mgzimjBB77G6XRgnDl/L5wOnpyBGRe/Mmf5CVW3PwEBE1NjiMZ/ssFh4wA==\",\n            \"dev\": true\n        },\n        \"@types/retry\": {\n            \"version\": \"0.12.1\",\n            \"resolved\": \"https://registry.npmjs.org/@types/retry/-/retry-0.12.1.tgz\",\n            \"integrity\": \"sha512-xoDlM2S4ortawSWORYqsdU+2rxdh4LRW9ytc3zmT37RIKQh6IHyKwwtKhKis9ah8ol07DCkZxPt8BBvPjC6v4g==\",\n            \"dev\": true\n        },\n        \"@types/svgo\": {\n            \"version\": \"1.3.6\",\n            \"resolved\": \"https://registry.npmjs.org/@types/svgo/-/svgo-1.3.6.tgz\",\n            \"integrity\": \"sha512-AZU7vQcy/4WFEuwnwsNsJnFwupIpbllH1++LXScN6uxT1Z4zPzdrWG97w4/I7eFKFTvfy/bHFStWjdBAg2Vjug==\",\n            \"dev\": true\n        },\n        \"@vue/babel-helper-vue-jsx-merge-props\": {\n            \"version\": \"1.2.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@vue/babel-helper-vue-jsx-merge-props/download/@vue/babel-helper-vue-jsx-merge-props-1.2.1.tgz?cache=0&sync_timestamp=1602851135129&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40vue%2Fbabel-helper-vue-jsx-merge-props%2Fdownload%2F%40vue%2Fbabel-helper-vue-jsx-merge-props-1.2.1.tgz\",\n            \"integrity\": \"sha1-MWJKelBfsU2h1YAjclpMXycOaoE=\",\n            \"dev\": true\n        },\n        \"@vue/babel-plugin-transform-vue-jsx\": {\n            \"version\": \"1.2.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@vue/babel-plugin-transform-vue-jsx/download/@vue/babel-plugin-transform-vue-jsx-1.2.1.tgz?cache=0&sync_timestamp=1602851227950&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40vue%2Fbabel-plugin-transform-vue-jsx%2Fdownload%2F%40vue%2Fbabel-plugin-transform-vue-jsx-1.2.1.tgz\",\n            \"integrity\": \"sha1-ZGBGxlLC8CQnJ/NFGdkXsGQEHtc=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-module-imports\": \"^7.0.0\",\n                \"@babel/plugin-syntax-jsx\": \"^7.2.0\",\n                \"@vue/babel-helper-vue-jsx-merge-props\": \"^1.2.1\",\n                \"html-tags\": \"^2.0.0\",\n                \"lodash.kebabcase\": \"^4.1.1\",\n                \"svg-tags\": \"^1.0.0\"\n            }\n        },\n        \"@vue/babel-preset-app\": {\n            \"version\": \"3.12.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@vue/babel-preset-app/download/@vue/babel-preset-app-3.12.1.tgz?cache=0&sync_timestamp=1603104126510&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40vue%2Fbabel-preset-app%2Fdownload%2F%40vue%2Fbabel-preset-app-3.12.1.tgz\",\n            \"integrity\": \"sha1-JMR3BS8HjzD9t3NRA7FN0fosv+E=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-module-imports\": \"^7.0.0\",\n                \"@babel/plugin-proposal-class-properties\": \"^7.0.0\",\n                \"@babel/plugin-proposal-decorators\": \"^7.1.0\",\n                \"@babel/plugin-syntax-dynamic-import\": \"^7.0.0\",\n                \"@babel/plugin-syntax-jsx\": \"^7.0.0\",\n                \"@babel/plugin-transform-runtime\": \"^7.4.0\",\n                \"@babel/preset-env\": \"^7.0.0 < 7.4.0\",\n                \"@babel/runtime\": \"^7.0.0\",\n                \"@babel/runtime-corejs2\": \"^7.2.0\",\n                \"@vue/babel-preset-jsx\": \"^1.0.0\",\n                \"babel-plugin-dynamic-import-node\": \"^2.2.0\",\n                \"babel-plugin-module-resolver\": \"3.2.0\",\n                \"core-js\": \"^2.6.5\"\n            }\n        },\n        \"@vue/babel-preset-jsx\": {\n            \"version\": \"1.2.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/@vue/babel-preset-jsx/download/@vue/babel-preset-jsx-1.2.4.tgz?cache=0&sync_timestamp=1603806812399&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40vue%2Fbabel-preset-jsx%2Fdownload%2F%40vue%2Fbabel-preset-jsx-1.2.4.tgz\",\n            \"integrity\": \"sha1-kv6nnbbxOwHoDToAmeKSS9y+Toc=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@vue/babel-helper-vue-jsx-merge-props\": \"^1.2.1\",\n                \"@vue/babel-plugin-transform-vue-jsx\": \"^1.2.1\",\n                \"@vue/babel-sugar-composition-api-inject-h\": \"^1.2.1\",\n                \"@vue/babel-sugar-composition-api-render-instance\": \"^1.2.4\",\n                \"@vue/babel-sugar-functional-vue\": \"^1.2.2\",\n                \"@vue/babel-sugar-inject-h\": \"^1.2.2\",\n                \"@vue/babel-sugar-v-model\": \"^1.2.3\",\n                \"@vue/babel-sugar-v-on\": \"^1.2.3\"\n            }\n        },\n        \"@vue/babel-sugar-composition-api-inject-h\": {\n            \"version\": \"1.2.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/@vue/babel-sugar-composition-api-inject-h/download/@vue/babel-sugar-composition-api-inject-h-1.2.1.tgz?cache=0&sync_timestamp=1602851227623&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40vue%2Fbabel-sugar-composition-api-inject-h%2Fdownload%2F%40vue%2Fbabel-sugar-composition-api-inject-h-1.2.1.tgz\",\n            \"integrity\": \"sha1-BdbgxDJxDjdYKyvppgSbaJtvA+s=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/plugin-syntax-jsx\": \"^7.2.0\"\n            }\n        },\n        \"@vue/babel-sugar-composition-api-render-instance\": {\n            \"version\": \"1.2.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/@vue/babel-sugar-composition-api-render-instance/download/@vue/babel-sugar-composition-api-render-instance-1.2.4.tgz?cache=0&sync_timestamp=1603806817702&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40vue%2Fbabel-sugar-composition-api-render-instance%2Fdownload%2F%40vue%2Fbabel-sugar-composition-api-render-instance-1.2.4.tgz\",\n            \"integrity\": \"sha1-5MvGmXw0T6wnF4WteikyXFHWjRk=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/plugin-syntax-jsx\": \"^7.2.0\"\n            }\n        },\n        \"@vue/babel-sugar-functional-vue\": {\n            \"version\": \"1.2.2\",\n            \"resolved\": \"https://registry.npm.taobao.org/@vue/babel-sugar-functional-vue/download/@vue/babel-sugar-functional-vue-1.2.2.tgz?cache=0&sync_timestamp=1602929602326&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40vue%2Fbabel-sugar-functional-vue%2Fdownload%2F%40vue%2Fbabel-sugar-functional-vue-1.2.2.tgz\",\n            \"integrity\": \"sha1-JnqayNeHyW7b8Dzj85LEnam9Jlg=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/plugin-syntax-jsx\": \"^7.2.0\"\n            }\n        },\n        \"@vue/babel-sugar-inject-h\": {\n            \"version\": \"1.2.2\",\n            \"resolved\": \"https://registry.npm.taobao.org/@vue/babel-sugar-inject-h/download/@vue/babel-sugar-inject-h-1.2.2.tgz?cache=0&sync_timestamp=1602929602128&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40vue%2Fbabel-sugar-inject-h%2Fdownload%2F%40vue%2Fbabel-sugar-inject-h-1.2.2.tgz\",\n            \"integrity\": \"sha1-1zjTyJM2fshJHcu2abAAkZKT46o=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/plugin-syntax-jsx\": \"^7.2.0\"\n            }\n        },\n        \"@vue/babel-sugar-v-model\": {\n            \"version\": \"1.2.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/@vue/babel-sugar-v-model/download/@vue/babel-sugar-v-model-1.2.3.tgz?cache=0&sync_timestamp=1603182448903&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40vue%2Fbabel-sugar-v-model%2Fdownload%2F%40vue%2Fbabel-sugar-v-model-1.2.3.tgz\",\n            \"integrity\": \"sha1-+h8pulHr8KoabDX6ZtU5vEWaGPI=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/plugin-syntax-jsx\": \"^7.2.0\",\n                \"@vue/babel-helper-vue-jsx-merge-props\": \"^1.2.1\",\n                \"@vue/babel-plugin-transform-vue-jsx\": \"^1.2.1\",\n                \"camelcase\": \"^5.0.0\",\n                \"html-tags\": \"^2.0.0\",\n                \"svg-tags\": \"^1.0.0\"\n            }\n        },\n        \"@vue/babel-sugar-v-on\": {\n            \"version\": \"1.2.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/@vue/babel-sugar-v-on/download/@vue/babel-sugar-v-on-1.2.3.tgz?cache=0&sync_timestamp=1603181829700&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2F%40vue%2Fbabel-sugar-v-on%2Fdownload%2F%40vue%2Fbabel-sugar-v-on-1.2.3.tgz\",\n            \"integrity\": \"sha1-NCNnF4WGpp85LwS/ujICHQKROto=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/plugin-syntax-jsx\": \"^7.2.0\",\n                \"@vue/babel-plugin-transform-vue-jsx\": \"^1.2.1\",\n                \"camelcase\": \"^5.0.0\"\n            }\n        },\n        \"@webassemblyjs/ast\": {\n            \"version\": \"1.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.11.1.tgz\",\n            \"integrity\": \"sha512-ukBh14qFLjxTQNTXocdyksN5QdM28S1CxHt2rdskFyL+xFV7VremuBLVbmCePj+URalXBENx/9Lm7lnhihtCSw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@webassemblyjs/helper-numbers\": \"1.11.1\",\n                \"@webassemblyjs/helper-wasm-bytecode\": \"1.11.1\"\n            }\n        },\n        \"@webassemblyjs/floating-point-hex-parser\": {\n            \"version\": \"1.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.11.1.tgz\",\n            \"integrity\": \"sha512-iGRfyc5Bq+NnNuX8b5hwBrRjzf0ocrJPI6GWFodBFzmFnyvrQ83SHKhmilCU/8Jv67i4GJZBMhEzltxzcNagtQ==\",\n            \"dev\": true\n        },\n        \"@webassemblyjs/helper-api-error\": {\n            \"version\": \"1.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/helper-api-error/-/helper-api-error-1.11.1.tgz\",\n            \"integrity\": \"sha512-RlhS8CBCXfRUR/cwo2ho9bkheSXG0+NwooXcc3PAILALf2QLdFyj7KGsKRbVc95hZnhnERon4kW/D3SZpp6Tcg==\",\n            \"dev\": true\n        },\n        \"@webassemblyjs/helper-buffer\": {\n            \"version\": \"1.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/helper-buffer/-/helper-buffer-1.11.1.tgz\",\n            \"integrity\": \"sha512-gwikF65aDNeeXa8JxXa2BAk+REjSyhrNC9ZwdT0f8jc4dQQeDQ7G4m0f2QCLPJiMTTO6wfDmRmj/pW0PsUvIcA==\",\n            \"dev\": true\n        },\n        \"@webassemblyjs/helper-numbers\": {\n            \"version\": \"1.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/helper-numbers/-/helper-numbers-1.11.1.tgz\",\n            \"integrity\": \"sha512-vDkbxiB8zfnPdNK9Rajcey5C0w+QJugEglN0of+kmO8l7lDb77AnlKYQF7aarZuCrv+l0UvqL+68gSDr3k9LPQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@webassemblyjs/floating-point-hex-parser\": \"1.11.1\",\n                \"@webassemblyjs/helper-api-error\": \"1.11.1\",\n                \"@xtuc/long\": \"4.2.2\"\n            }\n        },\n        \"@webassemblyjs/helper-wasm-bytecode\": {\n            \"version\": \"1.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/helper-wasm-bytecode/-/helper-wasm-bytecode-1.11.1.tgz\",\n            \"integrity\": \"sha512-PvpoOGiJwXeTrSf/qfudJhwlvDQxFgelbMqtq52WWiXC6Xgg1IREdngmPN3bs4RoO83PnL/nFrxucXj1+BX62Q==\",\n            \"dev\": true\n        },\n        \"@webassemblyjs/helper-wasm-section\": {\n            \"version\": \"1.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/helper-wasm-section/-/helper-wasm-section-1.11.1.tgz\",\n            \"integrity\": \"sha512-10P9No29rYX1j7F3EVPX3JvGPQPae+AomuSTPiF9eBQeChHI6iqjMIwR9JmOJXwpnn/oVGDk7I5IlskuMwU/pg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@webassemblyjs/ast\": \"1.11.1\",\n                \"@webassemblyjs/helper-buffer\": \"1.11.1\",\n                \"@webassemblyjs/helper-wasm-bytecode\": \"1.11.1\",\n                \"@webassemblyjs/wasm-gen\": \"1.11.1\"\n            }\n        },\n        \"@webassemblyjs/ieee754\": {\n            \"version\": \"1.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/ieee754/-/ieee754-1.11.1.tgz\",\n            \"integrity\": \"sha512-hJ87QIPtAMKbFq6CGTkZYJivEwZDbQUgYd3qKSadTNOhVY7p+gfP6Sr0lLRVTaG1JjFj+r3YchoqRYxNH3M0GQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@xtuc/ieee754\": \"^1.2.0\"\n            }\n        },\n        \"@webassemblyjs/leb128\": {\n            \"version\": \"1.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/leb128/-/leb128-1.11.1.tgz\",\n            \"integrity\": \"sha512-BJ2P0hNZ0u+Th1YZXJpzW6miwqQUGcIHT1G/sf72gLVD9DZ5AdYTqPNbHZh6K1M5VmKvFXwGSWZADz+qBWxeRw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@xtuc/long\": \"4.2.2\"\n            }\n        },\n        \"@webassemblyjs/utf8\": {\n            \"version\": \"1.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/utf8/-/utf8-1.11.1.tgz\",\n            \"integrity\": \"sha512-9kqcxAEdMhiwQkHpkNiorZzqpGrodQQ2IGrHHxCy+Ozng0ofyMA0lTqiLkVs1uzTRejX+/O0EOT7KxqVPuXosQ==\",\n            \"dev\": true\n        },\n        \"@webassemblyjs/wasm-edit\": {\n            \"version\": \"1.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/wasm-edit/-/wasm-edit-1.11.1.tgz\",\n            \"integrity\": \"sha512-g+RsupUC1aTHfR8CDgnsVRVZFJqdkFHpsHMfJuWQzWU3tvnLC07UqHICfP+4XyL2tnr1amvl1Sdp06TnYCmVkA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@webassemblyjs/ast\": \"1.11.1\",\n                \"@webassemblyjs/helper-buffer\": \"1.11.1\",\n                \"@webassemblyjs/helper-wasm-bytecode\": \"1.11.1\",\n                \"@webassemblyjs/helper-wasm-section\": \"1.11.1\",\n                \"@webassemblyjs/wasm-gen\": \"1.11.1\",\n                \"@webassemblyjs/wasm-opt\": \"1.11.1\",\n                \"@webassemblyjs/wasm-parser\": \"1.11.1\",\n                \"@webassemblyjs/wast-printer\": \"1.11.1\"\n            }\n        },\n        \"@webassemblyjs/wasm-gen\": {\n            \"version\": \"1.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/wasm-gen/-/wasm-gen-1.11.1.tgz\",\n            \"integrity\": \"sha512-F7QqKXwwNlMmsulj6+O7r4mmtAlCWfO/0HdgOxSklZfQcDu0TpLiD1mRt/zF25Bk59FIjEuGAIyn5ei4yMfLhA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@webassemblyjs/ast\": \"1.11.1\",\n                \"@webassemblyjs/helper-wasm-bytecode\": \"1.11.1\",\n                \"@webassemblyjs/ieee754\": \"1.11.1\",\n                \"@webassemblyjs/leb128\": \"1.11.1\",\n                \"@webassemblyjs/utf8\": \"1.11.1\"\n            }\n        },\n        \"@webassemblyjs/wasm-opt\": {\n            \"version\": \"1.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/wasm-opt/-/wasm-opt-1.11.1.tgz\",\n            \"integrity\": \"sha512-VqnkNqnZlU5EB64pp1l7hdm3hmQw7Vgqa0KF/KCNO9sIpI6Fk6brDEiX+iCOYrvMuBWDws0NkTOxYEb85XQHHw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@webassemblyjs/ast\": \"1.11.1\",\n                \"@webassemblyjs/helper-buffer\": \"1.11.1\",\n                \"@webassemblyjs/wasm-gen\": \"1.11.1\",\n                \"@webassemblyjs/wasm-parser\": \"1.11.1\"\n            }\n        },\n        \"@webassemblyjs/wasm-parser\": {\n            \"version\": \"1.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/wasm-parser/-/wasm-parser-1.11.1.tgz\",\n            \"integrity\": \"sha512-rrBujw+dJu32gYB7/Lup6UhdkPx9S9SnobZzRVL7VcBH9Bt9bCBLEuX/YXOOtBsOZ4NQrRykKhffRWHvigQvOA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@webassemblyjs/ast\": \"1.11.1\",\n                \"@webassemblyjs/helper-api-error\": \"1.11.1\",\n                \"@webassemblyjs/helper-wasm-bytecode\": \"1.11.1\",\n                \"@webassemblyjs/ieee754\": \"1.11.1\",\n                \"@webassemblyjs/leb128\": \"1.11.1\",\n                \"@webassemblyjs/utf8\": \"1.11.1\"\n            }\n        },\n        \"@webassemblyjs/wast-printer\": {\n            \"version\": \"1.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/@webassemblyjs/wast-printer/-/wast-printer-1.11.1.tgz\",\n            \"integrity\": \"sha512-IQboUWM4eKzWW+N/jij2sRatKMh99QEelo3Eb2q0qXkvPRISAj8Qxtmw5itwqK+TTkBuUIE45AxYPToqPtL5gg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@webassemblyjs/ast\": \"1.11.1\",\n                \"@xtuc/long\": \"4.2.2\"\n            }\n        },\n        \"@webpack-cli/configtest\": {\n            \"version\": \"1.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/@webpack-cli/configtest/-/configtest-1.1.0.tgz\",\n            \"integrity\": \"sha512-ttOkEkoalEHa7RaFYpM0ErK1xc4twg3Am9hfHhL7MVqlHebnkYd2wuI/ZqTDj0cVzZho6PdinY0phFZV3O0Mzg==\",\n            \"dev\": true\n        },\n        \"@webpack-cli/info\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/@webpack-cli/info/-/info-1.4.0.tgz\",\n            \"integrity\": \"sha512-F6b+Man0rwE4n0409FyAJHStYA5OIZERxmnUfLVwv0mc0V1wLad3V7jqRlMkgKBeAq07jUvglacNaa6g9lOpuw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"envinfo\": \"^7.7.3\"\n            }\n        },\n        \"@webpack-cli/serve\": {\n            \"version\": \"1.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/@webpack-cli/serve/-/serve-1.6.0.tgz\",\n            \"integrity\": \"sha512-ZkVeqEmRpBV2GHvjjUZqEai2PpUbuq8Bqd//vEYsp63J8WyexI8ppCqVS3Zs0QADf6aWuPdU+0XsPI647PVlQA==\",\n            \"dev\": true\n        },\n        \"@xtuc/ieee754\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/@xtuc/ieee754/-/ieee754-1.2.0.tgz\",\n            \"integrity\": \"sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA==\",\n            \"dev\": true\n        },\n        \"@xtuc/long\": {\n            \"version\": \"4.2.2\",\n            \"resolved\": \"https://registry.npmjs.org/@xtuc/long/-/long-4.2.2.tgz\",\n            \"integrity\": \"sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ==\",\n            \"dev\": true\n        },\n        \"JSONStream\": {\n            \"version\": \"1.3.5\",\n            \"resolved\": \"https://registry.npmjs.org/JSONStream/-/JSONStream-1.3.5.tgz\",\n            \"integrity\": \"sha512-E+iruNOY8VV9s4JEbe1aNEm6MiszPRr/UfcHMz0TQh1BXSxHK+ASV1R6W4HpjBhSeS+54PIsAMCBmwD06LLsqQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"jsonparse\": \"^1.2.0\",\n                \"through\": \">=2.2.7 <3\"\n            }\n        },\n        \"accepts\": {\n            \"version\": \"1.3.7\",\n            \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.7.tgz\",\n            \"integrity\": \"sha512-Il80Qs2WjYlJIBNzNkK6KYqlVMTbZLXgHx2oT0pU/fjRHyEp+PEfEPY0R3WCwAGVOtauxh1hOxNgIf5bv7dQpA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"mime-types\": \"~2.1.24\",\n                \"negotiator\": \"0.6.2\"\n            }\n        },\n        \"acorn\": {\n            \"version\": \"8.5.0\",\n            \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-8.5.0.tgz\",\n            \"integrity\": \"sha512-yXbYeFy+jUuYd3/CDcg2NkIYE991XYX/bje7LmjJigUciaeO1JR4XxXgCIV1/Zc/dRuFEyw1L0pbA+qynJkW5Q==\",\n            \"dev\": true\n        },\n        \"acorn-import-assertions\": {\n            \"version\": \"1.8.0\",\n            \"resolved\": \"https://registry.npmjs.org/acorn-import-assertions/-/acorn-import-assertions-1.8.0.tgz\",\n            \"integrity\": \"sha512-m7VZ3jwz4eK6A4Vtt8Ew1/mNbP24u0FhdyfA7fSvnJR6LMdfOYnmuIrrJAgrYfYJ10F/otaHTtrtrtmHdMNzEw==\",\n            \"dev\": true\n        },\n        \"add-stream\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/add-stream/-/add-stream-1.0.0.tgz\",\n            \"integrity\": \"sha1-anmQQ3ynNtXhKI25K9MmbV9csqo=\",\n            \"dev\": true\n        },\n        \"adjust-sourcemap-loader\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/adjust-sourcemap-loader/-/adjust-sourcemap-loader-4.0.0.tgz\",\n            \"integrity\": \"sha512-OXwN5b9pCUXNQHJpwwD2qP40byEmSgzj8B4ydSN0uMNYWiFmJ6x6KwUllMmfk8Rwu/HJDFR7U8ubsWBoN0Xp0A==\",\n            \"dev\": true,\n            \"requires\": {\n                \"loader-utils\": \"^2.0.0\",\n                \"regex-parser\": \"^2.2.11\"\n            },\n            \"dependencies\": {\n                \"loader-utils\": {\n                    \"version\": \"2.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/loader-utils/-/loader-utils-2.0.0.tgz\",\n                    \"integrity\": \"sha512-rP4F0h2RaWSvPEkD7BLDFQnvSf+nK+wr3ESUjNTyAGobqrijmW92zc+SO6d4p4B1wh7+B/Jg1mkQe5NYUEHtHQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"big.js\": \"^5.2.2\",\n                        \"emojis-list\": \"^3.0.0\",\n                        \"json5\": \"^2.1.2\"\n                    }\n                }\n            }\n        },\n        \"aggregate-error\": {\n            \"version\": \"3.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/aggregate-error/-/aggregate-error-3.1.0.tgz\",\n            \"integrity\": \"sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"clean-stack\": \"^2.0.0\",\n                \"indent-string\": \"^4.0.0\"\n            }\n        },\n        \"ajv\": {\n            \"version\": \"6.12.6\",\n            \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz\",\n            \"integrity\": \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"fast-deep-equal\": \"^3.1.1\",\n                \"fast-json-stable-stringify\": \"^2.0.0\",\n                \"json-schema-traverse\": \"^0.4.1\",\n                \"uri-js\": \"^4.2.2\"\n            }\n        },\n        \"ajv-keywords\": {\n            \"version\": \"3.5.2\",\n            \"resolved\": \"https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-3.5.2.tgz\",\n            \"integrity\": \"sha512-5p6WTN0DdTGVQk6VjcEju19IgaHudalcfabD7yhDGeA6bcQnmL+CpveLJq/3hvfwd1aof6L386Ougkx6RfyMIQ==\",\n            \"dev\": true\n        },\n        \"alphanum-sort\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/alphanum-sort/-/alphanum-sort-1.0.2.tgz\",\n            \"integrity\": \"sha1-l6ERlkmyEa0zaR2fn0hqjsn74KM=\",\n            \"dev\": true\n        },\n        \"ansi-escapes\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/ansi-escapes/download/ansi-escapes-1.4.0.tgz\",\n            \"integrity\": \"sha1-06ioOzGapneTZisT52HHkRQiMG4=\",\n            \"dev\": true\n        },\n        \"ansi-html-community\": {\n            \"version\": \"0.0.8\",\n            \"resolved\": \"https://registry.npmjs.org/ansi-html-community/-/ansi-html-community-0.0.8.tgz\",\n            \"integrity\": \"sha512-1APHAyr3+PCamwNw3bXCPp4HFLONZt/yIH0sZp0/469KWNTEy+qN5jQ3GVX6DMZ1UXAi34yVwtTeaG/HpBuuzw==\",\n            \"dev\": true\n        },\n        \"ansi-regex\": {\n            \"version\": \"2.1.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/ansi-regex/download/ansi-regex-2.1.1.tgz?cache=0&sync_timestamp=1570188570027&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fansi-regex%2Fdownload%2Fansi-regex-2.1.1.tgz\",\n            \"integrity\": \"sha1-w7M6te42DYbg5ijwRorn7yfWVN8=\"\n        },\n        \"ansi-styles\": {\n            \"version\": \"3.2.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/ansi-styles/download/ansi-styles-3.2.1.tgz?cache=0&sync_timestamp=1601839122515&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fansi-styles%2Fdownload%2Fansi-styles-3.2.1.tgz\",\n            \"integrity\": \"sha1-QfuyAkPlCxK+DwS43tvwdSDOhB0=\",\n            \"dev\": true,\n            \"requires\": {\n                \"color-convert\": \"^1.9.0\"\n            }\n        },\n        \"anymatch\": {\n            \"version\": \"3.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.2.tgz\",\n            \"integrity\": \"sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"normalize-path\": \"^3.0.0\",\n                \"picomatch\": \"^2.0.4\"\n            }\n        },\n        \"argparse\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n            \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\"\n        },\n        \"array-flatten\": {\n            \"version\": \"2.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-2.1.2.tgz\",\n            \"integrity\": \"sha512-hNfzcOV8W4NdualtqBFPyVO+54DSJuZGY9qT4pRroB6S9e3iiido2ISIC5h9R2sPJ8H3FHCIiEnsv1lPXO3KtQ==\",\n            \"dev\": true\n        },\n        \"array-ify\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/array-ify/-/array-ify-1.0.0.tgz\",\n            \"integrity\": \"sha1-nlKHYrSpBmrRY6aWKjZEGOlibs4=\",\n            \"dev\": true\n        },\n        \"array-union\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz\",\n            \"integrity\": \"sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==\",\n            \"dev\": true\n        },\n        \"arrify\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz\",\n            \"integrity\": \"sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0=\",\n            \"dev\": true\n        },\n        \"asn1.js\": {\n            \"version\": \"5.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/asn1.js/-/asn1.js-5.4.1.tgz\",\n            \"integrity\": \"sha512-+I//4cYPccV8LdmBLiX8CYvf9Sp3vQsrqu2QNXRcrbiWvcx/UdlFiqUJJzxRQxgsZmvhXhn4cSKeSmoFjVdupA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"bn.js\": \"^4.0.0\",\n                \"inherits\": \"^2.0.1\",\n                \"minimalistic-assert\": \"^1.0.0\",\n                \"safer-buffer\": \"^2.1.0\"\n            },\n            \"dependencies\": {\n                \"bn.js\": {\n                    \"version\": \"4.12.0\",\n                    \"resolved\": \"https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz\",\n                    \"integrity\": \"sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"assert\": {\n            \"version\": \"1.5.0\",\n            \"resolved\": \"https://registry.npmjs.org/assert/-/assert-1.5.0.tgz\",\n            \"integrity\": \"sha512-EDsgawzwoun2CZkCgtxJbv392v4nbk9XDD06zI+kQYoBM/3RBWLlEyJARDOmhAAosBjWACEkKL6S+lIZtcAubA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"object-assign\": \"^4.1.1\",\n                \"util\": \"0.10.3\"\n            },\n            \"dependencies\": {\n                \"inherits\": {\n                    \"version\": \"2.0.1\",\n                    \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz\",\n                    \"integrity\": \"sha1-sX0I0ya0Qj5Wjv9xn5GwscvfafE=\",\n                    \"dev\": true\n                },\n                \"util\": {\n                    \"version\": \"0.10.3\",\n                    \"resolved\": \"https://registry.npmjs.org/util/-/util-0.10.3.tgz\",\n                    \"integrity\": \"sha1-evsa/lCAUkZInj23/g7TeTNqwPk=\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"inherits\": \"2.0.1\"\n                    }\n                }\n            }\n        },\n        \"async\": {\n            \"version\": \"2.6.3\",\n            \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.3.tgz\",\n            \"integrity\": \"sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"lodash\": \"^4.17.14\"\n            }\n        },\n        \"autoprefixer\": {\n            \"version\": \"10.3.7\",\n            \"resolved\": \"https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.3.7.tgz\",\n            \"integrity\": \"sha512-EmGpu0nnQVmMhX8ROoJ7Mx8mKYPlcUHuxkwrRYEYMz85lu7H09v8w6R1P0JPdn/hKU32GjpLBFEOuIlDWCRWvg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"browserslist\": \"^4.17.3\",\n                \"caniuse-lite\": \"^1.0.30001264\",\n                \"fraction.js\": \"^4.1.1\",\n                \"normalize-range\": \"^0.1.2\",\n                \"picocolors\": \"^0.2.1\",\n                \"postcss-value-parser\": \"^4.1.0\"\n            },\n            \"dependencies\": {\n                \"browserslist\": {\n                    \"version\": \"4.17.3\",\n                    \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.17.3.tgz\",\n                    \"integrity\": \"sha512-59IqHJV5VGdcJZ+GZ2hU5n4Kv3YiASzW6Xk5g9tf5a/MAzGeFwgGWU39fVzNIOVcgB3+Gp+kiQu0HEfTVU/3VQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"caniuse-lite\": \"^1.0.30001264\",\n                        \"electron-to-chromium\": \"^1.3.857\",\n                        \"escalade\": \"^3.1.1\",\n                        \"node-releases\": \"^1.1.77\",\n                        \"picocolors\": \"^0.2.1\"\n                    }\n                },\n                \"caniuse-lite\": {\n                    \"version\": \"1.0.30001265\",\n                    \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001265.tgz\",\n                    \"integrity\": \"sha512-YzBnspggWV5hep1m9Z6sZVLOt7vrju8xWooFAgN6BA5qvy98qPAPb7vNUzypFaoh2pb3vlfzbDO8tB57UPGbtw==\",\n                    \"dev\": true\n                },\n                \"electron-to-chromium\": {\n                    \"version\": \"1.3.865\",\n                    \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.865.tgz\",\n                    \"integrity\": \"sha512-okGcCKfihgGlaROMFNPQ6eaU3bk9Xa68rLYSnVD2PyIqM5B/vyQoXCpB3p1HI3AXio097ROVBlSO4JZVilUWuA==\",\n                    \"dev\": true\n                },\n                \"node-releases\": {\n                    \"version\": \"1.1.77\",\n                    \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-1.1.77.tgz\",\n                    \"integrity\": \"sha512-rB1DUFUNAN4Gn9keO2K1efO35IDK7yKHCdCaIMvFO7yUYmmZYeDjnGKle26G4rwj+LKRQpjyUUvMkPglwGCYNQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"axios\": {\n            \"version\": \"0.22.0\",\n            \"resolved\": \"https://registry.npmjs.org/axios/-/axios-0.22.0.tgz\",\n            \"integrity\": \"sha512-Z0U3uhqQeg1oNcihswf4ZD57O3NrR1+ZXhxaROaWpDmsDTx7T2HNBV2ulBtie2hwJptu8UvgnJoK+BIqdzh/1w==\",\n            \"requires\": {\n                \"follow-redirects\": \"^1.14.4\"\n            },\n            \"dependencies\": {\n                \"follow-redirects\": {\n                    \"version\": \"1.14.4\",\n                    \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.4.tgz\",\n                    \"integrity\": \"sha512-zwGkiSXC1MUJG/qmeIFH2HBJx9u0V46QGUe3YR1fXG8bXQxq7fLj0RjLZQ5nubr9qNJUZrH+xUcwXEoXNpfS+g==\"\n                }\n            }\n        },\n        \"babel-code-frame\": {\n            \"version\": \"6.26.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/babel-code-frame/download/babel-code-frame-6.26.0.tgz\",\n            \"integrity\": \"sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=\",\n            \"requires\": {\n                \"chalk\": \"^1.1.3\",\n                \"esutils\": \"^2.0.2\",\n                \"js-tokens\": \"^3.0.2\"\n            },\n            \"dependencies\": {\n                \"ansi-styles\": {\n                    \"version\": \"2.2.1\",\n                    \"resolved\": \"https://registry.npm.taobao.org/ansi-styles/download/ansi-styles-2.2.1.tgz?cache=0&sync_timestamp=1601839122515&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fansi-styles%2Fdownload%2Fansi-styles-2.2.1.tgz\",\n                    \"integrity\": \"sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=\"\n                },\n                \"chalk\": {\n                    \"version\": \"1.1.3\",\n                    \"resolved\": \"https://registry.npm.taobao.org/chalk/download/chalk-1.1.3.tgz?cache=0&sync_timestamp=1591687000046&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fchalk%2Fdownload%2Fchalk-1.1.3.tgz\",\n                    \"integrity\": \"sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=\",\n                    \"requires\": {\n                        \"ansi-styles\": \"^2.2.1\",\n                        \"escape-string-regexp\": \"^1.0.2\",\n                        \"has-ansi\": \"^2.0.0\",\n                        \"strip-ansi\": \"^3.0.0\",\n                        \"supports-color\": \"^2.0.0\"\n                    }\n                },\n                \"js-tokens\": {\n                    \"version\": \"3.0.2\",\n                    \"resolved\": \"https://registry.npm.taobao.org/js-tokens/download/js-tokens-3.0.2.tgz\",\n                    \"integrity\": \"sha1-mGbfOVECEw449/mWvOtlRDIJwls=\"\n                },\n                \"supports-color\": {\n                    \"version\": \"2.0.0\",\n                    \"resolved\": \"https://registry.npm.taobao.org/supports-color/download/supports-color-2.0.0.tgz?cache=0&sync_timestamp=1598611730985&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fsupports-color%2Fdownload%2Fsupports-color-2.0.0.tgz\",\n                    \"integrity\": \"sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=\"\n                }\n            }\n        },\n        \"babel-helper-function-name\": {\n            \"version\": \"6.24.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/babel-helper-function-name/download/babel-helper-function-name-6.24.1.tgz\",\n            \"integrity\": \"sha1-00dbjAPtmCQqJbSDUasYOZ01gKk=\",\n            \"requires\": {\n                \"babel-helper-get-function-arity\": \"^6.24.1\",\n                \"babel-runtime\": \"^6.22.0\",\n                \"babel-template\": \"^6.24.1\",\n                \"babel-traverse\": \"^6.24.1\",\n                \"babel-types\": \"^6.24.1\"\n            }\n        },\n        \"babel-helper-get-function-arity\": {\n            \"version\": \"6.24.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/babel-helper-get-function-arity/download/babel-helper-get-function-arity-6.24.1.tgz\",\n            \"integrity\": \"sha1-j3eCqpNAfEHTqlCQj4mwMbG2hT0=\",\n            \"requires\": {\n                \"babel-runtime\": \"^6.22.0\",\n                \"babel-types\": \"^6.24.1\"\n            }\n        },\n        \"babel-loader\": {\n            \"version\": \"8.2.2\",\n            \"resolved\": \"https://registry.npmjs.org/babel-loader/-/babel-loader-8.2.2.tgz\",\n            \"integrity\": \"sha512-JvTd0/D889PQBtUXJ2PXaKU/pjZDMtHA9V2ecm+eNRmmBCMR09a+fmpGTNwnJtFmFl5Ei7Vy47LjBb+L0wQ99g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"find-cache-dir\": \"^3.3.1\",\n                \"loader-utils\": \"^1.4.0\",\n                \"make-dir\": \"^3.1.0\",\n                \"schema-utils\": \"^2.6.5\"\n            }\n        },\n        \"babel-messages\": {\n            \"version\": \"6.23.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/babel-messages/download/babel-messages-6.23.0.tgz\",\n            \"integrity\": \"sha1-8830cDhYA1sqKVHG7F7fbGLyYw4=\",\n            \"requires\": {\n                \"babel-runtime\": \"^6.22.0\"\n            }\n        },\n        \"babel-plugin-dynamic-import-node\": {\n            \"version\": \"2.3.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/babel-plugin-dynamic-import-node/download/babel-plugin-dynamic-import-node-2.3.3.tgz\",\n            \"integrity\": \"sha1-hP2hnJduxcbe/vV/lCez3vZuF6M=\",\n            \"dev\": true,\n            \"requires\": {\n                \"object.assign\": \"^4.1.0\"\n            }\n        },\n        \"babel-plugin-module-resolver\": {\n            \"version\": \"3.2.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/babel-plugin-module-resolver/download/babel-plugin-module-resolver-3.2.0.tgz\",\n            \"integrity\": \"sha1-3fpeMB47mqEthSqZefGLN4gf9ac=\",\n            \"dev\": true,\n            \"requires\": {\n                \"find-babel-config\": \"^1.1.0\",\n                \"glob\": \"^7.1.2\",\n                \"pkg-up\": \"^2.0.0\",\n                \"reselect\": \"^3.0.1\",\n                \"resolve\": \"^1.4.0\"\n            }\n        },\n        \"babel-plugin-polyfill-corejs2\": {\n            \"version\": \"0.2.2\",\n            \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.2.2.tgz\",\n            \"integrity\": \"sha512-kISrENsJ0z5dNPq5eRvcctITNHYXWOA4DUZRFYCz3jYCcvTb/A546LIddmoGNMVYg2U38OyFeNosQwI9ENTqIQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/compat-data\": \"^7.13.11\",\n                \"@babel/helper-define-polyfill-provider\": \"^0.2.2\",\n                \"semver\": \"^6.1.1\"\n            },\n            \"dependencies\": {\n                \"semver\": {\n                    \"version\": \"6.3.0\",\n                    \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.0.tgz\",\n                    \"integrity\": \"sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"babel-plugin-polyfill-corejs3\": {\n            \"version\": \"0.2.5\",\n            \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.2.5.tgz\",\n            \"integrity\": \"sha512-ninF5MQNwAX9Z7c9ED+H2pGt1mXdP4TqzlHKyPIYmJIYz0N+++uwdM7RnJukklhzJ54Q84vA4ZJkgs7lu5vqcw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-define-polyfill-provider\": \"^0.2.2\",\n                \"core-js-compat\": \"^3.16.2\"\n            }\n        },\n        \"babel-plugin-polyfill-regenerator\": {\n            \"version\": \"0.2.2\",\n            \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.2.2.tgz\",\n            \"integrity\": \"sha512-Goy5ghsc21HgPDFtzRkSirpZVW35meGoTmTOb2bxqdl60ghub4xOidgNTHaZfQ2FaxQsKmwvXtOAkcIS4SMBWg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/helper-define-polyfill-provider\": \"^0.2.2\"\n            }\n        },\n        \"babel-plugin-syntax-class-properties\": {\n            \"version\": \"6.13.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/babel-plugin-syntax-class-properties/download/babel-plugin-syntax-class-properties-6.13.0.tgz\",\n            \"integrity\": \"sha1-1+sjt5oxf4VDlixQW4J8fWysJ94=\"\n        },\n        \"babel-plugin-transform-class-properties\": {\n            \"version\": \"6.24.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/babel-plugin-transform-class-properties/download/babel-plugin-transform-class-properties-6.24.1.tgz\",\n            \"integrity\": \"sha1-anl2PqYdM9NvN7YRqp3vgagbRqw=\",\n            \"requires\": {\n                \"babel-helper-function-name\": \"^6.24.1\",\n                \"babel-plugin-syntax-class-properties\": \"^6.8.0\",\n                \"babel-runtime\": \"^6.22.0\",\n                \"babel-template\": \"^6.24.1\"\n            }\n        },\n        \"babel-polyfill\": {\n            \"version\": \"6.23.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/babel-polyfill/download/babel-polyfill-6.23.0.tgz\",\n            \"integrity\": \"sha1-g2TKYt+Or7gwSZ9pkXdGbDsDSZ0=\",\n            \"dev\": true,\n            \"requires\": {\n                \"babel-runtime\": \"^6.22.0\",\n                \"core-js\": \"^2.4.0\",\n                \"regenerator-runtime\": \"^0.10.0\"\n            },\n            \"dependencies\": {\n                \"regenerator-runtime\": {\n                    \"version\": \"0.10.5\",\n                    \"resolved\": \"https://registry.npm.taobao.org/regenerator-runtime/download/regenerator-runtime-0.10.5.tgz?cache=0&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fregenerator-runtime%2Fdownload%2Fregenerator-runtime-0.10.5.tgz\",\n                    \"integrity\": \"sha1-M2w+/BIgrc7dosn6tntaeVWjNlg=\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"babel-runtime\": {\n            \"version\": \"6.26.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/babel-runtime/download/babel-runtime-6.26.0.tgz\",\n            \"integrity\": \"sha1-llxwWGaOgrVde/4E/yM3vItWR/4=\",\n            \"requires\": {\n                \"core-js\": \"^2.4.0\",\n                \"regenerator-runtime\": \"^0.11.0\"\n            },\n            \"dependencies\": {\n                \"regenerator-runtime\": {\n                    \"version\": \"0.11.1\",\n                    \"resolved\": \"https://registry.npm.taobao.org/regenerator-runtime/download/regenerator-runtime-0.11.1.tgz?cache=0&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fregenerator-runtime%2Fdownload%2Fregenerator-runtime-0.11.1.tgz\",\n                    \"integrity\": \"sha1-vgWtf5v30i4Fb5cmzuUBf78Z4uk=\"\n                }\n            }\n        },\n        \"babel-template\": {\n            \"version\": \"6.26.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/babel-template/download/babel-template-6.26.0.tgz\",\n            \"integrity\": \"sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=\",\n            \"requires\": {\n                \"babel-runtime\": \"^6.26.0\",\n                \"babel-traverse\": \"^6.26.0\",\n                \"babel-types\": \"^6.26.0\",\n                \"babylon\": \"^6.18.0\",\n                \"lodash\": \"^4.17.4\"\n            }\n        },\n        \"babel-traverse\": {\n            \"version\": \"6.26.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/babel-traverse/download/babel-traverse-6.26.0.tgz\",\n            \"integrity\": \"sha1-RqnL1+3MYsjlwGTi0tjQ9ANXZu4=\",\n            \"requires\": {\n                \"babel-code-frame\": \"^6.26.0\",\n                \"babel-messages\": \"^6.23.0\",\n                \"babel-runtime\": \"^6.26.0\",\n                \"babel-types\": \"^6.26.0\",\n                \"babylon\": \"^6.18.0\",\n                \"debug\": \"^2.6.8\",\n                \"globals\": \"^9.18.0\",\n                \"invariant\": \"^2.2.2\",\n                \"lodash\": \"^4.17.4\"\n            },\n            \"dependencies\": {\n                \"debug\": {\n                    \"version\": \"2.6.9\",\n                    \"resolved\": \"https://registry.npm.taobao.org/debug/download/debug-2.6.9.tgz?cache=0&sync_timestamp=1600502871403&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fdebug%2Fdownload%2Fdebug-2.6.9.tgz\",\n                    \"integrity\": \"sha1-XRKFFd8TT/Mn6QpMk/Tgd6U2NB8=\",\n                    \"requires\": {\n                        \"ms\": \"2.0.0\"\n                    }\n                },\n                \"globals\": {\n                    \"version\": \"9.18.0\",\n                    \"resolved\": \"https://registry.npm.taobao.org/globals/download/globals-9.18.0.tgz?cache=0&sync_timestamp=1603666827709&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fglobals%2Fdownload%2Fglobals-9.18.0.tgz\",\n                    \"integrity\": \"sha1-qjiWs+abSH8X4x7SFD1pqOMMLYo=\"\n                }\n            }\n        },\n        \"babel-types\": {\n            \"version\": \"6.26.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/babel-types/download/babel-types-6.26.0.tgz\",\n            \"integrity\": \"sha1-o7Bz+Uq0nrb6Vc1lInozQ4BjJJc=\",\n            \"requires\": {\n                \"babel-runtime\": \"^6.26.0\",\n                \"esutils\": \"^2.0.2\",\n                \"lodash\": \"^4.17.4\",\n                \"to-fast-properties\": \"^1.0.3\"\n            },\n            \"dependencies\": {\n                \"to-fast-properties\": {\n                    \"version\": \"1.0.3\",\n                    \"resolved\": \"https://registry.npm.taobao.org/to-fast-properties/download/to-fast-properties-1.0.3.tgz\",\n                    \"integrity\": \"sha1-uDVx+k2MJbguIxsG46MFXeTKGkc=\"\n                }\n            }\n        },\n        \"babylon\": {\n            \"version\": \"6.18.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/babylon/download/babylon-6.18.0.tgz\",\n            \"integrity\": \"sha1-ry87iPpvXB5MY00aD46sT1WzleM=\"\n        },\n        \"balanced-match\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/balanced-match/download/balanced-match-1.0.0.tgz\",\n            \"integrity\": \"sha1-ibTRmasr7kneFk6gK4nORi1xt2c=\",\n            \"dev\": true\n        },\n        \"base64-js\": {\n            \"version\": \"1.5.1\",\n            \"resolved\": \"https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz\",\n            \"integrity\": \"sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==\",\n            \"dev\": true\n        },\n        \"batch\": {\n            \"version\": \"0.6.1\",\n            \"resolved\": \"https://registry.npmjs.org/batch/-/batch-0.6.1.tgz\",\n            \"integrity\": \"sha1-3DQxT05nkxgJP8dgJyUl+UvyXBY=\",\n            \"dev\": true\n        },\n        \"batch-processor\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/batch-processor/download/batch-processor-1.0.0.tgz\",\n            \"integrity\": \"sha1-dclcMrdI4IUNEMKxaPa9vpiRrOg=\"\n        },\n        \"big.js\": {\n            \"version\": \"5.2.2\",\n            \"resolved\": \"https://registry.npm.taobao.org/big.js/download/big.js-5.2.2.tgz\",\n            \"integrity\": \"sha1-ZfCvOC9Xi83HQr2cKB6cstd2gyg=\",\n            \"dev\": true\n        },\n        \"binary-extensions\": {\n            \"version\": \"2.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz\",\n            \"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\n            \"dev\": true\n        },\n        \"bn.js\": {\n            \"version\": \"5.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/bn.js/-/bn.js-5.2.0.tgz\",\n            \"integrity\": \"sha512-D7iWRBvnZE8ecXiLj/9wbxH7Tk79fAh8IHaTNq1RWRixsS02W+5qS+iE9yq6RYl0asXx5tw0bLhmT5pIfbSquw==\",\n            \"dev\": true\n        },\n        \"body-parser\": {\n            \"version\": \"1.19.0\",\n            \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.19.0.tgz\",\n            \"integrity\": \"sha512-dhEPs72UPbDnAQJ9ZKMNTP6ptJaionhP5cBb541nXPlW60Jepo9RV/a4fX4XWW9CuFNK22krhrj1+rgzifNCsw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"bytes\": \"3.1.0\",\n                \"content-type\": \"~1.0.4\",\n                \"debug\": \"2.6.9\",\n                \"depd\": \"~1.1.2\",\n                \"http-errors\": \"1.7.2\",\n                \"iconv-lite\": \"0.4.24\",\n                \"on-finished\": \"~2.3.0\",\n                \"qs\": \"6.7.0\",\n                \"raw-body\": \"2.4.0\",\n                \"type-is\": \"~1.6.17\"\n            },\n            \"dependencies\": {\n                \"bytes\": {\n                    \"version\": \"3.1.0\",\n                    \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.0.tgz\",\n                    \"integrity\": \"sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbzwv8f+wZcVzfVTI2Dg==\",\n                    \"dev\": true\n                },\n                \"debug\": {\n                    \"version\": \"2.6.9\",\n                    \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n                    \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ms\": \"2.0.0\"\n                    }\n                }\n            }\n        },\n        \"bonjour\": {\n            \"version\": \"3.5.0\",\n            \"resolved\": \"https://registry.npmjs.org/bonjour/-/bonjour-3.5.0.tgz\",\n            \"integrity\": \"sha1-jokKGD2O6aI5OzhExpGkK897yfU=\",\n            \"dev\": true,\n            \"requires\": {\n                \"array-flatten\": \"^2.1.0\",\n                \"deep-equal\": \"^1.0.1\",\n                \"dns-equal\": \"^1.0.0\",\n                \"dns-txt\": \"^2.0.2\",\n                \"multicast-dns\": \"^6.0.1\",\n                \"multicast-dns-service-types\": \"^1.1.0\"\n            }\n        },\n        \"boolbase\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz\",\n            \"integrity\": \"sha1-aN/1++YMUes3cl6p4+0xDcwed24=\",\n            \"dev\": true\n        },\n        \"bootstrap-sass\": {\n            \"version\": \"3.4.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/bootstrap-sass/download/bootstrap-sass-3.4.1.tgz\",\n            \"integrity\": \"sha1-aEPHOxwligrFyyzG9vUoW2ZKjpo=\"\n        },\n        \"brace-expansion\": {\n            \"version\": \"1.1.11\",\n            \"resolved\": \"https://registry.npm.taobao.org/brace-expansion/download/brace-expansion-1.1.11.tgz?cache=0&sync_timestamp=1601898189928&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fbrace-expansion%2Fdownload%2Fbrace-expansion-1.1.11.tgz\",\n            \"integrity\": \"sha1-PH/L9SnYcibz0vUrlm/1Jx60Qd0=\",\n            \"dev\": true,\n            \"requires\": {\n                \"balanced-match\": \"^1.0.0\",\n                \"concat-map\": \"0.0.1\"\n            }\n        },\n        \"braces\": {\n            \"version\": \"3.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.2.tgz\",\n            \"integrity\": \"sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==\",\n            \"dev\": true,\n            \"requires\": {\n                \"fill-range\": \"^7.0.1\"\n            }\n        },\n        \"brorand\": {\n            \"version\": \"1.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/brorand/-/brorand-1.1.0.tgz\",\n            \"integrity\": \"sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8=\",\n            \"dev\": true\n        },\n        \"browserify-aes\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/browserify-aes/-/browserify-aes-1.2.0.tgz\",\n            \"integrity\": \"sha512-+7CHXqGuspUn/Sl5aO7Ea0xWGAtETPXNSAjHo48JfLdPWcMng33Xe4znFvQweqc/uzk5zSOI3H52CYnjCfb5hA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"buffer-xor\": \"^1.0.3\",\n                \"cipher-base\": \"^1.0.0\",\n                \"create-hash\": \"^1.1.0\",\n                \"evp_bytestokey\": \"^1.0.3\",\n                \"inherits\": \"^2.0.1\",\n                \"safe-buffer\": \"^5.0.1\"\n            }\n        },\n        \"browserify-cipher\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/browserify-cipher/-/browserify-cipher-1.0.1.tgz\",\n            \"integrity\": \"sha512-sPhkz0ARKbf4rRQt2hTpAHqn47X3llLkUGn+xEJzLjwY8LRs2p0v7ljvI5EyoRO/mexrNunNECisZs+gw2zz1w==\",\n            \"dev\": true,\n            \"requires\": {\n                \"browserify-aes\": \"^1.0.4\",\n                \"browserify-des\": \"^1.0.0\",\n                \"evp_bytestokey\": \"^1.0.0\"\n            }\n        },\n        \"browserify-des\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/browserify-des/-/browserify-des-1.0.2.tgz\",\n            \"integrity\": \"sha512-BioO1xf3hFwz4kc6iBhI3ieDFompMhrMlnDFC4/0/vd5MokpuAc3R+LYbwTA9A5Yc9pq9UYPqffKpW2ObuwX5A==\",\n            \"dev\": true,\n            \"requires\": {\n                \"cipher-base\": \"^1.0.1\",\n                \"des.js\": \"^1.0.0\",\n                \"inherits\": \"^2.0.1\",\n                \"safe-buffer\": \"^5.1.2\"\n            }\n        },\n        \"browserify-rsa\": {\n            \"version\": \"4.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/browserify-rsa/-/browserify-rsa-4.1.0.tgz\",\n            \"integrity\": \"sha512-AdEER0Hkspgno2aR97SAf6vi0y0k8NuOpGnVH3O99rcA5Q6sh8QxcngtHuJ6uXwnfAXNM4Gn1Gb7/MV1+Ymbog==\",\n            \"dev\": true,\n            \"requires\": {\n                \"bn.js\": \"^5.0.0\",\n                \"randombytes\": \"^2.0.1\"\n            }\n        },\n        \"browserify-sign\": {\n            \"version\": \"4.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/browserify-sign/-/browserify-sign-4.2.1.tgz\",\n            \"integrity\": \"sha512-/vrA5fguVAKKAVTNJjgSm1tRQDHUU6DbwO9IROu/0WAzC8PKhucDSh18J0RMvVeHAn5puMd+QHC2erPRNf8lmg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"bn.js\": \"^5.1.1\",\n                \"browserify-rsa\": \"^4.0.1\",\n                \"create-hash\": \"^1.2.0\",\n                \"create-hmac\": \"^1.1.7\",\n                \"elliptic\": \"^6.5.3\",\n                \"inherits\": \"^2.0.4\",\n                \"parse-asn1\": \"^5.1.5\",\n                \"readable-stream\": \"^3.6.0\",\n                \"safe-buffer\": \"^5.2.0\"\n            },\n            \"dependencies\": {\n                \"safe-buffer\": {\n                    \"version\": \"5.2.1\",\n                    \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n                    \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"browserify-zlib\": {\n            \"version\": \"0.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/browserify-zlib/-/browserify-zlib-0.2.0.tgz\",\n            \"integrity\": \"sha512-Z942RysHXmJrhqk88FmKBVq/v5tqmSkDz7p54G/MGyjMnCFFnC79XWNbg+Vta8W6Wb2qtSZTSxIGkJrRpCFEiA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"pako\": \"~1.0.5\"\n            }\n        },\n        \"browserslist\": {\n            \"version\": \"4.14.6\",\n            \"resolved\": \"https://registry.npm.taobao.org/browserslist/download/browserslist-4.14.6.tgz?cache=0&sync_timestamp=1604243608493&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fbrowserslist%2Fdownload%2Fbrowserslist-4.14.6.tgz\",\n            \"integrity\": \"sha1-l3AqnCEuDGtq/vrZE9OhU440hFc=\",\n            \"dev\": true,\n            \"requires\": {\n                \"caniuse-lite\": \"^1.0.30001154\",\n                \"electron-to-chromium\": \"^1.3.585\",\n                \"escalade\": \"^3.1.1\",\n                \"node-releases\": \"^1.1.65\"\n            }\n        },\n        \"buffer\": {\n            \"version\": \"4.9.2\",\n            \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-4.9.2.tgz\",\n            \"integrity\": \"sha512-xq+q3SRMOxGivLhBNaUdC64hDTQwejJ+H0T/NB1XMtTVEwNTrfFF3gAxiyW0Bu/xWEGhjVKgUcMhCrUy2+uCWg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"base64-js\": \"^1.0.2\",\n                \"ieee754\": \"^1.1.4\",\n                \"isarray\": \"^1.0.0\"\n            }\n        },\n        \"buffer-from\": {\n            \"version\": \"1.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz\",\n            \"integrity\": \"sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==\",\n            \"dev\": true\n        },\n        \"buffer-indexof\": {\n            \"version\": \"1.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/buffer-indexof/-/buffer-indexof-1.1.1.tgz\",\n            \"integrity\": \"sha512-4/rOEg86jivtPTeOUUT61jJO1Ya1TrR/OkqCSZDyq84WJh3LuuiphBYJN+fm5xufIk4XAFcEwte/8WzC8If/1g==\",\n            \"dev\": true\n        },\n        \"buffer-xor\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/buffer-xor/-/buffer-xor-1.0.3.tgz\",\n            \"integrity\": \"sha1-JuYe0UIvtw3ULm42cp7VHYVf6Nk=\",\n            \"dev\": true\n        },\n        \"builtin-status-codes\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/builtin-status-codes/-/builtin-status-codes-3.0.0.tgz\",\n            \"integrity\": \"sha1-hZgoeOIbmOHGZCXgPQF0eI9Wnug=\",\n            \"dev\": true\n        },\n        \"bytes\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz\",\n            \"integrity\": \"sha1-0ygVQE1olpn4Wk6k+odV3ROpYEg=\",\n            \"dev\": true\n        },\n        \"call-bind\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/call-bind/download/call-bind-1.0.0.tgz\",\n            \"integrity\": \"sha1-JBJwVLs/m9y0sfuCQYGGBy93uM4=\",\n            \"dev\": true,\n            \"requires\": {\n                \"function-bind\": \"^1.1.1\",\n                \"get-intrinsic\": \"^1.0.0\"\n            }\n        },\n        \"callsites\": {\n            \"version\": \"3.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz\",\n            \"integrity\": \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\",\n            \"dev\": true\n        },\n        \"camel-case\": {\n            \"version\": \"4.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/camel-case/-/camel-case-4.1.2.tgz\",\n            \"integrity\": \"sha512-gxGWBrTT1JuMx6R+o5PTXMmUnhnVzLQ9SNutD4YqKtI6ap897t3tKECYla6gCWEkplXnlNybEkZg9GEGxKFCgw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"pascal-case\": \"^3.1.2\",\n                \"tslib\": \"^2.0.3\"\n            }\n        },\n        \"camelcase\": {\n            \"version\": \"5.3.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/camelcase/download/camelcase-5.3.1.tgz?cache=0&sync_timestamp=1603921882890&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fcamelcase%2Fdownload%2Fcamelcase-5.3.1.tgz\",\n            \"integrity\": \"sha1-48mzFWnhBoEd8kL3FXJaH0xJQyA=\",\n            \"dev\": true\n        },\n        \"camelcase-keys\": {\n            \"version\": \"6.2.2\",\n            \"resolved\": \"https://registry.npmjs.org/camelcase-keys/-/camelcase-keys-6.2.2.tgz\",\n            \"integrity\": \"sha512-YrwaA0vEKazPBkn0ipTiMpSajYDSe+KjQfrjhcBMxJt/znbvlHd8Pw/Vamaz5EB4Wfhs3SUR3Z9mwRu/P3s3Yg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"camelcase\": \"^5.3.1\",\n                \"map-obj\": \"^4.0.0\",\n                \"quick-lru\": \"^4.0.1\"\n            }\n        },\n        \"caniuse-api\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/caniuse-api/-/caniuse-api-3.0.0.tgz\",\n            \"integrity\": \"sha512-bsTwuIg/BZZK/vreVTYYbSWoe2F+71P7K5QGEX+pT250DZbfU1MQ5prOKpPR+LL6uWKK3KMwMCAS74QB3Um1uw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"browserslist\": \"^4.0.0\",\n                \"caniuse-lite\": \"^1.0.0\",\n                \"lodash.memoize\": \"^4.1.2\",\n                \"lodash.uniq\": \"^4.5.0\"\n            }\n        },\n        \"caniuse-lite\": {\n            \"version\": \"1.0.30001154\",\n            \"resolved\": \"https://registry.npm.taobao.org/caniuse-lite/download/caniuse-lite-1.0.30001154.tgz?cache=0&sync_timestamp=1604002180601&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fcaniuse-lite%2Fdownload%2Fcaniuse-lite-1.0.30001154.tgz\",\n            \"integrity\": \"sha1-87vCRc5V5MHNIPpzGwl4gBgafxc=\",\n            \"dev\": true\n        },\n        \"chalk\": {\n            \"version\": \"2.4.2\",\n            \"resolved\": \"https://registry.npm.taobao.org/chalk/download/chalk-2.4.2.tgz?cache=0&sync_timestamp=1591687000046&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fchalk%2Fdownload%2Fchalk-2.4.2.tgz\",\n            \"integrity\": \"sha1-zUJUFnelQzPPVBpJEIwUMrRMlCQ=\",\n            \"dev\": true,\n            \"requires\": {\n                \"ansi-styles\": \"^3.2.1\",\n                \"escape-string-regexp\": \"^1.0.5\",\n                \"supports-color\": \"^5.3.0\"\n            }\n        },\n        \"chardet\": {\n            \"version\": \"0.4.2\",\n            \"resolved\": \"https://registry.npm.taobao.org/chardet/download/chardet-0.4.2.tgz?cache=0&sync_timestamp=1601032519509&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fchardet%2Fdownload%2Fchardet-0.4.2.tgz\",\n            \"integrity\": \"sha1-tUc7M9yXxCTl2Y3IfVXU2KKci/I=\",\n            \"dev\": true\n        },\n        \"charenc\": {\n            \"version\": \"0.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/charenc/-/charenc-0.0.2.tgz\",\n            \"integrity\": \"sha1-wKHS86cJLgN3S/qD8UwPxXkKhmc=\",\n            \"dev\": true\n        },\n        \"chart.js\": {\n            \"version\": \"3.5.1\",\n            \"resolved\": \"https://registry.npmjs.org/chart.js/-/chart.js-3.5.1.tgz\",\n            \"integrity\": \"sha512-m5kzt72I1WQ9LILwQC4syla/LD/N413RYv2Dx2nnTkRS9iv/ey1xLTt0DnPc/eWV4zI+BgEgDYBIzbQhZHc/PQ==\"\n        },\n        \"chokidar\": {\n            \"version\": \"3.5.2\",\n            \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.5.2.tgz\",\n            \"integrity\": \"sha512-ekGhOnNVPgT77r4K/U3GDhu+FQ2S8TnK/s2KbIGXi0SZWuwkZ2QNyfWdZW+TVfn84DpEP7rLeCt2UI6bJ8GwbQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"anymatch\": \"~3.1.2\",\n                \"braces\": \"~3.0.2\",\n                \"fsevents\": \"~2.3.2\",\n                \"glob-parent\": \"~5.1.2\",\n                \"is-binary-path\": \"~2.1.0\",\n                \"is-glob\": \"~4.0.1\",\n                \"normalize-path\": \"~3.0.0\",\n                \"readdirp\": \"~3.6.0\"\n            }\n        },\n        \"chrome-trace-event\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.3.tgz\",\n            \"integrity\": \"sha512-p3KULyQg4S7NIHixdwbGX+nFHkoBiA4YQmyWtjb8XngSKV124nJmRysgAeujbUVb15vh+RvFUfCPqU7rXk+hZg==\",\n            \"dev\": true\n        },\n        \"ci-info\": {\n            \"version\": \"3.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/ci-info/-/ci-info-3.2.0.tgz\",\n            \"integrity\": \"sha512-dVqRX7fLUm8J6FgHJ418XuIgDLZDkYcDFTeL6TA2gt5WlIZUQrrH6EZrNClwT/H0FateUsZkGIOPRrLbP+PR9A==\",\n            \"dev\": true\n        },\n        \"cipher-base\": {\n            \"version\": \"1.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz\",\n            \"integrity\": \"sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==\",\n            \"dev\": true,\n            \"requires\": {\n                \"inherits\": \"^2.0.1\",\n                \"safe-buffer\": \"^5.0.1\"\n            }\n        },\n        \"clean-css\": {\n            \"version\": \"5.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/clean-css/-/clean-css-5.2.1.tgz\",\n            \"integrity\": \"sha512-ooQCa1/70oRfVdUUGjKpbHuxgMgm8BsDT5EBqBGvPxMoRoGXf4PNx5mMnkjzJ9Ptx4vvmDdha0QVh86QtYIk1g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"source-map\": \"~0.6.0\"\n            },\n            \"dependencies\": {\n                \"source-map\": {\n                    \"version\": \"0.6.1\",\n                    \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n                    \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"clean-stack\": {\n            \"version\": \"2.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/clean-stack/-/clean-stack-2.2.0.tgz\",\n            \"integrity\": \"sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==\",\n            \"dev\": true\n        },\n        \"cli-cursor\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/cli-cursor/download/cli-cursor-2.1.0.tgz\",\n            \"integrity\": \"sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=\",\n            \"dev\": true,\n            \"requires\": {\n                \"restore-cursor\": \"^2.0.0\"\n            }\n        },\n        \"cli-table3\": {\n            \"version\": \"0.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/cli-table3/-/cli-table3-0.6.0.tgz\",\n            \"integrity\": \"sha512-gnB85c3MGC7Nm9I/FkiasNBOKjOiO1RNuXXarQms37q4QMpWdlbBgD/VnOStA2faG1dpXMv31RFApjX1/QdgWQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"colors\": \"^1.1.2\",\n                \"object-assign\": \"^4.1.0\",\n                \"string-width\": \"^4.2.0\"\n            },\n            \"dependencies\": {\n                \"ansi-regex\": {\n                    \"version\": \"5.0.1\",\n                    \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n                    \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n                    \"dev\": true\n                },\n                \"is-fullwidth-code-point\": {\n                    \"version\": \"3.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n                    \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n                    \"dev\": true\n                },\n                \"string-width\": {\n                    \"version\": \"4.2.3\",\n                    \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n                    \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"emoji-regex\": \"^8.0.0\",\n                        \"is-fullwidth-code-point\": \"^3.0.0\",\n                        \"strip-ansi\": \"^6.0.1\"\n                    }\n                },\n                \"strip-ansi\": {\n                    \"version\": \"6.0.1\",\n                    \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n                    \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ansi-regex\": \"^5.0.1\"\n                    }\n                }\n            }\n        },\n        \"cli-width\": {\n            \"version\": \"2.2.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/cli-width/download/cli-width-2.2.1.tgz\",\n            \"integrity\": \"sha1-sEM9C06chH7xiGik7xb9X8gnHEg=\",\n            \"dev\": true\n        },\n        \"cliui\": {\n            \"version\": \"7.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz\",\n            \"integrity\": \"sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"string-width\": \"^4.2.0\",\n                \"strip-ansi\": \"^6.0.0\",\n                \"wrap-ansi\": \"^7.0.0\"\n            },\n            \"dependencies\": {\n                \"ansi-regex\": {\n                    \"version\": \"5.0.1\",\n                    \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n                    \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n                    \"dev\": true\n                },\n                \"is-fullwidth-code-point\": {\n                    \"version\": \"3.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n                    \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n                    \"dev\": true\n                },\n                \"string-width\": {\n                    \"version\": \"4.2.3\",\n                    \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n                    \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"emoji-regex\": \"^8.0.0\",\n                        \"is-fullwidth-code-point\": \"^3.0.0\",\n                        \"strip-ansi\": \"^6.0.1\"\n                    }\n                },\n                \"strip-ansi\": {\n                    \"version\": \"6.0.1\",\n                    \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n                    \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ansi-regex\": \"^5.0.1\"\n                    }\n                }\n            }\n        },\n        \"clone-deep\": {\n            \"version\": \"4.0.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/clone-deep/download/clone-deep-4.0.1.tgz\",\n            \"integrity\": \"sha1-wZ/Zvbv4WUK0/ZechNz31fB8I4c=\",\n            \"dev\": true,\n            \"requires\": {\n                \"is-plain-object\": \"^2.0.4\",\n                \"kind-of\": \"^6.0.2\",\n                \"shallow-clone\": \"^3.0.0\"\n            }\n        },\n        \"collect.js\": {\n            \"version\": \"4.29.0\",\n            \"resolved\": \"https://registry.npmjs.org/collect.js/-/collect.js-4.29.0.tgz\",\n            \"integrity\": \"sha512-yhgGYEsLEcqnLT1NmRlN1+1euoz9SDhxQ4QyDhWYsKoWsg7252PKA5++dWaDs8mdFxbkmXDXQUaHXI9J2eTPkQ==\",\n            \"dev\": true\n        },\n        \"color-convert\": {\n            \"version\": \"1.9.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/color-convert/download/color-convert-1.9.3.tgz\",\n            \"integrity\": \"sha1-u3GFBpDh8TZWfeYp0tVHHe2kweg=\",\n            \"dev\": true,\n            \"requires\": {\n                \"color-name\": \"1.1.3\"\n            },\n            \"dependencies\": {\n                \"color-name\": {\n                    \"version\": \"1.1.3\",\n                    \"resolved\": \"https://registry.npm.taobao.org/color-name/download/color-name-1.1.3.tgz\",\n                    \"integrity\": \"sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"color-name\": {\n            \"version\": \"1.1.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/color-name/download/color-name-1.1.4.tgz\",\n            \"integrity\": \"sha1-wqCah6y95pVD3m9j+jmVyCbFNqI=\",\n            \"dev\": true\n        },\n        \"colord\": {\n            \"version\": \"2.8.0\",\n            \"resolved\": \"https://registry.npmjs.org/colord/-/colord-2.8.0.tgz\",\n            \"integrity\": \"sha512-kNkVV4KFta3TYQv0bzs4xNwLaeag261pxgzGQSh4cQ1rEhYjcTJfFRP0SDlbhLONg0eSoLzrDd79PosjbltufA==\",\n            \"dev\": true\n        },\n        \"colorette\": {\n            \"version\": \"2.0.16\",\n            \"resolved\": \"https://registry.npmjs.org/colorette/-/colorette-2.0.16.tgz\",\n            \"integrity\": \"sha512-hUewv7oMjCp+wkBv5Rm0v87eJhq4woh5rSR+42YSQJKecCqgIqNkZ6lAlQms/BwHPJA5NKMRlpxPRv0n8HQW6g==\",\n            \"dev\": true\n        },\n        \"colors\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/colors/-/colors-1.4.0.tgz\",\n            \"integrity\": \"sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"commander\": {\n            \"version\": \"7.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/commander/-/commander-7.2.0.tgz\",\n            \"integrity\": \"sha512-QrWXB+ZQSVPmIWIhtEO9H+gwHaMGYiF5ChvoJ+K9ZGHG/sVsa6yiesAD1GC/x46sET00Xlwo1u49RVVVzvcSkw==\",\n            \"dev\": true\n        },\n        \"commondir\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz\",\n            \"integrity\": \"sha1-3dgA2gxmEnOTzKWVDqloo6rxJTs=\",\n            \"dev\": true\n        },\n        \"compare-func\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/compare-func/-/compare-func-2.0.0.tgz\",\n            \"integrity\": \"sha512-zHig5N+tPWARooBnb0Zx1MFcdfpyJrfTJ3Y5L+IFvUm8rM74hHz66z0gw0x4tijh5CorKkKUCnW82R2vmpeCRA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"array-ify\": \"^1.0.0\",\n                \"dot-prop\": \"^5.1.0\"\n            }\n        },\n        \"compressible\": {\n            \"version\": \"2.0.18\",\n            \"resolved\": \"https://registry.npmjs.org/compressible/-/compressible-2.0.18.tgz\",\n            \"integrity\": \"sha512-AF3r7P5dWxL8MxyITRMlORQNaOA2IkAFaTr4k7BUumjPtRpGDTZpl0Pb1XCO6JeDCBdp126Cgs9sMxqSjgYyRg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"mime-db\": \">= 1.43.0 < 2\"\n            }\n        },\n        \"compression\": {\n            \"version\": \"1.7.4\",\n            \"resolved\": \"https://registry.npmjs.org/compression/-/compression-1.7.4.tgz\",\n            \"integrity\": \"sha512-jaSIDzP9pZVS4ZfQ+TzvtiWhdpFhE2RDHz8QJkpX9SIpLq88VueF5jJw6t+6CUQcAoA6t+x89MLrWAqpfDE8iQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"accepts\": \"~1.3.5\",\n                \"bytes\": \"3.0.0\",\n                \"compressible\": \"~2.0.16\",\n                \"debug\": \"2.6.9\",\n                \"on-headers\": \"~1.0.2\",\n                \"safe-buffer\": \"5.1.2\",\n                \"vary\": \"~1.1.2\"\n            },\n            \"dependencies\": {\n                \"debug\": {\n                    \"version\": \"2.6.9\",\n                    \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n                    \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ms\": \"2.0.0\"\n                    }\n                }\n            }\n        },\n        \"concat\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/concat/-/concat-1.0.3.tgz\",\n            \"integrity\": \"sha1-QPM1MInWVGdpXLGIa0Xt1jfYzKg=\",\n            \"dev\": true,\n            \"requires\": {\n                \"commander\": \"^2.9.0\"\n            },\n            \"dependencies\": {\n                \"commander\": {\n                    \"version\": \"2.20.3\",\n                    \"resolved\": \"https://registry.npmjs.org/commander/-/commander-2.20.3.tgz\",\n                    \"integrity\": \"sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"concat-map\": {\n            \"version\": \"0.0.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/concat-map/download/concat-map-0.0.1.tgz\",\n            \"integrity\": \"sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\",\n            \"dev\": true\n        },\n        \"connect-history-api-fallback\": {\n            \"version\": \"1.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/connect-history-api-fallback/-/connect-history-api-fallback-1.6.0.tgz\",\n            \"integrity\": \"sha512-e54B99q/OUoH64zYYRf3HBP5z24G38h5D3qXu23JGRoigpX5Ss4r9ZnDk3g0Z8uQC2x2lPaJ+UlWBc1ZWBWdLg==\",\n            \"dev\": true\n        },\n        \"consola\": {\n            \"version\": \"2.15.3\",\n            \"resolved\": \"https://registry.npmjs.org/consola/-/consola-2.15.3.tgz\",\n            \"integrity\": \"sha512-9vAdYbHj6x2fLKC4+oPH0kFzY/orMZyG2Aj+kNylHxKGJ/Ed4dpNyAQYwJOdqO4zdM7XpVHmyejQDcQHrnuXbw==\",\n            \"dev\": true\n        },\n        \"console-browserify\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/console-browserify/-/console-browserify-1.2.0.tgz\",\n            \"integrity\": \"sha512-ZMkYO/LkF17QvCPqM0gxw8yUzigAOZOSWSHg91FH6orS7vcEj5dVZTidN2fQ14yBSdg97RqhSNwLUXInd52OTA==\",\n            \"dev\": true\n        },\n        \"constants-browserify\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/constants-browserify/-/constants-browserify-1.0.0.tgz\",\n            \"integrity\": \"sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U=\",\n            \"dev\": true\n        },\n        \"content-disposition\": {\n            \"version\": \"0.5.3\",\n            \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.3.tgz\",\n            \"integrity\": \"sha512-ExO0774ikEObIAEV9kDo50o+79VCUdEB6n6lzKgGwupcVeRlhrj3qGAfwq8G6uBJjkqLrhT0qEYFcWng8z1z0g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"safe-buffer\": \"5.1.2\"\n            }\n        },\n        \"content-type\": {\n            \"version\": \"1.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz\",\n            \"integrity\": \"sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA==\",\n            \"dev\": true\n        },\n        \"conventional-changelog\": {\n            \"version\": \"3.1.24\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-3.1.24.tgz\",\n            \"integrity\": \"sha512-ed6k8PO00UVvhExYohroVPXcOJ/K1N0/drJHx/faTH37OIZthlecuLIRX/T6uOp682CAoVoFpu+sSEaeuH6Asg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"conventional-changelog-angular\": \"^5.0.12\",\n                \"conventional-changelog-atom\": \"^2.0.8\",\n                \"conventional-changelog-codemirror\": \"^2.0.8\",\n                \"conventional-changelog-conventionalcommits\": \"^4.5.0\",\n                \"conventional-changelog-core\": \"^4.2.1\",\n                \"conventional-changelog-ember\": \"^2.0.9\",\n                \"conventional-changelog-eslint\": \"^3.0.9\",\n                \"conventional-changelog-express\": \"^2.0.6\",\n                \"conventional-changelog-jquery\": \"^3.0.11\",\n                \"conventional-changelog-jshint\": \"^2.0.9\",\n                \"conventional-changelog-preset-loader\": \"^2.3.4\"\n            }\n        },\n        \"conventional-changelog-angular\": {\n            \"version\": \"5.0.13\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-changelog-angular/-/conventional-changelog-angular-5.0.13.tgz\",\n            \"integrity\": \"sha512-i/gipMxs7s8L/QeuavPF2hLnJgH6pEZAttySB6aiQLWcX3puWDL3ACVmvBhJGxnAy52Qc15ua26BufY6KpmrVA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"compare-func\": \"^2.0.0\",\n                \"q\": \"^1.5.1\"\n            }\n        },\n        \"conventional-changelog-atom\": {\n            \"version\": \"2.0.8\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-changelog-atom/-/conventional-changelog-atom-2.0.8.tgz\",\n            \"integrity\": \"sha512-xo6v46icsFTK3bb7dY/8m2qvc8sZemRgdqLb/bjpBsH2UyOS8rKNTgcb5025Hri6IpANPApbXMg15QLb1LJpBw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"q\": \"^1.5.1\"\n            }\n        },\n        \"conventional-changelog-cli\": {\n            \"version\": \"2.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-changelog-cli/-/conventional-changelog-cli-2.1.1.tgz\",\n            \"integrity\": \"sha512-xMGQdKJ+4XFDDgfX5aK7UNFduvJMbvF5BB+g0OdVhA3rYdYyhctrIE2Al+WYdZeKTdg9YzMWF2iFPT8MupIwng==\",\n            \"dev\": true,\n            \"requires\": {\n                \"add-stream\": \"^1.0.0\",\n                \"conventional-changelog\": \"^3.1.24\",\n                \"lodash\": \"^4.17.15\",\n                \"meow\": \"^8.0.0\",\n                \"tempfile\": \"^3.0.0\"\n            }\n        },\n        \"conventional-changelog-codemirror\": {\n            \"version\": \"2.0.8\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-changelog-codemirror/-/conventional-changelog-codemirror-2.0.8.tgz\",\n            \"integrity\": \"sha512-z5DAsn3uj1Vfp7po3gpt2Boc+Bdwmw2++ZHa5Ak9k0UKsYAO5mH1UBTN0qSCuJZREIhX6WU4E1p3IW2oRCNzQw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"q\": \"^1.5.1\"\n            }\n        },\n        \"conventional-changelog-conventionalcommits\": {\n            \"version\": \"4.6.1\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-changelog-conventionalcommits/-/conventional-changelog-conventionalcommits-4.6.1.tgz\",\n            \"integrity\": \"sha512-lzWJpPZhbM1R0PIzkwzGBCnAkH5RKJzJfFQZcl/D+2lsJxAwGnDKBqn/F4C1RD31GJNn8NuKWQzAZDAVXPp2Mw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"compare-func\": \"^2.0.0\",\n                \"lodash\": \"^4.17.15\",\n                \"q\": \"^1.5.1\"\n            }\n        },\n        \"conventional-changelog-core\": {\n            \"version\": \"4.2.4\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-changelog-core/-/conventional-changelog-core-4.2.4.tgz\",\n            \"integrity\": \"sha512-gDVS+zVJHE2v4SLc6B0sLsPiloR0ygU7HaDW14aNJE1v4SlqJPILPl/aJC7YdtRE4CybBf8gDwObBvKha8Xlyg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"add-stream\": \"^1.0.0\",\n                \"conventional-changelog-writer\": \"^5.0.0\",\n                \"conventional-commits-parser\": \"^3.2.0\",\n                \"dateformat\": \"^3.0.0\",\n                \"get-pkg-repo\": \"^4.0.0\",\n                \"git-raw-commits\": \"^2.0.8\",\n                \"git-remote-origin-url\": \"^2.0.0\",\n                \"git-semver-tags\": \"^4.1.1\",\n                \"lodash\": \"^4.17.15\",\n                \"normalize-package-data\": \"^3.0.0\",\n                \"q\": \"^1.5.1\",\n                \"read-pkg\": \"^3.0.0\",\n                \"read-pkg-up\": \"^3.0.0\",\n                \"through2\": \"^4.0.0\"\n            }\n        },\n        \"conventional-changelog-ember\": {\n            \"version\": \"2.0.9\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-changelog-ember/-/conventional-changelog-ember-2.0.9.tgz\",\n            \"integrity\": \"sha512-ulzIReoZEvZCBDhcNYfDIsLTHzYHc7awh+eI44ZtV5cx6LVxLlVtEmcO+2/kGIHGtw+qVabJYjdI5cJOQgXh1A==\",\n            \"dev\": true,\n            \"requires\": {\n                \"q\": \"^1.5.1\"\n            }\n        },\n        \"conventional-changelog-eslint\": {\n            \"version\": \"3.0.9\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-changelog-eslint/-/conventional-changelog-eslint-3.0.9.tgz\",\n            \"integrity\": \"sha512-6NpUCMgU8qmWmyAMSZO5NrRd7rTgErjrm4VASam2u5jrZS0n38V7Y9CzTtLT2qwz5xEChDR4BduoWIr8TfwvXA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"q\": \"^1.5.1\"\n            }\n        },\n        \"conventional-changelog-express\": {\n            \"version\": \"2.0.6\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-changelog-express/-/conventional-changelog-express-2.0.6.tgz\",\n            \"integrity\": \"sha512-SDez2f3iVJw6V563O3pRtNwXtQaSmEfTCaTBPCqn0oG0mfkq0rX4hHBq5P7De2MncoRixrALj3u3oQsNK+Q0pQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"q\": \"^1.5.1\"\n            }\n        },\n        \"conventional-changelog-jquery\": {\n            \"version\": \"3.0.11\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-changelog-jquery/-/conventional-changelog-jquery-3.0.11.tgz\",\n            \"integrity\": \"sha512-x8AWz5/Td55F7+o/9LQ6cQIPwrCjfJQ5Zmfqi8thwUEKHstEn4kTIofXub7plf1xvFA2TqhZlq7fy5OmV6BOMw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"q\": \"^1.5.1\"\n            }\n        },\n        \"conventional-changelog-jshint\": {\n            \"version\": \"2.0.9\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-changelog-jshint/-/conventional-changelog-jshint-2.0.9.tgz\",\n            \"integrity\": \"sha512-wMLdaIzq6TNnMHMy31hql02OEQ8nCQfExw1SE0hYL5KvU+JCTuPaDO+7JiogGT2gJAxiUGATdtYYfh+nT+6riA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"compare-func\": \"^2.0.0\",\n                \"q\": \"^1.5.1\"\n            }\n        },\n        \"conventional-changelog-preset-loader\": {\n            \"version\": \"2.3.4\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-changelog-preset-loader/-/conventional-changelog-preset-loader-2.3.4.tgz\",\n            \"integrity\": \"sha512-GEKRWkrSAZeTq5+YjUZOYxdHq+ci4dNwHvpaBC3+ENalzFWuCWa9EZXSuZBpkr72sMdKB+1fyDV4takK1Lf58g==\",\n            \"dev\": true\n        },\n        \"conventional-changelog-writer\": {\n            \"version\": \"5.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-changelog-writer/-/conventional-changelog-writer-5.0.0.tgz\",\n            \"integrity\": \"sha512-HnDh9QHLNWfL6E1uHz6krZEQOgm8hN7z/m7tT16xwd802fwgMN0Wqd7AQYVkhpsjDUx/99oo+nGgvKF657XP5g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"conventional-commits-filter\": \"^2.0.7\",\n                \"dateformat\": \"^3.0.0\",\n                \"handlebars\": \"^4.7.6\",\n                \"json-stringify-safe\": \"^5.0.1\",\n                \"lodash\": \"^4.17.15\",\n                \"meow\": \"^8.0.0\",\n                \"semver\": \"^6.0.0\",\n                \"split\": \"^1.0.0\",\n                \"through2\": \"^4.0.0\"\n            },\n            \"dependencies\": {\n                \"semver\": {\n                    \"version\": \"6.3.0\",\n                    \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.0.tgz\",\n                    \"integrity\": \"sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"conventional-commits-filter\": {\n            \"version\": \"2.0.7\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-commits-filter/-/conventional-commits-filter-2.0.7.tgz\",\n            \"integrity\": \"sha512-ASS9SamOP4TbCClsRHxIHXRfcGCnIoQqkvAzCSbZzTFLfcTqJVugB0agRgsEELsqaeWgsXv513eS116wnlSSPA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"lodash.ismatch\": \"^4.4.0\",\n                \"modify-values\": \"^1.0.0\"\n            }\n        },\n        \"conventional-commits-parser\": {\n            \"version\": \"3.2.2\",\n            \"resolved\": \"https://registry.npmjs.org/conventional-commits-parser/-/conventional-commits-parser-3.2.2.tgz\",\n            \"integrity\": \"sha512-Jr9KAKgqAkwXMRHjxDwO/zOCDKod1XdAESHAGuJX38iZ7ZzVti/tvVoysO0suMsdAObp9NQ2rHSsSbnAqZ5f5g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"JSONStream\": \"^1.0.4\",\n                \"is-text-path\": \"^1.0.1\",\n                \"lodash\": \"^4.17.15\",\n                \"meow\": \"^8.0.0\",\n                \"split2\": \"^3.0.0\",\n                \"through2\": \"^4.0.0\"\n            }\n        },\n        \"convert-source-map\": {\n            \"version\": \"1.7.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/convert-source-map/download/convert-source-map-1.7.0.tgz\",\n            \"integrity\": \"sha1-F6LLiC1/d9NJBYXizmxSRCSjpEI=\",\n            \"dev\": true,\n            \"requires\": {\n                \"safe-buffer\": \"~5.1.1\"\n            }\n        },\n        \"cookie\": {\n            \"version\": \"0.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.4.0.tgz\",\n            \"integrity\": \"sha512-+Hp8fLp57wnUSt0tY0tHEXh4voZRDnoIrZPqlo3DPiI4y9lwg/jqx+1Om94/W6ZaPDOUbnjOt/99w66zk+l1Xg==\",\n            \"dev\": true\n        },\n        \"cookie-signature\": {\n            \"version\": \"1.0.6\",\n            \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\n            \"integrity\": \"sha1-4wOogrNCzD7oylE6eZmXNNqzriw=\",\n            \"dev\": true\n        },\n        \"core-js\": {\n            \"version\": \"2.6.11\",\n            \"resolved\": \"https://registry.npm.taobao.org/core-js/download/core-js-2.6.11.tgz?cache=0&sync_timestamp=1586450527243&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fcore-js%2Fdownload%2Fcore-js-2.6.11.tgz\",\n            \"integrity\": \"sha1-OIMUafmSK97Y7iHJ3EaYXgOZMIw=\"\n        },\n        \"core-js-compat\": {\n            \"version\": \"3.18.2\",\n            \"resolved\": \"https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.18.2.tgz\",\n            \"integrity\": \"sha512-25VJYCJtGjZwLguj7d66oiHfmnVw3TMOZ0zV8DyMJp/aeQ3OjR519iOOeck08HMyVVRAqXxafc2Hl+5QstJrsQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"browserslist\": \"^4.17.3\",\n                \"semver\": \"7.0.0\"\n            },\n            \"dependencies\": {\n                \"browserslist\": {\n                    \"version\": \"4.17.3\",\n                    \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.17.3.tgz\",\n                    \"integrity\": \"sha512-59IqHJV5VGdcJZ+GZ2hU5n4Kv3YiASzW6Xk5g9tf5a/MAzGeFwgGWU39fVzNIOVcgB3+Gp+kiQu0HEfTVU/3VQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"caniuse-lite\": \"^1.0.30001264\",\n                        \"electron-to-chromium\": \"^1.3.857\",\n                        \"escalade\": \"^3.1.1\",\n                        \"node-releases\": \"^1.1.77\",\n                        \"picocolors\": \"^0.2.1\"\n                    }\n                },\n                \"caniuse-lite\": {\n                    \"version\": \"1.0.30001265\",\n                    \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001265.tgz\",\n                    \"integrity\": \"sha512-YzBnspggWV5hep1m9Z6sZVLOt7vrju8xWooFAgN6BA5qvy98qPAPb7vNUzypFaoh2pb3vlfzbDO8tB57UPGbtw==\",\n                    \"dev\": true\n                },\n                \"electron-to-chromium\": {\n                    \"version\": \"1.3.865\",\n                    \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.865.tgz\",\n                    \"integrity\": \"sha512-okGcCKfihgGlaROMFNPQ6eaU3bk9Xa68rLYSnVD2PyIqM5B/vyQoXCpB3p1HI3AXio097ROVBlSO4JZVilUWuA==\",\n                    \"dev\": true\n                },\n                \"node-releases\": {\n                    \"version\": \"1.1.77\",\n                    \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-1.1.77.tgz\",\n                    \"integrity\": \"sha512-rB1DUFUNAN4Gn9keO2K1efO35IDK7yKHCdCaIMvFO7yUYmmZYeDjnGKle26G4rwj+LKRQpjyUUvMkPglwGCYNQ==\",\n                    \"dev\": true\n                },\n                \"semver\": {\n                    \"version\": \"7.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.0.0.tgz\",\n                    \"integrity\": \"sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"core-util-is\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npm.taobao.org/core-util-is/download/core-util-is-1.0.2.tgz\",\n            \"integrity\": \"sha1-tf1UIgqivFq1eqtxQMlAdUUDwac=\",\n            \"dev\": true\n        },\n        \"cosmiconfig\": {\n            \"version\": \"7.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-7.0.1.tgz\",\n            \"integrity\": \"sha512-a1YWNUV2HwGimB7dU2s1wUMurNKjpx60HxBB6xUM8Re+2s1g1IIfJvFR0/iCF+XHdE0GMTKTuLR32UQff4TEyQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/parse-json\": \"^4.0.0\",\n                \"import-fresh\": \"^3.2.1\",\n                \"parse-json\": \"^5.0.0\",\n                \"path-type\": \"^4.0.0\",\n                \"yaml\": \"^1.10.0\"\n            },\n            \"dependencies\": {\n                \"path-type\": {\n                    \"version\": \"4.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz\",\n                    \"integrity\": \"sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"create-ecdh\": {\n            \"version\": \"4.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/create-ecdh/-/create-ecdh-4.0.4.tgz\",\n            \"integrity\": \"sha512-mf+TCx8wWc9VpuxfP2ht0iSISLZnt0JgWlrOKZiNqyUZWnjIaCIVNQArMHnCZKfEYRg6IM7A+NeJoN8gf/Ws0A==\",\n            \"dev\": true,\n            \"requires\": {\n                \"bn.js\": \"^4.1.0\",\n                \"elliptic\": \"^6.5.3\"\n            },\n            \"dependencies\": {\n                \"bn.js\": {\n                    \"version\": \"4.12.0\",\n                    \"resolved\": \"https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz\",\n                    \"integrity\": \"sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"create-hash\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz\",\n            \"integrity\": \"sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"cipher-base\": \"^1.0.1\",\n                \"inherits\": \"^2.0.1\",\n                \"md5.js\": \"^1.3.4\",\n                \"ripemd160\": \"^2.0.1\",\n                \"sha.js\": \"^2.4.0\"\n            }\n        },\n        \"create-hmac\": {\n            \"version\": \"1.1.7\",\n            \"resolved\": \"https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz\",\n            \"integrity\": \"sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"cipher-base\": \"^1.0.3\",\n                \"create-hash\": \"^1.1.0\",\n                \"inherits\": \"^2.0.1\",\n                \"ripemd160\": \"^2.0.0\",\n                \"safe-buffer\": \"^5.0.1\",\n                \"sha.js\": \"^2.4.8\"\n            }\n        },\n        \"cross-env\": {\n            \"version\": \"7.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/cross-env/-/cross-env-7.0.3.tgz\",\n            \"integrity\": \"sha512-+/HKd6EgcQCJGh2PSjZuUitQBQynKor4wrFbRg4DtAgS1aWO+gU52xpH7M9ScGgXSYmAVS9bIJ8EzuaGw0oNAw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"cross-spawn\": \"^7.0.1\"\n            },\n            \"dependencies\": {\n                \"cross-spawn\": {\n                    \"version\": \"7.0.3\",\n                    \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\",\n                    \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"path-key\": \"^3.1.0\",\n                        \"shebang-command\": \"^2.0.0\",\n                        \"which\": \"^2.0.1\"\n                    }\n                },\n                \"path-key\": {\n                    \"version\": \"3.1.1\",\n                    \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n                    \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n                    \"dev\": true\n                },\n                \"shebang-command\": {\n                    \"version\": \"2.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n                    \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"shebang-regex\": \"^3.0.0\"\n                    }\n                },\n                \"shebang-regex\": {\n                    \"version\": \"3.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n                    \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n                    \"dev\": true\n                },\n                \"which\": {\n                    \"version\": \"2.0.2\",\n                    \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n                    \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"isexe\": \"^2.0.0\"\n                    }\n                }\n            }\n        },\n        \"cross-spawn\": {\n            \"version\": \"7.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\",\n            \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\",\n            \"dev\": true,\n            \"requires\": {\n                \"path-key\": \"^3.1.0\",\n                \"shebang-command\": \"^2.0.0\",\n                \"which\": \"^2.0.1\"\n            }\n        },\n        \"crypt\": {\n            \"version\": \"0.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/crypt/-/crypt-0.0.2.tgz\",\n            \"integrity\": \"sha1-iNf/fsDfuG9xPch7u0LQRNPmxBs=\",\n            \"dev\": true\n        },\n        \"crypto-browserify\": {\n            \"version\": \"3.12.0\",\n            \"resolved\": \"https://registry.npmjs.org/crypto-browserify/-/crypto-browserify-3.12.0.tgz\",\n            \"integrity\": \"sha512-fz4spIh+znjO2VjL+IdhEpRJ3YN6sMzITSBijk6FK2UvTqruSQW+/cCZTSNsMiZNvUeq0CqurF+dAbyiGOY6Wg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"browserify-cipher\": \"^1.0.0\",\n                \"browserify-sign\": \"^4.0.0\",\n                \"create-ecdh\": \"^4.0.0\",\n                \"create-hash\": \"^1.1.0\",\n                \"create-hmac\": \"^1.1.0\",\n                \"diffie-hellman\": \"^5.0.0\",\n                \"inherits\": \"^2.0.1\",\n                \"pbkdf2\": \"^3.0.3\",\n                \"public-encrypt\": \"^4.0.0\",\n                \"randombytes\": \"^2.0.0\",\n                \"randomfill\": \"^1.0.3\"\n            }\n        },\n        \"css-color-names\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/css-color-names/-/css-color-names-1.0.1.tgz\",\n            \"integrity\": \"sha512-/loXYOch1qU1biStIFsHH8SxTmOseh1IJqFvy8IujXOm1h+QjUdDhkzOrR5HG8K8mlxREj0yfi8ewCHx0eMxzA==\",\n            \"dev\": true\n        },\n        \"css-declaration-sorter\": {\n            \"version\": \"6.1.3\",\n            \"resolved\": \"https://registry.npmjs.org/css-declaration-sorter/-/css-declaration-sorter-6.1.3.tgz\",\n            \"integrity\": \"sha512-SvjQjNRZgh4ULK1LDJ2AduPKUKxIqmtU7ZAyi47BTV+M90Qvxr9AB6lKlLbDUfXqI9IQeYA8LbAsCZPpJEV3aA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"timsort\": \"^0.3.0\"\n            }\n        },\n        \"css-loader\": {\n            \"version\": \"5.2.7\",\n            \"resolved\": \"https://registry.npmjs.org/css-loader/-/css-loader-5.2.7.tgz\",\n            \"integrity\": \"sha512-Q7mOvpBNBG7YrVGMxRxcBJZFL75o+cH2abNASdibkj/fffYD8qWbInZrD0S9ccI6vZclF3DsHE7njGlLtaHbhg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"icss-utils\": \"^5.1.0\",\n                \"loader-utils\": \"^2.0.0\",\n                \"postcss\": \"^8.2.15\",\n                \"postcss-modules-extract-imports\": \"^3.0.0\",\n                \"postcss-modules-local-by-default\": \"^4.0.0\",\n                \"postcss-modules-scope\": \"^3.0.0\",\n                \"postcss-modules-values\": \"^4.0.0\",\n                \"postcss-value-parser\": \"^4.1.0\",\n                \"schema-utils\": \"^3.0.0\",\n                \"semver\": \"^7.3.5\"\n            },\n            \"dependencies\": {\n                \"loader-utils\": {\n                    \"version\": \"2.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/loader-utils/-/loader-utils-2.0.0.tgz\",\n                    \"integrity\": \"sha512-rP4F0h2RaWSvPEkD7BLDFQnvSf+nK+wr3ESUjNTyAGobqrijmW92zc+SO6d4p4B1wh7+B/Jg1mkQe5NYUEHtHQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"big.js\": \"^5.2.2\",\n                        \"emojis-list\": \"^3.0.0\",\n                        \"json5\": \"^2.1.2\"\n                    }\n                },\n                \"schema-utils\": {\n                    \"version\": \"3.1.1\",\n                    \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-3.1.1.tgz\",\n                    \"integrity\": \"sha512-Y5PQxS4ITlC+EahLuXaY86TXfR7Dc5lw294alXOq86JAHCihAIZfqv8nNCWvaEJvaC51uN9hbLGeV0cFBdH+Fw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@types/json-schema\": \"^7.0.8\",\n                        \"ajv\": \"^6.12.5\",\n                        \"ajv-keywords\": \"^3.5.2\"\n                    }\n                },\n                \"semver\": {\n                    \"version\": \"7.3.5\",\n                    \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.3.5.tgz\",\n                    \"integrity\": \"sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"lru-cache\": \"^6.0.0\"\n                    }\n                }\n            }\n        },\n        \"css-select\": {\n            \"version\": \"4.1.3\",\n            \"resolved\": \"https://registry.npmjs.org/css-select/-/css-select-4.1.3.tgz\",\n            \"integrity\": \"sha512-gT3wBNd9Nj49rAbmtFHj1cljIAOLYSX1nZ8CB7TBO3INYckygm5B7LISU/szY//YmdiSLbJvDLOx9VnMVpMBxA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"boolbase\": \"^1.0.0\",\n                \"css-what\": \"^5.0.0\",\n                \"domhandler\": \"^4.2.0\",\n                \"domutils\": \"^2.6.0\",\n                \"nth-check\": \"^2.0.0\"\n            }\n        },\n        \"css-tree\": {\n            \"version\": \"1.1.3\",\n            \"resolved\": \"https://registry.npmjs.org/css-tree/-/css-tree-1.1.3.tgz\",\n            \"integrity\": \"sha512-tRpdppF7TRazZrjJ6v3stzv93qxRcSsFmW6cX0Zm2NVKpxE1WV1HblnghVv9TreireHkqI/VDEsfolRF1p6y7Q==\",\n            \"dev\": true,\n            \"requires\": {\n                \"mdn-data\": \"2.0.14\",\n                \"source-map\": \"^0.6.1\"\n            },\n            \"dependencies\": {\n                \"source-map\": {\n                    \"version\": \"0.6.1\",\n                    \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n                    \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"css-what\": {\n            \"version\": \"5.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/css-what/-/css-what-5.1.0.tgz\",\n            \"integrity\": \"sha512-arSMRWIIFY0hV8pIxZMEfmMI47Wj3R/aWpZDDxWYCPEiOMv6tfOrnpDtgxBYPEQD4V0Y/958+1TdC3iWTFcUPw==\",\n            \"dev\": true\n        },\n        \"cssesc\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz\",\n            \"integrity\": \"sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==\",\n            \"dev\": true\n        },\n        \"cssnano\": {\n            \"version\": \"5.0.8\",\n            \"resolved\": \"https://registry.npmjs.org/cssnano/-/cssnano-5.0.8.tgz\",\n            \"integrity\": \"sha512-Lda7geZU0Yu+RZi2SGpjYuQz4HI4/1Y+BhdD0jL7NXAQ5larCzVn+PUGuZbDMYz904AXXCOgO5L1teSvgu7aFg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"cssnano-preset-default\": \"^5.1.4\",\n                \"is-resolvable\": \"^1.1.0\",\n                \"lilconfig\": \"^2.0.3\",\n                \"yaml\": \"^1.10.2\"\n            }\n        },\n        \"cssnano-preset-default\": {\n            \"version\": \"5.1.4\",\n            \"resolved\": \"https://registry.npmjs.org/cssnano-preset-default/-/cssnano-preset-default-5.1.4.tgz\",\n            \"integrity\": \"sha512-sPpQNDQBI3R/QsYxQvfB4mXeEcWuw0wGtKtmS5eg8wudyStYMgKOQT39G07EbW1LB56AOYrinRS9f0ig4Y3MhQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"css-declaration-sorter\": \"^6.0.3\",\n                \"cssnano-utils\": \"^2.0.1\",\n                \"postcss-calc\": \"^8.0.0\",\n                \"postcss-colormin\": \"^5.2.0\",\n                \"postcss-convert-values\": \"^5.0.1\",\n                \"postcss-discard-comments\": \"^5.0.1\",\n                \"postcss-discard-duplicates\": \"^5.0.1\",\n                \"postcss-discard-empty\": \"^5.0.1\",\n                \"postcss-discard-overridden\": \"^5.0.1\",\n                \"postcss-merge-longhand\": \"^5.0.2\",\n                \"postcss-merge-rules\": \"^5.0.2\",\n                \"postcss-minify-font-values\": \"^5.0.1\",\n                \"postcss-minify-gradients\": \"^5.0.2\",\n                \"postcss-minify-params\": \"^5.0.1\",\n                \"postcss-minify-selectors\": \"^5.1.0\",\n                \"postcss-normalize-charset\": \"^5.0.1\",\n                \"postcss-normalize-display-values\": \"^5.0.1\",\n                \"postcss-normalize-positions\": \"^5.0.1\",\n                \"postcss-normalize-repeat-style\": \"^5.0.1\",\n                \"postcss-normalize-string\": \"^5.0.1\",\n                \"postcss-normalize-timing-functions\": \"^5.0.1\",\n                \"postcss-normalize-unicode\": \"^5.0.1\",\n                \"postcss-normalize-url\": \"^5.0.2\",\n                \"postcss-normalize-whitespace\": \"^5.0.1\",\n                \"postcss-ordered-values\": \"^5.0.2\",\n                \"postcss-reduce-initial\": \"^5.0.1\",\n                \"postcss-reduce-transforms\": \"^5.0.1\",\n                \"postcss-svgo\": \"^5.0.2\",\n                \"postcss-unique-selectors\": \"^5.0.1\"\n            }\n        },\n        \"cssnano-utils\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/cssnano-utils/-/cssnano-utils-2.0.1.tgz\",\n            \"integrity\": \"sha512-i8vLRZTnEH9ubIyfdZCAdIdgnHAUeQeByEeQ2I7oTilvP9oHO6RScpeq3GsFUVqeB8uZgOQ9pw8utofNn32hhQ==\",\n            \"dev\": true\n        },\n        \"csso\": {\n            \"version\": \"4.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/csso/-/csso-4.2.0.tgz\",\n            \"integrity\": \"sha512-wvlcdIbf6pwKEk7vHj8/Bkc0B4ylXZruLvOgs9doS5eOsOpuodOV2zJChSpkp+pRpYQLQMeF04nr3Z68Sta9jA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"css-tree\": \"^1.1.2\"\n            }\n        },\n        \"d\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/d/download/d-1.0.1.tgz\",\n            \"integrity\": \"sha1-hpgJU3LVjb7jRv/Qxwk/mfj561o=\",\n            \"dev\": true,\n            \"requires\": {\n                \"es5-ext\": \"^0.10.50\",\n                \"type\": \"^1.0.1\"\n            }\n        },\n        \"dargs\": {\n            \"version\": \"7.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/dargs/-/dargs-7.0.0.tgz\",\n            \"integrity\": \"sha512-2iy1EkLdlBzQGvbweYRFxmFath8+K7+AKB0TlhHWkNuH+TmovaMH/Wp7V7R4u7f4SnX3OgLsU9t1NI9ioDnUpg==\",\n            \"dev\": true\n        },\n        \"dateformat\": {\n            \"version\": \"3.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/dateformat/-/dateformat-3.0.3.tgz\",\n            \"integrity\": \"sha512-jyCETtSl3VMZMWeRo7iY1FL19ges1t55hMo5yaam4Jrsm5EPL89UQkoQRyiI+Yf4k8r2ZpdngkV8hr1lIdjb3Q==\",\n            \"dev\": true\n        },\n        \"de-indent\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/de-indent/-/de-indent-1.0.2.tgz\",\n            \"integrity\": \"sha1-sgOOhG3DO6pXlhKNCAS0VbjB4h0=\",\n            \"dev\": true\n        },\n        \"debug\": {\n            \"version\": \"3.1.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/debug/download/debug-3.1.0.tgz?cache=0&sync_timestamp=1600502871403&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fdebug%2Fdownload%2Fdebug-3.1.0.tgz\",\n            \"integrity\": \"sha1-W7WgZyYotkFJVmuhaBnmFRjGcmE=\",\n            \"dev\": true,\n            \"requires\": {\n                \"ms\": \"2.0.0\"\n            }\n        },\n        \"decamelize\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz\",\n            \"integrity\": \"sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=\",\n            \"dev\": true\n        },\n        \"decamelize-keys\": {\n            \"version\": \"1.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/decamelize-keys/-/decamelize-keys-1.1.0.tgz\",\n            \"integrity\": \"sha1-0XGoeTMlKAfrPLYdwcFEXQeN8tk=\",\n            \"dev\": true,\n            \"requires\": {\n                \"decamelize\": \"^1.1.0\",\n                \"map-obj\": \"^1.0.0\"\n            },\n            \"dependencies\": {\n                \"map-obj\": {\n                    \"version\": \"1.0.1\",\n                    \"resolved\": \"https://registry.npmjs.org/map-obj/-/map-obj-1.0.1.tgz\",\n                    \"integrity\": \"sha1-2TPOuSBdgr3PSIb2dCvcK03qFG0=\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"deep-equal\": {\n            \"version\": \"1.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/deep-equal/-/deep-equal-1.1.1.tgz\",\n            \"integrity\": \"sha512-yd9c5AdiqVcR+JjcwUQb9DkhJc8ngNr0MahEBGvDiJw8puWab2yZlh+nkasOnZP+EGTAP6rRp2JzJhJZzvNF8g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"is-arguments\": \"^1.0.4\",\n                \"is-date-object\": \"^1.0.1\",\n                \"is-regex\": \"^1.0.4\",\n                \"object-is\": \"^1.0.1\",\n                \"object-keys\": \"^1.1.1\",\n                \"regexp.prototype.flags\": \"^1.2.0\"\n            }\n        },\n        \"default-gateway\": {\n            \"version\": \"6.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/default-gateway/-/default-gateway-6.0.3.tgz\",\n            \"integrity\": \"sha512-fwSOJsbbNzZ/CUFpqFBqYfYNLj1NbMPm8MMCIzHjC83iSJRBEGmDUxU+WP661BaBQImeC2yHwXtz+P/O9o+XEg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"execa\": \"^5.0.0\"\n            }\n        },\n        \"define-lazy-prop\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/define-lazy-prop/-/define-lazy-prop-2.0.0.tgz\",\n            \"integrity\": \"sha512-Ds09qNh8yw3khSjiJjiUInaGX9xlqZDY7JVryGxdxV7NPeuqQfplOpQ66yJFZut3jLa5zOwkXw1g9EI2uKh4Og==\",\n            \"dev\": true\n        },\n        \"define-properties\": {\n            \"version\": \"1.1.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/define-properties/download/define-properties-1.1.3.tgz\",\n            \"integrity\": \"sha1-z4jabL7ib+bbcJT2HYcMvYTO6fE=\",\n            \"dev\": true,\n            \"requires\": {\n                \"object-keys\": \"^1.0.12\"\n            }\n        },\n        \"del\": {\n            \"version\": \"6.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/del/-/del-6.0.0.tgz\",\n            \"integrity\": \"sha512-1shh9DQ23L16oXSZKB2JxpL7iMy2E0S9d517ptA1P8iw0alkPtQcrKH7ru31rYtKwF499HkTu+DRzq3TCKDFRQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"globby\": \"^11.0.1\",\n                \"graceful-fs\": \"^4.2.4\",\n                \"is-glob\": \"^4.0.1\",\n                \"is-path-cwd\": \"^2.2.0\",\n                \"is-path-inside\": \"^3.0.2\",\n                \"p-map\": \"^4.0.0\",\n                \"rimraf\": \"^3.0.2\",\n                \"slash\": \"^3.0.0\"\n            },\n            \"dependencies\": {\n                \"globby\": {\n                    \"version\": \"11.0.4\",\n                    \"resolved\": \"https://registry.npmjs.org/globby/-/globby-11.0.4.tgz\",\n                    \"integrity\": \"sha512-9O4MVG9ioZJ08ffbcyVYyLOJLk5JQ688pJ4eMGLpdWLHq/Wr1D9BlriLQyL0E+jbkuePVZXYFj47QM/v093wHg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"array-union\": \"^2.1.0\",\n                        \"dir-glob\": \"^3.0.1\",\n                        \"fast-glob\": \"^3.1.1\",\n                        \"ignore\": \"^5.1.4\",\n                        \"merge2\": \"^1.3.0\",\n                        \"slash\": \"^3.0.0\"\n                    }\n                }\n            }\n        },\n        \"depd\": {\n            \"version\": \"1.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/depd/-/depd-1.1.2.tgz\",\n            \"integrity\": \"sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=\",\n            \"dev\": true\n        },\n        \"des.js\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/des.js/-/des.js-1.0.1.tgz\",\n            \"integrity\": \"sha512-Q0I4pfFrv2VPd34/vfLrFOoRmlYj3OV50i7fskps1jZWK1kApMWWT9G6RRUeYedLcBDIhnSDaUvJMb3AhUlaEA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"inherits\": \"^2.0.1\",\n                \"minimalistic-assert\": \"^1.0.0\"\n            }\n        },\n        \"destroy\": {\n            \"version\": \"1.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz\",\n            \"integrity\": \"sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA=\",\n            \"dev\": true\n        },\n        \"detect-node\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/detect-node/-/detect-node-2.1.0.tgz\",\n            \"integrity\": \"sha512-T0NIuQpnTvFDATNuHN5roPwSBG83rFsuO+MXXH9/3N1eFbn4wcPjttvjMLEPWJ0RGUYgQE7cGgS3tNxbqCGM7g==\",\n            \"dev\": true\n        },\n        \"diffie-hellman\": {\n            \"version\": \"5.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/diffie-hellman/-/diffie-hellman-5.0.3.tgz\",\n            \"integrity\": \"sha512-kqag/Nl+f3GwyK25fhUMYj81BUOrZ9IuJsjIcDE5icNM9FJHAVm3VcUDxdLPoQtTuUylWm6ZIknYJwwaPxsUzg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"bn.js\": \"^4.1.0\",\n                \"miller-rabin\": \"^4.0.0\",\n                \"randombytes\": \"^2.0.0\"\n            },\n            \"dependencies\": {\n                \"bn.js\": {\n                    \"version\": \"4.12.0\",\n                    \"resolved\": \"https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz\",\n                    \"integrity\": \"sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"dir-glob\": {\n            \"version\": \"3.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz\",\n            \"integrity\": \"sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"path-type\": \"^4.0.0\"\n            },\n            \"dependencies\": {\n                \"path-type\": {\n                    \"version\": \"4.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz\",\n                    \"integrity\": \"sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"dns-equal\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/dns-equal/-/dns-equal-1.0.0.tgz\",\n            \"integrity\": \"sha1-s55/HabrCnW6nBcySzR1PEfgZU0=\",\n            \"dev\": true\n        },\n        \"dns-packet\": {\n            \"version\": \"1.3.4\",\n            \"resolved\": \"https://registry.npmjs.org/dns-packet/-/dns-packet-1.3.4.tgz\",\n            \"integrity\": \"sha512-BQ6F4vycLXBvdrJZ6S3gZewt6rcrks9KBgM9vrhW+knGRqc8uEdT7fuCwloc7nny5xNoMJ17HGH0R/6fpo8ECA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"ip\": \"^1.1.0\",\n                \"safe-buffer\": \"^5.0.1\"\n            }\n        },\n        \"dns-txt\": {\n            \"version\": \"2.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/dns-txt/-/dns-txt-2.0.2.tgz\",\n            \"integrity\": \"sha1-uR2Ab10nGI5Ks+fRB9iBocxGQrY=\",\n            \"dev\": true,\n            \"requires\": {\n                \"buffer-indexof\": \"^1.0.0\"\n            }\n        },\n        \"dom-serializer\": {\n            \"version\": \"1.3.2\",\n            \"resolved\": \"https://registry.npmjs.org/dom-serializer/-/dom-serializer-1.3.2.tgz\",\n            \"integrity\": \"sha512-5c54Bk5Dw4qAxNOI1pFEizPSjVsx5+bpJKmL2kPn8JhBUq2q09tTCa3mjijun2NfK78NMouDYNMBkOrPZiS+ig==\",\n            \"dev\": true,\n            \"requires\": {\n                \"domelementtype\": \"^2.0.1\",\n                \"domhandler\": \"^4.2.0\",\n                \"entities\": \"^2.0.0\"\n            },\n            \"dependencies\": {\n                \"entities\": {\n                    \"version\": \"2.2.0\",\n                    \"resolved\": \"https://registry.npmjs.org/entities/-/entities-2.2.0.tgz\",\n                    \"integrity\": \"sha512-p92if5Nz619I0w+akJrLZH0MX0Pb5DX39XOwQTtXSdQQOaYH03S1uIQp4mhOZtAXrxq4ViO67YTiLBo2638o9A==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"domain-browser\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/domain-browser/-/domain-browser-1.2.0.tgz\",\n            \"integrity\": \"sha512-jnjyiM6eRyZl2H+W8Q/zLMA481hzi0eszAaBUzIVnmYVDBbnLxVNnfu1HgEBvCbL+71FrxMl3E6lpKH7Ge3OXA==\",\n            \"dev\": true\n        },\n        \"domelementtype\": {\n            \"version\": \"2.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/domelementtype/-/domelementtype-2.2.0.tgz\",\n            \"integrity\": \"sha512-DtBMo82pv1dFtUmHyr48beiuq792Sxohr+8Hm9zoxklYPfa6n0Z3Byjj2IV7bmr2IyqClnqEQhfgHJJ5QF0R5A==\",\n            \"dev\": true\n        },\n        \"domhandler\": {\n            \"version\": \"4.2.2\",\n            \"resolved\": \"https://registry.npmjs.org/domhandler/-/domhandler-4.2.2.tgz\",\n            \"integrity\": \"sha512-PzE9aBMsdZO8TK4BnuJwH0QT41wgMbRzuZrHUcpYncEjmQazq8QEaBWgLG7ZyC/DAZKEgglpIA6j4Qn/HmxS3w==\",\n            \"dev\": true,\n            \"requires\": {\n                \"domelementtype\": \"^2.2.0\"\n            }\n        },\n        \"domutils\": {\n            \"version\": \"2.8.0\",\n            \"resolved\": \"https://registry.npmjs.org/domutils/-/domutils-2.8.0.tgz\",\n            \"integrity\": \"sha512-w96Cjofp72M5IIhpjgobBimYEfoPjx1Vx0BSX9P30WBdZW2WIKU0T1Bd0kz2eNZ9ikjKgHbEyKx8BB6H1L3h3A==\",\n            \"dev\": true,\n            \"requires\": {\n                \"dom-serializer\": \"^1.0.1\",\n                \"domelementtype\": \"^2.2.0\",\n                \"domhandler\": \"^4.2.0\"\n            }\n        },\n        \"dot-case\": {\n            \"version\": \"3.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/dot-case/-/dot-case-3.0.4.tgz\",\n            \"integrity\": \"sha512-Kv5nKlh6yRrdrGvxeJ2e5y2eRUpkUosIW4A2AS38zwSz27zu7ufDwQPi5Jhs3XAlGNetl3bmnGhQsMtkKJnj3w==\",\n            \"dev\": true,\n            \"requires\": {\n                \"no-case\": \"^3.0.4\",\n                \"tslib\": \"^2.0.3\"\n            }\n        },\n        \"dot-prop\": {\n            \"version\": \"5.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/dot-prop/-/dot-prop-5.3.0.tgz\",\n            \"integrity\": \"sha512-QM8q3zDe58hqUqjraQOmzZ1LIH9SWQJTlEKCH4kJ2oQvLZk7RbQXvtDM2XEq3fwkV9CCvvH4LA0AV+ogFsBM2Q==\",\n            \"dev\": true,\n            \"requires\": {\n                \"is-obj\": \"^2.0.0\"\n            }\n        },\n        \"dotenv\": {\n            \"version\": \"10.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/dotenv/-/dotenv-10.0.0.tgz\",\n            \"integrity\": \"sha512-rlBi9d8jpv9Sf1klPjNfFAuWDjKLwTIJJ/VxtoTwIR6hnZxcEOQCZg2oIL3MWBYw5GpUDKOEnND7LXTbIpQ03Q==\",\n            \"dev\": true\n        },\n        \"dotenv-expand\": {\n            \"version\": \"5.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/dotenv-expand/-/dotenv-expand-5.1.0.tgz\",\n            \"integrity\": \"sha512-YXQl1DSa4/PQyRfgrv6aoNjhasp/p4qs9FjJ4q4cQk+8m4r6k4ZSiEyytKG8f8W9gi8WsQtIObNmKd+tMzNTmA==\",\n            \"dev\": true\n        },\n        \"echarts\": {\n            \"version\": \"5.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/echarts/-/echarts-5.2.1.tgz\",\n            \"integrity\": \"sha512-OJ79b22eqRfbSV8vYmDKmA+XWfNbr0Uk/OafWcFNIGDWti2Uw9A6eVCiJLmqPa9Sk+EWL+t5v26aak0z3gxiZw==\",\n            \"requires\": {\n                \"tslib\": \"2.3.0\",\n                \"zrender\": \"5.2.1\"\n            },\n            \"dependencies\": {\n                \"tslib\": {\n                    \"version\": \"2.3.0\",\n                    \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-2.3.0.tgz\",\n                    \"integrity\": \"sha512-N82ooyxVNm6h1riLCoyS9e3fuJ3AMG2zIZs2Gd1ATcSFjSA23Q0fzjjZeh0jbJvWVDZ0cJT8yaNNaaXHzueNjg==\"\n                }\n            }\n        },\n        \"ee-first\": {\n            \"version\": \"1.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\n            \"integrity\": \"sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=\",\n            \"dev\": true\n        },\n        \"electron-to-chromium\": {\n            \"version\": \"1.3.587\",\n            \"resolved\": \"https://registry.npm.taobao.org/electron-to-chromium/download/electron-to-chromium-1.3.587.tgz?cache=0&sync_timestamp=1604459050728&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Felectron-to-chromium%2Fdownload%2Felectron-to-chromium-1.3.587.tgz\",\n            \"integrity\": \"sha1-3lcN9zIOslnAUR8oTC1gCAlO2/c=\",\n            \"dev\": true\n        },\n        \"element-resize-detector\": {\n            \"version\": \"1.2.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/element-resize-detector/download/element-resize-detector-1.2.1.tgz\",\n            \"integrity\": \"sha1-sDBRlER6SGMVXljxMyOgrvMIUdE=\",\n            \"requires\": {\n                \"batch-processor\": \"1.0.0\"\n            }\n        },\n        \"elliptic\": {\n            \"version\": \"6.5.4\",\n            \"resolved\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.5.4.tgz\",\n            \"integrity\": \"sha512-iLhC6ULemrljPZb+QutR5TQGB+pdW6KGD5RSegS+8sorOZT+rdQFbsQFJgvN3eRqNALqJer4oQ16YvJHlU8hzQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"bn.js\": \"^4.11.9\",\n                \"brorand\": \"^1.1.0\",\n                \"hash.js\": \"^1.0.0\",\n                \"hmac-drbg\": \"^1.0.1\",\n                \"inherits\": \"^2.0.4\",\n                \"minimalistic-assert\": \"^1.0.1\",\n                \"minimalistic-crypto-utils\": \"^1.0.1\"\n            },\n            \"dependencies\": {\n                \"bn.js\": {\n                    \"version\": \"4.12.0\",\n                    \"resolved\": \"https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz\",\n                    \"integrity\": \"sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"emoji-regex\": {\n            \"version\": \"8.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n            \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n            \"dev\": true\n        },\n        \"emojis-list\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/emojis-list/download/emojis-list-3.0.0.tgz\",\n            \"integrity\": \"sha1-VXBmIEatKeLpFucariYKvf9Pang=\",\n            \"dev\": true\n        },\n        \"encodeurl\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\n            \"integrity\": \"sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=\",\n            \"dev\": true\n        },\n        \"encoding\": {\n            \"version\": \"0.1.13\",\n            \"resolved\": \"https://registry.npm.taobao.org/encoding/download/encoding-0.1.13.tgz?cache=0&sync_timestamp=1594362883212&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fencoding%2Fdownload%2Fencoding-0.1.13.tgz\",\n            \"integrity\": \"sha1-VldK/deR9UqOmyeFwFgqLSYhD6k=\",\n            \"dev\": true,\n            \"requires\": {\n                \"iconv-lite\": \"^0.6.2\"\n            },\n            \"dependencies\": {\n                \"iconv-lite\": {\n                    \"version\": \"0.6.2\",\n                    \"resolved\": \"https://registry.npm.taobao.org/iconv-lite/download/iconv-lite-0.6.2.tgz\",\n                    \"integrity\": \"sha1-zhPRh1sMOmdL1qBLf3awGxtt7QE=\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"safer-buffer\": \">= 2.1.2 < 3.0.0\"\n                    }\n                }\n            }\n        },\n        \"enhanced-resolve\": {\n            \"version\": \"5.8.3\",\n            \"resolved\": \"https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.8.3.tgz\",\n            \"integrity\": \"sha512-EGAbGvH7j7Xt2nc0E7D99La1OiEs8LnyimkRgwExpUMScN6O+3x9tIWs7PLQZVNx4YD+00skHXPXi1yQHpAmZA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"graceful-fs\": \"^4.2.4\",\n                \"tapable\": \"^2.2.0\"\n            }\n        },\n        \"entities\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/entities/-/entities-2.1.0.tgz\",\n            \"integrity\": \"sha512-hCx1oky9PFrJ611mf0ifBLBRW8lUUVRlFolb5gWRfIELabBlbp9xZvrqZLZAs+NxFnbfQoeGd8wDkygjg7U85w==\"\n        },\n        \"envinfo\": {\n            \"version\": \"7.8.1\",\n            \"resolved\": \"https://registry.npmjs.org/envinfo/-/envinfo-7.8.1.tgz\",\n            \"integrity\": \"sha512-/o+BXHmB7ocbHEAs6F2EnG0ogybVVUdkRunTT2glZU9XAaGmhqskrvKwqXuDfNjEO0LZKWdejEEpnq8aM0tOaw==\",\n            \"dev\": true\n        },\n        \"error-ex\": {\n            \"version\": \"1.3.2\",\n            \"resolved\": \"https://registry.npm.taobao.org/error-ex/download/error-ex-1.3.2.tgz\",\n            \"integrity\": \"sha1-tKxAZIEH/c3PriQvQovqihTU8b8=\",\n            \"dev\": true,\n            \"requires\": {\n                \"is-arrayish\": \"^0.2.1\"\n            }\n        },\n        \"es-module-lexer\": {\n            \"version\": \"0.9.3\",\n            \"resolved\": \"https://registry.npmjs.org/es-module-lexer/-/es-module-lexer-0.9.3.tgz\",\n            \"integrity\": \"sha512-1HQ2M2sPtxwnvOvT1ZClHyQDiggdNjURWpY2we6aMKCQiUVxTmVs2UYPLIrD84sS+kMdUwfBSylbJPwNnBrnHQ==\",\n            \"dev\": true\n        },\n        \"escalade\": {\n            \"version\": \"3.1.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/escalade/download/escalade-3.1.1.tgz?cache=0&sync_timestamp=1602567259580&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fescalade%2Fdownload%2Fescalade-3.1.1.tgz\",\n            \"integrity\": \"sha1-2M/ccACWXFoBdLSoLqpcBVJ0LkA=\",\n            \"dev\": true\n        },\n        \"escape-html\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\n            \"integrity\": \"sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=\",\n            \"dev\": true\n        },\n        \"escape-string-regexp\": {\n            \"version\": \"1.0.5\",\n            \"resolved\": \"https://registry.npm.taobao.org/escape-string-regexp/download/escape-string-regexp-1.0.5.tgz\",\n            \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\"\n        },\n        \"eslint-scope\": {\n            \"version\": \"5.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz\",\n            \"integrity\": \"sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"esrecurse\": \"^4.3.0\",\n                \"estraverse\": \"^4.1.1\"\n            }\n        },\n        \"esrecurse\": {\n            \"version\": \"4.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz\",\n            \"integrity\": \"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\",\n            \"dev\": true,\n            \"requires\": {\n                \"estraverse\": \"^5.2.0\"\n            },\n            \"dependencies\": {\n                \"estraverse\": {\n                    \"version\": \"5.2.0\",\n                    \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.2.0.tgz\",\n                    \"integrity\": \"sha512-BxbNGGNm0RyRYvUdHpIwv9IWzeM9XClbOxwoATuFdOE7ZE6wHL+HQ5T8hoPM+zHvmKzzsEqhgy0GrQ5X13afiQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"estraverse\": {\n            \"version\": \"4.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz\",\n            \"integrity\": \"sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==\",\n            \"dev\": true\n        },\n        \"esutils\": {\n            \"version\": \"2.0.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/esutils/download/esutils-2.0.3.tgz\",\n            \"integrity\": \"sha1-dNLrTeC42hKTcRkQ1Qd1ubcQ72Q=\"\n        },\n        \"etag\": {\n            \"version\": \"1.8.1\",\n            \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\n            \"integrity\": \"sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc=\",\n            \"dev\": true\n        },\n        \"eventemitter3\": {\n            \"version\": \"4.0.7\",\n            \"resolved\": \"https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.7.tgz\",\n            \"integrity\": \"sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==\",\n            \"dev\": true\n        },\n        \"events\": {\n            \"version\": \"3.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/events/-/events-3.3.0.tgz\",\n            \"integrity\": \"sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==\",\n            \"dev\": true\n        },\n        \"evp_bytestokey\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.3.tgz\",\n            \"integrity\": \"sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"md5.js\": \"^1.3.4\",\n                \"safe-buffer\": \"^5.1.1\"\n            }\n        },\n        \"execa\": {\n            \"version\": \"5.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/execa/-/execa-5.1.1.tgz\",\n            \"integrity\": \"sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"cross-spawn\": \"^7.0.3\",\n                \"get-stream\": \"^6.0.0\",\n                \"human-signals\": \"^2.1.0\",\n                \"is-stream\": \"^2.0.0\",\n                \"merge-stream\": \"^2.0.0\",\n                \"npm-run-path\": \"^4.0.1\",\n                \"onetime\": \"^5.1.2\",\n                \"signal-exit\": \"^3.0.3\",\n                \"strip-final-newline\": \"^2.0.0\"\n            },\n            \"dependencies\": {\n                \"is-stream\": {\n                    \"version\": \"2.0.1\",\n                    \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz\",\n                    \"integrity\": \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\",\n                    \"dev\": true\n                },\n                \"onetime\": {\n                    \"version\": \"5.1.2\",\n                    \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz\",\n                    \"integrity\": \"sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"mimic-fn\": \"^2.1.0\"\n                    }\n                }\n            }\n        },\n        \"express\": {\n            \"version\": \"4.17.1\",\n            \"resolved\": \"https://registry.npmjs.org/express/-/express-4.17.1.tgz\",\n            \"integrity\": \"sha512-mHJ9O79RqluphRrcw2X/GTh3k9tVv8YcoyY4Kkh4WDMUYKRZUq0h1o0w2rrrxBqM7VoeUVqgb27xlEMXTnYt4g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"accepts\": \"~1.3.7\",\n                \"array-flatten\": \"1.1.1\",\n                \"body-parser\": \"1.19.0\",\n                \"content-disposition\": \"0.5.3\",\n                \"content-type\": \"~1.0.4\",\n                \"cookie\": \"0.4.0\",\n                \"cookie-signature\": \"1.0.6\",\n                \"debug\": \"2.6.9\",\n                \"depd\": \"~1.1.2\",\n                \"encodeurl\": \"~1.0.2\",\n                \"escape-html\": \"~1.0.3\",\n                \"etag\": \"~1.8.1\",\n                \"finalhandler\": \"~1.1.2\",\n                \"fresh\": \"0.5.2\",\n                \"merge-descriptors\": \"1.0.1\",\n                \"methods\": \"~1.1.2\",\n                \"on-finished\": \"~2.3.0\",\n                \"parseurl\": \"~1.3.3\",\n                \"path-to-regexp\": \"0.1.7\",\n                \"proxy-addr\": \"~2.0.5\",\n                \"qs\": \"6.7.0\",\n                \"range-parser\": \"~1.2.1\",\n                \"safe-buffer\": \"5.1.2\",\n                \"send\": \"0.17.1\",\n                \"serve-static\": \"1.14.1\",\n                \"setprototypeof\": \"1.1.1\",\n                \"statuses\": \"~1.5.0\",\n                \"type-is\": \"~1.6.18\",\n                \"utils-merge\": \"1.0.1\",\n                \"vary\": \"~1.1.2\"\n            },\n            \"dependencies\": {\n                \"array-flatten\": {\n                    \"version\": \"1.1.1\",\n                    \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\n                    \"integrity\": \"sha1-ml9pkFGx5wczKPKgCJaLZOopVdI=\",\n                    \"dev\": true\n                },\n                \"debug\": {\n                    \"version\": \"2.6.9\",\n                    \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n                    \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ms\": \"2.0.0\"\n                    }\n                }\n            }\n        },\n        \"external-editor\": {\n            \"version\": \"2.2.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/external-editor/download/external-editor-2.2.0.tgz\",\n            \"integrity\": \"sha1-BFURz9jRM/OEZnPRBHwVTiFK09U=\",\n            \"dev\": true,\n            \"requires\": {\n                \"chardet\": \"^0.4.0\",\n                \"iconv-lite\": \"^0.4.17\",\n                \"tmp\": \"^0.0.33\"\n            }\n        },\n        \"fast-deep-equal\": {\n            \"version\": \"3.1.3\",\n            \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n            \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n            \"dev\": true\n        },\n        \"fast-glob\": {\n            \"version\": \"3.2.7\",\n            \"resolved\": \"https://registry.npmjs.org/fast-glob/-/fast-glob-3.2.7.tgz\",\n            \"integrity\": \"sha512-rYGMRwip6lUMvYD3BTScMwT1HtAs2d71SMv66Vrxs0IekGZEjhM0pcMfjQPnknBt2zeCwQMEupiN02ZP4DiT1Q==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@nodelib/fs.stat\": \"^2.0.2\",\n                \"@nodelib/fs.walk\": \"^1.2.3\",\n                \"glob-parent\": \"^5.1.2\",\n                \"merge2\": \"^1.3.0\",\n                \"micromatch\": \"^4.0.4\"\n            }\n        },\n        \"fast-json-stable-stringify\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\",\n            \"integrity\": \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\",\n            \"dev\": true\n        },\n        \"fastest-levenshtein\": {\n            \"version\": \"1.0.12\",\n            \"resolved\": \"https://registry.npmjs.org/fastest-levenshtein/-/fastest-levenshtein-1.0.12.tgz\",\n            \"integrity\": \"sha512-On2N+BpYJ15xIC974QNVuYGMOlEVt4s0EOI3wwMqOmK1fdDY+FN/zltPV8vosq4ad4c/gJ1KHScUn/6AWIgiow==\",\n            \"dev\": true\n        },\n        \"fastq\": {\n            \"version\": \"1.13.0\",\n            \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.13.0.tgz\",\n            \"integrity\": \"sha512-YpkpUnK8od0o1hmeSc7UUs/eB/vIPWJYjKck2QKIzAf71Vm1AAQ3EbuZB3g2JIy+pg+ERD0vqI79KyZiB2e2Nw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"reusify\": \"^1.0.4\"\n            }\n        },\n        \"faye-websocket\": {\n            \"version\": \"0.11.4\",\n            \"resolved\": \"https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.11.4.tgz\",\n            \"integrity\": \"sha512-CzbClwlXAuiRQAlUyfqPgvPoNKTckTPGfwZV4ZdAhVcP2lh9KUxJg2b5GkE7XbjKQ3YJnQ9z6D9ntLAlB+tP8g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"websocket-driver\": \">=0.5.1\"\n            }\n        },\n        \"figures\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/figures/download/figures-2.0.0.tgz\",\n            \"integrity\": \"sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=\",\n            \"dev\": true,\n            \"requires\": {\n                \"escape-string-regexp\": \"^1.0.5\"\n            }\n        },\n        \"file-loader\": {\n            \"version\": \"6.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/file-loader/-/file-loader-6.2.0.tgz\",\n            \"integrity\": \"sha512-qo3glqyTa61Ytg4u73GultjHGjdRyig3tG6lPtyX/jOEJvHif9uB0/OCI2Kif6ctF3caQTW2G5gym21oAsI4pw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"loader-utils\": \"^2.0.0\",\n                \"schema-utils\": \"^3.0.0\"\n            },\n            \"dependencies\": {\n                \"loader-utils\": {\n                    \"version\": \"2.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/loader-utils/-/loader-utils-2.0.0.tgz\",\n                    \"integrity\": \"sha512-rP4F0h2RaWSvPEkD7BLDFQnvSf+nK+wr3ESUjNTyAGobqrijmW92zc+SO6d4p4B1wh7+B/Jg1mkQe5NYUEHtHQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"big.js\": \"^5.2.2\",\n                        \"emojis-list\": \"^3.0.0\",\n                        \"json5\": \"^2.1.2\"\n                    }\n                },\n                \"schema-utils\": {\n                    \"version\": \"3.1.1\",\n                    \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-3.1.1.tgz\",\n                    \"integrity\": \"sha512-Y5PQxS4ITlC+EahLuXaY86TXfR7Dc5lw294alXOq86JAHCihAIZfqv8nNCWvaEJvaC51uN9hbLGeV0cFBdH+Fw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@types/json-schema\": \"^7.0.8\",\n                        \"ajv\": \"^6.12.5\",\n                        \"ajv-keywords\": \"^3.5.2\"\n                    }\n                }\n            }\n        },\n        \"file-type\": {\n            \"version\": \"12.4.2\",\n            \"resolved\": \"https://registry.npmjs.org/file-type/-/file-type-12.4.2.tgz\",\n            \"integrity\": \"sha512-UssQP5ZgIOKelfsaB5CuGAL+Y+q7EmONuiwF3N5HAH0t27rvrttgi6Ra9k/+DVaY9UF6+ybxu5pOXLUdA8N7Vg==\",\n            \"dev\": true\n        },\n        \"fill-range\": {\n            \"version\": \"7.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz\",\n            \"integrity\": \"sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"to-regex-range\": \"^5.0.1\"\n            }\n        },\n        \"finalhandler\": {\n            \"version\": \"1.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.2.tgz\",\n            \"integrity\": \"sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"debug\": \"2.6.9\",\n                \"encodeurl\": \"~1.0.2\",\n                \"escape-html\": \"~1.0.3\",\n                \"on-finished\": \"~2.3.0\",\n                \"parseurl\": \"~1.3.3\",\n                \"statuses\": \"~1.5.0\",\n                \"unpipe\": \"~1.0.0\"\n            },\n            \"dependencies\": {\n                \"debug\": {\n                    \"version\": \"2.6.9\",\n                    \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n                    \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ms\": \"2.0.0\"\n                    }\n                }\n            }\n        },\n        \"find-babel-config\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/find-babel-config/download/find-babel-config-1.2.0.tgz\",\n            \"integrity\": \"sha1-qbezF+tbmGDNqdVHQKjIM3oig6I=\",\n            \"dev\": true,\n            \"requires\": {\n                \"json5\": \"^0.5.1\",\n                \"path-exists\": \"^3.0.0\"\n            },\n            \"dependencies\": {\n                \"json5\": {\n                    \"version\": \"0.5.1\",\n                    \"resolved\": \"https://registry.npm.taobao.org/json5/download/json5-0.5.1.tgz\",\n                    \"integrity\": \"sha1-Hq3nrMASA0rYTiOWdn6tn6VJWCE=\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"find-cache-dir\": {\n            \"version\": \"3.3.2\",\n            \"resolved\": \"https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-3.3.2.tgz\",\n            \"integrity\": \"sha512-wXZV5emFEjrridIgED11OoUKLxiYjAcqot/NJdAkOhlJ+vGzwhOAfcG5OX1jP+S0PcjEn8bdMJv+g2jwQ3Onig==\",\n            \"dev\": true,\n            \"requires\": {\n                \"commondir\": \"^1.0.1\",\n                \"make-dir\": \"^3.0.2\",\n                \"pkg-dir\": \"^4.1.0\"\n            }\n        },\n        \"find-up\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/find-up/download/find-up-2.1.0.tgz?cache=0&sync_timestamp=1597169862146&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Ffind-up%2Fdownload%2Ffind-up-2.1.0.tgz\",\n            \"integrity\": \"sha1-RdG35QbHF93UgndaK3eSCjwMV6c=\",\n            \"dev\": true,\n            \"requires\": {\n                \"locate-path\": \"^2.0.0\"\n            }\n        },\n        \"follow-redirects\": {\n            \"version\": \"1.5.10\",\n            \"resolved\": \"https://registry.npm.taobao.org/follow-redirects/download/follow-redirects-1.5.10.tgz?cache=0&sync_timestamp=1597057988030&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Ffollow-redirects%2Fdownload%2Ffollow-redirects-1.5.10.tgz\",\n            \"integrity\": \"sha1-e3qfmuov3/NnhqlP9kPtB/T/Xio=\",\n            \"dev\": true,\n            \"requires\": {\n                \"debug\": \"=3.1.0\"\n            }\n        },\n        \"forwarded\": {\n            \"version\": \"0.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\n            \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\",\n            \"dev\": true\n        },\n        \"fraction.js\": {\n            \"version\": \"4.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/fraction.js/-/fraction.js-4.1.1.tgz\",\n            \"integrity\": \"sha512-MHOhvvxHTfRFpF1geTK9czMIZ6xclsEor2wkIGYYq+PxcQqT7vStJqjhe6S1TenZrMZzo+wlqOufBDVepUEgPg==\",\n            \"dev\": true\n        },\n        \"fresh\": {\n            \"version\": \"0.5.2\",\n            \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\n            \"integrity\": \"sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac=\",\n            \"dev\": true\n        },\n        \"fs-extra\": {\n            \"version\": \"10.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-10.0.0.tgz\",\n            \"integrity\": \"sha512-C5owb14u9eJwizKGdchcDUQeFtlSHHthBk8pbX9Vc1PFZrLombudjDnNns88aYslCyF6IY5SUw3Roz6xShcEIQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"graceful-fs\": \"^4.2.0\",\n                \"jsonfile\": \"^6.0.1\",\n                \"universalify\": \"^2.0.0\"\n            }\n        },\n        \"fs-monkey\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/fs-monkey/-/fs-monkey-1.0.3.tgz\",\n            \"integrity\": \"sha512-cybjIfiiE+pTWicSCLFHSrXZ6EilF30oh91FDP9S2B051prEa7QWfrVTQm10/dDpswBDXZugPa1Ogu8Yh+HV0Q==\",\n            \"dev\": true\n        },\n        \"fs.realpath\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/fs.realpath/download/fs.realpath-1.0.0.tgz\",\n            \"integrity\": \"sha1-FQStJSMVjKpA20onh8sBQRmU6k8=\",\n            \"dev\": true\n        },\n        \"fsevents\": {\n            \"version\": \"2.3.2\",\n            \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz\",\n            \"integrity\": \"sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"function-bind\": {\n            \"version\": \"1.1.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/function-bind/download/function-bind-1.1.1.tgz\",\n            \"integrity\": \"sha1-pWiZ0+o8m6uHS7l3O3xe3pL0iV0=\",\n            \"dev\": true\n        },\n        \"gensync\": {\n            \"version\": \"1.0.0-beta.2\",\n            \"resolved\": \"https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz\",\n            \"integrity\": \"sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==\",\n            \"dev\": true\n        },\n        \"get-caller-file\": {\n            \"version\": \"2.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n            \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n            \"dev\": true\n        },\n        \"get-intrinsic\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/get-intrinsic/download/get-intrinsic-1.0.1.tgz?cache=0&sync_timestamp=1604120579288&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fget-intrinsic%2Fdownload%2Fget-intrinsic-1.0.1.tgz\",\n            \"integrity\": \"sha1-lKl2j8vdBZWhySc6rPTInQdWMb4=\",\n            \"dev\": true,\n            \"requires\": {\n                \"function-bind\": \"^1.1.1\",\n                \"has\": \"^1.0.3\",\n                \"has-symbols\": \"^1.0.1\"\n            }\n        },\n        \"get-pkg-repo\": {\n            \"version\": \"4.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/get-pkg-repo/-/get-pkg-repo-4.2.1.tgz\",\n            \"integrity\": \"sha512-2+QbHjFRfGB74v/pYWjd5OhU3TDIC2Gv/YKUTk/tCvAz0pkn/Mz6P3uByuBimLOcPvN2jYdScl3xGFSrx0jEcA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@hutson/parse-repository-url\": \"^3.0.0\",\n                \"hosted-git-info\": \"^4.0.0\",\n                \"through2\": \"^2.0.0\",\n                \"yargs\": \"^16.2.0\"\n            },\n            \"dependencies\": {\n                \"ansi-regex\": {\n                    \"version\": \"5.0.1\",\n                    \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n                    \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n                    \"dev\": true\n                },\n                \"is-fullwidth-code-point\": {\n                    \"version\": \"3.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n                    \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n                    \"dev\": true\n                },\n                \"readable-stream\": {\n                    \"version\": \"2.3.7\",\n                    \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz\",\n                    \"integrity\": \"sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"core-util-is\": \"~1.0.0\",\n                        \"inherits\": \"~2.0.3\",\n                        \"isarray\": \"~1.0.0\",\n                        \"process-nextick-args\": \"~2.0.0\",\n                        \"safe-buffer\": \"~5.1.1\",\n                        \"string_decoder\": \"~1.1.1\",\n                        \"util-deprecate\": \"~1.0.1\"\n                    }\n                },\n                \"string-width\": {\n                    \"version\": \"4.2.3\",\n                    \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n                    \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"emoji-regex\": \"^8.0.0\",\n                        \"is-fullwidth-code-point\": \"^3.0.0\",\n                        \"strip-ansi\": \"^6.0.1\"\n                    }\n                },\n                \"string_decoder\": {\n                    \"version\": \"1.1.1\",\n                    \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n                    \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"safe-buffer\": \"~5.1.0\"\n                    }\n                },\n                \"strip-ansi\": {\n                    \"version\": \"6.0.1\",\n                    \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n                    \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ansi-regex\": \"^5.0.1\"\n                    }\n                },\n                \"through2\": {\n                    \"version\": \"2.0.5\",\n                    \"resolved\": \"https://registry.npmjs.org/through2/-/through2-2.0.5.tgz\",\n                    \"integrity\": \"sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"readable-stream\": \"~2.3.6\",\n                        \"xtend\": \"~4.0.1\"\n                    }\n                },\n                \"yargs\": {\n                    \"version\": \"16.2.0\",\n                    \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz\",\n                    \"integrity\": \"sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"cliui\": \"^7.0.2\",\n                        \"escalade\": \"^3.1.1\",\n                        \"get-caller-file\": \"^2.0.5\",\n                        \"require-directory\": \"^2.1.1\",\n                        \"string-width\": \"^4.2.0\",\n                        \"y18n\": \"^5.0.5\",\n                        \"yargs-parser\": \"^20.2.2\"\n                    }\n                }\n            }\n        },\n        \"get-stream\": {\n            \"version\": \"6.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz\",\n            \"integrity\": \"sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==\",\n            \"dev\": true\n        },\n        \"git-raw-commits\": {\n            \"version\": \"2.0.10\",\n            \"resolved\": \"https://registry.npmjs.org/git-raw-commits/-/git-raw-commits-2.0.10.tgz\",\n            \"integrity\": \"sha512-sHhX5lsbG9SOO6yXdlwgEMQ/ljIn7qMpAbJZCGfXX2fq5T8M5SrDnpYk9/4HswTildcIqatsWa91vty6VhWSaQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"dargs\": \"^7.0.0\",\n                \"lodash\": \"^4.17.15\",\n                \"meow\": \"^8.0.0\",\n                \"split2\": \"^3.0.0\",\n                \"through2\": \"^4.0.0\"\n            }\n        },\n        \"git-remote-origin-url\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/git-remote-origin-url/-/git-remote-origin-url-2.0.0.tgz\",\n            \"integrity\": \"sha1-UoJlna4hBxRaERJhEq0yFuxfpl8=\",\n            \"dev\": true,\n            \"requires\": {\n                \"gitconfiglocal\": \"^1.0.0\",\n                \"pify\": \"^2.3.0\"\n            }\n        },\n        \"git-semver-tags\": {\n            \"version\": \"4.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/git-semver-tags/-/git-semver-tags-4.1.1.tgz\",\n            \"integrity\": \"sha512-OWyMt5zBe7xFs8vglMmhM9lRQzCWL3WjHtxNNfJTMngGym7pC1kh8sP6jevfydJ6LP3ZvGxfb6ABYgPUM0mtsA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"meow\": \"^8.0.0\",\n                \"semver\": \"^6.0.0\"\n            },\n            \"dependencies\": {\n                \"semver\": {\n                    \"version\": \"6.3.0\",\n                    \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.0.tgz\",\n                    \"integrity\": \"sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"gitconfiglocal\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/gitconfiglocal/-/gitconfiglocal-1.0.0.tgz\",\n            \"integrity\": \"sha1-QdBF84UaXqiPA/JMocYXgRRGS5s=\",\n            \"dev\": true,\n            \"requires\": {\n                \"ini\": \"^1.3.2\"\n            }\n        },\n        \"glob\": {\n            \"version\": \"7.1.6\",\n            \"resolved\": \"https://registry.npm.taobao.org/glob/download/glob-7.1.6.tgz?cache=0&sync_timestamp=1573078302562&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fglob%2Fdownload%2Fglob-7.1.6.tgz\",\n            \"integrity\": \"sha1-FB8zuBp8JJLhJVlDB0gMRmeSeKY=\",\n            \"dev\": true,\n            \"requires\": {\n                \"fs.realpath\": \"^1.0.0\",\n                \"inflight\": \"^1.0.4\",\n                \"inherits\": \"2\",\n                \"minimatch\": \"^3.0.4\",\n                \"once\": \"^1.3.0\",\n                \"path-is-absolute\": \"^1.0.0\"\n            }\n        },\n        \"glob-parent\": {\n            \"version\": \"5.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n            \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n            \"dev\": true,\n            \"requires\": {\n                \"is-glob\": \"^4.0.1\"\n            }\n        },\n        \"glob-to-regexp\": {\n            \"version\": \"0.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.4.1.tgz\",\n            \"integrity\": \"sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw==\",\n            \"dev\": true\n        },\n        \"globals\": {\n            \"version\": \"11.12.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/globals/download/globals-11.12.0.tgz?cache=0&sync_timestamp=1603666827709&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fglobals%2Fdownload%2Fglobals-11.12.0.tgz\",\n            \"integrity\": \"sha1-q4eVM4hooLq9hSV1gBjCp+uVxC4=\",\n            \"dev\": true\n        },\n        \"globby\": {\n            \"version\": \"10.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/globby/-/globby-10.0.2.tgz\",\n            \"integrity\": \"sha512-7dUi7RvCoT/xast/o/dLN53oqND4yk0nsHkhRgn9w65C4PofCLOoJ39iSOg+qVDdWQPIEj+eszMHQ+aLVwwQSg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/glob\": \"^7.1.1\",\n                \"array-union\": \"^2.1.0\",\n                \"dir-glob\": \"^3.0.1\",\n                \"fast-glob\": \"^3.0.3\",\n                \"glob\": \"^7.1.3\",\n                \"ignore\": \"^5.1.1\",\n                \"merge2\": \"^1.2.3\",\n                \"slash\": \"^3.0.0\"\n            }\n        },\n        \"graceful-fs\": {\n            \"version\": \"4.2.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/graceful-fs/download/graceful-fs-4.2.4.tgz?cache=0&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fgraceful-fs%2Fdownload%2Fgraceful-fs-4.2.4.tgz\",\n            \"integrity\": \"sha1-Ila94U02MpWMRl68ltxGfKB6Kfs=\",\n            \"dev\": true\n        },\n        \"growly\": {\n            \"version\": \"1.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/growly/-/growly-1.3.0.tgz\",\n            \"integrity\": \"sha1-8QdIy+dq+WS3yWyTxrzCivEgwIE=\",\n            \"dev\": true\n        },\n        \"handle-thing\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/handle-thing/-/handle-thing-2.0.1.tgz\",\n            \"integrity\": \"sha512-9Qn4yBxelxoh2Ow62nP+Ka/kMnOXRi8BXnRaUwezLNhqelnN49xKz4F/dPP8OYLxLxq6JDtZb2i9XznUQbNPTg==\",\n            \"dev\": true\n        },\n        \"handlebars\": {\n            \"version\": \"4.7.7\",\n            \"resolved\": \"https://registry.npmjs.org/handlebars/-/handlebars-4.7.7.tgz\",\n            \"integrity\": \"sha512-aAcXm5OAfE/8IXkcZvCepKU3VzW1/39Fb5ZuqMtgI/hT8X2YgoMvBY5dLhq/cpOvw7Lk1nK/UF71aLG/ZnVYRA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"minimist\": \"^1.2.5\",\n                \"neo-async\": \"^2.6.0\",\n                \"source-map\": \"^0.6.1\",\n                \"uglify-js\": \"^3.1.4\",\n                \"wordwrap\": \"^1.0.0\"\n            },\n            \"dependencies\": {\n                \"source-map\": {\n                    \"version\": \"0.6.1\",\n                    \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n                    \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"hard-rejection\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/hard-rejection/-/hard-rejection-2.1.0.tgz\",\n            \"integrity\": \"sha512-VIZB+ibDhx7ObhAe7OVtoEbuP4h/MuOTHJ+J8h/eBXotJYl0fBgR72xDFCKgIh22OJZIOVNxBMWuhAr10r8HdA==\",\n            \"dev\": true\n        },\n        \"has\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/has/download/has-1.0.3.tgz\",\n            \"integrity\": \"sha1-ci18v8H2qoJB8W3YFOAR4fQeh5Y=\",\n            \"dev\": true,\n            \"requires\": {\n                \"function-bind\": \"^1.1.1\"\n            }\n        },\n        \"has-ansi\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/has-ansi/download/has-ansi-2.0.0.tgz\",\n            \"integrity\": \"sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=\",\n            \"requires\": {\n                \"ansi-regex\": \"^2.0.0\"\n            }\n        },\n        \"has-flag\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/has-flag/download/has-flag-3.0.0.tgz\",\n            \"integrity\": \"sha1-tdRU3CGZriJWmfNGfloH87lVuv0=\",\n            \"dev\": true\n        },\n        \"has-symbols\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/has-symbols/download/has-symbols-1.0.1.tgz\",\n            \"integrity\": \"sha1-n1IUdYpEGWxAbZvXbOv4HsLdMeg=\",\n            \"dev\": true\n        },\n        \"has-tostringtag\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.0.tgz\",\n            \"integrity\": \"sha512-kFjcSNhnlGV1kyoGk7OXKSawH5JOb/LzUc5w9B02hOTO0dfFRjbHQKvg1d6cf3HbeUmtU9VbbV3qzZ2Teh97WQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"has-symbols\": \"^1.0.2\"\n            },\n            \"dependencies\": {\n                \"has-symbols\": {\n                    \"version\": \"1.0.2\",\n                    \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.2.tgz\",\n                    \"integrity\": \"sha512-chXa79rL/UC2KlX17jo3vRGz0azaWEx5tGqZg5pO3NUyEJVB17dMruQlzCCOfUvElghKcm5194+BCRvi2Rv/Gw==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"hash-base\": {\n            \"version\": \"3.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/hash-base/-/hash-base-3.1.0.tgz\",\n            \"integrity\": \"sha512-1nmYp/rhMDiE7AYkDw+lLwlAzz0AntGIe51F3RfFfEqyQ3feY2eI/NcwC6umIQVOASPMsWJLJScWKSSvzL9IVA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"inherits\": \"^2.0.4\",\n                \"readable-stream\": \"^3.6.0\",\n                \"safe-buffer\": \"^5.2.0\"\n            },\n            \"dependencies\": {\n                \"safe-buffer\": {\n                    \"version\": \"5.2.1\",\n                    \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n                    \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"hash-sum\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/hash-sum/-/hash-sum-1.0.2.tgz\",\n            \"integrity\": \"sha1-M7QHd3VMZDJXPBIMw4CLvRDUfwQ=\",\n            \"dev\": true\n        },\n        \"hash.js\": {\n            \"version\": \"1.1.7\",\n            \"resolved\": \"https://registry.npmjs.org/hash.js/-/hash.js-1.1.7.tgz\",\n            \"integrity\": \"sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"inherits\": \"^2.0.3\",\n                \"minimalistic-assert\": \"^1.0.1\"\n            }\n        },\n        \"he\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/he/download/he-1.2.0.tgz\",\n            \"integrity\": \"sha1-hK5l+n6vsWX922FWauFLrwVmTw8=\",\n            \"dev\": true\n        },\n        \"highlight.js\": {\n            \"version\": \"11.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/highlight.js/-/highlight.js-11.2.0.tgz\",\n            \"integrity\": \"sha512-JOySjtOEcyG8s4MLR2MNbLUyaXqUunmSnL2kdV/KuGJOmHZuAR5xC54Ko7goAXBWNhf09Vy3B+U7vR62UZ/0iw==\"\n        },\n        \"highlight.js-async-webpack\": {\n            \"version\": \"1.0.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/highlight.js-async-webpack/download/highlight.js-async-webpack-1.0.4.tgz\",\n            \"integrity\": \"sha1-wGtnv5nwSQRdYrdW5YVbCRLsYWw=\"\n        },\n        \"hmac-drbg\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/hmac-drbg/-/hmac-drbg-1.0.1.tgz\",\n            \"integrity\": \"sha1-0nRXAQJabHdabFRXk+1QL8DGSaE=\",\n            \"dev\": true,\n            \"requires\": {\n                \"hash.js\": \"^1.0.3\",\n                \"minimalistic-assert\": \"^1.0.0\",\n                \"minimalistic-crypto-utils\": \"^1.0.1\"\n            }\n        },\n        \"hosted-git-info\": {\n            \"version\": \"4.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-4.0.2.tgz\",\n            \"integrity\": \"sha512-c9OGXbZ3guC/xOlCg1Ci/VgWlwsqDv1yMQL1CWqXDL0hDjXuNcq0zuR4xqPSuasI3kqFDhqSyTjREz5gzq0fXg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"lru-cache\": \"^6.0.0\"\n            }\n        },\n        \"hpack.js\": {\n            \"version\": \"2.1.6\",\n            \"resolved\": \"https://registry.npmjs.org/hpack.js/-/hpack.js-2.1.6.tgz\",\n            \"integrity\": \"sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=\",\n            \"dev\": true,\n            \"requires\": {\n                \"inherits\": \"^2.0.1\",\n                \"obuf\": \"^1.0.0\",\n                \"readable-stream\": \"^2.0.1\",\n                \"wbuf\": \"^1.1.0\"\n            },\n            \"dependencies\": {\n                \"readable-stream\": {\n                    \"version\": \"2.3.7\",\n                    \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz\",\n                    \"integrity\": \"sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"core-util-is\": \"~1.0.0\",\n                        \"inherits\": \"~2.0.3\",\n                        \"isarray\": \"~1.0.0\",\n                        \"process-nextick-args\": \"~2.0.0\",\n                        \"safe-buffer\": \"~5.1.1\",\n                        \"string_decoder\": \"~1.1.1\",\n                        \"util-deprecate\": \"~1.0.1\"\n                    }\n                },\n                \"string_decoder\": {\n                    \"version\": \"1.1.1\",\n                    \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n                    \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"safe-buffer\": \"~5.1.0\"\n                    }\n                }\n            }\n        },\n        \"html-entities\": {\n            \"version\": \"2.3.2\",\n            \"resolved\": \"https://registry.npmjs.org/html-entities/-/html-entities-2.3.2.tgz\",\n            \"integrity\": \"sha512-c3Ab/url5ksaT0WyleslpBEthOzWhrjQbg75y7XUsfSzi3Dgzt0l8w5e7DylRn15MTlMMD58dTfzddNS2kcAjQ==\",\n            \"dev\": true\n        },\n        \"html-loader\": {\n            \"version\": \"1.3.2\",\n            \"resolved\": \"https://registry.npmjs.org/html-loader/-/html-loader-1.3.2.tgz\",\n            \"integrity\": \"sha512-DEkUwSd0sijK5PF3kRWspYi56XP7bTNkyg5YWSzBdjaSDmvCufep5c4Vpb3PBf6lUL0YPtLwBfy9fL0t5hBAGA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"html-minifier-terser\": \"^5.1.1\",\n                \"htmlparser2\": \"^4.1.0\",\n                \"loader-utils\": \"^2.0.0\",\n                \"schema-utils\": \"^3.0.0\"\n            },\n            \"dependencies\": {\n                \"loader-utils\": {\n                    \"version\": \"2.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/loader-utils/-/loader-utils-2.0.0.tgz\",\n                    \"integrity\": \"sha512-rP4F0h2RaWSvPEkD7BLDFQnvSf+nK+wr3ESUjNTyAGobqrijmW92zc+SO6d4p4B1wh7+B/Jg1mkQe5NYUEHtHQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"big.js\": \"^5.2.2\",\n                        \"emojis-list\": \"^3.0.0\",\n                        \"json5\": \"^2.1.2\"\n                    }\n                },\n                \"schema-utils\": {\n                    \"version\": \"3.1.1\",\n                    \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-3.1.1.tgz\",\n                    \"integrity\": \"sha512-Y5PQxS4ITlC+EahLuXaY86TXfR7Dc5lw294alXOq86JAHCihAIZfqv8nNCWvaEJvaC51uN9hbLGeV0cFBdH+Fw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@types/json-schema\": \"^7.0.8\",\n                        \"ajv\": \"^6.12.5\",\n                        \"ajv-keywords\": \"^3.5.2\"\n                    }\n                }\n            }\n        },\n        \"html-minifier-terser\": {\n            \"version\": \"5.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/html-minifier-terser/-/html-minifier-terser-5.1.1.tgz\",\n            \"integrity\": \"sha512-ZPr5MNObqnV/T9akshPKbVgyOqLmy+Bxo7juKCfTfnjNniTAMdy4hz21YQqoofMBJD2kdREaqPPdThoR78Tgxg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"camel-case\": \"^4.1.1\",\n                \"clean-css\": \"^4.2.3\",\n                \"commander\": \"^4.1.1\",\n                \"he\": \"^1.2.0\",\n                \"param-case\": \"^3.0.3\",\n                \"relateurl\": \"^0.2.7\",\n                \"terser\": \"^4.6.3\"\n            },\n            \"dependencies\": {\n                \"clean-css\": {\n                    \"version\": \"4.2.3\",\n                    \"resolved\": \"https://registry.npmjs.org/clean-css/-/clean-css-4.2.3.tgz\",\n                    \"integrity\": \"sha512-VcMWDN54ZN/DS+g58HYL5/n4Zrqe8vHJpGA8KdgUXFU4fuP/aHNw8eld9SyEIyabIMJX/0RaY/fplOo5hYLSFA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"source-map\": \"~0.6.0\"\n                    }\n                },\n                \"commander\": {\n                    \"version\": \"4.1.1\",\n                    \"resolved\": \"https://registry.npmjs.org/commander/-/commander-4.1.1.tgz\",\n                    \"integrity\": \"sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==\",\n                    \"dev\": true\n                },\n                \"source-map\": {\n                    \"version\": \"0.6.1\",\n                    \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n                    \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n                    \"dev\": true\n                },\n                \"terser\": {\n                    \"version\": \"4.8.0\",\n                    \"resolved\": \"https://registry.npmjs.org/terser/-/terser-4.8.0.tgz\",\n                    \"integrity\": \"sha512-EAPipTNeWsb/3wLPeup1tVPaXfIaU68xMnVdPafIL1TV05OhASArYyIfFvnvJCNrR2NIOvDVNNTFRa+Re2MWyw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"commander\": \"^2.20.0\",\n                        \"source-map\": \"~0.6.1\",\n                        \"source-map-support\": \"~0.5.12\"\n                    },\n                    \"dependencies\": {\n                        \"commander\": {\n                            \"version\": \"2.20.3\",\n                            \"resolved\": \"https://registry.npmjs.org/commander/-/commander-2.20.3.tgz\",\n                            \"integrity\": \"sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==\",\n                            \"dev\": true\n                        }\n                    }\n                }\n            }\n        },\n        \"html-tags\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/html-tags/download/html-tags-2.0.0.tgz\",\n            \"integrity\": \"sha1-ELMKOGCF9Dzt41PMj6fLDe7qZos=\",\n            \"dev\": true\n        },\n        \"htmlparser2\": {\n            \"version\": \"4.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/htmlparser2/-/htmlparser2-4.1.0.tgz\",\n            \"integrity\": \"sha512-4zDq1a1zhE4gQso/c5LP1OtrhYTncXNSpvJYtWJBtXAETPlMfi3IFNjGuQbYLuVY4ZR0QMqRVvo4Pdy9KLyP8Q==\",\n            \"dev\": true,\n            \"requires\": {\n                \"domelementtype\": \"^2.0.1\",\n                \"domhandler\": \"^3.0.0\",\n                \"domutils\": \"^2.0.0\",\n                \"entities\": \"^2.0.0\"\n            },\n            \"dependencies\": {\n                \"domhandler\": {\n                    \"version\": \"3.3.0\",\n                    \"resolved\": \"https://registry.npmjs.org/domhandler/-/domhandler-3.3.0.tgz\",\n                    \"integrity\": \"sha512-J1C5rIANUbuYK+FuFL98650rihynUOEzRLxW+90bKZRWB6A1X1Tf82GxR1qAWLyfNPRvjqfip3Q5tdYlmAa9lA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"domelementtype\": \"^2.0.1\"\n                    }\n                },\n                \"entities\": {\n                    \"version\": \"2.2.0\",\n                    \"resolved\": \"https://registry.npmjs.org/entities/-/entities-2.2.0.tgz\",\n                    \"integrity\": \"sha512-p92if5Nz619I0w+akJrLZH0MX0Pb5DX39XOwQTtXSdQQOaYH03S1uIQp4mhOZtAXrxq4ViO67YTiLBo2638o9A==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"http-deceiver\": {\n            \"version\": \"1.2.7\",\n            \"resolved\": \"https://registry.npmjs.org/http-deceiver/-/http-deceiver-1.2.7.tgz\",\n            \"integrity\": \"sha1-+nFolEq5pRnTN8sL7HKE3D5yPYc=\",\n            \"dev\": true\n        },\n        \"http-errors\": {\n            \"version\": \"1.7.2\",\n            \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-1.7.2.tgz\",\n            \"integrity\": \"sha512-uUQBt3H/cSIVfch6i1EuPNy/YsRSOUBXTVfZ+yR7Zjez3qjBz6i9+i4zjNaoqcoFVI4lQJ5plg63TvGfRSDCRg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"depd\": \"~1.1.2\",\n                \"inherits\": \"2.0.3\",\n                \"setprototypeof\": \"1.1.1\",\n                \"statuses\": \">= 1.5.0 < 2\",\n                \"toidentifier\": \"1.0.0\"\n            },\n            \"dependencies\": {\n                \"inherits\": {\n                    \"version\": \"2.0.3\",\n                    \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz\",\n                    \"integrity\": \"sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"http-parser-js\": {\n            \"version\": \"0.5.3\",\n            \"resolved\": \"https://registry.npmjs.org/http-parser-js/-/http-parser-js-0.5.3.tgz\",\n            \"integrity\": \"sha512-t7hjvef/5HEK7RWTdUzVUhl8zkEu+LlaE0IYzdMuvbSDipxBRpOn4Uhw8ZyECEa808iVT8XCjzo6xmYt4CiLZg==\",\n            \"dev\": true\n        },\n        \"http-proxy\": {\n            \"version\": \"1.18.1\",\n            \"resolved\": \"https://registry.npmjs.org/http-proxy/-/http-proxy-1.18.1.tgz\",\n            \"integrity\": \"sha512-7mz/721AbnJwIVbnaSv1Cz3Am0ZLT/UBwkC92VlxhXv/k/BBQfM2fXElQNC27BVGr0uwUpplYPQM9LnaBMR5NQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"eventemitter3\": \"^4.0.0\",\n                \"follow-redirects\": \"^1.0.0\",\n                \"requires-port\": \"^1.0.0\"\n            }\n        },\n        \"http-proxy-middleware\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/http-proxy-middleware/-/http-proxy-middleware-2.0.1.tgz\",\n            \"integrity\": \"sha512-cfaXRVoZxSed/BmkA7SwBVNI9Kj7HFltaE5rqYOub5kWzWZ+gofV2koVN1j2rMW7pEfSSlCHGJ31xmuyFyfLOg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/http-proxy\": \"^1.17.5\",\n                \"http-proxy\": \"^1.18.1\",\n                \"is-glob\": \"^4.0.1\",\n                \"is-plain-obj\": \"^3.0.0\",\n                \"micromatch\": \"^4.0.2\"\n            },\n            \"dependencies\": {\n                \"is-plain-obj\": {\n                    \"version\": \"3.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-3.0.0.tgz\",\n                    \"integrity\": \"sha512-gwsOE28k+23GP1B6vFl1oVh/WOzmawBrKwo5Ev6wMKzPkaXaCDIQKzLnvsA42DRlbVTWorkgTKIviAKCWkfUwA==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"https-browserify\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/https-browserify/-/https-browserify-1.0.0.tgz\",\n            \"integrity\": \"sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM=\",\n            \"dev\": true\n        },\n        \"human-signals\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz\",\n            \"integrity\": \"sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==\",\n            \"dev\": true\n        },\n        \"iconv-lite\": {\n            \"version\": \"0.4.24\",\n            \"resolved\": \"https://registry.npm.taobao.org/iconv-lite/download/iconv-lite-0.4.24.tgz\",\n            \"integrity\": \"sha1-ICK0sl+93CHS9SSXSkdKr+czkIs=\",\n            \"dev\": true,\n            \"requires\": {\n                \"safer-buffer\": \">= 2.1.2 < 3\"\n            }\n        },\n        \"icss-utils\": {\n            \"version\": \"5.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/icss-utils/-/icss-utils-5.1.0.tgz\",\n            \"integrity\": \"sha512-soFhflCVWLfRNOPU3iv5Z9VUdT44xFRbzjLsEzSr5AQmgqPMTHdU3PMT1Cf1ssx8fLNJDA1juftYl+PUcv3MqA==\",\n            \"dev\": true\n        },\n        \"ieee754\": {\n            \"version\": \"1.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz\",\n            \"integrity\": \"sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==\",\n            \"dev\": true\n        },\n        \"ignore\": {\n            \"version\": \"5.1.8\",\n            \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-5.1.8.tgz\",\n            \"integrity\": \"sha512-BMpfD7PpiETpBl/A6S498BaIJ6Y/ABT93ETbby2fP00v4EbvPBXWEoaR1UBPKs3iR53pJY7EtZk5KACI57i1Uw==\",\n            \"dev\": true\n        },\n        \"imagemin\": {\n            \"version\": \"7.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/imagemin/-/imagemin-7.0.1.tgz\",\n            \"integrity\": \"sha512-33AmZ+xjZhg2JMCe+vDf6a9mzWukE7l+wAtesjE7KyteqqKjzxv7aVQeWnul1Ve26mWvEQqyPwl0OctNBfSR9w==\",\n            \"dev\": true,\n            \"requires\": {\n                \"file-type\": \"^12.0.0\",\n                \"globby\": \"^10.0.0\",\n                \"graceful-fs\": \"^4.2.2\",\n                \"junk\": \"^3.1.0\",\n                \"make-dir\": \"^3.0.0\",\n                \"p-pipe\": \"^3.0.0\",\n                \"replace-ext\": \"^1.0.0\"\n            }\n        },\n        \"img-loader\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/img-loader/-/img-loader-4.0.0.tgz\",\n            \"integrity\": \"sha512-UwRcPQdwdOyEHyCxe1V9s9YFwInwEWCpoO+kJGfIqDrBDqA8jZUsEZTxQ0JteNPGw/Gupmwesk2OhLTcnw6tnQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"loader-utils\": \"^1.1.0\"\n            }\n        },\n        \"import-cwd\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/import-cwd/-/import-cwd-3.0.0.tgz\",\n            \"integrity\": \"sha512-4pnzH16plW+hgvRECbDWpQl3cqtvSofHWh44met7ESfZ8UZOWWddm8hEyDTqREJ9RbYHY8gi8DqmaelApoOGMg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"import-from\": \"^3.0.0\"\n            }\n        },\n        \"import-fresh\": {\n            \"version\": \"3.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz\",\n            \"integrity\": \"sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"parent-module\": \"^1.0.0\",\n                \"resolve-from\": \"^4.0.0\"\n            },\n            \"dependencies\": {\n                \"resolve-from\": {\n                    \"version\": \"4.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz\",\n                    \"integrity\": \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"import-from\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/import-from/-/import-from-3.0.0.tgz\",\n            \"integrity\": \"sha512-CiuXOFFSzkU5x/CR0+z7T91Iht4CXgfCxVOFRhh2Zyhg5wOpWvvDLQUsWl+gcN+QscYBjez8hDCt85O7RLDttQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"resolve-from\": \"^5.0.0\"\n            }\n        },\n        \"import-local\": {\n            \"version\": \"3.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/import-local/-/import-local-3.0.3.tgz\",\n            \"integrity\": \"sha512-bE9iaUY3CXH8Cwfan/abDKAxe1KGT9kyGsBPqf6DMK/z0a2OzAsrukeYNgIH6cH5Xr452jb1TUL8rSfCLjZ9uA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"pkg-dir\": \"^4.2.0\",\n                \"resolve-cwd\": \"^3.0.0\"\n            }\n        },\n        \"indent-string\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/indent-string/download/indent-string-4.0.0.tgz\",\n            \"integrity\": \"sha1-Yk+PRJfWGbLZdoUx1Y9BIoVNclE=\",\n            \"dev\": true\n        },\n        \"inflight\": {\n            \"version\": \"1.0.6\",\n            \"resolved\": \"https://registry.npm.taobao.org/inflight/download/inflight-1.0.6.tgz\",\n            \"integrity\": \"sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=\",\n            \"dev\": true,\n            \"requires\": {\n                \"once\": \"^1.3.0\",\n                \"wrappy\": \"1\"\n            }\n        },\n        \"inherits\": {\n            \"version\": \"2.0.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/inherits/download/inherits-2.0.4.tgz\",\n            \"integrity\": \"sha1-D6LGT5MpF8NDOg3tVTY6rjdBa3w=\",\n            \"dev\": true\n        },\n        \"ini\": {\n            \"version\": \"1.3.8\",\n            \"resolved\": \"https://registry.npmjs.org/ini/-/ini-1.3.8.tgz\",\n            \"integrity\": \"sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew==\",\n            \"dev\": true\n        },\n        \"inquirer\": {\n            \"version\": \"3.0.6\",\n            \"resolved\": \"https://registry.npm.taobao.org/inquirer/download/inquirer-3.0.6.tgz\",\n            \"integrity\": \"sha1-4EqqnQW3o8ubD0B9BDdfBEcZA0c=\",\n            \"dev\": true,\n            \"requires\": {\n                \"ansi-escapes\": \"^1.1.0\",\n                \"chalk\": \"^1.0.0\",\n                \"cli-cursor\": \"^2.1.0\",\n                \"cli-width\": \"^2.0.0\",\n                \"external-editor\": \"^2.0.1\",\n                \"figures\": \"^2.0.0\",\n                \"lodash\": \"^4.3.0\",\n                \"mute-stream\": \"0.0.7\",\n                \"run-async\": \"^2.2.0\",\n                \"rx\": \"^4.1.0\",\n                \"string-width\": \"^2.0.0\",\n                \"strip-ansi\": \"^3.0.0\",\n                \"through\": \"^2.3.6\"\n            },\n            \"dependencies\": {\n                \"ansi-styles\": {\n                    \"version\": \"2.2.1\",\n                    \"resolved\": \"https://registry.npm.taobao.org/ansi-styles/download/ansi-styles-2.2.1.tgz?cache=0&sync_timestamp=1601839122515&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fansi-styles%2Fdownload%2Fansi-styles-2.2.1.tgz\",\n                    \"integrity\": \"sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=\",\n                    \"dev\": true\n                },\n                \"chalk\": {\n                    \"version\": \"1.1.3\",\n                    \"resolved\": \"https://registry.npm.taobao.org/chalk/download/chalk-1.1.3.tgz?cache=0&sync_timestamp=1591687000046&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fchalk%2Fdownload%2Fchalk-1.1.3.tgz\",\n                    \"integrity\": \"sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ansi-styles\": \"^2.2.1\",\n                        \"escape-string-regexp\": \"^1.0.2\",\n                        \"has-ansi\": \"^2.0.0\",\n                        \"strip-ansi\": \"^3.0.0\",\n                        \"supports-color\": \"^2.0.0\"\n                    }\n                },\n                \"supports-color\": {\n                    \"version\": \"2.0.0\",\n                    \"resolved\": \"https://registry.npm.taobao.org/supports-color/download/supports-color-2.0.0.tgz?cache=0&sync_timestamp=1598611730985&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fsupports-color%2Fdownload%2Fsupports-color-2.0.0.tgz\",\n                    \"integrity\": \"sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"internal-ip\": {\n            \"version\": \"6.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/internal-ip/-/internal-ip-6.2.0.tgz\",\n            \"integrity\": \"sha512-D8WGsR6yDt8uq7vDMu7mjcR+yRMm3dW8yufyChmszWRjcSHuxLBkR3GdS2HZAjodsaGuCvXeEJpueisXJULghg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"default-gateway\": \"^6.0.0\",\n                \"ipaddr.js\": \"^1.9.1\",\n                \"is-ip\": \"^3.1.0\",\n                \"p-event\": \"^4.2.0\"\n            },\n            \"dependencies\": {\n                \"ipaddr.js\": {\n                    \"version\": \"1.9.1\",\n                    \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\n                    \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"invariant\": {\n            \"version\": \"2.2.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/invariant/download/invariant-2.2.4.tgz\",\n            \"integrity\": \"sha1-YQ88ksk1nOHbYW5TgAjSP/NRWOY=\",\n            \"requires\": {\n                \"loose-envify\": \"^1.0.0\"\n            }\n        },\n        \"ip\": {\n            \"version\": \"1.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/ip/-/ip-1.1.5.tgz\",\n            \"integrity\": \"sha1-vd7XARQpCCjAoDnnLvJfWq7ENUo=\",\n            \"dev\": true\n        },\n        \"ip-regex\": {\n            \"version\": \"4.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/ip-regex/-/ip-regex-4.3.0.tgz\",\n            \"integrity\": \"sha512-B9ZWJxHHOHUhUjCPrMpLD4xEq35bUTClHM1S6CBU5ixQnkZmwipwgc96vAd7AAGM9TGHvJR+Uss+/Ak6UphK+Q==\",\n            \"dev\": true\n        },\n        \"ipaddr.js\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-2.0.1.tgz\",\n            \"integrity\": \"sha512-1qTgH9NG+IIJ4yfKs2e6Pp1bZg8wbDbKHT21HrLIeYBTRLgMYKnMTPAuI3Lcs61nfx5h1xlXnbJtH1kX5/d/ng==\",\n            \"dev\": true\n        },\n        \"is-absolute-url\": {\n            \"version\": \"3.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/is-absolute-url/-/is-absolute-url-3.0.3.tgz\",\n            \"integrity\": \"sha512-opmNIX7uFnS96NtPmhWQgQx6/NYFgsUXYMllcfzwWKUMwfo8kku1TvE6hkNcH+Q1ts5cMVrsY7j0bxXQDciu9Q==\",\n            \"dev\": true\n        },\n        \"is-arguments\": {\n            \"version\": \"1.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/is-arguments/-/is-arguments-1.1.1.tgz\",\n            \"integrity\": \"sha512-8Q7EARjzEnKpt/PCD7e1cgUS0a6X8u5tdSiMqXhojOdoV9TsMsiO+9VLC5vAmO8N7/GmXn7yjR8qnA6bVAEzfA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"call-bind\": \"^1.0.2\",\n                \"has-tostringtag\": \"^1.0.0\"\n            },\n            \"dependencies\": {\n                \"call-bind\": {\n                    \"version\": \"1.0.2\",\n                    \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz\",\n                    \"integrity\": \"sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"function-bind\": \"^1.1.1\",\n                        \"get-intrinsic\": \"^1.0.2\"\n                    }\n                },\n                \"get-intrinsic\": {\n                    \"version\": \"1.1.1\",\n                    \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.1.1.tgz\",\n                    \"integrity\": \"sha512-kWZrnVM42QCiEA2Ig1bG8zjoIMOgxWwYCEeNdwY6Tv/cOSeGpcoX4pXHfKUxNKVoArnrEr2e9srnAxxGIraS9Q==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"function-bind\": \"^1.1.1\",\n                        \"has\": \"^1.0.3\",\n                        \"has-symbols\": \"^1.0.1\"\n                    }\n                }\n            }\n        },\n        \"is-arrayish\": {\n            \"version\": \"0.2.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/is-arrayish/download/is-arrayish-0.2.1.tgz\",\n            \"integrity\": \"sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=\",\n            \"dev\": true\n        },\n        \"is-binary-path\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n            \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"binary-extensions\": \"^2.0.0\"\n            }\n        },\n        \"is-buffer\": {\n            \"version\": \"1.1.6\",\n            \"resolved\": \"https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz\",\n            \"integrity\": \"sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==\",\n            \"dev\": true\n        },\n        \"is-core-module\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/is-core-module/download/is-core-module-2.0.0.tgz?cache=0&sync_timestamp=1603133484044&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fis-core-module%2Fdownload%2Fis-core-module-2.0.0.tgz\",\n            \"integrity\": \"sha1-WFMbcK7R23wOjU6xoKLR3dZL0S0=\",\n            \"dev\": true,\n            \"requires\": {\n                \"has\": \"^1.0.3\"\n            }\n        },\n        \"is-date-object\": {\n            \"version\": \"1.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.5.tgz\",\n            \"integrity\": \"sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"has-tostringtag\": \"^1.0.0\"\n            }\n        },\n        \"is-docker\": {\n            \"version\": \"2.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/is-docker/-/is-docker-2.2.1.tgz\",\n            \"integrity\": \"sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ==\",\n            \"dev\": true\n        },\n        \"is-extglob\": {\n            \"version\": \"2.1.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/is-extglob/download/is-extglob-2.1.1.tgz\",\n            \"integrity\": \"sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=\",\n            \"dev\": true\n        },\n        \"is-fullwidth-code-point\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/is-fullwidth-code-point/download/is-fullwidth-code-point-2.0.0.tgz\",\n            \"integrity\": \"sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=\",\n            \"dev\": true\n        },\n        \"is-glob\": {\n            \"version\": \"4.0.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/is-glob/download/is-glob-4.0.1.tgz\",\n            \"integrity\": \"sha1-dWfb6fL14kZ7x3q4PEopSCQHpdw=\",\n            \"dev\": true,\n            \"requires\": {\n                \"is-extglob\": \"^2.1.1\"\n            }\n        },\n        \"is-ip\": {\n            \"version\": \"3.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/is-ip/-/is-ip-3.1.0.tgz\",\n            \"integrity\": \"sha512-35vd5necO7IitFPjd/YBeqwWnyDWbuLH9ZXQdMfDA8TEo7pv5X8yfrvVO3xbJbLUlERCMvf6X0hTUamQxCYJ9Q==\",\n            \"dev\": true,\n            \"requires\": {\n                \"ip-regex\": \"^4.0.0\"\n            }\n        },\n        \"is-number\": {\n            \"version\": \"7.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n            \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n            \"dev\": true\n        },\n        \"is-obj\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/is-obj/-/is-obj-2.0.0.tgz\",\n            \"integrity\": \"sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w==\",\n            \"dev\": true\n        },\n        \"is-path-cwd\": {\n            \"version\": \"2.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-2.2.0.tgz\",\n            \"integrity\": \"sha512-w942bTcih8fdJPJmQHFzkS76NEP8Kzzvmw92cXsazb8intwLqPibPPdXf4ANdKV3rYMuuQYGIWtvz9JilB3NFQ==\",\n            \"dev\": true\n        },\n        \"is-path-inside\": {\n            \"version\": \"3.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz\",\n            \"integrity\": \"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==\",\n            \"dev\": true\n        },\n        \"is-plain-obj\": {\n            \"version\": \"1.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-1.1.0.tgz\",\n            \"integrity\": \"sha1-caUMhCnfync8kqOQpKA7OfzVHT4=\",\n            \"dev\": true\n        },\n        \"is-plain-object\": {\n            \"version\": \"2.0.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/is-plain-object/download/is-plain-object-2.0.4.tgz?cache=0&sync_timestamp=1599667313656&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fis-plain-object%2Fdownload%2Fis-plain-object-2.0.4.tgz\",\n            \"integrity\": \"sha1-LBY7P6+xtgbZ0Xko8FwqHDjgdnc=\",\n            \"dev\": true,\n            \"requires\": {\n                \"isobject\": \"^3.0.1\"\n            }\n        },\n        \"is-regex\": {\n            \"version\": \"1.1.4\",\n            \"resolved\": \"https://registry.npmjs.org/is-regex/-/is-regex-1.1.4.tgz\",\n            \"integrity\": \"sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"call-bind\": \"^1.0.2\",\n                \"has-tostringtag\": \"^1.0.0\"\n            },\n            \"dependencies\": {\n                \"call-bind\": {\n                    \"version\": \"1.0.2\",\n                    \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz\",\n                    \"integrity\": \"sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"function-bind\": \"^1.1.1\",\n                        \"get-intrinsic\": \"^1.0.2\"\n                    }\n                },\n                \"get-intrinsic\": {\n                    \"version\": \"1.1.1\",\n                    \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.1.1.tgz\",\n                    \"integrity\": \"sha512-kWZrnVM42QCiEA2Ig1bG8zjoIMOgxWwYCEeNdwY6Tv/cOSeGpcoX4pXHfKUxNKVoArnrEr2e9srnAxxGIraS9Q==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"function-bind\": \"^1.1.1\",\n                        \"has\": \"^1.0.3\",\n                        \"has-symbols\": \"^1.0.1\"\n                    }\n                }\n            }\n        },\n        \"is-resolvable\": {\n            \"version\": \"1.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.1.0.tgz\",\n            \"integrity\": \"sha512-qgDYXFSR5WvEfuS5dMj6oTMEbrrSaM0CrFk2Yiq/gXnBvD9pMa2jGXxyhGLfvhZpuMZe18CJpFxAt3CRs42NMg==\",\n            \"dev\": true\n        },\n        \"is-stream\": {\n            \"version\": \"1.1.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/is-stream/download/is-stream-1.1.0.tgz\",\n            \"integrity\": \"sha1-EtSj3U5o4Lec6428hBc66A2RykQ=\",\n            \"dev\": true\n        },\n        \"is-text-path\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/is-text-path/-/is-text-path-1.0.1.tgz\",\n            \"integrity\": \"sha1-Thqg+1G/vLPpJogAE5cgLBd1tm4=\",\n            \"dev\": true,\n            \"requires\": {\n                \"text-extensions\": \"^1.0.0\"\n            }\n        },\n        \"is-wsl\": {\n            \"version\": \"2.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/is-wsl/-/is-wsl-2.2.0.tgz\",\n            \"integrity\": \"sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==\",\n            \"dev\": true,\n            \"requires\": {\n                \"is-docker\": \"^2.0.0\"\n            }\n        },\n        \"isarray\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/isarray/download/isarray-1.0.0.tgz\",\n            \"integrity\": \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\",\n            \"dev\": true\n        },\n        \"isexe\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/isexe/download/isexe-2.0.0.tgz\",\n            \"integrity\": \"sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=\",\n            \"dev\": true\n        },\n        \"isobject\": {\n            \"version\": \"3.0.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/isobject/download/isobject-3.0.1.tgz\",\n            \"integrity\": \"sha1-TkMekrEalzFjaqH5yNHMvP2reN8=\",\n            \"dev\": true\n        },\n        \"jest-worker\": {\n            \"version\": \"27.2.5\",\n            \"resolved\": \"https://registry.npmjs.org/jest-worker/-/jest-worker-27.2.5.tgz\",\n            \"integrity\": \"sha512-HTjEPZtcNKZ4LnhSp02NEH4vE+5OpJ0EsOWYvGQpHgUMLngydESAAMH5Wd/asPf29+XUDQZszxpLg1BkIIA2aw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/node\": \"*\",\n                \"merge-stream\": \"^2.0.0\",\n                \"supports-color\": \"^8.0.0\"\n            },\n            \"dependencies\": {\n                \"has-flag\": {\n                    \"version\": \"4.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n                    \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n                    \"dev\": true\n                },\n                \"supports-color\": {\n                    \"version\": \"8.1.1\",\n                    \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz\",\n                    \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"has-flag\": \"^4.0.0\"\n                    }\n                }\n            }\n        },\n        \"jquery\": {\n            \"version\": \"3.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/jquery/-/jquery-3.6.0.tgz\",\n            \"integrity\": \"sha512-JVzAR/AjBvVt2BmYhxRCSYysDsPcssdmTFnzyLEts9qNwmjmu4JTAMYubEfwVOSwpQ1I1sKKFcxhZCI2buerfw==\"\n        },\n        \"js-levenshtein\": {\n            \"version\": \"1.1.6\",\n            \"resolved\": \"https://registry.npm.taobao.org/js-levenshtein/download/js-levenshtein-1.1.6.tgz\",\n            \"integrity\": \"sha1-xs7ljrNVA3LfjeuF+tXOZs4B1Z0=\",\n            \"dev\": true\n        },\n        \"js-md5\": {\n            \"version\": \"0.7.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/js-md5/download/js-md5-0.7.3.tgz\",\n            \"integrity\": \"sha1-tPL7sLMnRV9ZjWcn447Ccs0Jw/I=\"\n        },\n        \"js-tokens\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/js-tokens/download/js-tokens-4.0.0.tgz\",\n            \"integrity\": \"sha1-GSA/tZmR35jjoocFDUZHzerzJJk=\"\n        },\n        \"jsesc\": {\n            \"version\": \"2.5.2\",\n            \"resolved\": \"https://registry.npm.taobao.org/jsesc/download/jsesc-2.5.2.tgz?cache=0&sync_timestamp=1603891175833&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fjsesc%2Fdownload%2Fjsesc-2.5.2.tgz\",\n            \"integrity\": \"sha1-gFZNLkg9rPbo7yCWUKZ98/DCg6Q=\",\n            \"dev\": true\n        },\n        \"json-parse-better-errors\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npm.taobao.org/json-parse-better-errors/download/json-parse-better-errors-1.0.2.tgz\",\n            \"integrity\": \"sha1-u4Z8+zRQ5pEHwTHRxRS6s9yLyqk=\",\n            \"dev\": true\n        },\n        \"json-parse-even-better-errors\": {\n            \"version\": \"2.3.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/json-parse-even-better-errors/download/json-parse-even-better-errors-2.3.1.tgz\",\n            \"integrity\": \"sha1-fEeAWpQxmSjgV3dAXcEuH3pO4C0=\",\n            \"dev\": true\n        },\n        \"json-schema-traverse\": {\n            \"version\": \"0.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz\",\n            \"integrity\": \"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\",\n            \"dev\": true\n        },\n        \"json-stringify-safe\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz\",\n            \"integrity\": \"sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=\",\n            \"dev\": true\n        },\n        \"json5\": {\n            \"version\": \"2.1.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/json5/download/json5-2.1.3.tgz\",\n            \"integrity\": \"sha1-ybD3+pIzv+WAf+ZvzzpWF+1ZfUM=\",\n            \"dev\": true,\n            \"requires\": {\n                \"minimist\": \"^1.2.5\"\n            }\n        },\n        \"jsonfile\": {\n            \"version\": \"6.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz\",\n            \"integrity\": \"sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"graceful-fs\": \"^4.1.6\",\n                \"universalify\": \"^2.0.0\"\n            }\n        },\n        \"jsonparse\": {\n            \"version\": \"1.3.1\",\n            \"resolved\": \"https://registry.npmjs.org/jsonparse/-/jsonparse-1.3.1.tgz\",\n            \"integrity\": \"sha1-P02uSpH6wxX3EGL4UhzCOfE2YoA=\",\n            \"dev\": true\n        },\n        \"junk\": {\n            \"version\": \"3.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/junk/-/junk-3.1.0.tgz\",\n            \"integrity\": \"sha512-pBxcB3LFc8QVgdggvZWyeys+hnrNWg4OcZIU/1X59k5jQdLBlCsYGRQaz234SqoRLTCgMH00fY0xRJH+F9METQ==\",\n            \"dev\": true\n        },\n        \"kind-of\": {\n            \"version\": \"6.0.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/kind-of/download/kind-of-6.0.3.tgz\",\n            \"integrity\": \"sha1-B8BQNKbDSfoG4k+jWqdttFgM5N0=\",\n            \"dev\": true\n        },\n        \"klona\": {\n            \"version\": \"2.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/klona/-/klona-2.0.4.tgz\",\n            \"integrity\": \"sha512-ZRbnvdg/NxqzC7L9Uyqzf4psi1OM4Cuc+sJAkQPjO6XkQIJTNbfK2Rsmbw8fx1p2mkZdp2FZYo2+LwXYY/uwIA==\",\n            \"dev\": true\n        },\n        \"laravel-mix\": {\n            \"version\": \"6.0.34\",\n            \"resolved\": \"https://registry.npmjs.org/laravel-mix/-/laravel-mix-6.0.34.tgz\",\n            \"integrity\": \"sha512-Je9ksXGCk9ytD+OMsgir043sERPlROMv1Lw5DOvRg2599lT9jWMHQn9x7Hn83HfmFw54mc6tmPLNhSU/SdI7jw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/core\": \"^7.14.5\",\n                \"@babel/plugin-proposal-object-rest-spread\": \"^7.14.5\",\n                \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\",\n                \"@babel/plugin-transform-runtime\": \"^7.14.5\",\n                \"@babel/preset-env\": \"^7.14.5\",\n                \"@babel/runtime\": \"^7.14.5\",\n                \"@types/babel__core\": \"^7.1.14\",\n                \"@types/clean-css\": \"^4.2.4\",\n                \"@types/imagemin-gifsicle\": \"^7.0.0\",\n                \"@types/imagemin-mozjpeg\": \"^8.0.0\",\n                \"@types/imagemin-optipng\": \"^5.2.0\",\n                \"@types/imagemin-svgo\": \"^8.0.0\",\n                \"autoprefixer\": \"^10.2.6\",\n                \"babel-loader\": \"^8.2.2\",\n                \"chalk\": \"^4.1.1\",\n                \"chokidar\": \"^3.5.1\",\n                \"clean-css\": \"^4.2.3 || ^5.1.2\",\n                \"cli-table3\": \"^0.6.0\",\n                \"collect.js\": \"^4.28.5\",\n                \"commander\": \"^7.2.0\",\n                \"concat\": \"^1.0.3\",\n                \"css-loader\": \"^5.2.6\",\n                \"cssnano\": \"^5.0.6\",\n                \"dotenv\": \"^10.0.0\",\n                \"dotenv-expand\": \"^5.1.0\",\n                \"file-loader\": \"^6.2.0\",\n                \"fs-extra\": \"^10.0.0\",\n                \"glob\": \"^7.1.7\",\n                \"html-loader\": \"^1.3.2\",\n                \"imagemin\": \"^7.0.1\",\n                \"img-loader\": \"^4.0.0\",\n                \"lodash\": \"^4.17.21\",\n                \"md5\": \"^2.3.0\",\n                \"mini-css-extract-plugin\": \"^1.6.0\",\n                \"node-libs-browser\": \"^2.2.1\",\n                \"postcss-load-config\": \"^3.0.1\",\n                \"postcss-loader\": \"^6.1.0\",\n                \"semver\": \"^7.3.5\",\n                \"strip-ansi\": \"^6.0.0\",\n                \"style-loader\": \"^2.0.0\",\n                \"terser\": \"^5.7.0\",\n                \"terser-webpack-plugin\": \"^5.1.3\",\n                \"vue-style-loader\": \"^4.1.3\",\n                \"webpack\": \"^5.38.1\",\n                \"webpack-cli\": \"^4.7.2\",\n                \"webpack-dev-server\": \"4.1.1\",\n                \"webpack-merge\": \"^5.8.0\",\n                \"webpack-notifier\": \"^1.13.0\",\n                \"webpackbar\": \"^5.0.0-3\",\n                \"yargs\": \"^17.0.1\"\n            },\n            \"dependencies\": {\n                \"@babel/code-frame\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.15.8.tgz\",\n                    \"integrity\": \"sha512-2IAnmn8zbvC/jKYhq5Ki9I+DwjlrtMPUCH/CpHvqI4dNnlwHwsxoIhlc8WcYY5LSYknXQtAlFYuHfqAFCvQ4Wg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/highlight\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/generator\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.15.8.tgz\",\n                    \"integrity\": \"sha512-ECmAKstXbp1cvpTTZciZCgfOt6iN64lR0d+euv3UZisU5awfRawOvg07Utn/qBGuH4bRIEZKrA/4LzZyXhZr8g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.6\",\n                        \"jsesc\": \"^2.5.1\",\n                        \"source-map\": \"^0.5.0\"\n                    }\n                },\n                \"@babel/helper-annotate-as-pure\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.15.4.tgz\",\n                    \"integrity\": \"sha512-QwrtdNvUNsPCj2lfNQacsGSQvGX8ee1ttrBrcozUP2Sv/jylewBP/8QFe6ZkBsC8T/GYWonNAWJV4aRR9AL2DA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-builder-binary-assignment-operator-visitor\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.15.4.tgz\",\n                    \"integrity\": \"sha512-P8o7JP2Mzi0SdC6eWr1zF+AEYvrsZa7GSY1lTayjF5XJhVH0kjLYUZPvTMflP7tBgZoe9gIhTa60QwFpqh/E0Q==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-explode-assignable-expression\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-create-regexp-features-plugin\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.14.5.tgz\",\n                    \"integrity\": \"sha512-TLawwqpOErY2HhWbGJ2nZT5wSkR192QpN+nBg1THfBfftrlvOh+WbhrxXCH4q4xJ9Gl16BGPR/48JA+Ryiho/A==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-annotate-as-pure\": \"^7.14.5\",\n                        \"regexpu-core\": \"^4.7.1\"\n                    }\n                },\n                \"@babel/helper-explode-assignable-expression\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-explode-assignable-expression/-/helper-explode-assignable-expression-7.15.4.tgz\",\n                    \"integrity\": \"sha512-J14f/vq8+hdC2KoWLIQSsGrC9EFBKE4NFts8pfMpymfApds+fPqR30AOUWc4tyr56h9l/GA1Sxv2q3dLZWbQ/g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-function-name\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.15.4.tgz\",\n                    \"integrity\": \"sha512-Z91cOMM4DseLIGOnog+Z8OI6YseR9bua+HpvLAQ2XayUGU+neTtX+97caALaLdyu53I/fjhbeCnWnRH1O3jFOw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-get-function-arity\": \"^7.15.4\",\n                        \"@babel/template\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-get-function-arity\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.15.4.tgz\",\n                    \"integrity\": \"sha512-1/AlxSF92CmGZzHnC515hm4SirTxtpDnLEJ0UyEMgTMZN+6bxXKg04dKhiRx5Enel+SUA1G1t5Ed/yQia0efrA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-hoist-variables\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.15.4.tgz\",\n                    \"integrity\": \"sha512-VTy085egb3jUGVK9ycIxQiPbquesq0HUQ+tPO0uv5mPEBZipk+5FkRKiWq5apuyTE9FUrjENB0rCf8y+n+UuhA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-member-expression-to-functions\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.15.4.tgz\",\n                    \"integrity\": \"sha512-cokOMkxC/BTyNP1AlY25HuBWM32iCEsLPI4BHDpJCHHm1FU2E7dKWWIXJgQgSFiu4lp8q3bL1BIKwqkSUviqtA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-module-imports\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.15.4.tgz\",\n                    \"integrity\": \"sha512-jeAHZbzUwdW/xHgHQ3QmWR4Jg6j15q4w/gCfwZvtqOxoo5DKtLHk8Bsf4c5RZRC7NmLEs+ohkdq8jFefuvIxAA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-module-transforms\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.15.8.tgz\",\n                    \"integrity\": \"sha512-DfAfA6PfpG8t4S6npwzLvTUpp0sS7JrcuaMiy1Y5645laRJIp/LiLGIBbQKaXSInK8tiGNI7FL7L8UvB8gdUZg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-module-imports\": \"^7.15.4\",\n                        \"@babel/helper-replace-supers\": \"^7.15.4\",\n                        \"@babel/helper-simple-access\": \"^7.15.4\",\n                        \"@babel/helper-split-export-declaration\": \"^7.15.4\",\n                        \"@babel/helper-validator-identifier\": \"^7.15.7\",\n                        \"@babel/template\": \"^7.15.4\",\n                        \"@babel/traverse\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.6\"\n                    }\n                },\n                \"@babel/helper-optimise-call-expression\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.15.4.tgz\",\n                    \"integrity\": \"sha512-E/z9rfbAOt1vDW1DR7k4SzhzotVV5+qMciWV6LaG1g4jeFrkDlJedjtV4h0i4Q/ITnUu+Pk08M7fczsB9GXBDw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-plugin-utils\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz\",\n                    \"integrity\": \"sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==\",\n                    \"dev\": true\n                },\n                \"@babel/helper-remap-async-to-generator\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.15.4.tgz\",\n                    \"integrity\": \"sha512-v53MxgvMK/HCwckJ1bZrq6dNKlmwlyRNYM6ypaRTdXWGOE2c1/SCa6dL/HimhPulGhZKw9W0QhREM583F/t0vQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-annotate-as-pure\": \"^7.15.4\",\n                        \"@babel/helper-wrap-function\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-replace-supers\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.15.4.tgz\",\n                    \"integrity\": \"sha512-/ztT6khaXF37MS47fufrKvIsiQkx1LBRvSJNzRqmbyeZnTwU9qBxXYLaaT/6KaxfKhjs2Wy8kG8ZdsFUuWBjzw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-member-expression-to-functions\": \"^7.15.4\",\n                        \"@babel/helper-optimise-call-expression\": \"^7.15.4\",\n                        \"@babel/traverse\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-simple-access\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.15.4.tgz\",\n                    \"integrity\": \"sha512-UzazrDoIVOZZcTeHHEPYrr1MvTR/K+wgLg6MY6e1CJyaRhbibftF6fR2KU2sFRtI/nERUZR9fBd6aKgBlIBaPg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-skip-transparent-expression-wrappers\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.15.4.tgz\",\n                    \"integrity\": \"sha512-BMRLsdh+D1/aap19TycS4eD1qELGrCBJwzaY9IE8LrpJtJb+H7rQkPIdsfgnMtLBA6DJls7X9z93Z4U8h7xw0A==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-split-export-declaration\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.15.4.tgz\",\n                    \"integrity\": \"sha512-HsFqhLDZ08DxCpBdEVtKmywj6PQbwnF6HHybur0MAnkAKnlS6uHkwnmRIkElB2Owpfb4xL4NwDmDLFubueDXsw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/helper-validator-identifier\": {\n                    \"version\": \"7.15.7\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.15.7.tgz\",\n                    \"integrity\": \"sha512-K4JvCtQqad9OY2+yTU8w+E82ywk/fe+ELNlt1G8z3bVGlZfn/hOcQQsUhGhW/N+tb3fxK800wLtKOE/aM0m72w==\",\n                    \"dev\": true\n                },\n                \"@babel/helper-wrap-function\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.15.4.tgz\",\n                    \"integrity\": \"sha512-Y2o+H/hRV5W8QhIfTpRIBwl57y8PrZt6JM3V8FOo5qarjshHItyH5lXlpMfBfmBefOqSCpKZs/6Dxqp0E/U+uw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-function-name\": \"^7.15.4\",\n                        \"@babel/template\": \"^7.15.4\",\n                        \"@babel/traverse\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/highlight\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.14.5.tgz\",\n                    \"integrity\": \"sha512-qf9u2WFWVV0MppaL877j2dBtQIDgmidgjGk5VIMw3OadXvYaXn66U1BFlH2t4+t3i+8PhedppRv+i40ABzd+gg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.5\",\n                        \"chalk\": \"^2.0.0\",\n                        \"js-tokens\": \"^4.0.0\"\n                    },\n                    \"dependencies\": {\n                        \"chalk\": {\n                            \"version\": \"2.4.2\",\n                            \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n                            \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n                            \"dev\": true,\n                            \"requires\": {\n                                \"ansi-styles\": \"^3.2.1\",\n                                \"escape-string-regexp\": \"^1.0.5\",\n                                \"supports-color\": \"^5.3.0\"\n                            }\n                        }\n                    }\n                },\n                \"@babel/parser\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.15.8.tgz\",\n                    \"integrity\": \"sha512-BRYa3wcQnjS/nqI8Ac94pYYpJfojHVvVXJ97+IDCImX4Jc8W8Xv1+47enbruk+q1etOpsQNwnfFcNGw+gtPGxA==\",\n                    \"dev\": true\n                },\n                \"@babel/plugin-proposal-async-generator-functions\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-async-generator-functions/-/plugin-proposal-async-generator-functions-7.15.8.tgz\",\n                    \"integrity\": \"sha512-2Z5F2R2ibINTc63mY7FLqGfEbmofrHU9FitJW1Q7aPaKFhiPvSq6QEt/BoWN5oME3GVyjcRuNNSRbb9LC0CSWA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                        \"@babel/helper-remap-async-to-generator\": \"^7.15.4\",\n                        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\"\n                    }\n                },\n                \"@babel/plugin-proposal-json-strings\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-json-strings/-/plugin-proposal-json-strings-7.14.5.tgz\",\n                    \"integrity\": \"sha512-NSq2fczJYKVRIsUJyNxrVUMhB27zb7N7pOFGQOhBKJrChbGcgEAqyZrmZswkPk18VMurEeJAaICbfm57vUeTbQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\"\n                    }\n                },\n                \"@babel/plugin-proposal-object-rest-spread\": {\n                    \"version\": \"7.15.6\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.15.6.tgz\",\n                    \"integrity\": \"sha512-qtOHo7A1Vt+O23qEAX+GdBpqaIuD3i9VRrWgCJeq7WO6H2d14EK3q11urj5Te2MAeK97nMiIdRpwd/ST4JFbNg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/compat-data\": \"^7.15.0\",\n                        \"@babel/helper-compilation-targets\": \"^7.15.4\",\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n                        \"@babel/plugin-transform-parameters\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/plugin-proposal-optional-catch-binding\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-optional-catch-binding/-/plugin-proposal-optional-catch-binding-7.14.5.tgz\",\n                    \"integrity\": \"sha512-3Oyiixm0ur7bzO5ybNcZFlmVsygSIQgdOa7cTfOYCMY+wEPAYhZAJxi3mixKFCTCKUhQXuCTtQ1MzrpL3WT8ZQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\"\n                    }\n                },\n                \"@babel/plugin-proposal-unicode-property-regex\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.14.5.tgz\",\n                    \"integrity\": \"sha512-6axIeOU5LnY471KenAB9vI8I5j7NQ2d652hIYwVyRfgaZT5UpiqFKCuVXCDMSrU+3VFafnu2c5m3lrWIlr6A5Q==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-create-regexp-features-plugin\": \"^7.14.5\",\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-arrow-functions\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.14.5.tgz\",\n                    \"integrity\": \"sha512-KOnO0l4+tD5IfOdi4x8C1XmEIRWUjNRV8wc6K2vz/3e8yAOoZZvsRXRRIF/yo/MAOFb4QjtAw9xSxMXbSMRy8A==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-async-to-generator\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.14.5.tgz\",\n                    \"integrity\": \"sha512-szkbzQ0mNk0rpu76fzDdqSyPu0MuvpXgC+6rz5rpMb5OIRxdmHfQxrktL8CYolL2d8luMCZTR0DpIMIdL27IjA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-module-imports\": \"^7.14.5\",\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                        \"@babel/helper-remap-async-to-generator\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-block-scoped-functions\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.14.5.tgz\",\n                    \"integrity\": \"sha512-dtqWqdWZ5NqBX3KzsVCWfQI3A53Ft5pWFCT2eCVUftWZgjc5DpDponbIF1+c+7cSGk2wN0YK7HGL/ezfRbpKBQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-block-scoping\": {\n                    \"version\": \"7.15.3\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.15.3.tgz\",\n                    \"integrity\": \"sha512-nBAzfZwZb4DkaGtOes1Up1nOAp9TDRRFw4XBzBBSG9QK7KVFmYzgj9o9sbPv7TX5ofL4Auq4wZnxCoPnI/lz2Q==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-classes\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.15.4.tgz\",\n                    \"integrity\": \"sha512-Yjvhex8GzBmmPQUvpXRPWQ9WnxXgAFuZSrqOK/eJlOGIXwvv8H3UEdUigl1gb/bnjTrln+e8bkZUYCBt/xYlBg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-annotate-as-pure\": \"^7.15.4\",\n                        \"@babel/helper-function-name\": \"^7.15.4\",\n                        \"@babel/helper-optimise-call-expression\": \"^7.15.4\",\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                        \"@babel/helper-replace-supers\": \"^7.15.4\",\n                        \"@babel/helper-split-export-declaration\": \"^7.15.4\",\n                        \"globals\": \"^11.1.0\"\n                    }\n                },\n                \"@babel/plugin-transform-computed-properties\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.14.5.tgz\",\n                    \"integrity\": \"sha512-pWM+E4283UxaVzLb8UBXv4EIxMovU4zxT1OPnpHJcmnvyY9QbPPTKZfEj31EUvG3/EQRbYAGaYEUZ4yWOBC2xg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-destructuring\": {\n                    \"version\": \"7.14.7\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.14.7.tgz\",\n                    \"integrity\": \"sha512-0mDE99nK+kVh3xlc5vKwB6wnP9ecuSj+zQCa/n0voENtP/zymdT4HH6QEb65wjjcbqr1Jb/7z9Qp7TF5FtwYGw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-dotall-regex\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.14.5.tgz\",\n                    \"integrity\": \"sha512-loGlnBdj02MDsFaHhAIJzh7euK89lBrGIdM9EAtHFo6xKygCUGuuWe07o1oZVk287amtW1n0808sQM99aZt3gw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-create-regexp-features-plugin\": \"^7.14.5\",\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-duplicate-keys\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.14.5.tgz\",\n                    \"integrity\": \"sha512-iJjbI53huKbPDAsJ8EmVmvCKeeq21bAze4fu9GBQtSLqfvzj2oRuHVx4ZkDwEhg1htQ+5OBZh/Ab0XDf5iBZ7A==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-exponentiation-operator\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.14.5.tgz\",\n                    \"integrity\": \"sha512-jFazJhMBc9D27o9jDnIE5ZErI0R0m7PbKXVq77FFvqFbzvTMuv8jaAwLZ5PviOLSFttqKIW0/wxNSDbjLk0tYA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-builder-binary-assignment-operator-visitor\": \"^7.14.5\",\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-for-of\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.15.4.tgz\",\n                    \"integrity\": \"sha512-DRTY9fA751AFBDh2oxydvVm4SYevs5ILTWLs6xKXps4Re/KG5nfUkr+TdHCrRWB8C69TlzVgA9b3RmGWmgN9LA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-function-name\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.14.5.tgz\",\n                    \"integrity\": \"sha512-vbO6kv0fIzZ1GpmGQuvbwwm+O4Cbm2NrPzwlup9+/3fdkuzo1YqOZcXw26+YUJB84Ja7j9yURWposEHLYwxUfQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-function-name\": \"^7.14.5\",\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-literals\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.14.5.tgz\",\n                    \"integrity\": \"sha512-ql33+epql2F49bi8aHXxvLURHkxJbSmMKl9J5yHqg4PLtdE6Uc48CH1GS6TQvZ86eoB/ApZXwm7jlA+B3kra7A==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-modules-amd\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.14.5.tgz\",\n                    \"integrity\": \"sha512-3lpOU8Vxmp3roC4vzFpSdEpGUWSMsHFreTWOMMLzel2gNGfHE5UWIh/LN6ghHs2xurUp4jRFYMUIZhuFbody1g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-module-transforms\": \"^7.14.5\",\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                        \"babel-plugin-dynamic-import-node\": \"^2.3.3\"\n                    }\n                },\n                \"@babel/plugin-transform-modules-commonjs\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.15.4.tgz\",\n                    \"integrity\": \"sha512-qg4DPhwG8hKp4BbVDvX1s8cohM8a6Bvptu4l6Iingq5rW+yRUAhe/YRup/YcW2zCOlrysEWVhftIcKzrEZv3sA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-module-transforms\": \"^7.15.4\",\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                        \"@babel/helper-simple-access\": \"^7.15.4\",\n                        \"babel-plugin-dynamic-import-node\": \"^2.3.3\"\n                    }\n                },\n                \"@babel/plugin-transform-modules-systemjs\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.15.4.tgz\",\n                    \"integrity\": \"sha512-fJUnlQrl/mezMneR72CKCgtOoahqGJNVKpompKwzv3BrEXdlPspTcyxrZ1XmDTIr9PpULrgEQo3qNKp6dW7ssw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-hoist-variables\": \"^7.15.4\",\n                        \"@babel/helper-module-transforms\": \"^7.15.4\",\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                        \"@babel/helper-validator-identifier\": \"^7.14.9\",\n                        \"babel-plugin-dynamic-import-node\": \"^2.3.3\"\n                    }\n                },\n                \"@babel/plugin-transform-modules-umd\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.14.5.tgz\",\n                    \"integrity\": \"sha512-RfPGoagSngC06LsGUYyM9QWSXZ8MysEjDJTAea1lqRjNECE3y0qIJF/qbvJxc4oA4s99HumIMdXOrd+TdKaAAA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-module-transforms\": \"^7.14.5\",\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-named-capturing-groups-regex\": {\n                    \"version\": \"7.14.9\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.14.9.tgz\",\n                    \"integrity\": \"sha512-l666wCVYO75mlAtGFfyFwnWmIXQm3kSH0C3IRnJqWcZbWkoihyAdDhFm2ZWaxWTqvBvhVFfJjMRQ0ez4oN1yYA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-create-regexp-features-plugin\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-new-target\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.14.5.tgz\",\n                    \"integrity\": \"sha512-Nx054zovz6IIRWEB49RDRuXGI4Gy0GMgqG0cII9L3MxqgXz/+rgII+RU58qpo4g7tNEx1jG7rRVH4ihZoP4esQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-object-super\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.14.5.tgz\",\n                    \"integrity\": \"sha512-MKfOBWzK0pZIrav9z/hkRqIk/2bTv9qvxHzPQc12RcVkMOzpIKnFCNYJip00ssKWYkd8Sf5g0Wr7pqJ+cmtuFg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                        \"@babel/helper-replace-supers\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-parameters\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.15.4.tgz\",\n                    \"integrity\": \"sha512-9WB/GUTO6lvJU3XQsSr6J/WKvBC2hcs4Pew8YxZagi6GkTdniyqp8On5kqdK8MN0LMeu0mGbhPN+O049NV/9FQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-regenerator\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.14.5.tgz\",\n                    \"integrity\": \"sha512-NVIY1W3ITDP5xQl50NgTKlZ0GrotKtLna08/uGY6ErQt6VEQZXla86x/CTddm5gZdcr+5GSsvMeTmWA5Ii6pkg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"regenerator-transform\": \"^0.14.2\"\n                    }\n                },\n                \"@babel/plugin-transform-runtime\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-runtime/-/plugin-transform-runtime-7.15.8.tgz\",\n                    \"integrity\": \"sha512-+6zsde91jMzzvkzuEA3k63zCw+tm/GvuuabkpisgbDMTPQsIMHllE3XczJFFtEHLjjhKQFZmGQVRdELetlWpVw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-module-imports\": \"^7.15.4\",\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                        \"babel-plugin-polyfill-corejs2\": \"^0.2.2\",\n                        \"babel-plugin-polyfill-corejs3\": \"^0.2.5\",\n                        \"babel-plugin-polyfill-regenerator\": \"^0.2.2\",\n                        \"semver\": \"^6.3.0\"\n                    },\n                    \"dependencies\": {\n                        \"semver\": {\n                            \"version\": \"6.3.0\",\n                            \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.0.tgz\",\n                            \"integrity\": \"sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==\",\n                            \"dev\": true\n                        }\n                    }\n                },\n                \"@babel/plugin-transform-shorthand-properties\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.14.5.tgz\",\n                    \"integrity\": \"sha512-xLucks6T1VmGsTB+GWK5Pl9Jl5+nRXD1uoFdA5TSO6xtiNjtXTjKkmPdFXVLGlK5A2/or/wQMKfmQ2Y0XJfn5g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-spread\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.15.8.tgz\",\n                    \"integrity\": \"sha512-/daZ8s2tNaRekl9YJa9X4bzjpeRZLt122cpgFnQPLGUe61PH8zMEBmYqKkW5xF5JUEh5buEGXJoQpqBmIbpmEQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/plugin-transform-sticky-regex\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.14.5.tgz\",\n                    \"integrity\": \"sha512-Z7F7GyvEMzIIbwnziAZmnSNpdijdr4dWt+FJNBnBLz5mwDFkqIXU9wmBcWWad3QeJF5hMTkRe4dAq2sUZiG+8A==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-template-literals\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.14.5.tgz\",\n                    \"integrity\": \"sha512-22btZeURqiepOfuy/VkFr+zStqlujWaarpMErvay7goJS6BWwdd6BY9zQyDLDa4x2S3VugxFb162IZ4m/S/+Gg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-typeof-symbol\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.14.5.tgz\",\n                    \"integrity\": \"sha512-lXzLD30ffCWseTbMQzrvDWqljvZlHkXU+CnseMhkMNqU1sASnCsz3tSzAaH3vCUXb9PHeUb90ZT1BdFTm1xxJw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/plugin-transform-unicode-regex\": {\n                    \"version\": \"7.14.5\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.14.5.tgz\",\n                    \"integrity\": \"sha512-UygduJpC5kHeCiRw/xDVzC+wj8VaYSoKl5JNVmbP7MadpNinAm3SvZCxZ42H37KZBKztz46YC73i9yV34d0Tzw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-create-regexp-features-plugin\": \"^7.14.5\",\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n                    }\n                },\n                \"@babel/preset-env\": {\n                    \"version\": \"7.15.8\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.15.8.tgz\",\n                    \"integrity\": \"sha512-rCC0wH8husJgY4FPbHsiYyiLxSY8oMDJH7Rl6RQMknbN9oDDHhM9RDFvnGM2MgkbUJzSQB4gtuwygY5mCqGSsA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/compat-data\": \"^7.15.0\",\n                        \"@babel/helper-compilation-targets\": \"^7.15.4\",\n                        \"@babel/helper-plugin-utils\": \"^7.14.5\",\n                        \"@babel/helper-validator-option\": \"^7.14.5\",\n                        \"@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining\": \"^7.15.4\",\n                        \"@babel/plugin-proposal-async-generator-functions\": \"^7.15.8\",\n                        \"@babel/plugin-proposal-class-properties\": \"^7.14.5\",\n                        \"@babel/plugin-proposal-class-static-block\": \"^7.15.4\",\n                        \"@babel/plugin-proposal-dynamic-import\": \"^7.14.5\",\n                        \"@babel/plugin-proposal-export-namespace-from\": \"^7.14.5\",\n                        \"@babel/plugin-proposal-json-strings\": \"^7.14.5\",\n                        \"@babel/plugin-proposal-logical-assignment-operators\": \"^7.14.5\",\n                        \"@babel/plugin-proposal-nullish-coalescing-operator\": \"^7.14.5\",\n                        \"@babel/plugin-proposal-numeric-separator\": \"^7.14.5\",\n                        \"@babel/plugin-proposal-object-rest-spread\": \"^7.15.6\",\n                        \"@babel/plugin-proposal-optional-catch-binding\": \"^7.14.5\",\n                        \"@babel/plugin-proposal-optional-chaining\": \"^7.14.5\",\n                        \"@babel/plugin-proposal-private-methods\": \"^7.14.5\",\n                        \"@babel/plugin-proposal-private-property-in-object\": \"^7.15.4\",\n                        \"@babel/plugin-proposal-unicode-property-regex\": \"^7.14.5\",\n                        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\",\n                        \"@babel/plugin-syntax-class-properties\": \"^7.12.13\",\n                        \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\",\n                        \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\",\n                        \"@babel/plugin-syntax-export-namespace-from\": \"^7.8.3\",\n                        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\",\n                        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\",\n                        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\",\n                        \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\",\n                        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n                        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\",\n                        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\",\n                        \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\",\n                        \"@babel/plugin-syntax-top-level-await\": \"^7.14.5\",\n                        \"@babel/plugin-transform-arrow-functions\": \"^7.14.5\",\n                        \"@babel/plugin-transform-async-to-generator\": \"^7.14.5\",\n                        \"@babel/plugin-transform-block-scoped-functions\": \"^7.14.5\",\n                        \"@babel/plugin-transform-block-scoping\": \"^7.15.3\",\n                        \"@babel/plugin-transform-classes\": \"^7.15.4\",\n                        \"@babel/plugin-transform-computed-properties\": \"^7.14.5\",\n                        \"@babel/plugin-transform-destructuring\": \"^7.14.7\",\n                        \"@babel/plugin-transform-dotall-regex\": \"^7.14.5\",\n                        \"@babel/plugin-transform-duplicate-keys\": \"^7.14.5\",\n                        \"@babel/plugin-transform-exponentiation-operator\": \"^7.14.5\",\n                        \"@babel/plugin-transform-for-of\": \"^7.15.4\",\n                        \"@babel/plugin-transform-function-name\": \"^7.14.5\",\n                        \"@babel/plugin-transform-literals\": \"^7.14.5\",\n                        \"@babel/plugin-transform-member-expression-literals\": \"^7.14.5\",\n                        \"@babel/plugin-transform-modules-amd\": \"^7.14.5\",\n                        \"@babel/plugin-transform-modules-commonjs\": \"^7.15.4\",\n                        \"@babel/plugin-transform-modules-systemjs\": \"^7.15.4\",\n                        \"@babel/plugin-transform-modules-umd\": \"^7.14.5\",\n                        \"@babel/plugin-transform-named-capturing-groups-regex\": \"^7.14.9\",\n                        \"@babel/plugin-transform-new-target\": \"^7.14.5\",\n                        \"@babel/plugin-transform-object-super\": \"^7.14.5\",\n                        \"@babel/plugin-transform-parameters\": \"^7.15.4\",\n                        \"@babel/plugin-transform-property-literals\": \"^7.14.5\",\n                        \"@babel/plugin-transform-regenerator\": \"^7.14.5\",\n                        \"@babel/plugin-transform-reserved-words\": \"^7.14.5\",\n                        \"@babel/plugin-transform-shorthand-properties\": \"^7.14.5\",\n                        \"@babel/plugin-transform-spread\": \"^7.15.8\",\n                        \"@babel/plugin-transform-sticky-regex\": \"^7.14.5\",\n                        \"@babel/plugin-transform-template-literals\": \"^7.14.5\",\n                        \"@babel/plugin-transform-typeof-symbol\": \"^7.14.5\",\n                        \"@babel/plugin-transform-unicode-escapes\": \"^7.14.5\",\n                        \"@babel/plugin-transform-unicode-regex\": \"^7.14.5\",\n                        \"@babel/preset-modules\": \"^0.1.4\",\n                        \"@babel/types\": \"^7.15.6\",\n                        \"babel-plugin-polyfill-corejs2\": \"^0.2.2\",\n                        \"babel-plugin-polyfill-corejs3\": \"^0.2.5\",\n                        \"babel-plugin-polyfill-regenerator\": \"^0.2.2\",\n                        \"core-js-compat\": \"^3.16.0\",\n                        \"semver\": \"^6.3.0\"\n                    },\n                    \"dependencies\": {\n                        \"semver\": {\n                            \"version\": \"6.3.0\",\n                            \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.0.tgz\",\n                            \"integrity\": \"sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==\",\n                            \"dev\": true\n                        }\n                    }\n                },\n                \"@babel/runtime\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.15.4.tgz\",\n                    \"integrity\": \"sha512-99catp6bHCaxr4sJ/DbTGgHS4+Rs2RVd2g7iOap6SLGPDknRK9ztKNsE/Fg6QhSeh1FGE5f6gHGQmvvn3I3xhw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"regenerator-runtime\": \"^0.13.4\"\n                    }\n                },\n                \"@babel/template\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.15.4.tgz\",\n                    \"integrity\": \"sha512-UgBAfEa1oGuYgDIPM2G+aHa4Nlo9Lh6mGD2bDBGMTbYnc38vulXPuC1MGjYILIEmlwl6Rd+BPR9ee3gm20CBtg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\"\n                    }\n                },\n                \"@babel/traverse\": {\n                    \"version\": \"7.15.4\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.15.4.tgz\",\n                    \"integrity\": \"sha512-W6lQD8l4rUbQR/vYgSuCAE75ADyyQvOpFVsvPPdkhf6lATXAsQIG9YdtOcu8BB1dZ0LKu+Zo3c1wEcbKeuhdlA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/code-frame\": \"^7.14.5\",\n                        \"@babel/generator\": \"^7.15.4\",\n                        \"@babel/helper-function-name\": \"^7.15.4\",\n                        \"@babel/helper-hoist-variables\": \"^7.15.4\",\n                        \"@babel/helper-split-export-declaration\": \"^7.15.4\",\n                        \"@babel/parser\": \"^7.15.4\",\n                        \"@babel/types\": \"^7.15.4\",\n                        \"debug\": \"^4.1.0\",\n                        \"globals\": \"^11.1.0\"\n                    }\n                },\n                \"@babel/types\": {\n                    \"version\": \"7.15.6\",\n                    \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.15.6.tgz\",\n                    \"integrity\": \"sha512-BPU+7QhqNjmWyDO0/vitH/CuhpV8ZmK1wpKva8nuyNF5MJfuRNWMc+hc14+u9xT93kvykMdncrJT19h74uB1Ig==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@babel/helper-validator-identifier\": \"^7.14.9\",\n                        \"to-fast-properties\": \"^2.0.0\"\n                    }\n                },\n                \"ansi-regex\": {\n                    \"version\": \"5.0.1\",\n                    \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n                    \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n                    \"dev\": true\n                },\n                \"chalk\": {\n                    \"version\": \"4.1.2\",\n                    \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n                    \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ansi-styles\": \"^4.1.0\",\n                        \"supports-color\": \"^7.1.0\"\n                    },\n                    \"dependencies\": {\n                        \"ansi-styles\": {\n                            \"version\": \"4.3.0\",\n                            \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n                            \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n                            \"dev\": true,\n                            \"requires\": {\n                                \"color-convert\": \"^2.0.1\"\n                            }\n                        },\n                        \"supports-color\": {\n                            \"version\": \"7.2.0\",\n                            \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n                            \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n                            \"dev\": true,\n                            \"requires\": {\n                                \"has-flag\": \"^4.0.0\"\n                            }\n                        }\n                    }\n                },\n                \"color-convert\": {\n                    \"version\": \"2.0.1\",\n                    \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n                    \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"color-name\": \"~1.1.4\"\n                    }\n                },\n                \"debug\": {\n                    \"version\": \"4.3.2\",\n                    \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.2.tgz\",\n                    \"integrity\": \"sha512-mOp8wKcvj7XxC78zLgw/ZA+6TSgkoE2C/ienthhRD298T7UNwAg9diBpLRxC0mOezLl4B0xV7M0cCO6P/O0Xhw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ms\": \"2.1.2\"\n                    }\n                },\n                \"glob\": {\n                    \"version\": \"7.2.0\",\n                    \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.0.tgz\",\n                    \"integrity\": \"sha512-lmLf6gtyrPq8tTjSmrO94wBeQbFR3HbLHbuyD69wuyQkImp2hWqMGB47OX65FBkPffO641IP9jWa1z4ivqG26Q==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"fs.realpath\": \"^1.0.0\",\n                        \"inflight\": \"^1.0.4\",\n                        \"inherits\": \"2\",\n                        \"minimatch\": \"^3.0.4\",\n                        \"once\": \"^1.3.0\",\n                        \"path-is-absolute\": \"^1.0.0\"\n                    }\n                },\n                \"has-flag\": {\n                    \"version\": \"4.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n                    \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n                    \"dev\": true\n                },\n                \"ms\": {\n                    \"version\": \"2.1.2\",\n                    \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n                    \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n                    \"dev\": true\n                },\n                \"semver\": {\n                    \"version\": \"7.3.5\",\n                    \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.3.5.tgz\",\n                    \"integrity\": \"sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"lru-cache\": \"^6.0.0\"\n                    }\n                },\n                \"strip-ansi\": {\n                    \"version\": \"6.0.1\",\n                    \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n                    \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ansi-regex\": \"^5.0.1\"\n                    }\n                }\n            }\n        },\n        \"lilconfig\": {\n            \"version\": \"2.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/lilconfig/-/lilconfig-2.0.3.tgz\",\n            \"integrity\": \"sha512-EHKqr/+ZvdKCifpNrJCKxBTgk5XupZA3y/aCPY9mxfgBzmgh93Mt/WqjjQ38oMxXuvDokaKiM3lAgvSH2sjtHg==\",\n            \"dev\": true\n        },\n        \"lines-and-columns\": {\n            \"version\": \"1.1.6\",\n            \"resolved\": \"https://registry.npm.taobao.org/lines-and-columns/download/lines-and-columns-1.1.6.tgz\",\n            \"integrity\": \"sha1-HADHQ7QzzQpOgHWPe2SldEDZ/wA=\",\n            \"dev\": true\n        },\n        \"linkify-it\": {\n            \"version\": \"3.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/linkify-it/-/linkify-it-3.0.3.tgz\",\n            \"integrity\": \"sha512-ynTsyrFSdE5oZ/O9GEf00kPngmOfVwazR5GKDq6EYfhlpFug3J2zybX56a2PRRpc9P+FuSoGNAwjlbDs9jJBPQ==\",\n            \"requires\": {\n                \"uc.micro\": \"^1.0.1\"\n            }\n        },\n        \"load-json-file\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/load-json-file/-/load-json-file-4.0.0.tgz\",\n            \"integrity\": \"sha1-L19Fq5HjMhYjT9U62rZo607AmTs=\",\n            \"dev\": true,\n            \"requires\": {\n                \"graceful-fs\": \"^4.1.2\",\n                \"parse-json\": \"^4.0.0\",\n                \"pify\": \"^3.0.0\",\n                \"strip-bom\": \"^3.0.0\"\n            },\n            \"dependencies\": {\n                \"parse-json\": {\n                    \"version\": \"4.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz\",\n                    \"integrity\": \"sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"error-ex\": \"^1.3.1\",\n                        \"json-parse-better-errors\": \"^1.0.1\"\n                    }\n                },\n                \"pify\": {\n                    \"version\": \"3.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/pify/-/pify-3.0.0.tgz\",\n                    \"integrity\": \"sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"loader-runner\": {\n            \"version\": \"4.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/loader-runner/-/loader-runner-4.2.0.tgz\",\n            \"integrity\": \"sha512-92+huvxMvYlMzMt0iIOukcwYBFpkYJdpl2xsZ7LrlayO7E8SOv+JJUEK17B/dJIHAOLMfh2dZZ/Y18WgmGtYNw==\",\n            \"dev\": true\n        },\n        \"loader-utils\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/loader-utils/download/loader-utils-1.4.0.tgz\",\n            \"integrity\": \"sha1-xXm140yzSxp07cbB+za/o3HVphM=\",\n            \"dev\": true,\n            \"requires\": {\n                \"big.js\": \"^5.2.2\",\n                \"emojis-list\": \"^3.0.0\",\n                \"json5\": \"^1.0.1\"\n            },\n            \"dependencies\": {\n                \"json5\": {\n                    \"version\": \"1.0.1\",\n                    \"resolved\": \"https://registry.npm.taobao.org/json5/download/json5-1.0.1.tgz\",\n                    \"integrity\": \"sha1-d5+wAYYE+oVOrL9iUhgNg1Q+Pb4=\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"minimist\": \"^1.2.0\"\n                    }\n                }\n            }\n        },\n        \"locate-path\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/locate-path/download/locate-path-2.0.0.tgz\",\n            \"integrity\": \"sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=\",\n            \"dev\": true,\n            \"requires\": {\n                \"p-locate\": \"^2.0.0\",\n                \"path-exists\": \"^3.0.0\"\n            }\n        },\n        \"lodash\": {\n            \"version\": \"4.17.21\",\n            \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n            \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\"\n        },\n        \"lodash.debounce\": {\n            \"version\": \"4.0.8\",\n            \"resolved\": \"https://registry.npmjs.org/lodash.debounce/-/lodash.debounce-4.0.8.tgz\",\n            \"integrity\": \"sha1-gteb/zCmfEAF/9XiUVMArZyk168=\",\n            \"dev\": true\n        },\n        \"lodash.ismatch\": {\n            \"version\": \"4.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/lodash.ismatch/-/lodash.ismatch-4.4.0.tgz\",\n            \"integrity\": \"sha1-dWy1FQyjum8RCFp4hJZF8Yj4Xzc=\",\n            \"dev\": true\n        },\n        \"lodash.kebabcase\": {\n            \"version\": \"4.1.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/lodash.kebabcase/download/lodash.kebabcase-4.1.1.tgz\",\n            \"integrity\": \"sha1-hImxyw0p/4gZXM7KRI/21swpXDY=\",\n            \"dev\": true\n        },\n        \"lodash.memoize\": {\n            \"version\": \"4.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/lodash.memoize/-/lodash.memoize-4.1.2.tgz\",\n            \"integrity\": \"sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4=\",\n            \"dev\": true\n        },\n        \"lodash.throttle\": {\n            \"version\": \"4.1.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/lodash.throttle/download/lodash.throttle-4.1.1.tgz\",\n            \"integrity\": \"sha1-wj6RtxAkKscMN/HhzaknTMOb8vQ=\"\n        },\n        \"lodash.uniq\": {\n            \"version\": \"4.5.0\",\n            \"resolved\": \"https://registry.npmjs.org/lodash.uniq/-/lodash.uniq-4.5.0.tgz\",\n            \"integrity\": \"sha1-0CJTc662Uq3BvILklFM5qEJ1R3M=\",\n            \"dev\": true\n        },\n        \"loose-envify\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/loose-envify/download/loose-envify-1.4.0.tgz\",\n            \"integrity\": \"sha1-ce5R+nvkyuwaY4OffmgtgTLTDK8=\",\n            \"requires\": {\n                \"js-tokens\": \"^3.0.0 || ^4.0.0\"\n            }\n        },\n        \"lower-case\": {\n            \"version\": \"2.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/lower-case/-/lower-case-2.0.2.tgz\",\n            \"integrity\": \"sha512-7fm3l3NAF9WfN6W3JOmf5drwpVqX78JtoGJ3A6W0a6ZnldM41w2fV5D490psKFTpMds8TJse/eHLFFsNHHjHgg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"tslib\": \"^2.0.3\"\n            }\n        },\n        \"lru-cache\": {\n            \"version\": \"6.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n            \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"yallist\": \"^4.0.0\"\n            }\n        },\n        \"make-dir\": {\n            \"version\": \"3.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz\",\n            \"integrity\": \"sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"semver\": \"^6.0.0\"\n            },\n            \"dependencies\": {\n                \"semver\": {\n                    \"version\": \"6.3.0\",\n                    \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.0.tgz\",\n                    \"integrity\": \"sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"map-obj\": {\n            \"version\": \"4.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/map-obj/-/map-obj-4.3.0.tgz\",\n            \"integrity\": \"sha512-hdN1wVrZbb29eBGiGjJbeP8JbKjq1urkHJ/LIP/NY48MZ1QVXUsQBV1G1zvYFHn1XE06cwjBsOI2K3Ulnj1YXQ==\",\n            \"dev\": true\n        },\n        \"markdown-it\": {\n            \"version\": \"12.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/markdown-it/-/markdown-it-12.2.0.tgz\",\n            \"integrity\": \"sha512-Wjws+uCrVQRqOoJvze4HCqkKl1AsSh95iFAeQDwnyfxM09divCBSXlDR1uTvyUP3Grzpn4Ru8GeCxYPM8vkCQg==\",\n            \"requires\": {\n                \"argparse\": \"^2.0.1\",\n                \"entities\": \"~2.1.0\",\n                \"linkify-it\": \"^3.0.1\",\n                \"mdurl\": \"^1.0.1\",\n                \"uc.micro\": \"^1.0.5\"\n            }\n        },\n        \"md5\": {\n            \"version\": \"2.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/md5/-/md5-2.3.0.tgz\",\n            \"integrity\": \"sha512-T1GITYmFaKuO91vxyoQMFETst+O71VUPEU3ze5GNzDm0OWdP8v1ziTaAEPUr/3kLsY3Sftgz242A1SetQiDL7g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"charenc\": \"0.0.2\",\n                \"crypt\": \"0.0.2\",\n                \"is-buffer\": \"~1.1.6\"\n            }\n        },\n        \"md5.js\": {\n            \"version\": \"1.3.5\",\n            \"resolved\": \"https://registry.npmjs.org/md5.js/-/md5.js-1.3.5.tgz\",\n            \"integrity\": \"sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"hash-base\": \"^3.0.0\",\n                \"inherits\": \"^2.0.1\",\n                \"safe-buffer\": \"^5.1.2\"\n            }\n        },\n        \"mdn-data\": {\n            \"version\": \"2.0.14\",\n            \"resolved\": \"https://registry.npmjs.org/mdn-data/-/mdn-data-2.0.14.tgz\",\n            \"integrity\": \"sha512-dn6wd0uw5GsdswPFfsgMp5NSB0/aDe6fK94YJV/AJDYXL6HVLWBsxeq7js7Ad+mU2K9LAlwpk6kN2D5mwCPVow==\",\n            \"dev\": true\n        },\n        \"mdurl\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/mdurl/-/mdurl-1.0.1.tgz\",\n            \"integrity\": \"sha1-/oWy7HWlkDfyrf7BAP1sYBdhFS4=\"\n        },\n        \"media-typer\": {\n            \"version\": \"0.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\n            \"integrity\": \"sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g=\",\n            \"dev\": true\n        },\n        \"memfs\": {\n            \"version\": \"3.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/memfs/-/memfs-3.3.0.tgz\",\n            \"integrity\": \"sha512-BEE62uMfKOavX3iG7GYX43QJ+hAeeWnwIAuJ/R6q96jaMtiLzhsxHJC8B1L7fK7Pt/vXDRwb3SG/yBpNGDPqzg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"fs-monkey\": \"1.0.3\"\n            }\n        },\n        \"meow\": {\n            \"version\": \"8.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/meow/-/meow-8.1.2.tgz\",\n            \"integrity\": \"sha512-r85E3NdZ+mpYk1C6RjPFEMSE+s1iZMuHtsHAqY0DT3jZczl0diWUZ8g6oU7h0M9cD2EL+PzaYghhCLzR0ZNn5Q==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/minimist\": \"^1.2.0\",\n                \"camelcase-keys\": \"^6.2.2\",\n                \"decamelize-keys\": \"^1.1.0\",\n                \"hard-rejection\": \"^2.1.0\",\n                \"minimist-options\": \"4.1.0\",\n                \"normalize-package-data\": \"^3.0.0\",\n                \"read-pkg-up\": \"^7.0.1\",\n                \"redent\": \"^3.0.0\",\n                \"trim-newlines\": \"^3.0.0\",\n                \"type-fest\": \"^0.18.0\",\n                \"yargs-parser\": \"^20.2.3\"\n            },\n            \"dependencies\": {\n                \"find-up\": {\n                    \"version\": \"4.1.0\",\n                    \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz\",\n                    \"integrity\": \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"locate-path\": \"^5.0.0\",\n                        \"path-exists\": \"^4.0.0\"\n                    }\n                },\n                \"hosted-git-info\": {\n                    \"version\": \"2.8.9\",\n                    \"resolved\": \"https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.9.tgz\",\n                    \"integrity\": \"sha512-mxIDAb9Lsm6DoOJ7xH+5+X4y1LU/4Hi50L9C5sIswK3JzULS4bwk1FvjdBgvYR4bzT4tuUQiC15FE2f5HbLvYw==\",\n                    \"dev\": true\n                },\n                \"locate-path\": {\n                    \"version\": \"5.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz\",\n                    \"integrity\": \"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"p-locate\": \"^4.1.0\"\n                    }\n                },\n                \"p-limit\": {\n                    \"version\": \"2.3.0\",\n                    \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\n                    \"integrity\": \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"p-try\": \"^2.0.0\"\n                    }\n                },\n                \"p-locate\": {\n                    \"version\": \"4.1.0\",\n                    \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz\",\n                    \"integrity\": \"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"p-limit\": \"^2.2.0\"\n                    }\n                },\n                \"p-try\": {\n                    \"version\": \"2.2.0\",\n                    \"resolved\": \"https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz\",\n                    \"integrity\": \"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\",\n                    \"dev\": true\n                },\n                \"path-exists\": {\n                    \"version\": \"4.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n                    \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n                    \"dev\": true\n                },\n                \"read-pkg\": {\n                    \"version\": \"5.2.0\",\n                    \"resolved\": \"https://registry.npmjs.org/read-pkg/-/read-pkg-5.2.0.tgz\",\n                    \"integrity\": \"sha512-Ug69mNOpfvKDAc2Q8DRpMjjzdtrnv9HcSMX+4VsZxD1aZ6ZzrIE7rlzXBtWTyhULSMKg076AW6WR5iZpD0JiOg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@types/normalize-package-data\": \"^2.4.0\",\n                        \"normalize-package-data\": \"^2.5.0\",\n                        \"parse-json\": \"^5.0.0\",\n                        \"type-fest\": \"^0.6.0\"\n                    },\n                    \"dependencies\": {\n                        \"normalize-package-data\": {\n                            \"version\": \"2.5.0\",\n                            \"resolved\": \"https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz\",\n                            \"integrity\": \"sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==\",\n                            \"dev\": true,\n                            \"requires\": {\n                                \"hosted-git-info\": \"^2.1.4\",\n                                \"resolve\": \"^1.10.0\",\n                                \"semver\": \"2 || 3 || 4 || 5\",\n                                \"validate-npm-package-license\": \"^3.0.1\"\n                            }\n                        },\n                        \"type-fest\": {\n                            \"version\": \"0.6.0\",\n                            \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.6.0.tgz\",\n                            \"integrity\": \"sha512-q+MB8nYR1KDLrgr4G5yemftpMC7/QLqVndBmEEdqzmNj5dcFOO4Oo8qlwZE3ULT3+Zim1F8Kq4cBnikNhlCMlg==\",\n                            \"dev\": true\n                        }\n                    }\n                },\n                \"read-pkg-up\": {\n                    \"version\": \"7.0.1\",\n                    \"resolved\": \"https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-7.0.1.tgz\",\n                    \"integrity\": \"sha512-zK0TB7Xd6JpCLmlLmufqykGE+/TlOePD6qKClNW7hHDKFh/J7/7gCWGR7joEQEW1bKq3a3yUZSObOoWLFQ4ohg==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"find-up\": \"^4.1.0\",\n                        \"read-pkg\": \"^5.2.0\",\n                        \"type-fest\": \"^0.8.1\"\n                    },\n                    \"dependencies\": {\n                        \"type-fest\": {\n                            \"version\": \"0.8.1\",\n                            \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.8.1.tgz\",\n                            \"integrity\": \"sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA==\",\n                            \"dev\": true\n                        }\n                    }\n                }\n            }\n        },\n        \"merge-descriptors\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz\",\n            \"integrity\": \"sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E=\",\n            \"dev\": true\n        },\n        \"merge-stream\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz\",\n            \"integrity\": \"sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==\",\n            \"dev\": true\n        },\n        \"merge2\": {\n            \"version\": \"1.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz\",\n            \"integrity\": \"sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==\",\n            \"dev\": true\n        },\n        \"methods\": {\n            \"version\": \"1.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\n            \"integrity\": \"sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=\",\n            \"dev\": true\n        },\n        \"micromatch\": {\n            \"version\": \"4.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/micromatch/-/micromatch-4.0.4.tgz\",\n            \"integrity\": \"sha512-pRmzw/XUcwXGpD9aI9q/0XOwLNygjETJ8y0ao0wdqprrzDa4YnxLcz7fQRZr8voh8V10kGhABbNcHVk5wHgWwg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"braces\": \"^3.0.1\",\n                \"picomatch\": \"^2.2.3\"\n            },\n            \"dependencies\": {\n                \"picomatch\": {\n                    \"version\": \"2.3.0\",\n                    \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.0.tgz\",\n                    \"integrity\": \"sha512-lY1Q/PiJGC2zOv/z391WOTD+Z02bCgsFfvxoXXf6h7kv9o+WmsmzYqrAwY63sNgOxE4xEdq0WyUnXfKeBrSvYw==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"miller-rabin\": {\n            \"version\": \"4.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/miller-rabin/-/miller-rabin-4.0.1.tgz\",\n            \"integrity\": \"sha512-115fLhvZVqWwHPbClyntxEVfVDfl9DLLTuJvq3g2O/Oxi8AiNouAHvDSzHS0viUJc+V5vm3eq91Xwqn9dp4jRA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"bn.js\": \"^4.0.0\",\n                \"brorand\": \"^1.0.1\"\n            },\n            \"dependencies\": {\n                \"bn.js\": {\n                    \"version\": \"4.12.0\",\n                    \"resolved\": \"https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz\",\n                    \"integrity\": \"sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"mime\": {\n            \"version\": \"1.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.6.0.tgz\",\n            \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\",\n            \"dev\": true\n        },\n        \"mime-db\": {\n            \"version\": \"1.50.0\",\n            \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.50.0.tgz\",\n            \"integrity\": \"sha512-9tMZCDlYHqeERXEHO9f/hKfNXhre5dK2eE/krIvUjZbS2KPcqGDfNShIWS1uW9XOTKQKqK6qbeOci18rbfW77A==\",\n            \"dev\": true\n        },\n        \"mime-types\": {\n            \"version\": \"2.1.33\",\n            \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.33.tgz\",\n            \"integrity\": \"sha512-plLElXp7pRDd0bNZHw+nMd52vRYjLwQjygaNg7ddJ2uJtTlmnTCjWuPKxVu6//AdaRuME84SvLW91sIkBqGT0g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"mime-db\": \"1.50.0\"\n            }\n        },\n        \"mimic-fn\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\",\n            \"integrity\": \"sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\",\n            \"dev\": true\n        },\n        \"min-indent\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/min-indent/-/min-indent-1.0.1.tgz\",\n            \"integrity\": \"sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==\",\n            \"dev\": true\n        },\n        \"mini-css-extract-plugin\": {\n            \"version\": \"1.6.2\",\n            \"resolved\": \"https://registry.npmjs.org/mini-css-extract-plugin/-/mini-css-extract-plugin-1.6.2.tgz\",\n            \"integrity\": \"sha512-WhDvO3SjGm40oV5y26GjMJYjd2UMqrLAGKy5YS2/3QKJy2F7jgynuHTir/tgUUOiNQu5saXHdc8reo7YuhhT4Q==\",\n            \"dev\": true,\n            \"requires\": {\n                \"loader-utils\": \"^2.0.0\",\n                \"schema-utils\": \"^3.0.0\",\n                \"webpack-sources\": \"^1.1.0\"\n            },\n            \"dependencies\": {\n                \"loader-utils\": {\n                    \"version\": \"2.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/loader-utils/-/loader-utils-2.0.0.tgz\",\n                    \"integrity\": \"sha512-rP4F0h2RaWSvPEkD7BLDFQnvSf+nK+wr3ESUjNTyAGobqrijmW92zc+SO6d4p4B1wh7+B/Jg1mkQe5NYUEHtHQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"big.js\": \"^5.2.2\",\n                        \"emojis-list\": \"^3.0.0\",\n                        \"json5\": \"^2.1.2\"\n                    }\n                },\n                \"schema-utils\": {\n                    \"version\": \"3.1.1\",\n                    \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-3.1.1.tgz\",\n                    \"integrity\": \"sha512-Y5PQxS4ITlC+EahLuXaY86TXfR7Dc5lw294alXOq86JAHCihAIZfqv8nNCWvaEJvaC51uN9hbLGeV0cFBdH+Fw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"@types/json-schema\": \"^7.0.8\",\n                        \"ajv\": \"^6.12.5\",\n                        \"ajv-keywords\": \"^3.5.2\"\n                    }\n                }\n            }\n        },\n        \"minimalistic-assert\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz\",\n            \"integrity\": \"sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==\",\n            \"dev\": true\n        },\n        \"minimalistic-crypto-utils\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/minimalistic-crypto-utils/-/minimalistic-crypto-utils-1.0.1.tgz\",\n            \"integrity\": \"sha1-9sAMHAsIIkblxNmd+4x8CDsrWCo=\",\n            \"dev\": true\n        },\n        \"minimatch\": {\n            \"version\": \"3.0.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/minimatch/download/minimatch-3.0.4.tgz\",\n            \"integrity\": \"sha1-UWbihkV/AzBgZL5Ul+jbsMPTIIM=\",\n            \"dev\": true,\n            \"requires\": {\n                \"brace-expansion\": \"^1.1.7\"\n            }\n        },\n        \"minimist\": {\n            \"version\": \"1.2.5\",\n            \"resolved\": \"https://registry.npm.taobao.org/minimist/download/minimist-1.2.5.tgz?cache=0&sync_timestamp=1584051606680&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fminimist%2Fdownload%2Fminimist-1.2.5.tgz\",\n            \"integrity\": \"sha1-Z9ZgFLZqaoqqDAg8X9WN9OTpdgI=\",\n            \"dev\": true\n        },\n        \"minimist-options\": {\n            \"version\": \"4.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/minimist-options/-/minimist-options-4.1.0.tgz\",\n            \"integrity\": \"sha512-Q4r8ghd80yhO/0j1O3B2BjweX3fiHg9cdOwjJd2J76Q135c+NDxGCqdYKQ1SKBuFfgWbAUzBfvYjPUEeNgqN1A==\",\n            \"dev\": true,\n            \"requires\": {\n                \"arrify\": \"^1.0.1\",\n                \"is-plain-obj\": \"^1.1.0\",\n                \"kind-of\": \"^6.0.3\"\n            }\n        },\n        \"mkdirp\": {\n            \"version\": \"0.5.5\",\n            \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.5.tgz\",\n            \"integrity\": \"sha512-NKmAlESf6jMGym1++R0Ra7wvhV+wFW63FaSOFPwRahvea0gMUcGUhVeAg/0BC0wiv9ih5NYPB1Wn1UEI1/L+xQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"minimist\": \"^1.2.5\"\n            }\n        },\n        \"modify-values\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/modify-values/-/modify-values-1.0.1.tgz\",\n            \"integrity\": \"sha512-xV2bxeN6F7oYjZWTe/YPAy6MN2M+sL4u/Rlm2AHCIVGfo2p1yGmBHQ6vHehl4bRTZBdHu3TSkWdYgkwpYzAGSw==\",\n            \"dev\": true\n        },\n        \"ms\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/ms/download/ms-2.0.0.tgz?cache=0&sync_timestamp=1575472461218&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fms%2Fdownload%2Fms-2.0.0.tgz\",\n            \"integrity\": \"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\"\n        },\n        \"multicast-dns\": {\n            \"version\": \"6.2.3\",\n            \"resolved\": \"https://registry.npmjs.org/multicast-dns/-/multicast-dns-6.2.3.tgz\",\n            \"integrity\": \"sha512-ji6J5enbMyGRHIAkAOu3WdV8nggqviKCEKtXcOqfphZZtQrmHKycfynJ2V7eVPUA4NhJ6V7Wf4TmGbTwKE9B6g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"dns-packet\": \"^1.3.1\",\n                \"thunky\": \"^1.0.2\"\n            }\n        },\n        \"multicast-dns-service-types\": {\n            \"version\": \"1.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/multicast-dns-service-types/-/multicast-dns-service-types-1.1.0.tgz\",\n            \"integrity\": \"sha1-iZ8R2WhuXgXLkbNdXw5jt3PPyQE=\",\n            \"dev\": true\n        },\n        \"mute-stream\": {\n            \"version\": \"0.0.7\",\n            \"resolved\": \"https://registry.npm.taobao.org/mute-stream/download/mute-stream-0.0.7.tgz\",\n            \"integrity\": \"sha1-MHXOk7whuPq0PhvE2n6BFe0ee6s=\",\n            \"dev\": true\n        },\n        \"nanocolors\": {\n            \"version\": \"0.1.12\",\n            \"resolved\": \"https://registry.npmjs.org/nanocolors/-/nanocolors-0.1.12.tgz\",\n            \"integrity\": \"sha512-2nMHqg1x5PU+unxX7PGY7AuYxl2qDx7PSrTRjizr8sxdd3l/3hBuWWaki62qmtYm2U5i4Z5E7GbjlyDFhs9/EQ==\",\n            \"dev\": true\n        },\n        \"nanoid\": {\n            \"version\": \"3.1.29\",\n            \"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-3.1.29.tgz\",\n            \"integrity\": \"sha512-dW2pUSGZ8ZnCFIlBIA31SV8huOGCHb6OwzVCc7A69rb/a+SgPBwfmLvK5TKQ3INPbRkcI8a/Owo0XbiTNH19wg==\",\n            \"dev\": true\n        },\n        \"negotiator\": {\n            \"version\": \"0.6.2\",\n            \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.2.tgz\",\n            \"integrity\": \"sha512-hZXc7K2e+PgeI1eDBe/10Ard4ekbfrrqG8Ep+8Jmf4JID2bNg7NvCPOZN+kfF574pFQI7mum2AUqDidoKqcTOw==\",\n            \"dev\": true\n        },\n        \"neo-async\": {\n            \"version\": \"2.6.2\",\n            \"resolved\": \"https://registry.npm.taobao.org/neo-async/download/neo-async-2.6.2.tgz?cache=0&sync_timestamp=1594317853334&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fneo-async%2Fdownload%2Fneo-async-2.6.2.tgz\",\n            \"integrity\": \"sha1-tKr7k+OustgXTKU88WOrfXMIMF8=\",\n            \"dev\": true\n        },\n        \"no-case\": {\n            \"version\": \"3.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/no-case/-/no-case-3.0.4.tgz\",\n            \"integrity\": \"sha512-fgAN3jGAh+RoxUGZHTSOLJIqUc2wmoBwGR4tbpNAKmmovFoWq0OdRkb0VkldReO2a2iBT/OEulG9XSUc10r3zg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"lower-case\": \"^2.0.2\",\n                \"tslib\": \"^2.0.3\"\n            }\n        },\n        \"node-fetch\": {\n            \"version\": \"1.6.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/node-fetch/download/node-fetch-1.6.3.tgz?cache=0&sync_timestamp=1599309202591&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fnode-fetch%2Fdownload%2Fnode-fetch-1.6.3.tgz\",\n            \"integrity\": \"sha1-3CNO3WSJmC1Y6PDbT2lQKavNjAQ=\",\n            \"dev\": true,\n            \"requires\": {\n                \"encoding\": \"^0.1.11\",\n                \"is-stream\": \"^1.0.1\"\n            }\n        },\n        \"node-forge\": {\n            \"version\": \"0.10.0\",\n            \"resolved\": \"https://registry.npmjs.org/node-forge/-/node-forge-0.10.0.tgz\",\n            \"integrity\": \"sha512-PPmu8eEeG9saEUvI97fm4OYxXVB6bFvyNTyiUOBichBpFG8A1Ljw3bY62+5oOjDEMHRnd0Y7HQ+x7uzxOzC6JA==\",\n            \"dev\": true\n        },\n        \"node-libs-browser\": {\n            \"version\": \"2.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/node-libs-browser/-/node-libs-browser-2.2.1.tgz\",\n            \"integrity\": \"sha512-h/zcD8H9kaDZ9ALUWwlBUDo6TKF8a7qBSCSEGfjTVIYeqsioSKaAX+BN7NgiMGp6iSIXZ3PxgCu8KS3b71YK5Q==\",\n            \"dev\": true,\n            \"requires\": {\n                \"assert\": \"^1.1.1\",\n                \"browserify-zlib\": \"^0.2.0\",\n                \"buffer\": \"^4.3.0\",\n                \"console-browserify\": \"^1.1.0\",\n                \"constants-browserify\": \"^1.0.0\",\n                \"crypto-browserify\": \"^3.11.0\",\n                \"domain-browser\": \"^1.1.1\",\n                \"events\": \"^3.0.0\",\n                \"https-browserify\": \"^1.0.0\",\n                \"os-browserify\": \"^0.3.0\",\n                \"path-browserify\": \"0.0.1\",\n                \"process\": \"^0.11.10\",\n                \"punycode\": \"^1.2.4\",\n                \"querystring-es3\": \"^0.2.0\",\n                \"readable-stream\": \"^2.3.3\",\n                \"stream-browserify\": \"^2.0.1\",\n                \"stream-http\": \"^2.7.2\",\n                \"string_decoder\": \"^1.0.0\",\n                \"timers-browserify\": \"^2.0.4\",\n                \"tty-browserify\": \"0.0.0\",\n                \"url\": \"^0.11.0\",\n                \"util\": \"^0.11.0\",\n                \"vm-browserify\": \"^1.0.1\"\n            },\n            \"dependencies\": {\n                \"punycode\": {\n                    \"version\": \"1.4.1\",\n                    \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz\",\n                    \"integrity\": \"sha1-wNWmOycYgArY4esPpSachN1BhF4=\",\n                    \"dev\": true\n                },\n                \"readable-stream\": {\n                    \"version\": \"2.3.7\",\n                    \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz\",\n                    \"integrity\": \"sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"core-util-is\": \"~1.0.0\",\n                        \"inherits\": \"~2.0.3\",\n                        \"isarray\": \"~1.0.0\",\n                        \"process-nextick-args\": \"~2.0.0\",\n                        \"safe-buffer\": \"~5.1.1\",\n                        \"string_decoder\": \"~1.1.1\",\n                        \"util-deprecate\": \"~1.0.1\"\n                    },\n                    \"dependencies\": {\n                        \"string_decoder\": {\n                            \"version\": \"1.1.1\",\n                            \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n                            \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n                            \"dev\": true,\n                            \"requires\": {\n                                \"safe-buffer\": \"~5.1.0\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"node-notifier\": {\n            \"version\": \"9.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/node-notifier/-/node-notifier-9.0.1.tgz\",\n            \"integrity\": \"sha512-fPNFIp2hF/Dq7qLDzSg4vZ0J4e9v60gJR+Qx7RbjbWqzPDdEqeVpEx5CFeDAELIl+A/woaaNn1fQ5nEVerMxJg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"growly\": \"^1.3.0\",\n                \"is-wsl\": \"^2.2.0\",\n                \"semver\": \"^7.3.2\",\n                \"shellwords\": \"^0.1.1\",\n                \"uuid\": \"^8.3.0\",\n                \"which\": \"^2.0.2\"\n            },\n            \"dependencies\": {\n                \"semver\": {\n                    \"version\": \"7.3.5\",\n                    \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.3.5.tgz\",\n                    \"integrity\": \"sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"lru-cache\": \"^6.0.0\"\n                    }\n                },\n                \"uuid\": {\n                    \"version\": \"8.3.2\",\n                    \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz\",\n                    \"integrity\": \"sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"node-releases\": {\n            \"version\": \"1.1.65\",\n            \"resolved\": \"https://registry.npm.taobao.org/node-releases/download/node-releases-1.1.65.tgz?cache=0&sync_timestamp=1604006512200&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fnode-releases%2Fdownload%2Fnode-releases-1.1.65.tgz\",\n            \"integrity\": \"sha1-UtlXkXa9YPI+ugXEQ4WD80GUS4E=\",\n            \"dev\": true\n        },\n        \"normalize-package-data\": {\n            \"version\": \"3.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-3.0.3.tgz\",\n            \"integrity\": \"sha512-p2W1sgqij3zMMyRC067Dg16bfzVH+w7hyegmpIvZ4JNjqtGOVAIvLmjBx3yP7YTe9vKJgkoNOPjwQGogDoMXFA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"hosted-git-info\": \"^4.0.1\",\n                \"is-core-module\": \"^2.5.0\",\n                \"semver\": \"^7.3.4\",\n                \"validate-npm-package-license\": \"^3.0.1\"\n            },\n            \"dependencies\": {\n                \"is-core-module\": {\n                    \"version\": \"2.7.0\",\n                    \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.7.0.tgz\",\n                    \"integrity\": \"sha512-ByY+tjCciCr+9nLryBYcSD50EOGWt95c7tIsKTG1J2ixKKXPvF7Ej3AVd+UfDydAJom3biBGDBALaO79ktwgEQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"has\": \"^1.0.3\"\n                    }\n                },\n                \"semver\": {\n                    \"version\": \"7.3.5\",\n                    \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.3.5.tgz\",\n                    \"integrity\": \"sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"lru-cache\": \"^6.0.0\"\n                    }\n                }\n            }\n        },\n        \"normalize-path\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/normalize-path/download/normalize-path-3.0.0.tgz\",\n            \"integrity\": \"sha1-Dc1p/yOhybEf0JeDFmRKA4ghamU=\",\n            \"dev\": true\n        },\n        \"normalize-range\": {\n            \"version\": \"0.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz\",\n            \"integrity\": \"sha1-LRDAa9/TEuqXd2laTShDlFa3WUI=\",\n            \"dev\": true\n        },\n        \"normalize-url\": {\n            \"version\": \"6.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/normalize-url/-/normalize-url-6.1.0.tgz\",\n            \"integrity\": \"sha512-DlL+XwOy3NxAQ8xuC0okPgK46iuVNAK01YN7RueYBqqFeGsBjV9XmCAzAdgt+667bCl5kPh9EqKKDwnaPG1I7A==\",\n            \"dev\": true\n        },\n        \"npm-run-path\": {\n            \"version\": \"4.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz\",\n            \"integrity\": \"sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"path-key\": \"^3.0.0\"\n            }\n        },\n        \"nth-check\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/nth-check/-/nth-check-2.0.1.tgz\",\n            \"integrity\": \"sha512-it1vE95zF6dTT9lBsYbxvqh0Soy4SPowchj0UBGj/V6cTPnXXtQOPUbhZ6CmGzAD/rW22LQK6E96pcdJXk4A4w==\",\n            \"dev\": true,\n            \"requires\": {\n                \"boolbase\": \"^1.0.0\"\n            }\n        },\n        \"object-assign\": {\n            \"version\": \"4.1.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/object-assign/download/object-assign-4.1.1.tgz\",\n            \"integrity\": \"sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=\",\n            \"dev\": true\n        },\n        \"object-is\": {\n            \"version\": \"1.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/object-is/-/object-is-1.1.5.tgz\",\n            \"integrity\": \"sha512-3cyDsyHgtmi7I7DfSSI2LDp6SK2lwvtbg0p0R1e0RvTqF5ceGx+K2dfSjm1bKDMVCFEDAQvy+o8c6a7VujOddw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"call-bind\": \"^1.0.2\",\n                \"define-properties\": \"^1.1.3\"\n            },\n            \"dependencies\": {\n                \"call-bind\": {\n                    \"version\": \"1.0.2\",\n                    \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz\",\n                    \"integrity\": \"sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"function-bind\": \"^1.1.1\",\n                        \"get-intrinsic\": \"^1.0.2\"\n                    }\n                },\n                \"get-intrinsic\": {\n                    \"version\": \"1.1.1\",\n                    \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.1.1.tgz\",\n                    \"integrity\": \"sha512-kWZrnVM42QCiEA2Ig1bG8zjoIMOgxWwYCEeNdwY6Tv/cOSeGpcoX4pXHfKUxNKVoArnrEr2e9srnAxxGIraS9Q==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"function-bind\": \"^1.1.1\",\n                        \"has\": \"^1.0.3\",\n                        \"has-symbols\": \"^1.0.1\"\n                    }\n                }\n            }\n        },\n        \"object-keys\": {\n            \"version\": \"1.1.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/object-keys/download/object-keys-1.1.1.tgz\",\n            \"integrity\": \"sha1-HEfyct8nfzsdrwYWd9nILiMixg4=\",\n            \"dev\": true\n        },\n        \"object.assign\": {\n            \"version\": \"4.1.2\",\n            \"resolved\": \"https://registry.npm.taobao.org/object.assign/download/object.assign-4.1.2.tgz?cache=0&sync_timestamp=1604115131746&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fobject.assign%2Fdownload%2Fobject.assign-4.1.2.tgz\",\n            \"integrity\": \"sha1-DtVKNC7Os3s4/3brgxoOeIy2OUA=\",\n            \"dev\": true,\n            \"requires\": {\n                \"call-bind\": \"^1.0.0\",\n                \"define-properties\": \"^1.1.3\",\n                \"has-symbols\": \"^1.0.1\",\n                \"object-keys\": \"^1.1.1\"\n            }\n        },\n        \"obuf\": {\n            \"version\": \"1.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/obuf/-/obuf-1.1.2.tgz\",\n            \"integrity\": \"sha512-PX1wu0AmAdPqOL1mWhqmlOd8kOIZQwGZw6rh7uby9fTc5lhaOWFLX3I6R1hrF9k3zUY40e6igsLGkDXK92LJNg==\",\n            \"dev\": true\n        },\n        \"on-finished\": {\n            \"version\": \"2.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz\",\n            \"integrity\": \"sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=\",\n            \"dev\": true,\n            \"requires\": {\n                \"ee-first\": \"1.1.1\"\n            }\n        },\n        \"on-headers\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz\",\n            \"integrity\": \"sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==\",\n            \"dev\": true\n        },\n        \"once\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/once/download/once-1.4.0.tgz\",\n            \"integrity\": \"sha1-WDsap3WWHUsROsF9nFC6753Xa9E=\",\n            \"dev\": true,\n            \"requires\": {\n                \"wrappy\": \"1\"\n            }\n        },\n        \"onetime\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/onetime/download/onetime-2.0.1.tgz?cache=0&sync_timestamp=1597003654288&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fonetime%2Fdownload%2Fonetime-2.0.1.tgz\",\n            \"integrity\": \"sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=\",\n            \"dev\": true,\n            \"requires\": {\n                \"mimic-fn\": \"^1.0.0\"\n            },\n            \"dependencies\": {\n                \"mimic-fn\": {\n                    \"version\": \"1.2.0\",\n                    \"resolved\": \"https://registry.npm.taobao.org/mimic-fn/download/mimic-fn-1.2.0.tgz?cache=0&sync_timestamp=1596095644798&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fmimic-fn%2Fdownload%2Fmimic-fn-1.2.0.tgz\",\n                    \"integrity\": \"sha1-ggyGo5M0ZA6ZUWkovQP8qIBX0CI=\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"open\": {\n            \"version\": \"8.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/open/-/open-8.3.0.tgz\",\n            \"integrity\": \"sha512-7INcPWb1UcOwSQxAXTnBJ+FxVV4MPs/X++FWWBtgY69/J5lc+tCteMt/oFK1MnkyHC4VILLa9ntmwKTwDR4Q9w==\",\n            \"dev\": true,\n            \"requires\": {\n                \"define-lazy-prop\": \"^2.0.0\",\n                \"is-docker\": \"^2.1.1\",\n                \"is-wsl\": \"^2.2.0\"\n            }\n        },\n        \"opencollective\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npm.taobao.org/opencollective/download/opencollective-1.0.3.tgz\",\n            \"integrity\": \"sha1-ruY3K8KBRFg2kMPKja7PwSDdDvE=\",\n            \"dev\": true,\n            \"requires\": {\n                \"babel-polyfill\": \"6.23.0\",\n                \"chalk\": \"1.1.3\",\n                \"inquirer\": \"3.0.6\",\n                \"minimist\": \"1.2.0\",\n                \"node-fetch\": \"1.6.3\",\n                \"opn\": \"4.0.2\"\n            },\n            \"dependencies\": {\n                \"ansi-styles\": {\n                    \"version\": \"2.2.1\",\n                    \"resolved\": \"https://registry.npm.taobao.org/ansi-styles/download/ansi-styles-2.2.1.tgz?cache=0&sync_timestamp=1601839122515&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fansi-styles%2Fdownload%2Fansi-styles-2.2.1.tgz\",\n                    \"integrity\": \"sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=\",\n                    \"dev\": true\n                },\n                \"chalk\": {\n                    \"version\": \"1.1.3\",\n                    \"resolved\": \"https://registry.npm.taobao.org/chalk/download/chalk-1.1.3.tgz?cache=0&sync_timestamp=1591687000046&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fchalk%2Fdownload%2Fchalk-1.1.3.tgz\",\n                    \"integrity\": \"sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ansi-styles\": \"^2.2.1\",\n                        \"escape-string-regexp\": \"^1.0.2\",\n                        \"has-ansi\": \"^2.0.0\",\n                        \"strip-ansi\": \"^3.0.0\",\n                        \"supports-color\": \"^2.0.0\"\n                    }\n                },\n                \"minimist\": {\n                    \"version\": \"1.2.0\",\n                    \"resolved\": \"https://registry.npm.taobao.org/minimist/download/minimist-1.2.0.tgz?cache=0&sync_timestamp=1584051606680&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fminimist%2Fdownload%2Fminimist-1.2.0.tgz\",\n                    \"integrity\": \"sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=\",\n                    \"dev\": true\n                },\n                \"opn\": {\n                    \"version\": \"4.0.2\",\n                    \"resolved\": \"https://registry.npm.taobao.org/opn/download/opn-4.0.2.tgz\",\n                    \"integrity\": \"sha1-erwi5kTf9jsKltWrfyeQwPAavJU=\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"object-assign\": \"^4.0.1\",\n                        \"pinkie-promise\": \"^2.0.0\"\n                    }\n                },\n                \"supports-color\": {\n                    \"version\": \"2.0.0\",\n                    \"resolved\": \"https://registry.npm.taobao.org/supports-color/download/supports-color-2.0.0.tgz?cache=0&sync_timestamp=1598611730985&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fsupports-color%2Fdownload%2Fsupports-color-2.0.0.tgz\",\n                    \"integrity\": \"sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"os-browserify\": {\n            \"version\": \"0.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/os-browserify/-/os-browserify-0.3.0.tgz\",\n            \"integrity\": \"sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc=\",\n            \"dev\": true\n        },\n        \"os-tmpdir\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npm.taobao.org/os-tmpdir/download/os-tmpdir-1.0.2.tgz\",\n            \"integrity\": \"sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=\",\n            \"dev\": true\n        },\n        \"p-event\": {\n            \"version\": \"4.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/p-event/-/p-event-4.2.0.tgz\",\n            \"integrity\": \"sha512-KXatOjCRXXkSePPb1Nbi0p0m+gQAwdlbhi4wQKJPI1HsMQS9g+Sqp2o+QHziPr7eYJyOZet836KoHEVM1mwOrQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"p-timeout\": \"^3.1.0\"\n            }\n        },\n        \"p-finally\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz\",\n            \"integrity\": \"sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4=\",\n            \"dev\": true\n        },\n        \"p-limit\": {\n            \"version\": \"1.3.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/p-limit/download/p-limit-1.3.0.tgz\",\n            \"integrity\": \"sha1-uGvV8MJWkJEcdZD8v8IBDVSzzLg=\",\n            \"dev\": true,\n            \"requires\": {\n                \"p-try\": \"^1.0.0\"\n            }\n        },\n        \"p-locate\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/p-locate/download/p-locate-2.0.0.tgz?cache=0&sync_timestamp=1597081508945&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fp-locate%2Fdownload%2Fp-locate-2.0.0.tgz\",\n            \"integrity\": \"sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=\",\n            \"dev\": true,\n            \"requires\": {\n                \"p-limit\": \"^1.1.0\"\n            }\n        },\n        \"p-map\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/p-map/-/p-map-4.0.0.tgz\",\n            \"integrity\": \"sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"aggregate-error\": \"^3.0.0\"\n            }\n        },\n        \"p-pipe\": {\n            \"version\": \"3.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/p-pipe/-/p-pipe-3.1.0.tgz\",\n            \"integrity\": \"sha512-08pj8ATpzMR0Y80x50yJHn37NF6vjrqHutASaX5LiH5npS9XPvrUmscd9MF5R4fuYRHOxQR1FfMIlF7AzwoPqw==\",\n            \"dev\": true\n        },\n        \"p-retry\": {\n            \"version\": \"4.6.1\",\n            \"resolved\": \"https://registry.npmjs.org/p-retry/-/p-retry-4.6.1.tgz\",\n            \"integrity\": \"sha512-e2xXGNhZOZ0lfgR9kL34iGlU8N/KO0xZnQxVEwdeOvpqNDQfdnxIYizvWtK8RglUa3bGqI8g0R/BdfzLMxRkiA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/retry\": \"^0.12.0\",\n                \"retry\": \"^0.13.1\"\n            }\n        },\n        \"p-timeout\": {\n            \"version\": \"3.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/p-timeout/-/p-timeout-3.2.0.tgz\",\n            \"integrity\": \"sha512-rhIwUycgwwKcP9yTOOFK/AKsAopjjCakVqLHePO3CC6Mir1Z99xT+R63jZxAT5lFZLa2inS5h+ZS2GvR99/FBg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"p-finally\": \"^1.0.0\"\n            }\n        },\n        \"p-try\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/p-try/download/p-try-1.0.0.tgz\",\n            \"integrity\": \"sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=\",\n            \"dev\": true\n        },\n        \"pako\": {\n            \"version\": \"1.0.11\",\n            \"resolved\": \"https://registry.npmjs.org/pako/-/pako-1.0.11.tgz\",\n            \"integrity\": \"sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==\",\n            \"dev\": true\n        },\n        \"param-case\": {\n            \"version\": \"3.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/param-case/-/param-case-3.0.4.tgz\",\n            \"integrity\": \"sha512-RXlj7zCYokReqWpOPH9oYivUzLYZ5vAPIfEmCTNViosC78F8F0H9y7T7gG2M39ymgutxF5gcFEsyZQSph9Bp3A==\",\n            \"dev\": true,\n            \"requires\": {\n                \"dot-case\": \"^3.0.4\",\n                \"tslib\": \"^2.0.3\"\n            }\n        },\n        \"parent-module\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz\",\n            \"integrity\": \"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"callsites\": \"^3.0.0\"\n            }\n        },\n        \"parse-asn1\": {\n            \"version\": \"5.1.6\",\n            \"resolved\": \"https://registry.npmjs.org/parse-asn1/-/parse-asn1-5.1.6.tgz\",\n            \"integrity\": \"sha512-RnZRo1EPU6JBnra2vGHj0yhp6ebyjBZpmUCLHWiFhxlzvBCCpAuZ7elsBp1PVAbQN0/04VD/19rfzlBSwLstMw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"asn1.js\": \"^5.2.0\",\n                \"browserify-aes\": \"^1.0.0\",\n                \"evp_bytestokey\": \"^1.0.0\",\n                \"pbkdf2\": \"^3.0.3\",\n                \"safe-buffer\": \"^5.1.1\"\n            }\n        },\n        \"parse-json\": {\n            \"version\": \"5.1.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/parse-json/download/parse-json-5.1.0.tgz?cache=0&sync_timestamp=1598129247474&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fparse-json%2Fdownload%2Fparse-json-5.1.0.tgz\",\n            \"integrity\": \"sha1-+WCIzfJKj6qa6poAny2dlCyZlkY=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/code-frame\": \"^7.0.0\",\n                \"error-ex\": \"^1.3.1\",\n                \"json-parse-even-better-errors\": \"^2.3.0\",\n                \"lines-and-columns\": \"^1.1.6\"\n            }\n        },\n        \"parseurl\": {\n            \"version\": \"1.3.3\",\n            \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\n            \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\n            \"dev\": true\n        },\n        \"pascal-case\": {\n            \"version\": \"3.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/pascal-case/-/pascal-case-3.1.2.tgz\",\n            \"integrity\": \"sha512-uWlGT3YSnK9x3BQJaOdcZwrnV6hPpd8jFH1/ucpiLRPh/2zCVJKS19E4GvYHvaCcACn3foXZ0cLB9Wrx1KGe5g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"no-case\": \"^3.0.4\",\n                \"tslib\": \"^2.0.3\"\n            }\n        },\n        \"path-browserify\": {\n            \"version\": \"0.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/path-browserify/-/path-browserify-0.0.1.tgz\",\n            \"integrity\": \"sha512-BapA40NHICOS+USX9SN4tyhq+A2RrN/Ws5F0Z5aMHDp98Fl86lX8Oti8B7uN93L4Ifv4fHOEA+pQw87gmMO/lQ==\",\n            \"dev\": true\n        },\n        \"path-exists\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/path-exists/download/path-exists-3.0.0.tgz\",\n            \"integrity\": \"sha1-zg6+ql94yxiSXqfYENe1mwEP1RU=\",\n            \"dev\": true\n        },\n        \"path-is-absolute\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/path-is-absolute/download/path-is-absolute-1.0.1.tgz\",\n            \"integrity\": \"sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\",\n            \"dev\": true\n        },\n        \"path-key\": {\n            \"version\": \"3.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n            \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n            \"dev\": true\n        },\n        \"path-parse\": {\n            \"version\": \"1.0.6\",\n            \"resolved\": \"https://registry.npm.taobao.org/path-parse/download/path-parse-1.0.6.tgz\",\n            \"integrity\": \"sha1-1i27VnlAXXLEc37FhgDp3c8G0kw=\",\n            \"dev\": true\n        },\n        \"path-to-regexp\": {\n            \"version\": \"0.1.7\",\n            \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz\",\n            \"integrity\": \"sha1-32BBeABfUi8V60SQ5yR6G/qmf4w=\",\n            \"dev\": true\n        },\n        \"path-type\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz\",\n            \"integrity\": \"sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"pify\": \"^3.0.0\"\n            },\n            \"dependencies\": {\n                \"pify\": {\n                    \"version\": \"3.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/pify/-/pify-3.0.0.tgz\",\n                    \"integrity\": \"sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"pbkdf2\": {\n            \"version\": \"3.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.1.2.tgz\",\n            \"integrity\": \"sha512-iuh7L6jA7JEGu2WxDwtQP1ddOpaJNC4KlDEFfdQajSGgGPNi4OyDc2R7QnbY2bR9QjBVGwgvTdNJZoE7RaxUMA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"create-hash\": \"^1.1.2\",\n                \"create-hmac\": \"^1.1.4\",\n                \"ripemd160\": \"^2.0.1\",\n                \"safe-buffer\": \"^5.0.1\",\n                \"sha.js\": \"^2.4.8\"\n            }\n        },\n        \"picocolors\": {\n            \"version\": \"0.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/picocolors/-/picocolors-0.2.1.tgz\",\n            \"integrity\": \"sha512-cMlDqaLEqfSaW8Z7N5Jw+lyIW869EzT73/F5lhtY9cLGoVxSXznfgfXMO0Z5K0o0Q2TkTXq+0KFsdnSe3jDViA==\",\n            \"dev\": true\n        },\n        \"picomatch\": {\n            \"version\": \"2.2.2\",\n            \"resolved\": \"https://registry.npm.taobao.org/picomatch/download/picomatch-2.2.2.tgz\",\n            \"integrity\": \"sha1-IfMz6ba46v8CRo9RRupAbTRfTa0=\",\n            \"dev\": true\n        },\n        \"pify\": {\n            \"version\": \"2.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/pify/-/pify-2.3.0.tgz\",\n            \"integrity\": \"sha1-7RQaasBDqEnqWISY59yosVMw6Qw=\",\n            \"dev\": true\n        },\n        \"pinkie\": {\n            \"version\": \"2.0.4\",\n            \"resolved\": \"https://registry.npm.taobao.org/pinkie/download/pinkie-2.0.4.tgz\",\n            \"integrity\": \"sha1-clVrgM+g1IqXToDnckjoDtT3+HA=\",\n            \"dev\": true\n        },\n        \"pinkie-promise\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/pinkie-promise/download/pinkie-promise-2.0.1.tgz\",\n            \"integrity\": \"sha1-ITXW36ejWMBprJsXh3YogihFD/o=\",\n            \"dev\": true,\n            \"requires\": {\n                \"pinkie\": \"^2.0.0\"\n            }\n        },\n        \"pkg-dir\": {\n            \"version\": \"4.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz\",\n            \"integrity\": \"sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"find-up\": \"^4.0.0\"\n            },\n            \"dependencies\": {\n                \"find-up\": {\n                    \"version\": \"4.1.0\",\n                    \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz\",\n                    \"integrity\": \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"locate-path\": \"^5.0.0\",\n                        \"path-exists\": \"^4.0.0\"\n                    }\n                },\n                \"locate-path\": {\n                    \"version\": \"5.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz\",\n                    \"integrity\": \"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"p-locate\": \"^4.1.0\"\n                    }\n                },\n                \"p-limit\": {\n                    \"version\": \"2.3.0\",\n                    \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\n                    \"integrity\": \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"p-try\": \"^2.0.0\"\n                    }\n                },\n                \"p-locate\": {\n                    \"version\": \"4.1.0\",\n                    \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz\",\n                    \"integrity\": \"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"p-limit\": \"^2.2.0\"\n                    }\n                },\n                \"p-try\": {\n                    \"version\": \"2.2.0\",\n                    \"resolved\": \"https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz\",\n                    \"integrity\": \"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\",\n                    \"dev\": true\n                },\n                \"path-exists\": {\n                    \"version\": \"4.0.0\",\n                    \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n                    \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"pkg-up\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/pkg-up/download/pkg-up-2.0.0.tgz\",\n            \"integrity\": \"sha1-yBmscoBZpGHKscOImivjxJoATX8=\",\n            \"dev\": true,\n            \"requires\": {\n                \"find-up\": \"^2.1.0\"\n            }\n        },\n        \"plus-message-bundle\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npm.taobao.org/plus-message-bundle/download/plus-message-bundle-1.0.2.tgz\",\n            \"integrity\": \"sha1-adUQ4piG0xireCXhhxeK4G9VZgw=\"\n        },\n        \"portfinder\": {\n            \"version\": \"1.0.28\",\n            \"resolved\": \"https://registry.npmjs.org/portfinder/-/portfinder-1.0.28.tgz\",\n            \"integrity\": \"sha512-Se+2isanIcEqf2XMHjyUKskczxbPH7dQnlMjXX6+dybayyHvAf/TCgyMRlzf/B6QDhAEFOGes0pzRo3by4AbMA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"async\": \"^2.6.2\",\n                \"debug\": \"^3.1.1\",\n                \"mkdirp\": \"^0.5.5\"\n            },\n            \"dependencies\": {\n                \"debug\": {\n                    \"version\": \"3.2.7\",\n                    \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n                    \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"ms\": \"^2.1.1\"\n                    }\n                },\n                \"ms\": {\n                    \"version\": \"2.1.3\",\n                    \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n                    \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"postcss\": {\n            \"version\": \"8.3.9\",\n            \"resolved\": \"https://registry.npmjs.org/postcss/-/postcss-8.3.9.tgz\",\n            \"integrity\": \"sha512-f/ZFyAKh9Dnqytx5X62jgjhhzttjZS7hMsohcI7HEI5tjELX/HxCy3EFhsRxyzGvrzFF+82XPvCS8T9TFleVJw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"nanoid\": \"^3.1.28\",\n                \"picocolors\": \"^0.2.1\",\n                \"source-map-js\": \"^0.6.2\"\n            }\n        },\n        \"postcss-calc\": {\n            \"version\": \"8.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-calc/-/postcss-calc-8.0.0.tgz\",\n            \"integrity\": \"sha512-5NglwDrcbiy8XXfPM11F3HeC6hoT9W7GUH/Zi5U/p7u3Irv4rHhdDcIZwG0llHXV4ftsBjpfWMXAnXNl4lnt8g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"postcss-selector-parser\": \"^6.0.2\",\n                \"postcss-value-parser\": \"^4.0.2\"\n            }\n        },\n        \"postcss-colormin\": {\n            \"version\": \"5.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-colormin/-/postcss-colormin-5.2.0.tgz\",\n            \"integrity\": \"sha512-+HC6GfWU3upe5/mqmxuqYZ9B2Wl4lcoUUNkoaX59nEWV4EtADCMiBqui111Bu8R8IvaZTmqmxrqOAqjbHIwXPw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"browserslist\": \"^4.16.6\",\n                \"caniuse-api\": \"^3.0.0\",\n                \"colord\": \"^2.0.1\",\n                \"postcss-value-parser\": \"^4.1.0\"\n            },\n            \"dependencies\": {\n                \"browserslist\": {\n                    \"version\": \"4.17.3\",\n                    \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.17.3.tgz\",\n                    \"integrity\": \"sha512-59IqHJV5VGdcJZ+GZ2hU5n4Kv3YiASzW6Xk5g9tf5a/MAzGeFwgGWU39fVzNIOVcgB3+Gp+kiQu0HEfTVU/3VQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"caniuse-lite\": \"^1.0.30001264\",\n                        \"electron-to-chromium\": \"^1.3.857\",\n                        \"escalade\": \"^3.1.1\",\n                        \"node-releases\": \"^1.1.77\",\n                        \"picocolors\": \"^0.2.1\"\n                    }\n                },\n                \"caniuse-lite\": {\n                    \"version\": \"1.0.30001265\",\n                    \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001265.tgz\",\n                    \"integrity\": \"sha512-YzBnspggWV5hep1m9Z6sZVLOt7vrju8xWooFAgN6BA5qvy98qPAPb7vNUzypFaoh2pb3vlfzbDO8tB57UPGbtw==\",\n                    \"dev\": true\n                },\n                \"electron-to-chromium\": {\n                    \"version\": \"1.3.865\",\n                    \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.865.tgz\",\n                    \"integrity\": \"sha512-okGcCKfihgGlaROMFNPQ6eaU3bk9Xa68rLYSnVD2PyIqM5B/vyQoXCpB3p1HI3AXio097ROVBlSO4JZVilUWuA==\",\n                    \"dev\": true\n                },\n                \"node-releases\": {\n                    \"version\": \"1.1.77\",\n                    \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-1.1.77.tgz\",\n                    \"integrity\": \"sha512-rB1DUFUNAN4Gn9keO2K1efO35IDK7yKHCdCaIMvFO7yUYmmZYeDjnGKle26G4rwj+LKRQpjyUUvMkPglwGCYNQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"postcss-convert-values\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-convert-values/-/postcss-convert-values-5.0.1.tgz\",\n            \"integrity\": \"sha512-C3zR1Do2BkKkCgC0g3sF8TS0koF2G+mN8xxayZx3f10cIRmTaAnpgpRQZjNekTZxM2ciSPoh2IWJm0VZx8NoQg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"postcss-value-parser\": \"^4.1.0\"\n            }\n        },\n        \"postcss-discard-comments\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-discard-comments/-/postcss-discard-comments-5.0.1.tgz\",\n            \"integrity\": \"sha512-lgZBPTDvWrbAYY1v5GYEv8fEO/WhKOu/hmZqmCYfrpD6eyDWWzAOsl2rF29lpvziKO02Gc5GJQtlpkTmakwOWg==\",\n            \"dev\": true\n        },\n        \"postcss-discard-duplicates\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-discard-duplicates/-/postcss-discard-duplicates-5.0.1.tgz\",\n            \"integrity\": \"sha512-svx747PWHKOGpAXXQkCc4k/DsWo+6bc5LsVrAsw+OU+Ibi7klFZCyX54gjYzX4TH+f2uzXjRviLARxkMurA2bA==\",\n            \"dev\": true\n        },\n        \"postcss-discard-empty\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-discard-empty/-/postcss-discard-empty-5.0.1.tgz\",\n            \"integrity\": \"sha512-vfU8CxAQ6YpMxV2SvMcMIyF2LX1ZzWpy0lqHDsOdaKKLQVQGVP1pzhrI9JlsO65s66uQTfkQBKBD/A5gp9STFw==\",\n            \"dev\": true\n        },\n        \"postcss-discard-overridden\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-discard-overridden/-/postcss-discard-overridden-5.0.1.tgz\",\n            \"integrity\": \"sha512-Y28H7y93L2BpJhrdUR2SR2fnSsT+3TVx1NmVQLbcnZWwIUpJ7mfcTC6Za9M2PG6w8j7UQRfzxqn8jU2VwFxo3Q==\",\n            \"dev\": true\n        },\n        \"postcss-load-config\": {\n            \"version\": \"3.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-3.1.0.tgz\",\n            \"integrity\": \"sha512-ipM8Ds01ZUophjDTQYSVP70slFSYg3T0/zyfII5vzhN6V57YSxMgG5syXuwi5VtS8wSf3iL30v0uBdoIVx4Q0g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"import-cwd\": \"^3.0.0\",\n                \"lilconfig\": \"^2.0.3\",\n                \"yaml\": \"^1.10.2\"\n            }\n        },\n        \"postcss-loader\": {\n            \"version\": \"6.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-loader/-/postcss-loader-6.1.1.tgz\",\n            \"integrity\": \"sha512-lBmJMvRh1D40dqpWKr9Rpygwxn8M74U9uaCSeYGNKLGInbk9mXBt1ultHf2dH9Ghk6Ue4UXlXWwGMH9QdUJ5ug==\",\n            \"dev\": true,\n            \"requires\": {\n                \"cosmiconfig\": \"^7.0.0\",\n                \"klona\": \"^2.0.4\",\n                \"semver\": \"^7.3.5\"\n            },\n            \"dependencies\": {\n                \"semver\": {\n                    \"version\": \"7.3.5\",\n                    \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.3.5.tgz\",\n                    \"integrity\": \"sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"lru-cache\": \"^6.0.0\"\n                    }\n                }\n            }\n        },\n        \"postcss-merge-longhand\": {\n            \"version\": \"5.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-merge-longhand/-/postcss-merge-longhand-5.0.2.tgz\",\n            \"integrity\": \"sha512-BMlg9AXSI5G9TBT0Lo/H3PfUy63P84rVz3BjCFE9e9Y9RXQZD3+h3YO1kgTNsNJy7bBc1YQp8DmSnwLIW5VPcw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"css-color-names\": \"^1.0.1\",\n                \"postcss-value-parser\": \"^4.1.0\",\n                \"stylehacks\": \"^5.0.1\"\n            }\n        },\n        \"postcss-merge-rules\": {\n            \"version\": \"5.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-merge-rules/-/postcss-merge-rules-5.0.2.tgz\",\n            \"integrity\": \"sha512-5K+Md7S3GwBewfB4rjDeol6V/RZ8S+v4B66Zk2gChRqLTCC8yjnHQ601omj9TKftS19OPGqZ/XzoqpzNQQLwbg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"browserslist\": \"^4.16.6\",\n                \"caniuse-api\": \"^3.0.0\",\n                \"cssnano-utils\": \"^2.0.1\",\n                \"postcss-selector-parser\": \"^6.0.5\",\n                \"vendors\": \"^1.0.3\"\n            },\n            \"dependencies\": {\n                \"browserslist\": {\n                    \"version\": \"4.17.3\",\n                    \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.17.3.tgz\",\n                    \"integrity\": \"sha512-59IqHJV5VGdcJZ+GZ2hU5n4Kv3YiASzW6Xk5g9tf5a/MAzGeFwgGWU39fVzNIOVcgB3+Gp+kiQu0HEfTVU/3VQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"caniuse-lite\": \"^1.0.30001264\",\n                        \"electron-to-chromium\": \"^1.3.857\",\n                        \"escalade\": \"^3.1.1\",\n                        \"node-releases\": \"^1.1.77\",\n                        \"picocolors\": \"^0.2.1\"\n                    }\n                },\n                \"caniuse-lite\": {\n                    \"version\": \"1.0.30001265\",\n                    \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001265.tgz\",\n                    \"integrity\": \"sha512-YzBnspggWV5hep1m9Z6sZVLOt7vrju8xWooFAgN6BA5qvy98qPAPb7vNUzypFaoh2pb3vlfzbDO8tB57UPGbtw==\",\n                    \"dev\": true\n                },\n                \"electron-to-chromium\": {\n                    \"version\": \"1.3.865\",\n                    \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.865.tgz\",\n                    \"integrity\": \"sha512-okGcCKfihgGlaROMFNPQ6eaU3bk9Xa68rLYSnVD2PyIqM5B/vyQoXCpB3p1HI3AXio097ROVBlSO4JZVilUWuA==\",\n                    \"dev\": true\n                },\n                \"node-releases\": {\n                    \"version\": \"1.1.77\",\n                    \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-1.1.77.tgz\",\n                    \"integrity\": \"sha512-rB1DUFUNAN4Gn9keO2K1efO35IDK7yKHCdCaIMvFO7yUYmmZYeDjnGKle26G4rwj+LKRQpjyUUvMkPglwGCYNQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"postcss-minify-font-values\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-minify-font-values/-/postcss-minify-font-values-5.0.1.tgz\",\n            \"integrity\": \"sha512-7JS4qIsnqaxk+FXY1E8dHBDmraYFWmuL6cgt0T1SWGRO5bzJf8sUoelwa4P88LEWJZweHevAiDKxHlofuvtIoA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"postcss-value-parser\": \"^4.1.0\"\n            }\n        },\n        \"postcss-minify-gradients\": {\n            \"version\": \"5.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-minify-gradients/-/postcss-minify-gradients-5.0.2.tgz\",\n            \"integrity\": \"sha512-7Do9JP+wqSD6Prittitt2zDLrfzP9pqKs2EcLX7HJYxsxCOwrrcLt4x/ctQTsiOw+/8HYotAoqNkrzItL19SdQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"colord\": \"^2.6\",\n                \"cssnano-utils\": \"^2.0.1\",\n                \"postcss-value-parser\": \"^4.1.0\"\n            }\n        },\n        \"postcss-minify-params\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-minify-params/-/postcss-minify-params-5.0.1.tgz\",\n            \"integrity\": \"sha512-4RUC4k2A/Q9mGco1Z8ODc7h+A0z7L7X2ypO1B6V8057eVK6mZ6xwz6QN64nHuHLbqbclkX1wyzRnIrdZehTEHw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"alphanum-sort\": \"^1.0.2\",\n                \"browserslist\": \"^4.16.0\",\n                \"cssnano-utils\": \"^2.0.1\",\n                \"postcss-value-parser\": \"^4.1.0\",\n                \"uniqs\": \"^2.0.0\"\n            },\n            \"dependencies\": {\n                \"browserslist\": {\n                    \"version\": \"4.17.3\",\n                    \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.17.3.tgz\",\n                    \"integrity\": \"sha512-59IqHJV5VGdcJZ+GZ2hU5n4Kv3YiASzW6Xk5g9tf5a/MAzGeFwgGWU39fVzNIOVcgB3+Gp+kiQu0HEfTVU/3VQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"caniuse-lite\": \"^1.0.30001264\",\n                        \"electron-to-chromium\": \"^1.3.857\",\n                        \"escalade\": \"^3.1.1\",\n                        \"node-releases\": \"^1.1.77\",\n                        \"picocolors\": \"^0.2.1\"\n                    }\n                },\n                \"caniuse-lite\": {\n                    \"version\": \"1.0.30001265\",\n                    \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001265.tgz\",\n                    \"integrity\": \"sha512-YzBnspggWV5hep1m9Z6sZVLOt7vrju8xWooFAgN6BA5qvy98qPAPb7vNUzypFaoh2pb3vlfzbDO8tB57UPGbtw==\",\n                    \"dev\": true\n                },\n                \"electron-to-chromium\": {\n                    \"version\": \"1.3.865\",\n                    \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.865.tgz\",\n                    \"integrity\": \"sha512-okGcCKfihgGlaROMFNPQ6eaU3bk9Xa68rLYSnVD2PyIqM5B/vyQoXCpB3p1HI3AXio097ROVBlSO4JZVilUWuA==\",\n                    \"dev\": true\n                },\n                \"node-releases\": {\n                    \"version\": \"1.1.77\",\n                    \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-1.1.77.tgz\",\n                    \"integrity\": \"sha512-rB1DUFUNAN4Gn9keO2K1efO35IDK7yKHCdCaIMvFO7yUYmmZYeDjnGKle26G4rwj+LKRQpjyUUvMkPglwGCYNQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"postcss-minify-selectors\": {\n            \"version\": \"5.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-minify-selectors/-/postcss-minify-selectors-5.1.0.tgz\",\n            \"integrity\": \"sha512-NzGBXDa7aPsAcijXZeagnJBKBPMYLaJJzB8CQh6ncvyl2sIndLVWfbcDi0SBjRWk5VqEjXvf8tYwzoKf4Z07og==\",\n            \"dev\": true,\n            \"requires\": {\n                \"alphanum-sort\": \"^1.0.2\",\n                \"postcss-selector-parser\": \"^6.0.5\"\n            }\n        },\n        \"postcss-modules-extract-imports\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-modules-extract-imports/-/postcss-modules-extract-imports-3.0.0.tgz\",\n            \"integrity\": \"sha512-bdHleFnP3kZ4NYDhuGlVK+CMrQ/pqUm8bx/oGL93K6gVwiclvX5x0n76fYMKuIGKzlABOy13zsvqjb0f92TEXw==\",\n            \"dev\": true\n        },\n        \"postcss-modules-local-by-default\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-modules-local-by-default/-/postcss-modules-local-by-default-4.0.0.tgz\",\n            \"integrity\": \"sha512-sT7ihtmGSF9yhm6ggikHdV0hlziDTX7oFoXtuVWeDd3hHObNkcHRo9V3yg7vCAY7cONyxJC/XXCmmiHHcvX7bQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"icss-utils\": \"^5.0.0\",\n                \"postcss-selector-parser\": \"^6.0.2\",\n                \"postcss-value-parser\": \"^4.1.0\"\n            }\n        },\n        \"postcss-modules-scope\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-modules-scope/-/postcss-modules-scope-3.0.0.tgz\",\n            \"integrity\": \"sha512-hncihwFA2yPath8oZ15PZqvWGkWf+XUfQgUGamS4LqoP1anQLOsOJw0vr7J7IwLpoY9fatA2qiGUGmuZL0Iqlg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"postcss-selector-parser\": \"^6.0.4\"\n            }\n        },\n        \"postcss-modules-values\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-modules-values/-/postcss-modules-values-4.0.0.tgz\",\n            \"integrity\": \"sha512-RDxHkAiEGI78gS2ofyvCsu7iycRv7oqw5xMWn9iMoR0N/7mf9D50ecQqUo5BZ9Zh2vH4bCUR/ktCqbB9m8vJjQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"icss-utils\": \"^5.0.0\"\n            }\n        },\n        \"postcss-normalize-charset\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-normalize-charset/-/postcss-normalize-charset-5.0.1.tgz\",\n            \"integrity\": \"sha512-6J40l6LNYnBdPSk+BHZ8SF+HAkS4q2twe5jnocgd+xWpz/mx/5Sa32m3W1AA8uE8XaXN+eg8trIlfu8V9x61eg==\",\n            \"dev\": true\n        },\n        \"postcss-normalize-display-values\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-normalize-display-values/-/postcss-normalize-display-values-5.0.1.tgz\",\n            \"integrity\": \"sha512-uupdvWk88kLDXi5HEyI9IaAJTE3/Djbcrqq8YgjvAVuzgVuqIk3SuJWUisT2gaJbZm1H9g5k2w1xXilM3x8DjQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"cssnano-utils\": \"^2.0.1\",\n                \"postcss-value-parser\": \"^4.1.0\"\n            }\n        },\n        \"postcss-normalize-positions\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-normalize-positions/-/postcss-normalize-positions-5.0.1.tgz\",\n            \"integrity\": \"sha512-rvzWAJai5xej9yWqlCb1OWLd9JjW2Ex2BCPzUJrbaXmtKtgfL8dBMOOMTX6TnvQMtjk3ei1Lswcs78qKO1Skrg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"postcss-value-parser\": \"^4.1.0\"\n            }\n        },\n        \"postcss-normalize-repeat-style\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-normalize-repeat-style/-/postcss-normalize-repeat-style-5.0.1.tgz\",\n            \"integrity\": \"sha512-syZ2itq0HTQjj4QtXZOeefomckiV5TaUO6ReIEabCh3wgDs4Mr01pkif0MeVwKyU/LHEkPJnpwFKRxqWA/7O3w==\",\n            \"dev\": true,\n            \"requires\": {\n                \"cssnano-utils\": \"^2.0.1\",\n                \"postcss-value-parser\": \"^4.1.0\"\n            }\n        },\n        \"postcss-normalize-string\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-normalize-string/-/postcss-normalize-string-5.0.1.tgz\",\n            \"integrity\": \"sha512-Ic8GaQ3jPMVl1OEn2U//2pm93AXUcF3wz+OriskdZ1AOuYV25OdgS7w9Xu2LO5cGyhHCgn8dMXh9bO7vi3i9pA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"postcss-value-parser\": \"^4.1.0\"\n            }\n        },\n        \"postcss-normalize-timing-functions\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-normalize-timing-functions/-/postcss-normalize-timing-functions-5.0.1.tgz\",\n            \"integrity\": \"sha512-cPcBdVN5OsWCNEo5hiXfLUnXfTGtSFiBU9SK8k7ii8UD7OLuznzgNRYkLZow11BkQiiqMcgPyh4ZqXEEUrtQ1Q==\",\n            \"dev\": true,\n            \"requires\": {\n                \"cssnano-utils\": \"^2.0.1\",\n                \"postcss-value-parser\": \"^4.1.0\"\n            }\n        },\n        \"postcss-normalize-unicode\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-normalize-unicode/-/postcss-normalize-unicode-5.0.1.tgz\",\n            \"integrity\": \"sha512-kAtYD6V3pK0beqrU90gpCQB7g6AOfP/2KIPCVBKJM2EheVsBQmx/Iof+9zR9NFKLAx4Pr9mDhogB27pmn354nA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"browserslist\": \"^4.16.0\",\n                \"postcss-value-parser\": \"^4.1.0\"\n            },\n            \"dependencies\": {\n                \"browserslist\": {\n                    \"version\": \"4.17.3\",\n                    \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.17.3.tgz\",\n                    \"integrity\": \"sha512-59IqHJV5VGdcJZ+GZ2hU5n4Kv3YiASzW6Xk5g9tf5a/MAzGeFwgGWU39fVzNIOVcgB3+Gp+kiQu0HEfTVU/3VQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"caniuse-lite\": \"^1.0.30001264\",\n                        \"electron-to-chromium\": \"^1.3.857\",\n                        \"escalade\": \"^3.1.1\",\n                        \"node-releases\": \"^1.1.77\",\n                        \"picocolors\": \"^0.2.1\"\n                    }\n                },\n                \"caniuse-lite\": {\n                    \"version\": \"1.0.30001265\",\n                    \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001265.tgz\",\n                    \"integrity\": \"sha512-YzBnspggWV5hep1m9Z6sZVLOt7vrju8xWooFAgN6BA5qvy98qPAPb7vNUzypFaoh2pb3vlfzbDO8tB57UPGbtw==\",\n                    \"dev\": true\n                },\n                \"electron-to-chromium\": {\n                    \"version\": \"1.3.865\",\n                    \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.865.tgz\",\n                    \"integrity\": \"sha512-okGcCKfihgGlaROMFNPQ6eaU3bk9Xa68rLYSnVD2PyIqM5B/vyQoXCpB3p1HI3AXio097ROVBlSO4JZVilUWuA==\",\n                    \"dev\": true\n                },\n                \"node-releases\": {\n                    \"version\": \"1.1.77\",\n                    \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-1.1.77.tgz\",\n                    \"integrity\": \"sha512-rB1DUFUNAN4Gn9keO2K1efO35IDK7yKHCdCaIMvFO7yUYmmZYeDjnGKle26G4rwj+LKRQpjyUUvMkPglwGCYNQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"postcss-normalize-url\": {\n            \"version\": \"5.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-normalize-url/-/postcss-normalize-url-5.0.2.tgz\",\n            \"integrity\": \"sha512-k4jLTPUxREQ5bpajFQZpx8bCF2UrlqOTzP9kEqcEnOfwsRshWs2+oAFIHfDQB8GO2PaUaSE0NlTAYtbluZTlHQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"is-absolute-url\": \"^3.0.3\",\n                \"normalize-url\": \"^6.0.1\",\n                \"postcss-value-parser\": \"^4.1.0\"\n            }\n        },\n        \"postcss-normalize-whitespace\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-normalize-whitespace/-/postcss-normalize-whitespace-5.0.1.tgz\",\n            \"integrity\": \"sha512-iPklmI5SBnRvwceb/XH568yyzK0qRVuAG+a1HFUsFRf11lEJTiQQa03a4RSCQvLKdcpX7XsI1Gen9LuLoqwiqA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"postcss-value-parser\": \"^4.1.0\"\n            }\n        },\n        \"postcss-ordered-values\": {\n            \"version\": \"5.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-ordered-values/-/postcss-ordered-values-5.0.2.tgz\",\n            \"integrity\": \"sha512-8AFYDSOYWebJYLyJi3fyjl6CqMEG/UVworjiyK1r573I56kb3e879sCJLGvR3merj+fAdPpVplXKQZv+ey6CgQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"cssnano-utils\": \"^2.0.1\",\n                \"postcss-value-parser\": \"^4.1.0\"\n            }\n        },\n        \"postcss-reduce-initial\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-reduce-initial/-/postcss-reduce-initial-5.0.1.tgz\",\n            \"integrity\": \"sha512-zlCZPKLLTMAqA3ZWH57HlbCjkD55LX9dsRyxlls+wfuRfqCi5mSlZVan0heX5cHr154Dq9AfbH70LyhrSAezJw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"browserslist\": \"^4.16.0\",\n                \"caniuse-api\": \"^3.0.0\"\n            },\n            \"dependencies\": {\n                \"browserslist\": {\n                    \"version\": \"4.17.3\",\n                    \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.17.3.tgz\",\n                    \"integrity\": \"sha512-59IqHJV5VGdcJZ+GZ2hU5n4Kv3YiASzW6Xk5g9tf5a/MAzGeFwgGWU39fVzNIOVcgB3+Gp+kiQu0HEfTVU/3VQ==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"caniuse-lite\": \"^1.0.30001264\",\n                        \"electron-to-chromium\": \"^1.3.857\",\n                        \"escalade\": \"^3.1.1\",\n                        \"node-releases\": \"^1.1.77\",\n                        \"picocolors\": \"^0.2.1\"\n                    }\n                },\n                \"caniuse-lite\": {\n                    \"version\": \"1.0.30001265\",\n                    \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001265.tgz\",\n                    \"integrity\": \"sha512-YzBnspggWV5hep1m9Z6sZVLOt7vrju8xWooFAgN6BA5qvy98qPAPb7vNUzypFaoh2pb3vlfzbDO8tB57UPGbtw==\",\n                    \"dev\": true\n                },\n                \"electron-to-chromium\": {\n                    \"version\": \"1.3.865\",\n                    \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.865.tgz\",\n                    \"integrity\": \"sha512-okGcCKfihgGlaROMFNPQ6eaU3bk9Xa68rLYSnVD2PyIqM5B/vyQoXCpB3p1HI3AXio097ROVBlSO4JZVilUWuA==\",\n                    \"dev\": true\n                },\n                \"node-releases\": {\n                    \"version\": \"1.1.77\",\n                    \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-1.1.77.tgz\",\n                    \"integrity\": \"sha512-rB1DUFUNAN4Gn9keO2K1efO35IDK7yKHCdCaIMvFO7yUYmmZYeDjnGKle26G4rwj+LKRQpjyUUvMkPglwGCYNQ==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"postcss-reduce-transforms\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-reduce-transforms/-/postcss-reduce-transforms-5.0.1.tgz\",\n            \"integrity\": \"sha512-a//FjoPeFkRuAguPscTVmRQUODP+f3ke2HqFNgGPwdYnpeC29RZdCBvGRGTsKpMURb/I3p6jdKoBQ2zI+9Q7kA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"cssnano-utils\": \"^2.0.1\",\n                \"postcss-value-parser\": \"^4.1.0\"\n            }\n        },\n        \"postcss-selector-parser\": {\n            \"version\": \"6.0.6\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.6.tgz\",\n            \"integrity\": \"sha512-9LXrvaaX3+mcv5xkg5kFwqSzSH1JIObIx51PrndZwlmznwXRfxMddDvo9gve3gVR8ZTKgoFDdWkbRFmEhT4PMg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"cssesc\": \"^3.0.0\",\n                \"util-deprecate\": \"^1.0.2\"\n            }\n        },\n        \"postcss-svgo\": {\n            \"version\": \"5.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-svgo/-/postcss-svgo-5.0.2.tgz\",\n            \"integrity\": \"sha512-YzQuFLZu3U3aheizD+B1joQ94vzPfE6BNUcSYuceNxlVnKKsOtdo6hL9/zyC168Q8EwfLSgaDSalsUGa9f2C0A==\",\n            \"dev\": true,\n            \"requires\": {\n                \"postcss-value-parser\": \"^4.1.0\",\n                \"svgo\": \"^2.3.0\"\n            }\n        },\n        \"postcss-unique-selectors\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-unique-selectors/-/postcss-unique-selectors-5.0.1.tgz\",\n            \"integrity\": \"sha512-gwi1NhHV4FMmPn+qwBNuot1sG1t2OmacLQ/AX29lzyggnjd+MnVD5uqQmpXO3J17KGL2WAxQruj1qTd3H0gG/w==\",\n            \"dev\": true,\n            \"requires\": {\n                \"alphanum-sort\": \"^1.0.2\",\n                \"postcss-selector-parser\": \"^6.0.5\",\n                \"uniqs\": \"^2.0.0\"\n            }\n        },\n        \"postcss-value-parser\": {\n            \"version\": \"4.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.1.0.tgz\",\n            \"integrity\": \"sha512-97DXOFbQJhk71ne5/Mt6cOu6yxsSfM0QGQyl0L25Gca4yGWEGJaig7l7gbCX623VqTBNGLRLaVUCnNkcedlRSQ==\",\n            \"dev\": true\n        },\n        \"pretty-time\": {\n            \"version\": \"1.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/pretty-time/-/pretty-time-1.1.0.tgz\",\n            \"integrity\": \"sha512-28iF6xPQrP8Oa6uxE6a1biz+lWeTOAPKggvjB8HAs6nVMKZwf5bG++632Dx614hIWgUPkgivRfG+a8uAXGTIbA==\",\n            \"dev\": true\n        },\n        \"process\": {\n            \"version\": \"0.11.10\",\n            \"resolved\": \"https://registry.npmjs.org/process/-/process-0.11.10.tgz\",\n            \"integrity\": \"sha1-czIwDoQBYb2j5podHZGn1LwW8YI=\",\n            \"dev\": true\n        },\n        \"process-nextick-args\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npm.taobao.org/process-nextick-args/download/process-nextick-args-2.0.1.tgz\",\n            \"integrity\": \"sha1-eCDZsWEgzFXKmud5JoCufbptf+I=\",\n            \"dev\": true\n        },\n        \"proxy-addr\": {\n            \"version\": \"2.0.7\",\n            \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\n            \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"forwarded\": \"0.2.0\",\n                \"ipaddr.js\": \"1.9.1\"\n            },\n            \"dependencies\": {\n                \"ipaddr.js\": {\n                    \"version\": \"1.9.1\",\n                    \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\n                    \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"public-encrypt\": {\n            \"version\": \"4.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/public-encrypt/-/public-encrypt-4.0.3.tgz\",\n            \"integrity\": \"sha512-zVpa8oKZSz5bTMTFClc1fQOnyyEzpl5ozpi1B5YcvBrdohMjH2rfsBtyXcuNuwjsDIXmBYlF2N5FlJYhR29t8Q==\",\n            \"dev\": true,\n            \"requires\": {\n                \"bn.js\": \"^4.1.0\",\n                \"browserify-rsa\": \"^4.0.0\",\n                \"create-hash\": \"^1.1.0\",\n                \"parse-asn1\": \"^5.0.0\",\n                \"randombytes\": \"^2.0.1\",\n                \"safe-buffer\": \"^5.1.2\"\n            },\n            \"dependencies\": {\n                \"bn.js\": {\n                    \"version\": \"4.12.0\",\n                    \"resolved\": \"https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz\",\n                    \"integrity\": \"sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"punycode\": {\n            \"version\": \"2.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz\",\n            \"integrity\": \"sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==\",\n            \"dev\": true\n        },\n        \"q\": {\n            \"version\": \"1.5.1\",\n            \"resolved\": \"https://registry.npmjs.org/q/-/q-1.5.1.tgz\",\n            \"integrity\": \"sha1-fjL3W0E4EpHQRhHxvxQQmsAGUdc=\",\n            \"dev\": true\n        },\n        \"qs\": {\n            \"version\": \"6.7.0\",\n            \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.7.0.tgz\",\n            \"integrity\": \"sha512-VCdBRNFTX1fyE7Nb6FYoURo/SPe62QCaAyzJvUjwRaIsc+NePBEniHlvxFmmX56+HZphIGtV0XeCirBtpDrTyQ==\",\n            \"dev\": true\n        },\n        \"querystring\": {\n            \"version\": \"0.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz\",\n            \"integrity\": \"sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA=\",\n            \"dev\": true\n        },\n        \"querystring-es3\": {\n            \"version\": \"0.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/querystring-es3/-/querystring-es3-0.2.1.tgz\",\n            \"integrity\": \"sha1-nsYfeQSYdXB9aUFFlv2Qek1xHnM=\",\n            \"dev\": true\n        },\n        \"queue-microtask\": {\n            \"version\": \"1.2.3\",\n            \"resolved\": \"https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz\",\n            \"integrity\": \"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\",\n            \"dev\": true\n        },\n        \"quick-lru\": {\n            \"version\": \"4.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/quick-lru/-/quick-lru-4.0.1.tgz\",\n            \"integrity\": \"sha512-ARhCpm70fzdcvNQfPoy49IaanKkTlRWF2JMzqhcJbhSFRZv7nPTvZJdcY7301IPmvW+/p0RgIWnQDLJxifsQ7g==\",\n            \"dev\": true\n        },\n        \"randombytes\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz\",\n            \"integrity\": \"sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"safe-buffer\": \"^5.1.0\"\n            }\n        },\n        \"randomfill\": {\n            \"version\": \"1.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/randomfill/-/randomfill-1.0.4.tgz\",\n            \"integrity\": \"sha512-87lcbR8+MhcWcUiQ+9e+Rwx8MyR2P7qnt15ynUlbm3TU/fjbgz4GsvfSUDTemtCCtVCqb4ZcEFlyPNTh9bBTLw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"randombytes\": \"^2.0.5\",\n                \"safe-buffer\": \"^5.1.0\"\n            }\n        },\n        \"range-parser\": {\n            \"version\": \"1.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\n            \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\n            \"dev\": true\n        },\n        \"raw-body\": {\n            \"version\": \"2.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.4.0.tgz\",\n            \"integrity\": \"sha512-4Oz8DUIwdvoa5qMJelxipzi/iJIi40O5cGV1wNYp5hvZP8ZN0T+jiNkL0QepXs+EsQ9XJ8ipEDoiH70ySUJP3Q==\",\n            \"dev\": true,\n            \"requires\": {\n                \"bytes\": \"3.1.0\",\n                \"http-errors\": \"1.7.2\",\n                \"iconv-lite\": \"0.4.24\",\n                \"unpipe\": \"1.0.0\"\n            },\n            \"dependencies\": {\n                \"bytes\": {\n                    \"version\": \"3.1.0\",\n                    \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.0.tgz\",\n                    \"integrity\": \"sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbzwv8f+wZcVzfVTI2Dg==\",\n                    \"dev\": true\n                }\n            }\n        },\n        \"read-pkg\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/read-pkg/-/read-pkg-3.0.0.tgz\",\n            \"integrity\": \"sha1-nLxoaXj+5l0WwA4rGcI3/Pbjg4k=\",\n            \"dev\": true,\n            \"requires\": {\n                \"load-json-file\": \"^4.0.0\",\n                \"normalize-package-data\": \"^2.3.2\",\n                \"path-type\": \"^3.0.0\"\n            },\n            \"dependencies\": {\n                \"hosted-git-info\": {\n                    \"version\": \"2.8.9\",\n                    \"resolved\": \"https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.9.tgz\",\n                    \"integrity\": \"sha512-mxIDAb9Lsm6DoOJ7xH+5+X4y1LU/4Hi50L9C5sIswK3JzULS4bwk1FvjdBgvYR4bzT4tuUQiC15FE2f5HbLvYw==\",\n                    \"dev\": true\n                },\n                \"normalize-package-data\": {\n                    \"version\": \"2.5.0\",\n                    \"resolved\": \"https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz\",\n                    \"integrity\": \"sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==\",\n                    \"dev\": true,\n                    \"requires\": {\n                        \"hosted-git-info\": \"^2.1.4\",\n                        \"resolve\": \"^1.10.0\",\n                        \"semver\": \"2 || 3 || 4 || 5\",\n                        \"validate-npm-package-license\": \"^3.0.1\"\n                    }\n                }\n            }\n        },\n        \"read-pkg-up\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-3.0.0.tgz\",\n            \"integrity\": \"sha1-PtSWaF26D4/hGNBpHcUfSh/5bwc=\",\n            \"dev\": true,\n            \"requires\": {\n                \"find-up\": \"^2.0.0\",\n                \"read-pkg\": \"^3.0.0\"\n            }\n        },\n        \"readable-stream\": {\n            \"version\": \"3.6.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/readable-stream/download/readable-stream-3.6.0.tgz\",\n            \"integrity\": \"sha1-M3u9o63AcGvT4CRCaihtS0sskZg=\",\n            \"dev\": true,\n            \"requires\": {\n                \"inherits\": \"^2.0.3\",\n                \"string_decoder\": \"^1.1.1\",\n                \"util-deprecate\": \"^1.0.1\"\n            }\n        },\n        \"readdirp\": {\n            \"version\": \"3.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n            \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"picomatch\": \"^2.2.1\"\n            }\n        },\n        \"redent\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/redent/-/redent-3.0.0.tgz\",\n            \"integrity\": \"sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"indent-string\": \"^4.0.0\",\n                \"strip-indent\": \"^3.0.0\"\n            }\n        },\n        \"regenerate\": {\n            \"version\": \"1.4.2\",\n            \"resolved\": \"https://registry.npm.taobao.org/regenerate/download/regenerate-1.4.2.tgz?cache=0&sync_timestamp=1604218358172&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fregenerate%2Fdownload%2Fregenerate-1.4.2.tgz\",\n            \"integrity\": \"sha1-uTRtiCfo9aMve6KWN9OYtpAUhIo=\",\n            \"dev\": true\n        },\n        \"regenerate-unicode-properties\": {\n            \"version\": \"8.2.0\",\n            \"resolved\": \"https://registry.npm.taobao.org/regenerate-unicode-properties/download/regenerate-unicode-properties-8.2.0.tgz\",\n            \"integrity\": \"sha1-5d5xEdZV57pgwFfb6f83yH5lzew=\",\n            \"dev\": true,\n            \"requires\": {\n                \"regenerate\": \"^1.4.0\"\n            }\n        },\n        \"regenerator-runtime\": {\n            \"version\": \"0.13.7\",\n            \"resolved\": \"https://registry.npm.taobao.org/regenerator-runtime/download/regenerator-runtime-0.13.7.tgz?cache=0&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fregenerator-runtime%2Fdownload%2Fregenerator-runtime-0.13.7.tgz\",\n            \"integrity\": \"sha1-ysLazIoepnX+qrrriugziYrkb1U=\",\n            \"dev\": true\n        },\n        \"regenerator-transform\": {\n            \"version\": \"0.14.5\",\n            \"resolved\": \"https://registry.npm.taobao.org/regenerator-transform/download/regenerator-transform-0.14.5.tgz?cache=0&sync_timestamp=1593557296427&other_urls=https%3A%2F%2Fregistry.npm.taobao.org%2Fregenerator-transform%2Fdownload%2Fregenerator-transform-0.14.5.tgz\",\n            \"integrity\": \"sha1-yY2hVGg2ccnE3LFuznNlF+G3/rQ=\",\n            \"dev\": true,\n            \"requires\": {\n                \"@babel/runtime\": \"^7.8.4\"\n            }\n        },\n        \"regex-parser\": {\n            \"version\": \"2.2.11\",\n            \"resolved\": \"https://registry.npmjs.org/regex-parser/-/regex-parser-2.2.11.tgz\",\n            \"integrity\": \"sha512-jbD/FT0+9MBU2XAZluI7w2OBs1RBi6p9M83nkoZayQXXU9e8Robt69FcZc7wU4eJD/YFTjn1JdCk3rbMJajz8Q==\",\n            \"dev\": true\n        },\n        \"regexp.prototype.flags\": {\n            \"version\": \"1.3.1\",\n            \"resolved\": \"https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.3.1.tgz\",\n            \"integrity\": \"sha512-JiBdRBq91WlY7uRJ0ds7R+dU02i6LKi8r3BuQhNXn+kmeLN+EfHhfjqMRis1zJxnlu88hq/4dx0P2OP3APRTOA==\",\n            \""
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.302734375,
          "content": "{\n    \"private\": true,\n    \"version\": \"2.4.1\",\n    \"scripts\": {\n        \"dev\": \"npm run development\",\n        \"development\": \"cross-env NODE_ENV=development node_modules/webpack/bin/webpack.js --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js\",\n        \"watch\": \"npm run development -- --watch\",\n        \"watch-poll\": \"npm run watch -- --watch-poll\",\n        \"hot\": \"cross-env NODE_ENV=development node_modules/webpack-dev-server/bin/webpack-dev-server.js --inline --hot --config=node_modules/laravel-mix/setup/webpack.config.js --progress\",\n        \"prod\": \"npm run production\",\n        \"production\": \"cross-env NODE_ENV=production node_modules/webpack/bin/webpack.js --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js\",\n        \"changelog\": \"rm -rf CHANGELOG.md && conventional-changelog -p angular -r 2 -i CHANGELOG.md -s\",\n        \"postinstall\": \"opencollective postinstall\",\n        \"docs:dev\": \"vuepress dev docs\",\n        \"docs:build\": \"vuepress build docs\"\n    },\n    \"devDependencies\": {\n        \"@babel/core\": \"^7.15.8\",\n        \"@babel/plugin-proposal-class-properties\": \"^7.14.5\",\n        \"@vue/babel-preset-app\": \"^3.9.2\",\n        \"babel-loader\": \"^8.2.2\",\n        \"conventional-changelog-cli\": \"^2.1.1\",\n        \"cross-env\": \"^7.0.3\",\n        \"laravel-mix\": \"^6.0.34\",\n        \"opencollective\": \"^1.0.3\",\n        \"resolve-url-loader\": \"^4.0.0\",\n        \"sass\": \"^1.41.1\",\n        \"sass-loader\": \"7.*\",\n        \"vue-template-compiler\": \"^2.6.14\"\n    },\n    \"dependencies\": {\n        \"@slimkit/plus-editor\": \"^0.0.3\",\n        \"axios\": \"^0.22.0\",\n        \"babel-plugin-transform-class-properties\": \"^6.24.1\",\n        \"bootstrap-sass\": \"^3.3.7\",\n        \"echarts\": \"^5.2.1\",\n        \"chart.js\": \"^3.5.1\",\n        \"highlight.js\": \"^11.2.0\",\n        \"jquery\": \"^3.6.0\",\n        \"js-md5\": \"^0.7.3\",\n        \"lodash\": \"^4.17.21\",\n        \"markdown-it\": \"^12.2.0\",\n        \"plus-message-bundle\": \"^1.0.2\",\n        \"simkit-bootstrap-ui-kit\": \"^1.1.1\",\n        \"vue\": \"^2.6.14\",\n        \"vue-echarts-v3\": \"^2.0.1\",\n        \"vue-router\": \"^3.5.2\",\n        \"vuex\": \"^3.6.2\",\n        \"vuex-router-sync\": \"^5.0.0\"\n    },\n    \"collective\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/plus\",\n        \"logo\": \"https://opencollective.com/plus/logo.txt\"\n    }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 1.2998046875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"./vendor/phpunit/phpunit/phpunit.xsd\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n>\n    <testsuites>\n        <testsuite name=\"Package\">\n            <directory suffix=\"Test.php\">./packages/*/tests</directory>\n        </testsuite>\n\n        <testsuite name=\"Unit\">\n            <directory suffix=\"Test.php\">./tests/Unit</directory>\n        </testsuite>\n        <testsuite name=\"Feature\">\n            <directory suffix=\"Test.php\">./tests/Feature</directory>\n        </testsuite>\n    </testsuites>\n    <coverage processUncoveredFiles=\"true\">\n        <include>\n            <directory suffix=\".php\">./app</directory>\n        </include>\n    </coverage>\n    <php>\n        <server name=\"APP_ENV\" value=\"testing\"/>\n        <server name=\"BCRYPT_ROUNDS\" value=\"4\"/>\n        <server name=\"CACHE_DRIVER\" value=\"array\"/>\n        <!-- <server name=\"DB_CONNECTION\" value=\"sqlite\"/> -->\n        <!-- <server name=\"DB_DATABASE\" value=\":memory:\"/> -->\n        <server name=\"MAIL_MAILER\" value=\"array\"/>\n        <server name=\"QUEUE_CONNECTION\" value=\"sync\"/>\n        <server name=\"SESSION_DRIVER\" value=\"array\"/>\n        <server name=\"TELESCOPE_ENABLED\" value=\"false\"/>\n    </php>\n</phpunit>\n"
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "routes",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "server.php",
          "type": "blob",
          "size": 1.3984375,
          "content": "<?php\n\n/*\n * +----------------------------------------------------------------------+\n * |                          ThinkSNS Plus                               |\n * +----------------------------------------------------------------------+\n * | Copyright (c) 2016-Present ZhiYiChuangXiang Technology Co., Ltd.     |\n * +----------------------------------------------------------------------+\n * | This source file is subject to enterprise private license, that is   |\n * | bundled with this package in the file LICENSE, and is available      |\n * | through the world-wide-web at the following url:                     |\n * | https://github.com/slimkit/plus/blob/master/LICENSE                  |\n * +----------------------------------------------------------------------+\n * | Author: Slim Kit Group <master@zhiyicx.com>                          |\n * | Homepage: www.thinksns.com                                           |\n * +----------------------------------------------------------------------+\n */\n\n$uri = urldecode(\n    parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH)\n);\n\n// This file allows us to emulate Apache's \"mod_rewrite\" functionality from the\n// built-in PHP web server. This provides a convenient way to test a Laravel\n// application without having installed a \"real\" web server software here.\nif ($uri !== '/' && file_exists(__DIR__.'/public'.$uri)) {\n    return false;\n}\n\nrequire_once __DIR__.'/public/index.php';\n"
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "webpack.mix.js",
          "type": "blob",
          "size": 1.3564453125,
          "content": "let mix = require('laravel-mix')\nlet path = require('path')\n\n/*\n |--------------------------------------------------------------------------\n | Mix Asset Management\n |--------------------------------------------------------------------------\n |\n | Mix provides a clean, fluent API for defining some Webpack build steps\n | for your Laravel applications. By default, we are compiling the CSS\n | file for the application as well as bundling up all the JS files.\n |\n */\n\nmix.setPublicPath(path.join('public', 'assets'))\nmix.setResourceRoot('/assets/')\nmix.sourceMaps(!mix.inProduction())\nmix.disableNotifications()\n\nif (mix.config.hmr === true) {\n  mix.setResourceRoot('/')\n}\n\n/*\n |--------------------------------------------------------------------------\n | Bootstrap SASS & jQuery bundle.\n |--------------------------------------------------------------------------\n |\n | 包含 jQuery 和 Bootstrap 的捆包。\n |\n */\n\nmix.sass('resources/sass/bootstrap.scss', path.join('public', 'assets', 'css')).\n  js('resources/js/bootstrap.js', path.join('public', 'assets', 'js'))\n\n/*\n |--------------------------------------------------------------------------\n | 后台可运行 js 捆\n |--------------------------------------------------------------------------\n |\n | 不包含 jQuery 和 Bootstrap 的 vue 捆包。\n |\n */\n\nmix.js('resources/assets/admin', path.join('public', 'assets', 'js'))\n"
        }
      ]
    }
  ]
}