{
  "metadata": {
    "timestamp": 1736712120510,
    "page": 720,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fossasia/loklak_wp_plugins",
      "stars": 1510,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".htaccess",
          "type": "blob",
          "size": 0.4423828125,
          "content": "# BEGIN WordPress\n<IfModule mod_rewrite.c>\nRewriteEngine On\nRewriteBase /\nRewriteRule ^index\\.php$ - [L]\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule . /index.php [L]\n\n</IfModule>\n# END WordPress\n\nOptions -Indexes\n\n<Files wp-login.php>\nAuthName \"Login Password Required\"\nAuthType Basic\nAuthUserFile /app/.htpasswd\nrequire valid-user\n</Files>\n\n<Files web_boot.sh>\nRequire all denied\n</Files>\n\nSetEnv TZ Asia/Tokyo\n\n"
        },
        {
          "name": ".htpasswd",
          "type": "blob",
          "size": 0.0185546875,
          "content": "test:dGRkPurkuWmW2\n"
        },
        {
          "name": ".slugignore",
          "type": "blob",
          "size": 0.0166015625,
          "content": "docs/\nresources/\n"
        },
        {
          "name": ".user.ini",
          "type": "blob",
          "size": 0.095703125,
          "content": "memory_limit = 32M\n\npost_max_size = 32M\n\nupload_max_filesize = 32M\n\ndate.timezone = \"Asia/Tokyo\"\n\n"
        },
        {
          "name": "Plugin-Readme.md",
          "type": "blob",
          "size": 10.515625,
          "content": "# Plugin List\n\n## Latest Tweets Widget\n**Maintainer:** Timwhitlock\n\n**Contact:** https://profiles.wordpress.org/timwhitlock/\n\n**Import Date:** May 29th, 2016\n\n**Version:** 1.1.3 (Latest)\n\n**Description:** Connect your Twitter account to this plugin and the widget will display your latest tweets on your site.\n\n**Tags:** Tweet Feed\n\n**Loklak Repo:** https://github.com/loklak/wp-twitter-widget\n\n**Wordpress Plugin Page:** https://wordpress.org/plugins/latest-tweets-widget/\n\n**Original Plugin Repo (Git/SVN):** https://github.com/timwhitlock/wp-twitter-widget\n\n**Loklak Integration Details:** \n\n- Loklak API has been integrated\n- **Tested (Y/N):** Y \n- **Blockers:** None\n- **Loklak Search API Source:** Twitter\n\n**Merge Status:** Discussed with developer. He does not want to merge loklak integration with his plugin. \n\n## Recent Tweets Widget\n**Maintainer:** noahkagan\n\n**Contact:** https://profiles.wordpress.org/noahkagan/\n\n**Import Date:** Jun 4th, 2016\n\n**Version:** 1.6.5 (Latest)\n\n**Description:** A basic tweet feed with Cache support\n\n**Tags:** Tweet Feed\n\n**Loklak Repo:** https://github.com/loklak/wp-recent-tweets-plugin\n\n**Wordpress Plugin Page:** https://wordpress.org/plugins/recent-tweets-widget/\n\n**Original Plugin Repo (Git/SVN):** https://plugins.svn.wordpress.org/recent-tweets-widget/\n\n**Loklak Integration Details:** \n\n- Loklak API has been integrated\n- **Tested (Y/N):** Y \n- **Blockers:** None\n- **Loklak Search API Source:** Twitter\n\n**Merge Status:** Communicated with Developer on Wordpress Slack. He showed iterest. No reply after that.\n\n## Twitter Widget Pro\n**Maintainer:** Aaron D. Campbell\n\n**Contact:** https://profiles.wordpress.org/aaroncampbell/\n\n**Import Date:** Jun 8th, 2016\n\n**Version:** 2.8.0 (Latest)\n\n**Description:** A basic tweet feed with Cache and tweet rendering format edit support.\n\n**Tags:** Tweet Feed\n\n**Loklak Repo:** https://github.com/loklak/wp-twitter-widget-pro\n\n**Wordpress Plugin Page:** https://wordpress.org/plugins/twitter-widget-pro/\n\n**Original Plugin Repo (Git/SVN):** https://plugins.svn.wordpress.org/twitter-widget-pro/\n\n**Loklak Integration Details:** \n\n- Loklak API has been integrated\n- **Tested (Y/N):** Y \n- **Blockers:** None\n- **Loklak Search API Source:** Twitter\n\n**Merge Status:** Communicated with Developer on Wordpress Slack. No replies from him.\n\n## Easy Twitter plugin\n**Maintainer:** DesignOrbital\n\n**Contact:** https://profiles.wordpress.org/designorbital/\n\n**Import Date:** Jun 11th, 2016\n\n**Version:** 0.5 (Latest)\n\n**Description:** A twitter Widget based tweet feed with Cache support.\n\n**Tags:** Tweet Feed, Twitter Widget\n\n**Loklak Repo:** https://github.com/loklak/wp-easy-twitter-plugin\n\n**Wordpress Plugin Page:** https://wordpress.org/plugins/easy-twitter-feed-widget/\n\n**Original Plugin Repo (Git/SVN):** https://plugins.svn.wordpress.org/easy-twitter-feed-widget/\n\n**Loklak Integration Details:** \n\n- Loklak API has NOT been integrated\n- **Tested (Y/N):** N\n- **Blockers:** Since the plugin uses twitter widget Auth system, therefore loklak API can't be integrated\n- **Loklak Search API Source:** Twitter\n\n**Merge Status:** None\n\n## Rotating Tweets\n**Maintainer:** Martin Tod\n\n**Contact:** https://profiles.wordpress.org/mpntod/\n\n**Import Date:** Jun 16th, 2016\n\n**Version:** 1.8.4 (Latest)\n\n**Description:** A customizable rotating tweet feed with Cache support.\n\n**Tags:** Tweet Feed\n\n**Loklak Repo:** https://github.com/loklak/wp-rotatingtweets\n\n**Wordpress Plugin Page:** https://wordpress.org/plugins/rotatingtweets/\n\n**Original Plugin Repo (Git/SVN):** https://plugins.svn.wordpress.org/rotatingtweets/\n\n**Loklak Integration Details:** \n\n- Loklak API has been integrated but some functionalities still left.\n- **Tested (Y/N):** N\n- **Blockers:** Uses Twitter APIs like \"favorites/list\" & \"lists/statuses\" which are not directly implementable in Loklak\n- **Loklak Search API Source:** Twitter\n\n**Merge Status:** None\n\n## Accesspress Twitter Feed\n**Maintainer:** Access Keys\n\n**Contact:** https://profiles.wordpress.org/access-keys/\n\n**Import Date:** Jun 16th, 2016\n\n**Version:** 1.4.6 (Latest)\n\n**Description:** A customizable rotating tweet feed with Cache support.\n\n**Tags:** Tweet Feed\n\n**Loklak Repo:** https://github.com/loklak/wp-accesspress-twitter-feed\n\n**Wordpress Plugin Page:** https://wordpress.org/plugins/accesspress-twitter-feed/\n\n**Original Plugin Repo (Git/SVN):** https://plugins.svn.wordpress.org/accesspress-twitter-feed/\n\n**Loklak Integration Details:** \n\n- Loklak API has been integrated.\n- **Tested (Y/N):** Y\n- **Blockers:** None\n- **Loklak Search API Source:** Twitter\n\n**Merge Status:** Communicated with developers on WP support [thread](https://wordpress.org/support/topic/loklak-api-support-for-the-plugin). Seemed interested but no reply afterwards.\n\n## WP Twitter Feeds\n**Maintainer:** Team Vivacity, Planet Interactive \n\n**Contact:** https://profiles.wordpress.org/vivacityinfotechjaipur/, https://profiles.wordpress.org/planet-interactive/\n\n**Import Date:** Jun 20th, 2016\n\n**Version:** 1.4.9 (Latest)\n\n**Description:** A customizable tweet feed with Cache support.\n\n**Tags:** Tweet Feed\n\n**Loklak Repo:** https://github.com/loklak/wp-twitter-feeds\n\n**Wordpress Plugin Page:** https://wordpress.org/support/plugin/wp-twitter-feeds\n\n**Original Plugin Repo (Git/SVN):** https://plugins.svn.wordpress.org/wp-twitter-feeds/\n\n**Loklak Integration Details:** \n\n- Loklak API has been integrated.\n- **Tested (Y/N):** Y\n- **Blockers:** None\n- **Loklak Search API Source:** Twitter\n\n**Merge Status:** Need to follow up with the developers.\n\n## AI Twitter Feed\n**Maintainer:** August Infotech \n\n**Contact:** https://profiles.wordpress.org/augustinfotech/\n\n**Import Date:** Jun 29th, 2016\n\n**Version:** 2.3 (Latest)\n\n**Description:** A customizable tweet feed with render format editng support.\n\n**Tags:** Tweet Feed\n\n**Loklak Repo:** https://github.com/loklak/wp-ai-twitter-feeds\n\n**Wordpress Plugin Page:** https://wordpress.org/plugins/ai-twitter-feeds/\n\n**Original Plugin Repo (Git/SVN):** https://plugins.svn.wordpress.org/ai-twitter-feeds/\n\n**Loklak Integration Details:** \n\n- Loklak API has been integrated.\n- **Tested (Y/N):** Y\n- **Blockers:** None\n- **Loklak Search API Source:** Twitter\n\n**Merge Status:** Need to follow up with the developers.\n\n## Tweeple\n**Maintainer:** Jason (Theme Blvd) \n\n**Contact:** https://profiles.wordpress.org/augustinfotech/\n\n**Import Date:** Jul 1st, 2016\n\n**Version:** 0.9.4 (Latest)\n\n**Description:** Multiple tweet feed, timelines, lists, fav tweets etc.\n\n**Tags:** Tweet Feed, Twitter Timeline\n\n**Loklak Repo:** https://github.com/loklak/wp-tweeple\n\n**Wordpress Plugin Page:** https://wordpress.org/plugins/tweeple/\n\n**Original Plugin Repo (Git/SVN):** https://plugins.svn.wordpress.org/tweeple/\n\n**Loklak Integration Details:** \n\n- Loklak API has been integrated but some functionalities still left.\n- **Tested (Y/N):** N\n- **Blockers:** Uses Twitter APIs like \"favorites/list\" & \"lists/statuses\" which are not directly implementable in Loklak\n- **Loklak Search API Source:** Twitter\n\n**Merge Status:** None\n\n## Simple Twitter Feeds\n**Maintainer:** Planet Interactive\n\n**Contact:** https://profiles.wordpress.org/planet-interactive/\n\n**Import Date:** Jun 25th, 2016\n\n**Version:** 4.4 (Latest)\n\n**Description:** A basic tweet feed with Cache support.\n\n**Tags:** Tweet Feed\n\n**Loklak Repo:** https://github.com/loklak/wp-simple-twitter-feeds\n\n**Wordpress Plugin Page:** https://wordpress.org/plugins/simple-twitter-tweets/\n\n**Original Plugin Repo (Git/SVN):** https://plugins.svn.wordpress.org/simple-twitter-tweets/\n\n**Loklak Integration Details:** \n\n- Loklak API has been integrated.\n- **Tested (Y/N):** Y\n- **Blockers:** None\n- **Loklak Search API Source:** Twitter\n\n**Merge Status:** Need to follow up with the developers.\n\n## Tweet-scroll Widget\n**Maintainer:** Pixel Industry, Vladimir Mrkela\n\n**Contact:** https://profiles.wordpress.org/pixel-industry/, https://profiles.wordpress.org/vmrkela/\n\n**Import Date:** Jun 27th, 2016\n\n**Version:** 1.3.7 (Latest)\n\n**Description:** A basic tweet feed with Cache and scrolling support.\n\n**Tags:** Tweet Feed\n\n**Loklak Repo:** https://github.com/loklak/wp-tweetscroll-widget\n\n**Wordpress Plugin Page:** https://wordpress.org/plugins/tweetscroll-widget/\n\n**Original Plugin Repo (Git/SVN):** https://plugins.svn.wordpress.org/tweetscroll-widget/\n\n**Loklak Integration Details:** \n\n- Loklak API has been integrated.\n- **Tested (Y/N):** Y\n- **Blockers:** None\n- **Loklak Search API Source:** Twitter\n\n**Merge Status:** Need to follow up with the developers.\n\n## Twidget\n**Maintainer:** Boštjan Cigan\n\n**Contact:** https://profiles.wordpress.org/zerocool51/\n\n**Import Date:** Jul 6th, 2016\n\n**Version:** 3.3.8 (Latest)\n\n**Description:** A basic tweet feed with Cache support.\n\n**Tags:** Tweet Feed\n\n**Loklak Repo:** https://github.com/loklak/wp-twidget\n\n**Wordpress Plugin Page:** https://wordpress.org/plugins/twitget/\n\n**Original Plugin Repo (Git/SVN):** https://plugins.svn.wordpress.org/twitget/\n\n**Loklak Integration Details:** \n\n- Loklak API has been integrated.\n- **Tested (Y/N):** Partially\n- **Blockers:** None\n- **Loklak Search API Source:** Twitter\n\n**Merge Status:** Need to follow up with the developers.\n\n## Juiz Last Tweet Widget\n**Maintainer:** Geoffrey Crofte\n\n**Contact:** https://profiles.wordpress.org/creativejuiz/\n\n**Import Date:** Jul 6th, 2016\n\n**Version:** 1.3.6 (Latest)\n\n**Description:** A customizable tweet feed with Cache and user-defined style support.\n\n**Tags:** Tweet Feed\n\n**Loklak Repo:** https://github.com/loklak/wp-juiz-last-tweet-widget\n\n**Wordpress Plugin Page:** https://wordpress.org/plugins/juiz-last-tweet-widget/\n\n**Original Plugin Repo (Git/SVN):** https://plugins.svn.wordpress.org/juiz-last-tweet-widget/\n\n**Loklak Integration Details:** \n\n- Loklak API has been integrated.\n- **Tested (Y/N):** Partially\n- **Blockers:** None\n- **Loklak Search API Source:** Twitter\n\n**Merge Status:** Need to follow up with the developers.\n\n## Dev-buddy Twitter Feed\n**Maintainer:** EjiOsigwe \n\n**Contact:** https://profiles.wordpress.org/ejiosigwe/\n\n**Import Date:** Jul 11th, 2016\n\n**Version:** 4.0.0 (Latest)\n\n**Description:** Multiple tweet feed, timelines, lists etc.\n\n**Tags:** Tweet Feed, Twitter Timeline\n\n**Loklak Repo:** https://github.com/loklak/wp-dev-buddy\n\n**Wordpress Plugin Page:** https://wordpress.org/plugins/devbuddy-twitter-feed/\n\n**Original Plugin Repo (Git/SVN):** https://plugins.svn.wordpress.org/devbuddy-twitter-feed/\n\n**Loklak Integration Details:** \n\n- Loklak API has not been integrated.\n- **Tested (Y/N):** N\n- **Blockers:** Uses Twitter APIs like \"favorites/list\" & \"lists/statuses\" which are not directly implementable in Loklak\n- **Loklak Search API Source:** Twitter\n\n**Merge Status:** None\n"
        },
        {
          "name": "Procfile",
          "type": "blob",
          "size": 0.025390625,
          "content": "web: sh /app/web_boot.sh\n\n"
        },
        {
          "name": "Readme.md",
          "type": "blob",
          "size": 2.685546875,
          "content": "![Heroku](https://heroku-badge.herokuapp.com/?app=loklak-wordpress)\n\n# WordPress 4.5.3-ja + pg4wp2 Heroku ([Original Repository](https://github.com/macminiosx/wordpress-ja-pg4wp2-heroku))\n\n[![Join the chat at https://gitter.im/fossasia/loklak_wp_plugins](https://badges.gitter.im/fossasia/loklak_wp_plugins.svg)](https://gitter.im/fossasia/loklak_wp_plugins?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThis is a Wordpress site repo which can be deployed on Heroku to test the plugins with Loklak support. \n\nhttps://loklak-wordpress.herokuapp.com is a sample Wordpress installation with all plugins present in `wp-content/plugins`\n\n## Installation\n\n###Deploy from Github directly:\n\n1. Click on 'Deploy to Heroku' to install a wordpress instance on Heroku.\n  \n  <p align=\"center\">\n    <a href=\"https://heroku.com/deploy?template=https://github.com/macminiosx/wordpress-ja-pg4wp2-heroku/tree/master\">\n      <img src=\"https://www.herokucdn.com/deploy/button.png\" alt=\"Deploy\">\n    </a>\n  </p>\n\n2. Give your website a name and input your time-zone and add authentication information for .htpasswd to access wp-admin page (admin privileges). See the screenshot below. \n\n  <p align=\"center\">\n    <img src =\"./docs/screenshots/ss-1.png\" alt=\"Time-zone and Auth\">\n  </p>\n\n\n3. Click on Deploy for Free. Once the app is deployed, Click on ‘Manage App’. Go to ‘Deploy’ tab and choose ‘Deployment method’ as Github\n\n4. Connect your forked loklak_wordpress_plugins repo to Heroku. \n\n  <p align=\"center\">\n    <img src =\"./docs/screenshots/ss-2.png\" alt=\"Connect repo\">\n  </p>\n\n5. To automate the deployment process when the github repo is updated, enable automatic deploys. Now deploy the master branch of your repo and you are good to go.\n\n  <p align=\"center\">\n    <img src =\"./docs/screenshots/ss-3.png\" alt=\"Automate Deployment\">\n  </p>\n\n### Clone github repository and deploy using Wordpress-Heroku toolbelt\nTo deploy using Heroku toolbelt, please refer to [Heroku-toolbelt installation doc](./docs/INSTALLATION_heroku_toolbelt.md)\n\nFor detailed information, refer to [this](http://blog.loklak.net/using-heroku-wordpress-buildpack-to-test-loklak-integration-in-wordpress-plugins/) blog. \n\n## Usage\n\nBecause a file cannot be written to Heroku's file system, updating and installing plugins or themes should be done locally and then pushed to Heroku.\n\n## Updating\n\nRefer to [Wordpress updation doc](./docs/UPDATE_wordpress.md)\n\n## Deployment optimisation\n\nIf you have files that you want tracked in your repo, but do not need deploying (for example, *.md, *.pdf, *.zip). Then add path or linux file match to the `.slugignore` file & these will not be deployed.\n\nExamples:\n```\npath/to/ignore/\nbin/\n*.md\n*.pdf\n*.zip\n```\n\n"
        },
        {
          "name": "app.json",
          "type": "blob",
          "size": 2.0322265625,
          "content": "{\n    \"name\": \"wordpress-ja-pg4wp2-heroku\",\n    \"description\": \"WordPress-4.5.3-ja pg4wp2 PostgreSQL on Heroku\",\n    \"keywords\": [\n        \"Blog\",\n        \"PHP\",\n        \"WordPress\",\n        \"PostgreSQL\"\n    ],\n    \"website\": \"https://github.com/macminiosx/wordpress-ja-pg4wp2-heroku\",\n    \"repository\": \"https://github.com/macminiosx/wordpress-ja-pg4wp2-heroku\",\n    \"success_url\": \"/\",\n    \"env\": {\n        \"AUTH_KEY\": {\n            \"description\": \"Authentication secret key\",\n            \"generator\": \"secret\"\n        },\n        \"SECURE_AUTH_KEY\": {\n            \"description\": \"Authentication secret key\",\n            \"generator\": \"secret\"\n        },\n        \"LOGGED_IN_KEY\": {\n            \"description\": \"Authentication secret key\",\n            \"generator\": \"secret\"\n        },\n        \"NONCE_KEY\": {\n            \"description\": \"Authentication secret key\",\n            \"generator\": \"secret\"\n        },\n        \"AUTH_SALT\": {\n            \"description\": \"Authentication secret salt\",\n            \"generator\": \"secret\"\n        },\n        \"SECURE_AUTH_SALT\": {\n            \"description\": \"Authentication secret salt\",\n            \"generator\": \"secret\"\n        },\n        \"LOGGED_IN_SALT\": {\n            \"description\": \"Authentication secret salt\",\n            \"generator\": \"secret\"\n        },\n        \"NONCE_SALT\": {\n            \"description\": \"Authentication secret salt\",\n            \"generator\": \"secret\"\n        },\n        \"AWS_ACCESS_KEY_ID\": {\n            \"description\": \"The Amazon Access Key.\",\n            \"required\": false,\n            \"value\": \"\"\n        },\n        \"AWS_SECRET_ACCESS_KEY\": {\n            \"description\": \"The Amazon Secret Access Key.\",\n            \"required\": false,\n            \"value\": \"\"\n        },\n        \"TZ\": {\n            \"description\": \"Your Time Zone.\",\n            \"required\": false,\n            \"value\": \"Asia/Tokyo\"\n        },\n        \"ADMINAUTH\": {\n            \"description\": \"Login Basic authentication(ex. USERNAME:CRYPT PASSWORD).\",\n            \"value\": \"\"\n        }\n    },\n    \"addons\": [\n        \"heroku-postgresql:hobby-dev\"\n    ]\n}\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.0625,
          "content": "{\n  \"require\": {\n   \"ext-mbstring\": \"*\",\n   \"php\": \"^7.0\"\n  }\n}\n"
        },
        {
          "name": "composer.lock",
          "type": "blob",
          "size": 0.62890625,
          "content": "{\n    \"_readme\": [\n        \"This file locks the dependencies of your project to a known state\",\n        \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file\",\n        \"This file is @generated automatically\"\n    ],\n    \"hash\": \"911cfb08723a914c71a7ef3eaa059f3a\",\n    \"content-hash\": \"d746cd64df85d06b25c0fa434556463b\",\n    \"packages\": [],\n    \"packages-dev\": [],\n    \"aliases\": [],\n    \"minimum-stability\": \"stable\",\n    \"stability-flags\": [],\n    \"prefer-stable\": false,\n    \"prefer-lowest\": false,\n    \"platform\": {\n        \"ext-mbstring\": \"*\",\n        \"php\": \"^7.0\"\n    },\n    \"platform-dev\": []\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 0.408203125,
          "content": "<?php\n/**\n * Front to the WordPress application. This file doesn't do anything, but loads\n * wp-blog-header.php which does and tells WordPress to load the theme.\n *\n * @package WordPress\n */\n\n/**\n * Tells WordPress to load the WordPress theme and output it.\n *\n * @var bool\n */\ndefine('WP_USE_THEMES', true);\n\n/** Loads the WordPress Environment and Template */\nrequire( dirname( __FILE__ ) . '/wp-blog-header.php' );\n"
        },
        {
          "name": "license.txt",
          "type": "blob",
          "size": 19.4677734375,
          "content": "WordPress - Web publishing software\r\n\r\nCopyright 2011-2016 by the contributors\r\n\r\nThis program is free software; you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation; either version 2 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program; if not, write to the Free Software\r\nFoundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\r\n\r\nThis program incorporates work covered by the following copyright and\r\npermission notices:\r\n\r\n  b2 is (c) 2001, 2002 Michel Valdrighi - m@tidakada.com -\r\n  http://tidakada.com\r\n\r\n  Wherever third party code has been used, credit has been given in the code's\r\n  comments.\r\n\r\n  b2 is released under the GPL\r\n\r\nand\r\n\r\n  WordPress - Web publishing software\r\n\r\n  Copyright 2003-2010 by the contributors\r\n\r\n  WordPress is released under the GPL\r\n\r\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\n\r\n                    GNU GENERAL PUBLIC LICENSE\r\n                       Version 2, June 1991\r\n\r\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\r\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\r\n Everyone is permitted to copy and distribute verbatim copies\r\n of this license document, but changing it is not allowed.\r\n\r\n                            Preamble\r\n\r\n  The licenses for most software are designed to take away your\r\nfreedom to share and change it.  By contrast, the GNU General Public\r\nLicense is intended to guarantee your freedom to share and change free\r\nsoftware--to make sure the software is free for all its users.  This\r\nGeneral Public License applies to most of the Free Software\r\nFoundation's software and to any other program whose authors commit to\r\nusing it.  (Some other Free Software Foundation software is covered by\r\nthe GNU Lesser General Public License instead.)  You can apply it to\r\nyour programs, too.\r\n\r\n  When we speak of free software, we are referring to freedom, not\r\nprice.  Our General Public Licenses are designed to make sure that you\r\nhave the freedom to distribute copies of free software (and charge for\r\nthis service if you wish), that you receive source code or can get it\r\nif you want it, that you can change the software or use pieces of it\r\nin new free programs; and that you know you can do these things.\r\n\r\n  To protect your rights, we need to make restrictions that forbid\r\nanyone to deny you these rights or to ask you to surrender the rights.\r\nThese restrictions translate to certain responsibilities for you if you\r\ndistribute copies of the software, or if you modify it.\r\n\r\n  For example, if you distribute copies of such a program, whether\r\ngratis or for a fee, you must give the recipients all the rights that\r\nyou have.  You must make sure that they, too, receive or can get the\r\nsource code.  And you must show them these terms so they know their\r\nrights.\r\n\r\n  We protect your rights with two steps: (1) copyright the software, and\r\n(2) offer you this license which gives you legal permission to copy,\r\ndistribute and/or modify the software.\r\n\r\n  Also, for each author's protection and ours, we want to make certain\r\nthat everyone understands that there is no warranty for this free\r\nsoftware.  If the software is modified by someone else and passed on, we\r\nwant its recipients to know that what they have is not the original, so\r\nthat any problems introduced by others will not reflect on the original\r\nauthors' reputations.\r\n\r\n  Finally, any free program is threatened constantly by software\r\npatents.  We wish to avoid the danger that redistributors of a free\r\nprogram will individually obtain patent licenses, in effect making the\r\nprogram proprietary.  To prevent this, we have made it clear that any\r\npatent must be licensed for everyone's free use or not licensed at all.\r\n\r\n  The precise terms and conditions for copying, distribution and\r\nmodification follow.\r\n\r\n                    GNU GENERAL PUBLIC LICENSE\r\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\r\n\r\n  0. This License applies to any program or other work which contains\r\na notice placed by the copyright holder saying it may be distributed\r\nunder the terms of this General Public License.  The \"Program\", below,\r\nrefers to any such program or work, and a \"work based on the Program\"\r\nmeans either the Program or any derivative work under copyright law:\r\nthat is to say, a work containing the Program or a portion of it,\r\neither verbatim or with modifications and/or translated into another\r\nlanguage.  (Hereinafter, translation is included without limitation in\r\nthe term \"modification\".)  Each licensee is addressed as \"you\".\r\n\r\nActivities other than copying, distribution and modification are not\r\ncovered by this License; they are outside its scope.  The act of\r\nrunning the Program is not restricted, and the output from the Program\r\nis covered only if its contents constitute a work based on the\r\nProgram (independent of having been made by running the Program).\r\nWhether that is true depends on what the Program does.\r\n\r\n  1. You may copy and distribute verbatim copies of the Program's\r\nsource code as you receive it, in any medium, provided that you\r\nconspicuously and appropriately publish on each copy an appropriate\r\ncopyright notice and disclaimer of warranty; keep intact all the\r\nnotices that refer to this License and to the absence of any warranty;\r\nand give any other recipients of the Program a copy of this License\r\nalong with the Program.\r\n\r\nYou may charge a fee for the physical act of transferring a copy, and\r\nyou may at your option offer warranty protection in exchange for a fee.\r\n\r\n  2. You may modify your copy or copies of the Program or any portion\r\nof it, thus forming a work based on the Program, and copy and\r\ndistribute such modifications or work under the terms of Section 1\r\nabove, provided that you also meet all of these conditions:\r\n\r\n    a) You must cause the modified files to carry prominent notices\r\n    stating that you changed the files and the date of any change.\r\n\r\n    b) You must cause any work that you distribute or publish, that in\r\n    whole or in part contains or is derived from the Program or any\r\n    part thereof, to be licensed as a whole at no charge to all third\r\n    parties under the terms of this License.\r\n\r\n    c) If the modified program normally reads commands interactively\r\n    when run, you must cause it, when started running for such\r\n    interactive use in the most ordinary way, to print or display an\r\n    announcement including an appropriate copyright notice and a\r\n    notice that there is no warranty (or else, saying that you provide\r\n    a warranty) and that users may redistribute the program under\r\n    these conditions, and telling the user how to view a copy of this\r\n    License.  (Exception: if the Program itself is interactive but\r\n    does not normally print such an announcement, your work based on\r\n    the Program is not required to print an announcement.)\r\n\r\nThese requirements apply to the modified work as a whole.  If\r\nidentifiable sections of that work are not derived from the Program,\r\nand can be reasonably considered independent and separate works in\r\nthemselves, then this License, and its terms, do not apply to those\r\nsections when you distribute them as separate works.  But when you\r\ndistribute the same sections as part of a whole which is a work based\r\non the Program, the distribution of the whole must be on the terms of\r\nthis License, whose permissions for other licensees extend to the\r\nentire whole, and thus to each and every part regardless of who wrote it.\r\n\r\nThus, it is not the intent of this section to claim rights or contest\r\nyour rights to work written entirely by you; rather, the intent is to\r\nexercise the right to control the distribution of derivative or\r\ncollective works based on the Program.\r\n\r\nIn addition, mere aggregation of another work not based on the Program\r\nwith the Program (or with a work based on the Program) on a volume of\r\na storage or distribution medium does not bring the other work under\r\nthe scope of this License.\r\n\r\n  3. You may copy and distribute the Program (or a work based on it,\r\nunder Section 2) in object code or executable form under the terms of\r\nSections 1 and 2 above provided that you also do one of the following:\r\n\r\n    a) Accompany it with the complete corresponding machine-readable\r\n    source code, which must be distributed under the terms of Sections\r\n    1 and 2 above on a medium customarily used for software interchange; or,\r\n\r\n    b) Accompany it with a written offer, valid for at least three\r\n    years, to give any third party, for a charge no more than your\r\n    cost of physically performing source distribution, a complete\r\n    machine-readable copy of the corresponding source code, to be\r\n    distributed under the terms of Sections 1 and 2 above on a medium\r\n    customarily used for software interchange; or,\r\n\r\n    c) Accompany it with the information you received as to the offer\r\n    to distribute corresponding source code.  (This alternative is\r\n    allowed only for noncommercial distribution and only if you\r\n    received the program in object code or executable form with such\r\n    an offer, in accord with Subsection b above.)\r\n\r\nThe source code for a work means the preferred form of the work for\r\nmaking modifications to it.  For an executable work, complete source\r\ncode means all the source code for all modules it contains, plus any\r\nassociated interface definition files, plus the scripts used to\r\ncontrol compilation and installation of the executable.  However, as a\r\nspecial exception, the source code distributed need not include\r\nanything that is normally distributed (in either source or binary\r\nform) with the major components (compiler, kernel, and so on) of the\r\noperating system on which the executable runs, unless that component\r\nitself accompanies the executable.\r\n\r\nIf distribution of executable or object code is made by offering\r\naccess to copy from a designated place, then offering equivalent\r\naccess to copy the source code from the same place counts as\r\ndistribution of the source code, even though third parties are not\r\ncompelled to copy the source along with the object code.\r\n\r\n  4. You may not copy, modify, sublicense, or distribute the Program\r\nexcept as expressly provided under this License.  Any attempt\r\notherwise to copy, modify, sublicense or distribute the Program is\r\nvoid, and will automatically terminate your rights under this License.\r\nHowever, parties who have received copies, or rights, from you under\r\nthis License will not have their licenses terminated so long as such\r\nparties remain in full compliance.\r\n\r\n  5. You are not required to accept this License, since you have not\r\nsigned it.  However, nothing else grants you permission to modify or\r\ndistribute the Program or its derivative works.  These actions are\r\nprohibited by law if you do not accept this License.  Therefore, by\r\nmodifying or distributing the Program (or any work based on the\r\nProgram), you indicate your acceptance of this License to do so, and\r\nall its terms and conditions for copying, distributing or modifying\r\nthe Program or works based on it.\r\n\r\n  6. Each time you redistribute the Program (or any work based on the\r\nProgram), the recipient automatically receives a license from the\r\noriginal licensor to copy, distribute or modify the Program subject to\r\nthese terms and conditions.  You may not impose any further\r\nrestrictions on the recipients' exercise of the rights granted herein.\r\nYou are not responsible for enforcing compliance by third parties to\r\nthis License.\r\n\r\n  7. If, as a consequence of a court judgment or allegation of patent\r\ninfringement or for any other reason (not limited to patent issues),\r\nconditions are imposed on you (whether by court order, agreement or\r\notherwise) that contradict the conditions of this License, they do not\r\nexcuse you from the conditions of this License.  If you cannot\r\ndistribute so as to satisfy simultaneously your obligations under this\r\nLicense and any other pertinent obligations, then as a consequence you\r\nmay not distribute the Program at all.  For example, if a patent\r\nlicense would not permit royalty-free redistribution of the Program by\r\nall those who receive copies directly or indirectly through you, then\r\nthe only way you could satisfy both it and this License would be to\r\nrefrain entirely from distribution of the Program.\r\n\r\nIf any portion of this section is held invalid or unenforceable under\r\nany particular circumstance, the balance of the section is intended to\r\napply and the section as a whole is intended to apply in other\r\ncircumstances.\r\n\r\nIt is not the purpose of this section to induce you to infringe any\r\npatents or other property right claims or to contest validity of any\r\nsuch claims; this section has the sole purpose of protecting the\r\nintegrity of the free software distribution system, which is\r\nimplemented by public license practices.  Many people have made\r\ngenerous contributions to the wide range of software distributed\r\nthrough that system in reliance on consistent application of that\r\nsystem; it is up to the author/donor to decide if he or she is willing\r\nto distribute software through any other system and a licensee cannot\r\nimpose that choice.\r\n\r\nThis section is intended to make thoroughly clear what is believed to\r\nbe a consequence of the rest of this License.\r\n\r\n  8. If the distribution and/or use of the Program is restricted in\r\ncertain countries either by patents or by copyrighted interfaces, the\r\noriginal copyright holder who places the Program under this License\r\nmay add an explicit geographical distribution limitation excluding\r\nthose countries, so that distribution is permitted only in or among\r\ncountries not thus excluded.  In such case, this License incorporates\r\nthe limitation as if written in the body of this License.\r\n\r\n  9. The Free Software Foundation may publish revised and/or new versions\r\nof the General Public License from time to time.  Such new versions will\r\nbe similar in spirit to the present version, but may differ in detail to\r\naddress new problems or concerns.\r\n\r\nEach version is given a distinguishing version number.  If the Program\r\nspecifies a version number of this License which applies to it and \"any\r\nlater version\", you have the option of following the terms and conditions\r\neither of that version or of any later version published by the Free\r\nSoftware Foundation.  If the Program does not specify a version number of\r\nthis License, you may choose any version ever published by the Free Software\r\nFoundation.\r\n\r\n  10. If you wish to incorporate parts of the Program into other free\r\nprograms whose distribution conditions are different, write to the author\r\nto ask for permission.  For software which is copyrighted by the Free\r\nSoftware Foundation, write to the Free Software Foundation; we sometimes\r\nmake exceptions for this.  Our decision will be guided by the two goals\r\nof preserving the free status of all derivatives of our free software and\r\nof promoting the sharing and reuse of software generally.\r\n\r\n                            NO WARRANTY\r\n\r\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\r\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\r\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\r\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\r\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\r\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\r\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\r\nREPAIR OR CORRECTION.\r\n\r\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\r\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\r\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\r\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\r\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\r\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\r\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\r\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\r\nPOSSIBILITY OF SUCH DAMAGES.\r\n\r\n                     END OF TERMS AND CONDITIONS\r\n\r\n            How to Apply These Terms to Your New Programs\r\n\r\n  If you develop a new program, and you want it to be of the greatest\r\npossible use to the public, the best way to achieve this is to make it\r\nfree software which everyone can redistribute and change under these terms.\r\n\r\n  To do so, attach the following notices to the program.  It is safest\r\nto attach them to the start of each source file to most effectively\r\nconvey the exclusion of warranty; and each file should have at least\r\nthe \"copyright\" line and a pointer to where the full notice is found.\r\n\r\n    <one line to give the program's name and a brief idea of what it does.>\r\n    Copyright (C) <year>  <name of author>\r\n\r\n    This program is free software; you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation; either version 2 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License along\r\n    with this program; if not, write to the Free Software Foundation, Inc.,\r\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\r\n\r\nAlso add information on how to contact you by electronic and paper mail.\r\n\r\nIf the program is interactive, make it output a short notice like this\r\nwhen it starts in an interactive mode:\r\n\r\n    Gnomovision version 69, Copyright (C) year name of author\r\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\r\n    This is free software, and you are welcome to redistribute it\r\n    under certain conditions; type `show c' for details.\r\n\r\nThe hypothetical commands `show w' and `show c' should show the appropriate\r\nparts of the General Public License.  Of course, the commands you use may\r\nbe called something other than `show w' and `show c'; they could even be\r\nmouse-clicks or menu items--whatever suits your program.\r\n\r\nYou should also get your employer (if you work as a programmer) or your\r\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\r\nnecessary.  Here is a sample; alter the names:\r\n\r\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\r\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\r\n\r\n  <signature of Ty Coon>, 1 April 1989\r\n  Ty Coon, President of Vice\r\n\r\nThis General Public License does not permit incorporating your program into\r\nproprietary programs.  If your program is a subroutine library, you may\r\nconsider it more useful to permit linking proprietary applications with the\r\nlibrary.  If this is what you want to do, use the GNU Lesser General\r\nPublic License instead of this License.\r\n\r\nWRITTEN OFFER\r\n\r\nThe source code for any program binaries or compressed scripts that are\r\nincluded with WordPress can be freely obtained at the following URL:\r\n\r\n\thttps://wordpress.org/download/source/\r\n"
        },
        {
          "name": "readme.html",
          "type": "blob",
          "size": 9.974609375,
          "content": "<!DOCTYPE html>\n<html>\n<head>\n\t<meta name=\"viewport\" content=\"width=device-width\" />\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\t<title>WordPress &#8250; お読みください</title>\n\t<link rel=\"stylesheet\" href=\"wp-admin/css/install.css?ver=20100228\" type=\"text/css\" />\n</head>\n<body>\n<h1 id=\"logo\">\n\t<a href=\"https://wordpress.org/\"><img alt=\"WordPress\" src=\"wp-admin/images/wordpress-logo.png\" /></a>\n\t<br /> Version 4.5.3\n</h1>\n<p style=\"text-align: center\">セマンティックな個人情報発信プラットフォーム</p>\n\n<h1>はじめに</h1>\n<p>ようこそ。WordPress は私にとってとても特別なプロジェクトです。各開発者や貢献者が独自なものをそこに加え、みんなで一緒に美しいものを作り上げています。私はその一翼を担っていることを誇りに思います。たいへん多くの時間をかけて、WordPress をよりよいものにしようと私たちは日々力を注いでいます。WordPress を選んでいただきありがとうございます。</p>\n<p style=\"text-align: right\">&#8212; Matt Mullenweg</p>\n\n<h1>インストール: 5分でインストール</h1>\n<ol>\n\t<li>zip ファイルを空のディレクトリに展開します。そしてすべてのファイルをアップロードしてください。</li>\n\t<li><span class=\"file\"><a href=\"wp-admin/install.php\">wp-admin/install.php</a></span> をブラウザーで開きます。これによりデータベース接続のための<code>wp-config.php</code> の設定を行います。\n\t\t<ol>\n\t\t\t<li>何らかの理由でこれがうまくいかなくても、心配しないでください。すべてのウェブホストでうまくいくわけではないのです。テキストエディター (訳注: 日本語版の場合、UTF-8 BOMなし (または UTF-8N) で保存できるエディターを用いてください。Windows の『メモ帳』は用いないでください) で <code>wp-config-sample.php</code> を開き、データベースの接続情報を記入してください。</li>\n\t\t\t<li>このファイルの名前を <code>wp-config.php</code> として保存し、アップロードしてください。</li>\n\t\t\t<li><span class=\"file\"><a href=\"wp-admin/install.php\">wp-admin/install.php</a></span> をブラウザーで開いてください。</li>\n\t\t</ol>\n\t</li>\n\t<li>いったん設定ファイルを設置すると、あなたのブログに必要なデータベースのテーブルが設置されるはずです。もしエラーが発生するようなら <code>wp-config.php</code> ファイルをもう一度確認し、再度このインストーラーを試してください。それでも失敗する場合は、できるだけ多くのデータを集めて<a href=\"https://wordpress.org/support/\">サポートフォーラム (英語)</a> (<a href=\"http://ja.forums.wordpress.org/\">WP 日本語フォーラム</a>) に行ってください。</li>\n\t<li><strong>パスワードを入力しなかった場合、パスワードは自動生成されますので、これをメモしてください。</strong>ユーザー名を入力しなかった場合、ユーザー名は <code>admin</code> になります。</li>\n\t<li>その後、このインストーラはあなたを<a href=\"wp-login.php\">ログインページ</a>に案内するはずです。前に選んだユーザー名とパスワードでログインしてください。自動生成のパスワードを使った場合、管理画面の「プロフィール」をクリックしてパスワードを変更することができます。</li>\n</ol>\n\n<h1>更新</h1>\n<h2>自動更新機能の利用</h2>\n<p>バージョン 2.7 以上をお使いなら、自動更新機能が使えます。</p>\n<ol>\n\t<li><span class=\"file\"><a href=\"wp-admin/update-core.php\">wp-admin/update-core.php</a></span> をブラウザーで開き、指示に従います。</li>\n\t<li>もっと何かしたかったですか ? これだけです !</li>\n</ol>\n\n<h2>手動更新</h2>\n<ol>\n\t<li>更新前に、<code>index.php</code> など変更した可能性のあるすべてのファイルのバックアップコピーを必ずとってください。</li>\n\t<li>変更したファイルを保存し、古い WordPress のファイルを削除します。</li>\n\t<li>新しいファイルをアップロードします。</li>\n\t<li>ブラウザーで <span class=\"file\"><a href=\"wp-admin/upgrade.php\">/wp-admin/upgrade.php</a></span> にアクセスします。</li>\n</ol>\n\n<h1>他のシステムからの移行</h1>\n<p>WordPress は <a href=\"https://codex.wordpress.org/Importing_Content\">多くのブログシステムからインポート (英語)</a> (<a href=\"http://wpdocs.sourceforge.jp/Importing_Content\" title=\"Importing_Content - WordPress Codex 日本語版\">日本語</a>)することができます。まずは上記のように WordPress をインストールして動作させてください。その後に、<a href=\"wp-admin/import.php\" title=\"Import to WordPress\">インポートツール</a>を使ってください。</p>\n\n<h1>動作環境</h1>\n<ul>\n\t<li><a href=\"http://php.net/\">PHP</a> バージョン <strong>5.2.4</strong> 以上</li>\n\t<li><a href=\"http://www.mysql.com/\">MySQL</a> バージョン <strong>5.0</strong> 以上</li>\n</ul>\n\n<h2>推奨環境</h2>\n<ul>\n\t<li><a href=\"http://php.net/\">PHP</a> バージョン <strong>5.6</strong> 以上</li>\n\t<li><a href=\"http://www.mysql.com/\">MySQL</a> バージョン <strong>5.6</strong> 以上</li>\n\t<li>Apache の <a href=\"http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html\">mod_rewrite</a> モジュール</li>\n\t<li>あなたのサイトに <a href=\"https://wordpress.org/\">https://wordpress.org</a> へのリンクを。</li>\n</ul>\n\n<h1>オンラインの資料</h1>\n<p>もしこの文書にあなたの疑問への答が見つからなかったら、ぜひ WordPress の豊富なオンライン資料を利用してください。</p>\n<dl>\n\t<dt><a href=\"https://codex.wordpress.org/\">The WordPress Codex (英語)</a> (<a href=\"http://wpdocs.sourceforge.jp/\">WordPress Codex 日本語版</a>)</dt>\n\t\t<dd>Codex は WordPress のすべてについての百科事典です。WordPress に関する最も総合的な情報源です。</dd>\n\t<dt><a href=\"https://wordpress.org/news/\">開発ブログ (英語)</a> (<a href=\"http://ja.wordpress.org/\" title=\"WordPress | 日本語\">日本語訳</a>)</dt>\n\t\t<dd>ここでは WordPress に関する最新のアップデートやニュースを知ることができます。最新の WordPress 開発ニュースは、デフォルトで管理ダッシュボードに表示されます。</dd>\n\t<dt><a href=\"https://planet.wordpress.org/\">WordPress Planet (英語)</a></dt>\n\t\t<dd>WordPress Planet はウェブ中の WordPress からの投稿を集めたニュースアグリゲーターです。</dd>\n\t<dt><a href=\"https://wordpress.org/support/\">WordPress サポートフォーラム (英語)</a> (<a href=\"http://ja.forums.wordpress.org/\">WP 日本語フォーラム</a>)</dt>\n\t\t<dd>隅々まで探しまわってもなお答が見つからない場合、とても活発で大きなコミュニティを持つサポートフォーラムが役に立つでしょう。助けてもらうコツは、分かりやすいスレッドタイトルをつけて、質問の内容をなるべく詳しく書くようにすることです。</dd>\n\t<dt><a href=\"https://codex.wordpress.org/IRC\">WordPress <abbr title=\"Internet Relay Chat\">IRC</abbr> チャンネル (英語)</a></dt>\n\t\t<dd>WordPress を使っている人たちの話し合いに使用されているオンラインのチャットチャンネルがあり、時おりここでサポートに関する話題も扱っています。上記 wiki ページで案内されています。(<a href=\"irc://irc.freenode.net/wordpress\">irc.freenode.net #wordpress</a>)</dd>\n</dl>\n\n<h1>おわりに</h1>\n<ul>\n\t<li>提案、アイディア、コメントをお持ちだったり、あるいはバグ (うわっ !) を見つけたら、<a href=\"https://wordpress.org/support/\">サポートフォーラム (英語)</a> (<a href=\"http://ja.forums.wordpress.org/\">WP 日本語フォーラム</a>) に参加してみませんか ?</li>\n\t<li>WordPress はコードを簡単に拡張するための堅牢なプラグイン <abbr title=\"application programming interface\">API</abbr> を備えています。この利用に興味のある開発者は <a href=\"https://codex.wordpress.org/Plugin_API\">Codex のプラグインドキュメント (英語)</a> (<a href=\"http://wpdocs.sourceforge.jp/%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3_API\" title=\"プラグイン API - WordPress Codex 日本語版\">日本語</a>) を参照してください。 ほとんどの場合、コアコードを変更するべきではありません。</li>\n</ul>\n\n<h1>分かちあい</h1>\n<p>WordPress には数百万ドルのマーケティングキャンペーンもなければ有名なスポンサーもいませんが、それよりもっとすばらしいみなさんがいます。もしあなたが WordPress を楽しんでくれているのなら、友達にそれを伝えてください。自分よりまだ WordPress の知識がない人のためにセットアップの手助けをしてください。あるいは、WordPress を見落としているメディアのライターにメールを送ってください。</p>\n\n<p>WordPress は、Michel V がはじめた <a href=\"http://cafelog.com/\">b2/caf&#233;log</a> を公式に引き継いだブログツールです。作業は <a href=\"https://wordpress.org/about/\">WordPress の開発者たち</a>によって続けられています。WordPress に支援をしていただけるのなら、どうか<a href=\"https://wordpress.org/donate/\">寄付</a>をご検討ください。</p>\n\n<h1>ライセンス</h1>\n<p>WordPress は <abbr title=\"GNU General Public License\">GPL</abbr> バージョン 2 またはそれ以降の (あなたの選択する) 任意のバージョンの条件に基づいてリリースされているフリーソフトウェアです。<a href=\"license.txt\">license.txt</a> を参照してください。</p>\n\n</body>\n</html>\n"
        },
        {
          "name": "web_boot.sh",
          "type": "blob",
          "size": 0.0986328125,
          "content": "if [ ! -e /app/.htpasswd ]; then\n\techo $ADMINAUTH > /app/.htpasswd\nfi\nvendor/bin/heroku-php-apache2\n\n"
        },
        {
          "name": "wp-activate.php",
          "type": "blob",
          "size": 4.9140625,
          "content": "<?php\n/**\n * Confirms that the activation key that is sent in an email after a user signs\n * up for a new site matches the key for that user and then displays confirmation.\n *\n * @package WordPress\n */\n\ndefine( 'WP_INSTALLING', true );\n\n/** Sets up the WordPress Environment. */\nrequire( dirname(__FILE__) . '/wp-load.php' );\n\nrequire( dirname( __FILE__ ) . '/wp-blog-header.php' );\n\nif ( !is_multisite() ) {\n\twp_redirect( wp_registration_url() );\n\tdie();\n}\n\nif ( is_object( $wp_object_cache ) )\n\t$wp_object_cache->cache_enabled = false;\n\n// Fix for page title\n$wp_query->is_404 = false;\n\n/**\n * Fires before the Site Activation page is loaded.\n *\n * @since 3.0.0\n */\ndo_action( 'activate_header' );\n\n/**\n * Adds an action hook specific to this page that fires on wp_head\n *\n * @since MU\n */\nfunction do_activate_header() {\n    /**\n     * Fires before the Site Activation page is loaded, but on the wp_head action.\n     *\n     * @since 3.0.0\n     */\n    do_action( 'activate_wp_head' );\n}\nadd_action( 'wp_head', 'do_activate_header' );\n\n/**\n * Loads styles specific to this page.\n *\n * @since MU\n */\nfunction wpmu_activate_stylesheet() {\n\t?>\n\t<style type=\"text/css\">\n\t\tform { margin-top: 2em; }\n\t\t#submit, #key { width: 90%; font-size: 24px; }\n\t\t#language { margin-top: .5em; }\n\t\t.error { background: #f66; }\n\t\tspan.h3 { padding: 0 8px; font-size: 1.3em; font-weight: bold; }\n\t</style>\n\t<?php\n}\nadd_action( 'wp_head', 'wpmu_activate_stylesheet' );\n\nget_header( 'wp-activate' );\n?>\n\n<div id=\"signup-content\" class=\"widecolumn\">\n\t<div class=\"wp-activate-container\">\n\t<?php if ( empty($_GET['key']) && empty($_POST['key']) ) { ?>\n\n\t\t<h2><?php _e('Activation Key Required') ?></h2>\n\t\t<form name=\"activateform\" id=\"activateform\" method=\"post\" action=\"<?php echo network_site_url('wp-activate.php'); ?>\">\n\t\t\t<p>\n\t\t\t    <label for=\"key\"><?php _e('Activation Key:') ?></label>\n\t\t\t    <br /><input type=\"text\" name=\"key\" id=\"key\" value=\"\" size=\"50\" />\n\t\t\t</p>\n\t\t\t<p class=\"submit\">\n\t\t\t    <input id=\"submit\" type=\"submit\" name=\"Submit\" class=\"submit\" value=\"<?php esc_attr_e('Activate') ?>\" />\n\t\t\t</p>\n\t\t</form>\n\n\t<?php } else {\n\n\t\t$key = !empty($_GET['key']) ? $_GET['key'] : $_POST['key'];\n\t\t$result = wpmu_activate_signup( $key );\n\t\tif ( is_wp_error($result) ) {\n\t\t\tif ( 'already_active' == $result->get_error_code() || 'blog_taken' == $result->get_error_code() ) {\n\t\t\t    $signup = $result->get_error_data();\n\t\t\t\t?>\n\t\t\t\t<h2><?php _e('Your account is now active!'); ?></h2>\n\t\t\t\t<?php\n\t\t\t\techo '<p class=\"lead-in\">';\n\t\t\t\tif ( $signup->domain . $signup->path == '' ) {\n\t\t\t\t\tprintf( __('Your account has been activated. You may now <a href=\"%1$s\">log in</a> to the site using your chosen username of &#8220;%2$s&#8221;. Please check your email inbox at %3$s for your password and login instructions. If you do not receive an email, please check your junk or spam folder. If you still do not receive an email within an hour, you can <a href=\"%4$s\">reset your password</a>.'), network_site_url( 'wp-login.php', 'login' ), $signup->user_login, $signup->user_email, wp_lostpassword_url() );\n\t\t\t\t} else {\n\t\t\t\t\tprintf( __('Your site at <a href=\"%1$s\">%2$s</a> is active. You may now log in to your site using your chosen username of &#8220;%3$s&#8221;. Please check your email inbox at %4$s for your password and login instructions. If you do not receive an email, please check your junk or spam folder. If you still do not receive an email within an hour, you can <a href=\"%5$s\">reset your password</a>.'), 'http://' . $signup->domain, $signup->domain, $signup->user_login, $signup->user_email, wp_lostpassword_url() );\n\t\t\t\t}\n\t\t\t\techo '</p>';\n\t\t\t} else {\n\t\t\t\t?>\n\t\t\t\t<h2><?php _e('An error occurred during the activation'); ?></h2>\n\t\t\t\t<?php\n\t\t\t    echo '<p>'.$result->get_error_message().'</p>';\n\t\t\t}\n\t\t} else {\n\t\t\t$url = isset( $result['blog_id'] ) ? get_blogaddress_by_id( (int) $result['blog_id'] ) : '';\n\t\t\t$user = get_userdata( (int) $result['user_id'] );\n\t\t\t?>\n\t\t\t<h2><?php _e('Your account is now active!'); ?></h2>\n\n\t\t\t<div id=\"signup-welcome\">\n\t\t\t\t<p><span class=\"h3\"><?php _e('Username:'); ?></span> <?php echo $user->user_login ?></p>\n\t\t\t\t<p><span class=\"h3\"><?php _e('Password:'); ?></span> <?php echo $result['password']; ?></p>\n\t\t\t</div>\n\n\t\t\t<?php if ( $url && $url != network_home_url( '', 'http' ) ) :\n\t\t\t\tswitch_to_blog( (int) $result['blog_id'] );\n\t\t\t\t$login_url = wp_login_url();\n\t\t\t\trestore_current_blog();\n\t\t\t\t?>\n\t\t\t\t<p class=\"view\"><?php printf( __( 'Your account is now activated. <a href=\"%1$s\">View your site</a> or <a href=\"%2$s\">Log in</a>' ), $url, esc_url( $login_url ) ); ?></p>\n\t\t\t<?php else: ?>\n\t\t\t\t<p class=\"view\"><?php printf( __('Your account is now activated. <a href=\"%1$s\">Log in</a> or go back to the <a href=\"%2$s\">homepage</a>.' ), network_site_url('wp-login.php', 'login'), network_home_url() ); ?></p>\n\t\t\t<?php endif;\n\t\t}\n\t}\n\t?>\n\t</div>\n</div>\n<script type=\"text/javascript\">\n\tvar key_input = document.getElementById('key');\n\tkey_input && key_input.focus();\n</script>\n<?php get_footer( 'wp-activate' );\n"
        },
        {
          "name": "wp-admin",
          "type": "tree",
          "content": null
        },
        {
          "name": "wp-blog-header.php",
          "type": "blob",
          "size": 0.35546875,
          "content": "<?php\n/**\n * Loads the WordPress environment and template.\n *\n * @package WordPress\n */\n\nif ( !isset($wp_did_header) ) {\n\n\t$wp_did_header = true;\n\n\t// Load the WordPress library.\n\trequire_once( dirname(__FILE__) . '/wp-load.php' );\n\n\t// Set up the WordPress query.\n\twp();\n\n\t// Load the theme template.\n\trequire_once( ABSPATH . WPINC . '/template-loader.php' );\n\n}\n"
        },
        {
          "name": "wp-comments-post.php",
          "type": "blob",
          "size": 1.44140625,
          "content": "<?php\n/**\n * Handles Comment Post to WordPress and prevents duplicate comment posting.\n *\n * @package WordPress\n */\n\nif ( 'POST' != $_SERVER['REQUEST_METHOD'] ) {\n\theader('Allow: POST');\n\theader('HTTP/1.1 405 Method Not Allowed');\n\theader('Content-Type: text/plain');\n\texit;\n}\n\n/** Sets up the WordPress Environment. */\nrequire( dirname(__FILE__) . '/wp-load.php' );\n\nnocache_headers();\n\n$comment = wp_handle_comment_submission( wp_unslash( $_POST ) );\nif ( is_wp_error( $comment ) ) {\n\t$data = intval( $comment->get_error_data() );\n\tif ( ! empty( $data ) ) {\n\t\twp_die( '<p>' . $comment->get_error_message() . '</p>', __( 'Comment Submission Failure' ), array( 'response' => $data, 'back_link' => true ) );\n\t} else {\n\t\texit;\n\t}\n}\n\n$user = wp_get_current_user();\n\n/**\n * Perform other actions when comment cookies are set.\n *\n * @since 3.4.0\n *\n * @param WP_Comment $comment Comment object.\n * @param WP_User    $user    User object. The user may not exist.\n */\ndo_action( 'set_comment_cookies', $comment, $user );\n\n$location = empty( $_POST['redirect_to'] ) ? get_comment_link( $comment ) : $_POST['redirect_to'] . '#comment-' . $comment->comment_ID;\n\n/**\n * Filter the location URI to send the commenter after posting.\n *\n * @since 2.0.5\n *\n * @param string     $location The 'redirect_to' URI sent via $_POST.\n * @param WP_Comment $comment  Comment object.\n */\n$location = apply_filters( 'comment_post_redirect', $location, $comment );\n\nwp_safe_redirect( $location );\nexit;\n"
        },
        {
          "name": "wp-config-sample.php",
          "type": "blob",
          "size": 3.744140625,
          "content": "<?php\r\n/**\r\n * WordPress の基本設定\r\n *\r\n * このファイルは、インストール時に wp-config.php 作成ウィザードが利用します。\r\n * ウィザードを介さずにこのファイルを \"wp-config.php\" という名前でコピーして\r\n * 直接編集して値を入力してもかまいません。\r\n *\r\n * このファイルは、以下の設定を含みます。\r\n *\r\n * * MySQL 設定\r\n * * 秘密鍵\r\n * * データベーステーブル接頭辞\r\n * * ABSPATH\r\n *\r\n * @link http://wpdocs.sourceforge.jp/wp-config.php_%E3%81%AE%E7%B7%A8%E9%9B%86\r\n *\r\n * @package WordPress\r\n */\r\n\r\n// 注意: \r\n// Windows の \"メモ帳\" でこのファイルを編集しないでください !\r\n// 問題なく使えるテキストエディタ\r\n// (http://wpdocs.sourceforge.jp/Codex:%E8%AB%87%E8%A9%B1%E5%AE%A4 参照)\r\n// を使用し、必ず UTF-8 の BOM なし (UTF-8N) で保存してください。\r\n\r\n// ** MySQL 設定 - この情報はホスティング先から入手してください。 ** //\r\n/** WordPress のためのデータベース名 */\r\ndefine('DB_NAME', 'database_name_here');\r\n\r\n/** MySQL データベースのユーザー名 */\r\ndefine('DB_USER', 'username_here');\r\n\r\n/** MySQL データベースのパスワード */\r\ndefine('DB_PASSWORD', 'password_here');\r\n\r\n/** MySQL のホスト名 */\r\ndefine('DB_HOST', 'localhost');\r\n\r\n/** データベースのテーブルを作成する際のデータベースの文字セット */\r\ndefine('DB_CHARSET', 'utf8');\r\n\r\n/** データベースの照合順序 (ほとんどの場合変更する必要はありません) */\r\ndefine('DB_COLLATE', '');\r\n\r\n/**#@+\r\n * 認証用ユニークキー\r\n *\r\n * それぞれを異なるユニーク (一意) な文字列に変更してください。\r\n * {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org の秘密鍵サービス} で自動生成することもできます。\r\n * 後でいつでも変更して、既存のすべての cookie を無効にできます。これにより、すべてのユーザーを強制的に再ログインさせることになります。\r\n *\r\n * @since 2.6.0\r\n */\r\ndefine('AUTH_KEY',         'put your unique phrase here');\r\ndefine('SECURE_AUTH_KEY',  'put your unique phrase here');\r\ndefine('LOGGED_IN_KEY',    'put your unique phrase here');\r\ndefine('NONCE_KEY',        'put your unique phrase here');\r\ndefine('AUTH_SALT',        'put your unique phrase here');\r\ndefine('SECURE_AUTH_SALT', 'put your unique phrase here');\r\ndefine('LOGGED_IN_SALT',   'put your unique phrase here');\r\ndefine('NONCE_SALT',       'put your unique phrase here');\r\n\r\n/**#@-*/\r\n\r\n/**\r\n * WordPress データベーステーブルの接頭辞\r\n *\r\n * それぞれにユニーク (一意) な接頭辞を与えることで一つのデータベースに複数の WordPress を\r\n * インストールすることができます。半角英数字と下線のみを使用してください。\r\n */\r\n$table_prefix  = 'wp_';\r\n\r\n/**\r\n * 開発者へ: WordPress デバッグモード\r\n *\r\n * この値を true にすると、開発中に注意 (notice) を表示します。\r\n * テーマおよびプラグインの開発者には、その開発環境においてこの WP_DEBUG を使用することを強く推奨します。\r\n *\r\n * その他のデバッグに利用できる定数については Codex をご覧ください。\r\n *\r\n * @link http://wpdocs.osdn.jp/WordPress%E3%81%A7%E3%81%AE%E3%83%87%E3%83%90%E3%83%83%E3%82%B0\r\n */\r\ndefine('WP_DEBUG', false);\r\n\r\n/* 編集が必要なのはここまでです ! WordPress でブログをお楽しみください。 */\r\n\r\n/** Absolute path to the WordPress directory. */\r\nif ( !defined('ABSPATH') )\r\n\tdefine('ABSPATH', dirname(__FILE__) . '/');\r\n\r\n/** Sets up WordPress vars and included files. */\r\nrequire_once(ABSPATH . 'wp-settings.php');\r\n"
        },
        {
          "name": "wp-config.php",
          "type": "blob",
          "size": 2.9306640625,
          "content": "<?php\n/**\n * The base configurations of the WordPress.\n *\n * This file has the following configurations: MySQL settings, Table Prefix,\n * Secret Keys, WordPress Language, and ABSPATH. You can find more information\n * by visiting {@link http://codex.wordpress.org/Editing_wp-config.php Editing\n * wp-config.php} Codex page. You can get the MySQL settings from your web host.\n *\n * This file is used by the wp-config.php creation script during the\n * installation. You don't have to use the web site, you can just copy this file\n * to \"wp-config.php\" and fill in the values.\n *\n * @package WordPress\n */\n\n$_SERVER['HTTPS'] = 'on';\n\n// ** Heroku Postgres settings - from Heroku Environment ** //\n$db = parse_url($_ENV[\"DATABASE_URL\"]);\n\n// ** MySQL settings - You can get this info from your web host ** //\n/** The name of the database for WordPress */\ndefine('DB_NAME', trim($db[\"path\"],\"/\"));\n\n/** MySQL database username */\ndefine('DB_USER', $db[\"user\"]);\n\n/** MySQL database password */\ndefine('DB_PASSWORD', $db[\"pass\"]);\n\n/** MySQL hostname */\ndefine('DB_HOST', $db[\"host\"] . ':' . $db[\"port\"]);\n\n/** Database Charset to use in creating database tables. */\ndefine('DB_CHARSET', 'utf8');\n\n/** The Database Collate type. Don't change this if in doubt. */\ndefine('DB_COLLATE', '');\n\n/**#@+\n * Authentication Unique Keys and Salts.\n *\n * Change these to different unique phrases!\n * You can generate these using the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}\n * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.\n *\n * @since 2.6.0\n */\n\ndefine('AUTH_KEY',              getenv('AUTH_KEY'));\ndefine('SECURE_AUTH_KEY',       getenv('SECURE_AUTH_KEY'));\ndefine('LOGGED_IN_KEY',         getenv('LOGGED_IN_KEY'));\ndefine('NONCE_KEY',             getenv('NONCE_KEY'));\ndefine('AUTH_SALT',             getenv('AUTH_SALT'));\ndefine('SECURE_AUTH_SALT',      getenv('SECURE_AUTH_SALT'));\ndefine('LOGGED_IN_SALT',        getenv('LOGGED_IN_SALT'));\ndefine('NONCE_SALT',            getenv('NONCE_SALT'));\ndefine('AWS_ACCESS_KEY_ID',     getenv('AWS_ACCESS_KEY_ID'));\ndefine('AWS_SECRET_ACCESS_KEY', getenv('AWS_SECRET_ACCESS_KEY'));\n\n/**#@-*/\n\n/**\n * WordPress Database Table prefix.\n *\n * You can have multiple installations in one database if you give each a unique\n * prefix. Only numbers, letters, and underscores please!\n */\n$table_prefix  = 'wp_';\n\n/**\n * For developers: WordPress debugging mode.\n *\n * Change this to true to enable the display of notices during development.\n * It is strongly recommended that plugin and theme developers use WP_DEBUG\n * in their development environments.\n */\ndefine('WP_DEBUG', false);\n\n/* That's all, stop editing! Happy blogging. */\n\n/** Absolute path to the WordPress directory. */\nif ( !defined('ABSPATH') )\n\tdefine('ABSPATH', dirname(__FILE__) . '/');\n\n/** Sets up WordPress vars and included files. */\nrequire_once(ABSPATH . 'wp-settings.php');\n"
        },
        {
          "name": "wp-content",
          "type": "tree",
          "content": null
        },
        {
          "name": "wp-cron.php",
          "type": "blob",
          "size": 3.208984375,
          "content": "<?php\n/**\n * WordPress Cron Implementation for hosts, which do not offer CRON or for which\n * the user has not set up a CRON job pointing to this file.\n *\n * The HTTP request to this file will not slow down the visitor who happens to\n * visit when the cron job is needed to run.\n *\n * @package WordPress\n */\n\nignore_user_abort(true);\n\nif ( !empty($_POST) || defined('DOING_AJAX') || defined('DOING_CRON') )\n\tdie();\n\n/**\n * Tell WordPress we are doing the CRON task.\n *\n * @var bool\n */\ndefine('DOING_CRON', true);\n\nif ( !defined('ABSPATH') ) {\n\t/** Set up WordPress environment */\n\trequire_once( dirname( __FILE__ ) . '/wp-load.php' );\n}\n\n/**\n * Retrieves the cron lock.\n *\n * Returns the uncached `doing_cron` transient.\n *\n * @ignore\n * @since 3.3.0\n *\n * @return string|false Value of the `doing_cron` transient, 0|false otherwise.\n */\nfunction _get_cron_lock() {\n\tglobal $wpdb;\n\n\t$value = 0;\n\tif ( wp_using_ext_object_cache() ) {\n\t\t/*\n\t\t * Skip local cache and force re-fetch of doing_cron transient\n\t\t * in case another process updated the cache.\n\t\t */\n\t\t$value = wp_cache_get( 'doing_cron', 'transient', true );\n\t} else {\n\t\t$row = $wpdb->get_row( $wpdb->prepare( \"SELECT option_value FROM $wpdb->options WHERE option_name = %s LIMIT 1\", '_transient_doing_cron' ) );\n\t\tif ( is_object( $row ) )\n\t\t\t$value = $row->option_value;\n\t}\n\n\treturn $value;\n}\n\nif ( false === $crons = _get_cron_array() )\n\tdie();\n\n$keys = array_keys( $crons );\n$gmt_time = microtime( true );\n\nif ( isset($keys[0]) && $keys[0] > $gmt_time )\n\tdie();\n\n\n// The cron lock: a unix timestamp from when the cron was spawned.\n$doing_cron_transient = get_transient( 'doing_cron' );\n\n// Use global $doing_wp_cron lock otherwise use the GET lock. If no lock, trying grabbing a new lock.\nif ( empty( $doing_wp_cron ) ) {\n\tif ( empty( $_GET[ 'doing_wp_cron' ] ) ) {\n\t\t// Called from external script/job. Try setting a lock.\n\t\tif ( $doing_cron_transient && ( $doing_cron_transient + WP_CRON_LOCK_TIMEOUT > $gmt_time ) )\n\t\t\treturn;\n\t\t$doing_cron_transient = $doing_wp_cron = sprintf( '%.22F', microtime( true ) );\n\t\tset_transient( 'doing_cron', $doing_wp_cron );\n\t} else {\n\t\t$doing_wp_cron = $_GET[ 'doing_wp_cron' ];\n\t}\n}\n\n/*\n * The cron lock (a unix timestamp set when the cron was spawned),\n * must match $doing_wp_cron (the \"key\").\n */\nif ( $doing_cron_transient != $doing_wp_cron )\n\treturn;\n\nforeach ( $crons as $timestamp => $cronhooks ) {\n\tif ( $timestamp > $gmt_time )\n\t\tbreak;\n\n\tforeach ( $cronhooks as $hook => $keys ) {\n\n\t\tforeach ( $keys as $k => $v ) {\n\n\t\t\t$schedule = $v['schedule'];\n\n\t\t\tif ( $schedule != false ) {\n\t\t\t\t$new_args = array($timestamp, $schedule, $hook, $v['args']);\n\t\t\t\tcall_user_func_array('wp_reschedule_event', $new_args);\n\t\t\t}\n\n\t\t\twp_unschedule_event( $timestamp, $hook, $v['args'] );\n\n\t\t\t/**\n\t\t\t * Fires scheduled events.\n\t\t\t *\n\t\t\t * @ignore\n\t\t\t * @since 2.1.0\n\t\t\t *\n\t\t\t * @param string $hook Name of the hook that was scheduled to be fired.\n\t\t\t * @param array  $args The arguments to be passed to the hook.\n\t\t\t */\n \t\t\tdo_action_ref_array( $hook, $v['args'] );\n\n\t\t\t// If the hook ran too long and another cron process stole the lock, quit.\n\t\t\tif ( _get_cron_lock() != $doing_wp_cron )\n\t\t\t\treturn;\n\t\t}\n\t}\n}\n\nif ( _get_cron_lock() == $doing_wp_cron )\n\tdelete_transient( 'doing_cron' );\n\ndie();\n"
        },
        {
          "name": "wp-includes",
          "type": "tree",
          "content": null
        },
        {
          "name": "wp-links-opml.php",
          "type": "blob",
          "size": 2.32421875,
          "content": "<?php\n/**\n * Outputs the OPML XML format for getting the links defined in the link\n * administration. This can be used to export links from one blog over to\n * another. Links aren't exported by the WordPress export, so this file handles\n * that.\n *\n * This file is not added by default to WordPress theme pages when outputting\n * feed links. It will have to be added manually for browsers and users to pick\n * up that this file exists.\n *\n * @package WordPress\n */\n\nrequire_once( dirname( __FILE__ ) . '/wp-load.php' );\n\nheader('Content-Type: text/xml; charset=' . get_option('blog_charset'), true);\n$link_cat = '';\nif ( !empty($_GET['link_cat']) ) {\n\t$link_cat = $_GET['link_cat'];\n\tif ( !in_array($link_cat, array('all', '0')) )\n\t\t$link_cat = absint( (string)urldecode($link_cat) );\n}\n\necho '<?xml version=\"1.0\"?'.\">\\n\";\n?>\n<opml version=\"1.0\">\n\t<head>\n\t\t<title><?php printf( __('Links for %s'), esc_attr(get_bloginfo('name', 'display')) ); ?></title>\n\t\t<dateCreated><?php echo gmdate(\"D, d M Y H:i:s\"); ?> GMT</dateCreated>\n\t\t<?php\n\t\t/**\n\t\t * Fires in the OPML header.\n\t\t *\n\t\t * @since 3.0.0\n\t\t */\n\t\tdo_action( 'opml_head' );\n\t\t?>\n\t</head>\n\t<body>\n<?php\nif ( empty($link_cat) )\n\t$cats = get_categories(array('taxonomy' => 'link_category', 'hierarchical' => 0));\nelse\n\t$cats = get_categories(array('taxonomy' => 'link_category', 'hierarchical' => 0, 'include' => $link_cat));\n\nforeach ( (array)$cats as $cat ) :\n\t/**\n\t * Filter the OPML outline link category name.\n\t *\n\t * @since 2.2.0\n\t *\n\t * @param string $catname The OPML outline category name.\n\t */\n\t$catname = apply_filters( 'link_category', $cat->name );\n\n?>\n<outline type=\"category\" title=\"<?php echo esc_attr($catname); ?>\">\n<?php\n\t$bookmarks = get_bookmarks(array(\"category\" => $cat->term_id));\n\tforeach ( (array)$bookmarks as $bookmark ) :\n\t\t/**\n\t\t * Filter the OPML outline link title text.\n\t\t *\n\t\t * @since 2.2.0\n\t\t *\n\t\t * @param string $title The OPML outline title text.\n\t\t */\n\t\t$title = apply_filters( 'link_title', $bookmark->link_name );\n?>\n\t<outline text=\"<?php echo esc_attr($title); ?>\" type=\"link\" xmlUrl=\"<?php echo esc_attr($bookmark->link_rss); ?>\" htmlUrl=\"<?php echo esc_attr($bookmark->link_url); ?>\" updated=\"<?php if ('0000-00-00 00:00:00' != $bookmark->link_updated) echo $bookmark->link_updated; ?>\" />\n<?php\n\tendforeach; // $bookmarks\n?>\n</outline>\n<?php\nendforeach; // $cats\n?>\n</body>\n</opml>\n"
        },
        {
          "name": "wp-load.php",
          "type": "blob",
          "size": 3.23828125,
          "content": "<?php\n/**\n * Bootstrap file for setting the ABSPATH constant\n * and loading the wp-config.php file. The wp-config.php\n * file will then load the wp-settings.php file, which\n * will then set up the WordPress environment.\n *\n * If the wp-config.php file is not found then an error\n * will be displayed asking the visitor to set up the\n * wp-config.php file.\n *\n * Will also search for wp-config.php in WordPress' parent\n * directory to allow the WordPress directory to remain\n * untouched.\n *\n * @internal This file must be parsable by PHP4.\n *\n * @package WordPress\n */\n\n/** Define ABSPATH as this file's directory */\ndefine( 'ABSPATH', dirname(__FILE__) . '/' );\n\nerror_reporting( E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_ERROR | E_WARNING | E_PARSE | E_USER_ERROR | E_USER_WARNING | E_RECOVERABLE_ERROR );\n\n/*\n * If wp-config.php exists in the WordPress root, or if it exists in the root and wp-settings.php\n * doesn't, load wp-config.php. The secondary check for wp-settings.php has the added benefit\n * of avoiding cases where the current directory is a nested installation, e.g. / is WordPress(a)\n * and /blog/ is WordPress(b).\n *\n * If neither set of conditions is true, initiate loading the setup process.\n */\nif ( file_exists( ABSPATH . 'wp-config.php') ) {\n\n\t/** The config file resides in ABSPATH */\n\trequire_once( ABSPATH . 'wp-config.php' );\n\n} elseif ( @file_exists( dirname( ABSPATH ) . '/wp-config.php' ) && ! @file_exists( dirname( ABSPATH ) . '/wp-settings.php' ) ) {\n\n\t/** The config file resides one level above ABSPATH but is not part of another install */\n\trequire_once( dirname( ABSPATH ) . '/wp-config.php' );\n\n} else {\n\n\t// A config file doesn't exist\n\n\tdefine( 'WPINC', 'wp-includes' );\n\trequire_once( ABSPATH . WPINC . '/load.php' );\n\n\t// Standardize $_SERVER variables across setups.\n\twp_fix_server_vars();\n\n\trequire_once( ABSPATH . WPINC . '/functions.php' );\n\n\t$path = wp_guess_url() . '/wp-admin/setup-config.php';\n\n\t/*\n\t * We're going to redirect to setup-config.php. While this shouldn't result\n\t * in an infinite loop, that's a silly thing to assume, don't you think? If\n\t * we're traveling in circles, our last-ditch effort is \"Need more help?\"\n\t */\n\tif ( false === strpos( $_SERVER['REQUEST_URI'], 'setup-config' ) ) {\n\t\theader( 'Location: ' . $path );\n\t\texit;\n\t}\n\n\tdefine( 'WP_CONTENT_DIR', ABSPATH . 'wp-content' );\n\trequire_once( ABSPATH . WPINC . '/version.php' );\n\n\twp_check_php_mysql_versions();\n\twp_load_translations_early();\n\n\t// Die with an error message\n\t$die  = sprintf(\n\t\t/* translators: %s: wp-config.php */\n\t\t__( \"There doesn't seem to be a %s file. I need this before we can get started.\" ),\n\t\t'<code>wp-config.php</code>'\n\t) . '</p>';\n\t$die .= '<p>' . sprintf(\n\t\t/* translators: %s: Codex URL */\n\t\t__( \"Need more help? <a href='%s'>We got it</a>.\" ),\n\t\t__( 'https://codex.wordpress.org/Editing_wp-config.php' )\n\t) . '</p>';\n\t$die .= '<p>' . sprintf(\n\t\t/* translators: %s: wp-config.php */\n\t\t__( \"You can create a %s file through a web interface, but this doesn't work for all server setups. The safest way is to manually create the file.\" ),\n\t\t'<code>wp-config.php</code>'\n\t) . '</p>';\n\t$die .= '<p><a href=\"' . $path . '\" class=\"button button-large\">' . __( \"Create a Configuration File\" ) . '</a>';\n\n\twp_die( $die, __( 'WordPress &rsaquo; Error' ) );\n}\n"
        },
        {
          "name": "wp-login.php",
          "type": "blob",
          "size": 33.0439453125,
          "content": "<?php\n/**\n * WordPress User Page\n *\n * Handles authentication, registering, resetting passwords, forgot password,\n * and other user handling.\n *\n * @package WordPress\n */\n\n/** Make sure that the WordPress bootstrap has run before continuing. */\nrequire( dirname(__FILE__) . '/wp-load.php' );\n\n// Redirect to https login if forced to use SSL\nif ( force_ssl_admin() && ! is_ssl() ) {\n\tif ( 0 === strpos($_SERVER['REQUEST_URI'], 'http') ) {\n\t\twp_redirect( set_url_scheme( $_SERVER['REQUEST_URI'], 'https' ) );\n\t\texit();\n\t} else {\n\t\twp_redirect( 'https://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'] );\n\t\texit();\n\t}\n}\n\n/**\n * Output the login page header.\n *\n * @param string   $title    Optional. WordPress login Page title to display in the `<title>` element.\n *                           Default 'Log In'.\n * @param string   $message  Optional. Message to display in header. Default empty.\n * @param WP_Error $wp_error Optional. The error to pass. Default empty.\n */\nfunction login_header( $title = 'Log In', $message = '', $wp_error = '' ) {\n\tglobal $error, $interim_login, $action;\n\n\t// Don't index any of these forms\n\tadd_action( 'login_head', 'wp_no_robots' );\n\n\tif ( wp_is_mobile() )\n\t\tadd_action( 'login_head', 'wp_login_viewport_meta' );\n\n\tif ( empty($wp_error) )\n\t\t$wp_error = new WP_Error();\n\n\t// Shake it!\n\t$shake_error_codes = array( 'empty_password', 'empty_email', 'invalid_email', 'invalidcombo', 'empty_username', 'invalid_username', 'incorrect_password' );\n\t/**\n\t * Filter the error codes array for shaking the login form.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param array $shake_error_codes Error codes that shake the login form.\n\t */\n\t$shake_error_codes = apply_filters( 'shake_error_codes', $shake_error_codes );\n\n\tif ( $shake_error_codes && $wp_error->get_error_code() && in_array( $wp_error->get_error_code(), $shake_error_codes ) )\n\t\tadd_action( 'login_head', 'wp_shake_js', 12 );\n\n\t$separator = is_rtl() ? ' &rsaquo; ' : ' &lsaquo; ';\n\n\t?><!DOCTYPE html>\n\t<!--[if IE 8]>\n\t\t<html xmlns=\"http://www.w3.org/1999/xhtml\" class=\"ie8\" <?php language_attributes(); ?>>\n\t<![endif]-->\n\t<!--[if !(IE 8) ]><!-->\n\t\t<html xmlns=\"http://www.w3.org/1999/xhtml\" <?php language_attributes(); ?>>\n\t<!--<![endif]-->\n\t<head>\n\t<meta http-equiv=\"Content-Type\" content=\"<?php bloginfo('html_type'); ?>; charset=<?php bloginfo('charset'); ?>\" />\n\t<title><?php echo get_bloginfo( 'name', 'display' ) . $separator . $title; ?></title>\n\t<?php\n\n\twp_enqueue_style( 'login' );\n\n\t/*\n\t * Remove all stored post data on logging out.\n\t * This could be added by add_action('login_head'...) like wp_shake_js(),\n\t * but maybe better if it's not removable by plugins\n\t */\n\tif ( 'loggedout' == $wp_error->get_error_code() ) {\n\t\t?>\n\t\t<script>if(\"sessionStorage\" in window){try{for(var key in sessionStorage){if(key.indexOf(\"wp-autosave-\")!=-1){sessionStorage.removeItem(key)}}}catch(e){}};</script>\n\t\t<?php\n\t}\n\n\t/**\n\t * Enqueue scripts and styles for the login page.\n\t *\n\t * @since 3.1.0\n\t */\n\tdo_action( 'login_enqueue_scripts' );\n\n\t/**\n\t * Fires in the login page header after scripts are enqueued.\n\t *\n\t * @since 2.1.0\n\t */\n\tdo_action( 'login_head' );\n\n\tif ( is_multisite() ) {\n\t\t$login_header_url   = network_home_url();\n\t\t$login_header_title = get_current_site()->site_name;\n\t} else {\n\t\t$login_header_url   = __( 'https://wordpress.org/' );\n\t\t$login_header_title = __( 'Powered by WordPress' );\n\t}\n\n\t/**\n\t * Filter link URL of the header logo above login form.\n\t *\n\t * @since 2.1.0\n\t *\n\t * @param string $login_header_url Login header logo URL.\n\t */\n\t$login_header_url = apply_filters( 'login_headerurl', $login_header_url );\n\t/**\n\t * Filter the title attribute of the header logo above login form.\n\t *\n\t * @since 2.1.0\n\t *\n\t * @param string $login_header_title Login header logo title attribute.\n\t */\n\t$login_header_title = apply_filters( 'login_headertitle', $login_header_title );\n\n\t$classes = array( 'login-action-' . $action, 'wp-core-ui' );\n\tif ( wp_is_mobile() )\n\t\t$classes[] = 'mobile';\n\tif ( is_rtl() )\n\t\t$classes[] = 'rtl';\n\tif ( $interim_login ) {\n\t\t$classes[] = 'interim-login';\n\t\t?>\n\t\t<style type=\"text/css\">html{background-color: transparent;}</style>\n\t\t<?php\n\n\t\tif ( 'success' ===  $interim_login )\n\t\t\t$classes[] = 'interim-login-success';\n\t}\n\t$classes[] =' locale-' . sanitize_html_class( strtolower( str_replace( '_', '-', get_locale() ) ) );\n\n\t/**\n\t * Filter the login page body classes.\n\t *\n\t * @since 3.5.0\n\t *\n\t * @param array  $classes An array of body classes.\n\t * @param string $action  The action that brought the visitor to the login page.\n\t */\n\t$classes = apply_filters( 'login_body_class', $classes, $action );\n\n\t?>\n\t</head>\n\t<body class=\"login <?php echo esc_attr( implode( ' ', $classes ) ); ?>\">\n\t<div id=\"login\">\n\t\t<h1><a href=\"<?php echo esc_url( $login_header_url ); ?>\" title=\"<?php echo esc_attr( $login_header_title ); ?>\" tabindex=\"-1\"><?php bloginfo( 'name' ); ?></a></h1>\n\t<?php\n\n\tunset( $login_header_url, $login_header_title );\n\n\t/**\n\t * Filter the message to display above the login form.\n\t *\n\t * @since 2.1.0\n\t *\n\t * @param string $message Login message text.\n\t */\n\t$message = apply_filters( 'login_message', $message );\n\tif ( !empty( $message ) )\n\t\techo $message . \"\\n\";\n\n\t// In case a plugin uses $error rather than the $wp_errors object\n\tif ( !empty( $error ) ) {\n\t\t$wp_error->add('error', $error);\n\t\tunset($error);\n\t}\n\n\tif ( $wp_error->get_error_code() ) {\n\t\t$errors = '';\n\t\t$messages = '';\n\t\tforeach ( $wp_error->get_error_codes() as $code ) {\n\t\t\t$severity = $wp_error->get_error_data( $code );\n\t\t\tforeach ( $wp_error->get_error_messages( $code ) as $error_message ) {\n\t\t\t\tif ( 'message' == $severity )\n\t\t\t\t\t$messages .= '\t' . $error_message . \"<br />\\n\";\n\t\t\t\telse\n\t\t\t\t\t$errors .= '\t' . $error_message . \"<br />\\n\";\n\t\t\t}\n\t\t}\n\t\tif ( ! empty( $errors ) ) {\n\t\t\t/**\n\t\t\t * Filter the error messages displayed above the login form.\n\t\t\t *\n\t\t\t * @since 2.1.0\n\t\t\t *\n\t\t\t * @param string $errors Login error message.\n\t\t\t */\n\t\t\techo '<div id=\"login_error\">' . apply_filters( 'login_errors', $errors ) . \"</div>\\n\";\n\t\t}\n\t\tif ( ! empty( $messages ) ) {\n\t\t\t/**\n\t\t\t * Filter instructional messages displayed above the login form.\n\t\t\t *\n\t\t\t * @since 2.5.0\n\t\t\t *\n\t\t\t * @param string $messages Login messages.\n\t\t\t */\n\t\t\techo '<p class=\"message\">' . apply_filters( 'login_messages', $messages ) . \"</p>\\n\";\n\t\t}\n\t}\n} // End of login_header()\n\n/**\n * Outputs the footer for the login page.\n *\n * @param string $input_id Which input to auto-focus\n */\nfunction login_footer($input_id = '') {\n\tglobal $interim_login;\n\n\t// Don't allow interim logins to navigate away from the page.\n\tif ( ! $interim_login ): ?>\n\t<p id=\"backtoblog\"><a href=\"<?php echo esc_url( home_url( '/' ) ); ?>\"><?php printf( __( '&larr; Back to %s' ), get_bloginfo( 'title', 'display' ) ); ?></a></p>\n\t<?php endif; ?>\n\n\t</div>\n\n\t<?php if ( !empty($input_id) ) : ?>\n\t<script type=\"text/javascript\">\n\ttry{document.getElementById('<?php echo $input_id; ?>').focus();}catch(e){}\n\tif(typeof wpOnload=='function')wpOnload();\n\t</script>\n\t<?php endif; ?>\n\n\t<?php\n\t/**\n\t * Fires in the login page footer.\n\t *\n\t * @since 3.1.0\n\t */\n\tdo_action( 'login_footer' ); ?>\n\t<div class=\"clear\"></div>\n\t</body>\n\t</html>\n\t<?php\n}\n\n/**\n * @since 3.0.0\n */\nfunction wp_shake_js() {\n\tif ( wp_is_mobile() )\n\t\treturn;\n?>\n<script type=\"text/javascript\">\naddLoadEvent = function(func){if(typeof jQuery!=\"undefined\")jQuery(document).ready(func);else if(typeof wpOnload!='function'){wpOnload=func;}else{var oldonload=wpOnload;wpOnload=function(){oldonload();func();}}};\nfunction s(id,pos){g(id).left=pos+'px';}\nfunction g(id){return document.getElementById(id).style;}\nfunction shake(id,a,d){c=a.shift();s(id,c);if(a.length>0){setTimeout(function(){shake(id,a,d);},d);}else{try{g(id).position='static';wp_attempt_focus();}catch(e){}}}\naddLoadEvent(function(){ var p=new Array(15,30,15,0,-15,-30,-15,0);p=p.concat(p.concat(p));var i=document.forms[0].id;g(i).position='relative';shake(i,p,20);});\n</script>\n<?php\n}\n\n/**\n * @since 3.7.0\n */\nfunction wp_login_viewport_meta() {\n\t?>\n\t<meta name=\"viewport\" content=\"width=device-width\" />\n\t<?php\n}\n\n/**\n * Handles sending password retrieval email to user.\n *\n * @global wpdb         $wpdb      WordPress database abstraction object.\n * @global PasswordHash $wp_hasher Portable PHP password hashing framework.\n *\n * @return bool|WP_Error True: when finish. WP_Error on error\n */\nfunction retrieve_password() {\n\tglobal $wpdb, $wp_hasher;\n\n\t$errors = new WP_Error();\n\n\tif ( empty( $_POST['user_login'] ) ) {\n\t\t$errors->add('empty_username', __('<strong>ERROR</strong>: Enter a username or email address.'));\n\t} elseif ( strpos( $_POST['user_login'], '@' ) ) {\n\t\t$user_data = get_user_by( 'email', trim( $_POST['user_login'] ) );\n\t\tif ( empty( $user_data ) )\n\t\t\t$errors->add('invalid_email', __('<strong>ERROR</strong>: There is no user registered with that email address.'));\n\t} else {\n\t\t$login = trim($_POST['user_login']);\n\t\t$user_data = get_user_by('login', $login);\n\t}\n\n\t/**\n\t * Fires before errors are returned from a password reset request.\n\t *\n\t * @since 2.1.0\n\t * @since 4.4.0 Added the `$errors` parameter.\n\t *\n\t * @param WP_Error $errors A WP_Error object containing any errors generated\n\t *                         by using invalid credentials.\n\t */\n\tdo_action( 'lostpassword_post', $errors );\n\n\tif ( $errors->get_error_code() )\n\t\treturn $errors;\n\n\tif ( !$user_data ) {\n\t\t$errors->add('invalidcombo', __('<strong>ERROR</strong>: Invalid username or email.'));\n\t\treturn $errors;\n\t}\n\n\t// Redefining user_login ensures we return the right case in the email.\n\t$user_login = $user_data->user_login;\n\t$user_email = $user_data->user_email;\n\t$key = get_password_reset_key( $user_data );\n\n\tif ( is_wp_error( $key ) ) {\n\t\treturn $key;\n\t}\n\n\t$message = __('Someone has requested a password reset for the following account:') . \"\\r\\n\\r\\n\";\n\t$message .= network_home_url( '/' ) . \"\\r\\n\\r\\n\";\n\t$message .= sprintf(__('Username: %s'), $user_login) . \"\\r\\n\\r\\n\";\n\t$message .= __('If this was a mistake, just ignore this email and nothing will happen.') . \"\\r\\n\\r\\n\";\n\t$message .= __('To reset your password, visit the following address:') . \"\\r\\n\\r\\n\";\n\t$message .= '<' . network_site_url(\"wp-login.php?action=rp&key=$key&login=\" . rawurlencode($user_login), 'login') . \">\\r\\n\";\n\n\tif ( is_multisite() )\n\t\t$blogname = $GLOBALS['current_site']->site_name;\n\telse\n\t\t/*\n\t\t * The blogname option is escaped with esc_html on the way into the database\n\t\t * in sanitize_option we want to reverse this for the plain text arena of emails.\n\t\t */\n\t\t$blogname = wp_specialchars_decode(get_option('blogname'), ENT_QUOTES);\n\n\t$title = sprintf( __('[%s] Password Reset'), $blogname );\n\n\t/**\n\t * Filter the subject of the password reset email.\n\t *\n\t * @since 2.8.0\n\t * @since 4.4.0 Added the `$user_login` and `$user_data` parameters.\n\t *\n\t * @param string  $title      Default email title.\n\t * @param string  $user_login The username for the user.\n\t * @param WP_User $user_data  WP_User object.\n\t */\n\t$title = apply_filters( 'retrieve_password_title', $title, $user_login, $user_data );\n\n\t/**\n\t * Filter the message body of the password reset mail.\n\t *\n\t * @since 2.8.0\n\t * @since 4.1.0 Added `$user_login` and `$user_data` parameters.\n\t *\n\t * @param string  $message    Default mail message.\n\t * @param string  $key        The activation key.\n\t * @param string  $user_login The username for the user.\n\t * @param WP_User $user_data  WP_User object.\n\t */\n\t$message = apply_filters( 'retrieve_password_message', $message, $key, $user_login, $user_data );\n\n\tif ( $message && !wp_mail( $user_email, wp_specialchars_decode( $title ), $message ) )\n\t\twp_die( __('The email could not be sent.') . \"<br />\\n\" . __('Possible reason: your host may have disabled the mail() function.') );\n\n\treturn true;\n}\n\n//\n// Main\n//\n\n$action = isset($_REQUEST['action']) ? $_REQUEST['action'] : 'login';\n$errors = new WP_Error();\n\nif ( isset($_GET['key']) )\n\t$action = 'resetpass';\n\n// validate action so as to default to the login screen\nif ( !in_array( $action, array( 'postpass', 'logout', 'lostpassword', 'retrievepassword', 'resetpass', 'rp', 'register', 'login' ), true ) && false === has_filter( 'login_form_' . $action ) )\n\t$action = 'login';\n\nnocache_headers();\n\nheader('Content-Type: '.get_bloginfo('html_type').'; charset='.get_bloginfo('charset'));\n\nif ( defined( 'RELOCATE' ) && RELOCATE ) { // Move flag is set\n\tif ( isset( $_SERVER['PATH_INFO'] ) && ($_SERVER['PATH_INFO'] != $_SERVER['PHP_SELF']) )\n\t\t$_SERVER['PHP_SELF'] = str_replace( $_SERVER['PATH_INFO'], '', $_SERVER['PHP_SELF'] );\n\n\t$url = dirname( set_url_scheme( 'http://' .  $_SERVER['HTTP_HOST'] . $_SERVER['PHP_SELF'] ) );\n\tif ( $url != get_option( 'siteurl' ) )\n\t\tupdate_option( 'siteurl', $url );\n}\n\n//Set a cookie now to see if they are supported by the browser.\n$secure = ( 'https' === parse_url( wp_login_url(), PHP_URL_SCHEME ) );\nsetcookie( TEST_COOKIE, 'WP Cookie check', 0, COOKIEPATH, COOKIE_DOMAIN, $secure );\nif ( SITECOOKIEPATH != COOKIEPATH )\n\tsetcookie( TEST_COOKIE, 'WP Cookie check', 0, SITECOOKIEPATH, COOKIE_DOMAIN, $secure );\n\n/**\n * Fires when the login form is initialized.\n *\n * @since 3.2.0\n */\ndo_action( 'login_init' );\n/**\n * Fires before a specified login form action.\n *\n * The dynamic portion of the hook name, `$action`, refers to the action\n * that brought the visitor to the login form. Actions include 'postpass',\n * 'logout', 'lostpassword', etc.\n *\n * @since 2.8.0\n */\ndo_action( 'login_form_' . $action );\n\n$http_post = ('POST' == $_SERVER['REQUEST_METHOD']);\n$interim_login = isset($_REQUEST['interim-login']);\n\nswitch ($action) {\n\ncase 'postpass' :\n\tif ( ! array_key_exists( 'post_password', $_POST ) ) {\n\t\twp_safe_redirect( wp_get_referer() );\n\t\texit();\n\t}\n\n\trequire_once ABSPATH . WPINC . '/class-phpass.php';\n\t$hasher = new PasswordHash( 8, true );\n\n\t/**\n\t * Filter the life span of the post password cookie.\n\t *\n\t * By default, the cookie expires 10 days from creation. To turn this\n\t * into a session cookie, return 0.\n\t *\n\t * @since 3.7.0\n\t *\n\t * @param int $expires The expiry time, as passed to setcookie().\n\t */\n\t$expire = apply_filters( 'post_password_expires', time() + 10 * DAY_IN_SECONDS );\n\t$referer = wp_get_referer();\n\tif ( $referer ) {\n\t\t$secure = ( 'https' === parse_url( $referer, PHP_URL_SCHEME ) );\n\t} else {\n\t\t$secure = false;\n\t}\n\tsetcookie( 'wp-postpass_' . COOKIEHASH, $hasher->HashPassword( wp_unslash( $_POST['post_password'] ) ), $expire, COOKIEPATH, COOKIE_DOMAIN, $secure );\n\n\twp_safe_redirect( wp_get_referer() );\n\texit();\n\ncase 'logout' :\n\tcheck_admin_referer('log-out');\n\n\t$user = wp_get_current_user();\n\n\twp_logout();\n\n\tif ( ! empty( $_REQUEST['redirect_to'] ) ) {\n\t\t$redirect_to = $requested_redirect_to = $_REQUEST['redirect_to'];\n\t} else {\n\t\t$redirect_to = 'wp-login.php?loggedout=true';\n\t\t$requested_redirect_to = '';\n\t}\n\n\t/**\n\t * Filter the log out redirect URL.\n\t *\n\t * @since 4.2.0\n\t *\n\t * @param string  $redirect_to           The redirect destination URL.\n\t * @param string  $requested_redirect_to The requested redirect destination URL passed as a parameter.\n\t * @param WP_User $user                  The WP_User object for the user that's logging out.\n\t */\n\t$redirect_to = apply_filters( 'logout_redirect', $redirect_to, $requested_redirect_to, $user );\n\twp_safe_redirect( $redirect_to );\n\texit();\n\ncase 'lostpassword' :\ncase 'retrievepassword' :\n\n\tif ( $http_post ) {\n\t\t$errors = retrieve_password();\n\t\tif ( !is_wp_error($errors) ) {\n\t\t\t$redirect_to = !empty( $_REQUEST['redirect_to'] ) ? $_REQUEST['redirect_to'] : 'wp-login.php?checkemail=confirm';\n\t\t\twp_safe_redirect( $redirect_to );\n\t\t\texit();\n\t\t}\n\t}\n\n\tif ( isset( $_GET['error'] ) ) {\n\t\tif ( 'invalidkey' == $_GET['error'] ) {\n\t\t\t$errors->add( 'invalidkey', __( 'Your password reset link appears to be invalid. Please request a new link below.' ) );\n\t\t} elseif ( 'expiredkey' == $_GET['error'] ) {\n\t\t\t$errors->add( 'expiredkey', __( 'Your password reset link has expired. Please request a new link below.' ) );\n\t\t}\n\t}\n\n\t$lostpassword_redirect = ! empty( $_REQUEST['redirect_to'] ) ? $_REQUEST['redirect_to'] : '';\n\t/**\n\t * Filter the URL redirected to after submitting the lostpassword/retrievepassword form.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $lostpassword_redirect The redirect destination URL.\n\t */\n\t$redirect_to = apply_filters( 'lostpassword_redirect', $lostpassword_redirect );\n\n\t/**\n\t * Fires before the lost password form.\n\t *\n\t * @since 1.5.1\n\t */\n\tdo_action( 'lost_password' );\n\n\tlogin_header(__('Lost Password'), '<p class=\"message\">' . __('Please enter your username or email address. You will receive a link to create a new password via email.') . '</p>', $errors);\n\n\t$user_login = isset($_POST['user_login']) ? wp_unslash($_POST['user_login']) : '';\n\n?>\n\n<form name=\"lostpasswordform\" id=\"lostpasswordform\" action=\"<?php echo esc_url( network_site_url( 'wp-login.php?action=lostpassword', 'login_post' ) ); ?>\" method=\"post\">\n\t<p>\n\t\t<label for=\"user_login\" ><?php _e('Username or Email') ?><br />\n\t\t<input type=\"text\" name=\"user_login\" id=\"user_login\" class=\"input\" value=\"<?php echo esc_attr($user_login); ?>\" size=\"20\" /></label>\n\t</p>\n\t<?php\n\t/**\n\t * Fires inside the lostpassword form tags, before the hidden fields.\n\t *\n\t * @since 2.1.0\n\t */\n\tdo_action( 'lostpassword_form' ); ?>\n\t<input type=\"hidden\" name=\"redirect_to\" value=\"<?php echo esc_attr( $redirect_to ); ?>\" />\n\t<p class=\"submit\"><input type=\"submit\" name=\"wp-submit\" id=\"wp-submit\" class=\"button button-primary button-large\" value=\"<?php esc_attr_e('Get New Password'); ?>\" /></p>\n</form>\n\n<p id=\"nav\">\n<a href=\"<?php echo esc_url( wp_login_url() ); ?>\"><?php _e('Log in') ?></a>\n<?php\nif ( get_option( 'users_can_register' ) ) :\n\t$registration_url = sprintf( '<a href=\"%s\">%s</a>', esc_url( wp_registration_url() ), __( 'Register' ) );\n\n\t/** This filter is documented in wp-includes/general-template.php */\n\techo ' | ' . apply_filters( 'register', $registration_url );\nendif;\n?>\n</p>\n\n<?php\nlogin_footer('user_login');\nbreak;\n\ncase 'resetpass' :\ncase 'rp' :\n\tlist( $rp_path ) = explode( '?', wp_unslash( $_SERVER['REQUEST_URI'] ) );\n\t$rp_cookie = 'wp-resetpass-' . COOKIEHASH;\n\tif ( isset( $_GET['key'] ) ) {\n\t\t$value = sprintf( '%s:%s', wp_unslash( $_GET['login'] ), wp_unslash( $_GET['key'] ) );\n\t\tsetcookie( $rp_cookie, $value, 0, $rp_path, COOKIE_DOMAIN, is_ssl(), true );\n\t\twp_safe_redirect( remove_query_arg( array( 'key', 'login' ) ) );\n\t\texit;\n\t}\n\n\tif ( isset( $_COOKIE[ $rp_cookie ] ) && 0 < strpos( $_COOKIE[ $rp_cookie ], ':' ) ) {\n\t\tlist( $rp_login, $rp_key ) = explode( ':', wp_unslash( $_COOKIE[ $rp_cookie ] ), 2 );\n\t\t$user = check_password_reset_key( $rp_key, $rp_login );\n\t\tif ( isset( $_POST['pass1'] ) && ! hash_equals( $rp_key, $_POST['rp_key'] ) ) {\n\t\t\t$user = false;\n\t\t}\n\t} else {\n\t\t$user = false;\n\t}\n\n\tif ( ! $user || is_wp_error( $user ) ) {\n\t\tsetcookie( $rp_cookie, ' ', time() - YEAR_IN_SECONDS, $rp_path, COOKIE_DOMAIN, is_ssl(), true );\n\t\tif ( $user && $user->get_error_code() === 'expired_key' )\n\t\t\twp_redirect( site_url( 'wp-login.php?action=lostpassword&error=expiredkey' ) );\n\t\telse\n\t\t\twp_redirect( site_url( 'wp-login.php?action=lostpassword&error=invalidkey' ) );\n\t\texit;\n\t}\n\n\t$errors = new WP_Error();\n\n\tif ( isset($_POST['pass1']) && $_POST['pass1'] != $_POST['pass2'] )\n\t\t$errors->add( 'password_reset_mismatch', __( 'The passwords do not match.' ) );\n\n\t/**\n\t * Fires before the password reset procedure is validated.\n\t *\n\t * @since 3.5.0\n\t *\n\t * @param object           $errors WP Error object.\n\t * @param WP_User|WP_Error $user   WP_User object if the login and reset key match. WP_Error object otherwise.\n\t */\n\tdo_action( 'validate_password_reset', $errors, $user );\n\n\tif ( ( ! $errors->get_error_code() ) && isset( $_POST['pass1'] ) && !empty( $_POST['pass1'] ) ) {\n\t\treset_password($user, $_POST['pass1']);\n\t\tsetcookie( $rp_cookie, ' ', time() - YEAR_IN_SECONDS, $rp_path, COOKIE_DOMAIN, is_ssl(), true );\n\t\tlogin_header( __( 'Password Reset' ), '<p class=\"message reset-pass\">' . __( 'Your password has been reset.' ) . ' <a href=\"' . esc_url( wp_login_url() ) . '\">' . __( 'Log in' ) . '</a></p>' );\n\t\tlogin_footer();\n\t\texit;\n\t}\n\n\twp_enqueue_script('utils');\n\twp_enqueue_script('user-profile');\n\n\tlogin_header(__('Reset Password'), '<p class=\"message reset-pass\">' . __('Enter your new password below.') . '</p>', $errors );\n\n?>\n<form name=\"resetpassform\" id=\"resetpassform\" action=\"<?php echo esc_url( network_site_url( 'wp-login.php?action=resetpass', 'login_post' ) ); ?>\" method=\"post\" autocomplete=\"off\">\n\t<input type=\"hidden\" id=\"user_login\" value=\"<?php echo esc_attr( $rp_login ); ?>\" autocomplete=\"off\" />\n\n\t<div class=\"user-pass1-wrap\">\n\t\t<p>\n\t\t\t<label for=\"pass1\"><?php _e( 'New password' ) ?></label>\n\t\t</p>\n\n\t\t<div class=\"wp-pwd\">\n\t\t\t<span class=\"password-input-wrapper\">\n\t\t\t\t<input type=\"password\" data-reveal=\"1\" data-pw=\"<?php echo esc_attr( wp_generate_password( 16 ) ); ?>\" name=\"pass1\" id=\"pass1\" class=\"input\" size=\"20\" value=\"\" autocomplete=\"off\" aria-describedby=\"pass-strength-result\" />\n\t\t\t</span>\n\t\t\t<div id=\"pass-strength-result\" class=\"hide-if-no-js\" aria-live=\"polite\"><?php _e( 'Strength indicator' ); ?></div>\n\t\t</div>\n\t</div>\n\n\t<p class=\"user-pass2-wrap\">\n\t\t<label for=\"pass2\"><?php _e( 'Confirm new password' ) ?></label><br />\n\t\t<input type=\"password\" name=\"pass2\" id=\"pass2\" class=\"input\" size=\"20\" value=\"\" autocomplete=\"off\" />\n\t</p>\n\n\t<p class=\"description indicator-hint\"><?php echo wp_get_password_hint(); ?></p>\n\t<br class=\"clear\" />\n\n\t<?php\n\t/**\n\t * Fires following the 'Strength indicator' meter in the user password reset form.\n\t *\n\t * @since 3.9.0\n\t *\n\t * @param WP_User $user User object of the user whose password is being reset.\n\t */\n\tdo_action( 'resetpass_form', $user );\n\t?>\n\t<input type=\"hidden\" name=\"rp_key\" value=\"<?php echo esc_attr( $rp_key ); ?>\" />\n\t<p class=\"submit\"><input type=\"submit\" name=\"wp-submit\" id=\"wp-submit\" class=\"button button-primary button-large\" value=\"<?php esc_attr_e('Reset Password'); ?>\" /></p>\n</form>\n\n<p id=\"nav\">\n<a href=\"<?php echo esc_url( wp_login_url() ); ?>\"><?php _e( 'Log in' ); ?></a>\n<?php\nif ( get_option( 'users_can_register' ) ) :\n\t$registration_url = sprintf( '<a href=\"%s\">%s</a>', esc_url( wp_registration_url() ), __( 'Register' ) );\n\n\t/** This filter is documented in wp-includes/general-template.php */\n\techo ' | ' . apply_filters( 'register', $registration_url );\nendif;\n?>\n</p>\n\n<?php\nlogin_footer('user_pass');\nbreak;\n\ncase 'register' :\n\tif ( is_multisite() ) {\n\t\t/**\n\t\t * Filter the Multisite sign up URL.\n\t\t *\n\t\t * @since 3.0.0\n\t\t *\n\t\t * @param string $sign_up_url The sign up URL.\n\t\t */\n\t\twp_redirect( apply_filters( 'wp_signup_location', network_site_url( 'wp-signup.php' ) ) );\n\t\texit;\n\t}\n\n\tif ( !get_option('users_can_register') ) {\n\t\twp_redirect( site_url('wp-login.php?registration=disabled') );\n\t\texit();\n\t}\n\n\t$user_login = '';\n\t$user_email = '';\n\tif ( $http_post ) {\n\t\t$user_login = isset( $_POST['user_login'] ) ? $_POST['user_login'] : '';\n\t\t$user_email = isset( $_POST['user_email'] ) ? $_POST['user_email'] : '';\n\t\t$errors = register_new_user($user_login, $user_email);\n\t\tif ( !is_wp_error($errors) ) {\n\t\t\t$redirect_to = !empty( $_POST['redirect_to'] ) ? $_POST['redirect_to'] : 'wp-login.php?checkemail=registered';\n\t\t\twp_safe_redirect( $redirect_to );\n\t\t\texit();\n\t\t}\n\t}\n\n\t$registration_redirect = ! empty( $_REQUEST['redirect_to'] ) ? $_REQUEST['redirect_to'] : '';\n\t/**\n\t * Filter the registration redirect URL.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $registration_redirect The redirect destination URL.\n\t */\n\t$redirect_to = apply_filters( 'registration_redirect', $registration_redirect );\n\tlogin_header(__('Registration Form'), '<p class=\"message register\">' . __('Register For This Site') . '</p>', $errors);\n?>\n<form name=\"registerform\" id=\"registerform\" action=\"<?php echo esc_url( site_url( 'wp-login.php?action=register', 'login_post' ) ); ?>\" method=\"post\" novalidate=\"novalidate\">\n\t<p>\n\t\t<label for=\"user_login\"><?php _e('Username') ?><br />\n\t\t<input type=\"text\" name=\"user_login\" id=\"user_login\" class=\"input\" value=\"<?php echo esc_attr(wp_unslash($user_login)); ?>\" size=\"20\" /></label>\n\t</p>\n\t<p>\n\t\t<label for=\"user_email\"><?php _e('Email') ?><br />\n\t\t<input type=\"email\" name=\"user_email\" id=\"user_email\" class=\"input\" value=\"<?php echo esc_attr( wp_unslash( $user_email ) ); ?>\" size=\"25\" /></label>\n\t</p>\n\t<?php\n\t/**\n\t * Fires following the 'Email' field in the user registration form.\n\t *\n\t * @since 2.1.0\n\t */\n\tdo_action( 'register_form' );\n\t?>\n\t<p id=\"reg_passmail\"><?php _e( 'Registration confirmation will be emailed to you.' ); ?></p>\n\t<br class=\"clear\" />\n\t<input type=\"hidden\" name=\"redirect_to\" value=\"<?php echo esc_attr( $redirect_to ); ?>\" />\n\t<p class=\"submit\"><input type=\"submit\" name=\"wp-submit\" id=\"wp-submit\" class=\"button button-primary button-large\" value=\"<?php esc_attr_e('Register'); ?>\" /></p>\n</form>\n\n<p id=\"nav\">\n<a href=\"<?php echo esc_url( wp_login_url() ); ?>\"><?php _e( 'Log in' ); ?></a> |\n<a href=\"<?php echo esc_url( wp_lostpassword_url() ); ?>\"><?php _e( 'Lost your password?' ); ?></a>\n</p>\n\n<?php\nlogin_footer('user_login');\nbreak;\n\ncase 'login' :\ndefault:\n\t$secure_cookie = '';\n\t$customize_login = isset( $_REQUEST['customize-login'] );\n\tif ( $customize_login )\n\t\twp_enqueue_script( 'customize-base' );\n\n\t// If the user wants ssl but the session is not ssl, force a secure cookie.\n\tif ( !empty($_POST['log']) && !force_ssl_admin() ) {\n\t\t$user_name = sanitize_user($_POST['log']);\n\t\t$user = get_user_by( 'login', $user_name );\n\n\t\tif ( ! $user && strpos( $user_name, '@' ) ) {\n\t\t\t$user = get_user_by( 'email', $user_name );\n\t\t}\n\n\t\tif ( $user ) {\n\t\t\tif ( get_user_option('use_ssl', $user->ID) ) {\n\t\t\t\t$secure_cookie = true;\n\t\t\t\tforce_ssl_admin(true);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( isset( $_REQUEST['redirect_to'] ) ) {\n\t\t$redirect_to = $_REQUEST['redirect_to'];\n\t\t// Redirect to https if user wants ssl\n\t\tif ( $secure_cookie && false !== strpos($redirect_to, 'wp-admin') )\n\t\t\t$redirect_to = preg_replace('|^http://|', 'https://', $redirect_to);\n\t} else {\n\t\t$redirect_to = admin_url();\n\t}\n\n\t$reauth = empty($_REQUEST['reauth']) ? false : true;\n\n\t$user = wp_signon( '', $secure_cookie );\n\n\tif ( empty( $_COOKIE[ LOGGED_IN_COOKIE ] ) ) {\n\t\tif ( headers_sent() ) {\n\t\t\t$user = new WP_Error( 'test_cookie', sprintf( __( '<strong>ERROR</strong>: Cookies are blocked due to unexpected output. For help, please see <a href=\"%1$s\">this documentation</a> or try the <a href=\"%2$s\">support forums</a>.' ),\n\t\t\t\t__( 'https://codex.wordpress.org/Cookies' ), __( 'https://wordpress.org/support/' ) ) );\n\t\t} elseif ( isset( $_POST['testcookie'] ) && empty( $_COOKIE[ TEST_COOKIE ] ) ) {\n\t\t\t// If cookies are disabled we can't log in even with a valid user+pass\n\t\t\t$user = new WP_Error( 'test_cookie', sprintf( __( '<strong>ERROR</strong>: Cookies are blocked or not supported by your browser. You must <a href=\"%s\">enable cookies</a> to use WordPress.' ),\n\t\t\t\t__( 'https://codex.wordpress.org/Cookies' ) ) );\n\t\t}\n\t}\n\n\t$requested_redirect_to = isset( $_REQUEST['redirect_to'] ) ? $_REQUEST['redirect_to'] : '';\n\t/**\n\t * Filter the login redirect URL.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string           $redirect_to           The redirect destination URL.\n\t * @param string           $requested_redirect_to The requested redirect destination URL passed as a parameter.\n\t * @param WP_User|WP_Error $user                  WP_User object if login was successful, WP_Error object otherwise.\n\t */\n\t$redirect_to = apply_filters( 'login_redirect', $redirect_to, $requested_redirect_to, $user );\n\n\tif ( !is_wp_error($user) && !$reauth ) {\n\t\tif ( $interim_login ) {\n\t\t\t$message = '<p class=\"message\">' . __('You have logged in successfully.') . '</p>';\n\t\t\t$interim_login = 'success';\n\t\t\tlogin_header( '', $message ); ?>\n\t\t\t</div>\n\t\t\t<?php\n\t\t\t/** This action is documented in wp-login.php */\n\t\t\tdo_action( 'login_footer' ); ?>\n\t\t\t<?php if ( $customize_login ) : ?>\n\t\t\t\t<script type=\"text/javascript\">setTimeout( function(){ new wp.customize.Messenger({ url: '<?php echo wp_customize_url(); ?>', channel: 'login' }).send('login') }, 1000 );</script>\n\t\t\t<?php endif; ?>\n\t\t\t</body></html>\n<?php\t\texit;\n\t\t}\n\n\t\tif ( ( empty( $redirect_to ) || $redirect_to == 'wp-admin/' || $redirect_to == admin_url() ) ) {\n\t\t\t// If the user doesn't belong to a blog, send them to user admin. If the user can't edit posts, send them to their profile.\n\t\t\tif ( is_multisite() && !get_active_blog_for_user($user->ID) && !is_super_admin( $user->ID ) )\n\t\t\t\t$redirect_to = user_admin_url();\n\t\t\telseif ( is_multisite() && !$user->has_cap('read') )\n\t\t\t\t$redirect_to = get_dashboard_url( $user->ID );\n\t\t\telseif ( !$user->has_cap('edit_posts') )\n\t\t\t\t$redirect_to = $user->has_cap( 'read' ) ? admin_url( 'profile.php' ) : home_url();\n\n\t\t\twp_redirect( $redirect_to );\n\t\t\texit();\n\t\t}\n\t\twp_safe_redirect($redirect_to);\n\t\texit();\n\t}\n\n\t$errors = $user;\n\t// Clear errors if loggedout is set.\n\tif ( !empty($_GET['loggedout']) || $reauth )\n\t\t$errors = new WP_Error();\n\n\tif ( $interim_login ) {\n\t\tif ( ! $errors->get_error_code() )\n\t\t\t$errors->add( 'expired', __( 'Your session has expired. Please log in to continue where you left off.' ), 'message' );\n\t} else {\n\t\t// Some parts of this script use the main login form to display a message\n\t\tif\t\t( isset($_GET['loggedout']) && true == $_GET['loggedout'] )\n\t\t\t$errors->add('loggedout', __('You are now logged out.'), 'message');\n\t\telseif\t( isset($_GET['registration']) && 'disabled' == $_GET['registration'] )\n\t\t\t$errors->add('registerdisabled', __('User registration is currently not allowed.'));\n\t\telseif\t( isset($_GET['checkemail']) && 'confirm' == $_GET['checkemail'] )\n\t\t\t$errors->add('confirm', __('Check your email for the confirmation link.'), 'message');\n\t\telseif\t( isset($_GET['checkemail']) && 'newpass' == $_GET['checkemail'] )\n\t\t\t$errors->add('newpass', __('Check your email for your new password.'), 'message');\n\t\telseif\t( isset($_GET['checkemail']) && 'registered' == $_GET['checkemail'] )\n\t\t\t$errors->add('registered', __('Registration complete. Please check your email.'), 'message');\n\t\telseif ( strpos( $redirect_to, 'about.php?updated' ) )\n\t\t\t$errors->add('updated', __( '<strong>You have successfully updated WordPress!</strong> Please log back in to see what&#8217;s new.' ), 'message' );\n\t}\n\n\t/**\n\t * Filter the login page errors.\n\t *\n\t * @since 3.6.0\n\t *\n\t * @param object $errors      WP Error object.\n\t * @param string $redirect_to Redirect destination URL.\n\t */\n\t$errors = apply_filters( 'wp_login_errors', $errors, $redirect_to );\n\n\t// Clear any stale cookies.\n\tif ( $reauth )\n\t\twp_clear_auth_cookie();\n\n\tlogin_header(__('Log In'), '', $errors);\n\n\tif ( isset($_POST['log']) )\n\t\t$user_login = ( 'incorrect_password' == $errors->get_error_code() || 'empty_password' == $errors->get_error_code() ) ? esc_attr(wp_unslash($_POST['log'])) : '';\n\t$rememberme = ! empty( $_POST['rememberme'] );\n\n\tif ( ! empty( $errors->errors ) ) {\n\t\t$aria_describedby_error = ' aria-describedby=\"login_error\"';\n\t} else {\n\t\t$aria_describedby_error = '';\n\t}\n?>\n\n<form name=\"loginform\" id=\"loginform\" action=\"<?php echo esc_url( site_url( 'wp-login.php', 'login_post' ) ); ?>\" method=\"post\">\n\t<p>\n\t\t<label for=\"user_login\"><?php _e('Username or Email') ?><br />\n\t\t<input type=\"text\" name=\"log\" id=\"user_login\"<?php echo $aria_describedby_error; ?> class=\"input\" value=\"<?php echo esc_attr( $user_login ); ?>\" size=\"20\" /></label>\n\t</p>\n\t<p>\n\t\t<label for=\"user_pass\"><?php _e('Password') ?><br />\n\t\t<input type=\"password\" name=\"pwd\" id=\"user_pass\"<?php echo $aria_describedby_error; ?> class=\"input\" value=\"\" size=\"20\" /></label>\n\t</p>\n\t<?php\n\t/**\n\t * Fires following the 'Password' field in the login form.\n\t *\n\t * @since 2.1.0\n\t */\n\tdo_action( 'login_form' );\n\t?>\n\t<p class=\"forgetmenot\"><label for=\"rememberme\"><input name=\"rememberme\" type=\"checkbox\" id=\"rememberme\" value=\"forever\" <?php checked( $rememberme ); ?> /> <?php esc_attr_e('Remember Me'); ?></label></p>\n\t<p class=\"submit\">\n\t\t<input type=\"submit\" name=\"wp-submit\" id=\"wp-submit\" class=\"button button-primary button-large\" value=\"<?php esc_attr_e('Log In'); ?>\" />\n<?php\tif ( $interim_login ) { ?>\n\t\t<input type=\"hidden\" name=\"interim-login\" value=\"1\" />\n<?php\t} else { ?>\n\t\t<input type=\"hidden\" name=\"redirect_to\" value=\"<?php echo esc_attr($redirect_to); ?>\" />\n<?php \t} ?>\n<?php   if ( $customize_login ) : ?>\n\t\t<input type=\"hidden\" name=\"customize-login\" value=\"1\" />\n<?php   endif; ?>\n\t\t<input type=\"hidden\" name=\"testcookie\" value=\"1\" />\n\t</p>\n</form>\n\n<?php if ( ! $interim_login ) { ?>\n<p id=\"nav\">\n<?php if ( ! isset( $_GET['checkemail'] ) || ! in_array( $_GET['checkemail'], array( 'confirm', 'newpass' ) ) ) :\n\tif ( get_option( 'users_can_register' ) ) :\n\t\t$registration_url = sprintf( '<a href=\"%s\">%s</a>', esc_url( wp_registration_url() ), __( 'Register' ) );\n\n\t\t/** This filter is documented in wp-includes/general-template.php */\n\t\techo apply_filters( 'register', $registration_url ) . ' | ';\n\tendif;\n\t?>\n\t<a href=\"<?php echo esc_url( wp_lostpassword_url() ); ?>\"><?php _e( 'Lost your password?' ); ?></a>\n<?php endif; ?>\n</p>\n<?php } ?>\n\n<script type=\"text/javascript\">\nfunction wp_attempt_focus(){\nsetTimeout( function(){ try{\n<?php if ( $user_login ) { ?>\nd = document.getElementById('user_pass');\nd.value = '';\n<?php } else { ?>\nd = document.getElementById('user_login');\n<?php if ( 'invalid_username' == $errors->get_error_code() ) { ?>\nif( d.value != '' )\nd.value = '';\n<?php\n}\n}?>\nd.focus();\nd.select();\n} catch(e){}\n}, 200);\n}\n\n<?php if ( !$error ) { ?>\nwp_attempt_focus();\n<?php } ?>\nif(typeof wpOnload=='function')wpOnload();\n<?php if ( $interim_login ) { ?>\n(function(){\ntry {\n\tvar i, links = document.getElementsByTagName('a');\n\tfor ( i in links ) {\n\t\tif ( links[i].href )\n\t\t\tlinks[i].target = '_blank';\n\t}\n} catch(e){}\n}());\n<?php } ?>\n</script>\n\n<?php\nlogin_footer();\nbreak;\n} // end action switch\n"
        },
        {
          "name": "wp-mail.php",
          "type": "blob",
          "size": 7.7021484375,
          "content": "<?php\n/**\n * Gets the email message from the user's mailbox to add as\n * a WordPress post. Mailbox connection information must be\n * configured under Settings > Writing\n *\n * @package WordPress\n */\n\n/** Make sure that the WordPress bootstrap has run before continuing. */\nrequire(dirname(__FILE__) . '/wp-load.php');\n\n/** This filter is documented in wp-admin/options.php */\nif ( ! apply_filters( 'enable_post_by_email_configuration', true ) )\n\twp_die( __( 'This action has been disabled by the administrator.' ) );\n\n/**\n * Fires to allow a plugin to do a complete takeover of Post by Email.\n *\n * @since 2.9.0\n */\ndo_action( 'wp-mail.php' );\n\n/** Get the POP3 class with which to access the mailbox. */\nrequire_once( ABSPATH . WPINC . '/class-pop3.php' );\n\n/** Only check at this interval for new messages. */\nif ( !defined('WP_MAIL_INTERVAL') )\n\tdefine('WP_MAIL_INTERVAL', 300); // 5 minutes\n\n$last_checked = get_transient('mailserver_last_checked');\n\nif ( $last_checked )\n\twp_die(__('Slow down cowboy, no need to check for new mails so often!'));\n\nset_transient('mailserver_last_checked', true, WP_MAIL_INTERVAL);\n\n$time_difference = get_option('gmt_offset') * HOUR_IN_SECONDS;\n\n$phone_delim = '::';\n\n$pop3 = new POP3();\n\nif ( !$pop3->connect( get_option('mailserver_url'), get_option('mailserver_port') ) || !$pop3->user( get_option('mailserver_login') ) )\n\twp_die( esc_html( $pop3->ERROR ) );\n\n$count = $pop3->pass( get_option('mailserver_pass') );\n\nif( false === $count )\n\twp_die( esc_html( $pop3->ERROR ) );\n\nif( 0 === $count ) {\n\t$pop3->quit();\n\twp_die( __('There doesn&#8217;t seem to be any new mail.') );\n}\n\nfor ( $i = 1; $i <= $count; $i++ ) {\n\n\t$message = $pop3->get($i);\n\n\t$bodysignal = false;\n\t$boundary = '';\n\t$charset = '';\n\t$content = '';\n\t$content_type = '';\n\t$content_transfer_encoding = '';\n\t$post_author = 1;\n\t$author_found = false;\n\t$dmonths = array('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec');\n\tforeach ($message as $line) {\n\t\t// Body signal.\n\t\tif ( strlen($line) < 3 )\n\t\t\t$bodysignal = true;\n\t\tif ( $bodysignal ) {\n\t\t\t$content .= $line;\n\t\t} else {\n\t\t\tif ( preg_match('/Content-Type: /i', $line) ) {\n\t\t\t\t$content_type = trim($line);\n\t\t\t\t$content_type = substr($content_type, 14, strlen($content_type) - 14);\n\t\t\t\t$content_type = explode(';', $content_type);\n\t\t\t\tif ( ! empty( $content_type[1] ) ) {\n\t\t\t\t\t$charset = explode('=', $content_type[1]);\n\t\t\t\t\t$charset = ( ! empty( $charset[1] ) ) ? trim($charset[1]) : '';\n\t\t\t\t}\n\t\t\t\t$content_type = $content_type[0];\n\t\t\t}\n\t\t\tif ( preg_match('/Content-Transfer-Encoding: /i', $line) ) {\n\t\t\t\t$content_transfer_encoding = trim($line);\n\t\t\t\t$content_transfer_encoding = substr($content_transfer_encoding, 27, strlen($content_transfer_encoding) - 27);\n\t\t\t\t$content_transfer_encoding = explode(';', $content_transfer_encoding);\n\t\t\t\t$content_transfer_encoding = $content_transfer_encoding[0];\n\t\t\t}\n\t\t\tif ( ( $content_type == 'multipart/alternative' ) && ( false !== strpos($line, 'boundary=\"') ) && ( '' == $boundary ) ) {\n\t\t\t\t$boundary = trim($line);\n\t\t\t\t$boundary = explode('\"', $boundary);\n\t\t\t\t$boundary = $boundary[1];\n\t\t\t}\n\t\t\tif (preg_match('/Subject: /i', $line)) {\n\t\t\t\t$subject = trim($line);\n\t\t\t\t$subject = substr($subject, 9, strlen($subject) - 9);\n\t\t\t\t// Captures any text in the subject before $phone_delim as the subject\n\t\t\t\tif ( function_exists('iconv_mime_decode') ) {\n\t\t\t\t\t$subject = iconv_mime_decode($subject, 2, get_option('blog_charset'));\n\t\t\t\t} else {\n\t\t\t\t\t$subject = wp_iso_descrambler($subject);\n\t\t\t\t}\n\t\t\t\t$subject = explode($phone_delim, $subject);\n\t\t\t\t$subject = $subject[0];\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Set the author using the email address (From or Reply-To, the last used)\n\t\t\t * otherwise use the site admin.\n\t\t\t */\n\t\t\tif ( ! $author_found && preg_match( '/^(From|Reply-To): /', $line ) ) {\n\t\t\t\tif ( preg_match('|[a-z0-9_.-]+@[a-z0-9_.-]+(?!.*<)|i', $line, $matches) )\n\t\t\t\t\t$author = $matches[0];\n\t\t\t\telse\n\t\t\t\t\t$author = trim($line);\n\t\t\t\t$author = sanitize_email($author);\n\t\t\t\tif ( is_email($author) ) {\n\t\t\t\t\techo '<p>' . sprintf(__('Author is %s'), $author) . '</p>';\n\t\t\t\t\t$userdata = get_user_by('email', $author);\n\t\t\t\t\tif ( ! empty( $userdata ) ) {\n\t\t\t\t\t\t$post_author = $userdata->ID;\n\t\t\t\t\t\t$author_found = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( preg_match( '/Date: /i', $line ) ) { // of the form '20 Mar 2002 20:32:37 +0100'\n\t\t\t\t$ddate = str_replace( 'Date: ', '', trim( $line ) );\n\t\t\t\t$ddate = preg_replace( '!\\s*\\(.+\\)\\s*$!', '', $ddate );\t// remove parenthesised timezone string if it exists, as this confuses strtotime\n\t\t\t\t$ddate_U = strtotime( $ddate );\n\t\t\t\t$post_date = gmdate( 'Y-m-d H:i:s', $ddate_U + $time_difference );\n\t\t\t\t$post_date_gmt = gmdate( 'Y-m-d H:i:s', $ddate_U );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set $post_status based on $author_found and on author's publish_posts capability\n\tif ( $author_found ) {\n\t\t$user = new WP_User($post_author);\n\t\t$post_status = ( $user->has_cap('publish_posts') ) ? 'publish' : 'pending';\n\t} else {\n\t\t// Author not found in DB, set status to pending. Author already set to admin.\n\t\t$post_status = 'pending';\n\t}\n\n\t$subject = trim($subject);\n\n\tif ( $content_type == 'multipart/alternative' ) {\n\t\t$content = explode('--'.$boundary, $content);\n\t\t$content = $content[2];\n\n\t\t// Match case-insensitive content-transfer-encoding.\n\t\tif ( preg_match( '/Content-Transfer-Encoding: quoted-printable/i', $content, $delim) ) {\n\t\t\t$content = explode($delim[0], $content);\n\t\t\t$content = $content[1];\n\t\t}\n\t\t$content = strip_tags($content, '<img><p><br><i><b><u><em><strong><strike><font><span><div>');\n\t}\n\t$content = trim($content);\n\n\t/**\n\t * Filter the original content of the email.\n\t *\n\t * Give Post-By-Email extending plugins full access to the content, either\n\t * the raw content, or the content of the last quoted-printable section.\n\t *\n\t * @since 2.8.0\n\t *\n\t * @param string $content The original email content.\n\t */\n\t$content = apply_filters( 'wp_mail_original_content', $content );\n\n\tif ( false !== stripos($content_transfer_encoding, \"quoted-printable\") ) {\n\t\t$content = quoted_printable_decode($content);\n\t}\n\n\tif ( function_exists('iconv') && ! empty( $charset ) ) {\n\t\t$content = iconv($charset, get_option('blog_charset'), $content);\n\t}\n\n\t// Captures any text in the body after $phone_delim as the body\n\t$content = explode($phone_delim, $content);\n\t$content = empty( $content[1] ) ? $content[0] : $content[1];\n\n\t$content = trim($content);\n\n\t/**\n\t * Filter the content of the post submitted by email before saving.\n\t *\n\t * @since 1.2.0\n\t *\n\t * @param string $content The email content.\n\t */\n\t$post_content = apply_filters( 'phone_content', $content );\n\n\t$post_title = xmlrpc_getposttitle($content);\n\n\tif ($post_title == '') $post_title = $subject;\n\n\t$post_category = array(get_option('default_email_category'));\n\n\t$post_data = compact('post_content','post_title','post_date','post_date_gmt','post_author','post_category', 'post_status');\n\t$post_data = wp_slash($post_data);\n\n\t$post_ID = wp_insert_post($post_data);\n\tif ( is_wp_error( $post_ID ) )\n\t\techo \"\\n\" . $post_ID->get_error_message();\n\n\t// We couldn't post, for whatever reason. Better move forward to the next email.\n\tif ( empty( $post_ID ) )\n\t\tcontinue;\n\n\t/**\n\t * Fires after a post submitted by email is published.\n\t *\n\t * @since 1.2.0\n\t *\n\t * @param int $post_ID The post ID.\n\t */\n\tdo_action( 'publish_phone', $post_ID );\n\n\techo \"\\n<p><strong>\" . __( 'Author:' ) . '</strong> ' . esc_html( $post_author ) . '</p>';\n\techo \"\\n<p><strong>\" . __( 'Posted title:' ) . '</strong> ' . esc_html( $post_title ) . '</p>';\n\n\tif(!$pop3->delete($i)) {\n\t\techo '<p>' . sprintf(\n\t\t\t/* translators: %s: POP3 error */\n\t\t\t__( 'Oops: %s' ),\n\t\t\tesc_html( $pop3->ERROR )\n\t\t) . '</p>';\n\t\t$pop3->reset();\n\t\texit;\n\t} else {\n\t\techo '<p>' . sprintf(\n\t\t\t/* translators: %s: the message ID */\n\t\t\t__( 'Mission complete. Message %s deleted.' ),\n\t\t\t'<strong>' . $i . '</strong>'\n\t\t) . '</p>';\n\t}\n\n}\n\n$pop3->quit();\n"
        },
        {
          "name": "wp-settings.php",
          "type": "blob",
          "size": 12.798828125,
          "content": "<?php\n/**\n * Used to set up and fix common variables and include\n * the WordPress procedural and class library.\n *\n * Allows for some configuration in wp-config.php (see default-constants.php)\n *\n * @internal This file must be parsable by PHP4.\n *\n * @package WordPress\n */\n\n/**\n * Stores the location of the WordPress directory of functions, classes, and core content.\n *\n * @since 1.0.0\n */\ndefine( 'WPINC', 'wp-includes' );\n\n// Include files required for initialization.\nrequire( ABSPATH . WPINC . '/load.php' );\nrequire( ABSPATH . WPINC . '/default-constants.php' );\n\n/*\n * These can't be directly globalized in version.php. When updating,\n * we're including version.php from another install and don't want\n * these values to be overridden if already set.\n */\nglobal $wp_version, $wp_db_version, $tinymce_version, $required_php_version, $required_mysql_version, $wp_local_package;\nrequire( ABSPATH . WPINC . '/version.php' );\n\n/**\n * If not already configured, `$blog_id` will default to 1 in a single site\n * configuration. In multisite, it will be overridden by default in ms-settings.php.\n *\n * @global int $blog_id\n * @since 2.0.0\n */\nglobal $blog_id;\n\n// Set initial default constants including WP_MEMORY_LIMIT, WP_MAX_MEMORY_LIMIT, WP_DEBUG, SCRIPT_DEBUG, WP_CONTENT_DIR and WP_CACHE.\nwp_initial_constants();\n\n// Check for the required PHP version and for the MySQL extension or a database drop-in.\nwp_check_php_mysql_versions();\n\n// Disable magic quotes at runtime. Magic quotes are added using wpdb later in wp-settings.php.\n@ini_set( 'magic_quotes_runtime', 0 );\n@ini_set( 'magic_quotes_sybase',  0 );\n\n// WordPress calculates offsets from UTC.\ndate_default_timezone_set( 'UTC' );\n\n// Turn register_globals off.\nwp_unregister_GLOBALS();\n\n// Standardize $_SERVER variables across setups.\nwp_fix_server_vars();\n\n// Check if we have received a request due to missing favicon.ico\nwp_favicon_request();\n\n// Check if we're in maintenance mode.\nwp_maintenance();\n\n// Start loading timer.\ntimer_start();\n\n// Check if we're in WP_DEBUG mode.\nwp_debug_mode();\n\n// For an advanced caching plugin to use. Uses a static drop-in because you would only want one.\nif ( WP_CACHE )\n\tWP_DEBUG ? include( WP_CONTENT_DIR . '/advanced-cache.php' ) : @include( WP_CONTENT_DIR . '/advanced-cache.php' );\n\n// Define WP_LANG_DIR if not set.\nwp_set_lang_dir();\n\n// Load early WordPress files.\nrequire( ABSPATH . WPINC . '/compat.php' );\nrequire( ABSPATH . WPINC . '/functions.php' );\nrequire( ABSPATH . WPINC . '/class-wp.php' );\nrequire( ABSPATH . WPINC . '/class-wp-error.php' );\nrequire( ABSPATH . WPINC . '/plugin.php' );\nrequire( ABSPATH . WPINC . '/pomo/mo.php' );\n\n// Include the wpdb class and, if present, a db.php database drop-in.\nrequire_wp_db();\n\n// Set the database table prefix and the format specifiers for database table columns.\n$GLOBALS['table_prefix'] = $table_prefix;\nwp_set_wpdb_vars();\n\n// Start the WordPress object cache, or an external object cache if the drop-in is present.\nwp_start_object_cache();\n\n// Attach the default filters.\nrequire( ABSPATH . WPINC . '/default-filters.php' );\n\n// Initialize multisite if enabled.\nif ( is_multisite() ) {\n\trequire( ABSPATH . WPINC . '/ms-blogs.php' );\n\trequire( ABSPATH . WPINC . '/ms-settings.php' );\n} elseif ( ! defined( 'MULTISITE' ) ) {\n\tdefine( 'MULTISITE', false );\n}\n\nregister_shutdown_function( 'shutdown_action_hook' );\n\n// Stop most of WordPress from being loaded if we just want the basics.\nif ( SHORTINIT )\n\treturn false;\n\n// Load the L10n library.\nrequire_once( ABSPATH . WPINC . '/l10n.php' );\n\n// Run the installer if WordPress is not installed.\nwp_not_installed();\n\n// Load most of WordPress.\nrequire( ABSPATH . WPINC . '/class-wp-walker.php' );\nrequire( ABSPATH . WPINC . '/class-wp-ajax-response.php' );\nrequire( ABSPATH . WPINC . '/formatting.php' );\nrequire( ABSPATH . WPINC . '/capabilities.php' );\nrequire( ABSPATH . WPINC . '/class-wp-roles.php' );\nrequire( ABSPATH . WPINC . '/class-wp-role.php' );\nrequire( ABSPATH . WPINC . '/class-wp-user.php' );\nrequire( ABSPATH . WPINC . '/query.php' );\nrequire( ABSPATH . WPINC . '/date.php' );\nrequire( ABSPATH . WPINC . '/theme.php' );\nrequire( ABSPATH . WPINC . '/class-wp-theme.php' );\nrequire( ABSPATH . WPINC . '/template.php' );\nrequire( ABSPATH . WPINC . '/user.php' );\nrequire( ABSPATH . WPINC . '/class-wp-user-query.php' );\nrequire( ABSPATH . WPINC . '/session.php' );\nrequire( ABSPATH . WPINC . '/meta.php' );\nrequire( ABSPATH . WPINC . '/class-wp-meta-query.php' );\nrequire( ABSPATH . WPINC . '/class-wp-metadata-lazyloader.php' );\nrequire( ABSPATH . WPINC . '/general-template.php' );\nrequire( ABSPATH . WPINC . '/link-template.php' );\nrequire( ABSPATH . WPINC . '/author-template.php' );\nrequire( ABSPATH . WPINC . '/post.php' );\nrequire( ABSPATH . WPINC . '/class-walker-page.php' );\nrequire( ABSPATH . WPINC . '/class-walker-page-dropdown.php' );\nrequire( ABSPATH . WPINC . '/class-wp-post.php' );\nrequire( ABSPATH . WPINC . '/post-template.php' );\nrequire( ABSPATH . WPINC . '/revision.php' );\nrequire( ABSPATH . WPINC . '/post-formats.php' );\nrequire( ABSPATH . WPINC . '/post-thumbnail-template.php' );\nrequire( ABSPATH . WPINC . '/category.php' );\nrequire( ABSPATH . WPINC . '/class-walker-category.php' );\nrequire( ABSPATH . WPINC . '/class-walker-category-dropdown.php' );\nrequire( ABSPATH . WPINC . '/category-template.php' );\nrequire( ABSPATH . WPINC . '/comment.php' );\nrequire( ABSPATH . WPINC . '/class-wp-comment.php' );\nrequire( ABSPATH . WPINC . '/class-wp-comment-query.php' );\nrequire( ABSPATH . WPINC . '/class-walker-comment.php' );\nrequire( ABSPATH . WPINC . '/comment-template.php' );\nrequire( ABSPATH . WPINC . '/rewrite.php' );\nrequire( ABSPATH . WPINC . '/class-wp-rewrite.php' );\nrequire( ABSPATH . WPINC . '/feed.php' );\nrequire( ABSPATH . WPINC . '/bookmark.php' );\nrequire( ABSPATH . WPINC . '/bookmark-template.php' );\nrequire( ABSPATH . WPINC . '/kses.php' );\nrequire( ABSPATH . WPINC . '/cron.php' );\nrequire( ABSPATH . WPINC . '/deprecated.php' );\nrequire( ABSPATH . WPINC . '/script-loader.php' );\nrequire( ABSPATH . WPINC . '/taxonomy.php' );\nrequire( ABSPATH . WPINC . '/class-wp-term.php' );\nrequire( ABSPATH . WPINC . '/class-wp-tax-query.php' );\nrequire( ABSPATH . WPINC . '/update.php' );\nrequire( ABSPATH . WPINC . '/canonical.php' );\nrequire( ABSPATH . WPINC . '/shortcodes.php' );\nrequire( ABSPATH . WPINC . '/embed.php' );\nrequire( ABSPATH . WPINC . '/class-wp-embed.php' );\nrequire( ABSPATH . WPINC . '/class-wp-oembed-controller.php' );\nrequire( ABSPATH . WPINC . '/media.php' );\nrequire( ABSPATH . WPINC . '/http.php' );\nrequire( ABSPATH . WPINC . '/class-http.php' );\nrequire( ABSPATH . WPINC . '/class-wp-http-streams.php' );\nrequire( ABSPATH . WPINC . '/class-wp-http-curl.php' );\nrequire( ABSPATH . WPINC . '/class-wp-http-proxy.php' );\nrequire( ABSPATH . WPINC . '/class-wp-http-cookie.php' );\nrequire( ABSPATH . WPINC . '/class-wp-http-encoding.php' );\nrequire( ABSPATH . WPINC . '/class-wp-http-response.php' );\nrequire( ABSPATH . WPINC . '/widgets.php' );\nrequire( ABSPATH . WPINC . '/class-wp-widget.php' );\nrequire( ABSPATH . WPINC . '/class-wp-widget-factory.php' );\nrequire( ABSPATH . WPINC . '/nav-menu.php' );\nrequire( ABSPATH . WPINC . '/nav-menu-template.php' );\nrequire( ABSPATH . WPINC . '/admin-bar.php' );\nrequire( ABSPATH . WPINC . '/rest-api.php' );\nrequire( ABSPATH . WPINC . '/rest-api/class-wp-rest-server.php' );\nrequire( ABSPATH . WPINC . '/rest-api/class-wp-rest-response.php' );\nrequire( ABSPATH . WPINC . '/rest-api/class-wp-rest-request.php' );\n\n// Load multisite-specific files.\nif ( is_multisite() ) {\n\trequire( ABSPATH . WPINC . '/ms-functions.php' );\n\trequire( ABSPATH . WPINC . '/ms-default-filters.php' );\n\trequire( ABSPATH . WPINC . '/ms-deprecated.php' );\n}\n\n// Define constants that rely on the API to obtain the default value.\n// Define must-use plugin directory constants, which may be overridden in the sunrise.php drop-in.\nwp_plugin_directory_constants();\n\n$GLOBALS['wp_plugin_paths'] = array();\n\n// Load must-use plugins.\nforeach ( wp_get_mu_plugins() as $mu_plugin ) {\n\tinclude_once( $mu_plugin );\n}\nunset( $mu_plugin );\n\n// Load network activated plugins.\nif ( is_multisite() ) {\n\tforeach ( wp_get_active_network_plugins() as $network_plugin ) {\n\t\twp_register_plugin_realpath( $network_plugin );\n\t\tinclude_once( $network_plugin );\n\t}\n\tunset( $network_plugin );\n}\n\n/**\n * Fires once all must-use and network-activated plugins have loaded.\n *\n * @since 2.8.0\n */\ndo_action( 'muplugins_loaded' );\n\nif ( is_multisite() )\n\tms_cookie_constants(  );\n\n// Define constants after multisite is loaded.\nwp_cookie_constants();\n\n// Define and enforce our SSL constants\nwp_ssl_constants();\n\n// Create common globals.\nrequire( ABSPATH . WPINC . '/vars.php' );\n\n// Make taxonomies and posts available to plugins and themes.\n// @plugin authors: warning: these get registered again on the init hook.\ncreate_initial_taxonomies();\ncreate_initial_post_types();\n\n// Register the default theme directory root\nregister_theme_directory( get_theme_root() );\n\n// Load active plugins.\nforeach ( wp_get_active_and_valid_plugins() as $plugin ) {\n\twp_register_plugin_realpath( $plugin );\n\tinclude_once( $plugin );\n}\nunset( $plugin );\n\n// Load pluggable functions.\nrequire( ABSPATH . WPINC . '/pluggable.php' );\nrequire( ABSPATH . WPINC . '/pluggable-deprecated.php' );\n\n// Set internal encoding.\nwp_set_internal_encoding();\n\n// Run wp_cache_postload() if object cache is enabled and the function exists.\nif ( WP_CACHE && function_exists( 'wp_cache_postload' ) )\n\twp_cache_postload();\n\n/**\n * Fires once activated plugins have loaded.\n *\n * Pluggable functions are also available at this point in the loading order.\n *\n * @since 1.5.0\n */\ndo_action( 'plugins_loaded' );\n\n// Define constants which affect functionality if not already defined.\nwp_functionality_constants();\n\n// Add magic quotes and set up $_REQUEST ( $_GET + $_POST )\nwp_magic_quotes();\n\n/**\n * Fires when comment cookies are sanitized.\n *\n * @since 2.0.11\n */\ndo_action( 'sanitize_comment_cookies' );\n\n/**\n * WordPress Query object\n * @global WP_Query $wp_the_query\n * @since 2.0.0\n */\n$GLOBALS['wp_the_query'] = new WP_Query();\n\n/**\n * Holds the reference to @see $wp_the_query\n * Use this global for WordPress queries\n * @global WP_Query $wp_query\n * @since 1.5.0\n */\n$GLOBALS['wp_query'] = $GLOBALS['wp_the_query'];\n\n/**\n * Holds the WordPress Rewrite object for creating pretty URLs\n * @global WP_Rewrite $wp_rewrite\n * @since 1.5.0\n */\n$GLOBALS['wp_rewrite'] = new WP_Rewrite();\n\n/**\n * WordPress Object\n * @global WP $wp\n * @since 2.0.0\n */\n$GLOBALS['wp'] = new WP();\n\n/**\n * WordPress Widget Factory Object\n * @global WP_Widget_Factory $wp_widget_factory\n * @since 2.8.0\n */\n$GLOBALS['wp_widget_factory'] = new WP_Widget_Factory();\n\n/**\n * WordPress User Roles\n * @global WP_Roles $wp_roles\n * @since 2.0.0\n */\n$GLOBALS['wp_roles'] = new WP_Roles();\n\n/**\n * Fires before the theme is loaded.\n *\n * @since 2.6.0\n */\ndo_action( 'setup_theme' );\n\n// Define the template related constants.\nwp_templating_constants(  );\n\n// Load the default text localization domain.\nload_default_textdomain();\n\n$locale = get_locale();\n$locale_file = WP_LANG_DIR . \"/$locale.php\";\nif ( ( 0 === validate_file( $locale ) ) && is_readable( $locale_file ) )\n\trequire( $locale_file );\nunset( $locale_file );\n\n// Pull in locale data after loading text domain.\nrequire_once( ABSPATH . WPINC . '/locale.php' );\n\n/**\n * WordPress Locale object for loading locale domain date and various strings.\n * @global WP_Locale $wp_locale\n * @since 2.1.0\n */\n$GLOBALS['wp_locale'] = new WP_Locale();\n\n// Load the functions for the active theme, for both parent and child theme if applicable.\nif ( ! wp_installing() || 'wp-activate.php' === $pagenow ) {\n\tif ( TEMPLATEPATH !== STYLESHEETPATH && file_exists( STYLESHEETPATH . '/functions.php' ) )\n\t\tinclude( STYLESHEETPATH . '/functions.php' );\n\tif ( file_exists( TEMPLATEPATH . '/functions.php' ) )\n\t\tinclude( TEMPLATEPATH . '/functions.php' );\n}\n\n/**\n * Fires after the theme is loaded.\n *\n * @since 3.0.0\n */\ndo_action( 'after_setup_theme' );\n\n// Set up current user.\n$GLOBALS['wp']->init();\n\n/**\n * Fires after WordPress has finished loading but before any headers are sent.\n *\n * Most of WP is loaded at this stage, and the user is authenticated. WP continues\n * to load on the init hook that follows (e.g. widgets), and many plugins instantiate\n * themselves on it for all sorts of reasons (e.g. they need a user, a taxonomy, etc.).\n *\n * If you wish to plug an action once WP is loaded, use the wp_loaded hook below.\n *\n * @since 1.5.0\n */\ndo_action( 'init' );\n\n// Check site status\nif ( is_multisite() ) {\n\tif ( true !== ( $file = ms_site_check() ) ) {\n\t\trequire( $file );\n\t\tdie();\n\t}\n\tunset($file);\n}\n\n/**\n * This hook is fired once WP, all plugins, and the theme are fully loaded and instantiated.\n *\n * AJAX requests should use wp-admin/admin-ajax.php. admin-ajax.php can handle requests for\n * users not logged in.\n *\n * @link https://codex.wordpress.org/AJAX_in_Plugins\n *\n * @since 3.0.0\n */\ndo_action( 'wp_loaded' );\n"
        },
        {
          "name": "wp-signup.php",
          "type": "blob",
          "size": 27.953125,
          "content": "<?php\n\n/** Sets up the WordPress Environment. */\nrequire( dirname(__FILE__) . '/wp-load.php' );\n\nadd_action( 'wp_head', 'wp_no_robots' );\n\nrequire( dirname( __FILE__ ) . '/wp-blog-header.php' );\n\nif ( is_array( get_site_option( 'illegal_names' )) && isset( $_GET[ 'new' ] ) && in_array( $_GET[ 'new' ], get_site_option( 'illegal_names' ) ) ) {\n\twp_redirect( network_home_url() );\n\tdie();\n}\n\n/**\n * Prints signup_header via wp_head\n *\n * @since MU\n */\nfunction do_signup_header() {\n\t/**\n\t * Fires within the head section of the site sign-up screen.\n\t *\n\t * @since 3.0.0\n\t */\n\tdo_action( 'signup_header' );\n}\nadd_action( 'wp_head', 'do_signup_header' );\n\nif ( !is_multisite() ) {\n\twp_redirect( wp_registration_url() );\n\tdie();\n}\n\nif ( !is_main_site() ) {\n\twp_redirect( network_site_url( 'wp-signup.php' ) );\n\tdie();\n}\n\n// Fix for page title\n$wp_query->is_404 = false;\n\n/**\n * Fires before the Site Signup page is loaded.\n *\n * @since 4.4.0\n */\ndo_action( 'before_signup_header' );\n\n/**\n * Prints styles for front-end Multisite signup pages\n *\n * @since MU\n */\nfunction wpmu_signup_stylesheet() {\n\t?>\n\t<style type=\"text/css\">\n\t\t.mu_register { width: 90%; margin:0 auto; }\n\t\t.mu_register form { margin-top: 2em; }\n\t\t.mu_register .error { font-weight:700; padding:10px; color:#333333; background:#FFEBE8; border:1px solid #CC0000; }\n\t\t.mu_register input[type=\"submit\"],\n\t\t\t.mu_register #blog_title,\n\t\t\t.mu_register #user_email,\n\t\t\t.mu_register #blogname,\n\t\t\t.mu_register #user_name { width:100%; font-size: 24px; margin:5px 0; }\n\t\t.mu_register #site-language { display: block; }\n\t\t.mu_register .prefix_address,\n\t\t\t.mu_register .suffix_address {font-size: 18px;display:inline; }\n\t\t.mu_register label { font-weight:700; font-size:15px; display:block; margin:10px 0; }\n\t\t.mu_register label.checkbox { display:inline; }\n\t\t.mu_register .mu_alert { font-weight:700; padding:10px; color:#333333; background:#ffffe0; border:1px solid #e6db55; }\n\t</style>\n\t<?php\n}\n\nadd_action( 'wp_head', 'wpmu_signup_stylesheet' );\nget_header( 'wp-signup' );\n\n/**\n * Fires before the site sign-up form.\n *\n * @since 3.0.0\n */\ndo_action( 'before_signup_form' );\n?>\n<div id=\"signup-content\" class=\"widecolumn\">\n<div class=\"mu_register wp-signup-container\">\n<?php\n/**\n * Generates and displays the Signup and Create Site forms\n *\n * @since MU\n *\n * @param string $blogname The new site name\n * @param string $blog_title The new site title\n * @param array $errors\n */\nfunction show_blog_form( $blogname = '', $blog_title = '', $errors = '' ) {\n\t$current_site = get_current_site();\n\t// Blog name\n\tif ( !is_subdomain_install() )\n\t\techo '<label for=\"blogname\">' . __('Site Name:') . '</label>';\n\telse\n\t\techo '<label for=\"blogname\">' . __('Site Domain:') . '</label>';\n\n\tif ( $errmsg = $errors->get_error_message('blogname') ) { ?>\n\t\t<p class=\"error\"><?php echo $errmsg ?></p>\n\t<?php }\n\n\tif ( !is_subdomain_install() )\n\t\techo '<span class=\"prefix_address\">' . $current_site->domain . $current_site->path . '</span><input name=\"blogname\" type=\"text\" id=\"blogname\" value=\"'. esc_attr($blogname) .'\" maxlength=\"60\" /><br />';\n\telse\n\t\techo '<input name=\"blogname\" type=\"text\" id=\"blogname\" value=\"'.esc_attr($blogname).'\" maxlength=\"60\" /><span class=\"suffix_address\">.' . ( $site_domain = preg_replace( '|^www\\.|', '', $current_site->domain ) ) . '</span><br />';\n\n\tif ( !is_user_logged_in() ) {\n\t\tif ( !is_subdomain_install() )\n\t\t\t$site = $current_site->domain . $current_site->path . __( 'sitename' );\n\t\telse\n\t\t\t$site = __( 'domain' ) . '.' . $site_domain . $current_site->path;\n\t\techo '<p>(<strong>' . sprintf( __('Your address will be %s.'), $site ) . '</strong>) ' . __( 'Must be at least 4 characters, letters and numbers only. It cannot be changed, so choose carefully!' ) . '</p>';\n\t}\n\n\t// Blog Title\n\t?>\n\t<label for=\"blog_title\"><?php _e('Site Title:') ?></label>\n\t<?php if ( $errmsg = $errors->get_error_message('blog_title') ) { ?>\n\t\t<p class=\"error\"><?php echo $errmsg ?></p>\n\t<?php }\n\techo '<input name=\"blog_title\" type=\"text\" id=\"blog_title\" value=\"'.esc_attr($blog_title).'\" />';\n\t?>\n\n\t<?php\n\t// Site Language.\n\t$languages = signup_get_available_languages();\n\n\tif ( ! empty( $languages ) ) :\n\t\t?>\n\t\t<p>\n\t\t\t<label for=\"site-language\"><?php _e( 'Site Language:' ); ?></label>\n\t\t\t<?php\n\t\t\t// Network default.\n\t\t\t$lang = get_site_option( 'WPLANG' );\n\n\t\t\tif ( isset( $_POST['WPLANG'] ) ) {\n\t\t\t\t$lang = $_POST['WPLANG'];\n\t\t\t}\n\n\t\t\t// Use US English if the default isn't available.\n\t\t\tif ( ! in_array( $lang, $languages ) ) {\n\t\t\t\t$lang = '';\n\t\t\t}\n\n\t\t\twp_dropdown_languages( array(\n\t\t\t\t'name'                        => 'WPLANG',\n\t\t\t\t'id'                          => 'site-language',\n\t\t\t\t'selected'                    => $lang,\n\t\t\t\t'languages'                   => $languages,\n\t\t\t\t'show_available_translations' => false,\n\t\t\t) );\n\t\t\t?>\n\t\t</p>\n\t<?php endif; // Languages. ?>\n\n\t<div id=\"privacy\">\n        <p class=\"privacy-intro\">\n            <label for=\"blog_public_on\"><?php _e('Privacy:') ?></label>\n            <?php _e( 'Allow search engines to index this site.' ); ?>\n            <br style=\"clear:both\" />\n            <label class=\"checkbox\" for=\"blog_public_on\">\n                <input type=\"radio\" id=\"blog_public_on\" name=\"blog_public\" value=\"1\" <?php if ( !isset( $_POST['blog_public'] ) || $_POST['blog_public'] == '1' ) { ?>checked=\"checked\"<?php } ?> />\n                <strong><?php _e( 'Yes' ); ?></strong>\n            </label>\n            <label class=\"checkbox\" for=\"blog_public_off\">\n                <input type=\"radio\" id=\"blog_public_off\" name=\"blog_public\" value=\"0\" <?php if ( isset( $_POST['blog_public'] ) && $_POST['blog_public'] == '0' ) { ?>checked=\"checked\"<?php } ?> />\n                <strong><?php _e( 'No' ); ?></strong>\n            </label>\n        </p>\n\t</div>\n\n\t<?php\n\t/**\n\t * Fires after the site sign-up form.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param array $errors An array possibly containing 'blogname' or 'blog_title' errors.\n\t */\n\tdo_action( 'signup_blogform', $errors );\n}\n\n/**\n * Validate the new site signup\n *\n * @since MU\n *\n * @return array Contains the new site data and error messages.\n */\nfunction validate_blog_form() {\n\t$user = '';\n\tif ( is_user_logged_in() )\n\t\t$user = wp_get_current_user();\n\n\treturn wpmu_validate_blog_signup($_POST['blogname'], $_POST['blog_title'], $user);\n}\n\n/**\n * Display user registration form\n *\n * @since MU\n *\n * @param string $user_name The entered username\n * @param string $user_email The entered email address\n * @param array $errors\n */\nfunction show_user_form($user_name = '', $user_email = '', $errors = '') {\n\t// User name\n\techo '<label for=\"user_name\">' . __('Username:') . '</label>';\n\tif ( $errmsg = $errors->get_error_message('user_name') ) {\n\t\techo '<p class=\"error\">'.$errmsg.'</p>';\n\t}\n\techo '<input name=\"user_name\" type=\"text\" id=\"user_name\" value=\"'. esc_attr($user_name) .'\" maxlength=\"60\" /><br />';\n\t_e( '(Must be at least 4 characters, letters and numbers only.)' );\n\t?>\n\n\t<label for=\"user_email\"><?php _e( 'Email&nbsp;Address:' ) ?></label>\n\t<?php if ( $errmsg = $errors->get_error_message('user_email') ) { ?>\n\t\t<p class=\"error\"><?php echo $errmsg ?></p>\n\t<?php } ?>\n\t<input name=\"user_email\" type=\"email\" id=\"user_email\" value=\"<?php  echo esc_attr($user_email) ?>\" maxlength=\"200\" /><br /><?php _e('We send your registration email to this address. (Double-check your email address before continuing.)') ?>\n\t<?php\n\tif ( $errmsg = $errors->get_error_message('generic') ) {\n\t\techo '<p class=\"error\">' . $errmsg . '</p>';\n\t}\n\t/**\n\t * Fires at the end of the user registration form on the site sign-up form.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param array $errors An array possibly containing 'user_name' or 'user_email' errors.\n\t */\n\tdo_action( 'signup_extra_fields', $errors );\n}\n\n/**\n * Validate user signup name and email\n *\n * @since MU\n *\n * @return array Contains username, email, and error messages.\n */\nfunction validate_user_form() {\n\treturn wpmu_validate_user_signup($_POST['user_name'], $_POST['user_email']);\n}\n\n/**\n * Allow returning users to sign up for another site\n *\n * @since MU\n *\n * @param string $blogname The new site name\n * @param string $blog_title The new site title.\n * @param array $errors\n */\nfunction signup_another_blog( $blogname = '', $blog_title = '', $errors = '' ) {\n\t$current_user = wp_get_current_user();\n\n\tif ( ! is_wp_error($errors) ) {\n\t\t$errors = new WP_Error();\n\t}\n\n\t$signup_defaults = array(\n\t\t'blogname'   => $blogname,\n\t\t'blog_title' => $blog_title,\n\t\t'errors'     => $errors\n\t);\n\n\t/**\n\t * Filter the default site sign-up variables.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param array $signup_defaults {\n\t *     An array of default site sign-up variables.\n\t *\n\t *     @type string $blogname   The site blogname.\n\t *     @type string $blog_title The site title.\n\t *     @type array  $errors     An array possibly containing 'blogname' or 'blog_title' errors.\n\t * }\n\t */\n\t$filtered_results = apply_filters( 'signup_another_blog_init', $signup_defaults );\n\n\t$blogname = $filtered_results['blogname'];\n\t$blog_title = $filtered_results['blog_title'];\n\t$errors = $filtered_results['errors'];\n\n\techo '<h2>' . sprintf( __( 'Get <em>another</em> %s site in seconds' ), get_current_site()->site_name ) . '</h2>';\n\n\tif ( $errors->get_error_code() ) {\n\t\techo '<p>' . __( 'There was a problem, please correct the form below and try again.' ) . '</p>';\n\t}\n\t?>\n\t<p><?php printf( __( 'Welcome back, %s. By filling out the form below, you can <strong>add another site to your account</strong>. There is no limit to the number of sites you can have, so create to your heart&#8217;s content, but write responsibly!' ), $current_user->display_name ) ?></p>\n\n\t<?php\n\t$blogs = get_blogs_of_user($current_user->ID);\n\tif ( !empty($blogs) ) { ?>\n\n\t\t\t<p><?php _e( 'Sites you are already a member of:' ) ?></p>\n\t\t\t<ul>\n\t\t\t\t<?php foreach ( $blogs as $blog ) {\n\t\t\t\t\t$home_url = get_home_url( $blog->userblog_id );\n\t\t\t\t\techo '<li><a href=\"' . esc_url( $home_url ) . '\">' . $home_url . '</a></li>';\n\t\t\t\t} ?>\n\t\t\t</ul>\n\t<?php } ?>\n\n\t<p><?php _e( 'If you&#8217;re not going to use a great site domain, leave it for a new user. Now have at it!' ) ?></p>\n\t<form id=\"setupform\" method=\"post\" action=\"wp-signup.php\">\n\t\t<input type=\"hidden\" name=\"stage\" value=\"gimmeanotherblog\" />\n\t\t<?php\n\t\t/**\n\t\t * Hidden sign-up form fields output when creating another site or user.\n\t\t *\n\t\t * @since MU\n\t\t *\n\t\t * @param string $context A string describing the steps of the sign-up process. The value can be\n\t\t *                        'create-another-site', 'validate-user', or 'validate-site'.\n\t\t */\n\t\tdo_action( 'signup_hidden_fields', 'create-another-site' );\n\t\t?>\n\t\t<?php show_blog_form($blogname, $blog_title, $errors); ?>\n\t\t<p class=\"submit\"><input type=\"submit\" name=\"submit\" class=\"submit\" value=\"<?php esc_attr_e( 'Create Site' ) ?>\" /></p>\n\t</form>\n\t<?php\n}\n\n/**\n * Validate a new site signup.\n *\n * @since MU\n *\n * @return null|bool True if site signup was validated, false if error.\n *                   The function halts all execution if the user is not logged in.\n */\nfunction validate_another_blog_signup() {\n\tglobal $wpdb, $blogname, $blog_title, $errors, $domain, $path;\n\t$current_user = wp_get_current_user();\n\tif ( ! is_user_logged_in() ) {\n\t\tdie();\n\t}\n\n\t$result = validate_blog_form();\n\n\t// Extracted values set/overwrite globals.\n\t$domain = $result['domain'];\n\t$path = $result['path'];\n\t$blogname = $result['blogname'];\n\t$blog_title = $result['blog_title'];\n\t$errors = $result['errors'];\n\n\tif ( $errors->get_error_code() ) {\n\t\tsignup_another_blog($blogname, $blog_title, $errors);\n\t\treturn false;\n\t}\n\n\t$public = (int) $_POST['blog_public'];\n\n\t$blog_meta_defaults = array(\n\t\t'lang_id' => 1,\n\t\t'public'  => $public\n\t);\n\n\t// Handle the language setting for the new site.\n\tif ( ! empty( $_POST['WPLANG'] ) ) {\n\n\t\t$languages = signup_get_available_languages();\n\n\t\tif ( in_array( $_POST['WPLANG'], $languages ) ) {\n\t\t\t$language = wp_unslash( sanitize_text_field( $_POST['WPLANG'] ) );\n\n\t\t\tif ( $language ) {\n\t\t\t\t$blog_meta_defaults['WPLANG'] = $language;\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Filter the new site meta variables.\n\t *\n\t * @since MU\n\t * @deprecated 3.0.0 Use the 'add_signup_meta' filter instead.\n\t *\n\t * @param array $blog_meta_defaults An array of default blog meta variables.\n\t */\n\t$meta_defaults = apply_filters( 'signup_create_blog_meta', $blog_meta_defaults );\n\n\t/**\n\t * Filter the new default site meta variables.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param array $meta {\n\t *     An array of default site meta variables.\n\t *\n\t *     @type int $lang_id     The language ID.\n\t *     @type int $blog_public Whether search engines should be discouraged from indexing the site. 1 for true, 0 for false.\n\t * }\n\t */\n\t$meta = apply_filters( 'add_signup_meta', $meta_defaults );\n\n\t$blog_id = wpmu_create_blog( $domain, $path, $blog_title, $current_user->ID, $meta, $wpdb->siteid );\n\n\tif ( is_wp_error( $blog_id ) ) {\n\t\treturn false;\n\t}\n\n\tconfirm_another_blog_signup( $domain, $path, $blog_title, $current_user->user_login, $current_user->user_email, $meta, $blog_id );\n\treturn true;\n}\n\n/**\n * Confirm a new site signup.\n *\n * @since MU\n * @since 4.4.0 Added the `$blog_id` parameter.\n *\n * @param string $domain     The domain URL.\n * @param string $path       The site root path.\n * @param string $blog_title The site title.\n * @param string $user_name  The username.\n * @param string $user_email The user's email address.\n * @param array  $meta       Any additional meta from the 'add_signup_meta' filter in validate_blog_signup().\n * @param int    $blog_id    The site ID.\n */\nfunction confirm_another_blog_signup( $domain, $path, $blog_title, $user_name, $user_email = '', $meta = array(), $blog_id = 0 ) {\n\n\tif ( $blog_id ) {\n\t\tswitch_to_blog( $blog_id );\n\t\t$home_url  = home_url( '/' );\n\t\t$login_url = wp_login_url();\n\t\trestore_current_blog();\n\t} else {\n\t\t$home_url  = 'http://' . $domain . $path;\n\t\t$login_url = 'http://' . $domain . $path . 'wp-login.php';\n\t}\n\n\t$site = sprintf( '<a href=\"%1$s\">%2$s</a>',\n\t\tesc_url( $home_url ),\n\t\t$blog_title\n\t);\n\n\t?>\n\t<h2><?php printf( __( 'The site %s is yours.' ), $site ); ?></h2>\n\t<p>\n\t\t<?php printf(\n\t\t\t__( '<a href=\"%1$s\">%2$s</a> is your new site. <a href=\"%3$s\">Log in</a> as &#8220;%4$s&#8221; using your existing password.' ),\n\t\t\tesc_url( $home_url ),\n\t\t\tuntrailingslashit( $domain . $path ),\n\t\t\tesc_url( $login_url ),\n\t\t\t$user_name\n\t\t); ?>\n\t</p>\n\t<?php\n\t/**\n\t * Fires when the site or user sign-up process is complete.\n\t *\n\t * @since 3.0.0\n\t */\n\tdo_action( 'signup_finished' );\n}\n\n/**\n * Setup the new user signup process\n *\n * @since MU\n *\n * @param string $user_name The username\n * @param string $user_email The user's email\n * @param array $errors\n */\nfunction signup_user( $user_name = '', $user_email = '', $errors = '' ) {\n\tglobal $active_signup;\n\n\tif ( !is_wp_error($errors) )\n\t\t$errors = new WP_Error();\n\n\t$signup_for = isset( $_POST[ 'signup_for' ] ) ? esc_html( $_POST[ 'signup_for' ] ) : 'blog';\n\n\t$signup_user_defaults = array(\n\t\t'user_name'  => $user_name,\n\t\t'user_email' => $user_email,\n\t\t'errors'     => $errors,\n\t);\n\n\t/**\n\t * Filter the default user variables used on the user sign-up form.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param array $signup_user_defaults {\n\t *     An array of default user variables.\n\t *\n\t *     @type string $user_name  The user username.\n\t *     @type string $user_email The user email address.\n\t *     @type array  $errors     An array of possible errors relevant to the sign-up user.\n\t * }\n\t */\n\t$filtered_results = apply_filters( 'signup_user_init', $signup_user_defaults );\n\t$user_name = $filtered_results['user_name'];\n\t$user_email = $filtered_results['user_email'];\n\t$errors = $filtered_results['errors'];\n\n\t?>\n\n\t<h2><?php printf( __( 'Get your own %s account in seconds' ), get_current_site()->site_name ) ?></h2>\n\t<form id=\"setupform\" method=\"post\" action=\"wp-signup.php\" novalidate=\"novalidate\">\n\t\t<input type=\"hidden\" name=\"stage\" value=\"validate-user-signup\" />\n\t\t<?php\n\t\t/** This action is documented in wp-signup.php */\n\t\tdo_action( 'signup_hidden_fields', 'validate-user' );\n\t\t?>\n\t\t<?php show_user_form($user_name, $user_email, $errors); ?>\n\n\t\t<p>\n\t\t<?php if ( $active_signup == 'blog' ) { ?>\n\t\t\t<input id=\"signupblog\" type=\"hidden\" name=\"signup_for\" value=\"blog\" />\n\t\t<?php } elseif ( $active_signup == 'user' ) { ?>\n\t\t\t<input id=\"signupblog\" type=\"hidden\" name=\"signup_for\" value=\"user\" />\n\t\t<?php } else { ?>\n\t\t\t<input id=\"signupblog\" type=\"radio\" name=\"signup_for\" value=\"blog\" <?php checked( $signup_for, 'blog' ); ?> />\n\t\t\t<label class=\"checkbox\" for=\"signupblog\"><?php _e('Gimme a site!') ?></label>\n\t\t\t<br />\n\t\t\t<input id=\"signupuser\" type=\"radio\" name=\"signup_for\" value=\"user\" <?php checked( $signup_for, 'user' ); ?> />\n\t\t\t<label class=\"checkbox\" for=\"signupuser\"><?php _e('Just a username, please.') ?></label>\n\t\t<?php } ?>\n\t\t</p>\n\n\t\t<p class=\"submit\"><input type=\"submit\" name=\"submit\" class=\"submit\" value=\"<?php esc_attr_e('Next') ?>\" /></p>\n\t</form>\n\t<?php\n}\n\n/**\n * Validate the new user signup\n *\n * @since MU\n *\n * @return bool True if new user signup was validated, false if error\n */\nfunction validate_user_signup() {\n\t$result = validate_user_form();\n\t$user_name = $result['user_name'];\n\t$user_email = $result['user_email'];\n\t$errors = $result['errors'];\n\n\tif ( $errors->get_error_code() ) {\n\t\tsignup_user($user_name, $user_email, $errors);\n\t\treturn false;\n\t}\n\n\tif ( 'blog' == $_POST['signup_for'] ) {\n\t\tsignup_blog($user_name, $user_email);\n\t\treturn false;\n\t}\n\n\t/** This filter is documented in wp-signup.php */\n\twpmu_signup_user( $user_name, $user_email, apply_filters( 'add_signup_meta', array() ) );\n\n\tconfirm_user_signup($user_name, $user_email);\n\treturn true;\n}\n\n/**\n * New user signup confirmation\n *\n * @since MU\n *\n * @param string $user_name The username\n * @param string $user_email The user's email address\n */\nfunction confirm_user_signup($user_name, $user_email) {\n\t?>\n\t<h2><?php /* translators: %s: username */\n\tprintf( __( '%s is your new username' ), $user_name) ?></h2>\n\t<p><?php _e( 'But, before you can start using your new username, <strong>you must activate it</strong>.' ) ?></p>\n\t<p><?php /* translators: %s: email address */\n\tprintf( __( 'Check your inbox at %s and click the link given.' ), '<strong>' . $user_email . '</strong>' ); ?></p>\n\t<p><?php _e( 'If you do not activate your username within two days, you will have to sign up again.' ); ?></p>\n\t<?php\n\t/** This action is documented in wp-signup.php */\n\tdo_action( 'signup_finished' );\n}\n\n/**\n * Setup the new site signup\n *\n * @since MU\n *\n * @param string $user_name The username\n * @param string $user_email The user's email address\n * @param string $blogname The site name\n * @param string $blog_title The site title\n * @param array $errors\n */\nfunction signup_blog($user_name = '', $user_email = '', $blogname = '', $blog_title = '', $errors = '') {\n\tif ( !is_wp_error($errors) )\n\t\t$errors = new WP_Error();\n\n\t$signup_blog_defaults = array(\n\t\t'user_name'  => $user_name,\n\t\t'user_email' => $user_email,\n\t\t'blogname'   => $blogname,\n\t\t'blog_title' => $blog_title,\n\t\t'errors'     => $errors\n\t);\n\n\t/**\n\t * Filter the default site creation variables for the site sign-up form.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param array $signup_blog_defaults {\n\t *     An array of default site creation variables.\n\t *\n\t *     @type string $user_name  The user username.\n\t *     @type string $user_email The user email address.\n\t *     @type string $blogname   The blogname.\n\t *     @type string $blog_title The title of the site.\n\t *     @type array  $errors     An array of possible errors relevant to new site creation variables.\n\t * }\n\t */\n\t$filtered_results = apply_filters( 'signup_blog_init', $signup_blog_defaults );\n\n\t$user_name = $filtered_results['user_name'];\n\t$user_email = $filtered_results['user_email'];\n\t$blogname = $filtered_results['blogname'];\n\t$blog_title = $filtered_results['blog_title'];\n\t$errors = $filtered_results['errors'];\n\n\tif ( empty($blogname) )\n\t\t$blogname = $user_name;\n\t?>\n\t<form id=\"setupform\" method=\"post\" action=\"wp-signup.php\">\n\t\t<input type=\"hidden\" name=\"stage\" value=\"validate-blog-signup\" />\n\t\t<input type=\"hidden\" name=\"user_name\" value=\"<?php echo esc_attr($user_name) ?>\" />\n\t\t<input type=\"hidden\" name=\"user_email\" value=\"<?php echo esc_attr($user_email) ?>\" />\n\t\t<?php\n\t\t/** This action is documented in wp-signup.php */\n\t\tdo_action( 'signup_hidden_fields', 'validate-site' );\n\t\t?>\n\t\t<?php show_blog_form($blogname, $blog_title, $errors); ?>\n\t\t<p class=\"submit\"><input type=\"submit\" name=\"submit\" class=\"submit\" value=\"<?php esc_attr_e('Signup') ?>\" /></p>\n\t</form>\n\t<?php\n}\n\n/**\n * Validate new site signup\n *\n * @since MU\n *\n * @return bool True if the site signup was validated, false if error\n */\nfunction validate_blog_signup() {\n\t// Re-validate user info.\n\t$user_result = wpmu_validate_user_signup( $_POST['user_name'], $_POST['user_email'] );\n\t$user_name = $user_result['user_name'];\n\t$user_email = $user_result['user_email'];\n\t$user_errors = $user_result['errors'];\n\n\tif ( $user_errors->get_error_code() ) {\n\t\tsignup_user( $user_name, $user_email, $user_errors );\n\t\treturn false;\n\t}\n\n\t$result = wpmu_validate_blog_signup( $_POST['blogname'], $_POST['blog_title'] );\n\t$domain = $result['domain'];\n\t$path = $result['path'];\n\t$blogname = $result['blogname'];\n\t$blog_title = $result['blog_title'];\n\t$errors = $result['errors'];\n\n\tif ( $errors->get_error_code() ) {\n\t\tsignup_blog($user_name, $user_email, $blogname, $blog_title, $errors);\n\t\treturn false;\n\t}\n\n\t$public = (int) $_POST['blog_public'];\n\t$signup_meta = array ('lang_id' => 1, 'public' => $public);\n\n\t// Handle the language setting for the new site.\n\tif ( ! empty( $_POST['WPLANG'] ) ) {\n\n\t\t$languages = signup_get_available_languages();\n\n\t\tif ( in_array( $_POST['WPLANG'], $languages ) ) {\n\t\t\t$language = wp_unslash( sanitize_text_field( $_POST['WPLANG'] ) );\n\n\t\t\tif ( $language ) {\n\t\t\t\t$signup_meta['WPLANG'] = $language;\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/** This filter is documented in wp-signup.php */\n\t$meta = apply_filters( 'add_signup_meta', $signup_meta );\n\n\twpmu_signup_blog($domain, $path, $blog_title, $user_name, $user_email, $meta);\n\tconfirm_blog_signup($domain, $path, $blog_title, $user_name, $user_email, $meta);\n\treturn true;\n}\n\n/**\n * New site signup confirmation\n *\n * @since MU\n *\n * @param string $domain The domain URL\n * @param string $path The site root path\n * @param string $blog_title The new site title\n * @param string $user_name The user's username\n * @param string $user_email The user's email address\n * @param array $meta Any additional meta from the 'add_signup_meta' filter in validate_blog_signup()\n */\nfunction confirm_blog_signup( $domain, $path, $blog_title, $user_name = '', $user_email = '', $meta = array() ) {\n\t?>\n\t<h2><?php /* translators: %s: site address */\n\tprintf( __( 'Congratulations! Your new site, %s, is almost ready.' ), \"<a href='http://{$domain}{$path}'>{$blog_title}</a>\" ) ?></h2>\n\n\t<p><?php _e( 'But, before you can start using your site, <strong>you must activate it</strong>.' ) ?></p>\n\t<p><?php /* translators: %s: email address */\n\tprintf( __( 'Check your inbox at %s and click the link given.' ), '<strong>' . $user_email . '</strong>' ); ?></p>\n\t<p><?php _e( 'If you do not activate your site within two days, you will have to sign up again.' ); ?></p>\n\t<h2><?php _e( 'Still waiting for your email?' ); ?></h2>\n\t<p>\n\t\t<?php _e( 'If you haven&#8217;t received your email yet, there are a number of things you can do:' ) ?>\n\t\t<ul id=\"noemail-tips\">\n\t\t\t<li><p><strong><?php _e( 'Wait a little longer. Sometimes delivery of email can be delayed by processes outside of our control.' ) ?></strong></p></li>\n\t\t\t<li><p><?php _e( 'Check the junk or spam folder of your email client. Sometime emails wind up there by mistake.' ) ?></p></li>\n\t\t\t<li><?php printf( __( 'Have you entered your email correctly? You have entered %s, if it&#8217;s incorrect, you will not receive your email.' ), $user_email ) ?></li>\n\t\t</ul>\n\t</p>\n\t<?php\n\t/** This action is documented in wp-signup.php */\n\tdo_action( 'signup_finished' );\n}\n\n/**\n * Retrieves languages available during the site/user signup process.\n *\n * @since 4.4.0\n *\n * @see get_available_languages()\n *\n * @return array List of available languages.\n */\nfunction signup_get_available_languages() {\n\t/**\n\t * Filter the list of available languages for front-end site signups.\n\t *\n\t * Passing an empty array to this hook will disable output of the setting on the\n\t * signup form, and the default language will be used when creating the site.\n\t *\n\t * Languages not already installed will be stripped.\n\t *\n\t * @since 4.4.0\n\t *\n\t * @param array $available_languages Available languages.\n\t */\n\t$languages = (array) apply_filters( 'signup_get_available_languages', get_available_languages() );\n\n\t/*\n\t * Strip any non-installed languages and return.\n\t *\n\t * Re-call get_available_languages() here in case a language pack was installed\n\t * in a callback hooked to the 'signup_get_available_languages' filter before this point.\n\t */\n\treturn array_intersect_assoc( $languages, get_available_languages() );\n}\n\n// Main\n$active_signup = get_site_option( 'registration', 'none' );\n/**\n * Filter the type of site sign-up.\n *\n * @since 3.0.0\n *\n * @param string $active_signup String that returns registration type. The value can be\n *                              'all', 'none', 'blog', or 'user'.\n */\n$active_signup = apply_filters( 'wpmu_active_signup', $active_signup );\n\n// Make the signup type translatable.\n$i18n_signup['all'] = _x('all', 'Multisite active signup type');\n$i18n_signup['none'] = _x('none', 'Multisite active signup type');\n$i18n_signup['blog'] = _x('blog', 'Multisite active signup type');\n$i18n_signup['user'] = _x('user', 'Multisite active signup type');\n\nif ( is_super_admin() )\n\techo '<div class=\"mu_alert\">' . sprintf( __( 'Greetings Site Administrator! You are currently allowing &#8220;%s&#8221; registrations. To change or disable registration go to your <a href=\"%s\">Options page</a>.' ), $i18n_signup[$active_signup], esc_url( network_admin_url( 'settings.php' ) ) ) . '</div>';\n\n$newblogname = isset($_GET['new']) ? strtolower(preg_replace('/^-|-$|[^-a-zA-Z0-9]/', '', $_GET['new'])) : null;\n\n$current_user = wp_get_current_user();\nif ( $active_signup == 'none' ) {\n\t_e( 'Registration has been disabled.' );\n} elseif ( $active_signup == 'blog' && !is_user_logged_in() ) {\n\t$login_url = wp_login_url( network_site_url( 'wp-signup.php' ) );\n\techo sprintf( __( 'You must first <a href=\"%s\">log in</a>, and then you can create a new site.' ), $login_url );\n} else {\n\t$stage = isset( $_POST['stage'] ) ?  $_POST['stage'] : 'default';\n\tswitch ( $stage ) {\n\t\tcase 'validate-user-signup' :\n\t\t\tif ( $active_signup == 'all' || $_POST[ 'signup_for' ] == 'blog' && $active_signup == 'blog' || $_POST[ 'signup_for' ] == 'user' && $active_signup == 'user' )\n\t\t\t\tvalidate_user_signup();\n\t\t\telse\n\t\t\t\t_e( 'User registration has been disabled.' );\n\t\tbreak;\n\t\tcase 'validate-blog-signup':\n\t\t\tif ( $active_signup == 'all' || $active_signup == 'blog' )\n\t\t\t\tvalidate_blog_signup();\n\t\t\telse\n\t\t\t\t_e( 'Site registration has been disabled.' );\n\t\t\tbreak;\n\t\tcase 'gimmeanotherblog':\n\t\t\tvalidate_another_blog_signup();\n\t\t\tbreak;\n\t\tcase 'default':\n\t\tdefault :\n\t\t\t$user_email = isset( $_POST[ 'user_email' ] ) ? $_POST[ 'user_email' ] : '';\n\t\t\t/**\n\t\t\t * Fires when the site sign-up form is sent.\n\t\t\t *\n\t\t\t * @since 3.0.0\n\t\t\t */\n\t\t\tdo_action( 'preprocess_signup_form' );\n\t\t\tif ( is_user_logged_in() && ( $active_signup == 'all' || $active_signup == 'blog' ) )\n\t\t\t\tsignup_another_blog($newblogname);\n\t\t\telseif ( ! is_user_logged_in() && ( $active_signup == 'all' || $active_signup == 'user' ) )\n\t\t\t\tsignup_user( $newblogname, $user_email );\n\t\t\telseif ( ! is_user_logged_in() && ( $active_signup == 'blog' ) )\n\t\t\t\t_e( 'Sorry, new registrations are not allowed at this time.' );\n\t\t\telse\n\t\t\t\t_e( 'You are logged in already. No need to register again!' );\n\n\t\t\tif ( $newblogname ) {\n\t\t\t\t$newblog = get_blogaddress_by_name( $newblogname );\n\n\t\t\t\tif ( $active_signup == 'blog' || $active_signup == 'all' )\n\t\t\t\t\t/* translators: %s: site address */\n\t\t\t\t\tprintf( '<p><em>' . __( 'The site you were looking for, %s, does not exist, but you can create it now!' ) . '</em></p>',\n\t\t\t\t\t\t'<strong>' . $newblog . '</strong>'\n\t\t\t\t\t);\n\t\t\t\telse\n\t\t\t\t\t/* translators: %s: site address */\n\t\t\t\t\tprintf( '<p><em>' . __( 'The site you were looking for, %s, does not exist.' ) . '</em></p>',\n\t\t\t\t\t\t'<strong>' . $newblog . '</strong>'\n\t\t\t\t\t);\n\t\t\t}\n\t\t\tbreak;\n\t}\n}\n?>\n</div>\n</div>\n<?php\n/**\n * Fires after the sign-up forms, before wp_footer.\n *\n * @since 3.0.0\n */\ndo_action( 'after_signup_form' ); ?>\n\n<?php get_footer( 'wp-signup' );\n"
        },
        {
          "name": "wp-trackback.php",
          "type": "blob",
          "size": 3.9404296875,
          "content": "<?php\n/**\n * Handle Trackbacks and Pingbacks Sent to WordPress\n *\n * @since 0.71\n *\n * @package WordPress\n * @subpackage Trackbacks\n */\n\nif (empty($wp)) {\n\trequire_once( dirname( __FILE__ ) . '/wp-load.php' );\n\twp( array( 'tb' => '1' ) );\n}\n\n/**\n * Response to a trackback.\n *\n * Responds with an error or success XML message.\n *\n * @since 0.71\n *\n * @param mixed  $error         Whether there was an error.\n *                              Default '0'. Accepts '0' or '1', true or false.\n * @param string $error_message Error message if an error occurred.\n */\nfunction trackback_response($error = 0, $error_message = '') {\n\theader('Content-Type: text/xml; charset=' . get_option('blog_charset') );\n\tif ($error) {\n\t\techo '<?xml version=\"1.0\" encoding=\"utf-8\"?'.\">\\n\";\n\t\techo \"<response>\\n\";\n\t\techo \"<error>1</error>\\n\";\n\t\techo \"<message>$error_message</message>\\n\";\n\t\techo \"</response>\";\n\t\tdie();\n\t} else {\n\t\techo '<?xml version=\"1.0\" encoding=\"utf-8\"?'.\">\\n\";\n\t\techo \"<response>\\n\";\n\t\techo \"<error>0</error>\\n\";\n\t\techo \"</response>\";\n\t}\n}\n\n// Trackback is done by a POST.\n$request_array = 'HTTP_POST_VARS';\n\nif ( !isset($_GET['tb_id']) || !$_GET['tb_id'] ) {\n\t$tb_id = explode('/', $_SERVER['REQUEST_URI']);\n\t$tb_id = intval( $tb_id[ count($tb_id) - 1 ] );\n}\n\n$tb_url  = isset($_POST['url'])     ? $_POST['url']     : '';\n$charset = isset($_POST['charset']) ? $_POST['charset'] : '';\n\n// These three are stripslashed here so they can be properly escaped after mb_convert_encoding().\n$title     = isset($_POST['title'])     ? wp_unslash($_POST['title'])      : '';\n$excerpt   = isset($_POST['excerpt'])   ? wp_unslash($_POST['excerpt'])    : '';\n$blog_name = isset($_POST['blog_name']) ? wp_unslash($_POST['blog_name'])  : '';\n\nif ($charset)\n\t$charset = str_replace( array(',', ' '), '', strtoupper( trim($charset) ) );\nelse\n\t$charset = 'ASCII, UTF-8, ISO-8859-1, JIS, EUC-JP, SJIS';\n\n// No valid uses for UTF-7.\nif ( false !== strpos($charset, 'UTF-7') )\n\tdie;\n\n// For international trackbacks.\nif ( function_exists('mb_convert_encoding') ) {\n\t$title     = mb_convert_encoding($title, get_option('blog_charset'), $charset);\n\t$excerpt   = mb_convert_encoding($excerpt, get_option('blog_charset'), $charset);\n\t$blog_name = mb_convert_encoding($blog_name, get_option('blog_charset'), $charset);\n}\n\n// Now that mb_convert_encoding() has been given a swing, we need to escape these three.\n$title     = wp_slash($title);\n$excerpt   = wp_slash($excerpt);\n$blog_name = wp_slash($blog_name);\n\nif ( is_single() || is_page() )\n\t$tb_id = $posts[0]->ID;\n\nif ( !isset($tb_id) || !intval( $tb_id ) )\n\ttrackback_response(1, 'I really need an ID for this to work.');\n\nif (empty($title) && empty($tb_url) && empty($blog_name)) {\n\t// If it doesn't look like a trackback at all.\n\twp_redirect(get_permalink($tb_id));\n\texit;\n}\n\nif ( !empty($tb_url) && !empty($title) ) {\n\theader('Content-Type: text/xml; charset=' . get_option('blog_charset') );\n\n\tif ( !pings_open($tb_id) )\n\t\ttrackback_response(1, 'Sorry, trackbacks are closed for this item.');\n\n\t$title =  wp_html_excerpt( $title, 250, '&#8230;' );\n\t$excerpt = wp_html_excerpt( $excerpt, 252, '&#8230;' );\n\n\t$comment_post_ID = (int) $tb_id;\n\t$comment_author = $blog_name;\n\t$comment_author_email = '';\n\t$comment_author_url = $tb_url;\n\t$comment_content = \"<strong>$title</strong>\\n\\n$excerpt\";\n\t$comment_type = 'trackback';\n\n\t$dupe = $wpdb->get_results( $wpdb->prepare(\"SELECT * FROM $wpdb->comments WHERE comment_post_ID = %d AND comment_author_url = %s\", $comment_post_ID, $comment_author_url) );\n\tif ( $dupe )\n\t\ttrackback_response(1, 'We already have a ping from that URL for this post.');\n\n\t$commentdata = compact('comment_post_ID', 'comment_author', 'comment_author_email', 'comment_author_url', 'comment_content', 'comment_type');\n\n\twp_new_comment($commentdata);\n\t$trackback_id = $wpdb->insert_id;\n\n\t/**\n\t * Fires after a trackback is added to a post.\n\t *\n\t * @since 1.2.0\n\t *\n\t * @param int $trackback_id Trackback ID.\n\t */\n\tdo_action( 'trackback_post', $trackback_id );\n\ttrackback_response( 0 );\n}\n"
        },
        {
          "name": "xmlrpc.php",
          "type": "blob",
          "size": 2.9892578125,
          "content": "<?php\n/**\n * XML-RPC protocol support for WordPress\n *\n * @package WordPress\n */\n\n/**\n * Whether this is an XML-RPC Request\n *\n * @var bool\n */\ndefine('XMLRPC_REQUEST', true);\n\n// Some browser-embedded clients send cookies. We don't want them.\n$_COOKIE = array();\n\n// A bug in PHP < 5.2.2 makes $HTTP_RAW_POST_DATA not set by default,\n// but we can do it ourself.\nif ( !isset( $HTTP_RAW_POST_DATA ) ) {\n\t$HTTP_RAW_POST_DATA = file_get_contents( 'php://input' );\n}\n\n// fix for mozBlog and other cases where '<?xml' isn't on the very first line\nif ( isset($HTTP_RAW_POST_DATA) )\n\t$HTTP_RAW_POST_DATA = trim($HTTP_RAW_POST_DATA);\n\n/** Include the bootstrap for setting up WordPress environment */\ninclude( dirname( __FILE__ ) . '/wp-load.php' );\n\nif ( isset( $_GET['rsd'] ) ) { // http://cyber.law.harvard.edu/blogs/gems/tech/rsd.html\nheader('Content-Type: text/xml; charset=' . get_option('blog_charset'), true);\n?>\n<?php echo '<?xml version=\"1.0\" encoding=\"'.get_option('blog_charset').'\"?'.'>'; ?>\n<rsd version=\"1.0\" xmlns=\"http://archipelago.phrasewise.com/rsd\">\n  <service>\n    <engineName>WordPress</engineName>\n    <engineLink>https://wordpress.org/</engineLink>\n    <homePageLink><?php bloginfo_rss('url') ?></homePageLink>\n    <apis>\n      <api name=\"WordPress\" blogID=\"1\" preferred=\"true\" apiLink=\"<?php echo site_url('xmlrpc.php', 'rpc') ?>\" />\n      <api name=\"Movable Type\" blogID=\"1\" preferred=\"false\" apiLink=\"<?php echo site_url('xmlrpc.php', 'rpc') ?>\" />\n      <api name=\"MetaWeblog\" blogID=\"1\" preferred=\"false\" apiLink=\"<?php echo site_url('xmlrpc.php', 'rpc') ?>\" />\n      <api name=\"Blogger\" blogID=\"1\" preferred=\"false\" apiLink=\"<?php echo site_url('xmlrpc.php', 'rpc') ?>\" />\n      <?php\n      /**\n       * Add additional APIs to the Really Simple Discovery (RSD) endpoint.\n       *\n       * @link http://cyber.law.harvard.edu/blogs/gems/tech/rsd.html\n\t   *\n       * @since 3.5.0\n       */\n      do_action( 'xmlrpc_rsd_apis' );\n      ?>\n    </apis>\n  </service>\n</rsd>\n<?php\nexit;\n}\n\ninclude_once(ABSPATH . 'wp-admin/includes/admin.php');\ninclude_once(ABSPATH . WPINC . '/class-IXR.php');\ninclude_once(ABSPATH . WPINC . '/class-wp-xmlrpc-server.php');\n\n/**\n * Posts submitted via the XML-RPC interface get that title\n * @name post_default_title\n * @var string\n */\n$post_default_title = \"\";\n\n/**\n * Filter the class used for handling XML-RPC requests.\n *\n * @since 3.1.0\n *\n * @param string $class The name of the XML-RPC server class.\n */\n$wp_xmlrpc_server_class = apply_filters( 'wp_xmlrpc_server_class', 'wp_xmlrpc_server' );\n$wp_xmlrpc_server = new $wp_xmlrpc_server_class;\n\n// Fire off the request\n$wp_xmlrpc_server->serve_request();\n\nexit;\n\n/**\n * logIO() - Writes logging info to a file.\n *\n * @deprecated 3.4.0 Use error_log()\n * @see error_log()\n *\n * @param string $io Whether input or output\n * @param string $msg Information describing logging reason.\n */\nfunction logIO( $io, $msg ) {\n\t_deprecated_function( __FUNCTION__, '3.4', 'error_log()' );\n\tif ( ! empty( $GLOBALS['xmlrpc_logging'] ) )\n\t\terror_log( $io . ' - ' . $msg );\n}"
        }
      ]
    }
  ]
}