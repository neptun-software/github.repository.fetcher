{
  "metadata": {
    "timestamp": 1736712121935,
    "page": 723,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zendframework/ZendSkeletonApplication",
      "stars": 1504,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.10546875,
          "content": ".vagrant/\nvendor/\nconfig/development.config.php\ndata/cache/*\n!data/cache/.gitkeep\nphpunit.xml\ncomposer.lock\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.119140625,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file, in reverse chronological order by release.\n\n## 3.1.4 - TBD\n\n### Added\n\n- Nothing.\n\n### Changed\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- Nothing.\n\n## 3.1.3 - 2019-11-27\n\n### Added\n\n- Nothing.\n\n### Changed\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [#452](https://github.com/zendframework/ZendSkeletonApplication/pull/452) provides a truly cross-platform approach to removing the `composer.lock` entry from the `.gitignore` file. The skeleton now provides a script for doing so that it invokes as part of its post-create-project-cmd event; the script removes itself on completion.\n\n## 3.1.2 - 2019-11-21\n\n### Added\n\n- Nothing.\n\n### Changed\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [#451](https://github.com/zendframework/ZendSkeletonApplication/pull/451) provides compatibility on Windows for the script re-instating the composer.lock in the created project.\n\n## 3.1.1 - 2019-11-15\n\n### Added\n\n- Nothing.\n\n### Changed\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [#449](https://github.com/zendframework/ZendSkeletonApplication/pull/449) fixes a syntax error in the post-create-project-cmd hook.\n\n## 3.1.0 - 2019-11-15\n\n### Added\n\n- Nothing.\n\n### Changed\n\n- [#431](https://github.com/zendframework/ZendSkeletonApplication/pull/431) updates the skeleton to use Bootstrap 4.\n\n- [#428](https://github.com/zendframework/ZendSkeletonApplication/pull/428) changes the default `module_listener_options` in the `config/application.config.php` file to remove the `module_paths` and set `use_zend_loader` to false.\n\n- [#448](https://github.com/zendframework/ZendSkeletonApplication/pull/448) removes the `composer.lock` to ensure users creating a new project receive the latest versions of all dependencies as supported by their current PHP version.  Additionally, it adds an entry to the `post-create-project-cmd` Composer hook to remove the `composer.lock` entry from the `.gitignore` file, to promote checking in a `composer.lock` in user projects.\n\n- [#448](https://github.com/zendframework/ZendSkeletonApplication/pull/448) bumps the version constraints of all optional packages to the latest versions supported by all PHP versions the skeleton supports.\n\n- [#448](https://github.com/zendframework/ZendSkeletonApplication/pull/448) bumps the minimum supported version of zf-development-mode to 3.2\n\n- [#448](https://github.com/zendframework/ZendSkeletonApplication/pull/448) bumps the minimum supported version of zend-mvc to 3.1.1.\n\n- [#448](https://github.com/zendframework/ZendSkeletonApplication/pull/448) bumps the allowed versions of zend-component-installer to the 1.0 and 2.0 series.\n\n- [#448](https://github.com/zendframework/ZendSkeletonApplication/pull/448) bumps the minimum supported version of zend-skeleton-installer to 0.1.7.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- [#430](https://github.com/zendframework/ZendSkeletonApplication/pull/430) updates the `serve` command to work cross-platform, and across all supported PHP versions.\n"
        },
        {
          "name": "CONDUCT.md",
          "type": "blob",
          "size": 2.322265625,
          "content": "# Contributor Code of Conduct\n\nThe Zend Framework project adheres to [The Code Manifesto](http://codemanifesto.com)\nas its guidelines for contributor interactions.\n\n## The Code Manifesto\n\nWe want to work in an ecosystem that empowers developers to reach their\npotential — one that encourages growth and effective collaboration. A space that\nis safe for all.\n\nA space such as this benefits everyone that participates in it. It encourages\nnew developers to enter our field. It is through discussion and collaboration\nthat we grow, and through growth that we improve.\n\nIn the effort to create such a place, we hold to these values:\n\n1. **Discrimination limits us.** This includes discrimination on the basis of\n   race, gender, sexual orientation, gender identity, age, nationality, technology\n   and any other arbitrary exclusion of a group of people.\n2. **Boundaries honor us.** Your comfort levels are not everyone’s comfort\n   levels. Remember that, and if brought to your attention, heed it.\n3. **We are our biggest assets.** None of us were born masters of our trade.\n   Each of us has been helped along the way. Return that favor, when and where\n   you can.\n4. **We are resources for the future.** As an extension of #3, share what you\n   know. Make yourself a resource to help those that come after you.\n5. **Respect defines us.** Treat others as you wish to be treated. Make your\n   discussions, criticisms and debates from a position of respectfulness. Ask\n   yourself, is it true? Is it necessary? Is it constructive? Anything less is\n   unacceptable.\n6. **Reactions require grace.** Angry responses are valid, but abusive language\n   and vindictive actions are toxic. When something happens that offends you,\n   handle it assertively, but be respectful. Escalate reasonably, and try to\n   allow the offender an opportunity to explain themselves, and possibly correct\n   the issue.\n7. **Opinions are just that: opinions.** Each and every one of us, due to our\n   background and upbringing, have varying opinions. The fact of the matter, is\n   that is perfectly acceptable. Remember this: if you respect your own\n   opinions, you should respect the opinions of others.\n8. **To err is human.** You might not intend it, but mistakes do happen and\n   contribute to build experience. Tolerate honest mistakes, and don't hesitate\n   to apologize if you make one yourself.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.716796875,
          "content": "# CONTRIBUTING\n\n## RESOURCES\n\nIf you wish to contribute to Zend Framework, please be sure to\nread/subscribe to the following resources:\n\n -  [Coding Standards](https://github.com/zendframework/zf2/wiki/Coding-Standards)\n -  [Contributor's Guide](http://framework.zend.com/participate/contributor-guide)\n -  ZF Contributor's mailing list:\n    Archives: http://zend-framework-community.634137.n4.nabble.com/ZF-Contributor-f680267.html\n    Subscribe: zf-contributors-subscribe@lists.zend.com\n -  ZF Contributor's IRC channel:\n    #zftalk.dev on Freenode.net\n\nIf you are working on new features or refactoring [create a proposal](https://github.com/zendframework/ZendSkeletonApplication/issues/new).\n\n## Reporting Potential Security Issues\n\nIf you have encountered a potential security vulnerability, please **DO NOT** report it on the public\nissue tracker: send it to us at [zf-security@zend.com](mailto:zf-security@zend.com) instead.\nWe will work with you to verify the vulnerability and patch it as soon as possible.\n\nWhen reporting issues, please provide the following information:\n\n- Component(s) affected\n- A description indicating how to reproduce the issue\n- A summary of the security vulnerability and impact\n\nWe request that you contact us via the email address above and give the project\ncontributors a chance to resolve the vulnerability and issue a new release prior\nto any public exposure; this helps protect users and provides them with a chance\nto upgrade and/or update in order to protect their applications.\n\nFor sensitive email communications, please use [our PGP key](http://framework.zend.com/zf-security-pgp-key.asc).\n\n## RUNNING TESTS\n\nFirst, use [Composer](https://getcomposer.org) to install all dependencies:\n\n```bash\n$ composer install\n```\n\nMake sure that `zendframework/zend-test` is installed:\n\n```bash\n$ composer require --dev zendframework/zend-test\n```\n\nTo run tests:\n\n```bash\n$ composer test\n```\n\nYou can turn on conditional tests with the `phpunit.xml` file.\nTo do so:\n\n -  Copy `phpunit.xml.dist` file to `phpunit.xml`\n -  Edit `phpunit.xml` to enable any specific functionality you\n    want to test, as well as to provide test values to utilize.\n\n## Running Coding Standards Checks\n\nFirst, ensure you've installed dependencies via composer:\n\n```bash\n$ composer require --dev squizlabs/php_codesniffer\n```\n\nTo run CS checks only:\n\n```console\n$ composer cs-check\n```\n\nTo attempt to automatically fix common CS issues:\n\n```console\n$ composer cs-fix\n```\n\nIf the above fixes any CS issues, please re-run the tests to ensure\nthey pass, and make sure you add and commit the changes after verification.\n\n## Recommended Workflow for Contributions\n\nYour first step is to establish a public repository from which we can\npull your work into the master repository. We recommend using\n[GitHub](https://github.com), as that is where the component is already hosted.\n\n1. Setup a [GitHub account](http://github.com/), if you haven't yet\n2. Fork the repository (http://github.com/zendframework/ZendSkeletonApplication)\n3. Clone the canonical repository locally and enter it.\n\n   ```bash\n   $ git clone https://github.com/zendframework/ZendSkeletonApplication.git\n   $ cd ZendSkeletonApplication\n   ```\n\n4. Add a remote to your fork; substitute your GitHub username in the command\n   below.\n\n   ```bash\n   $ git remote add {username} git@github.com:{username}/ZendSkeletonApplication.git\n   $ git fetch {username}\n   ```\n\n### Keeping Up-to-Date\n\nPeriodically, you should update your fork or personal repository to\nmatch the canonical ZF repository. Assuming you have setup your local repository\nper the instructions above, you can do the following:\n\n\n```bash\n$ git checkout master\n$ git fetch origin\n$ git rebase origin/master\n# OPTIONALLY, to keep your remote up-to-date -\n$ git push {username} master:master\n```\n\nIf you're tracking other branches -- for example, the \"develop\" branch, where\nnew feature development occurs -- you'll want to do the same operations for that\nbranch; simply substitute  \"develop\" for \"master\".\n\n### Working on a patch\n\nWe recommend you do each new feature or bugfix in a new branch. This simplifies\nthe task of code review as well as the task of merging your changes into the\ncanonical repository.\n\nA typical workflow will then consist of the following:\n\n1. Create a new local branch based off either your master or develop branch.\n2. Switch to your new local branch. (This step can be combined with the\n   previous step with the use of `git checkout -b`.)\n3. Do some work, commit, repeat as necessary.\n4. Push the local branch to your remote repository.\n5. Send a pull request.\n\nThe mechanics of this process are actually quite trivial. Below, we will\ncreate a branch for fixing an issue in the tracker.\n\n```bash\n$ git checkout -b hotfix/9295\nSwitched to a new branch 'hotfix/9295'\n```\n\n... do some work ...\n\n\n```bash\n$ git commit\n```\n\n... write your log message ...\n\n\n```bash\n$ git push {username} hotfix/9295:hotfix/9295\nCounting objects: 38, done.\nDelta compression using up to 2 threads.\nCompression objects: 100% (18/18), done.\nWriting objects: 100% (20/20), 8.19KiB, done.\nTotal 20 (delta 12), reused 0 (delta 0)\nTo ssh://git@github.com/{username}/ZendSkeletonApplication.git\n   b5583aa..4f51698  HEAD -> master\n```\n\nTo send a pull request, you have two options.\n\nIf using GitHub, you can do the pull request from there. Navigate to\nyour repository, select the branch you just created, and then select the\n\"Pull Request\" button in the upper right. Select the user/organization\n\"zendframework\" as the recipient.\n\nIf using your own repository - or even if using GitHub - you can use `git\nformat-patch` to create a patchset for us to apply; in fact, this is\n**recommended** for security-related patches. If you use `format-patch`, please\nsend the patches as attachments to:\n\n-  zf-devteam@zend.com for patches without security implications\n-  zf-security@zend.com for security patches\n\n#### What branch to issue the pull request against?\n\nWhich branch should you issue a pull request against?\n\n- For fixes against the stable release, issue the pull request against the\n  \"master\" branch.\n- For new features, or fixes that introduce new elements to the public API (such\n  as new public methods or properties), issue the pull request against the\n  \"develop\" branch.\n\n### Branch Cleanup\n\nAs you might imagine, if you are a frequent contributor, you'll start to\nget a ton of branches both locally and on your remote.\n\nOnce you know that your changes have been accepted to the master\nrepository, we suggest doing some cleanup of these branches.\n\n-  Local branch cleanup\n\n   ```bash\n   $ git branch -d <branchname>\n   ```\n\n-  Remote branch removal\n\n   ```bash\n   $ git push {username} :<branchname>\n   ```\n\n## Conduct\n\nPlease see our [CONDUCT.md](CONDUCT.md) to understand expected behavior when interacting with others in the project.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.388671875,
          "content": "FROM php:7.0-apache\n\nRUN apt-get update \\\n && apt-get install -y git zlib1g-dev \\\n && docker-php-ext-install zip \\\n && a2enmod rewrite \\\n && sed -i 's!/var/www/html!/var/www/public!g' /etc/apache2/sites-available/000-default.conf \\\n && mv /var/www/html /var/www/public \\\n && curl -sS https://getcomposer.org/installer \\\n  | php -- --install-dir=/usr/local/bin --filename=composer\n\nWORKDIR /var/www\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.4814453125,
          "content": "Copyright (c) 2005-2016, Zend Technologies USA, Inc.\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n- Redistributions of source code must retain the above copyright notice,\n  this list of conditions and the following disclaimer.\n\n- Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n- Neither the name of Zend Technologies USA, Inc. nor the names of its\n  contributors may be used to endorse or promote products derived from this\n  software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.458984375,
          "content": "# ZendSkeletonApplication\n\n> ## Repository abandoned 2019-12-31\n>\n> This repository has moved to laminas/laminas-skeleton-installer.\n\n## Introduction\n\nThis is a skeleton application using the Zend Framework MVC layer and module\nsystems. This application is meant to be used as a starting place for those\nlooking to get their feet wet with Zend Framework.\n\n## Installation using Composer\n\nThe easiest way to create a new Zend Framework project is to use\n[Composer](https://getcomposer.org/).  If you don't have it already installed,\nthen please install as per the [documentation](https://getcomposer.org/doc/00-intro.md).\n\nTo create your new Zend Framework project:\n\n```bash\n$ composer create-project -sdev zendframework/skeleton-application path/to/install\n```\n\nOnce installed, you can test it out immediately using PHP's built-in web server:\n\n```bash\n$ cd path/to/install\n$ php -S 0.0.0.0:8080 -t public\n# OR use the composer alias:\n$ composer run --timeout 0 serve\n```\n\nThis will start the cli-server on port 8080, and bind it to all network\ninterfaces. You can then visit the site at http://localhost:8080/\n- which will bring up Zend Framework welcome page.\n\n**Note:** The built-in CLI server is *for development only*.\n\n## Development mode\n\nThe skeleton ships with [zf-development-mode](https://github.com/zfcampus/zf-development-mode)\nby default, and provides three aliases for consuming the script it ships with:\n\n```bash\n$ composer development-enable  # enable development mode\n$ composer development-disable # disable development mode\n$ composer development-status  # whether or not development mode is enabled\n```\n\nYou may provide development-only modules and bootstrap-level configuration in\n`config/development.config.php.dist`, and development-only application\nconfiguration in `config/autoload/development.local.php.dist`. Enabling\ndevelopment mode will copy these files to versions removing the `.dist` suffix,\nwhile disabling development mode will remove those copies.\n\nDevelopment mode is automatically enabled as part of the skeleton installation process. \nAfter making changes to one of the above-mentioned `.dist` configuration files you will\neither need to disable then enable development mode for the changes to take effect,\nor manually make matching updates to the `.dist`-less copies of those files.\n\n## Running Unit Tests\n\nTo run the supplied skeleton unit tests, you need to do one of the following:\n\n- During initial project creation, select to install the MVC testing support.\n- After initial project creation, install [zend-test](https://zendframework.github.io/zend-test/):\n\n  ```bash\n  $ composer require --dev zendframework/zend-test\n  ```\n\nOnce testing support is present, you can run the tests using:\n\n```bash\n$ ./vendor/bin/phpunit\n```\n\nIf you need to make local modifications for the PHPUnit test setup, copy\n`phpunit.xml.dist` to `phpunit.xml` and edit the new file; the latter has\nprecedence over the former when running tests, and is ignored by version\ncontrol. (If you want to make the modifications permanent, edit the\n`phpunit.xml.dist` file.)\n\n## Using Vagrant\n\nThis skeleton includes a `Vagrantfile` based on ubuntu 16.04 (bento box)\nwith configured Apache2 and PHP 7.0. Start it up using:\n\n```bash\n$ vagrant up\n```\n\nOnce built, you can also run composer within the box. For example, the following\nwill install dependencies:\n\n```bash\n$ vagrant ssh -c 'composer install'\n```\n\nWhile this will update them:\n\n```bash\n$ vagrant ssh -c 'composer update'\n```\n\nWhile running, Vagrant maps your host port 8080 to port 80 on the virtual\nmachine; you can visit the site at http://localhost:8080/\n\n> ### Vagrant and VirtualBox\n>\n> The vagrant image is based on ubuntu/xenial64. If you are using VirtualBox as\n> a provider, you will need:\n>\n> - Vagrant 1.8.5 or later\n> - VirtualBox 5.0.26 or later\n\nFor vagrant documentation, please refer to [vagrantup.com](https://www.vagrantup.com/)\n\n## Using docker-compose\n\nThis skeleton provides a `docker-compose.yml` for use with\n[docker-compose](https://docs.docker.com/compose/); it\nuses the `Dockerfile` provided as its base. Build and start the image using:\n\n```bash\n$ docker-compose up -d --build\n```\n\nAt this point, you can visit http://localhost:8080 to see the site running.\n\nYou can also run composer from the image. The container environment is named\n\"zf\", so you will pass that value to `docker-compose run`:\n\n```bash\n$ docker-compose run zf composer install\n```\n\n## Web server setup\n\n### Apache setup\n\nTo setup apache, setup a virtual host to point to the public/ directory of the\nproject and you should be ready to go! It should look something like below:\n\n```apache\n<VirtualHost *:80>\n    ServerName zfapp.localhost\n    DocumentRoot /path/to/zfapp/public\n    <Directory /path/to/zfapp/public>\n        DirectoryIndex index.php\n        AllowOverride All\n        Order allow,deny\n        Allow from all\n        <IfModule mod_authz_core.c>\n        Require all granted\n        </IfModule>\n    </Directory>\n</VirtualHost>\n```\n\n### Nginx setup\n\nTo setup nginx, open your `/path/to/nginx/nginx.conf` and add an\n[include directive](http://nginx.org/en/docs/ngx_core_module.html#include) below\ninto `http` block if it does not already exist:\n\n```nginx\nhttp {\n    # ...\n    include sites-enabled/*.conf;\n}\n```\n\n\nCreate a virtual host configuration file for your project under `/path/to/nginx/sites-enabled/zfapp.localhost.conf`\nit should look something like below:\n\n```nginx\nserver {\n    listen       80;\n    server_name  zfapp.localhost;\n    root         /path/to/zfapp/public;\n\n    location / {\n        index index.php;\n        try_files $uri $uri/ @php;\n    }\n\n    location @php {\n        # Pass the PHP requests to FastCGI server (php-fpm) on 127.0.0.1:9000\n        fastcgi_pass   127.0.0.1:9000;\n        fastcgi_param  SCRIPT_FILENAME /path/to/zfapp/public/index.php;\n        include fastcgi_params;\n    }\n}\n```\n\nRestart the nginx, now you should be ready to go!\n\n## QA Tools\n\nThe skeleton does not come with any QA tooling by default, but does ship with\nconfiguration for each of:\n\n- [phpcs](https://github.com/squizlabs/php_codesniffer)\n- [phpunit](https://phpunit.de)\n\nAdditionally, it comes with some basic tests for the shipped\n`Application\\Controller\\IndexController`.\n\nIf you want to add these QA tools, execute the following:\n\n```bash\n$ composer require --dev phpunit/phpunit squizlabs/php_codesniffer zendframework/zend-test\n```\n\nWe provide aliases for each of these tools in the Composer configuration:\n\n```bash\n# Run CS checks:\n$ composer cs-check\n# Fix CS errors:\n$ composer cs-fix\n# Run PHPUnit tests:\n$ composer test\n```"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 0.4921875,
          "content": "# TODO\n\nThis is a TODO list for the feature/zend-mvc-v3-minimal branch.\n\n## Documentation\n\n- ModuleRouteListener is removed from the skeleton. This won't affect existing\n  users, but *will* affect experienced users who originally relied on it being\n  active in new skeleton projects.\n- The `/[:controller][/:action]]` route was removed from the skeleton. Again, it\n  will not affect existing users, but *will* affect experienced users who\n  originally relied on it being active in new skeleton projects.\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 1.78515625,
          "content": "# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVAGRANTFILE_API_VERSION = '2'\n\n@script = <<SCRIPT\n# Install dependencies\napt-get update\napt-get install -y apache2 git curl php7.0 php7.0-bcmath php7.0-bz2 php7.0-cli php7.0-curl php7.0-intl php7.0-json php7.0-mbstring php7.0-opcache php7.0-soap php7.0-sqlite3 php7.0-xml php7.0-xsl php7.0-zip libapache2-mod-php7.0\n\n# Configure Apache\necho '<VirtualHost *:80>\n\tDocumentRoot /var/www/public\n\tAllowEncodedSlashes On\n\n\t<Directory /var/www/public>\n\t\tOptions +Indexes +FollowSymLinks\n\t\tDirectoryIndex index.php index.html\n\t\tOrder allow,deny\n\t\tAllow from all\n\t\tAllowOverride All\n\t</Directory>\n\n\tErrorLog ${APACHE_LOG_DIR}/error.log\n\tCustomLog ${APACHE_LOG_DIR}/access.log combined\n</VirtualHost>' > /etc/apache2/sites-available/000-default.conf\na2enmod rewrite\nservice apache2 restart\n\nif [ -e /usr/local/bin/composer ]; then\n    /usr/local/bin/composer self-update\nelse\n    curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nfi\n\n# Reset home directory of vagrant user\nif ! grep -q \"cd /var/www\" /home/vagrant/.profile; then\n    echo \"cd /var/www\" >> /home/vagrant/.profile\nfi\n\necho \"** [ZF] Run the following command to install dependencies, if you have not already:\"\necho \"    vagrant ssh -c 'composer install'\"\necho \"** [ZF] Visit http://localhost:8080 in your browser for to view the application **\"\nSCRIPT\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  config.vm.box = 'bento/ubuntu-16.04'\n  config.vm.network \"forwarded_port\", guest: 80, host: 8080\n  config.vm.synced_folder '.', '/var/www'\n  config.vm.provision 'shell', inline: @script\n\n  config.vm.provider \"virtualbox\" do |vb|\n    vb.customize [\"modifyvm\", :id, \"--memory\", \"1024\"]\n    vb.customize [\"modifyvm\", :id, \"--name\", \"ZF Application - Ubuntu 16.04\"]\n  end\nend\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 4.62890625,
          "content": "{\n    \"name\": \"zendframework/skeleton-application\",\n    \"description\": \"Skeleton Application for Zend Framework zend-mvc applications\",\n    \"type\": \"project\",\n    \"license\": \"BSD-3-Clause\",\n    \"keywords\": [\n        \"framework\",\n        \"mvc\",\n        \"zf\"\n    ],\n    \"homepage\": \"http://framework.zend.com/\",\n    \"require\": {\n        \"php\": \"^5.6 || ^7.0\",\n        \"zendframework/zend-component-installer\": \"^1.0 || ^2.1\",\n        \"zendframework/zend-skeleton-installer\": \"^0.1.7 || ^1.0\",\n        \"zendframework/zend-mvc\": \"^3.1.1\",\n        \"zfcampus/zf-development-mode\": \"^3.2\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Application\\\\\": \"module/Application/src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"ApplicationTest\\\\\": \"module/Application/test/\"\n        }\n    },\n    \"extra\": {\n        \"zend-skeleton-installer\": [\n            {\n                \"name\": \"zendframework/zend-developer-tools\",\n                \"constraint\": \"^1.2.3\",\n                \"prompt\": \"Would you like to install the developer toolbar?\",\n                \"module\": true,\n                \"dev\": true\n            },\n            {\n                \"name\": \"zendframework/zend-cache\",\n                \"constraint\": \"^2.9.0\",\n                \"prompt\": \"Would you like to install caching support?\",\n                \"module\": true\n            },\n            {\n                \"name\": \"zendframework/zend-db\",\n                \"constraint\": \"^2.10.0\",\n                \"prompt\": \"Would you like to install database support (installs zend-db)?\",\n                \"module\": true\n            },\n            {\n                \"name\": \"zendframework/zend-mvc-form\",\n                \"constraint\": \"^1.0\",\n                \"prompt\": \"Would you like to install forms support?\",\n                \"module\": true\n            },\n            {\n                \"name\": \"zendframework/zend-json\",\n                \"constraint\": \"^3.1.2\",\n                \"prompt\": \"Would you like to install JSON de/serialization support?\"\n            },\n            {\n                \"name\": \"zendframework/zend-log\",\n                \"constraint\": \"^2.11\",\n                \"prompt\": \"Would you like to install logging support?\",\n                \"module\": true\n            },\n            {\n                \"name\": \"zendframework/zend-mvc-console\",\n                \"constraint\": \"^1.2.0\",\n                \"prompt\": \"Would you like to install MVC-based console support? (We recommend migrating to zf-console, symfony/console, or Aura.CLI)\",\n                \"module\": true\n            },\n            {\n                \"name\": \"zendframework/zend-mvc-i18n\",\n                \"constraint\": \"^1.1.1\",\n                \"prompt\": \"Would you like to install i18n support?\",\n                \"module\": true\n            },\n            {\n                \"name\": \"zendframework/zend-mvc-plugins\",\n                \"constraint\": \"^1.0.1\",\n                \"prompt\": \"Would you like to install the official MVC plugins, including PRG support, identity, and flash messages?\",\n                \"module\": true\n            },\n            {\n                \"name\": \"zendframework/zend-psr7bridge\",\n                \"constraint\": \"^1.2.0\",\n                \"prompt\": \"Would you like to use the PSR-7 middleware dispatcher?\"\n            },\n            {\n                \"name\": \"zendframework/zend-session\",\n                \"constraint\": \"^2.9.1\",\n                \"prompt\": \"Would you like to install sessions support?\",\n                \"module\": true\n            },\n            {\n                \"name\": \"phpunit/phpunit\",\n                \"constraint\": \"^5.7.27 || ^6.5.14 || ^7.5.17\",\n                \"prompt\": \"Would you like to install testing support?\",\n                \"dev\": true\n            },\n            {\n                \"name\": \"zendframework/zend-test\",\n                \"constraint\": \"^3.3.0\",\n                \"prompt\": \"Would you like to install MVC testing tools for testing support?\",\n                \"dev\": true\n            },\n            {\n                \"name\": \"zendframework/zend-servicemanager-di\",\n                \"constraint\": \"^1.2.1\",\n                \"prompt\": \"Would you like to install the zend-di integration for zend-servicemanager?\",\n                \"module\": true\n            }\n        ]\n    },\n    \"scripts\": {\n        \"cs-check\": \"phpcs\",\n        \"cs-fix\": \"phpcbf\",\n        \"development-disable\": \"zf-development-mode disable\",\n        \"development-enable\": \"zf-development-mode enable\",\n        \"development-status\": \"zf-development-mode status\",\n        \"post-create-project-cmd\": [\n            \"@development-enable\",\n            \"php bin/update-gitignore.php\"\n        ],\n        \"serve\": \"php -S 0.0.0.0:8080 -t public\",\n        \"test\": \"phpunit\"\n    }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.0888671875,
          "content": "zf:\n  build: .\n  dockerfile: Dockerfile\n  ports:\n   - \"8080:80\"\n  volumes:\n   - .:/var/www\n"
        },
        {
          "name": "module",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpcs.xml",
          "type": "blob",
          "size": 0.9736328125,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\"Zend Framework coding standard\">\n    <description>Zend Framework coding standard</description>\n\n    <!-- display progress -->\n    <arg value=\"p\"/>\n    <arg name=\"colors\"/>\n    <arg name=\"extensions\" value=\"php,dist,phtml\"/>\n\n    <!-- inherit rules from: -->\n    <rule ref=\"PSR2\"/>\n    <rule ref=\"Generic.Arrays.DisallowLongArraySyntax\"/>\n    <rule ref=\"Generic.Formatting.SpaceAfterNot\"/>\n    <rule ref=\"Squiz.WhiteSpace.OperatorSpacing\">\n        <properties>\n            <property name=\"ignoreNewlines\" value=\"true\"/>\n        </properties>\n    </rule>\n    <rule ref=\"Squiz.WhiteSpace.SuperfluousWhitespace\">\n        <properties>\n            <property name=\"ignoreBlankLines\" value=\"false\"/>\n        </properties>\n    </rule>\n    <rule ref=\"PSR1.Files.SideEffects\">\n        <exclude-pattern>public/index.php</exclude-pattern>\n    </rule>\n\n    <!-- Paths to check -->\n    <file>config</file>\n    <file>module</file>\n    <file>public/index.php</file>\n</ruleset>\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.2470703125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit colors=\"true\">\n    <testsuites>\n        <testsuite name=\"ZendSkeletonApplication Test Suite\">\n            <directory>./module/Application/test</directory>\n        </testsuite>\n    </testsuites>\n</phpunit>\n"
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}