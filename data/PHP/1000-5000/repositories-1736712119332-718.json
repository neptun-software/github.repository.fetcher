{
  "metadata": {
    "timestamp": 1736712119332,
    "page": 718,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fossasia/wp-tweet-feed-plugin",
      "stars": 1510,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.09765625,
          "content": "[submodule \"loklak_php_api\"]\n\tpath = loklak_php_api\n\turl = https://github.com/loklak/loklak_php_api\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.6318359375,
          "content": "GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    WordPress plugin that enables background updates for major releases\n    Copyright (C) 2013  Range\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  {signature of Ty Coon}, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "languages",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "loklak_php_api",
          "type": "commit",
          "content": null
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 7.046875,
          "content": "=== Twitter Widget ===\n\nContributors: fossasia\nTags: loklak, feed, tweet feed, loklak API, twitter, widget, feed\nRequires at least: 3.0\nTested up to: 4.3\nStable tag: 1.0\n\nA widget that properly handles twitter feeds, including parsing @username, #hashtags, and URLs into links.\n\n== Description ==\n\nA widget that properly handles twitter feeds, including parsing @username, #hashtag, and URLs into links.  It supports displaying profiles images, and even lets you control whether to display the time and date of a tweet or how log ago it happened (about 5 hours ago, etc).\n\n\n== Installation ==\n\n1. Use automatic installer to install and active the plugin.\n1. You should see a notice appear in your admin that links you to the settings page.\n1. Follow the instructions to setup your Twitter app and authenticate your account (an unfortunate step made necessary by Twitter's API changes).\n1. In WordPress admin go to 'Appearance' -> 'Widgets' and add \"Twitter Widget\" to one of your widget-ready areas of your site\n\n== Frequently Asked Questions ==\n\n= Can I follow more than one feed? =\n\nAbsolutely, each instance of the widget can have different settings and track different feeds.\n\n= I get an error similar to \"Parse error: syntax error, unexpected T_STRING, expecting T_OLD_FUNCTION or T_FUNCTION or T_VAR or '}' in /.../wp-twitter-widget.php on line ##\" when I try to activate the plugin.  Is your plugin broke? =\n\nNo.  This error occurs because the plugin requires PHP 5 and you're running PHP 4. Most hosts offer PHP5 but sometimes you have to enable it in your control panel, through .htaccess, or by asking them.  There may be instructions for your specific host in the <a href=\"http://codex.wordpress.org/Switching_to_PHP5\">Switching to PHP5</a> article in the codex.\n\n= How can I add this widget to a post or page? =\n\nYou can now use the twitter-widget shortcode to embed this widget into a post or\npage.  The simplest form of this would be `[twitter-widget username=\"yourTwitterUsername\"]`\n\n= How exactly do you use the twitter-widget shortcode? =\n\nThe simplest form of this would be `[twitter-widget username=\"yourTwitterUsername\"]`\nHowever, there are more things you can control.\n\n* username - A Twitter username to pull a feed of Tweets from.  The user needs to be authenticated.\n* list - A Twitter list id owned by one of the users you've authenticated.\n* before_widget - This is inserted before the widget.\n* after_widget - This is inserted after the widget, and is often used to close tags opened in before_widget\n* before_title - This is inserted before the title and defults to <h2>\n* after_title - This is inserted after the title and defults to </h2>\n* errmsg - This is the error message that displays if there's a problem connecting to Twitter\n* hiderss - set to true to hide the RSS icon (defaults to false)\n* hidereplies - set to true to hide @replies that are sent from the account (defaults to false)\n* hidefrom - set to true to hide the \"from ____\" link that shows the application the tweet was sent from (defaults to false)\n* avatar - set to one of the available sizes (mini, normal, bigger, or original) (defaults to none)\n* targetBlank - set to true to have all links open in a new window (defaults to false)\n* showXavisysLink - set to true to display a link to the Twitter Widget page.  We greatly appreciate your support in linking to this page so others can find this useful plugin too!  (defaults to false)\n* items - The number of items to display (defaults to 10)\n* fetchTimeOut - The number of seconds to wait for a response from Twitter (defaults to 2)\n* showts - Number of seconds old a tweet has to be to show ___ ago rather than a date/time (defaults to 86400 seconds which is 24 hours)\n* dateFormat - The format for dates (defaults to'h:i:s A F d, Y' or it's localization)\n* title - The title of the widget (defaults to 'Twitter: Username')\n* showretweets - set to true to show retweets, false to hide them (defaults to true)\n* showintents - set to true to show the reply, retweet, and favorite links for each tweet, false to hide them (defaults to true)\n* showfollow - set to true to show the follow button after tweets, false to hide it (defaults to true)\n\nYou can see these put into action by trying something like:\n\n* `[twitter-widget username=\"wpinformer\" before_widget=\"<div class='half-box'>\" after_widget=\"</div>\" before_title=\"<h1>\" after_title=\"</h1>\" errmsg=\"Uh oh!\" hiderss=\"true\" hidereplies=\"true\" targetBlank=\"true\" avatar=\"1\" showXavisysLink=\"1\" items=\"3\" showts=\"60\"]Your Title[/twitter-widget]`\n* `[twitter-widget username=\"wpinformer\" before_widget=\"<div class='half-box'>\" after_widget=\"</div>\" before_title=\"<h1>\" after_title=\"</h1>\" errmsg=\"Uh oh!\" hiderss=\"true\" hidereplies=\"true\" targetBlank=\"true\" avatar=\"1\" showXavisysLink=\"1\" items=\"3\" showts=\"60\" title=\"Your Title\"]`\n* `[twitter-widget username=\"wpinformer\"]`\n\n= How can I style it to look nicer? =\n\nThere are plenty of CSS classes throughout the HTML that is generated, and you can use those to style things.  Here is some sample CSS that I use with the <a href=\"http://essencetheme.com\" title=\"Essence Theme for WordPress\">Essence Theme</a>.  You'll need to get the \"Everything\" sprite from <a href=\"https://dev.twitter.com/docs/image-resources\">Twitter's Image Resources</a>.\n\n```\n.widget_twitter div {\n\tpadding:0;\n}\n\n.widget_twitter ul li {\n\tmargin-bottom:5px;\n}\n\n.widget_twitter .follow-button,\n.widget_twitter .xavisys-link {\n\tmargin:0 10px 10px 25px;\n}\n\n.widget_twitter .entry-meta {\n\tdisplay:block;\n\tfont-size:80%;\n}\n\n.widget_twitter .intent-meta a {\n\tbackground: url(images/everything-spritev2.png); /** from Twitter ressources */\n\tdisplay: inline-block;\n\theight: 16px;\n\ttext-indent: -9999px;\n\twidth: 16px;\n}\n.widget_twitter .intent-meta a.in-reply-to {\n\tbackground-position: 0 center;\n}\n.widget_twitter .intent-meta a:hover.in-reply-to {\n\tbackground-position: -16px center;\n}\n.widget_twitter .intent-meta a.favorite {\n\tbackground-position: -32px center;\n}\n.widget_twitter .intent-meta a:hover.favorite {\n\tbackground-position: -48px center;\n}\n.widget_twitter .intent-meta a.retweet {\n\tbackground-position: -80px center;\n}\n.widget_twitter .intent-meta a:hover.retweet {\n\tbackground-position: -96px center;\n}\n```\n\n= Why can't I display a friends feed anymore? =\n\nAparently the database queries required to display the friends feed was causing twitter to crash, so they removed it.  Unfortunately, this is outside my control.\n\n== Screenshots ==\n\n1. To use the widget, go to Appearance -> Widgets and Add \"Twitter Widget\" widget.\n\n\t![Widget Appearance](./assets/images/screenshot-1.png)\n\n2. Each widget has settings that need to be set, so the next step is to click the down arrow on the right of the newly added widget and adjust all the settings.  When you're done click \"Save\"\n\n\t![Settings](./assets/images/screenshot-2.png)\n\n3. This is what the widget looks like in the default theme with no added styles.\n\n\t![Default Design](./assets/images/screenshot-3.png)\n\n4. By using some (X)HTML in the title element and adding a few styles and a background image, you could make it look like this.\n\n\t![Styling](./assets/images/screenshot-4.png)\n\n== Upgrade Notice ==\n\n= 1.0 =\nA whole new version!\n"
        },
        {
          "name": "readme.txt",
          "type": "blob",
          "size": 7.015625,
          "content": "=== Twitter Feed Plugin ===\nContributors: fossasia, sopankhosla\nTags: twitter, widget, feed, loklak, loklak API\nRequires at least: 3.0\nTested up to: 4.6.2\nStable tag: 1.0\n\nA widget that properly handles twitter feeds, including parsing @username, #hashtags, and URLs into links.\n\n== Description ==\n\nA widget that properly handles twitter feeds, including parsing @username, #hashtag, and URLs into links.  It supports displaying profiles images, and even lets you control whether to display the time and date of a tweet or how log ago it happened (about 5 hours ago, etc).\n\nTweet Feed Widget\nBrought to you by <a href=\"http://fossasia.org/\" title=\"WordPress Development\">FOSSASIA</a>\n\n== Installation ==\n\n1. Use automatic installer to install and active the plugin.\n1. You should see a notice appear in your admin that links you to the settings page.\n1. Use Loklak API or Follow the instructions to setup your Twitter app and authenticate your account (an unfortunate step made necessary by Twitter's API changes).\n1. In WordPress admin go to 'Appearance' -> 'Widgets' and add \"Tweet Feed Widget\" to one of your widget-ready areas of your site\n\n== Frequently Asked Questions ==\n\n= Can I follow more than one feed? =\n\nAbsolutely, each instance of the widget can have different settings and track different feeds.\n\n= I get an error similar to \"Parse error: syntax error, unexpected T_STRING, expecting T_OLD_FUNCTION or T_FUNCTION or T_VAR or '}' in /.../wp-twitter-widget.php on line ##\" when I try to activate the plugin.  Is your plugin broke? =\n\nNo.  This error occurs because the plugin requires PHP 5 and you're running PHP 4. Most hosts offer PHP5 but sometimes you have to enable it in your control panel, through .htaccess, or by asking them.  There may be instructions for your specific host in the <a href=\"http://codex.wordpress.org/Switching_to_PHP5\">Switching to PHP5</a> article in the codex.\n\n= How can I add this widget to a post or page? =\n\nYou can now use the twitter-widget shortcode to embed this widget into a post or\npage.  The simplest form of this would be `[twitter-widget username=\"yourTwitterUsername\"]`\n\n= How exactly do you use the twitter-widget shortcode? =\nThe simplest form of this would be `[twitter-widget username=\"yourTwitterUsername\"]`\nHowever, there are more things you can control.\n\n* username - A Twitter username to pull a feed of Tweets from.  The user needs to be authenticated.\n* list - A Twitter list id owned by one of the users you've authenticated.\n* before_widget - This is inserted before the widget.\n* after_widget - This is inserted after the widget, and is often used to close tags opened in before_widget\n* before_title - This is inserted before the title and defults to <h2>\n* after_title - This is inserted after the title and defults to </h2>\n* errmsg - This is the error message that displays if there's a problem connecting to Twitter\n* hiderss - set to true to hide the RSS icon (defaults to false)\n* hidereplies - set to true to hide @replies that are sent from the account (defaults to false)\n* hidefrom - set to true to hide the \"from ____\" link that shows the application the tweet was sent from (defaults to false)\n* avatar - set to one of the available sizes (mini, normal, bigger, or original) (defaults to none)\n* targetBlank - set to true to have all links open in a new window (defaults to false)\n* showXavisysLink - set to true to display a link to the Tweet Feed Widget page.  We greatly appreciate your support in linking to this page so others can find this useful plugin too!  (defaults to false)\n* items - The number of items to display (defaults to 10)\n* fetchTimeOut - The number of seconds to wait for a response from Twitter (defaults to 2)\n* showts - Number of seconds old a tweet has to be to show ___ ago rather than a date/time (defaults to 86400 seconds which is 24 hours)\n* dateFormat - The format for dates (defaults to'h:i:s A F d, Y' or it's localization)\n* title - The title of the widget (defaults to 'Twitter: Username')\n* showretweets - set to true to show retweets, false to hide them (defaults to true)\n* showintents - set to true to show the reply, retweet, and favorite links for each tweet, false to hide them (defaults to true)\n* showfollow - set to true to show the follow button after tweets, false to hide it (defaults to true)\n\nYou can see these put into action by trying something like:\n\n* `[twitter-widget username=\"wpinformer\" before_widget=\"<div class='half-box'>\" after_widget=\"</div>\" before_title=\"<h1>\" after_title=\"</h1>\" errmsg=\"Uh oh!\" hiderss=\"true\" hidereplies=\"true\" targetBlank=\"true\" avatar=\"1\" showXavisysLink=\"1\" items=\"3\" showts=\"60\"]Your Title[/twitter-widget]`\n* `[twitter-widget username=\"wpinformer\" before_widget=\"<div class='half-box'>\" after_widget=\"</div>\" before_title=\"<h1>\" after_title=\"</h1>\" errmsg=\"Uh oh!\" hiderss=\"true\" hidereplies=\"true\" targetBlank=\"true\" avatar=\"1\" showXavisysLink=\"1\" items=\"3\" showts=\"60\" title=\"Your Title\"]`\n* `[twitter-widget username=\"wpinformer\"]`\n\n= How can I style it to look nicer? =\n\nThere are plenty of CSS classes throughout the HTML that is generated, and you can use those to style things.  Here is some sample CSS that I use with the <a href=\"http://essencetheme.com\" title=\"Essence Theme for WordPress\">Essence Theme</a>.  You'll need to get the \"Everything\" sprite from <a href=\"https://dev.twitter.com/docs/image-resources\">Twitter's Image Resources</a>.\n`\n.widget_twitter div {\n\tpadding:0;\n}\n\n.widget_twitter ul li {\n\tmargin-bottom:5px;\n}\n\n.widget_twitter .follow-button,\n.widget_twitter .xavisys-link {\n\tmargin:0 10px 10px 25px;\n}\n\n.widget_twitter .entry-meta {\n\tdisplay:block;\n\tfont-size:80%;\n}\n\n.widget_twitter .intent-meta a {\n\tbackground: url(images/everything-spritev2.png); /** from Twitter ressources */\n\tdisplay: inline-block;\n\theight: 16px;\n\ttext-indent: -9999px;\n\twidth: 16px;\n}\n.widget_twitter .intent-meta a.in-reply-to {\n\tbackground-position: 0 center;\n}\n.widget_twitter .intent-meta a:hover.in-reply-to {\n\tbackground-position: -16px center;\n}\n.widget_twitter .intent-meta a.favorite {\n\tbackground-position: -32px center;\n}\n.widget_twitter .intent-meta a:hover.favorite {\n\tbackground-position: -48px center;\n}\n.widget_twitter .intent-meta a.retweet {\n\tbackground-position: -80px center;\n}\n.widget_twitter .intent-meta a:hover.retweet {\n\tbackground-position: -96px center;\n}\n`\n\n= Why can't I display a friends feed anymore? =\n\nAparently the database queries required to display the friends feed was causing twitter to crash, so they removed it.  Unfortunately, this is outside my control.\n\n== Screenshots ==\n\n1. To use the widget, go to Appearance -> Widgets and Add \"Tweet Feed Widget\" widget.\n2. Each widget has settings that need to be set, so the next step is to click the down arrow on the right of the newly added widget and adjust all the settings.  When you're done click \"Save\"\n3. This is what the widget looks like in the default theme with no added styles.\n4. By using some (X)HTML in the title element and adding a few styles and a background image, you could make it look like this.\n\n== Upgrade Notice ==\n\nFirst version of the plugin!\n\n== Changelog ==\n\n= 1.0 =\n* Original Version\n"
        },
        {
          "name": "tlc-transients.php",
          "type": "blob",
          "size": 5.7724609375,
          "content": "<?php\r\n\r\nif ( !class_exists( 'TLC_Transient_Update_Server' ) ) {\r\n\tclass TLC_Transient_Update_Server {\r\n\t\tpublic function __construct() {\r\n\t\t\tadd_action( 'init', array( $this, 'init' ) );\r\n\t\t}\r\n\r\n\t\tpublic function init() {\r\n\t\t\tif ( isset( $_POST['_tlc_update'] )\r\n\t\t\t\t&& ( 0 === strpos( $_POST['_tlc_update'], 'tlc_lock_' ) )\r\n\t\t\t\t&& isset( $_POST['key'] )\r\n\t\t\t) {\r\n\t\t\t\t$update = get_transient( 'tlc_up__' . md5( $_POST['key'] ) );\r\n\t\t\t\tif ( $update && $update[0] == $_POST['_tlc_update'] ) {\r\n\t\t\t\t\ttlc_transient( $update[1] )\r\n\t\t\t\t\t\t->expires_in( $update[2] )\r\n\t\t\t\t\t\t->extend_on_fail( $update[5] )\r\n\t\t\t\t\t\t->updates_with( $update[3], (array) $update[4] )\r\n\t\t\t\t\t\t->set_lock( $update[0] )\r\n\t\t\t\t\t\t->fetch_and_cache();\r\n\t\t\t\t}\r\n\t\t\t\texit();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tnew TLC_Transient_Update_Server;\r\n}\r\n\r\nif ( !class_exists( 'TLC_Transient' ) ) {\r\n\tclass TLC_Transient {\r\n\t\tpublic $key;\r\n\t\tpublic $raw_key;\r\n\t\tprivate $lock;\r\n\t\tprivate $callback;\r\n\t\tprivate $params;\r\n\t\tprivate $expiration = 0;\r\n\t\tprivate $extend_on_fail = 0;\r\n\t\tprivate $force_background_updates = false;\r\n\r\n\t\tpublic function __construct( $key ) {\r\n\t\t\t$this->raw_key = $key;\r\n\t\t\t$this->key = md5( $key );\r\n\t\t}\r\n\r\n\t\tprivate function raw_get() {\r\n\t\t\treturn get_transient( 'tlc__' . $this->key );\r\n\t\t}\r\n\r\n\t\tpublic function get() {\r\n\t\t\t$data = $this->raw_get();\r\n\t\t\tif ( false === $data ) {\r\n\t\t\t\t// Hard expiration\r\n\t\t\t\tif ( $this->force_background_updates ) {\r\n\t\t\t\t\t// In this mode, we never do a just-in-time update\r\n\t\t\t\t\t// We return false, and schedule a fetch on shutdown\r\n\t\t\t\t\t$this->schedule_background_fetch();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Bill O'Reilly mode: \"We'll do it live!\"\r\n\t\t\t\t\treturn $this->fetch_and_cache();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Soft expiration\r\n\t\t\t\tif ( $data[0] !== 0 && $data[0] < time() )\r\n\t\t\t\t\t$this->schedule_background_fetch();\r\n\t\t\t\treturn $data[1];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprivate function schedule_background_fetch() {\r\n\t\t\tif ( !$this->has_update_lock() ) {\r\n\t\t\t\tset_transient( 'tlc_up__' . $this->key, array( $this->new_update_lock(), $this->raw_key, $this->expiration, $this->callback, $this->params, $this->extend_on_fail ), 300 );\r\n\t\t\t\tadd_action( 'shutdown', array( $this, 'spawn_server' ) );\r\n\t\t\t}\r\n\t\t\treturn $this;\r\n\t\t}\r\n\r\n\t\tpublic function spawn_server() {\r\n\t\t\t$server_url = home_url( '/?tlc_transients_request' );\r\n\t\t\twp_remote_post( $server_url, array( 'body' => array( '_tlc_update' => $this->lock, 'key' => $this->raw_key ), 'timeout' => 0.01, 'blocking' => false, 'sslverify' => apply_filters( 'https_local_ssl_verify', true ) ) );\r\n\t\t}\r\n\r\n\t\tpublic function fetch_and_cache() {\r\n\t\t\t// If you don't supply a callback, we can't update it for you!\r\n\t\t\tif ( empty( $this->callback ) )\r\n\t\t\t\treturn false;\r\n\t\t\tif ( $this->has_update_lock() && !$this->owns_update_lock() )\r\n\t\t\t\treturn; // Race... let the other process handle it\r\n\t\t\ttry {\r\n \t\t\t\t$data = call_user_func_array( $this->callback, $this->params );\r\n\t\t\t\t$this->set( $data );\r\n\t\t\t} catch( Exception $e ) {\r\n\t\t\t\tif ( $this->extend_on_fail > 0 ) {\r\n\t\t\t\t\t$data = $this->raw_get();\r\n\t\t\t\t\tif ( $data ) {\r\n\t\t\t\t\t\t$data = $data[1];\r\n\t\t\t\t\t\t$old_expiration = $this->expiration;\r\n\t\t\t\t\t\t$this->expiration = $this->extend_on_fail;\r\n\t\t\t\t\t\t$this->set( $data );\r\n\t\t\t\t\t\t$this->expiration = $old_expiration;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$data = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$this->release_update_lock();\r\n\t\t\treturn $data;\r\n\t\t}\r\n\r\n\t\tpublic function set( $data ) {\r\n\t\t\t// We set the timeout as part of the transient data.\r\n\t\t\t// The actual transient has a far-future TTL. This allows for soft expiration.\r\n\t\t\t$expiration = ( $this->expiration > 0 ) ? time() + $this->expiration : 0;\r\n\t\t\t$transient_expiration = ( $this->expiration > 0 ) ? $this->expiration + 31536000 : 0; // 31536000 = 60*60*24*365 ~= one year\r\n\t\t\tset_transient( 'tlc__' . $this->key, array( $expiration, $data ), $transient_expiration );\r\n\t\t\treturn $this;\r\n\t\t}\r\n\r\n\t\tpublic function updates_with( $callback, $params = array() ) {\r\n\t\t\t$this->callback = $callback;\r\n\t\t\tif ( is_array( $params ) )\r\n\t\t\t\t$this->params = $params;\r\n\t\t\treturn $this;\r\n\t\t}\r\n\r\n\t\tprivate function new_update_lock() {\r\n\t\t\t$this->lock = uniqid( 'tlc_lock_', true );\r\n\t\t\treturn $this->lock;\r\n\t\t}\r\n\r\n\t\tprivate function release_update_lock() {\r\n\t\t\tdelete_transient( 'tlc_up__' . $this->key );\r\n\t\t}\r\n\r\n\t\tprivate function get_update_lock() {\r\n\t\t\t$lock = get_transient( 'tlc_up__' . $this->key );\r\n\t\t\tif ( $lock )\r\n\t\t\t\treturn $lock[0];\r\n\t\t\telse\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tprivate function has_update_lock() {\r\n\t\t\treturn (bool) $this->get_update_lock();\r\n\t\t}\r\n\r\n\t\tprivate function owns_update_lock() {\r\n\t\t\treturn $this->lock == $this->get_update_lock();\r\n\t\t}\r\n\r\n\t\tpublic function expires_in( $seconds ) {\r\n\t\t\t$this->expiration = (int) $seconds;\r\n\t\t\treturn $this;\r\n\t\t}\r\n\r\n\t\tpublic function extend_on_fail( $seconds ) {\r\n\t\t\t$this->extend_on_fail = (int) $seconds;\r\n\t\t\treturn $this;\r\n\t\t}\r\n\r\n\t\tpublic function set_lock( $lock ) {\r\n\t\t\t$this->lock = $lock;\r\n\t\t\treturn $this;\r\n\t\t}\r\n\r\n\t\tpublic function background_only() {\r\n\t\t\t$this->force_background_updates = true;\r\n\t\t\treturn $this;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// API so you don't have to use \"new\"\r\nif ( !function_exists( 'tlc_transient' ) ) {\r\n\tfunction tlc_transient( $key ) {\r\n\t\t$transient = new TLC_Transient( $key );\r\n\t\treturn $transient;\r\n\t}\r\n}\r\n\r\n// Example:\r\n/*\r\nfunction sample_fetch_and_append( $url, $append ) {\r\n\t$f  = wp_remote_retrieve_body( wp_remote_get( $url, array( 'timeout' => 30 ) ) );\r\n\t$f .= $append;\r\n\treturn $f;\r\n}\r\n\r\nfunction test_tlc_transient() {\r\n\t$t = tlc_transient( 'foo' )\r\n\t\t->expires_in( 30 )\r\n\t\t->background_only()\r\n\t\t->updates_with( 'sample_fetch_and_append', array( 'http://coveredwebservices.com/tools/long-running-request.php', ' appendfooparam ' ) )\r\n\t\t->get();\r\n\tvar_dump( $t );\r\n\tif ( !$t )\r\n\t\techo \"The request is false, because it isn't yet in the cache. It'll be there in about 10 seconds. Keep refreshing!\";\r\n}\r\n\r\nadd_action( 'wp_footer', 'test_tlc_transient' );\r\n*/\r\n"
        },
        {
          "name": "twitter-plugin-framework.php",
          "type": "blob",
          "size": 9.6005859375,
          "content": "<?php\r\n/**\r\n * Version: 1.0\r\n */\r\n/**\r\n * Changelog:\r\n *\r\n * 1.0:\r\n *  - First version of the plugin!\r\n **/\r\nif (!class_exists('TwitterPlugin')) {\r\n\t/**\r\n\t * Abstract class TwitterPlugin used as a WordPress Plugin framework\r\n\t *\r\n\t * @abstractet Feed Plugin\r\n\t */\r\n\tabstract class TwitterPlugin {\r\n\t\t/**\r\n\t\t * @var array Plugin settings\r\n\t\t */\r\n\t\tprotected $_settings;\r\n\r\n\t\t/**\r\n\t\t * @var string - The options page name used in the URL\r\n\t\t */\r\n\t\tprotected $_hook = '';\r\n\r\n\t\t/**\r\n\t\t * @var string - The filename for the main plugin file\r\n\t\t */\r\n\t\tprotected $_file = '';\r\n\r\n\t\t/**\r\n\t\t * @var string - The options page title\r\n\t\t */\r\n\t\tprotected $_pageTitle = '';\r\n\r\n\t\t/**\r\n\t\t * @var string - The options page menu title\r\n\t\t */\r\n\t\tprotected $_menuTitle = '';\r\n\r\n\t\t/**\r\n\t\t * @var string - The access level required to see the options page\r\n\t\t */\r\n\t\tprotected $_accessLevel = '';\r\n\r\n\t\t/**\r\n\t\t * @var string - The option group to register\r\n\t\t */\r\n\t\tprotected $_optionGroup = '';\r\n\r\n\t\t/**\r\n\t\t * @var array - An array of options to register to the option group\r\n\t\t */\r\n\t\tprotected $_optionNames = array();\r\n\r\n\t\t/**\r\n\t\t * @var array - An associated array of callbacks for the options, option name should be index, callback should be value\r\n\t\t */\r\n\t\tprotected $_optionCallbacks = array();\r\n\r\n\t\t/**\r\n\t\t * @var string - The plugin slug used on WordPress.org\r\n\t\t */\r\n\t\tprotected $_slug = '';\r\n\r\n\t\tprotected $_optionsPageAction = 'options.php';\r\n\r\n\t\t/**\r\n\t\t * This is our constructor, which is private to force the use of getInstance()\r\n\t\t * @return void\r\n\t\t */\r\n\t\tprotected function __construct() {\r\n\t\t\tif ( is_callable( array($this, '_init') ) )\r\n\t\t\t\t$this->_init();\r\n\r\n\t\t\t$this->_get_settings();\r\n\t\t\tif ( is_callable( array($this, '_post_settings_init') ) )\r\n\t\t\t\t$this->_post_settings_init();\r\n\r\n\t\t\tadd_filter( 'init', array( $this, 'init_locale' ) );\r\n\t\t\tadd_action( 'admin_init', array( $this, 'register_options' ) );\r\n\t\t\tadd_filter( 'plugin_action_links', array( $this, 'add_plugin_page_links' ), 10, 2 );\r\n\t\t\tadd_filter( 'plugin_row_meta', array( $this, 'add_plugin_meta_links' ), 10, 2 );\r\n\t\t\tadd_action( 'admin_menu', array( $this, 'register_options_page' ) );\r\n\t\t\tif ( is_callable(array( $this, 'add_options_meta_boxes' )) )\r\n\t\t\t\tadd_action( 'admin_init', array( $this, 'add_options_meta_boxes' ) );\r\n\r\n\t\t\t//add_action( 'admin_init', array( $this, 'add_default_options_meta_boxes' ) );\r\n\t\t\tadd_action( 'admin_print_scripts', array( $this,'admin_print_scripts' ) );\r\n\t\t\tadd_action( 'admin_enqueue_scripts', array( $this,'admin_enqueue_scripts' ) );\r\n\r\n\t\t\tadd_action ( 'in_plugin_update_message-'.$this->_file , array ( $this , 'changelog' ), null, 2 );\r\n\t\t\tadd_action('admin_enqueue_scripts', array( $this, 'add_wp_twitter_widget_script' ) );\r\n\t\t}\r\n\r\n\t\tpublic function init_locale() {\r\n\t\t\t$lang_dir = basename(dirname(__FILE__)) . '/languages';\r\n\t\t\tload_plugin_textdomain( $this->_slug, 'wp-content/plugins/' . $lang_dir, $lang_dir);\r\n\t\t}\r\n\r\n\t\tprotected function _get_settings() {\r\n\t\t\tforeach ( $this->_optionNames as $opt ) {\r\n\t\t\t\t$this->_settings[$opt] = apply_filters($this->_slug.'-opt-'.$opt, get_option($opt));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic function register_options() {\r\n\t\t\tforeach ( $this->_optionNames as $opt ) {\r\n\t\t\t\tif ( !empty($this->_optionCallbacks[$opt]) && is_callable( $this->_optionCallbacks[$opt] ) ) {\r\n\t\t\t\t\t$callback = $this->_optionCallbacks[$opt];\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$callback = '';\r\n\t\t\t\t}\r\n\t\t\t\tregister_setting( $this->_optionGroup, $opt, $callback );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic function changelog ($pluginData, $newPluginData) {\r\n\t\t\trequire_once( ABSPATH . 'wp-admin/includes/plugin-install.php' );\r\n\r\n\t\t\t$plugin = plugins_api( 'plugin_information', array( 'slug' => $newPluginData->slug ) );\r\n\r\n\t\t\tif ( !$plugin || is_wp_error( $plugin ) || empty( $plugin->sections['changelog'] ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t$changes = $plugin->sections['changelog'];\r\n\t\t\t$pos = strpos( $changes, '<h4>' . preg_replace('/[^\\d\\.]/', '', $pluginData['Version'] ) );\r\n\t\t\tif ( $pos !== false ) {\r\n\t\t\t\t$changes = trim( substr( $changes, 0, $pos ) );\r\n\t\t\t}\r\n\r\n\t\t\t$replace = array(\r\n\t\t\t\t'<ul>'\t=> '<ul style=\"list-style: disc inside; padding-left: 15px; font-weight: normal;\">',\r\n\t\t\t\t'<h4>'\t=> '<h4 style=\"margin-bottom:0;\">',\r\n\t\t\t);\r\n\t\t\techo str_replace( array_keys($replace), $replace, $changes );\r\n\t\t}\r\n\r\n\t\tpublic function register_options_page() {\r\n\t\t\tif ( apply_filters( 'rpf-options_page-'.$this->_slug, true ) && is_callable( array( $this, 'options_page' ) ) )\r\n\t\t\t\tadd_options_page( $this->_pageTitle, $this->_menuTitle, $this->_accessLevel, $this->_hook, array( $this, 'options_page' ) );\r\n\t\t}\r\n\r\n\t\tprotected function _filter_boxes_main($boxName) {\r\n\t\t\tif ( 'main' == strtolower($boxName) )\r\n\t\t\t\treturn false;\r\n\r\n\t\t\treturn $this->_filter_boxes_helper($boxName, 'main');\r\n\t\t}\r\n\r\n\t\tprotected function _filter_boxes_sidebar($boxName) {\r\n\t\t\treturn $this->_filter_boxes_helper($boxName, 'sidebar');\r\n\t\t}\r\n\r\n\t\tprotected function _filter_boxes_helper($boxName, $test) {\r\n\t\t\treturn ( strpos( strtolower($boxName), strtolower($test) ) !== false );\r\n\t\t}\r\n\r\n\t\tpublic function options_page() {\r\n\t\t\tglobal $wp_meta_boxes;\r\n\t\t\t$allBoxes = array_keys( $wp_meta_boxes['twitter-'.$this->_slug] );\r\n\t\t\t$mainBoxes = array_filter( $allBoxes, array( $this, '_filter_boxes_main' ) );\r\n\t\t\tunset($mainBoxes['main']);\r\n\t\t\tsort($mainBoxes);\r\n\t\t\t$sidebarBoxes = array_filter( $allBoxes, array( $this, '_filter_boxes_sidebar' ) );\r\n\t\t\tunset($sidebarBoxes['sidebar']);\r\n\t\t\tsort($sidebarBoxes);\r\n\r\n\t\t\t$main_width = empty( $sidebarBoxes )? '100%' : '75%';\r\n\t\t\t?>\r\n\t\t\t\t<div class=\"wrap\">\r\n\t\t\t\t\t<?php $this->screen_icon_link(); ?>\r\n\t\t\t\t\t<h2><?php echo esc_html($this->_pageTitle); ?></h2>\r\n\t\t\t\t\t<div class=\"metabox-holder\">\r\n\t\t\t\t\t\t<div class=\"postbox-container\" style=\"width:<?php echo $main_width; ?>;\">\r\n\t\t\t\t\t\t<?php\r\n\t\t\t\t\t\t\tdo_action( 'rpf-pre-main-metabox', $main_width );\r\n\t\t\t\t\t\t\tif ( in_array( 'main', $allBoxes ) ) {\r\n\t\t\t\t\t\t?>\r\n\t\t\t\t\t\t\t<form action=\"<?php esc_attr_e( $this->_optionsPageAction ); ?>\" method=\"post\"<?php do_action( 'rpf-options-page-form-tag' ) ?>>\r\n\t\t\t\t\t\t\t\t<?php\r\n\t\t\t\t\t\t\t\tsettings_fields( $this->_optionGroup );\r\n\t\t\t\t\t\t\t\tdo_meta_boxes( 'twitter-' . $this->_slug, 'main', '' );\r\n\t\t\t\t\t\t\t\tif ( apply_filters( 'rpf-show-general-settings-submit'.$this->_slug, true ) ) {\r\n\t\t\t\t\t\t\t\t?>\r\n\t\t\t\t\t\t\t\t<p class=\"submit\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"Submit\" value=\"<?php esc_attr_e('Update Options &raquo;', $this->_slug); ?>\" />\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<?php\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t?>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<?php\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tforeach( $mainBoxes as $context ) {\r\n\t\t\t\t\t\t\t\tdo_meta_boxes( 'twitter-' . $this->_slug, $context, '' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t?>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<?php\r\n\t\t\t\t\t\tif ( !empty( $sidebarBoxes ) ) {\r\n\t\t\t\t\t\t?>\r\n\t\t\t\t\t\t<div class=\"alignright\" style=\"width:24%;\">\r\n\t\t\t\t\t\t\t<?php\r\n\t\t\t\t\t\t\tforeach( $sidebarBoxes as $context ) {\r\n\t\t\t\t\t\t\t\tdo_meta_boxes( 'twitter-' . $this->_slug, $context, '' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t?>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<?php\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t?>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<?php\r\n\t\t}\r\n\r\n\t\tpublic function add_plugin_page_links( $links, $file ){\r\n\t\t\tif ( $file == $this->_file ) {\r\n\t\t\t\t// Add Widget Page link to our plugin\r\n\t\t\t\t$link = $this->get_options_link();\r\n\t\t\t\tarray_unshift( $links, $link );\r\n\t\t\t}\r\n\t\t\treturn $links;\r\n\t\t}\r\n\r\n\t\tpublic function add_plugin_meta_links( $meta, $file ){\r\n\t\t\tif ( $file == $this->_file )\r\n\t\t\t\t$meta[] = $this->get_plugin_link(__('Rate Plugin'));\r\n\t\t\treturn $meta;\r\n\t\t}\r\n\r\n\t\tpublic function get_plugin_link( $linkText = '' ) {\r\n\t\t\tif ( empty($linkText) )\r\n\t\t\t\t$linkText = __( 'Give it a good rating on WordPress.org.', $this->_slug );\r\n\t\t\treturn \"<a href='\" . $this->get_plugin_url() . \"'>{$linkText}</a>\";\r\n\t\t}\r\n\r\n\t\tpublic function get_plugin_url() {\r\n\t\t\treturn 'http://wordpress.org/extend/plugins/' . $this->_slug;\r\n\t\t}\r\n\r\n\t\tpublic function get_options_link( $linkText = '' ) {\r\n\t\t\tif ( empty($linkText) ) {\r\n\t\t\t\t$linkText = __( 'Settings', $this->_slug );\r\n\t\t\t}\r\n\t\t\treturn '<a href=\"' . $this->get_options_url() . '\">' . $linkText . '</a>';\r\n\t\t}\r\n\r\n\t\tpublic function get_options_url() {\r\n\t\t\treturn admin_url( 'options-general.php?page=' . $this->_hook );\r\n\t\t}\r\n\r\n\t\tpublic function admin_enqueue_scripts() {\r\n\t\t\tif (isset($_GET['page']) && $_GET['page'] == $this->_hook) {\r\n\t\t\t\twp_enqueue_style('dashboard');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// public function add_default_options_meta_boxes() {\r\n\t\t// \tif ( apply_filters( 'show-twitter-like-this', true ) )\r\n\t\t// \t\tadd_meta_box( $this->_slug . '-like-this', __('Like this Plugin?', $this->_slug), array($this, 'like_this_meta_box'), 'twitter-' . $this->_slug, 'sidebar');\r\n\r\n\t\t// \tif ( apply_filters( 'show-twitter-support', true ) )\r\n\t\t// \t\tadd_meta_box( $this->_slug . '-support', __('Need Support?', $this->_slug), array($this, 'support_meta_box'), 'twitter-' . $this->_slug, 'sidebar');\r\n\t\t// \tif ( apply_filters( 'show-twitter-feed', true ) )\r\n\t\t// \t\tadd_meta_box( $this->_slug . '-twitter-feed', __('Latest news from twitter', $this->_slug), array($this, 'twitter_feed_meta_box'), 'twitter-' . $this->_slug, 'sidebar');\r\n\t\t// }\r\n\r\n\t\tpublic function screen_icon_link($name = 'twitter') {\r\n\t\t\t$link = '<a href=\"http://fossasia.org\">';\r\n\t\t\tif ( function_exists( 'get_screen_icon' ) ) {\r\n\t\t\t\t$link .= get_screen_icon( $name );\r\n\t\t\t} else {\r\n\t\t\t\tob_start();\r\n\t\t\t\tscreen_icon($name);\r\n\t\t\t\t$link .= ob_get_clean();\r\n\t\t\t}\r\n\t\t\t$link .= '</a>';\r\n\t\t\techo apply_filters('rpf-screen_icon_link', $link, $name );\r\n\t\t}\r\n\r\n\t\tpublic function admin_print_scripts() {\r\n\t\t\tif (isset($_GET['page']) && $_GET['page'] == $this->_hook) {\r\n\t\t\t\twp_enqueue_script('postbox');\r\n\t\t\t\twp_enqueue_script('dashboard');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic function add_wp_twitter_widget_script() {\r\n\t\t\twp_register_script('twitter_widget_script', plugin_dir_url( __FILE__ ).'assets/js/wp-tweet-feed-widget.js', array('jquery'));\r\n\t\t\twp_enqueue_script('twitter_widget_script');\r\n\r\n\t\t}\r\n\t}\r\n}\r\n"
        },
        {
          "name": "wp-twitter-widget.php",
          "type": "blob",
          "size": 59.701171875,
          "content": "<?php\n/**\n * Plugin Name: Tweet Feed Widget\n * Description: A widget that properly handles twitter feeds, including @username, #hashtag, and link parsing.  It can even display profile images for the users.  Requires PHP5.\n * Version: 1.0\n * Author: FOSSASIA\n * Author URI: http://fossasia.org/\n * License: GPLv2 or later\n * Text Domain: tweet-feed-widget\n */\n\n/*\n\tCopyright 2006-current  FOSSASIA\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 2 of the License, or\n\t( at your option ) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, write to the Free Software\n\tFoundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n*/\n\nrequire_once( 'tlc-transients.php' );\nrequire_once( 'twitter-plugin-framework.php' );\ndefine( 'TWP_VERSION', '1.0' );\n\n/**\n * WP_Widget_Twitter is the class that handles the main widget.\n */\nclass WP_Widget_Twitter extends WP_Widget {\n\tpublic function __construct () {\n\t\t$this->_slug = 'tweet-feed-widget';\n\t\t$wpTwitterWidget = wpTwitterWidget::getInstance();\n\t\t$widget_ops = array(\n\t\t\t'classname' => 'widget_twitter',\n\t\t\t'description' => __( 'Follow a Twitter Feed', $wpTwitterWidget->get_slug() )\n\t\t);\n\t\t$control_ops = array(\n\t\t\t'width' => 400,\n\t\t\t'height' => 350,\n\t\t\t'id_base' => 'twitter'\n\t\t);\n\t\t$name = __( 'Tweet Feed Widget', $wpTwitterWidget->get_slug() );\n\n\t\tparent::__construct( 'twitter', $name, $widget_ops, $control_ops );\n\t}\n\n\tprivate function _getInstanceSettings ( $instance ) {\n\t\t$wpTwitterWidget = wpTwitterWidget::getInstance();\n\t\treturn $wpTwitterWidget->getSettings( $instance );\n\t}\n\n\tpublic function form( $instance ) {\n\t\t$instance = $this->_getInstanceSettings( $instance );\n\n\t\t$wpTwitterWidget = wpTwitterWidget::getInstance();\n\t\t$users = $wpTwitterWidget->get_users_list( true );\n\t\t$lists = $wpTwitterWidget->get_lists();\n\n\t\t$default_settings = $wpTwitterWidget->getSettings( array() );\n\n?>\n\t\t\t<p>\n\t\t\t\t<label for=\"<?php echo $this->get_field_id( 'username' ); ?>\"><?php _e( 'Twitter username:', $this->_slug ); ?></label>\n\t\t\t\t<?php\n\t\t\t\tif($default_settings['loklak_api']) {\n\t\t\t\t\t?>\n\t\t\t\t\t\t<input class=\"widefat\" id=\"<?php echo $this->get_field_id( 'username' ); ?>\" name=\"<?php echo $this->get_field_name( 'username' ); ?>\" type=\"text\" class=\"regular-text code\" value=\"<?php echo esc_attr( strtolower( $instance['username'] ) ); ?>\"/>\n\t\t\t    \t<?php\n\t\t\t    }\n\t\t\t    else {\n\t\t\t    \t?>\n\t\t\t\t\t<select id=\"<?php echo $this->get_field_id( 'username' ); ?>\" name=\"<?php echo $this->get_field_name( 'username' ); ?>\">\n\t\t\t\t\t\t<option></option>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t$selected = false;\n\t\t\t\t\t\tforeach ( $users as $u ) {\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<option value=\"<?php echo esc_attr( strtolower( $u['screen_name'] ) ); ?>\"<?php $s = selected( strtolower( $u['screen_name'] ), strtolower( $instance['username'] ) ) ?>><?php echo esc_html( $u['screen_name'] ); ?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif ( ! empty( $s ) )\n\t\t\t\t\t\t\t\t$selected = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t</select>\n\t\t\t\t\t<?php\n\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<label for=\"<?php echo $this->get_field_id( 'list' ); ?>\"><?php _e( 'Twitter list:', $this->_slug ); ?></label>\n\t\t\t\t<select id=\"<?php echo $this->get_field_id( 'list' ); ?>\" name=\"<?php echo $this->get_field_name( 'list' ); ?>\">\n\t\t\t\t\t<option></option>\n\t\t\t\t\t<?php\n\t\t\t\t\tforeach ( $lists as $user => $user_lists ) {\n\t\t\t\t\t\techo '<optgroup label=\"' . esc_attr( $user ) . '\">';\n\t\t\t\t\t\tforeach ( $user_lists as $list_id => $list_name ) {\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<option value=\"<?php echo esc_attr( $user . '::' . $list_id ); ?>\"<?php $s = selected( $user . '::' . $list_id, strtolower( $instance['list'] ) ) ?>><?php echo esc_html( $list_name ); ?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t}\n\t\t\t\t\t\techo '</optgroup>';\n\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</select>\n\t\t\t</p>\n\t\t\t<?php\n\t\t\tif( !$default_settings['loklak_api'] ){\n\t\t\t\tif ( ! $selected && ! empty( $instance['username'] ) ) {\n\t\t\t\t\t$query_args = array(\n\t\t\t\t\t\t'action' => 'authorize',\n\t\t\t\t\t\t'screen_name' => $instance['username'],\n\t\t\t\t\t);\n\t\t\t\t\t$authorize_user_url = wp_nonce_url( add_query_arg( $query_args, $wpTwitterWidget->get_options_url() ), 'authorize' );\n\t\t\t\t\t?>\n\t\t\t\t<p>\n\t\t\t\t\t<a href=\"<?php echo esc_url( $authorize_user_url ); ?>\" style=\"color:red;\">\n\t\t\t\t\t\t<?php _e( 'You need to authorize this account.', $this->_slug ); ?>\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t\t<?php\n\t\t\t\t}\n\t\t\t}\n\t\t\t?>\n\t\t\t<p>\n\t\t\t\t<label for=\"<?php echo $this->get_field_id( 'title' ); ?>\"><?php _e( 'Give the feed a title ( optional ):', $this->_slug ); ?></label>\n\t\t\t\t<input class=\"widefat\" id=\"<?php echo $this->get_field_id( 'title' ); ?>\" name=\"<?php echo $this->get_field_name( 'title' ); ?>\" type=\"text\" value=\"<?php esc_attr_e( $instance['title'] ); ?>\" />\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<label for=\"<?php echo $this->get_field_id( 'items' ); ?>\"><?php _e( 'How many items would you like to display?', $this->_slug ); ?></label>\n\t\t\t\t<select id=\"<?php echo $this->get_field_id( 'items' ); ?>\" name=\"<?php echo $this->get_field_name( 'items' ); ?>\">\n\t\t\t\t\t<?php\n\t\t\t\t\t\tfor ( $i = 1; $i <= 20; ++$i ) {\n\t\t\t\t\t\t\techo \"<option value='$i' \". selected( $instance['items'], $i, false ). \">$i</option>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</select>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<label for=\"<?php echo $this->get_field_id( 'avatar' ); ?>\"><?php _e( 'Display profile image?', $this->_slug ); ?></label>\n\t\t\t\t<select id=\"<?php echo $this->get_field_id( 'avatar' ); ?>\" name=\"<?php echo $this->get_field_name( 'avatar' ); ?>\">\n\t\t\t\t\t<option value=\"\"<?php selected( $instance['avatar'], '' ) ?>><?php _e( 'Do not show', $this->_slug ); ?></option>\n\t\t\t\t\t<option value=\"mini\"<?php selected( $instance['avatar'], 'mini' ) ?>><?php _e( 'Mini - 24px by 24px', $this->_slug ); ?></option>\n\t\t\t\t\t<option value=\"normal\"<?php selected( $instance['avatar'], 'normal' ) ?>><?php _e( 'Normal - 48px by 48px', $this->_slug ); ?></option>\n\t\t\t\t\t<option value=\"bigger\"<?php selected( $instance['avatar'], 'bigger' ) ?>><?php _e( 'Bigger - 73px by 73px', $this->_slug ); ?></option>\n\t\t\t\t\t<option value=\"original\"<?php selected( $instance['avatar'], 'original' ) ?>><?php _e( 'Original', $this->_slug ); ?></option>\n\t\t\t\t</select>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<input type=\"hidden\" value=\"false\" name=\"<?php echo $this->get_field_name( 'showretweets' ); ?>\" />\n\t\t\t\t<input class=\"checkbox\" type=\"checkbox\" value=\"true\" id=\"<?php echo $this->get_field_id( 'showretweets' ); ?>\" name=\"<?php echo $this->get_field_name( 'showretweets' ); ?>\"<?php checked( $instance['showretweets'], 'true' ); ?> />\n\t\t\t\t<label for=\"<?php echo $this->get_field_id( 'showretweets' ); ?>\"><?php _e( 'Include retweets', $this->_slug ); ?></label>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<input type=\"hidden\" value=\"false\" name=\"<?php echo $this->get_field_name( 'hidereplies' ); ?>\" />\n\t\t\t\t<input class=\"checkbox\" type=\"checkbox\" value=\"true\" id=\"<?php echo $this->get_field_id( 'hidereplies' ); ?>\" name=\"<?php echo $this->get_field_name( 'hidereplies' ); ?>\"<?php checked( $instance['hidereplies'], 'true' ); ?> />\n\t\t\t\t<label for=\"<?php echo $this->get_field_id( 'hidereplies' ); ?>\"><?php _e( 'Hide @replies', $this->_slug ); ?></label>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<input type=\"hidden\" value=\"false\" name=\"<?php echo $this->get_field_name( 'hidefrom' ); ?>\" />\n\t\t\t\t<input class=\"checkbox\" type=\"checkbox\" value=\"true\" id=\"<?php echo $this->get_field_id( 'hidefrom' ); ?>\" name=\"<?php echo $this->get_field_name( 'hidefrom' ); ?>\"<?php checked( $instance['hidefrom'], 'true' ); ?> />\n\t\t\t\t<label for=\"<?php echo $this->get_field_id( 'hidefrom' ); ?>\"><?php _e( 'Hide sending applications', $this->_slug ); ?></label>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<input type=\"hidden\" value=\"false\" name=\"<?php echo $this->get_field_name( 'showintents' ); ?>\" />\n\t\t\t\t<input class=\"checkbox\" type=\"checkbox\" value=\"true\" id=\"<?php echo $this->get_field_id( 'showintents' ); ?>\" name=\"<?php echo $this->get_field_name( 'showintents' ); ?>\"<?php checked( $instance['showintents'], 'true' ); ?> />\n\t\t\t\t<label for=\"<?php echo $this->get_field_id( 'showintents' ); ?>\"><?php _e( 'Show Tweet Intents (reply, retweet, favorite)', $this->_slug ); ?></label>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<input type=\"hidden\" value=\"false\" name=\"<?php echo $this->get_field_name( 'showfollow' ); ?>\" />\n\t\t\t\t<input class=\"checkbox\" type=\"checkbox\" value=\"true\" id=\"<?php echo $this->get_field_id( 'showfollow' ); ?>\" name=\"<?php echo $this->get_field_name( 'showfollow' ); ?>\"<?php checked( $instance['showfollow'], 'true' ); ?> />\n\t\t\t\t<label for=\"<?php echo $this->get_field_id( 'showfollow' ); ?>\"><?php _e( 'Show Follow Link', $this->_slug ); ?></label>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<label for=\"<?php echo $this->get_field_id( 'errmsg' ); ?>\"><?php _e( 'What to display when Twitter is down ( optional ):', $this->_slug ); ?></label>\n\t\t\t\t<input class=\"widefat\" id=\"<?php echo $this->get_field_id( 'errmsg' ); ?>\" name=\"<?php echo $this->get_field_name( 'errmsg' ); ?>\" type=\"text\" value=\"<?php esc_attr_e( $instance['errmsg'] ); ?>\" />\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<label for=\"<?php echo $this->get_field_id( 'showts' ); ?>\"><?php _e( 'Show date/time of Tweet ( rather than 2 ____ ago ):', $this->_slug ); ?></label>\n\t\t\t\t<select id=\"<?php echo $this->get_field_id( 'showts' ); ?>\" name=\"<?php echo $this->get_field_name( 'showts' ); ?>\">\n\t\t\t\t\t<option value=\"0\" <?php selected( $instance['showts'], '0' ); ?>><?php _e( 'Always', $this->_slug );?></option>\n\t\t\t\t\t<option value=\"3600\" <?php selected( $instance['showts'], '3600' ); ?>><?php _e( 'If over an hour old', $this->_slug );?></option>\n\t\t\t\t\t<option value=\"86400\" <?php selected( $instance['showts'], '86400' ); ?>><?php _e( 'If over a day old', $this->_slug );?></option>\n\t\t\t\t\t<option value=\"604800\" <?php selected( $instance['showts'], '604800' ); ?>><?php _e( 'If over a week old', $this->_slug );?></option>\n\t\t\t\t\t<option value=\"2592000\" <?php selected( $instance['showts'], '2592000' ); ?>><?php _e( 'If over a month old', $this->_slug );?></option>\n\t\t\t\t\t<option value=\"31536000\" <?php selected( $instance['showts'], '31536000' ); ?>><?php _e( 'If over a year old', $this->_slug );?></option>\n\t\t\t\t\t<option value=\"-1\" <?php selected( $instance['showts'], '-1' ); ?>><?php _e( 'Never', $this->_slug );?></option>\n\t\t\t\t</select>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<label for=\"<?php echo $this->get_field_id( 'dateFormat' ); ?>\"><?php echo sprintf( __( 'Format to display the date in, uses <a href=\"%s\">PHP date()</a> format:', $this->_slug ), 'http://php.net/date' ); ?></label>\n\t\t\t\t<input class=\"widefat\" id=\"<?php echo $this->get_field_id( 'dateFormat' ); ?>\" name=\"<?php echo $this->get_field_name( 'dateFormat' ); ?>\" type=\"text\" value=\"<?php esc_attr_e( $instance['dateFormat'] ); ?>\" />\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<input type=\"hidden\" value=\"false\" name=\"<?php echo $this->get_field_name( 'targetBlank' ); ?>\" />\n\t\t\t\t<input class=\"checkbox\" type=\"checkbox\" value=\"true\" id=\"<?php echo $this->get_field_id( 'targetBlank' ); ?>\" name=\"<?php echo $this->get_field_name( 'targetBlank' ); ?>\"<?php checked( $instance['targetBlank'], 'true' ); ?> />\n\t\t\t\t<label for=\"<?php echo $this->get_field_id( 'targetBlank' ); ?>\"><?php _e( 'Open links in a new window', $this->_slug ); ?></label>\n\t\t\t</p>\n\t\t\t<p><?php echo $wpTwitterWidget->get_support_forum_link(); ?></p>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\tjQuery( '#<?php echo $this->get_field_id( 'username' ) ?>' ).on( 'change', function() {\n\t\t\t\t\tjQuery('#<?php echo $this->get_field_id( 'list' ) ?>' ).val(0);\n\t\t\t\t});\n\t\t\t\tjQuery( '#<?php echo $this->get_field_id( 'list' ) ?>' ).on( 'change', function() {\n\t\t\t\t\tjQuery('#<?php echo $this->get_field_id( 'username' ) ?>' ).val(0);\n\t\t\t\t});\n\t\t\t</script>\n<?php\n\t\treturn;\n\t}\n\n\tpublic function update( $new_instance, $old_instance ) {\n\t\t$instance = $this->_getInstanceSettings( $new_instance );\n\n\t\t// Clean up the free-form areas\n\t\t$instance['title'] = stripslashes( $new_instance['title'] );\n\t\t$instance['errmsg'] = stripslashes( $new_instance['errmsg'] );\n\n\t\t// If the current user isn't allowed to use unfiltered HTML, filter it\n\t\tif ( !current_user_can( 'unfiltered_html' ) ) {\n\t\t\t$instance['title'] = strip_tags( $new_instance['title'] );\n\t\t\t$instance['errmsg'] = strip_tags( $new_instance['errmsg'] );\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\tpublic function flush_widget_cache() {\n\t\twp_cache_delete( 'widget_twitter_widget', 'widget' );\n\t}\n\n\tpublic function widget( $args, $instance ) {\n\t\t$instance = $this->_getInstanceSettings( $instance );\n\t\t$wpTwitterWidget = wpTwitterWidget::getInstance();\n\t\techo $wpTwitterWidget->display( wp_parse_args( $instance, $args ) );\n\t}\n}\n\n\n/**\n * wpTwitterWidget is the class that handles everything outside the widget. This\n * includes filters that modify tweet content for things like linked usernames.\n * It also helps us avoid name collisions.\n */\nclass wpTwitterWidget extends TwitterPlugin {\n\t/**\n\t * @var wpTwitter\n\t */\n\tprivate $_wp_twitter_oauth;\n\n\t/**\n\t * @var wpTwitterWidget - Static property to hold our singleton instance\n\t */\n\tstatic $instance = false;\n\n\tprotected function _init() {\n\t\trequire_once( 'lib/wp-twitter.php' );\n\n\t\t$this->_hook = 'tweetFeedplugin';\n\t\t$this->_file = plugin_basename( __FILE__ );\n\t\t$this->_pageTitle = __( 'Tweet Feed Widget', $this->_slug );\n\t\t$this->_menuTitle = __( 'Tweet Feed Widget', $this->_slug );\n\t\t$this->_accessLevel = 'manage_options';\n\t\t$this->_optionGroup = 'twp-options';\n\t\t$this->_optionNames = array( 'twp' );\n\t\t$this->_optionCallbacks = array( 'twp' => array($this, 'sanitize_settings') );\n\t\t$this->_slug = 'tweet-feed-widget';\n\t\t$this->_paypalButtonId = '9993090';\n\n\t\t/**\n\t\t * Add filters and actions\n\t\t */\n\t\tadd_action( 'init', array( $this, 'init' ) );\n\t\tadd_action( 'admin_init', array( $this, 'handle_actions' ) );\n\t\tadd_action( 'admin_notices', array( $this, 'show_messages' ) );\n\t\tadd_action( 'widgets_init', array( $this, 'register' ), 11 );\n\t\tadd_filter( 'widget_twitter_content', array( $this, 'linkTwitterUsers' ) );\n\t\tadd_filter( 'widget_twitter_content', array( $this, 'linkUrls' ) );\n\t\tadd_filter( 'widget_twitter_content', array( $this, 'linkHashtags' ) );\n\t\tadd_filter( 'widget_twitter_content', 'convert_chars' );\n\t\tadd_filter( $this->_slug .'-opt-twp', array( $this, 'filterSettings' ) );\n\t\tadd_filter( $this->_slug .'-opt-twp-authed-users', array( $this, 'authed_users_option' ) );\n\t\tadd_shortcode( 'tweet-feed-widget', array( $this, 'handleShortcodes' ) );\n\n\t\t$twp_version = get_option( 'twp_version' );\n\t\tif ( TWP_VERSION != $twp_version )\n\t\t\tupdate_option( 'twp_version', TWP_VERSION );\n\t}\n\n\tprotected function _post_settings_init() {\n\t\t$oauth_settings = array(\n\t\t\t'consumer-key'    => $this->_settings['twp']['consumer-key'],\n\t\t\t'consumer-secret' => $this->_settings['twp']['consumer-secret'],\n\t\t);\n\t\t$this->_wp_twitter_oauth = new wpTwitter( $oauth_settings );\n\n\t\t// We want to fill 'twp-authed-users' but not overwrite them when saving\n\t\t$this->_settings['twp-authed-users'] = apply_filters($this->_slug.'-opt-twp-authed-users', get_option('twp-authed-users'));\n\t}\n\n\t/**\n\t * Function to instantiate our class and make it a singleton\n\t */\n\tpublic static function getInstance() {\n\t\tif ( !self::$instance )\n\t\t\tself::$instance = new self;\n\n\t\treturn self::$instance;\n\t}\n\n\tpublic function get_slug() {\n\t\treturn $this->_slug;\n\t}\n\n\tpublic function handle_actions() {\n\t\tif ( empty( $_GET['action'] ) || empty( $_GET['page'] ) || $_GET['page'] != $this->_hook )\n\t\t\treturn;\n\n\t\tif ( 'clear-locks' == $_GET['action'] ) {\n\t\t\tcheck_admin_referer( 'clear-locks' );\n\t\t\t$redirect_args = array( 'message' => strtolower( $_GET['action'] ) );\n\t\t\tglobal $wpdb;\n\t\t\t$locks_q = \"DELETE FROM `{$wpdb->options}` WHERE `option_name` LIKE '_transient_tlc_up__twp%'\";\n\t\t\t$redirect_args['locks_cleared'] = $wpdb->query( $locks_q );\n\t\t\twp_safe_redirect( add_query_arg( $redirect_args, remove_query_arg( array( 'action', '_wpnonce' ) ) ) );\n\t\t\texit;\n\t\t}\n\n\t\tif ( 'remove' == $_GET['action'] ) {\n\t\t\tcheck_admin_referer( 'remove-' . $_GET['screen_name'] );\n\n\t\t\t$redirect_args = array(\n\t\t\t\t'message'    => 'removed',\n\t\t\t\t'removed' => '',\n\t\t\t);\n\t\t\tunset( $this->_settings['twp-authed-users'][strtolower($_GET['screen_name'])] );\n\t\t\tif ( update_option( 'twp-authed-users', $this->_settings['twp-authed-users'] ) );\n\t\t\t\t$redirect_args['removed'] = $_GET['screen_name'];\n\n\t\t\twp_safe_redirect( add_query_arg( $redirect_args, $this->get_options_url() ) );\n\t\t\texit;\n\t\t}\n\t\tif ( 'authorize' == $_GET['action'] ) {\n\t\t\tcheck_admin_referer( 'authorize' );\n\t\t\t$auth_redirect = add_query_arg( array( 'action' => 'authorized' ), $this->get_options_url() );\n\t\t\t$token = $this->_wp_twitter_oauth->getRequestToken( $auth_redirect );\n\t\t\tif ( is_wp_error( $token ) ) {\n\t\t\t\t$this->_error = $token;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tupdate_option( '_twp_request_token_'.$token['nonce'], $token );\n\t\t\t$screen_name = empty( $_GET['screen_name'] )? '':$_GET['screen_name'];\n\t\t\twp_redirect( $this->_wp_twitter_oauth->get_authorize_url( $screen_name ) );\n\t\t\texit;\n\t\t}\n\t\tif ( 'authorized' == $_GET['action'] ) {\n\t\t\t$redirect_args = array(\n\t\t\t\t'message'    => strtolower( $_GET['action'] ),\n\t\t\t\t'authorized' => '',\n\t\t\t);\n\t\t\tif ( empty( $_GET['oauth_verifier'] ) || empty( $_GET['nonce'] ) )\n\t\t\t\twp_safe_redirect( add_query_arg( $redirect_args, $this->get_options_url() ) );\n\n\t\t\t$this->_wp_twitter_oauth->set_token( get_option( '_twp_request_token_'.$_GET['nonce'] ) );\n\t\t\tdelete_option( '_twp_request_token_'.$_GET['nonce'] );\n\n\t\t\t$token = $this->_wp_twitter_oauth->get_access_token( $_GET['oauth_verifier'] );\n\t\t\tif ( ! is_wp_error( $token ) ) {\n\t\t\t\t$this->_settings['twp-authed-users'][strtolower($token['screen_name'])] = $token;\n\t\t\t\tupdate_option( 'twp-authed-users', $this->_settings['twp-authed-users'] );\n\n\t\t\t\t$redirect_args['authorized'] = $token['screen_name'];\n\t\t\t}\n\t\t\twp_safe_redirect( add_query_arg( $redirect_args, $this->get_options_url() ) );\n\t\t\texit;\n\t\t}\n\t}\n\n\tpublic function show_messages() {\n\t\tif ( ! empty( $_GET['message'] ) ) {\n\t\t\tif ( 'clear-locks' == $_GET['message'] ) {\n\t\t\t\tif ( empty( $_GET['locks_cleared'] ) || 0 == $_GET['locks_cleared'] )\n\t\t\t\t\t$msg = __( 'There were no locks to clear!', $this->_slug );\n\t\t\t\telse\n\t\t\t\t\t$msg = sprintf( _n( 'Successfully cleared %d lock.', 'Successfully cleared %d locks.', $_GET['locks_cleared'], $this->_slug ), $_GET['locks_cleared'] );\n\t\t\t} elseif ( 'authorized' == $_GET['message'] ) {\n\t\t\t\tif ( ! empty( $_GET['authorized'] ) )\n\t\t\t\t\t$msg = sprintf( __( 'Successfully authorized @%s', $this->_slug ), $_GET['authorized'] );\n\t\t\t\telse\n\t\t\t\t\t$msg = __( 'There was a problem authorizing your account.', $this->_slug );\n\t\t\t} elseif ( 'removed' == $_GET['message'] ) {\n\t\t\t\tif ( ! empty( $_GET['removed'] ) )\n\t\t\t\t\t$msg = sprintf( __( 'Successfully removed @%s', $this->_slug ), $_GET['removed'] );\n\t\t\t\telse\n\t\t\t\t\t$msg = __( 'There was a problem removing your account.', $this->_slug );\n\t\t\t}\n\t\t\tif ( ! empty( $msg ) )\n\t\t\t\techo \"<div class='updated'><p>\" . esc_html( $msg ) . '</p></div>';\n\t\t}\n\n\t\tif ( ! empty( $this->_error ) && is_wp_error( $this->_error ) ) {\n\t\t\t$msg = '<p>' . implode( '</p><p>', $this->_error->get_error_messages() ) . '</p>';\n\t\t\techo '<div class=\"error\">' . $msg . '</div>';\n\t\t}\n\n\t\tif ( (empty( $this->_settings['twp']['consumer-key'] ) || empty( $this->_settings['twp']['consumer-secret'] ) ) && !$this->_settings['twp']['loklak_api'] ) {\n\t\t\t$msg = sprintf( __( 'You need to <a href=\"%s\">set up your Twitter app keys</a> or use <a href=\"loklak.org\">Loklak API</a> to activate plugin functionality.', $this->_slug ), $this->get_options_url() );\n\t\t\techo '<div class=\"error\"><p>' . $msg . '</p></div>';\n\t\t}\n\n\t\tif ( empty( $this->_settings['twp-authed-users'] ) && !$this->_settings['twp']['loklak_api']) {\n\t\t\t$msg = sprintf( __( 'You need to <a href=\"%s\">authorize your Twitter accounts</a>.', $this->_slug ), $this->get_options_url() );\n\t\t\techo '<div class=\"error\"><p>' . $msg . '</p></div>';\n\t\t}\n\t}\n\n\tpublic function add_options_meta_boxes() {\n\t\tadd_meta_box( $this->_slug. '-loklak-api', __( 'Loklak API settings', $this->_slug ), array( $this, 'loklak_api_settings_meta_box' ), 'twitter-' . $this->_slug, 'main' );\n\t\tadd_meta_box( $this->_slug . '-oauth', __( 'Authenticated Twitter Accounts', $this->_slug ), array( $this, 'oauth_meta_box' ), 'twitter-' . $this->_slug, 'main' );\n\t\tadd_meta_box( $this->_slug . '-general-settings', __( 'General Settings', $this->_slug ), array( $this, 'general_settings_meta_box' ), 'twitter-' . $this->_slug, 'main' );\n\t\tadd_meta_box( $this->_slug . '-defaults', __( 'Default Settings for Shortcodes', $this->_slug ), array( $this, 'default_settings_meta_box' ), 'twitter-' . $this->_slug, 'main' );\n\t}\n\n\tpublic function loklak_api_settings_meta_box() {\n\t\t?>\n\t\t<table class=\"form-table\">\n\t\t\t<tr valign=\"top\">\n\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t<label><?php _e( 'Loklak API', $this->_slug );?></label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<input class=\"checkbox\" type=\"checkbox\" value=\"true\" id=\"twp_loklak_api\" name=\"twp[loklak_api]\"<?php checked( $this->_settings['twp']['loklak_api'], 'true' ); ?> />Use anonymous API of <a href=\"http://loklak.org/\">loklak.org</a> and get plugin data through loklak (no registration and authentication required). <a href=\"http://loklak.org/\">Find out more</a>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<?php\n\t}\n\n\tpublic function oauth_meta_box() {\n\t\t$authorize_url = wp_nonce_url( add_query_arg( array( 'action' => 'authorize' ) ), 'authorize' );\n\n\t\t?>\n\t\t<table class=\"widefat\">\n\t\t\t<thead>\n\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t<?php _e( 'Username', $this->_slug );?>\n\t\t\t\t\t</th>\n\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t<?php _e( 'Lists Rate Usage', $this->_slug );?>\n\t\t\t\t\t</th>\n\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t<?php _e( 'Statuses Rate Usage', $this->_slug );?>\n\t\t\t\t\t</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t<?php\n\t\tforeach ( $this->_settings['twp-authed-users'] as $u ) {\n\t\t\t$this->_wp_twitter_oauth->set_token( $u );\n\t\t\t$rates = $this->_wp_twitter_oauth->send_authed_request( 'application/rate_limit_status', 'GET', array( 'resources' => 'statuses,lists' ) );\n\t\t\t$style = $auth_link = '';\n\t\t\tif ( is_wp_error( $rates ) ) {\n\t\t\t\t$query_args = array(\n\t\t\t\t\t'action' => 'authorize',\n\t\t\t\t\t'screen_name' => $u['screen_name'],\n\t\t\t\t);\n\t\t\t\t$authorize_user_url = wp_nonce_url( add_query_arg( $query_args ), 'authorize' );\n\t\t\t\t$style = 'color:red;';\n\t\t\t\t$auth_link = ' - <a href=\"' . esc_url( $authorize_user_url ) . '\">' . __( 'Reauthorize', $this->_slug ) . '</a>';\n\t\t\t}\n\t\t\t$query_args = array(\n\t\t\t\t'action' => 'remove',\n\t\t\t\t'screen_name' => $u['screen_name'],\n\t\t\t);\n\t\t\t$remove_user_url = wp_nonce_url( add_query_arg( $query_args ), 'remove-' . $u['screen_name'] );\n\t\t\t?>\n\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t<th scope=\"row\" style=\"<?php echo esc_attr( $style ); ?>\">\n\t\t\t\t\t\t<strong>@<?php echo esc_html( $u['screen_name'] ) . $auth_link;?></strong>\n\t\t\t\t\t\t<br /><a href=\"<?php echo esc_url( $remove_user_url ) ?>\"><?php _e( 'Remove', $this->_slug ) ?></a>\n\t\t\t\t\t</th>\n\t\t\t\t\t<?php\n\t\t\t\t\tif ( ! is_wp_error( $rates ) ) {\n\t\t\t\t\t\t$display_rates = array(\n\t\t\t\t\t\t\t__( 'Lists', $this->_slug ) => $rates->resources->lists->{'/lists/statuses'},\n\t\t\t\t\t\t\t__( 'Statuses', $this->_slug ) => $rates->resources->statuses->{'/statuses/user_timeline'},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tforeach ( $display_rates as $title => $rate ) {\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<strong><?php echo esc_html( $title ); ?></strong>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<?php echo sprintf( __( 'Used: %d', $this->_slug ), $rate->limit - $rate->remaining ); ?><br />\n\t\t\t\t\t\t\t\t<?php echo sprintf( __( 'Remaining: %d', $this->_slug ), $rate->remaining ); ?><br />\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$minutes = ceil( ( $rate->reset - gmdate( 'U' ) ) / 60 );\n\t\t\t\t\t\t\t\techo sprintf( _n( 'Limits reset in: %d minutes', 'Limits reset in: %d minutes', $minutes, $this->_slug ), $minutes );\n\t\t\t\t\t\t\t\t?><br />\n\t\t\t\t\t\t\t\t<small><?php _e( 'This is overall usage, not just usage from Tweet Feed Widget', $this->_slug ); ?></small>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<p><?php _e( 'There was an error checking your rate limit.', $this->_slug ); ?></p>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<p><?php _e( 'There was an error checking your rate limit.', $this->_slug ); ?></p>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</tr>\n\t\t\t\t<?php\n\t\t\t}\n\t\t?>\n\t\t</table>\n\t\t<?php\n\t\tif ( empty( $this->_settings['twp']['consumer-key'] ) || empty( $this->_settings['twp']['consumer-secret'] )\t ) {\n\t\t?>\n\t\t<p>\n\t\t\t<strong><?php _e( 'You need to fill in the Consumer key and Consumer secret before you can authorize accounts.', $this->_slug ) ?></strong>\n\t\t</p>\n\t\t<?php\n\t\t} else {\n\t\t?>\n\t\t<p>\n\t\t\t<a href=\"<?php echo esc_url( $authorize_url );?>\" class=\"button button-large button-primary\"><?php _e( 'Authorize New Account', $this->_slug ); ?></a>\n\t\t</p>\n\t\t<?php\n\t\t}\n\t}\n\tpublic function general_settings_meta_box() {\n\t\t$clear_locks_url = wp_nonce_url( add_query_arg( array( 'action' => 'clear-locks' ) ), 'clear-locks' );\n\t\t?>\n\t\t\t\t<table class=\"form-table\">\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<label for=\"twp_consumer_key\"><?php _e( 'Consumer key', $this->_slug );?></label>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input id=\"twp_consumer_key\" name=\"twp[consumer-key]\" type=\"text\" class=\"regular-text code\" value=\"<?php esc_attr_e( $this->_settings['twp']['consumer-key'] ); ?>\" size=\"40\" />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<label for=\"twp_consumer_secret\"><?php _e( 'Consumer secret', $this->_slug );?></label>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input id=\"twp_consumer_secret\" name=\"twp[consumer-secret]\" type=\"text\" class=\"regular-text code\" value=\"<?php esc_attr_e( $this->_settings['twp']['consumer-secret'] ); ?>\" size=\"40\" />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<?php\n\t\t\t\t\tif ( empty( $this->_settings['twp']['consumer-key'] ) || empty( $this->_settings['twp']['consumer-secret'] ) ) {\n\t\t\t\t\t?>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">&nbsp;</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<strong><?php _e( 'Directions to get the Consumer Key and Consumer Secret', $this->_slug ) ?></strong>\n\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t<li><a href=\"https://dev.twitter.com/apps/new\"><?php _e( 'Add a new Twitter application', $this->_slug ) ?></a></li>\n\t\t\t\t\t\t\t\t<li><?php _e( \"Fill in Name, Description, Website, and Callback URL (don't leave any blank) with anything you want\" ) ?></a></li>\n\t\t\t\t\t\t\t\t<li><?php _e( \"Agree to rules, fill out captcha, and submit your application\" ) ?></a></li>\n\t\t\t\t\t\t\t\t<li><?php _e( \"Copy the Consumer key and Consumer secret into the fields above\" ) ?></a></li>\n\t\t\t\t\t\t\t\t<li><?php _e( \"Click the Update Options button at the bottom of this page\" ) ?></a></li>\n\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<?php\n\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<?php _e( \"Clear Update Locks\", $this->_slug );?>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<a href=\"<?php echo esc_url( $clear_locks_url ); ?>\"><?php _e( 'Clear Update Locks', $this->_slug ); ?></a><br />\n\t\t\t\t\t\t\t<small><?php _e( \"A small percentage of servers seem to have issues where an update lock isn't getting cleared.  If you're experiencing issues with your feed not updating, try clearing the update locks.\", $this->_slug ); ?></small>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<?php _e( 'Local requests:', $this->_slug ); ?>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif ( ! empty( $_GET['action'] ) && 'test-local-request' == $_GET['action'] ) {\n\t\t\t\t\t\t\t\tcheck_admin_referer( 'test-local-request' );\n\n\t\t\t\t\t\t\t\t$server_url = home_url( '/?twp-test-local-request' );\n\t\t\t\t\t\t\t\t$resp = wp_remote_post( $server_url, array( 'body' => array( '_twp-test-local-request' => 'test' ), 'sslverify' => apply_filters( 'https_local_ssl_verify', true ) ) );\n\t\t\t\t\t\t\t\tif ( !is_wp_error( $resp ) && $resp['response']['code'] >= 200 && $resp['response']['code'] < 300 ) {\n\t\t\t\t\t\t\t\t\tif ( 'success' === wp_remote_retrieve_body( $resp ) )\n\t\t\t\t\t\t\t\t\t\t_e( '<p style=\"color:green;\">Local requests appear to be functioning normally.</p>', $this->_slug );\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t_e( '<p style=\"color:red;\">The request went through, but an unexpected response was received.</p>', $this->_slug );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tprintf( __( '<p style=\"color:red;\">Failed.  Your server said: %s</p>', $this->_slug ), $resp['response']['message'] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$query_args = array(\n\t\t\t\t\t\t\t\t'action' => 'test-local-request',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t$test_local_url = wp_nonce_url( add_query_arg( $query_args, $this->get_options_url() ), 'test-local-request' );\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<a href=\"<?php echo esc_url( $test_local_url ); ?>\" class=\"button\">\n\t\t\t\t\t\t\t\t<?php _e( 'Test local requests', $this->_slug ); ?>\n\t\t\t\t\t\t\t</a><br />\n\t\t\t\t\t\t\t<small><?php _e( \"Tweet Feed Widget updates tweets in the background by placing a local request to your server.  If your Tweets aren't updating, test this.  If it fails, let your host know that loopback requests aren't working on your site.\", $this->_slug ); ?></small>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t<?php\n\t}\n\tpublic function default_settings_meta_box() {\n\t\t$users = $this->get_users_list( true );\n\t\t$lists = $this->get_lists();\n\t\t?>\n\t\t\t\t<p><?php _e( 'These settings are the default for the shortcodes and all of them can be overridden by specifying a different value in the shortcode itself.  All settings for widgets are locate in the individual widget.', $this->_slug ) ?></p>\n\t\t\t\t<table class=\"form-table\">\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<label for=\"twp_username\"><?php _e( 'Twitter username:', $this->_slug ); ?></label>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>\t\t\t\t\t\t\n\t\t\t\t\t\t\t<input id=\"twp_username\" name=\"twp[username]\" type=\"text\" class=\"regular-text code twp_username_input\" value=\"<?php esc_attr_e( $this->_settings['twp']['username'] ); ?>\" size=\"40\" style=\"display:none;\" />\n\t\t\t\t\t    \n\t\t\t\t\t\t\t<select id=\"twp_username\" name=\"twp[username]\" class=\"twp_username_select\">\n\t\t\t\t\t\t\t\t<option></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$selected = false;\n\t\t\t\t\t\t\t\tforeach ( $users as $u ) {\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<option value=\"<?php echo esc_attr( strtolower( $u['screen_name'] ) ); ?>\"<?php $s = selected( strtolower( $u['screen_name'] ), strtolower( $this->_settings['twp']['username'] ) ) ?>><?php echo esc_html( $u['screen_name'] ); ?></option>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tif ( ! empty( $s ) )\n\t\t\t\t\t\t\t\t\t\t$selected = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif ( ! $selected && ! empty( $this->_settings['twp']['username'] ) ) {\n\t\t\t\t\t\t\t\t$query_args = array(\n\t\t\t\t\t\t\t\t\t'action' => 'authorize',\n\t\t\t\t\t\t\t\t\t'screen_name' => $this->_settings['twp']['username'],\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t$authorize_user_url = wp_nonce_url( add_query_arg( $query_args, $this->get_options_url() ), 'authorize' );\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<a href=\"<?php echo esc_url( $authorize_user_url ); ?>\" style=\"color:red;\">\n\t\t\t\t\t\t\t\t\t<?php _e( 'You need to authorize this account.', $this->_slug ); ?>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<label for=\"twp_list\"><?php _e( 'Twitter list:', $this->_slug ); ?></label>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id=\"twp_list\" name=\"twp[list]\">\n\t\t\t\t\t\t\t\t<option></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tforeach ( $lists as $user => $user_lists ) {\n\t\t\t\t\t\t\t\t\techo '<optgroup label=\"' . esc_attr( $user ) . '\">';\n\t\t\t\t\t\t\t\t\tforeach ( $user_lists as $list_id => $list_name ) {\n\t\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t\t<option value=\"<?php echo esc_attr( $user . '::' . $list_id ); ?>\"<?php $s = selected( $user . '::' . $list_id, strtolower( $this->_settings['twp']['list'] ) ) ?>><?php echo esc_html( $list_name ); ?></option>\n\t\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\techo '</optgroup>';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<label for=\"twp_title\"><?php _e( 'Give the feed a title ( optional ):', $this->_slug ); ?></label>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input id=\"twp_title\" name=\"twp[title]\" type=\"text\" class=\"regular-text code\" value=\"<?php esc_attr_e( $this->_settings['twp']['title'] ); ?>\" size=\"40\" />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<label for=\"twp_items\"><?php _e( 'How many items would you like to display?', $this->_slug ); ?></label>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id=\"twp_items\" name=\"twp[items]\">\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tfor ( $i = 1; $i <= 20; ++$i ) {\n\t\t\t\t\t\t\t\t\t\techo \"<option value='$i' \". selected( $this->_settings['twp']['items'], $i, false ). \">$i</option>\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<label for=\"twp_avatar\"><?php _e( 'Display profile image?', $this->_slug ); ?></label>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id=\"twp_avatar\" name=\"twp[avatar]\">\n\t\t\t\t\t\t\t\t<option value=\"\"<?php selected( $this->_settings['twp']['avatar'], '' ) ?>><?php _e( 'Do not show', $this->_slug ); ?></option>\n\t\t\t\t\t\t\t\t<option value=\"mini\"<?php selected( $this->_settings['twp']['avatar'], 'mini' ) ?>><?php _e( 'Mini - 24px by 24px', $this->_slug ); ?></option>\n\t\t\t\t\t\t\t\t<option value=\"normal\"<?php selected( $this->_settings['twp']['avatar'], 'normal' ) ?>><?php _e( 'Normal - 48px by 48px', $this->_slug ); ?></option>\n\t\t\t\t\t\t\t\t<option value=\"bigger\"<?php selected( $this->_settings['twp']['avatar'], 'bigger' ) ?>><?php _e( 'Bigger - 73px by 73px', $this->_slug ); ?></option>\n\t\t\t\t\t\t\t\t<option value=\"original\"<?php selected( $this->_settings['twp']['avatar'], 'original' ) ?>><?php _e( 'Original', $this->_slug ); ?></option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<label for=\"twp_errmsg\"><?php _e( 'What to display when Twitter is down ( optional ):', $this->_slug ); ?></label>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input id=\"twp_errmsg\" name=\"twp[errmsg]\" type=\"text\" class=\"regular-text code\" value=\"<?php esc_attr_e( $this->_settings['twp']['errmsg'] ); ?>\" size=\"40\" />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<label for=\"twp_showts\"><?php _e( 'Show date/time of Tweet ( rather than 2 ____ ago ):', $this->_slug ); ?></label>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id=\"twp_showts\" name=\"twp[showts]\">\n\t\t\t\t\t\t\t\t<option value=\"0\" <?php selected( $this->_settings['twp']['showts'], '0' ); ?>><?php _e( 'Always', $this->_slug );?></option>\n\t\t\t\t\t\t\t\t<option value=\"3600\" <?php selected( $this->_settings['twp']['showts'], '3600' ); ?>><?php _e( 'If over an hour old', $this->_slug );?></option>\n\t\t\t\t\t\t\t\t<option value=\"86400\" <?php selected( $this->_settings['twp']['showts'], '86400' ); ?>><?php _e( 'If over a day old', $this->_slug );?></option>\n\t\t\t\t\t\t\t\t<option value=\"604800\" <?php selected( $this->_settings['twp']['showts'], '604800' ); ?>><?php _e( 'If over a week old', $this->_slug );?></option>\n\t\t\t\t\t\t\t\t<option value=\"2592000\" <?php selected( $this->_settings['twp']['showts'], '2592000' ); ?>><?php _e( 'If over a month old', $this->_slug );?></option>\n\t\t\t\t\t\t\t\t<option value=\"31536000\" <?php selected( $this->_settings['twp']['showts'], '31536000' ); ?>><?php _e( 'If over a year old', $this->_slug );?></option>\n\t\t\t\t\t\t\t\t<option value=\"-1\" <?php selected( $this->_settings['twp']['showts'], '-1' ); ?>><?php _e( 'Never', $this->_slug );?></option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<label for=\"twp_dateFormat\"><?php echo sprintf( __( 'Format to display the date in, uses <a href=\"%s\">PHP date()</a> format:', $this->_slug ), 'http://php.net/date' ); ?></label>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input id=\"twp_dateFormat\" name=\"twp[dateFormat]\" type=\"text\" class=\"regular-text code\" value=\"<?php esc_attr_e( $this->_settings['twp']['dateFormat'] ); ?>\" size=\"40\" />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<?php _e( \"Other Setting:\", $this->_slug );?>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"hidden\" value=\"false\" name=\"twp[showretweets]\" />\n\t\t\t\t\t\t\t<input class=\"checkbox\" type=\"checkbox\" value=\"true\" id=\"twp_showretweets\" name=\"twp[showretweets]\"<?php checked( $this->_settings['twp']['showretweets'], 'true' ); ?> />\n\t\t\t\t\t\t\t<label for=\"twp_showretweets\"><?php _e( 'Include retweets', $this->_slug ); ?></label>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<input type=\"hidden\" value=\"false\" name=\"twp[hidereplies]\" />\n\t\t\t\t\t\t\t<input class=\"checkbox\" type=\"checkbox\" value=\"true\" id=\"twp_hidereplies\" name=\"twp[hidereplies]\"<?php checked( $this->_settings['twp']['hidereplies'], 'true' ); ?> />\n\t\t\t\t\t\t\t<label for=\"twp_hidereplies\"><?php _e( 'Hide @replies', $this->_slug ); ?></label>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<input type=\"hidden\" value=\"false\" name=\"twp[hidefrom]\" />\n\t\t\t\t\t\t\t<input class=\"checkbox\" type=\"checkbox\" value=\"true\" id=\"twp_hidefrom\" name=\"twp[hidefrom]\"<?php checked( $this->_settings['twp']['hidefrom'], 'true' ); ?> />\n\t\t\t\t\t\t\t<label for=\"twp_hidefrom\"><?php _e( 'Hide sending applications', $this->_slug ); ?></label>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<input type=\"hidden\" value=\"false\" name=\"twp[showintents]\" />\n\t\t\t\t\t\t\t<input class=\"checkbox\" type=\"checkbox\" value=\"true\" id=\"twp_showintents\" name=\"twp[showintents]\"<?php checked( $this->_settings['twp']['showintents'], 'true' ); ?> />\n\t\t\t\t\t\t\t<label for=\"twp_showintents\"><?php _e( 'Show Tweet Intents (reply, retweet, favorite)', $this->_slug ); ?></label>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<input type=\"hidden\" value=\"false\" name=\"twp[showfollow]\" />\n\t\t\t\t\t\t\t<input class=\"checkbox\" type=\"checkbox\" value=\"true\" id=\"twp_showfollow\" name=\"twp[showfollow]\"<?php checked( $this->_settings['twp']['showfollow'], 'true' ); ?> />\n\t\t\t\t\t\t\t<label for=\"twp_showfollow\"><?php _e( 'Show Follow Link', $this->_slug ); ?></label>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<input type=\"hidden\" value=\"false\" name=\"twp[targetBlank]\" />\n\t\t\t\t\t\t\t<input class=\"checkbox\" type=\"checkbox\" value=\"true\" id=\"twp_targetBlank\" name=\"twp[targetBlank]\"<?php checked( $this->_settings['twp']['targetBlank'], 'true' ); ?> />\n\t\t\t\t\t\t\t<label for=\"twp_targetBlank\"><?php _e( 'Open links in a new window', $this->_slug ); ?></label>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t<?php\n\t}\n\n\t/**\n\t * Replace @username with a link to that twitter user\n\t *\n\t * @param string $text - Tweet text\n\t * @return string - Tweet text with @replies linked\n\t */\n\tpublic function linkTwitterUsers( $text ) {\n\t\t$text = preg_replace_callback('/(^|\\s)@(\\w+)/i', array($this, '_linkTwitterUsersCallback'), $text);\n\t\treturn $text;\n\t}\n\n\tprivate function _linkTwitterUsersCallback( $matches ) {\n\t\t$linkAttrs = array(\n\t\t\t'href'\t=> 'http://twitter.com/' . urlencode( $matches[2] ),\n\t\t\t'class'\t=> 'twitter-user'\n\t\t);\n\t\treturn $matches[1] . $this->_buildLink( '@'.$matches[2], $linkAttrs );\n\t}\n\n\t/**\n\t * Replace #hashtag with a link to twitter.com for that hashtag\n\t *\n\t * @param string $text - Tweet text\n\t * @return string - Tweet text with #hashtags linked\n\t */\n\tpublic function linkHashtags( $text ) {\n\t\t$text = preg_replace_callback('/(^|\\s)(#[\\w\\x{00C0}-\\x{00D6}\\x{00D8}-\\x{00F6}\\x{00F8}-\\x{00FF}]+)/iu', array($this, '_linkHashtagsCallback'), $text);\n\t\treturn $text;\n\t}\n\n\t/**\n\t * Replace #hashtag with a link to twitter.com for that hashtag\n\t *\n\t * @param array $matches - Tweet text\n\t * @return string - Tweet text with #hashtags linked\n\t */\n\tprivate function _linkHashtagsCallback( $matches ) {\n\t\t$linkAttrs = array(\n\t\t\t'href'\t=> 'http://twitter.com/search?q=' . urlencode( $matches[2] ),\n\t\t\t'class'\t=> 'twitter-hashtag'\n\t\t);\n\t\treturn $matches[1] . $this->_buildLink( $matches[2], $linkAttrs );\n\t}\n\n\t/**\n\t * Turn URLs into links\n\t *\n\t * @param string $text - Tweet text\n\t * @return string - Tweet text with URLs repalced with links\n\t */\n\tpublic function linkUrls( $text ) {\n\t\t$text = \" {$text} \"; // Pad with whitespace to simplify the regexes\n\n\t\t$url_clickable = '~\n\t\t\t([\\\\s(<.,;:!?])                                        # 1: Leading whitespace, or punctuation\n\t\t\t(                                                      # 2: URL\n\t\t\t\t[\\\\w]{1,20}+://                                # Scheme and hier-part prefix\n\t\t\t\t(?=\\S{1,2000}\\s)                               # Limit to URLs less than about 2000 characters long\n\t\t\t\t[\\\\w\\\\x80-\\\\xff#%\\\\~/@\\\\[\\\\]*(+=&$-]*+         # Non-punctuation URL character\n\t\t\t\t(?:                                            # Unroll the Loop: Only allow puctuation URL character if followed by a non-punctuation URL character\n\t\t\t\t\t[\\'.,;:!?)]                            # Punctuation URL character\n\t\t\t\t\t[\\\\w\\\\x80-\\\\xff#%\\\\~/@\\\\[\\\\]*(+=&$-]++ # Non-punctuation URL character\n\t\t\t\t)*\n\t\t\t)\n\t\t\t(\\)?)                                                  # 3: Trailing closing parenthesis (for parethesis balancing post processing)\n\t\t~xS';\n\t\t// The regex is a non-anchored pattern and does not have a single fixed starting character.\n\t\t// Tell PCRE to spend more time optimizing since, when used on a page load, it will probably be used several times.\n\n\t\t$text = preg_replace_callback( $url_clickable, array($this, '_make_url_clickable_cb'), $text );\n\n\t\t$text = preg_replace_callback( '#([\\s>])((www|ftp)\\.[\\w\\\\x80-\\\\xff\\#$%&~/.\\-;:=,?@\\[\\]+]+)#is', array($this, '_make_web_ftp_clickable_cb' ), $text );\n\t\t$text = preg_replace_callback( '#([\\s>])([.0-9a-z_+-]+)@(([0-9a-z-]+\\.)+[0-9a-z]{2,})#i', array($this, '_make_email_clickable_cb' ), $text );\n\n\t\t$text = substr( $text, 1, -1 ); // Remove our whitespace padding.\n\n\t\treturn $text;\n\t}\n\n\tfunction _make_web_ftp_clickable_cb($matches) {\n\t\t$ret = '';\n\t\t$dest = $matches[2];\n\t\t$dest = 'http://' . $dest;\n\t\t$dest = esc_url($dest);\n\t\tif ( empty($dest) )\n\t\t\treturn $matches[0];\n\n\t\t// removed trailing [.,;:)] from URL\n\t\tif ( in_array( substr($dest, -1), array('.', ',', ';', ':', ')') ) === true ) {\n\t\t\t$ret = substr($dest, -1);\n\t\t\t$dest = substr($dest, 0, strlen($dest)-1);\n\t\t}\n\t\t$linkAttrs = array(\n\t\t\t'href'\t=> $dest\n\t\t);\n\t\treturn $matches[1] . $this->_buildLink( $dest, $linkAttrs ) . $ret;\n\t}\n\n\tprivate function _make_email_clickable_cb( $matches ) {\n\t\t$email = $matches[2] . '@' . $matches[3];\n\t\t$linkAttrs = array(\n\t\t\t'href'\t=> 'mailto:' . $email\n\t\t);\n\t\treturn $matches[1] . $this->_buildLink( $email, $linkAttrs );\n\t}\n\n\tprivate function _make_url_clickable_cb ( $matches ) {\n\t\t$linkAttrs = array(\n\t\t\t'href'\t=> $matches[2]\n\t\t);\n\t\treturn $matches[1] . $this->_buildLink( $matches[2], $linkAttrs );\n\t}\n\n\tprivate function _notEmpty( $v ) {\n\t\treturn !( empty( $v ) );\n\t}\n\n\tprivate function _buildLink( $text, $attributes = array(), $noFilter = false ) {\n\t\t$attributes = array_filter( wp_parse_args( $attributes ), array( $this, '_notEmpty' ) );\n\t\t$attributes = apply_filters( 'widget_twitter_link_attributes', $attributes );\n\t\t$attributes = wp_parse_args( $attributes );\n\n\t\t$text = apply_filters( 'widget_twitter_link_text', $text );\n\t\t$noFilter = apply_filters( 'widget_twitter_link_nofilter', $noFilter );\n\t\t$link = '<a';\n\t\tforeach ( $attributes as $name => $value ) {\n\t\t\t$link .= ' ' . esc_attr( $name ) . '=\"' . esc_attr( $value ) . '\"';\n\t\t}\n\t\t$link .= '>';\n\t\tif ( $noFilter )\n\t\t\t$link .= $text;\n\t\telse\n\t\t\t$link .= esc_html( $text );\n\n\t\t$link .= '</a>';\n\t\treturn $link;\n\t}\n\n\tpublic function register() {\n\t\t// Fix conflict with Jetpack by disabling their Tweet Feed Widget\n\t\tunregister_widget( 'Wickett_Twitter_Widget' );\n\t\tregister_widget( 'WP_Widget_Twitter' );\n\t}\n\n\tpublic function targetBlank( $attributes ) {\n\t\t$attributes['target'] = '_blank';\n\t\treturn $attributes;\n\t}\n\n\tpublic function display( $args ) {\n\t\t$args = wp_parse_args( $args );\n\n\t\tif ( 'true' == $args['targetBlank'] )\n\t\t\tadd_filter( 'widget_twitter_link_attributes', array( $this, 'targetBlank' ) );\n\n\t\t// Validate our options\n\t\t$args['items'] = (int) $args['items'];\n\t\tif ( $args['items'] < 1 || 20 < $args['items'] )\n\t\t\t$args['items'] = 10;\n\n\t\tif ( !isset( $args['showts'] ) )\n\t\t\t$args['showts'] = 86400;\n\n\t\tif( $args['loklak_api'] == true ) {\n\t\t\tif(!class_exists('Loklak'))\n\t\t\t\trequire_once('loklak_php_api/loklak.php');\n\t\t\t\n\t\t\t$loklak = new Loklak();\n            $tweets = $loklak->search('', null, null, $args['username'], $args['items']);\n            $tweets = json_decode($tweets, true);\n            $tweets = json_decode($tweets['body'], true);\n            $tweets = $tweets['statuses'];            \n\t\t}\n\t\telse\n\t\t\t$tweets = $this->_getTweets( $args );\n\n\t\tif ( false === $tweets )\n\t\t\treturn '';\n\n\t\t$widgetContent = $args['before_widget'] . '<div>';\n\n\t\tif ( empty( $args['title'] ) )\n\t\t\t$args['title'] = sprintf( __( 'Twitter: %s', $this->_slug ), $args['username'] );\n\n\t\t$args['title'] = apply_filters( 'tweet-feed-widget-title', $args['title'], $args );\n\t\t$args['title'] = \"<span class='twitterwidget twitterwidget-title'>{$args['title']}</span>\";\n\t\t$widgetContent .= $args['before_title'] . $args['title'] . $args['after_title'];\n\t\tif ( !empty( $tweets[0] ) && is_object( $tweets[0] ) && !empty( $args['avatar'] ) ) {\n\t\t\t$widgetContent .= '<div class=\"twitter-avatar\">';\n\t\t\t$widgetContent .= $this->_getProfileImage( $tweets[0]->user, $args );\n\t\t\t$widgetContent .= '</div>';\n\t\t}\n\t\t$widgetContent .= '<ul>';\n\t\tif ( ! is_array( $tweets ) || count( $tweets ) == 0 ) {\n\t\t\t$widgetContent .= '<li class=\"wpTwitterWidgetEmpty\">' . __( 'No Tweets Available', $this->_slug ) . '</li>';\n\t\t} else {\n\t\t\t$count = 0;\n\t\t\tforeach ( $tweets as $tweet ) {\n\t\t\t\t$tweet = (object)$tweet;\n\t\t\t\t$tweet->user = (object)$tweet->user;\n\t\t\t\t// Set our \"ago\" string which converts the date to \"# ___(s) ago\"\n\t\t\t\t$tweet->ago = $this->_timeSince( strtotime( $tweet->created_at ), $args['showts'], $args['dateFormat'] );\n\t\t\t\t$entryContent = apply_filters( 'widget_twitter_content', $tweet->text, $tweet );\n\t\t\t\t$widgetContent .= '<li>';\n\t\t\t\t$widgetContent .= \"<span class='entry-content'>{$entryContent}</span>\";\n\t\t\t\t$widgetContent .= \" <span class='entry-meta'>\";\n\t\t\t\t$widgetContent .= \"<span class='time-meta'>\";\n\t\t\t\t$linkAttrs = array(\n\t\t\t\t\t'href'\t=> \"http://twitter.com/{$tweet->user->screen_name}/statuses/{$tweet->id_str}\"\n\t\t\t\t);\n\t\t\t\t$widgetContent .= $this->_buildLink( $tweet->ago, $linkAttrs );\n\t\t\t\t$widgetContent .= '</span>';\n\n\t\t\t\tif ( 'true' != $args['hidefrom'] ) {\n\t\t\t\t\t$from = sprintf( __( 'from %s', $this->_slug ), str_replace( '&', '&amp;', $args['loklak_api'] ? ucwords(strtolower($tweet->source_type)) : $tweet->source ) );\n\t\t\t\t\t$widgetContent .= \" <span class='from-meta'>{$from}</span>\";\n\t\t\t\t}\n\t\t\t\tif ( !empty( $tweet->in_reply_to_screen_name ) && !$loklak) {\n\t\t\t\t\t$rtLinkText = sprintf( __( 'in reply to %s', $this->_slug ), $tweet->in_reply_to_screen_name );\n\t\t\t\t\t$widgetContent .=  ' <span class=\"in-reply-to-meta\">';\n\t\t\t\t\t$linkAttrs = array(\n\t\t\t\t\t\t'href'\t=> \"http://twitter.com/{$tweet->in_reply_to_screen_name}/statuses/{$tweet->in_reply_to_status_id_str}\",\n\t\t\t\t\t\t'class'\t=> 'reply-to'\n\t\t\t\t\t);\n\t\t\t\t\t$widgetContent .= $this->_buildLink( $rtLinkText, $linkAttrs );\n\t\t\t\t\t$widgetContent .= '</span>';\n\t\t\t\t}\n \t\t\t\t$widgetContent .= '</span>';\n\n\t\t\t\tif ( 'true' == $args['showintents'] ) {\n\t\t\t\t\t$widgetContent .= ' <span class=\"intent-meta\">';\n\t\t\t\t\t$lang = $this->_getTwitterLang();\n\t\t\t\t\tif ( !empty( $lang ) )\n\t\t\t\t\t\t$linkAttrs['data-lang'] = $lang;\n\n\t\t\t\t\t$linkText = __( 'Reply', $this->_slug );\n\t\t\t\t\t$linkAttrs['href'] = \"http://twitter.com/intent/tweet?in_reply_to={$tweet->id_str}\";\n\t\t\t\t\t$linkAttrs['class'] = 'in-reply-to';\n\t\t\t\t\t$linkAttrs['title'] = $linkText;\n\t\t\t\t\t$widgetContent .= $this->_buildLink( $linkText, $linkAttrs );\n\n\t\t\t\t\t$linkText = __( 'Retweet', $this->_slug );\n\t\t\t\t\t$linkAttrs['href'] = \"http://twitter.com/intent/retweet?tweet_id={$tweet->id_str}\";\n\t\t\t\t\t$linkAttrs['class'] = 'retweet';\n\t\t\t\t\t$linkAttrs['title'] = $linkText;\n\t\t\t\t\t$widgetContent .= $this->_buildLink( $linkText, $linkAttrs );\n\n\t\t\t\t\t$linkText = __( 'Favorite', $this->_slug );\n\t\t\t\t\t$linkAttrs['href'] = \"http://twitter.com/intent/favorite?tweet_id={$tweet->id_str}\";\n\t\t\t\t\t$linkAttrs['class'] = 'favorite';\n\t\t\t\t\t$linkAttrs['title'] = $linkText;\n\t\t\t\t\t$widgetContent .= $this->_buildLink( $linkText, $linkAttrs );\n\t\t\t\t\t$widgetContent .= '</span>';\n\t\t\t\t}\n\t\t\t\t$widgetContent .= '</li>';\n\n\t\t\t\tif ( ++$count >= $args['items'] )\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$widgetContent .= '</ul>';\n\t\tif ( 'true' == $args['showfollow'] && ! empty( $args['username'] ) ) {\n\t\t\t$widgetContent .= '<div class=\"follow-button\">';\n\t\t\t$linkText = \"@{$args['username']}\";\n\t\t\t$linkAttrs = array(\n\t\t\t\t'href'\t=> \"http://twitter.com/{$args['username']}\",\n\t\t\t\t'class'\t=> 'twitter-follow-button',\n\t\t\t\t'title'\t=> sprintf( __( 'Follow %s', $this->_slug ), \"@{$args['username']}\" ),\n\t\t\t);\n\t\t\t$lang = $this->_getTwitterLang();\n\t\t\tif ( !empty( $lang ) )\n\t\t\t\t$linkAttrs['data-lang'] = $lang;\n\n\t\t\t$widgetContent .= $this->_buildLink( $linkText, $linkAttrs );\n\t\t\t$widgetContent .= '</div>';\n\t\t}\n\n\t\t$widgetContent .= '</div>' . $args['after_widget'];\n\n\t\tif ( 'true' == $args['showintents'] || 'true' == $args['showfollow'] ) {\n\t\t\t$script = 'http://platform.twitter.com/widgets.js';\n\t\t\tif ( is_ssl() )\n\t\t\t\t$script = str_replace( 'http://', 'https://', $script );\n\t\t\twp_enqueue_script( 'tweet-feed-widgets', $script, array(), '1.0.0', true );\n\n\t\t\tif ( ! function_exists( '_wp_footer_scripts' ) ) {\n\t\t\t\t// This means we can't just enqueue our script (fixes in WP 3.3)\n\t\t\t\tadd_action( 'wp_footer', array( $this, 'add_twitter_js' ) );\n\t\t\t}\n\t\t}\n\t\treturn $widgetContent;\n\t}\n\n\tprivate function _getTwitterLang() {\n\t\t$valid_langs = array(\n\t\t\t'en', // English\n\t\t\t'it', // Italian\n\t\t\t'es', // Spanish\n\t\t\t'fr', // French\n\t\t\t'ko', // Korean\n\t\t\t'ja', // Japanese\n\t\t);\n\t\t$locale = get_locale();\n\t\t$lang = strtolower( substr( get_locale(), 0, 2 ) );\n\t\tif ( in_array( $lang, $valid_langs ) )\n\t\t\treturn $lang;\n\n\t\treturn false;\n\t}\n\n\tpublic function add_twitter_js() {\n\t\twp_print_scripts( 'tweet-feed-widgets' );\n\t}\n\n\t/**\n\t * Gets tweets, from cache if possible\n\t *\n\t * @param array $widgetOptions - options needed to get feeds\n\t * @return array - Array of objects\n\t */\n\tprivate function _getTweets( $widgetOptions ) {\n\t\t$key = 'twp_' . md5( maybe_serialize( $this->_get_feed_request_settings( $widgetOptions ) ) );\n\t\treturn tlc_transient( $key )\n\t\t\t->expires_in( 300 ) // cache for 5 minutes\n\t\t\t->extend_on_fail( 120 ) // On a failed call, don't try again for 2 minutes\n\t\t\t->updates_with( array( $this, 'parseFeed' ), array( $widgetOptions ) )\n\t\t\t->get();\n\t}\n\n\t/**\n\t * Pulls the JSON feed from Twitter and returns an array of objects\n\t *\n\t * @param array $widgetOptions - settings needed to get feed url, etc\n\t * @return array\n\t */\n\tpublic function parseFeed( $widgetOptions ) {\n\t\t$parameters = $this->_get_feed_request_settings( $widgetOptions );\n\t\t$response = array();\n\n\t\tif ( ! empty( $parameters['screen_name'] ) ) {\n\t\t\tif ( empty( $this->_settings['twp-authed-users'][strtolower( $parameters['screen_name'] )] ) ) {\n\t\t\t\tif ( empty( $widgetOptions['errmsg'] ) )\n\t\t\t\t\t$widgetOptions['errmsg'] = __( 'Account needs to be authorized', $this->_slug );\n\t\t\t} else {\n\t\t\t\t$this->_wp_twitter_oauth->set_token( $this->_settings['twp-authed-users'][strtolower( $parameters['screen_name'] )] );\n\t\t\t\t$response = $this->_wp_twitter_oauth->send_authed_request( 'statuses/user_timeline', 'GET', $parameters );\n\t\t\t\tif ( ! is_wp_error( $response ) )\n\t\t\t\t\treturn $response;\n\t\t\t}\n\t\t} elseif ( ! empty( $parameters['list_id'] ) ) {\n\t\t\t$list_info = explode( '::', $widgetOptions['list'] );\n\t\t\t$user = array_shift( $list_info );\n\t\t\t$this->_wp_twitter_oauth->set_token( $this->_settings['twp-authed-users'][strtolower( $user )] );\n\n\t\t\t$response = $this->_wp_twitter_oauth->send_authed_request( 'lists/statuses', 'GET', $parameters );\n\t\t\tif ( ! is_wp_error( $response ) )\n\t\t\t\treturn $response;\n\t\t}\n\n\t\tif ( empty( $widgetOptions['errmsg'] ) )\n\t\t\t$widgetOptions['errmsg'] = __( 'Invalid Twitter Response.', $this->_slug );\n\t\tdo_action( 'widget_twitter_parsefeed_error', $response, $parameters, $widgetOptions );\n\t\tthrow new Exception( $widgetOptions['errmsg'] );\n\t}\n\n\t/**\n\t * Gets the parameters for the desired feed.\n\t *\n\t * @param array $widgetOptions - settings needed such as username, feet type, etc\n\t * @return array - Parameters ready to pass to a Twitter request\n\t */\n\tprivate function _get_feed_request_settings( $widgetOptions ) {\n\t\t/**\n\t\t * user_id\n\t\t * screen_name *\n\t\t * since_id\n\t\t * count\n\t\t * max_id\n\t\t * page\n\t\t * trim_user\n\t\t * include_rts *\n\t\t * include_entities\n\t\t * exclude_replies *\n\t\t * contributor_details\n\t\t */\n\n\t\t$parameters = array(\n\t\t\t'count'       => $widgetOptions['items'],\n\t\t);\n\n\t\tif ( ! empty( $widgetOptions['username'] ) ) {\n\t\t\t$parameters['screen_name'] = $widgetOptions['username'];\n\t\t} elseif ( ! empty( $widgetOptions['list'] ) ) {\n\t\t\t$list_info = explode( '::', $widgetOptions['list'] );\n\t\t\t$parameters['list_id'] = array_pop( $list_info );\n\t\t}\n\n\t\tif ( 'true' == $widgetOptions['hidereplies'] )\n\t\t\t$parameters['exclude_replies'] = 'true';\n\n\t\tif ( 'true' != $widgetOptions['showretweets'] )\n\t\t\t$parameters['include_rts'] = 'false';\n\n\t\treturn $parameters;\n\n\t}\n\n\t/**\n\t * Twitter displays all tweets that are less than 24 hours old with\n\t * something like \"about 4 hours ago\" and ones older than 24 hours with a\n\t * time and date. This function allows us to simulate that functionality,\n\t * but lets us choose where the dividing line is.\n\t *\n\t * @param int $startTimestamp - The timestamp used to calculate time passed\n\t * @param int $max - Max number of seconds to conver to \"ago\" messages.  0 for all, -1 for none\n\t * @return string\n\t */\n\tprivate function _timeSince( $startTimestamp, $max, $dateFormat ) {\n\t\t// array of time period chunks\n\t\t$chunks = array(\n\t\t\t'year'   => 60 * 60 * 24 * 365, // 31,536,000 seconds\n\t\t\t'month'  => 60 * 60 * 24 * 30,  // 2,592,000 seconds\n\t\t\t'week'   => 60 * 60 * 24 * 7,   // 604,800 seconds\n\t\t\t'day'    => 60 * 60 * 24,       // 86,400 seconds\n\t\t\t'hour'   => 60 * 60,            // 3600 seconds\n\t\t\t'minute' => 60,                 // 60 seconds\n\t\t\t'second' => 1                   // 1 second\n\t\t);\n\n\t\t$since = time() - $startTimestamp;\n\n\t\tif ( $max != '-1' && $since >= $max )\n\t\t\treturn date_i18n( $dateFormat, $startTimestamp + get_option('gmt_offset') * 3600 );\n\n\n\t\tforeach ( $chunks as $key => $seconds ) {\n\t\t\t// finding the biggest chunk ( if the chunk fits, break )\n\t\t\tif ( ( $count = floor( $since / $seconds ) ) != 0 )\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$messages = array(\n\t\t\t'year'   => _n( 'about %s year ago',   'about %s years ago',   $count, $this->_slug ),\n\t\t\t'month'  => _n( 'about %s month ago',  'about %s months ago',  $count, $this->_slug ),\n\t\t\t'week'   => _n( 'about %s week ago',   'about %s weeks ago',   $count, $this->_slug ),\n\t\t\t'day'    => _n( 'about %s day ago',    'about %s days ago',    $count, $this->_slug ),\n\t\t\t'hour'   => _n( 'about %s hour ago',   'about %s hours ago',   $count, $this->_slug ),\n\t\t\t'minute' => _n( 'about %s minute ago', 'about %s minutes ago', $count, $this->_slug ),\n\t\t\t'second' => _n( 'about %s second ago', 'about %s seconds ago', $count, $this->_slug ),\n\t\t);\n\n\t\treturn sprintf( $messages[$key], $count );\n\t}\n\n\t/**\n\t * Returns the Twitter user's profile image, linked to that user's profile\n\t *\n\t * @param object $user - Twitter User\n\t * @param array $args - Widget Arguments\n\t * @return string - Linked image ( XHTML )\n\t */\n\tprivate function _getProfileImage( $user, $args = array() ) {\n\t\t$linkAttrs = array(\n\t\t\t'href'  => \"http://twitter.com/{$user->screen_name}\",\n\t\t\t'title' => $user->name\n\t\t);\n\t\t$replace = ( 'original' == $args['avatar'] )? '.':\"_{$args['avatar']}.\";\n\t\t$img = str_replace( '_normal.', $replace, $user->profile_image_url_https );\n\n\t\treturn $this->_buildLink( \"<img alt='{$user->name}' src='{$img}' />\", $linkAttrs, true );\n\t}\n\n    /**\n\t * Replace our shortCode with the \"widget\"\n\t *\n\t * @param array $attr - array of attributes from the shortCode\n\t * @param string $content - Content of the shortCode\n\t * @return string - formatted XHTML replacement for the shortCode\n\t */\n    public function handleShortcodes( $attr, $content = '' ) {\n\t\t$defaults = array(\t\n\t\t\t'before_widget'   => '',\n\t\t\t'after_widget'    => '',\n\t\t\t'before_title'    => '<h2>',\n\t\t\t'after_title'     => '</h2>',\n\t\t\t'title'           => '',\n\t\t\t'errmsg'          => '',\n\t\t\t'username'        => '',\n\t\t\t'list'            => '',\n\t\t\t'hidereplies'     => 'false',\n\t\t\t'showretweets'    => 'true',\n\t\t\t'hidefrom'        => 'false',\n\t\t\t'showintents'     => 'true',\n\t\t\t'showfollow'      => 'true',\n\t\t\t'avatar'          => '',\n\t\t\t'targetBlank'     => 'false',\n\t\t\t'items'           => 10,\n\t\t\t'showts'          => 60 * 60 * 24,\n\t\t\t'dateFormat'      => __( 'h:i:s A F d, Y', $this->_slug ),\n\t\t);\n\n\t\t/**\n\t\t * Attribute names are strtolower'd, so we need to fix them to match\n\t\t * the names used through the rest of the plugin\n\t\t */\n\t\tif ( array_key_exists( 'targetblank', $attr ) ) {\n\t\t\t$attr['targetBlank'] = $attr['targetblank'];\n\t\t\tunset( $attr['targetblank'] );\n\t\t}\n\t\tif ( array_key_exists( 'dateformat', $attr ) ) {\n\t\t\t$attr['dateFormat'] = $attr['dateformat'];\n\t\t\tunset( $attr['dateformat'] );\n\t\t}\n\n\t\tif ( !empty( $content ) && empty( $attr['title'] ) )\n\t\t\t$attr['title'] = $content;\n\n\n        $attr = shortcode_atts( $defaults, $attr );\n\n\t\tif ( $attr['hidereplies'] && $attr['hidereplies'] != 'false' && $attr['hidereplies'] != '0' )\n\t\t\t$attr['hidereplies'] = 'true';\n\n\t\tif ( $attr['showretweets'] && $attr['showretweets'] != 'false' && $attr['showretweets'] != '0' )\n\t\t\t$attr['showretweets'] = 'true';\n\n\t\tif ( $attr['hidefrom'] && $attr['hidefrom'] != 'false' && $attr['hidefrom'] != '0' )\n\t\t\t$attr['hidefrom'] = 'true';\n\n\t\tif ( $attr['showintents'] && $attr['showintents'] != 'true' && $attr['showintents'] != '1' )\n\t\t\t$attr['showintents'] = 'false';\n\n\t\tif ( $attr['showfollow'] && $attr['showfollow'] != 'true' && $attr['showfollow'] != '1' )\n\t\t\t$attr['showfollow'] = 'false';\n\n\t\tif ( !in_array( $attr['avatar'], array( 'bigger', 'normal', 'mini', 'original', '' ) ) )\n\t\t\t$attr['avatar'] = 'normal';\n\n\t\tif ( $attr['targetBlank'] && $attr['targetBlank'] != 'false' && $attr['targetBlank'] != '0' )\n\t\t\t$attr['targetBlank'] = 'true';\n\n\t\treturn $this->display( $attr );\n\t}\n\n\tpublic function authed_users_option( $settings ) {\n\t\tif ( ! is_array( $settings ) )\n\t\t\treturn array();\n\t\treturn $settings;\n\t}\n\n\tpublic function filterSettings( $settings ) {\n\t\t$defaultArgs = array(\n\t\t\t'loklak_api'      => '',\n\t\t\t'consumer-key'    => '',\n\t\t\t'consumer-secret' => '',\n\t\t\t'title'           => '',\n\t\t\t'errmsg'          => '',\n\t\t\t'username'        => '',\n\t\t\t'list'            => '',\n\t\t\t'http_vs_https'   => 'https',\n\t\t\t'hidereplies'     => 'false',\n\t\t\t'showretweets'    => 'true',\n\t\t\t'hidefrom'        => 'false',\n\t\t\t'showintents'     => 'true',\n\t\t\t'showfollow'      => 'true',\n\t\t\t'avatar'          => '',\n\t\t\t'targetBlank'     => 'false',\n\t\t\t'items'           => 10,\n\t\t\t'showts'          => 60 * 60 * 24,\n\t\t\t'dateFormat'      => __( 'h:i:s A F d, Y', $this->_slug ),\n\t\t);\n\n\t\treturn $this->fixAvatar( wp_parse_args( $settings, $defaultArgs ) );\n\t}\n\n\tpublic function sanitize_settings( $input ) {\n\t\tif ( isset( $input['consumer-key'] ) )\n\t\t\t$input['consumer-key'] = sanitize_text_field( $input['consumer-key'] );\n\t\tif ( isset( $input['consumer-secret'] ) )\n\t\t\t$input['consumer-secret'] = sanitize_text_field( $input['consumer-secret'] );\n\t\tif ( isset( $input['title'] ) )\n\t\t\t$input['title'] = sanitize_text_field( $input['title'] );\n\t\tif ( isset( $input['errmsg'] ) )\n\t\t\t$input['errmsg'] = sanitize_text_field( $input['errmsg'] );\n\t\tif ( isset( $input['username'] ) )\n\t\t\t$input['username'] = sanitize_text_field( $input['username'] );\n\t\tif ( isset( $input['dateFormat'] ) )\n\t\t\t$input['dateFormat'] = sanitize_text_field( $input['dateFormat'] );\n\n\t\treturn $input;\n\t}\n\n\t/**\n\t * Now that we support all the profile image sizes we need to convert\n\t * the old true/false to a size string\n\t */\n\tprivate function fixAvatar( $settings ) {\n\t\tif ( false === $settings['avatar'] )\n\t\t\t$settings['avatar'] = '';\n\t\telseif ( !in_array( $settings['avatar'], array( 'bigger', 'normal', 'mini', 'original', false ) ) )\n\t\t\t$settings['avatar'] = 'normal';\n\n\t\treturn $settings;\n\t}\n\n\tpublic function getSettings( $settings ) {\n\t\treturn $this->fixAvatar( wp_parse_args( $settings, $this->_settings['twp'] ) );\n\t}\n\n\tpublic function get_users_list( $authed = false ) {\n\t\t$users = $this->_settings['twp-authed-users'];\n\t\tif ( $authed ) {\n\t\t\tif ( ! empty( $this->_authed_users ) )\n\t\t\t\treturn $this->_authed_users;\n\t\t\tforeach ( $users as $key => $u ) {\n\t\t\t\t$this->_wp_twitter_oauth->set_token( $u );\n\t\t\t\t$rates = $this->_wp_twitter_oauth->send_authed_request( 'application/rate_limit_status', 'GET', array( 'resources' => 'statuses,lists' ) );\n\t\t\t\tif ( is_wp_error( $rates ) )\n\t\t\t\t\tunset( $users[$key] );\n\t\t\t}\n\t\t\t$this->_authed_users = $users;\n\t\t}\n\t\treturn $users;\n\t}\n\n\tpublic function get_lists() {\n\t\tif ( ! empty( $this->_lists ) )\n\t\t\treturn $this->_lists;\n\t\t$this->_lists =  array();\n\t\tforeach ( $this->_settings['twp-authed-users'] as $key => $u ) {\n\t\t\t$this->_wp_twitter_oauth->set_token( $u );\n\t\t\t$user_lists = $this->_wp_twitter_oauth->send_authed_request( 'lists/list', 'GET', array( 'resources' => 'statuses,lists' ) );\n\n\t\t\tif ( ! empty( $user_lists ) && ! is_wp_error( $user_lists ) ) {\n\t\t\t\t$this->_lists[$key] = array();\n\t\t\t\tforeach ( $user_lists as $l ) {\n\t\t\t\t\t$this->_lists[$key][$l->id] = $l->name;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $this->_lists;\n\t}\n\n\tpublic function init() {\n\t\tif ( isset( $_GET['twp-test-local-request'] ) && ! empty( $_POST['_twp-test-local-request'] ) && 'test' === $_POST['_twp-test-local-request'] ) {\n\t\t\tdie( 'success' );\n\t\t}\n\t}\n\n}\n// Instantiate our class\n$wpTwitterWidget = wpTwitterWidget::getInstance();\n"
        }
      ]
    }
  ]
}