{
  "metadata": {
    "timestamp": 1736712099165,
    "page": 670,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "slimphp/Slim-Skeleton",
      "stars": 1593,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".coveralls.yml",
          "type": "blob",
          "size": 0.0322265625,
          "content": "json_path: coveralls-upload.json\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2109375,
          "content": ".idea/\n# IDE\n.vscode/\nnbproject/\n.DS_STORE\n/coverage/\n# Vendor\n/vendor/\n# Logs\n/logs/*\n!/logs/README.md\n# Cache\n/var/cache/*\n.phpunit.result.cache\ncache.properties\n.php_cs.cache\n# Composer\ncomposer.phar\ncomposer.lock"
        },
        {
          "name": ".htaccess",
          "type": "blob",
          "size": 0.3251953125,
          "content": "Options All -Indexes\n\n<IfModule mod_rewrite.c>\n  # Redirect to the public folder\n  RewriteEngine On\n  # RewriteBase /\n  RewriteRule ^$ public/ [L]\n  RewriteRule (.*) public/$1 [L]\n\n  # Redirect to HTTPS\n  # RewriteEngine On\n  # RewriteCond %{HTTPS} off\n  # RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]\n</IfModule>\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.580078125,
          "content": "# How to Contribute\n\n## Pull Requests\n\n1. Fork the Slim Skeleton repository\n2. Create a new branch for each feature or improvement\n3. Send a pull request from each feature branch to the **4.x** branch\n\nIt is very important to separate new features or improvements into separate feature branches, and to send a\npull request for each branch. This allows us to review and pull in new features or improvements individually.\n\n## Style Guide\n\nAll pull requests must adhere to the [PSR-12 standard](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-12-extended-coding-style-guide.md).\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0556640625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Slim Framework\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.4501953125,
          "content": "# Slim Framework 4 Skeleton Application\n\n[![Coverage Status](https://coveralls.io/repos/github/slimphp/Slim-Skeleton/badge.svg?branch=master)](https://coveralls.io/github/slimphp/Slim-Skeleton?branch=master)\n\nUse this skeleton application to quickly setup and start working on a new Slim Framework 4 application. This application uses the latest Slim 4 with Slim PSR-7 implementation and PHP-DI container implementation. It also uses the Monolog logger.\n\nThis skeleton application was built for Composer. This makes setting up a new Slim Framework application quick and easy.\n\n## Install the Application\n\nRun this command from the directory in which you want to install your new Slim Framework application. You will require PHP 7.4 or newer.\n\n```bash\ncomposer create-project slim/slim-skeleton [my-app-name]\n```\n\nReplace `[my-app-name]` with the desired directory name for your new application. You'll want to:\n\n* Point your virtual host document root to your new application's `public/` directory.\n* Ensure `logs/` is web writable.\n\nTo run the application in development, you can run these commands \n\n```bash\ncd [my-app-name]\ncomposer start\n```\n\nOr you can use `docker-compose` to run the app with `docker`, so you can run these commands:\n```bash\ncd [my-app-name]\ndocker-compose up -d\n```\nAfter that, open `http://localhost:8080` in your browser.\n\nRun this command in the application directory to run the test suite\n\n```bash\ncomposer test\n```\n\nThat's it! Now go build something cool.\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.5263671875,
          "content": "{\n    \"name\": \"slim/slim-skeleton\",\n    \"description\": \"A Slim Framework skeleton application for rapid development\",\n    \"keywords\": [\n        \"microframework\",\n        \"rest\",\n        \"router\",\n        \"psr7\"\n    ],\n    \"homepage\": \"http://github.com/slimphp/Slim-Skeleton\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Josh Lockhart\",\n            \"email\": \"info@joshlockhart.com\",\n            \"homepage\": \"http://www.joshlockhart.com/\"\n        },\n        {\n            \"name\": \"Pierre Berube\",\n            \"email\": \"pierre@lgse.com\",\n            \"homepage\": \"http://www.lgse.com/\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^7.4 || ^8.0\",\n        \"ext-json\": \"*\",\n        \"monolog/monolog\": \"^2.9\",\n        \"php-di/php-di\": \"^6.4\",\n        \"slim/psr7\": \"^1.6\",\n        \"slim/slim\": \"^4.12\"\n    },\n    \"require-dev\": {\n        \"jangregor/phpstan-prophecy\": \"^1.0.0\",\n        \"phpspec/prophecy-phpunit\": \"^2.2\",\n        \"phpstan/extension-installer\": \"^1.3.1\",\n        \"phpstan/phpstan\": \"^1.10\",\n        \"phpunit/phpunit\": \"^9.6.17\",\n        \"squizlabs/php_codesniffer\": \"^3.9\"\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"phpstan/extension-installer\": true\n        },\n        \"process-timeout\": 0,\n        \"sort-packages\": true\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"App\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Tests\\\\\": \"tests/\"\n        }\n    },\n    \"scripts\": {\n        \"start\": \"php -S localhost:8080 -t public\",\n        \"test\": \"phpunit\"\n    }\n}\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.3388671875,
          "content": "version: '3.7'\n\nvolumes:\n    logs:\n        driver: local\n\nservices:\n    slim:\n        image: php:8-alpine\n        working_dir: /var/www\n        command: php -S 0.0.0.0:8080 -t public\n        environment:\n            docker: \"true\"\n        ports:\n            - \"8080:8080\"\n        volumes:\n            - .:/var/www\n            - logs:/var/www/logs\n"
        },
        {
          "name": "logs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpcs.xml",
          "type": "blob",
          "size": 0.4111328125,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\"Slim coding standard\">\n    <description>Slim coding standard</description>\n\n    <!-- display progress -->\n    <arg value=\"p\"/>\n    <!-- use colors in output -->\n    <arg name=\"colors\"/>\n\n    <!-- inherit rules from: -->\n    <rule ref=\"PSR12\"/>\n    <rule ref=\"Generic.Arrays.DisallowLongArraySyntax\"/>\n\n    <!-- Paths to check -->\n    <file>src</file>\n    <file>tests</file>\n</ruleset>"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.041015625,
          "content": "parameters:\n  level: 4\n  paths:\n    - src\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.8623046875,
          "content": "<phpunit\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:noNamespaceSchemaLocation=\"http://schema.phpunit.de/7.1/phpunit.xsd\"\n    backupGlobals=\"false\"\n    backupStaticAttributes=\"false\"\n    beStrictAboutTestsThatDoNotTestAnything=\"true\"\n    beStrictAboutChangesToGlobalState=\"true\"\n    beStrictAboutOutputDuringTests=\"true\"\n    colors=\"true\"\n    convertErrorsToExceptions=\"true\"\n    convertNoticesToExceptions=\"true\"\n    convertWarningsToExceptions=\"true\"\n    processIsolation=\"false\"\n    stopOnFailure=\"false\"\n    bootstrap=\"tests/bootstrap.php\"\n>\n    <testsuites>\n        <testsuite name=\"Test Suite\">\n            <directory>./tests/</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">./src/</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "var",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}