{
  "metadata": {
    "timestamp": 1736712116329,
    "page": 710,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thephpleague/skeleton",
      "stars": 1527,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3056640625,
          "content": "; This file is for unifying the coding style for different editors and IDEs.\n; More information at https://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.6572265625,
          "content": "# Path-based git attributes\n# https://www.kernel.org/pub/software/scm/git/docs/gitattributes.html\n\n# Ignore all test and documentation with \"export-ignore\".\n/.editorconfig               export-ignore\n/.gitattributes              export-ignore\n/.gitignore                  export-ignore\n/.scrutinizer.yml            export-ignore\n/.styleci.yml                export-ignore\n/.travis.yml                 export-ignore\n/PULL_REQUEST_TEMPLATE.md    export-ignore\n/ISSUE_TEMPLATE.md           export-ignore\n/phpcs.xml.dist              export-ignore\n/phpunit.xml.dist            export-ignore\n/tests                       export-ignore\n/docs                        export-ignore\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0693359375,
          "content": "build\ncomposer.lock\nvendor\nphpcs.xml\nphpunit.xml\n.phpunit.result.cache\n"
        },
        {
          "name": ".scrutinizer.yml",
          "type": "blob",
          "size": 0.7236328125,
          "content": "build:\n    nodes:\n        analysis:\n            project_setup:\n                override: true\n            tests:\n                override: [php-scrutinizer-run]\n\nfilter:\n    excluded_paths: [tests/*]\n\nchecks:\n    php:\n        remove_extra_empty_lines: true\n        remove_php_closing_tag: true\n        remove_trailing_whitespace: true\n        fix_use_statements:\n            remove_unused: true\n            preserve_multiple: false\n            preserve_blanklines: true\n            order_alphabetically: true\n        fix_php_opening_tag: true\n        fix_linefeed: true\n        fix_line_ending: true\n        fix_identation_4spaces: true\n        fix_doc_comments: true\n\ntools:\n    external_code_coverage:\n        timeout: 600\n        runs: 3\n"
        },
        {
          "name": ".styleci.yml",
          "type": "blob",
          "size": 0.0126953125,
          "content": "preset: psr2\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.646484375,
          "content": "dist: trusty\nlanguage: php\n\nphp:\n  - 7.2\n  - 7.3\n  - 7.4\n  - hhvm\n\n## Cache composer\ncache:\n  directories:\n    - $HOME/.composer/cache\n\nmatrix:\n  include:\n    - php: 7.2\n      env: 'COMPOSER_FLAGS=\"--prefer-stable --prefer-lowest\"'\n\nbefore_script:\n  - travis_retry composer update ${COMPOSER_FLAGS} --no-interaction --prefer-dist\n\nscript:\n  - vendor/bin/phpcs --standard=psr2 src/\n  - vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover\n\nafter_script:\n  - |\n    if [[ \"$TRAVIS_PHP_VERSION\" != 'hhvm' ]]; then\n      wget https://scrutinizer-ci.com/ocular.phar\n      php ocular.phar code-coverage:upload --format=php-clover coverage.clover\n    fi\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.3017578125,
          "content": "# Changelog\n\nAll notable changes to `:package_name` will be documented in this file.\n\nUpdates should follow the [Keep a CHANGELOG](https://keepachangelog.com/) principles.\n\n## NEXT - YYYY-MM-DD\n\n### Added\n- Nothing\n\n### Deprecated\n- Nothing\n\n### Fixed\n- Nothing\n\n### Removed\n- Nothing\n\n### Security\n- Nothing\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.13671875,
          "content": "# Contributor Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at `:author_email`. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.2802734375,
          "content": "# Contributing\n\nContributions are **welcome** and will be fully **credited**.\n\nWe accept contributions via Pull Requests on [Github](https://github.com/:vendor/:package_name).\n\n\n## Pull Requests\n\n- **[PSR-2 Coding Standard](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md)** - Check the code style with ``$ composer check-style`` and fix it with ``$ composer fix-style``.\n\n- **Add tests!** - Your patch won't be accepted if it doesn't have tests.\n\n- **Document any change in behaviour** - Make sure the `README.md` and any other relevant documentation are kept up-to-date.\n\n- **Consider our release cycle** - We try to follow [SemVer v2.0.0](http://semver.org/). Randomly breaking public APIs is not an option.\n\n- **Create feature branches** - Don't ask us to pull from your master branch.\n\n- **One pull request per feature** - If you want to do more than one thing, send multiple pull requests.\n\n- **Send coherent history** - Make sure each individual commit in your pull request is meaningful. If you had to make multiple intermediate commits while developing, please [squash them](http://www.git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Changing-Multiple-Commit-Messages) before submitting.\n\n\n## Running Tests\n\n``` bash\n$ composer test\n```\n\n\n**Happy coding**!\n"
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 0.7001953125,
          "content": "<!-- Provide a general summary of the issue in the Title above -->\n\n## Detailed description\n\nProvide a detailed description of the change or addition you are proposing.\n\nMake it clear if the issue is a bug, an enhancement or just a question.\n\n## Context\n\nWhy is this change important to you? How would you use it?\n\nHow can it benefit other users?\n\n## Possible implementation\n\nNot obligatory, but suggest an idea for implementing addition or change.\n\n## Your environment\n\nInclude as many relevant details about the environment you experienced the bug in and how to reproduce it.\n\n* Version used (e.g. PHP 5.6, HHVM 3):\n* Operating system and version (e.g. Ubuntu 16.04, Windows 7):\n* Link to your project:\n* ...\n* ...\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.1025390625,
          "content": "# The MIT License (MIT)\n\nCopyright (c) 2020 :author_name <:author_email>\n\n> Permission is hereby granted, free of charge, to any person obtaining a copy\n> of this software and associated documentation files (the \"Software\"), to deal\n> in the Software without restriction, including without limitation the rights\n> to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n> copies of the Software, and to permit persons to whom the Software is\n> furnished to do so, subject to the following conditions:\n>\n> The above copyright notice and this permission notice shall be included in\n> all copies or substantial portions of the Software.\n>\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n> FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n> AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n> LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n> OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n> THE SOFTWARE.\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 1.8115234375,
          "content": "<!--- Provide a general summary of your changes in the Title above -->\n\n## Description\n\nDescribe your changes in detail.\n\n## Motivation and context\n\nWhy is this change required? What problem does it solve?\n\nIf it fixes an open issue, please link to the issue here (if you write `fixes #num`\nor `closes #num`, the issue will be automatically closed when the pull is accepted.)\n\n## How has this been tested?\n\nPlease describe in detail how you tested your changes.\n\nInclude details of your testing environment, and the tests you ran to\nsee how your change affects other areas of the code, etc.\n\n## Screenshots (if appropriate)\n\n## Types of changes\n\nWhat types of changes does your code introduce? Put an `x` in all the boxes that apply:\n- [ ] Bug fix (non-breaking change which fixes an issue)\n- [ ] New feature (non-breaking change which adds functionality)\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\n\n## Checklist:\n\nGo over all the following points, and put an `x` in all the boxes that apply.\n\nPlease, please, please, don't send your pull request until all of the boxes are ticked. Once your pull request is created, it will trigger a build on our [continuous integration](http://www.phptherightway.com/#continuous-integration) server to make sure your [tests and code style pass](https://help.github.com/articles/about-required-status-checks/).\n\n- [ ] I have read the **[CONTRIBUTING](CONTRIBUTING.md)** document.\n- [ ] My pull request addresses exactly one patch/feature.\n- [ ] I have created a branch for this patch/feature.\n- [ ] Each individual commit in the pull request is meaningful.\n- [ ] I have added tests to cover my changes.\n- [ ] If my change requires a change to the documentation, I have updated it accordingly.\n\nIf you're unsure about any of these, don't hesitate to ask. We're here to help!\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.96484375,
          "content": "# :package_name\n\n[![Latest Version on Packagist][ico-version]][link-packagist]\n[![Software License][ico-license]](LICENSE.md)\n[![Build Status][ico-travis]][link-travis]\n[![Coverage Status][ico-scrutinizer]][link-scrutinizer]\n[![Quality Score][ico-code-quality]][link-code-quality]\n[![Total Downloads][ico-downloads]][link-downloads]\n\n**Note:** Replace ```:author_name``` ```:author_username``` ```:author_website``` ```:author_email``` ```:vendor``` ```:package_name``` ```:package_description``` with their correct values in [README.md](README.md), [CHANGELOG.md](CHANGELOG.md), [CONTRIBUTING.md](CONTRIBUTING.md), [LICENSE.md](LICENSE.md) and [composer.json](composer.json) files, then delete this line. You can run `$ php prefill.php` in the command line to make all replacements at once. Delete the file prefill.php as well.\n\nThis is where your description should go. Try and limit it to a paragraph or two, and maybe throw in a mention of what\nPSRs you support to avoid any confusion with users and contributors.\n\n## Structure\n\nIf any of the following are applicable to your project, then the directory structure should follow industry best practices by being named the following.\n\n```\nbin/        \nbuild/\ndocs/\nconfig/\nsrc/\ntests/\nvendor/\n```\n\n\n## Install\n\nVia Composer\n\n``` bash\n$ composer require :vendor/:package_name\n```\n\n## Usage\n\n``` php\n$skeleton = new League\\Skeleton();\necho $skeleton->echoPhrase('Hello, League!');\n```\n\n## Change log\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information on what has changed recently.\n\n## Testing\n\n``` bash\n$ composer test\n```\n\n## Contributing\n\nPlease see [CONTRIBUTING](CONTRIBUTING.md) and [CODE_OF_CONDUCT](CODE_OF_CONDUCT.md) for details.\n\n## Security\n\nIf you discover any security related issues, please email :author_email instead of using the issue tracker.\n\n## Credits\n\n- [:author_name][link-author]\n- [All Contributors][link-contributors]\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n\n[ico-version]: https://img.shields.io/packagist/v/:vendor/:package_name.svg?style=flat-square\n[ico-license]: https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square\n[ico-travis]: https://img.shields.io/travis/:vendor/:package_name/master.svg?style=flat-square\n[ico-scrutinizer]: https://img.shields.io/scrutinizer/coverage/g/:vendor/:package_name.svg?style=flat-square\n[ico-code-quality]: https://img.shields.io/scrutinizer/g/:vendor/:package_name.svg?style=flat-square\n[ico-downloads]: https://img.shields.io/packagist/dt/:vendor/:package_name.svg?style=flat-square\n\n[link-packagist]: https://packagist.org/packages/:vendor/:package_name\n[link-travis]: https://travis-ci.org/:vendor/:package_name\n[link-scrutinizer]: https://scrutinizer-ci.com/g/:vendor/:package_name/code-structure\n[link-code-quality]: https://scrutinizer-ci.com/g/:vendor/:package_name\n[link-downloads]: https://packagist.org/packages/:vendor/:package_name\n[link-author]: https://github.com/:author_username\n[link-contributors]: ../../contributors\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.0654296875,
          "content": "{\n    \"name\": \":vendor/:package_name\",\n    \"type\": \"library\",\n    \"description\": \":package_description\",\n    \"keywords\": [\n        \":vendor\",\n        \":package_name\"\n    ],\n    \"homepage\": \"https://github.com/:vendor/:package_name\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \":author_name\",\n            \"email\": \":author_email\",\n            \"homepage\": \":author_website\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"require\": {\n        \"php\" : \"~7.2\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\" : \">=8.0\",\n        \"squizlabs/php_codesniffer\": \"^3.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \":vendor\\\\:package_name\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \":vendor\\\\:package_name\\\\\": \"tests\"\n        }\n    },\n    \"scripts\": {\n        \"test\": \"phpunit\",\n        \"check-style\": \"phpcs src tests\",\n        \"fix-style\": \"phpcbf src tests\"\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"1.0-dev\"\n        }\n    },\n    \"config\": {\n        \"sort-packages\": true\n    }\n}\n"
        },
        {
          "name": "phpcs.xml.dist",
          "type": "blob",
          "size": 0.37109375,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\":package_name\">\n    <description>The coding standard of :package_name package</description>\n    <arg value=\"p\" />\n\n    <config name=\"ignore_warnings_on_exit\" value=\"1\" />\n    <config name=\"ignore_errors_on_exit\" value=\"1\" />\n\n    <arg name=\"colors\" />\n    <arg value=\"s\" />\n\n    <!-- Use the PSR2 Standard-->\n    <rule ref=\"PSR2\" />\n</ruleset>"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.9287109375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit bootstrap=\"vendor/autoload.php\"\n         backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         colors=\"true\"\n         verbose=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\">\n    <testsuites>\n        <testsuite name=\":vendor Test Suite\">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist>\n            <directory suffix=\".php\">src/</directory>\n        </whitelist>\n    </filter>\n    <logging>\n        <log type=\"junit\" target=\"build/report.junit.xml\"/>\n        <log type=\"coverage-html\" target=\"build/coverage\"/>\n        <log type=\"coverage-text\" target=\"build/coverage.txt\"/>\n        <log type=\"coverage-clover\" target=\"build/logs/clover.xml\"/>\n    </logging>\n</phpunit>\n"
        },
        {
          "name": "prefill.php",
          "type": "blob",
          "size": 4.6220703125,
          "content": "<?php\ndefine('COL_DESCRIPTION', 0);\ndefine('COL_HELP', 1);\ndefine('COL_DEFAULT', 2);\n\n$fields = [\n    'author_name' =>            ['Your name',             '',                                                ''],\n    'author_github_username' => ['Your GitHub username',  '<username> in https://github.com/username',       ''],\n    'author_email' =>           ['Your email address',    '',                                                ''],\n    'author_twitter' =>         ['Your twitter username', '',                                                '@{author_github_username}'],\n    'author_website' =>         ['Your website',          '',                                                'https://github.com/{author_github_username}'],\n\n    'package_vendor' =>         ['Package vendor',        '<vendor> in https://github.com/vendor/package',   '{author_github_username}'],\n    'package_name' =>           ['Package name',          '<package> in https://github.com/vendor/package',  ''],\n    'package_description' =>    ['Package very short description',   '',                                     ''],\n\n    'psr4_namespace' =>         ['PSR-4 namespace',       'usually, Vendor\\\\Package',                        '{package_vendor}\\\\{package_name}'],\n];\n\n$values = [];\n\n$replacements = [\n    ':vendor\\\\\\\\:package_name\\\\\\\\' => function () use(&$values) { return str_replace('\\\\', '\\\\\\\\', $values['psr4_namespace']) . '\\\\\\\\'; },\n    ':author_name'                 => function () use(&$values) { return $values['author_name']; },\n    ':author_username'             => function () use(&$values) { return $values['author_github_username']; },\n    ':author_website'              => function () use(&$values) { return $values['author_website'] ?: ('https://github.com/' . $values['author_github_username']); },\n    ':author_email'                => function () use(&$values) { return $values['author_email'] ?: ($values['author_github_username'] . '@example.com'); },\n    ':vendor'                      => function () use(&$values) { return $values['package_vendor']; },\n    ':package_name'                => function () use(&$values) { return $values['package_name']; },\n    ':package_description'         => function () use(&$values) { return $values['package_description']; },\n    'League\\\\Skeleton'             => function () use(&$values) { return $values['psr4_namespace']; },\n];\n\nfunction read_from_console ($prompt) {\n    if ( function_exists('readline') ) {\n        $line = trim(readline($prompt));\n        if (!empty($line)) {\n            readline_add_history($line);\n        }\n    } else {\n        echo $prompt;\n        $line = trim(fgets(STDIN));\n    }\n    return $line;\n}\n\nfunction interpolate($text, $values)\n{\n    if (!preg_match_all('/\\{(\\w+)\\}/', $text, $m)) {\n        return $text;\n    }\n    foreach ($m[0] as $k => $str) {\n        $f = $m[1][$k];\n        $text = str_replace($str, $values[$f], $text);\n    }\n    return $text;\n}\n\n$modify = 'n';\ndo {\n    if ($modify == 'q') {\n        exit;\n    }\n\n    $values = [];\n\n    echo \"----------------------------------------------------------------------\\n\";\n    echo \"Please, provide the following information:\\n\";\n    echo \"----------------------------------------------------------------------\\n\";\n    foreach ($fields as $f => $field) {\n        $default = isset($field[COL_DEFAULT]) ? interpolate($field[COL_DEFAULT], $values): '';\n        $prompt = sprintf(\n            '%s%s%s: ',\n            $field[COL_DESCRIPTION],\n            $field[COL_HELP] ? ' (' . $field[COL_HELP] . ')': '',\n            $field[COL_DEFAULT] !== '' ? ' [' . $default . ']': ''\n        );\n        $values[$f] = read_from_console($prompt);\n        if (empty($values[$f])) {\n            $values[$f] = $default;\n        }\n    }\n    echo \"\\n\";\n\n    echo \"----------------------------------------------------------------------\\n\";\n    echo \"Please, check that everything is correct:\\n\";\n    echo \"----------------------------------------------------------------------\\n\";\n    foreach ($fields as $f => $field) {\n        echo $field[COL_DESCRIPTION] . \": $values[$f]\\n\";\n    }\n    echo \"\\n\";\n} while (($modify = strtolower(read_from_console('Modify files with these values? [y/N/q] '))) != 'y');\necho \"\\n\";\n\n$files = array_merge(\n    glob(__DIR__ . '/*.md'),\n    glob(__DIR__ . '/*.xml.dist'),\n    glob(__DIR__ . '/composer.json'),\n    glob(__DIR__ . '/src/*.php'),\n    glob(__DIR__ . '/tests/*.php')\n);\nforeach ($files as $f) {\n    $contents = file_get_contents($f);\n    foreach ($replacements as $str => $func) {\n        $contents = str_replace($str, $func(), $contents);\n    }\n    file_put_contents($f, $contents);\n}\n\necho \"Done.\\n\";\necho \"Now you should remove the file '\" . basename(__FILE__) . \"'.\\n\";\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}