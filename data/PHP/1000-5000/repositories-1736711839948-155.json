{
  "metadata": {
    "timestamp": 1736711839948,
    "page": 155,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "luolongfei/freenom",
      "stars": 3329,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1474609375,
          "content": ".git\n.idea\n.env\n.env.old\nlogs\nREADME.md\nREADME_EN.md\nLICENSE\n.github\napp/Data/pushed_version.txt\napp/Data/wechat_access_token.txt\nresources/screenshot\n"
        },
        {
          "name": ".env.example",
          "type": "blob",
          "size": 10.1875,
          "content": "#####################################################################\n# 注意事项\n#\n# - 环境变量的格式为“键=值”，顶格写，注意等号两边不能有空格，值可以用单引号或者双引号引起来，不引也行（下面的特殊情况必须引起来）\n# - 因为环境变量中“#”代表注释，若密码中存在“#”字符的，一定要使用单引号将整个密码引起来，否则解析会在“#”字符前截止，如果密码中存在单双引号的，\n#    需要在单双引号前加“\\”转义\n# - 配置多账户不可省略单引号，且多个账户和密码的格式必须是“<账户1>@<密码1>|<账户2>@<密码2>|<账户3>@<密码3>”，不要有空格，就算有程序也会给你干掉\n#    e.g. MULTIPLE_ACCOUNTS='<账户1>@<密码1>|<账户2>@<密码2>|<账户3>@<密码3>'\n#    注意不要省略“<>”符号，否则无法正确匹配\n# - 若你只有单个账户，只配置 FREENOM_USERNAME 和FREENOM_PASSWORD 就够了\n# - 单账户和多账户的配置会被合并在一起读取并去重\n#####################################################################\n\n# .env 文件版本\nENV_FILE_VERSION='v3.1'\n\n######################  账户配置 Account config  #########################\n# Freenom 账户 Freenom Account\nFREENOM_USERNAME=''\n\n# Freenom 密码 Freenom password\nFREENOM_PASSWORD=''\n\n# 多账户支持 Support for multiple accounts\nMULTIPLE_ACCOUNTS=''\n\n# 【可选】 Freenom 代理 [Optional] Freenom proxy e.g. http://127.0.0.1:1081 or socks5://127.0.0.1:1080\nFREENOM_PROXY=''\n######################  end 账户配置  #########################\n\n######################  通知邮件配置 Email config  #########################\n# 机器人邮箱账户 Email of robot\nMAIL_USERNAME=''\n\n# 机器人邮箱密码（Gmail 填应用专用密码，QQ 邮箱或 163 邮箱填授权码） Password of the robot email\nMAIL_PASSWORD=''\n\n# 用于接收通知的邮箱 Email address used to receive notifications\nTO=''\n\n# 是否启用邮件推送功能 1：启用 0：不启用 Whether to enable email push features 1: enabled 0: not enabled\nMAIL_ENABLE=0\n\n# 【可选】 自定义邮箱配置 [Optional] Custom email config\n# 如果你想使用除“QQ邮箱、163邮箱、Gmail、Outlook邮箱”以外的邮箱或者自建邮箱服务作为机器人邮箱，可以自定义邮箱配置，否则请不要配置这些项\n# If you want to use mailboxes other than \"QQ mailbox, 163 mailbox, Gmail, Outlook mailbox\" or self-built mailbox service as robot mailbox, you can customize mailbox configuration, otherwise, please don't configure these items.\n\n# 【可选】 SMTP 服务器 [Optional] SMTP server e.g. smtp.gmail.com\nMAIL_HOST=''\n\n# 【可选】 SMTP 端口号，一般是 587 或者 465 [Optional] SMTP port number, usually 587 or 465\nMAIL_PORT=''\n\n# 【可选】 邮件加密方式，一般是 tls 或者 ssl 或者 starttls [Optional] Mail encryption method, usually tls or ssl or starttls\nMAIL_ENCRYPTION=''\n\n# end 自定义邮箱配置 end of custom email config\n\n######################  end 通知邮件配置  #########################\n\n######################  Telegram bot  #########################\n# 通过 Telegram bot 发送通知消息 Send messages via Telegram bot\n\n# 你的 chat_id，通过发送“/start”给 @userinfobot 可以获取自己的 id Your chat_id, you can get your own id by sending \"/start\" to @userinfobot\nTELEGRAM_CHAT_ID=''\n\n# 你的 Telegram bot 的 token Token for your Telegram bot\nTELEGRAM_BOT_TOKEN=''\n\n# 【可选】 Telegram 代理 [Optional] Telegram proxy e.g. http://127.0.0.1:1081 or socks5://127.0.0.1:1080\nTELEGRAM_PROXY=''\n\n# 【可选】 自建 Telegram 反向代理地址，不明白则请忽略此配置项，保持默认即可 [Optional] Please do not modify this item\n# 参考：https://web.archive.org/web/20220221035315/https://hostloc.com/thread-805441-1-1.html\n# 只要是一个合法的网址即可，程式会自动提取网址的主机部分。例如 https://xxx.xx.workers.dev/ or xxx.xx.xx\nCUSTOM_TELEGRAM_HOST='api.telegram.org'\n\n# 是否启用 Telegram Bot 功能 1：启用 0：不启用 Whether to enable Telegram Bot features 1: enabled 0: not enabled\nTELEGRAM_BOT_ENABLE=0\n######################  end Telegram bot  #########################\n\n######################  企业微信  #########################\n# 企业 ID Corporate ID\nWECHAT_CORP_ID=''\n\n# 应用的凭证密钥 Credential keys for enterprise WeChat applications\nWECHAT_CORP_SECRET=''\n\n# 应用 ID\nWECHAT_AGENT_ID=''\n\n# 用户 ID 指定接收消息的成员，成员ID列表（多个接收者用‘|’分隔，最多支持1000个）。指定为\"@all\"，则向该企业应用的全部成员发送\nWECHAT_USER_ID='@all'\n\n# 是否启用企业微信送信功能 1：启用 0：不启用 Whether to enable the enterprise WeChat message push function 1: Enable 0: Do not enable\nWECHAT_ENABLE=0\n######################  end 企业微信  #########################\n\n######################  Server 酱  #########################\n# Server 酱的 SendKey\nSCT_SEND_KEY=''\n\n# 是否启用 Server 酱 送信功能 1：启用 0：不启用 Whether to enable the ServerChan message function 1: enabled 0: not enabled\nSCT_ENABLE=0\n######################  end Server 酱  #########################\n\n######################  Bark 送信  #########################\n# Bark key 打开 Bark App，注册设备后看到的 key Open the Bark App, register the device and see the key\n# 支持直接粘贴 “https://api.day.app/xxx/这里改成你自己的推送内容” 这类文本，程序会自动从中提取有效的 Bark key Support direct paste \"https://api.day.app/xxx/这里改成你自己的推送内容\" type of text, the program will automatically extract the valid Bark key from it\nBARK_KEY=''\n\n# Bark 域名 默认是 Bark 作者提供的服务，建议自建 The Bark URL defaults to the server provided by the Bark author, and it is recommended to build your own\nBARK_URL='https://api.day.app'\n\n# Bark 其它相关参数（保持默认即可）\nBARK_IS_ARCHIVE=''\nBARK_GROUP='FreeNom'\nBARK_LEVEL='active'\nBARK_ICON='https://q2.qlogo.cn/headimg_dl?dst_uin=593198779&spec=100'\nBARK_JUMP_URL=''\nBARK_SOUND='gotosleep'\n\n# 是否启用 Bark 推送消息 1：启用 0：不启用 Whether to enable Bark push messaging 1: Enable 0: Do not enable\nBARK_ENABLE=0\n######################  end Bark 送信  #########################\n\n######################  Pushplus  #########################\n# Pushplus 的 token\nPUSHPLUS_KEY=''\n\n# 是否启用 Pushplus 送信功能 1：启用 0：不启用 Whether to enable the Pushplus message function 1: enabled 0: not enabled\nPUSHPLUS_ENABLE=0\n######################  end Pushplus  #########################\n\n# 通知频率 0：仅当有续期操作的时候 1：每次执行 Notification frequency 0: Only when there is a renewal operation 1: Each execution\nNOTICE_FREQ=1\n\n# 是否验证服务器证书 1：验证 0：不验证 Whether to verify the server certificate 1: verify 0: no verification\nVERIFY_SSL=0\n\n# 是否开启 Debug 模式 1：开启 0：关闭 Whether to turn on Debug mode 1: On 0: Off\nDEBUG=0\n\n# 检测是否有新版本可用，发现新版本时推送消息通知 1：开启 0：关闭 Automatically detects if a new version is available and pushes a message notification when a new version is found 1: On 0: Off\nNEW_VERSION_DETECTION=1\n\n# 应用语言配置 Application language configuration, the supported values are zh or en, zh means Chinese, en means English\nCUSTOM_LANGUAGE=zh\n\n# 送信时是否显示服务器信息 1：显示 0：不显示 Whether to display server information when sending messages 1: Display 0: Do not display\nSHOW_SERVER_INFO=1\n\n# 是否给敏感信息打码 1：启用 0：不启用 Whether to enable the obfuscation of sensitive information 1: Enabled 0: Not enabled\nMOSAIC_SENSITIVE_INFO=0\n\n# 最大请求重试次数\n# 每次重试间隔根据次数递增\n# Maximum request retry count\n# Retry interval increases based on the number of attempts\nMAX_REQUEST_RETRY_COUNT=20\n\n######################  自建容器版本的 AWS WAF SOLVER  #########################\n# 只有当你选择通过 docker compose 自建 AWS WAF SOLVER 时才需要配置以下内容，除非你知道自己在干什么，否则无需修改\n# The following settings only need to be configured if you choose to build your own AWS WAF SOLVER through Docker Compose. Unless you know what you're doing, no modification is necessary\n\n# 识别方案 1：Wit.ai\nRECOGNITION_METHOD=1\n\n# 下方配置根据识别方案不同而不同\n\n#### Wit.ai\n# WIT.AI 密钥\n# WIT.AI Key\nWIT_AI_KEY=''\n#### end Wit.ai\n\n# 语音识别最大尝试次数\n# Maximum number of attempts for speech recognition\nMAX_RECOGNIZE_ATTEMPTS=100\n\n# aws waf solver 接口地址，容器内部 solver 地址，无需修改，除非你知道你在干什么\n# AWS WAF Solver API URL, an internal container address, no need for modification, unless you know what you're doing\nAWS_WAF_SOLVER_URL='aws-waf-solver:2019/aws_waf_token'\n######################  end 自建容器版本的 AWS WAF SOLVER  #########################\n\n######################  第三方 AWS WAF SOLVER  #########################\n# 推荐启用，否则会尝试调用你自建的 AWS WAF SOLVER 地址\n# Recommended to enable, otherwise it will attempt to call your self-built AWS WAF SOLVER url\n\n# 使用开源的 AWS WAF Solver API 0：不使用 1：使用\n# 如果选择使用，意味着每次发起请求会调用作者搭建的共享 token 接口获取可用的 aws-waf-token\n# Utilize the open-source AWS WAF Solver API. 0: Don't use, 1: Use\n# If opted to use, it signifies that each request will call the shared token API constructed by the author to fetch a usable aws-waf-token\nUSE_OPEN_SOURCE_WAF_SOLVER_API=1\n\n# 开源的 AWS WAF Solver URL，默认为作者搭建的共享 token api，无需修改\n# Open-source AWS WAF Solver URL, defaults to the shared token API built by the author, no modification required\nOPEN_SOURCE_WAF_SOLVER_URL='https://aws-waf-solver.llf.app/token'\n\n# 接口密钥，作者搭建的共享 token api 需要使用此密钥进行认证，无需修改\n# API key, the shared token API built by the author requires this key for authentication, no modification necessary\nFF_SECRET_KEY='https://github.com/luolongfei/freenom'\n######################  end 第三方 AWS WAF SOLVER  #########################\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.111328125,
          "content": "heroku/* linguist-language=php\nresources/mail/* linguist-language=php\nresources/screenshot/* linguist-language=php"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0595703125,
          "content": ".env\r\napp/tmp/\r\napp/num_limit/\r\n.idea/\r\napp/Data/\r\n.env.old\r\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.0048828125,
          "content": "### 📰 所有更新日志\r\n\r\n此处包含了自脚本发布以来的所有更新日志。以前的日志只记录了比较大的变更，以后的日志会尽可能详尽一些。\r\n\r\n#### [v0.5.4](https://github.com/luolongfei/freenom/releases/tag/v0.5.4) - 2023-12-13\r\n\r\n- 将重试次数默认强制改为 200 次\r\n\r\n#### [v0.5.3](https://github.com/luolongfei/freenom/releases/tag/v0.5.3) - 2023-10-16\r\n\r\n- 增加重试机制，应对 freenom 人机验证\r\n\r\n#### [v0.5.2](https://github.com/luolongfei/freenom/releases/tag/v0.5.2)\r\n\r\n- 用于共有 freenom 变动，无实质修改\r\n\r\n#### [v0.5.1](https://github.com/luolongfei/freenom/releases/tag/v0.5.1) - 2022-08-29\r\n\r\n- 支持一键部署至 Koyeb、Heroku 等平台，虽然 Heroku 马上要收费了，但 Koyeb 依然免费\r\n- 优化在各种环境下的目录读写权限判断\r\n- 支持给日志或者命令行输出内容中的敏感信息打马赛克，默认不启用\r\n\r\n#### [v0.5](https://github.com/luolongfei/freenom/releases/tag/v0.5) - 2022-05-15\r\n\r\n- 增加支持 华为云函数、Railway 等部署方式\r\n- 支持在消息中显示服务器信息，该功能默认关闭\r\n- 优化部分代码逻辑\r\n\r\n#### [v0.4.5](https://github.com/luolongfei/freenom/releases/tag/v0.4.5) - 2022-02-26\r\n\r\n- 支持多语言，中英文切换\r\n- 支持自建 Telegram 反代地址 [@Mattraks](https://github.com/Mattraks)\r\n- 更新各种依赖库，PHP 版本最低要求不低于 7.3\r\n\r\n#### [v0.4.4](https://github.com/luolongfei/freenom/releases/tag/v0.4.4) - 2021-12-14\r\n\r\n- 改进与 Cron 表达式验证相关的正则，兼容各种花里胡哨的表达式\r\n- 支持自动从 Bark url 中提取有效的 Bark key\r\n- 支持通过 阿里云函数 部署\r\n\r\n#### [v0.4.3](https://github.com/luolongfei/freenom/releases/tag/v0.4.3) - 2021-11-07\r\n\r\n- 增加了 企业微信 / Server 酱 / Bark 等送信方式\r\n- Telegram Bot 支持使用代理，应对国内网络环境问题\r\n- Freenom 账户支持使用代理，应对国内网络环境问题\r\n- 支持检测新版，有新版本可用时能第一时间收到通知\r\n- 支持自动热更新 .env 文件内容，免去每次更新后手动复制配置的繁琐步骤\r\n- 重构了核心续期代码\r\n- 重构了送信模块\r\n- 简化 .env 文件中的配置项\r\n\r\n#### [v0.3](https://github.com/luolongfei/freenom/releases/tag/v0.3) - 2021-05-27\r\n\r\n- 追加 Docker 版本，支持通过 Docker 方式部署，简化部署流程\r\n\r\n#### [v0.2.5](#) - 2020-06-23\r\n\r\n- 支持在 Github Actions 上执行（应 GitHub 官方要求，已移除此功能）\r\n\r\n#### [v0.2.2](#) - 2020-02-06\r\n\r\n- 新增通过 Telegram bot 送信\r\n- 各种送信方式支持单独开关\r\n\r\n#### [v0.2](#) - 2020-02-01\r\n\r\n- 支持多个 Freenom 账户进行域名续期\r\n- 进行了彻底的重构，框架化\r\n- 优化邮箱模块，支持自动选择合适的邮箱配置\r\n\r\n*（版本在 v0.1 到 v0.2 期间代码有过很多次变更，之前没有发布版本，故此处不再赘述相关变更日志）*\r\n\r\n#### [v0.1](#) - 2018-8-13\r\n\r\n- 初版，开源，基础的续期功能"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.5068359375,
          "content": "FROM php:7.4.19-alpine3.13\n\nLABEL author=\"mybsdc <mybsdc@gmail.com>\" \\\n    maintainer=\"luolongfei <luolongf@gmail.com>\"\n\nENV TZ Asia/Shanghai\n\nWORKDIR /app\n\nCOPY . ./\n\nRUN set -eux \\\n    && apk update \\\n    && apk add --no-cache tzdata bash\n\n# 由于部分环境不支持数据卷 VOLUME 关键字，故不再指定\n# VOLUME [\"/conf\", \"/app/logs\"]\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh \\\n    && mkdir /conf\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nCMD [\"crond\", \"-f\"]\n"
        },
        {
          "name": "Dockerfile.heroku",
          "type": "blob",
          "size": 0.5205078125,
          "content": "FROM php:8.1.9-fpm-alpine3.16\n\nLABEL author=\"mybsdc <mybsdc@gmail.com>\" \\\n    maintainer=\"luolongfei <luolongf@gmail.com>\"\n\nENV TZ Asia/Shanghai\nENV IS_HEROKU 1\n\nWORKDIR /app\n\nCOPY . ./\n\nCOPY ./heroku/nginx.template.conf ./\nCOPY ./heroku/web ./web/\n\nRUN set -eux \\\n    && apk update \\\n    && apk add --no-cache tzdata bash nginx gettext\n\nCOPY ./heroku/startup.sh /\nRUN chmod +x /startup.sh\n\n# https://devcenter.heroku.com/articles/container-registry-and-runtime#dockerfile-commands-and-runtime\nCMD [\"/bin/bash\", \"-c\", \"/startup.sh\"]\n"
        },
        {
          "name": "Dockerfile.koyeb",
          "type": "blob",
          "size": 0.6123046875,
          "content": "FROM php:8.1.9-fpm-alpine3.16\n\nLABEL author=\"mybsdc <mybsdc@gmail.com>\" \\\n    maintainer=\"luolongfei <luolongf@gmail.com>\"\n\nENV TZ Asia/Shanghai\nENV IS_KOYEB 1\n\nWORKDIR /app\n\nCOPY . ./\n\nCOPY ./koyeb/nginx.template.conf ./\nCOPY ./koyeb/web ./web/\n\nRUN set -eux \\\n    && apk update \\\n    && apk add --no-cache tzdata bash nginx gettext \\\n    && mkdir -p /app/logs \\\n    && chmod -Rf 666 /app/logs\n\nCOPY ./koyeb/startup.sh /\nRUN chmod +x /startup.sh\n\nEXPOSE 80 443 2019\n\n# https://www.koyeb.com/docs/deploy-to-koyeb-button\n# https://www.koyeb.com/docs/quickstart/deploy-a-docker-application\nCMD [\"/bin/bash\", \"-c\", \"/startup.sh\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2021 luolongfei\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.4189453125,
          "content": ".PHONY: up down logs ps clear restart\n\n# 可以通过 make logs n=30 查看最近 30 行日志\nn=20\n\nup:\n\tgit fetch --all\n\tgit reset --hard\n\tgit pull\n\tdocker compose pull aws-waf-solver\n\tdocker compose up --build -d\n\tdocker system prune -af\n\ndown:\n\tdocker compose down\n\nlogs:\n\tdocker compose logs -tf --tail $(n)\n\nps:\n\tdocker compose ps\n\nclear:\n\tdocker system prune -af\n\tdocker volume prune -af\n\nrestart:\n\tdocker compose restart\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 28.4921875,
          "content": "<div align=\"center\">\r\n\r\n![freenom logo](https://s1.ax1x.com/2022/03/10/bhzMG9.png)\r\n\r\n<h3>Freenom：freenom域名自动续期</h3>\r\n\r\n[![PHP version](https://img.shields.io/badge/php-%3E=7.3-brightgreen.svg?style=for-the-badge)](https://secure.php.net/)\r\n[![Docker pulls](https://img.shields.io/docker/pulls/luolongfei/freenom.svg?style=for-the-badge)](https://hub.docker.com/r/luolongfei/freenom)\r\n[![GitHub stars](https://img.shields.io/github/stars/luolongfei/freenom?color=brightgreen&style=for-the-badge)](https://github.com/luolongfei/freenom/stargazers)\r\n[![MIT license](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=for-the-badge)](https://github.com/luolongfei/freenom/blob/main/LICENSE)\r\n\r\nDocumentation: [English version](https://github.com/luolongfei/freenom/blob/main/README_EN.md) | 中文版\r\n</div> \r\n\r\n[📢 公告](#-公告)\r\n\r\n[🌿 特别感谢 Special Thanks](#-特别感谢-special-thanks)\r\n\r\n[📃 引言](#-引言)\r\n\r\n[🍭 效果](#-效果)\r\n\r\n[🎁 事前准备](#-事前准备)\r\n\r\n[📪 配置送信功能](#-配置送信功能)（支持 邮件送信 / Telegram Bot / 企业微信 / Server 酱 / Bark 等送信方式）\r\n\r\n[⛵ 通过 Docker Compose 方式部署](#-通过-docker-compose-部署)\r\n\r\n[🐳 通过 Docker 方式部署](#-通过-docker-部署)（推荐，最简单的部署方式之一）\r\n\r\n[🧊 通过 Heroku 部署](#-通过-Heroku-部署)\r\n\r\n[🚈 通过 Railway 部署](#-通过-Railway-部署)\r\n\r\n[📦 通过 Koyeb 部署](#-通过-Koyeb-部署)（没有自己服务器的用户可使用此方案）\r\n\r\n[🧪 通过 Mogenius 部署](#-通过-Mogenius-部署)（已不可行）\r\n\r\n[☁ 通过 各种云函数 部署](#-通过各种云函数部署) （目前各平台已开启收费模式，已放弃支持）\r\n\r\n[🚧 直接拉取源码部署](#-直接拉取源码部署)\r\n\r\n[📋 赞助名单 Donation List](#-赞助名单-donation-list)\r\n\r\n[❤ 赞助 Donation](#-赞助-donation)\r\n\r\n[🪓 信仰](#-信仰)\r\n\r\n[🌚 作者](#-作者)\r\n\r\n[💖 所有贡献者](#-所有贡献者)\r\n\r\n[📝 TODO List](#-TODO-List)\r\n\r\n[🍅 本项目的其它语言实现](#-本项目的其它语言实现)\r\n\r\n[🎉 鸣谢](#-鸣谢)\r\n\r\n[🥝 开源协议](#-开源协议)\r\n\r\n### 📢 公告\r\n\r\n- 热心网友创建了`Freenom 续期事务局`群组，可供交流、测试、反馈， **加入可直接访问 [https://t.me/freenom_auto_renew](https://t.me/freenom_auto_renew) ，或者扫码加入：**\r\n\r\n<a href=\"https://t.me/freenom_auto_renew\"><img src=\"https://s2.loli.net/2022/10/11/k4sSoXqMVfpIY3d.png\" alt=\"freenom_tg_group.png\" border=\"0\" width=\"220px\" height=\"280px\" /></a>\r\n\r\n### 🌿 特别感谢 Special Thanks\r\n\r\n感谢 JetBrains 提供的非商业开源软件开发授权。\r\n\r\nThanks for non-commercial open source development authorization by JetBrains.\r\n\r\n<a href=\"https://www.jetbrains.com/?from=luolongfei/freenom\" target=\"_blank\" title=\"JetBrains Logo (Main) logo.\">\r\n<img src=\"https://resources.jetbrains.com/storage/products/company/brand/logos/jb_beam.svg\" width=\"200px\" height=\"200px\" alt=\"JetBrains Logo (Main) logo.\">\r\n</a>\r\n\r\n### 📃 引言\r\n\r\n众所周知，Freenom是地球上唯一一个提供免费顶级域名的商家，不过需要每年续期，每次续期最多一年。由于我申请了一堆域名，而且不是同一时段申请的， 所以每次续期都觉得折腾，于是就写了这个自动续期的脚本。\r\n\r\n### 🍭 效果\r\n\r\n无论是续期成败或者程序执行出错，都会收到脚本发出的通知。如果是续期成败相关的通知，通知会包括未续期域名的到期天数等内容。*此处展示的是通知邮件的内容。*\r\n\r\n<a href=\"https://s4.ax1x.com/2022/02/26/bZr7WQ.png\"><img src=\"https://s4.ax1x.com/2022/02/26/bZr7WQ.png\" alt=\"邮件示例\" border=\"0\" width=\"95%\" height=\"100%\" /></a>\r\n\r\n### 🎁 事前准备\r\n\r\n- VPS：随便一台服务器都行，系统推荐`Debian`。`PHP`版本需在`php7.3`及以上，如果有`Docker`环境则可无视这个限制。如果你没有服务器，可参考本文档部署到各种免费环境中。\r\n- 送信邮箱（可选）：为了方便理解又称机器人邮箱，用于发送通知邮件。目前针对`Gmail`、`QQ邮箱`、`163邮箱`以及`Outlook邮箱`，程序会自动判断送信邮箱类型并使用合适的配置。\r\n  如果你使用的是其它第三方邮箱或者自建邮件服务，那么请参考 [.env.example](https://github.com/luolongfei/freenom/blob/main/.env.example)\r\n  文件中与邮件配置相关的注释进行配置。\r\n- 收信邮箱（可选）：用于接收机器人发出的通知邮件。\r\n- 上面的`送信邮箱`和`收信邮箱`是可选项，因为目前程序已支持`邮件送信` / `Telegram Bot` / `企业微信` / `Server 酱` / `Bark`等送信方式，仅当你使用`邮件送信`的时候，`送信邮箱`和`收信邮箱`\r\n  才是必须的，其它送信方式所需请参考下面的 [配置送信功能](#-配置送信功能) 。\r\n- 耐心。\r\n\r\n### 📪 配置送信功能\r\n\r\n此处会分别介绍`邮件送信` / `Telegram Bot` / `企业微信` / `Server 酱` / `Bark`送信方式的配置方法，以及其所需的资料，你可以任选一种送信方式进行配置，直接跳到对应的文档查看即可。 如果你是 IOS\r\n用户，推荐使用 `Bark`\r\n送信方式，其它平台的用户根据自己喜好选择可接受的送信方式即可。不太推荐使用`Server 酱`送信，`Server 酱`每日送信条数的限制，以及需要开会员才能直接看到送信内容，否则需要跳到 `Server 酱`\r\n网站才能查看内容，都是不推荐的原因。同样的配置完全可以直接使用`企业微信`送信方式，`企业微信`送信直接在普通微信客户端就能看到信件内容。\r\n\r\n*快速到文档指定位置：*\r\n\r\n[邮件送信](#邮件送信)\r\n\r\n[Telegram Bot](#Telegram-Bot)\r\n\r\n[企业微信](#企业微信)\r\n\r\n[Server 酱](#Server-酱)\r\n\r\n[Bark 送信](#Bark-送信)\r\n\r\n#### 邮件送信\r\n\r\n下面分别介绍`Gmail`、`QQ邮箱`以及`163邮箱`的设置，你只用看自己需要的部分。注意，`QQ邮箱`与`163邮箱`均使用`账户加授权码`的方式登录，\r\n`谷歌邮箱`使用`账户加密码`或者`账户加授权码`的方式登录，请知悉。另外还想吐槽一下，国产邮箱你得花一毛钱给邮箱提供方发一条短信才能拿到授权码。\r\n\r\n*（点击即可展开或收起）*\r\n\r\n<details>\r\n    <summary>设置Gmail</summary>\r\n<br>\r\n\r\n*推荐打开浏览器隐私模式后再登录 gmail 进行设置，防止当你有多个 gmail 账户时无法跳到正确的设置地址。*\r\n\r\n1、在`设置>转发和POP/IMAP`中，勾选\r\n\r\n- 对所有邮件启用 POP\r\n- 启用 IMAP\r\n\r\n![gmail配置01](https://s2.ax1x.com/2020/01/31/13tKsg.png \"gmail配置01\")\r\n\r\n然后保存更改。\r\n\r\n2、开启两步验证\r\n\r\n参考官方文档：[开启两步验证](https://support.google.com/accounts/answer/185839)\r\n\r\n3、配置使用应用专用密码登录邮箱\r\n\r\n参考官方文档：[使用应用专用密码登录](https://support.google.com/mail/answer/185833?hl=zh-Hans)\r\n\r\n**由于 Gmail 已不再支持“不安全的登录方式”，故目前只能使用账户加应用专用密码的方式登录。**\r\n\r\n***\r\n\r\n</details>\r\n\r\n<details>\r\n    <summary>设置QQ邮箱</summary>\r\n<br>\r\n\r\n在`设置>账户>POP3/IMAP/SMTP/Exchange/CardDAV/CalDAV服务`下，开启`POP3/SMTP服务`\r\n\r\n![qq邮箱配置01](https://s2.ax1x.com/2020/01/31/13cIKA.png \"qq邮箱配置01\")\r\n\r\n此时坑爹的QQ邮箱会要求你用手机发送一条短信给腾讯，发送完了点一下`我已发送`\r\n\r\n![qq邮箱配置02](https://s2.ax1x.com/2020/01/31/13c4vd.png \"qq邮箱配置02\")\r\n\r\n然后你就能看到你的邮箱授权码了，使用邮箱账户加授权码即可登录，记下授权码\r\n\r\n![qq邮箱配置03](https://s2.ax1x.com/2020/01/31/13cTbt.png \"qq邮箱配置03\")\r\n\r\n![qq邮箱配置04](https://s2.ax1x.com/2020/01/31/13coDI.png \"qq邮箱配置04\")\r\n\r\n***\r\n\r\n</details>\r\n\r\n<details>\r\n    <summary>设置163邮箱</summary>\r\n<br>\r\n\r\n在`设置>POP3/SMTP/IMAP`下，开启`POP3/SMTP服务`和`IMAP/SMTP服务`并保存\r\n\r\n![163邮箱配置01](https://s2.ax1x.com/2020/01/31/13WKZn.png \"163邮箱配置01\")\r\n\r\n![163邮箱配置02](https://s2.ax1x.com/2020/01/31/13WQI0.png \"163邮箱配置02\")\r\n\r\n现在点击侧边栏的`客户端授权密码`，并获取授权码，你看到画面可能和我不一样，因为我已经获取了授权码，所以只有`重置授权码`按钮，这里自己根据网站提示申请获取授权码，网易和腾讯一样恶心，需要你用手机给它发一条短信才能拿到授权码\r\n\r\n![163邮箱配置03](https://s2.ax1x.com/2020/01/31/13WMaq.png \"163邮箱配置03\")\r\n\r\n163 邮箱送信后，接收方如果没收到可以在垃圾邮件里面找一下。\r\n\r\n***\r\n\r\n</details>\r\n\r\n上面的动作完成后，在`.env`文件中，将`MAIL_USERNAME`和`MAIL_PASSWORD`设置为你的邮箱和密码（或令牌），将`TO`设置为你的收信邮箱，然后将`MAIL_ENABLE`的值设为`1`以启用邮箱送信功能。\r\n\r\n上面介绍了三种邮箱的设置方法，如果你不想使用邮件送信，将根目录下的`.env`文件中的`MAIL_ENABLE`的值改为`0`即可关闭邮件推送方式。\r\n\r\n*邮件 送信部分完。*\r\n\r\n#### Telegram Bot\r\n\r\n有关 【Telegram Bot】 的具体配置步骤请参考 [此处](https://github.com/luolongfei/freenom/wiki/Telegram-Bot)\r\n\r\n#### 企业微信\r\n\r\n有关 【企业微信】 的具体配置步骤请参考 [此处](https://github.com/luolongfei/freenom/wiki/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1)\r\n\r\n#### Server 酱\r\n\r\n有关 【Server 酱】 的具体配置步骤请参考 [此处](https://github.com/luolongfei/freenom/wiki/Server-%E9%85%B1)\r\n\r\n#### Bark 送信\r\n\r\n有关 【Bark 送信】 的具体配置步骤请参考 [此处](https://github.com/luolongfei/freenom/wiki/Bark-%E9%80%81%E4%BF%A1)\r\n\r\n***\r\n\r\n*与 配置送信功能 相关的篇幅完。下面开始讲本项目的几种使用方式。推荐使用 Docker 方式，无需纠结环境。*\r\n\r\n***\r\n\r\n### ⛵ 通过 Docker Compose 部署\r\n\r\n**注意，目前是 beta 版本，只支持在 amd64 架构的机器上安装，arm 或其它架构的用户请稍安勿躁，等后续更新。或者如果你需要一台服务器，可以考虑** [美国便宜 VPS](https://go.llfapp.com/cc)\r\n\r\n#### 1、一键安装 docker 和 docker compose\r\n\r\nDebian / Ubuntu（推荐）\r\n\r\n```shell\r\napt-get update -y;\r\napt-get install -y wget vim git make;\r\nwget -qO- get.docker.com | bash;\r\nsystemctl start docker;\r\nsudo systemctl enable docker.service;\r\nsudo systemctl enable containerd.service;\r\ndocker version;\r\nDOCKER_COMPOSE_VER=2.24.3;\r\nDOCKER_CONFIG=/usr/local/lib/docker;\r\nmkdir -p $DOCKER_CONFIG/cli-plugins;\r\ncurl -SL https://github.com/docker/compose/releases/download/v${DOCKER_COMPOSE_VER}/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose;\r\nsudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose;\r\ndocker compose version;\r\n```\r\n\r\nCentOS\r\n\r\n```shell\r\nyum update -y;\r\nyum install -y wget vim make;\r\nwget -qO- get.docker.com | bash;\r\nsystemctl start docker;\r\nsudo systemctl enable docker.service;\r\nsudo systemctl enable containerd.service;\r\ndocker version;\r\nDOCKER_COMPOSE_VER=2.24.3;\r\nDOCKER_CONFIG=/usr/local/lib/docker;\r\nmkdir -p $DOCKER_CONFIG/cli-plugins;\r\ncurl -SL https://github.com/docker/compose/releases/download/v${DOCKER_COMPOSE_VER}/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose;\r\nsudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose;\r\ndocker compose version;\r\n```\r\n\r\n#### 2、下载本项目\r\n\r\n```shell\r\ngit clone https://github.com/luolongfei/freenom.git && cd freenom\r\n```\r\n\r\n#### 3、配置\r\n\r\n##### 3.1、申请 wit.ai 的 token\r\n\r\n3.1.1 访问 https://wit.ai\r\n\r\n3.1.2 使用 Facebook 账户登录或者使用邮箱注册账户登录，只需要邮箱就可以注册\r\n\r\n3.1.3 前往 https://wit.ai/apps 画面，创建一个新的 app\r\n\r\n3.1.4 语言选择 English，名字随意，类型选择私有，创建之\r\n\r\n3.1.5 前往 Management > Settings (https://wit.ai/apps/<App ID>/settings) 画面\r\n\r\n3.1.6 复制 Client Access Token，下面需要写入 .env 文件中，WIT_AI_KEY='你复制的 Client Access Token'\r\n\r\n##### 3.2、修改 .env 配置文件\r\n\r\n将 .env 配置文件中的内容修改为你自己的配置，如果是从旧版升级，也可以直接把旧版 .env 复制到新版项目根目录，脚本会自动更新它。配置含义参考 .env.example 文件中的注解。\r\n\r\n```shell\r\ncp .env.example .env;\r\nvim .env;\r\n```\r\n\r\n修改完成后，输入 `:wq` 保存并退出。\r\n\r\n#### 4、启动\r\n\r\n注意：以下命令均需要在 docker-compose.yml 所在目录执行才有效。\r\n\r\n```shell\r\nmake up\r\n```\r\n\r\n没错，就是这么简单。然后可以执行 `make logs` 查看实时日志。\r\n\r\n##### 4.1、常用命令\r\n\r\n启动或者更新到最新版\r\n\r\n```shell\r\nmake up\r\n```\r\n\r\n停止\r\n\r\n```shell\r\nmake down\r\n```\r\n\r\n查看实时日志\r\n\r\n```shell\r\nmake logs\r\n```\r\n\r\n清理容器占用的空间\r\n\r\n```shell\r\nmake clear\r\n```\r\n\r\n重启容器\r\n\r\n```shell\r\nmake restart\r\n```\r\n\r\n*通过 docker compose 部署部分结束。*\r\n\r\n### 🐳 通过 Docker 部署\r\n\r\n*如果你有自己的服务器，这是最推荐的部署方式。*\r\n\r\nDocker 仓库地址为： [https://hub.docker.com/r/luolongfei/freenom](https://hub.docker.com/r/luolongfei/freenom) ，同样欢迎 star 。\r\n此镜像支持的架构为`linux/amd64`，`linux/arm64`，`linux/ppc64le`，`linux/s390x`，`linux/386`，`linux/arm/v7`，`linux/arm/v6`， 理论上支持`群晖`\r\n、`威联通`、`树莓派`以及各种类型的`VPS`。\r\n\r\n#### 1、安装 Docker\r\n\r\n##### 1.1 以 root 用户登录，执行一键脚本安装 Docker\r\n\r\n升级源并安装软件（下面两行命令二选一，根据你自己的系统）\r\n\r\nDebian / Ubuntu\r\n\r\n```shell\r\napt-get update && apt-get install -y wget vim make\r\n```\r\n\r\nCentOS\r\n\r\n```shell\r\nyum update && yum install -y wget vim make\r\n```\r\n\r\n执行此命令等候自动安装 Docker\r\n\r\n```shell\r\nwget -qO- get.docker.com | bash\r\n```\r\n\r\n说明：请使用 KVM 架构的 VPS，OpenVZ 架构的 VPS 不支持安装 Docker，另外 CentOS 8 不支持用此脚本来安装 Docker。 更多关于 Docker\r\n安装的内容参考 [Docker 官方安装指南](https://docs.docker.com/engine/install/) 。\r\n\r\n##### 1.2 针对 Docker 执行以下命令\r\n\r\n启动 Docker 服务\r\n\r\n```shell\r\nsystemctl start docker\r\n```\r\n\r\n查看 Docker 运行状态\r\n\r\n```shell\r\nsystemctl status docker\r\n```\r\n\r\n将 Docker 服务加入开机自启动\r\n\r\n```shell\r\nsystemctl enable docker\r\n```\r\n\r\n#### 2、通过 Docker 部署域名续期脚本\r\n\r\n##### 2.1 用 Docker 创建并启动容器\r\n\r\n命令如下\r\n\r\n```shell\r\ndocker run -d --name freenom --restart always -v $(pwd):/conf -v $(pwd)/logs:/app/logs luolongfei/freenom\r\n```\r\n\r\n或者，如果你想自定义脚本执行时间，则命令如下\r\n\r\n```shell\r\ndocker run -d --name freenom --restart always -v $(pwd):/conf -v $(pwd)/logs:/app/logs -e RUN_AT=\"11:24\" luolongfei/freenom\r\n```\r\n\r\n上面这条命令只比上上条命令多了个` -e RUN_AT=\"11:24\"`，其中`11:24`表示在北京时间每天的 11:24 执行续期任务，你可以自定义这个时间。 这里的`RUN_AT`参数同时也支持 CRON\r\n命令里的时间形式，比如，` -e RUN_AT=\"9 11 * * *\"`，表示每天北京时间 11:09 执行续期任务， 如果你不想每天执行任务，只想隔几天执行，只用修改`RUN_AT`的值即可。\r\n\r\n**注意：不推荐自定义脚本执行时间。因为你可能跟很多人定义的是同一个时间点，这样可能导致所有人都是同一时间向 Freenom 的服务器发起请求， 使得 Freenom 无法稳定提供服务。而如果你不自定义时间，程序会自动指定北京时间 06 ~\r\n23 点全时段随机的一个时间点作为执行时间， 每次重启容器都会自动重新指定。**\r\n\r\n<details>\r\n    <summary>点我查看上方 Docker 命令的参数解释</summary>\r\n<br>\r\n\r\n| 命令 | 含义 |\r\n| :--- | :--- |\r\n| docker run | 开始运行一个容器 |\r\n| -d 参数 | 容器以后台运行并输出容器 ID |\r\n| --name 参数 | 给容器分配一个识别符，方便将来的启动，停止，删除等操作 |\r\n| --restart 参数 | 配置容器启动类型，always 即为 docker 服务重新启动时自动启动本容器 |\r\n| -v 参数 | 挂载卷（volume），冒号后面是容器的路径，冒号前面是宿主机的路径（只支持绝对路径），`$(pwd)`表示当前目录，如果是 Windows 系统，则可用`${PWD}`替换此处的`$(pwd)` |\r\n| -e 参数 | 指定容器中的环境变量 |\r\n| luolongfei/freenom | 这是从 docker hub 下载回来的镜像完整路径名 |\r\n\r\n</details>\r\n\r\n至此，你的自动续期容器就跑起来了，执行`ls -a`后你就可以看到在你的当前目录下，有一个`.env`文件和一个`logs`目录，`logs`目录里面存放的是程序日志， 而`.env`则是配置文件，现在直接执行`vim .env`\r\n将`.env`文件里的所有配置项改为你自己的并保存即可。然后重启容器，如果配置正确的话，便很快可以收到相关邮件。\r\n\r\n<details>\r\n    <summary>点我查看 .env 文件中部分配置项的含义</summary>\r\n<br>\r\n\r\n| 变量名 | 含义 | 默认值 | 是否必须 |                                             备注                                              |\r\n| :---: | :---: |:---:|:----:|:-------------------------------------------------------------------------------------------:|\r\n| FREENOM_USERNAME | Freenom 账户 |  -  |  是   |                只支持邮箱账户，如果你是使用第三方社交账户登录的用户，请在 Freenom 管理页面绑定邮箱，绑定后即可使用邮箱账户登录                 |\r\n| FREENOM_PASSWORD | Freenom 密码 |  -  |  是   |                                 某些特殊字符可能需要转义，详见`.env`文件内注释                                  |\r\n| MULTIPLE_ACCOUNTS | 多账户支持 |  -  |  否   |                                 多个账户和密码的格式必须是“`<账户1>@<密码1>\\|<账户2>@<密码2>\\|<账户3>@<密码3>`”，注意不要省略“<>”符号，否则无法正确匹配。如果设置了多账户，上面的`FREENOM_USERNAME`和`FREENOM_PASSWORD`可不设置 |\r\n| MAIL_USERNAME | 机器人邮箱账户 |  -  |  否   |                            支持`Gmail`、`QQ邮箱`、`163邮箱`以及`Outlook邮箱`                            |\r\n| MAIL_PASSWORD | 机器人邮箱密码 |  -  |  否   |                              `Gmail`填应用专用密码，`QQ邮箱`或`163邮箱`填授权码                              |\r\n| TO | 接收通知的邮箱 |  -  |  否   |                                你自己最常用的邮箱，用来接收机器人邮箱发出的域名相关邮件                                 |\r\n| MAIL_ENABLE | 是否启用邮件推送功能 | `0` |  否   | `1`：启用<br>`0`：不启用<br>默认不启用，如果设为`1`，启用邮件推送功能，则上面的`MAIL_USERNAME`、`MAIL_PASSWORD`、`TO`变量变为必填项 |\r\n| TELEGRAM_CHAT_ID | 你的`chat_id` |  -  |  否   |                           通过发送`/start`给`@userinfobot`可以获取自己的`id`                            |\r\n| TELEGRAM_BOT_TOKEN | 你的`Telegram bot`的`token` |  -  |  否   ||\r\n| TELEGRAM_BOT_ENABLE | 是否启用`Telegram Bot`推送功能 | `0` |  否   |    `1`：启用<br>`0`：不启用<br>默认不启用，如果设为`1`，则必须设置上面的`TELEGRAM_CHAT_ID`和`TELEGRAM_BOT_TOKEN`变量     |\r\n| NOTICE_FREQ | 通知频率 | `1` |  否   |                                 `0`：仅当有续期操作的时候<br>`1`：每次执行                                  |\r\n| NEZHA_SERVER | 哪吒探针服务端的 IP 或域名 |  -  |  否   ||\r\n| NEZHA_PORT | 哪吒探针服务端的端口 |  -  |  否   ||\r\n| NEZHA_KEY | 哪吒探针客户端专用 Key |  -  |  否   ||\r\n| NEZHA_TLS | 哪吒客户SSL/TLS加密 |  -  |  否   |  `1`：启用<br>`0`：不启用  |\r\n\r\n**更多配置项含义，请参考 [.env.example](https://github.com/luolongfei/freenom/blob/main/.env.example) 文件中的注释。**\r\n\r\n</details>\r\n\r\n> 如何验证你的配置是否正确呢？\r\n>\r\n\r\n修改并保存`.env`文件后，执行`docker restart freenom`重启容器，等待 5 秒钟左右，然后执行`docker logs freenom`查看输出内容， 观察输出内容中有`执行成功`\r\n字样，则表示配置无误。如果你还来不及配置送信邮箱等内容，可先停用邮件功能。\r\n\r\n> 如何升级到最新版或者重新部署呢？\r\n>\r\n\r\n在`.env`所在目录，执行`docker rm -f freenom`删除现有容器，然后再执行 `docker rmi -f luolongfei/freenom`\r\n删除旧的镜像，然后再执行上面的 `docker run -d --name freenom --restart always -v $(pwd):/conf -v $(pwd)/logs:/app/logs luolongfei/freenom`\r\n重新部署即可，这样部署后就是最新的代码了。当然，新版对应的`.env`文件可能有变动，不必担心，程序会自动更新`.env`文件内容，并将已有的配置迁移过去。\r\n\r\n一句话操作，即在`.env`文件所在目录下执行以下命令，即可完成更新升级：\r\n\r\n```shell\r\ndocker rm -f freenom && docker rmi -f luolongfei/freenom && docker run -d --name freenom --restart always -v $(pwd):/conf -v $(pwd)/logs:/app/logs luolongfei/freenom\r\n```\r\n\r\n##### 2.2 后期容器管理以及 Docker 常用命令\r\n\r\n查看容器在线状态及大小\r\n\r\n```shell\r\ndocker ps -as\r\n```\r\n\r\n查看容器的运行输出日志\r\n\r\n```shell\r\ndocker logs freenom\r\n```\r\n\r\n重新启动容器\r\n\r\n```shell\r\ndocker restart freenom\r\n```\r\n\r\n停止容器的运行\r\n\r\n```shell\r\ndocker stop freenom\r\n```\r\n\r\n移除容器\r\n\r\n```shell\r\ndocker rm -f freenom\r\n```\r\n\r\n查看 docker 容器占用 CPU，内存等信息\r\n\r\n```shell\r\ndocker stats --no-stream\r\n```\r\n\r\n查看 Docker 安装版本等信息\r\n\r\n```shell\r\ndocker version\r\n```\r\n\r\n重启 Docker（非容器）\r\n\r\n```shell\r\nsystemctl restart docker\r\n```\r\n\r\n*有关容器部署的内容结束。*\r\n\r\n***\r\n\r\n### 🧊 通过 Heroku 部署\r\n\r\n**Heroku 已于 2022-11-28 停止提供免费服务，所以，忘掉本文吧。官方通告：[https://blog.heroku.com/next-chapter](https://blog.heroku.com/next-chapter)**\r\n\r\n有关 【通过 Heroku 部署】 的具体操作步骤请参考 [此处](https://github.com/luolongfei/freenom/wiki/%E9%80%9A%E8%BF%87-Heroku-%E9%83%A8%E7%BD%B2)\r\n\r\n***\r\n\r\n### 🚈 通过 Railway 部署\r\n\r\n*Railway 已更新服务条款，每月增加了使用时长限制，新的服务条款导致每月最多只能运行 21 天左右， **除非你验证了信用卡，则没有这个限制** 。详细条款内容参考 [此处](https://docs.railway.app/reference/pricing#execution-time-limit) 。*\r\n\r\n有关 【通过 Railway 部署】\r\n的具体操作步骤请参考 [此处](https://github.com/luolongfei/freenom/wiki/%E9%80%9A%E8%BF%87-Railway-%E9%83%A8%E7%BD%B2)\r\n\r\n***\r\n\r\n### 📦 通过 Koyeb 部署\r\n\r\n*推荐没有自己服务器的用户使用此方案部署。此方案完全免费。*\r\n\r\n有关 【通过 Koyeb 部署】 的具体操作步骤请参考 [此处](https://github.com/luolongfei/freenom/wiki/%E9%80%9A%E8%BF%87-Koyeb-%E9%83%A8%E7%BD%B2)\r\n\r\n**在看完上行文档的具体内容，并且你确定你行后**，便可点击下方按钮，尝试一键部署：\r\n\r\n[![Deploy to Koyeb](https://www.koyeb.com/static/images/deploy/button.svg)](https://app.koyeb.com/deploy?type=docker&name=freenom&ports=80;http;/&env[FF_TOKEN]=20190214&env[SHOW_SERVER_INFO]=1&env[MOSAIC_SENSITIVE_INFO]=1&env[FREENOM_USERNAME]=&env[FREENOM_PASSWORD]=&env[MULTIPLE_ACCOUNTS]=&env[MAX_REQUEST_RETRY_COUNT]=200&env[TELEGRAM_CHAT_ID]=&env[TELEGRAM_BOT_TOKEN]=&env[TELEGRAM_BOT_ENABLE]=0&env[NEZHA_SERVER]=[OPTION]%20Nezha%20server&env[NEZHA_PORT]=[OPTION]%20Nezha%20port&env[NEZHA_KEY]=[OPTION]%20Nezha%20key&env[NEZHA_TLS]=[OPTION]%20Enable%20tls&image=docker.io/luolongfei/freenom:koyeb)\r\n\r\n***\r\n\r\n### 🧪 通过 Mogenius 部署\r\n\r\n已下线免费套餐，不再可用。 [https://github.com/luolongfei/freenom/discussions/208](https://github.com/luolongfei/freenom/discussions/208) \r\n\r\n***\r\n\r\n### ☁ 通过各种云函数部署\r\n\r\n所有云函数使用的是同一个压缩包，已做兼容处理，下载地址：\r\n[https://github.com/luolongfei/freenom/releases/download/v0.5.1/freenom_scf.zip](https://github.com/luolongfei/freenom/releases/download/v0.5.1/freenom_scf.zip)\r\n。本文档会在发布新版的时候同步更新此处的压缩包下载地址，所以不必担心，你看到的下载地址指向的包一定是最新版本。\r\n\r\n下载后你将得到一个 zip 文件，将 zip 文件放到你能找到的任意目录，后面我们将以 zip 文件的形式上传到各种云函数。\r\n\r\n有关 【通过腾讯云函数部署】\r\n的具体操作步骤请参考 [此处](https://github.com/luolongfei/freenom/wiki/%E9%80%9A%E8%BF%87%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0%E9%83%A8%E7%BD%B2)\r\n\r\n有关 【通过阿里云函数部署】\r\n的具体操作步骤请参考 [此处](https://github.com/luolongfei/freenom/wiki/%E9%80%9A%E8%BF%87%E9%98%BF%E9%87%8C%E4%BA%91%E5%87%BD%E6%95%B0%E9%83%A8%E7%BD%B2)\r\n\r\n有关 【通过华为云函数部署】\r\n的具体操作步骤请参考 [此处](https://github.com/luolongfei/freenom/wiki/%E9%80%9A%E8%BF%87%E5%8D%8E%E4%B8%BA%E4%BA%91%E5%87%BD%E6%95%B0%E9%83%A8%E7%BD%B2)\r\n\r\n***\r\n\r\n### 🚧 直接拉取源码部署\r\n\r\n有关 【直接拉取源码部署】\r\n的具体操作步骤请参考 [此处](https://github.com/luolongfei/freenom/wiki/%E7%9B%B4%E6%8E%A5%E6%8B%89%E5%8F%96%E6%BA%90%E7%A0%81%E9%83%A8%E7%BD%B2)\r\n\r\n***\r\n\r\n遇到任何问题或 Bug 欢迎提 [issue](https://github.com/luolongfei/freenom/issues) （请按模板格式提`issue`，以便我快速复现你的问题，否则问题会被忽略）， 如果`Freenom`\r\n改变算法导致此项目失效，请提 [issue](https://github.com/luolongfei/freenom/issues) 告知，我会及时修复，本项目长期维护。 欢迎`star`~\r\n\r\n### 📋 赞助名单 Donation List\r\n\r\n非常感谢「 [这些用户](https://github.com/luolongfei/freenom/wiki/Donation-List) 」对本项目的赞助支持！\r\n\r\n### ❤ 赞助 Donation\r\n\r\n如果你觉得本项目对你有帮助，请考虑赞助本项目，以激励我投入更多的时间进行维护与开发。\r\nIf you find this project helpful, please consider supporting the project going forward. Your support is greatly\r\nappreciated.\r\n\r\n[![ko-fi](https://ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/X7X8CA7S1)\r\n\r\nPayPal: [https://www.paypal.me/mybsdc](https://www.paypal.me/mybsdc)\r\n\r\n> Every time you spend money, you're casting a vote for the kind of world you want. -- Anna Lappe\r\n\r\n![pay](https://images.llfapp.com/pay.png \"Donation\")\r\n\r\n![每一次你花的钱都是在为你想要的世界投票。](https://s2.ax1x.com/2020/01/31/13P8cF.jpg)\r\n\r\n题外话：赞助的时候可以留言，留言内容将被展示在 [赞助列表画面](https://github.com/luolongfei/freenom/wiki/Donation-List) 。如果赞助图片未能正常显示，请访问： [https://images.llfapp.com/pay.png](https://images.llfapp.com/pay.png)\r\n\r\n**你的`star`或者`赞助`是我长期维护此项目的动力所在，由衷感谢每一位支持者，“每一次你花的钱都是在为你想要的世界投票”。 另外，将本项目推荐给更多的人，也是一种支持的方式，用的人越多更新的动力越足。**\r\n\r\n### 🪓 信仰\r\n\r\n相信未来，保持“理智”。\r\n\r\n> 认真是我们参与这个社会的方式，认真是我们改变这个社会的方式。 ——李志\r\n\r\n![南京市民李先生](https://s1.ax1x.com/2022/03/10/bhP7FO.jpg \"南京市民李先生\")\r\n\r\n### 🌚 作者\r\n\r\n- 主程序以及框架：[@luolongfei](https://github.com/luolongfei)\r\n- 英文版文档：[@肖阿姨](#)\r\n\r\n### 💖 所有贡献者\r\n\r\n<a href=\"https://github.com/luolongfei/freenom/graphs/contributors\">\r\n  <img alt=\"All Contributors\" src=\"https://contrib.rocks/image?repo=luolongfei/freenom\" />\r\n</a>\r\n\r\n[@anjumrafidofficial](https://github.com/anjumrafidofficial)\r\n\r\n### 📝 TODO List\r\n\r\n- 支持交互式安装，免去手动修改配置的繁琐操作\r\n- 支持自动升级\r\n- 多个账户的续期结果通知合并为同一条消息\r\n\r\n### 🍅 本项目的其它语言实现\r\n\r\n- [https://github.com/PencilNavigator/Freenom-Workers](https://github.com/PencilNavigator/Freenom-Workers) （JavaScript）\r\n- [https://github.com/Oreomeow/freenom-py](https://github.com/Oreomeow/freenom-py) （Python） \r\n\r\n*(更多其它语言欢迎提交 PR 更新此列表)*\r\n\r\n### 🎉 鸣谢\r\n\r\n- 项目依赖 [PHPMailer](https://github.com/PHPMailer/PHPMailer/) 、 [guzzle](https://github.com/guzzle/guzzle) 等第三方库\r\n- 本项目 Docker 相关文档有参考 [秋水逸冰](https://teddysun.com/569.html) 的文章\r\n- [@anjumrafidofficial](https://github.com/anjumrafidofficial) 完善英文版邮件内容\r\n\r\n### 🥝 开源协议\r\n\r\n[MIT](https://opensource.org/licenses/mit-license.php)\r\n"
        },
        {
          "name": "README_EN.md",
          "type": "blob",
          "size": 11.3662109375,
          "content": "<div align=\"center\">\r\n\r\n![freenom logo](https://s1.ax1x.com/2022/03/10/bhzMG9.png)\r\n\r\n<h3>Freenom：Auto-renewal of freenom domain names.</h3>\r\n\r\n[![PHP version](https://img.shields.io/badge/php-%3E=7.3-brightgreen.svg?style=for-the-badge)](https://secure.php.net/)\r\n[![Docker pulls](https://img.shields.io/docker/pulls/luolongfei/freenom.svg?style=for-the-badge)](https://hub.docker.com/r/luolongfei/freenom)\r\n[![GitHub stars](https://img.shields.io/github/stars/luolongfei/freenom?color=brightgreen&style=for-the-badge)](https://github.com/luolongfei/freenom/stargazers)\r\n[![MIT license](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=for-the-badge)](https://github.com/luolongfei/freenom/blob/main/LICENSE)\r\n\r\nDocumentation: English version | [中文版](https://github.com/luolongfei/freenom)\r\n</div>\r\n\r\n[📃 Why write this script](#-Why-write-this-script)\r\n\r\n[🌿 Special Thanks](#-special-thanks)\r\n\r\n[🍭 Demo](#-Demo)\r\n\r\n[🎁 Preparation](#-Preparation)\r\n\r\n[📪 Setting up Gmail](#-Setting-up-Gmail)\r\n\r\n[🤶 Telegram bot](#-Telegram-bot)\r\n\r\n[🐳 Deployment via docker](#-deployment-via-docker) (This is the recommended deployment method)\r\n\r\n[🧱 Direct pull code deployment](#-direct-pull-code-deployment)\r\n\r\n[❤ Donation](#-Donation)\r\n\r\n[🌚 Author](#-Author)\r\n\r\n[💖 All Contributors](#-All-Contributors)\r\n\r\n[🎉 Acknowledgements](#-Acknowledgements)\r\n\r\n[🥝 Open source agreement](#-Open-source-agreement)\r\n\r\n### 📃 Why write this script\r\n\r\nAs we all know, Freenom is the only merchant on the planet that provides free top-level domain names, but it needs to be\r\nrenewed every year for up to one year at a time. Since I applied for a bunch of domain names, and not at the same time,\r\nSo I felt frustrated every time I renewed, so I wrote this automatic renewal script.\r\n\r\n### 🌿 Special Thanks\r\n\r\nThanks for non-commercial open source development authorization by JetBrains.\r\n\r\n<a href=\"https://www.jetbrains.com/?from=luolongfei/freenom\" target=\"_blank\" title=\"JetBrains Logo (Main) logo.\">\r\n<img src=\"https://resources.jetbrains.com/storage/products/company/brand/logos/jb_beam.svg\" width='200px' height='200px' alt=\"JetBrains Logo (Main) logo.\">\r\n</a>\r\n\r\n### 🍭 Demo\r\n\r\nWhether the renewal is successful or unsuccessful or the script executes with an error, you will receive a notification from the script. In case of renewal success or failure related notifications, the notification will include the number of days to expiration for the unrenewed domain name, etc. *The content of the notification email is shown here.*\r\n\r\n<a href=\"https://s4.ax1x.com/2022/02/26/bZrtz9.png\"><img src=\"https://s4.ax1x.com/2022/02/26/bZrtz9.png\" alt=\"Example of notification email\" border=\"0\" width=\"95%\" height=\"100%\" /></a>\r\n\r\n### 🎁 Preparation\r\n\r\n- Email of robot: Used to send notification emails.\r\n- Your email: Used to receive notification emails sent by robots.\r\n- VPS: Any server can be used. The system recommends `Debian`, and the PHP version must be` php7.3` or above.\r\n- No more\r\n\r\n### 📪 Setting up Gmail\r\n\r\n*It is recommended to open the privacy mode of your browser and then log in to gmail to set up the settings, to prevent you from not being able to jump to the correct settings URL when you have multiple gmail accounts.*\r\n\r\n1.In `Settings > Forwarding and POP/IMAP`, tick\r\n\r\n- Enable POP for all messages\r\n- Enable IMAP\r\n\r\n![gmail Configuration 01](https://s2.ax1x.com/2020/02/01/1GDsMR.png \"gmail Configuration 01\")\r\n\r\nThen save your changes.\r\n\r\n2.Enable two-step verification\r\n\r\nRefer to the official document: [Turn on 2-Step Verification](https://support.google.com/accounts/answer/185839?hl=en)\r\n\r\n3.Configure login with application-specific password\r\n\r\nRefer to the official document: [Sign in with App Passwords](https://support.google.com/mail/answer/185833?hl=en)\r\n\r\n**Because Gmail no longer supports \"insecure login\", you can only use the account plus application-specific password to\r\nlogin now.**\r\n\r\nAfter the above operation is finished, set `MAIL_USERNAME` and `MAIL_PASSWORD` to your mailbox and application-specific\r\npassword in `.env` file, set `TO` to your incoming mailbox, and then set the value of `MAIL_ENABLE` to `1` to enable the\r\nmailbox delivery function.\r\n\r\nIf you don't want to use email related features, change the value of `MAIL_ENABLE` in the `.env` file in the root\r\ndirectory to `0` to turn off the email push method.\r\n\r\n### 🤶 Telegram bot\r\n\r\nIf you don't want to use email push, you can also use Telegram bot. In the `.env` file, Change the value\r\nof `TELEGRAM_BOT_ENABLE` to `1` to enable the Telegram bot. Similarly, change the value of `MAIL_ENABLE` to `0` to\r\ndisable the mail push method. Telegram bot has two configuration items, one is `chat_id` (corresponding\r\nto `TELEGRAM_CHAT_ID` in `.env` file), You can get your own id by sending `/start` to `@userinfobot` using your Telegram\r\naccount, The other is `token` (corresponding to `TELEGRAM_BOT_TOKEN` in the `.env` file), your Telegram bot token, how\r\nto create a Telegram bot and how to get the token please refer to:\r\n[Official Document](https://core.telegram.org/bots#6-botfather)\r\n\r\n<hr>\r\n\r\n**The next step is to start describing how to deploy this script, there are two ways to deploy it, one is to pull the\r\ncode and deploy it directly, the other is to deploy it via docker. We recommend deploying via docker, it's easy and\r\nhassle-free.**\r\n\r\n### 🐳 Deployment via docker\r\n\r\n**Deployment via docker is our recommended deployment method. For detailed deployment steps, please\r\nvisit: [https://hub.docker.com/r/luolongfei/freenom](https://hub.docker.com/r/luolongfei/freenom)**\r\n\r\nThere is a detailed description in the docker repository documentation, and the whole deployment process is quite\r\nsimple.\r\n\r\n<hr>\r\n\r\n### 🧱 Direct pull code deployment\r\n\r\n*We don't recommend this deployment method as it requires certain environment requirements to be met for direct code\r\npull deployment.*\r\n\r\n#### 🚧 Configuration script\r\n\r\nAll operations are performed under Centos7 system, other Linux distributions are similar\r\n\r\n##### Get the source code\r\n\r\n```bash\r\n$ mkdir -p /data/wwwroot/freenom\r\n$ cd /data/wwwroot/freenom\r\n\r\n# clone the repository source\r\n$ git clone https://github.com/luolongfei/freenom.git ./\r\n```\r\n\r\n##### Configuration process\r\n\r\n```bash\r\n# Copy configuration file template\r\n$ cp .env.example .env\r\n\r\n# Edit configuration file\r\n$ vim .env\r\n\r\n# .env Each item in the file has a detailed description, which will not be repeated here. In short, you need to change all the items in it to your own. Note the format of the multi-account configuration:\r\n# e.g. MULTIPLE_ACCOUNTS='<account1>@<password1>|<account2>@<password2>|<account3>@<password3>'\r\n# Of course, if you only have a single account, you only need to configure FREEENOM_USERNAME and FREEENOM_PASSWORD. The configurations of single account and multiple accounts will be read together and duplicated.\r\n\r\n# After editing, press \"Esc\" to return to the command mode, enter \":wq\" and press Enter to save and exit. If you don't use vim editor, you can ask Uncle Google. :)\r\n```\r\n\r\n#### 🎈 Add scheduled task\r\n\r\n##### Install crontabs and cronie\r\n\r\n```bash\r\n$ yum -y install cronie crontabs\r\n\r\n# Verify if crond is installed and started\r\n$ yum list cronie && systemctl status crond\r\n\r\n# Verify that crontab is installed\r\n$ yum list crontabs $$ which crontab && crontab -l\r\n```\r\n\r\n##### Open the task form and edit\r\n\r\n```bash\r\n$ crontab -e\r\n\r\n# Task content is as follows\r\n# The meaning of this task is to execute the run file under /data/wwwroot/freenom/ at 9 AM every day\r\n# Note: In some cases, crontab may not find your php path. The following command will output an error message in the freenom_crontab.log file. You should specify the php path: replace the following php with /usr/local/php/bin/php (based on the actual situation)\r\n00 09 * * * cd /data/wwwroot/freenom/ && php run > freenom_crontab.log 2>&1\r\n```\r\n\r\n##### Restart the crond daemon (This step is required each time you edit the task form for the task to take effect)\r\n\r\n```bash\r\n$ systemctl restart crond\r\n```\r\n\r\nTo check if the `Task` is normal, you can set the execution time of the above task to a few minutes, and then wait until\r\nthe task execution is completed, check the contents of the `freenom_crontab.log` file in the `/data/wwwroot/freenom/`\r\ndirectory for errors. Common error messages are as follows:\r\n\r\n- /bin/sh: php: command not found\r\n- /bin/sh: /usr/local/php: Is a directory\r\n\r\n*(Click to expand or collapse)*\r\n<details>\r\n    <summary>solution</summary>\r\n<br>\r\n\r\n>\r\n> execute\r\n> ```bash\r\n> $ whereis php\r\n> # Determine the location of php, the general output is \"php: /usr/local/php /usr/local/php/bin/php\", we choose: /usr/local/php/bin/php\r\n> ```\r\n> Now we know that php's path is `/usr/local/php/bin/php` (may be different according to the actual situation of your\r\n> own system),\r\n> and then modify the commands in the form task, change\r\n>\r\n> `00 09 * * * cd /data/wwwroot/freenom/ && php run > freenom_crontab.log 2>&1`\r\n>\r\n> to\r\n>\r\n> `00 09 * * * cd /data/wwwroot/freenom/ && /usr/local/php/bin/php run > freenom_crontab.log 2>&1`\r\n>\r\n> More information: [click here](https://stackoverflow.com/questions/7397469/why-is-crontab-not-executing-my-php-script)\r\n>\r\n\r\n</details>\r\n\r\nOf course, if your `crontab` can correctly find the `php path` without error, you don't need to do anything.\r\n\r\n*So far, all the configurations have been completed, let's verify if the whole process works* :)\r\n\r\n#### ☕ Verification\r\n\r\nYou can first change the value of `NOTICE_FREQ` in `.env` to 1 (Push notification every time the script is executed),\r\nand then execute\r\n\r\n```bash\r\n$ cd /data/wwwroot/freenom/ && php run\r\n```\r\n\r\nIf nothing else, you will receive an email about the domain name.\r\n\r\n**End of the section on script deployment.**\r\n\r\n<hr>\r\n\r\nIf you encounter any problems or bugs, please mention [issues](https://github.com/luolongfei/freenom/issues). If freenom\r\nchanges the algorithm and causes this project to fail, Please\r\nmention [issues](https://github.com/luolongfei/freenom/issues) to inform me that I will fix it in time and maintain this\r\nproject for a long time. Welcome star ~\r\n\r\n### ❤ Donation\r\n\r\nIf you find this project helpful, please consider supporting the project going forward. Your support is greatly\r\nappreciated.\r\n\r\n[![ko-fi](https://ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/X7X8CA7S1)\r\n\r\nPayPal: [https://www.paypal.me/mybsdc](https://www.paypal.me/mybsdc)\r\n\r\n> Every time you spend money, you're casting a vote for the kind of world you want .-- Anna Lappe\r\n\r\n![Every time you spend your money, you are voting for the world you want. ](https://s2.ax1x.com/2020/01/31/13P8cF.jpg)\r\n\r\n### 🌚 Author\r\n\r\n- Main program and framework: [@luolongfei](https://github.com/luolongfei)\r\n- English document: [@肖阿姨](#)\r\n\r\n### 💖 All Contributors\r\n\r\n<a href=\"https://github.com/luolongfei/freenom/graphs/contributors\">\r\n  <img alt=\"All Contributors\" src=\"https://contrib.rocks/image?repo=luolongfei/freenom\" />\r\n</a>\r\n\r\n[@anjumrafidofficial](https://github.com/anjumrafidofficial)\r\n\r\n### 🎉 Acknowledgements\r\n\r\n- The project relies on third-party libraries such as [PHPMailer](https://github.com/PHPMailer/PHPMailer/)\r\n  , [guzzle](https://github.com/guzzle/guzzle), etc.\r\n- The project Docker related documentation has reference to the article by [秋水逸冰](https://teddysun.com/569.html)\r\n- [@anjumrafidofficial](https://github.com/anjumrafidofficial) Improve the English mail content\r\n\r\n### 🥝 Open source agreement\r\n\r\n[MIT](https://opensource.org/licenses/mit-license.php)\r\n"
        },
        {
          "name": "app.json",
          "type": "blob",
          "size": 3.365234375,
          "content": "{\n    \"name\": \"freenom auto-renewal\",\n    \"description\": \"Deploy freenom scripts to heroku.\",\n    \"keywords\": [\n        \"freenom\",\n        \"auto-renewal\",\n        \"heroku\",\n        \"luolongfei\"\n    ],\n    \"success_url\": \"/\",\n    \"env\": {\n        \"A_TIP\": {\n            \"description\": \"这是一个提醒：此处我只列举了常见的几个环境变量的配置，更多的环境变量，请参考 .env.example 文件的内容，.env.example 文件的地址见输入框。你可以待容器部署完成后，在 settings -> Config Vars 点击 Reveal Config Vars 按钮配置更多的环境变量。由于自作聪明的 Heroku 将下面的变量顺序按字母正序，看起来可能有点混乱。This is a reminder: I have only listed the configuration of a few common environment variables here, for more environment variables, please refer to the contents of the .env.example file, see the input box for the address of the .env.example file. You can configure more environment variables after the container has been deployed by clicking the Reveal Config Vars button in settings -> Config Vars. Since the clever Heroku puts the variables below in alphabetical order, it may look a bit confusing.\",\n            \"value\": \"https://github.com/luolongfei/freenom/blob/main/.env.example\",\n            \"required\": false\n        },\n        \"FF_TOKEN\": {\n            \"description\": \"令牌，用于验证执行者身份，防止别人恶意触发执行续期任务。假设 FF_TOKEN 的值为 123，你的应用地址为 https://xxx.herokuapp.com，则后续在 Uptimerobot 创建任务的时候 URL 就填 https://xxx.herokuapp.com/?ff-token=123，这里的令牌默认为 20190214，请自定义它。\",\n            \"value\": \"20190214\"\n        },\n        \"FREENOM_USERNAME\": {\n            \"description\": \"Freenom 账户 Freenom Account\",\n            \"value\": \"\"\n        },\n        \"FREENOM_PASSWORD\": {\n            \"description\": \"Freenom 密码 Freenom password\",\n            \"value\": \"\"\n        },\n        \"MULTIPLE_ACCOUNTS\": {\n            \"description\": \"多账户支持，多个账户和密码的格式必须是“<账户1>@<密码1>|<账户2>@<密码2>|<账户3>@<密码3>”，不要有空格，不要省略尖括号 Support for multiple accounts\",\n            \"value\": \"\",\n            \"required\": false\n        },\n        \"TELEGRAM_CHAT_ID\": {\n            \"description\": \"你的 chat_id，通过发送“/start”给 @userinfobot 可以获取自己的 id Your chat_id, you can get your own id by sending \\\"/start\\\" to @userinfobot\",\n            \"value\": \"\",\n            \"required\": false\n        },\n        \"TELEGRAM_BOT_TOKEN\": {\n            \"description\": \"你的 Telegram bot 的 token Token for your Telegram bot\",\n            \"value\": \"\",\n            \"required\": false\n        },\n        \"TELEGRAM_BOT_ENABLE\": {\n            \"description\": \"是否启用 Telegram Bot 功能 1：启用 0：不启用 Whether to enable Telegram Bot features 1: enabled 0: not enabled\",\n            \"value\": \"1\",\n            \"required\": false\n        },\n        \"SHOW_SERVER_INFO\": {\n            \"description\": \"送信时是否显示服务器信息 1：显示 0：不显示 Whether to display server information when sending messages 1: Display 0: Do not display\",\n            \"value\": \"1\",\n            \"required\": false\n        }\n    },\n    \"website\": \"llfapp.com\",\n    \"repository\": \"https://github.com/luolongfei/freenom\",\n    \"stack\": \"container\"\n}\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "common.yml",
          "type": "blob",
          "size": 0.4453125,
          "content": "# common config\n# no volumes_from, no depends_on\n# https://docs.docker.com/compose/extends/#extending-services\nservices:\n    common_config:\n        logging:\n            options:\n                max-size: \"20M\"\n                max-file: \"3\"\n        restart: unless-stopped\n        networks:\n            - llf-networks\n        env_file:\n            - ./.env\n        dns:\n            - 1.1.1.1\n            - 1.0.0.1\n            - 9.9.9.9\n            - 8.8.8.8"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.0302734375,
          "content": "{\n    \"name\": \"luolongfei/freenom\",\n    \"description\": \"freenom域名自动续期。\",\n    \"type\": \"project\",\n    \"require\": {\n        \"php\": \">=7.3\",\n        \"ext-curl\": \"*\",\n        \"ext-openssl\": \"*\",\n        \"guzzlehttp/guzzle\": \"^7.4.1\",\n        \"monolog/monolog\": \"^1.24\",\n        \"bramus/monolog-colored-line-formatter\": \"~2.0\",\n        \"phpmailer/phpmailer\": \"^6.0\",\n        \"vlucas/phpdotenv\": \"^3.3\",\n        \"predis/predis\": \"^1.1\",\n        \"ext-json\": \"*\",\n        \"ext-bcmath\": \"*\",\n        \"ext-pdo\": \"*\",\n        \"kevinlebrun/colors.php\": \"^1.0\",\n        \"ext-mbstring\": \"*\"\n    },\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"luolongfei\",\n            \"email\": \"luolongf@gmail.com\",\n            \"homepage\": \"https://github.com/luolongfei/freenom\"\n        }\n    ],\n    \"autoload\": {\n        \"psr-4\": {\n            \"Luolongfei\\\\Libs\\\\\": \"libs\",\n            \"Luolongfei\\\\App\\\\\": \"app\"\n        },\n        \"files\": [\n            \"app/helpers.php\"\n        ]\n    },\n    \"config\": {\n        \"platform-check\": false\n    }\n}\n"
        },
        {
          "name": "composer.lock",
          "type": "blob",
          "size": 49.525390625,
          "content": "{\n    \"_readme\": [\n        \"This file locks the dependencies of your project to a known state\",\n        \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies\",\n        \"This file is @generated automatically\"\n    ],\n    \"content-hash\": \"e867f8c2bdc25e7f4f8aebad5508a7e1\",\n    \"packages\": [\n        {\n            \"name\": \"bramus/ansi-php\",\n            \"version\": \"3.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/bramus/ansi-php.git\",\n                \"reference\": \"f581b2fd322177e5fabd67af240811838c1c8fbc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/bramus/ansi-php/zipball/f581b2fd322177e5fabd67af240811838c1c8fbc\",\n                \"reference\": \"f581b2fd322177e5fabd67af240811838c1c8fbc\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"php\": \">=5.4.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"~4.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Bramus\\\\Ansi\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Bramus Van Damme\",\n                    \"email\": \"bramus@bram.us\",\n                    \"homepage\": \"https://www.bram.us/\"\n                }\n            ],\n            \"description\": \"ANSI Control Functions and ANSI Control Sequences (Colors, Erasing, etc.) for PHP CLI Apps\",\n            \"support\": {\n                \"issues\": \"https://github.com/bramus/ansi-php/issues\",\n                \"source\": \"https://github.com/bramus/ansi-php/tree/3.1\"\n            },\n            \"time\": \"2021-10-28T10:45:05+00:00\"\n        },\n        {\n            \"name\": \"bramus/monolog-colored-line-formatter\",\n            \"version\": \"2.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/bramus/monolog-colored-line-formatter.git\",\n                \"reference\": \"6bff15eee00afe2690642535b0f1541f10852c2b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/bramus/monolog-colored-line-formatter/zipball/6bff15eee00afe2690642535b0f1541f10852c2b\",\n                \"reference\": \"6bff15eee00afe2690642535b0f1541f10852c2b\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"bramus/ansi-php\": \"~3.0\",\n                \"php\": \">=5.4.0\"\n            },\n            \"require-dev\": {\n                \"monolog/monolog\": \"~1.0\",\n                \"phpunit/phpunit\": \"~4.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Bramus\\\\Monolog\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Bramus Van Damme\",\n                    \"email\": \"bramus@bram.us\",\n                    \"homepage\": \"https://www.bram.us/\"\n                }\n            ],\n            \"description\": \"Colored Line Formatter for Monolog\",\n            \"support\": {\n                \"issues\": \"https://github.com/bramus/monolog-colored-line-formatter/issues\",\n                \"source\": \"https://github.com/bramus/monolog-colored-line-formatter/tree/master\"\n            },\n            \"time\": \"2015-01-07T22:12:35+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/guzzle\",\n            \"version\": \"7.4.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/guzzle.git\",\n                \"reference\": \"ee0a041b1760e6a53d2a39c8c34115adc2af2c79\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/guzzle/zipball/ee0a041b1760e6a53d2a39c8c34115adc2af2c79\",\n                \"reference\": \"ee0a041b1760e6a53d2a39c8c34115adc2af2c79\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"guzzlehttp/promises\": \"^1.5\",\n                \"guzzlehttp/psr7\": \"^1.8.3 || ^2.1\",\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"psr/http-client\": \"^1.0\",\n                \"symfony/deprecation-contracts\": \"^2.2 || ^3.0\"\n            },\n            \"provide\": {\n                \"psr/http-client-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.4.1\",\n                \"ext-curl\": \"*\",\n                \"php-http/client-integration-tests\": \"^3.0\",\n                \"phpunit/phpunit\": \"^8.5.5 || ^9.3.5\",\n                \"psr/log\": \"^1.1 || ^2.0 || ^3.0\"\n            },\n            \"suggest\": {\n                \"ext-curl\": \"Required for CURL handler support\",\n                \"ext-intl\": \"Required for Internationalized Domain Name (IDN) support\",\n                \"psr/log\": \"Required for using the Log middleware\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"7.4-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\\": \"src/\"\n                },\n                \"files\": [\n                    \"src/functions_include.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"Jeremy Lindblom\",\n                    \"email\": \"jeremeamia@gmail.com\",\n                    \"homepage\": \"https://github.com/jeremeamia\"\n                },\n                {\n                    \"name\": \"George Mponos\",\n                    \"email\": \"gmponos@gmail.com\",\n                    \"homepage\": \"https://github.com/gmponos\"\n                },\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\",\n                    \"homepage\": \"https://github.com/Nyholm\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://github.com/sagikazarmark\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"email\": \"webmaster@tubo-world.de\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                }\n            ],\n            \"description\": \"Guzzle is a PHP HTTP client library\",\n            \"keywords\": [\n                \"client\",\n                \"curl\",\n                \"framework\",\n                \"http\",\n                \"http client\",\n                \"psr-18\",\n                \"psr-7\",\n                \"rest\",\n                \"web service\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guzzle/guzzle/issues\",\n                \"source\": \"https://github.com/guzzle/guzzle/tree/7.4.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/guzzlehttp/guzzle\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-12-06T18:43:05+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/promises\",\n            \"version\": \"1.5.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/promises.git\",\n                \"reference\": \"fe752aedc9fd8fcca3fe7ad05d419d32998a06da\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/promises/zipball/fe752aedc9fd8fcca3fe7ad05d419d32998a06da\",\n                \"reference\": \"fe752aedc9fd8fcca3fe7ad05d419d32998a06da\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"php\": \">=5.5\"\n            },\n            \"require-dev\": {\n                \"symfony/phpunit-bridge\": \"^4.4 || ^5.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.5-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\Promise\\\\\": \"src/\"\n                },\n                \"files\": [\n                    \"src/functions_include.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\",\n                    \"homepage\": \"https://github.com/Nyholm\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"email\": \"webmaster@tubo-world.de\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                }\n            ],\n            \"description\": \"Guzzle promises library\",\n            \"keywords\": [\n                \"promise\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guzzle/promises/issues\",\n                \"source\": \"https://github.com/guzzle/promises/tree/1.5.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/guzzlehttp/promises\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-10-22T20:56:57+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/psr7\",\n            \"version\": \"2.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/psr7.git\",\n                \"reference\": \"089edd38f5b8abba6cb01567c2a8aaa47cec4c72\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/psr7/zipball/089edd38f5b8abba6cb01567c2a8aaa47cec4c72\",\n                \"reference\": \"089edd38f5b8abba6cb01567c2a8aaa47cec4c72\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"psr/http-factory\": \"^1.0\",\n                \"psr/http-message\": \"^1.0\",\n                \"ralouphie/getallheaders\": \"^3.0\"\n            },\n            \"provide\": {\n                \"psr/http-factory-implementation\": \"1.0\",\n                \"psr/http-message-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.4.1\",\n                \"http-interop/http-factory-tests\": \"^0.9\",\n                \"phpunit/phpunit\": \"^8.5.8 || ^9.3.10\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-httphandlerrunner\": \"Emit PSR-7 responses\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\Psr7\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"George Mponos\",\n                    \"email\": \"gmponos@gmail.com\",\n                    \"homepage\": \"https://github.com/gmponos\"\n                },\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\",\n                    \"homepage\": \"https://github.com/Nyholm\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://github.com/sagikazarmark\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"email\": \"webmaster@tubo-world.de\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://sagikazarmark.hu\"\n                }\n            ],\n            \"description\": \"PSR-7 message implementation that also provides common utility methods\",\n            \"keywords\": [\n                \"http\",\n                \"message\",\n                \"psr-7\",\n                \"request\",\n                \"response\",\n                \"stream\",\n                \"uri\",\n                \"url\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guzzle/psr7/issues\",\n                \"source\": \"https://github.com/guzzle/psr7/tree/2.1.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/guzzlehttp/psr7\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-10-06T17:43:30+00:00\"\n        },\n        {\n            \"name\": \"kevinlebrun/colors.php\",\n            \"version\": \"1.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/kevinlebrun/colors.php.git\",\n                \"reference\": \"cdda5eee41314b87cd5a8bb91b1ffc7c0210e673\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/kevinlebrun/colors.php/zipball/cdda5eee41314b87cd5a8bb91b1ffc7c0210e673\",\n                \"reference\": \"cdda5eee41314b87cd5a8bb91b1ffc7c0210e673\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"3.7.*\",\n                \"satooshi/php-coveralls\": \"1.0.*\",\n                \"squizlabs/php_codesniffer\": \"1.*\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-0\": {\n                    \"Colors\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Kevin Le Brun\",\n                    \"email\": \"lebrun.k@gmail.com\",\n                    \"homepage\": \"http://kevinlebrun.fr\",\n                    \"role\": \"developer\"\n                }\n            ],\n            \"description\": \"Colors for PHP CLI scripts\",\n            \"homepage\": \"https://github.com/kevinlebrun/colors.php\",\n            \"keywords\": [\n                \"cli\",\n                \"color\",\n                \"colors\",\n                \"console\",\n                \"shell\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/kevinlebrun/colors.php/issues\",\n                \"source\": \"https://github.com/kevinlebrun/colors.php/tree/master\"\n            },\n            \"time\": \"2018-05-30T08:34:23+00:00\"\n        },\n        {\n            \"name\": \"monolog/monolog\",\n            \"version\": \"1.26.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Seldaek/monolog.git\",\n                \"reference\": \"c6b00f05152ae2c9b04a448f99c7590beb6042f5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Seldaek/monolog/zipball/c6b00f05152ae2c9b04a448f99c7590beb6042f5\",\n                \"reference\": \"c6b00f05152ae2c9b04a448f99c7590beb6042f5\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\",\n                \"psr/log\": \"~1.0\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0.0\"\n            },\n            \"require-dev\": {\n                \"aws/aws-sdk-php\": \"^2.4.9 || ^3.0\",\n                \"doctrine/couchdb\": \"~1.0@dev\",\n                \"graylog2/gelf-php\": \"~1.0\",\n                \"php-amqplib/php-amqplib\": \"~2.4\",\n                \"php-console/php-console\": \"^3.1.3\",\n                \"phpstan/phpstan\": \"^0.12.59\",\n                \"phpunit/phpunit\": \"~4.5\",\n                \"ruflin/elastica\": \">=0.90 <3.0\",\n                \"sentry/sentry\": \"^0.13\",\n                \"swiftmailer/swiftmailer\": \"^5.3|^6.0\"\n            },\n            \"suggest\": {\n                \"aws/aws-sdk-php\": \"Allow sending log messages to AWS services like DynamoDB\",\n                \"doctrine/couchdb\": \"Allow sending log messages to a CouchDB server\",\n                \"ext-amqp\": \"Allow sending log messages to an AMQP server (1.0+ required)\",\n                \"ext-mongo\": \"Allow sending log messages to a MongoDB server\",\n                \"graylog2/gelf-php\": \"Allow sending log messages to a GrayLog2 server\",\n                \"mongodb/mongodb\": \"Allow sending log messages to a MongoDB server via PHP Driver\",\n                \"php-amqplib/php-amqplib\": \"Allow sending log messages to an AMQP server using php-amqplib\",\n                \"php-console/php-console\": \"Allow sending log messages to Google Chrome\",\n                \"rollbar/rollbar\": \"Allow sending log messages to Rollbar\",\n                \"ruflin/elastica\": \"Allow sending log messages to an Elastic Search server\",\n                \"sentry/sentry\": \"Allow sending log messages to a Sentry server\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Monolog\\\\\": \"src/Monolog\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jordi Boggiano\",\n                    \"email\": \"j.boggiano@seld.be\",\n                    \"homepage\": \"http://seld.be\"\n                }\n            ],\n            \"description\": \"Sends your logs to files, sockets, inboxes, databases and various web services\",\n            \"homepage\": \"http://github.com/Seldaek/monolog\",\n            \"keywords\": [\n                \"log\",\n                \"logging\",\n                \"psr-3\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/Seldaek/monolog/issues\",\n                \"source\": \"https://github.com/Seldaek/monolog/tree/1.26.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Seldaek\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/monolog/monolog\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-05-28T08:32:12+00:00\"\n        },\n        {\n            \"name\": \"phpmailer/phpmailer\",\n            \"version\": \"v6.5.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHPMailer/PHPMailer.git\",\n                \"reference\": \"baeb7cde6b60b1286912690ab0693c7789a31e71\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHPMailer/PHPMailer/zipball/baeb7cde6b60b1286912690ab0693c7789a31e71\",\n                \"reference\": \"baeb7cde6b60b1286912690ab0693c7789a31e71\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"ext-filter\": \"*\",\n                \"ext-hash\": \"*\",\n                \"php\": \">=5.5.0\"\n            },\n            \"require-dev\": {\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"^0.7.0\",\n                \"doctrine/annotations\": \"^1.2\",\n                \"php-parallel-lint/php-console-highlighter\": \"^0.5.0\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.3\",\n                \"phpcompatibility/php-compatibility\": \"^9.3.5\",\n                \"roave/security-advisories\": \"dev-latest\",\n                \"squizlabs/php_codesniffer\": \"^3.6.0\",\n                \"yoast/phpunit-polyfills\": \"^1.0.0\"\n            },\n            \"suggest\": {\n                \"ext-mbstring\": \"Needed to send email in multibyte encoding charset or decode encoded addresses\",\n                \"hayageek/oauth2-yahoo\": \"Needed for Yahoo XOAUTH2 authentication\",\n                \"league/oauth2-google\": \"Needed for Google XOAUTH2 authentication\",\n                \"psr/log\": \"For optional PSR-3 debug logging\",\n                \"stevenmaguire/oauth2-microsoft\": \"Needed for Microsoft XOAUTH2 authentication\",\n                \"symfony/polyfill-mbstring\": \"To support UTF-8 if the Mbstring PHP extension is not enabled (^1.2)\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PHPMailer\\\\PHPMailer\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-2.1-only\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marcus Bointon\",\n                    \"email\": \"phpmailer@synchromedia.co.uk\"\n                },\n                {\n                    \"name\": \"Jim Jagielski\",\n                    \"email\": \"jimjag@gmail.com\"\n                },\n                {\n                    \"name\": \"Andy Prevost\",\n                    \"email\": \"codeworxtech@users.sourceforge.net\"\n                },\n                {\n                    \"name\": \"Brent R. Matzelle\"\n                }\n            ],\n            \"description\": \"PHPMailer is a full-featured email creation and transfer class for PHP\",\n            \"support\": {\n                \"issues\": \"https://github.com/PHPMailer/PHPMailer/issues\",\n                \"source\": \"https://github.com/PHPMailer/PHPMailer/tree/v6.5.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Synchro\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2021-11-25T16:34:11+00:00\"\n        },\n        {\n            \"name\": \"phpoption/phpoption\",\n            \"version\": \"1.8.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/schmittjoh/php-option.git\",\n                \"reference\": \"eab7a0df01fe2344d172bff4cd6dbd3f8b84ad15\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/schmittjoh/php-option/zipball/eab7a0df01fe2344d172bff4cd6dbd3f8b84ad15\",\n                \"reference\": \"eab7a0df01fe2344d172bff4cd6dbd3f8b84ad15\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"php\": \"^7.0 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.4.1\",\n                \"phpunit/phpunit\": \"^6.5.14 || ^7.5.20 || ^8.5.19 || ^9.5.8\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.8-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PhpOption\\\\\": \"src/PhpOption/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"Apache-2.0\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Johannes M. Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\",\n                    \"homepage\": \"https://github.com/schmittjoh\"\n                },\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                }\n            ],\n            \"description\": \"Option Type for PHP\",\n            \"keywords\": [\n                \"language\",\n                \"option\",\n                \"php\",\n                \"type\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/schmittjoh/php-option/issues\",\n                \"source\": \"https://github.com/schmittjoh/php-option/tree/1.8.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/phpoption/phpoption\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-12-04T23:24:31+00:00\"\n        },\n        {\n            \"name\": \"predis/predis\",\n            \"version\": \"v1.1.10\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/predis/predis.git\",\n                \"reference\": \"a2fb02d738bedadcffdbb07efa3a5e7bd57f8d6e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/predis/predis/zipball/a2fb02d738bedadcffdbb07efa3a5e7bd57f8d6e\",\n                \"reference\": \"a2fb02d738bedadcffdbb07efa3a5e7bd57f8d6e\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"php\": \">=5.3.9\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"~4.8\"\n            },\n            \"suggest\": {\n                \"ext-curl\": \"Allows access to Webdis when paired with phpiredis\",\n                \"ext-phpiredis\": \"Allows faster serialization and deserialization of the Redis protocol\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Predis\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Daniele Alessandri\",\n                    \"email\": \"suppakilla@gmail.com\",\n                    \"homepage\": \"http://clorophilla.net\",\n                    \"role\": \"Creator & Maintainer\"\n                },\n                {\n                    \"name\": \"Till Krüss\",\n                    \"homepage\": \"https://till.im\",\n                    \"role\": \"Maintainer\"\n                }\n            ],\n            \"description\": \"Flexible and feature-complete Redis client for PHP and HHVM\",\n            \"homepage\": \"http://github.com/predis/predis\",\n            \"keywords\": [\n                \"nosql\",\n                \"predis\",\n                \"redis\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/predis/predis/issues\",\n                \"source\": \"https://github.com/predis/predis/tree/v1.1.10\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sponsors/tillkruss\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2022-01-05T17:46:08+00:00\"\n        },\n        {\n            \"name\": \"psr/http-client\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-client.git\",\n                \"reference\": \"2dfb5f6c5eff0e91e20e913f8c5452ed95b86621\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-client/zipball/2dfb5f6c5eff0e91e20e913f8c5452ed95b86621\",\n                \"reference\": \"2dfb5f6c5eff0e91e20e913f8c5452ed95b86621\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"php\": \"^7.0 || ^8.0\",\n                \"psr/http-message\": \"^1.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Client\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for HTTP clients\",\n            \"homepage\": \"https://github.com/php-fig/http-client\",\n            \"keywords\": [\n                \"http\",\n                \"http-client\",\n                \"psr\",\n                \"psr-18\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-client/tree/master\"\n            },\n            \"time\": \"2020-06-29T06:28:15+00:00\"\n        },\n        {\n            \"name\": \"psr/http-factory\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-factory.git\",\n                \"reference\": \"12ac7fcd07e5b077433f5f2bee95b3a771bf61be\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-factory/zipball/12ac7fcd07e5b077433f5f2bee95b3a771bf61be\",\n                \"reference\": \"12ac7fcd07e5b077433f5f2bee95b3a771bf61be\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"php\": \">=7.0.0\",\n                \"psr/http-message\": \"^1.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Message\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interfaces for PSR-7 HTTP message factories\",\n            \"keywords\": [\n                \"factory\",\n                \"http\",\n                \"message\",\n                \"psr\",\n                \"psr-17\",\n                \"psr-7\",\n                \"request\",\n                \"response\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-factory/tree/master\"\n            },\n            \"time\": \"2019-04-30T12:38:16+00:00\"\n        },\n        {\n            \"name\": \"psr/http-message\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-message.git\",\n                \"reference\": \"f6561bf28d520154e4b0ec72be95418abe6d9363\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-message/zipball/f6561bf28d520154e4b0ec72be95418abe6d9363\",\n                \"reference\": \"f6561bf28d520154e4b0ec72be95418abe6d9363\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Message\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for HTTP messages\",\n            \"homepage\": \"https://github.com/php-fig/http-message\",\n            \"keywords\": [\n                \"http\",\n                \"http-message\",\n                \"psr\",\n                \"psr-7\",\n                \"request\",\n                \"response\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-message/tree/master\"\n            },\n            \"time\": \"2016-08-06T14:39:51+00:00\"\n        },\n        {\n            \"name\": \"psr/log\",\n            \"version\": \"1.1.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/log.git\",\n                \"reference\": \"d49695b909c3b7628b6289db5479a1c204601f11\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/log/zipball/d49695b909c3b7628b6289db5479a1c204601f11\",\n                \"reference\": \"d49695b909c3b7628b6289db5479a1c204601f11\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Log\\\\\": \"Psr/Log/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for logging libraries\",\n            \"homepage\": \"https://github.com/php-fig/log\",\n            \"keywords\": [\n                \"log\",\n                \"psr\",\n                \"psr-3\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/log/tree/1.1.4\"\n            },\n            \"time\": \"2021-05-03T11:20:27+00:00\"\n        },\n        {\n            \"name\": \"ralouphie/getallheaders\",\n            \"version\": \"3.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ralouphie/getallheaders.git\",\n                \"reference\": \"120b605dfeb996808c31b6477290a714d356e822\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ralouphie/getallheaders/zipball/120b605dfeb996808c31b6477290a714d356e822\",\n                \"reference\": \"120b605dfeb996808c31b6477290a714d356e822\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"php\": \">=5.6\"\n            },\n            \"require-dev\": {\n                \"php-coveralls/php-coveralls\": \"^2.1\",\n                \"phpunit/phpunit\": \"^5 || ^6.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/getallheaders.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ralph Khattar\",\n                    \"email\": \"ralph.khattar@gmail.com\"\n                }\n            ],\n            \"description\": \"A polyfill for getallheaders.\",\n            \"support\": {\n                \"issues\": \"https://github.com/ralouphie/getallheaders/issues\",\n                \"source\": \"https://github.com/ralouphie/getallheaders/tree/develop\"\n            },\n            \"time\": \"2019-03-08T08:55:37+00:00\"\n        },\n        {\n            \"name\": \"symfony/deprecation-contracts\",\n            \"version\": \"v3.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/deprecation-contracts.git\",\n                \"reference\": \"c726b64c1ccfe2896cb7df2e1331c357ad1c8ced\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/deprecation-contracts/zipball/c726b64c1ccfe2896cb7df2e1331c357ad1c8ced\",\n                \"reference\": \"c726b64c1ccfe2896cb7df2e1331c357ad1c8ced\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"php\": \">=8.0.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.0-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"function.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"A generic function and convention to trigger deprecation notices\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/deprecation-contracts/tree/v3.0.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-11-01T23:48:49+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-ctype\",\n            \"version\": \"v1.24.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-ctype.git\",\n                \"reference\": \"30885182c981ab175d4d034db0f6f469898070ab\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-ctype/zipball/30885182c981ab175d4d034db0f6f469898070ab\",\n                \"reference\": \"30885182c981ab175d4d034db0f6f469898070ab\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"provide\": {\n                \"ext-ctype\": \"*\"\n            },\n            \"suggest\": {\n                \"ext-ctype\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.23-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Ctype\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Gert de Pagter\",\n                    \"email\": \"BackEndTea@gmail.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for ctype functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"ctype\",\n                \"polyfill\",\n                \"portable\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-ctype/tree/v1.24.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-10-20T20:35:02+00:00\"\n        },\n        {\n            \"name\": \"vlucas/phpdotenv\",\n            \"version\": \"v3.6.10\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/vlucas/phpdotenv.git\",\n                \"reference\": \"5b547cdb25825f10251370f57ba5d9d924e6f68e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/vlucas/phpdotenv/zipball/5b547cdb25825f10251370f57ba5d9d924e6f68e\",\n                \"reference\": \"5b547cdb25825f10251370f57ba5d9d924e6f68e\",\n                \"shasum\": \"\",\n                \"mirrors\": [\n                    {\n                        \"url\": \"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            \"require\": {\n                \"php\": \"^5.4 || ^7.0 || ^8.0\",\n                \"phpoption/phpoption\": \"^1.5.2\",\n                \"symfony/polyfill-ctype\": \"^1.17\"\n            },\n            \"require-dev\": {\n                \"ext-filter\": \"*\",\n                \"ext-pcre\": \"*\",\n                \"phpunit/phpunit\": \"^4.8.36 || ^5.7.27 || ^6.5.14 || ^7.5.20 || ^8.5.21\"\n            },\n            \"suggest\": {\n                \"ext-filter\": \"Required to use the boolean validator.\",\n                \"ext-pcre\": \"Required to use most of the library.\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.6-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Dotenv\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Vance Lucas\",\n                    \"email\": \"vance@vancelucas.com\",\n                    \"homepage\": \"https://github.com/vlucas\"\n                }\n            ],\n            \"description\": \"Loads environment variables from `.env` to `getenv()`, `$_ENV` and `$_SERVER` automagically.\",\n            \"keywords\": [\n                \"dotenv\",\n                \"env\",\n                \"environment\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/vlucas/phpdotenv/issues\",\n                \"source\": \"https://github.com/vlucas/phpdotenv/tree/v3.6.10\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/vlucas/phpdotenv\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-12-12T23:02:06+00:00\"\n        }\n    ],\n    \"packages-dev\": [],\n    \"aliases\": [],\n    \"minimum-stability\": \"stable\",\n    \"stability-flags\": [],\n    \"prefer-stable\": false,\n    \"prefer-lowest\": false,\n    \"platform\": {\n        \"php\": \">=7.3\",\n        \"ext-curl\": \"*\",\n        \"ext-openssl\": \"*\",\n        \"ext-json\": \"*\",\n        \"ext-bcmath\": \"*\",\n        \"ext-pdo\": \"*\",\n        \"ext-mbstring\": \"*\"\n    },\n    \"platform-dev\": [],\n    \"plugin-api-version\": \"2.1.0\"\n}\n"
        },
        {
          "name": "config.php",
          "type": "blob",
          "size": 5.3564453125,
          "content": "<?php\n/**\n * 配置\n *\n * @author mybsdc <mybsdc@gmail.com>\n * @date 2019/3/2\n * @time 11:39\n */\n\nreturn [\n    'message' => [\n        /**\n         * 邮箱配置\n         */\n        'mail' => [\n            /**\n             * 目前机器人邮箱账户支持谷歌邮箱、QQ邮箱、163邮箱以及Outlook邮箱，程序会自动判断填入的邮箱类型并使用合适的配置。也可以自定义邮箱配置。\n             * 注意，QQ邮箱与163邮箱均使用账户加授权码的方式登录，谷歌邮箱使用账户加密码的方式登录，请知悉。\n             */\n            'to' => env('TO'), // 用于接收通知的邮箱\n            'recipient_name' => '主人', // 收件人名字\n            'username' => env('MAIL_USERNAME'), // 机器人邮箱账户\n            'password' => env('MAIL_PASSWORD'), // 机器人邮箱密码或授权码\n            'enable' => (int)env('MAIL_ENABLE'), // 是否启用，默认启用\n            'not_enabled_tips' => env('MAIL_USERNAME') && env('MAIL_PASSWORD'), // 提醒未启用\n            // 'reply_to' => 'mybsdc@qq.com', // 接收回复的邮箱\n            // 'reply_to_name' => '作者', // 接收回复的人名\n            'host' => env('MAIL_HOST'), // 邮件 SMTP 服务器\n            'port' => env('MAIL_PORT'), // 邮件 SMTP 端口\n            'encryption' => env('MAIL_ENCRYPTION'), // 邮件加密方式\n            'class' => \\Luolongfei\\Libs\\MessageServices\\Mail::class,\n            'name' => lang('100064'),\n        ],\n\n        /**\n         * Telegram Bot\n         */\n        'telegram' => [\n            'chat_id' => env('TELEGRAM_CHAT_ID'), // 你的chat_id，通过发送“/start”给@userinfobot可以获取自己的id\n            'token' => env('TELEGRAM_BOT_TOKEN'), // Telegram Bot 的 token\n            'enable' => (int)env('TELEGRAM_BOT_ENABLE'), // 是否启用，默认不启用\n            'not_enabled_tips' => env('TELEGRAM_CHAT_ID') && env('TELEGRAM_BOT_TOKEN'), // 提醒未启用\n            'class' => \\Luolongfei\\Libs\\MessageServices\\TelegramBot::class,\n            'name' => lang('100065'),\n            'proxy' => env('TELEGRAM_PROXY') ?: null,\n            'host' => env('CUSTOM_TELEGRAM_HOST') ?: 'api.telegram.org',\n        ],\n\n        /**\n         * 企业微信\n         */\n        'wechat' => [\n            'corp_id' => env('WECHAT_CORP_ID'), // 企业 ID\n            'corp_secret' => env('WECHAT_CORP_SECRET'), // 企业微信应用的凭证密钥\n            'agent_id' => (int)env('WECHAT_AGENT_ID'), // 企业微信应用 ID\n            'user_id' => env('WECHAT_USER_ID'), // 企业微信用户ID\n            'enable' => (int)env('WECHAT_ENABLE'), // 是否启用，默认不启用\n            'not_enabled_tips' => env('WECHAT_CORP_ID') && env('WECHAT_CORP_SECRET') && env('WECHAT_AGENT_ID'), // 提醒未启用\n            'class' => \\Luolongfei\\Libs\\MessageServices\\WeChat::class,\n            'name' => lang('100066'),\n        ],\n\n        /**\n         * Server 酱\n         */\n        'sct' => [\n            'sct_send_key' => env('SCT_SEND_KEY'), // SendKey\n            'enable' => (int)env('SCT_ENABLE'), // 是否启用，默认不启用\n            'not_enabled_tips' => (bool)env('SCT_SEND_KEY'), // 提醒未启用\n            'class' => \\Luolongfei\\Libs\\MessageServices\\ServerChan::class,\n            'name' => lang('100067'),\n        ],\n\n        /**\n         * Bark 送信\n         */\n        'bark' => [\n            'bark_key' => (string)env('BARK_KEY'), // 打开 Bark App，注册设备后看到的 Key\n            'bark_url' => (string)env('BARK_URL'), // Bark 域名\n            'bark_is_archive' => env('BARK_IS_ARCHIVE') === '' ? null : (int)env('BARK_IS_ARCHIVE'),\n            'bark_group' => env('BARK_GROUP') === '' ? null : env('BARK_GROUP'),\n            'bark_level' => env('BARK_LEVEL'),\n            'bark_icon' => env('BARK_ICON') === '' ? null : env('BARK_ICON'),\n            'bark_jump_url' => env('BARK_JUMP_URL') === '' ? null : env('BARK_JUMP_URL'),\n            'bark_sound' => env('BARK_SOUND') === '' ? null : env('BARK_SOUND'),\n            'enable' => (int)env('BARK_ENABLE'), // 是否启用，默认不启用\n            'not_enabled_tips' => env('BARK_KEY') && env('BARK_URL'), // 提醒未启用\n            'class' => \\Luolongfei\\Libs\\MessageServices\\Bark::class,\n            'name' => lang('100068'),\n        ],\n\n        /**\n         * PUSH PLUS\n         */\n        'pushplus' => [\n            'pushplus_key' => env('PUSHPLUS_KEY'), // SendKey\n            'enable' => (int)env('PUSHPLUS_ENABLE'), // 是否启用，默认不启用\n            'not_enabled_tips' => (bool)env('PUSHPLUS_KEY'), // 提醒未启用\n            'class' => \\Luolongfei\\Libs\\MessageServices\\Pushplus::class,\n            'name' => lang('100136'),\n        ],\n    ],\n    'custom_language' => env('CUSTOM_LANGUAGE', 'zh'),\n    'notice_freq' => (int)env('NOTICE_FREQ', 1), // 通知频率 0：仅当有续期操作的时候 1：每次执行\n    'verify_ssl' => (bool)env('VERIFY_SSL', 0), // 请求时验证 SSL 证书行为，默认不验证，防止服务器证书过期或证书颁布者信息不全导致无法发出请求\n    'debug' => (bool)env('DEBUG'),\n    'freenom_proxy' => env('FREENOM_PROXY') ?: null, // FreeNom 代理，针对国内网络情况，可选择代理访问\n    'new_version_detection' => (bool)env('NEW_VERSION_DETECTION', 1),\n    'max_request_retry_count' => (int)env('MAX_REQUEST_RETRY_COUNT', 200), // 最大请求重试次数\n];"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.7490234375,
          "content": "version: \"3.9\"\nservices:\n    freenom:\n        build:\n            context: .\n            dockerfile: Dockerfile\n        image: freenom-image\n        extends:\n            file: ./common.yml\n            service: common_config\n        privileged: true\n        container_name: freenom\n        depends_on:\n            - aws-waf-solver\n        working_dir: /var/www/\n        volumes:\n            - ./.env:/app/.env\n\n    aws-waf-solver:\n        image: luolongfei/aws-waf-solver\n        container_name: aws-waf-solver\n        shm_size: 1gb\n        privileged: true\n        pull_policy: always\n        extends:\n            file: ./common.yml\n            service: common_config\n        volumes:\n            - ./.env:/app/.env\n\nnetworks:\n    llf-networks:\n        driver: bridge\n"
        },
        {
          "name": "docker-entrypoint.sh",
          "type": "blob",
          "size": 2.8330078125,
          "content": "#!/usr/bin/env bash\n\n#===================================================================#\n#   Author: luolongfei <luolongf@gmail.com>                         #\n#   Intro: https://github.com/luolongfei/freenom                    #\n#===================================================================#\n\n# 自定义颜色变量\nred='\\033[0;31m'\ngreen='\\033[0;32m'\nyellow='\\033[0;33m'\nplain='\\033[0m'\n\n# 生成配置文件\nif [ ! -f /conf/.env ]; then\n    cp /app/.env.example /conf/.env && echo -e \"[${green}Info${plain}] 已生成 .env 文件，请将 .env 文件中的配置项改为你自己的，然后重启容器，如果当前环境非普通 VPS，可忽略此提示\" || echo -e \"[${yellow}Warn${plain}] 未能正常生成 .env 文件\"\nfi\nif [ ! -f /app/.env ]; then\n    ln -s /conf/.env /app/.env || echo -e \"[${yellow}Warn${plain}] 未能正常创建 .env 文件链接\"\nfi\n\n# PHP 命令\nPHP_COMMAND='/usr/local/bin/php /app/run > /app/logs/freenom_cron.log 2>&1'\n\n# 指定脚本执行时间\nif [ -z \"${RUN_AT}\" ]; then\n    minute=$(shuf -i 0-59 -n 1)\n    hour=$(shuf -i 6-23 -n 1)\n    CRON_COMMAND=\"${minute} ${hour} * * * ${PHP_COMMAND}\"\n    echo -e \"[${green}Info${plain}] 已自动指定执行时间，续期任务将在北京时间每天 「${hour}:${minute}」 执行\"\n    echo -e \"[${green}Info${plain}] 在没有手动指定 RUN_AT 环境变量的情况下，每次重启容器，程序都会重新在 06 ~ 23 点全时段中自动随机指定一个执行时间，目的是防止很多人在同一个时间点执行任务导致 Freenom 无法稳定提供服务\"\nelse\n    if [[ \"${RUN_AT}\" =~ ^([01][0-9]|2[0-3]|[0-9]):([0-5][0-9]|[0-9])$ ]]; then\n        minute=$(echo ${RUN_AT} | egrep -o '([0-5][0-9]|[0-9])$')\n        hour=$(echo ${RUN_AT} | egrep -o '^([01][0-9]|2[0-3]|[0-9])')\n        CRON_COMMAND=\"${minute} ${hour} * * * ${PHP_COMMAND}\"\n        echo -e \"[${green}Info${plain}] 你已指定执行时间，续期任务将在北京时间每天 「${hour}:${minute}」 执行\"\n    else\n        php /app/run -c=Cron -m=verify --cron_exp=\"${RUN_AT}\"\n        if [ $? -eq 0 ]; then\n            CRON_COMMAND=\"${RUN_AT} ${PHP_COMMAND}\"\n            echo -e \"[${green}Info${plain}] 你自定义的 Cron 表达式为「${RUN_AT}」，已通过正则验证\"\n        else\n            echo -e \"[${red}Error${plain}] RUN_AT 的值无效，你的输入为 ${RUN_AT}\"\n            echo -e \"${yellow}请输入一个有效的时间指令，其值可以为时分格式，如：11:24，也可以为 Cron 表达式，如：'24 11 * * *'，甚至可以不输入，让程序自动生成，推荐采用自动生成的方式，不建议手动指定此环境变量\"\n            exit 1\n        fi\n    fi\nfi\n\n# 添加计划任务\nsed -i '/freenom_cron/'d /etc/crontabs/root\necho -e \"${CRON_COMMAND}\" >>/etc/crontabs/root\n\necho -e \"[${green}Info${plain}] 计划任务：${CRON_COMMAND}\"\n\nphp /app/run\n\nexec \"$@\"\n"
        },
        {
          "name": "heroku.yml",
          "type": "blob",
          "size": 0.04296875,
          "content": "build:\n  docker:\n    web: Dockerfile.heroku\n"
        },
        {
          "name": "heroku",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 3.23046875,
          "content": "<?php\n/**\n * 入口文件\n *\n * 云函数版本维护：\n * 1、去掉顶部的 “#!/usr/bin/env php”，将文件名改为 index.php\n * 2、将 “define('IS_SCF', false);” 改为 “define('IS_SCF', true);”\n * 3、干掉最下方的 run(); 调用\n *\n * @author mybsdc <mybsdc@gmail.com>\n * @date 2019/3/2\n * @time 11:05\n * @link https://github.com/luolongfei/freenom\n */\n\nerror_reporting(E_ERROR);\nini_set('display_errors', 1);\nset_time_limit(0);\n\ndefine('IS_SCF', true); // 是否云函数环境\ndefine('IS_CLI', PHP_SAPI === 'cli');\ndefine('DS', DIRECTORY_SEPARATOR);\ndefine('ROOT_PATH', realpath(__DIR__));\ndefine('VENDOR_PATH', realpath(ROOT_PATH . '/vendor'));\ndefine('APP_PATH', realpath(ROOT_PATH . '/app'));\ndefine('DATA_PATH', IS_SCF ? '/tmp' : realpath(ROOT_PATH . '/app/Data')); // 云函数只有 /tmp 目录的读写权限\ndefine('RESOURCES_PATH', realpath(ROOT_PATH . '/resources'));\n\ndate_default_timezone_set('Asia/Shanghai');\n\n/**\n * 注册错误处理\n */\nregister_shutdown_function('customize_error_handler');\n\n/**\n * 注册异常处理\n */\nset_exception_handler('exception_handler');\n\nrequire VENDOR_PATH . '/autoload.php';\n\nuse Luolongfei\\Libs\\Log;\nuse Luolongfei\\Libs\\Message;\n\n/**\n * @throws Exception\n */\nfunction customize_error_handler()\n{\n    if (!is_null($error = error_get_last())) {\n        system_log(json_encode($error, JSON_UNESCAPED_UNICODE));\n        Log::error(lang('100057'), $error);\n        Message::send(lang('100058') . json_encode($error, JSON_UNESCAPED_UNICODE), lang('100059'));\n    }\n}\n\n/**\n * @param \\Exception $e\n *\n * @throws \\Exception\n */\nfunction exception_handler($e)\n{\n    Log::error(lang('100060') . $e->getMessage());\n    Message::send(lang('100061') . $e->getMessage(), lang('100062'));\n}\n\n/**\n * 腾讯云函数\n *\n * @param $event\n * @param $context\n *\n * @return string\n */\nfunction main_handler($event, $context)\n{\n    return run();\n}\n\n/**\n * 阿里云函数\n *\n * @param $event\n * @param $context\n *\n * @return string\n */\nfunction handler($event, $context)\n{\n    $logger = $GLOBALS['fcLogger'];\n    $logger->info(lang('100063'));\n\n    return run();\n}\n\n/**\n * 华为云函数\n *\n * @param $event\n * @param $context\n *\n * @return bool|string\n */\nfunction huawei_handler($event, $context)\n{\n    $logger = $context->getLogger();\n\n    $logger->info('开始执行华为云函数');\n\n    // 手动设置环境变量\n    $logger->info('设置环境变量');\n    $allEnvKeys = array_keys((array)env());\n    foreach ($allEnvKeys as $key) {\n        $value = $context->getUserData((string)$key);\n        if (strlen($value) > 0) {\n            $logger->info('从控制台发现环境变量：' . $key);\n            putenv(\"{$key}={$value}\");\n        }\n    }\n    $logger->info('环境变量设置完成');\n\n    return run();\n}\n\n/**\n * @return string|bool\n */\nfunction run()\n{\n    try {\n        system_check();\n\n        $class = sprintf('Luolongfei\\App\\Console\\%s', get_argv('c', 'FreeNom'));\n        $fn = get_argv('m', 'handle');\n\n        $class::getInstance()->$fn();\n\n        return IS_SCF ? lang('100007') : true;\n    } catch (\\Exception $e) {\n        system_log(sprintf(lang('100006'), $e->getMessage()), $e->getTrace());\n        Message::send(lang('100004') . $e->getMessage(), lang('100005'));\n    }\n\n    return IS_SCF ? lang('100008') : false;\n}\n"
        },
        {
          "name": "koyeb",
          "type": "tree",
          "content": null
        },
        {
          "name": "libs",
          "type": "tree",
          "content": null
        },
        {
          "name": "logs",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "run",
          "type": "blob",
          "size": 3.2578125,
          "content": "#!/usr/bin/env php\n<?php\n/**\n * 入口文件\n *\n * 云函数版本维护：\n * 1、去掉顶部的 “#!/usr/bin/env php”，将文件名改为 index.php\n * 2、将 “define('IS_SCF', false);” 改为 “define('IS_SCF', true);”\n * 3、干掉最下方的 run(); 调用\n *\n * @author mybsdc <mybsdc@gmail.com>\n * @date 2019/3/2\n * @time 11:05\n * @link https://github.com/luolongfei/freenom\n */\n\nerror_reporting(E_ERROR);\nini_set('display_errors', 1);\nset_time_limit(0);\n\ndefine('IS_SCF', false); // 是否云函数环境\ndefine('IS_CLI', PHP_SAPI === 'cli');\ndefine('DS', DIRECTORY_SEPARATOR);\ndefine('ROOT_PATH', realpath(__DIR__));\ndefine('VENDOR_PATH', realpath(ROOT_PATH . '/vendor'));\ndefine('APP_PATH', realpath(ROOT_PATH . '/app'));\ndefine('DATA_PATH', IS_SCF ? '/tmp' : realpath(ROOT_PATH . '/app/Data')); // 云函数只有 /tmp 目录的读写权限\ndefine('RESOURCES_PATH', realpath(ROOT_PATH . '/resources'));\n\ndate_default_timezone_set('Asia/Shanghai');\n\n/**\n * 注册错误处理\n */\nregister_shutdown_function('customize_error_handler');\n\n/**\n * 注册异常处理\n */\nset_exception_handler('exception_handler');\n\nrequire VENDOR_PATH . '/autoload.php';\n\nuse Luolongfei\\Libs\\Log;\nuse Luolongfei\\Libs\\Message;\n\n/**\n * @throws Exception\n */\nfunction customize_error_handler()\n{\n    if (!is_null($error = error_get_last())) {\n        system_log(json_encode($error, JSON_UNESCAPED_UNICODE));\n        Log::error(lang('100057'), $error);\n        Message::send(lang('100058') . json_encode($error, JSON_UNESCAPED_UNICODE), lang('100059'));\n    }\n}\n\n/**\n * @param \\Exception $e\n *\n * @throws \\Exception\n */\nfunction exception_handler($e)\n{\n    Log::error(lang('100060') . $e->getMessage());\n    Message::send(lang('100061') . $e->getMessage(), lang('100062'));\n}\n\n/**\n * 腾讯云函数\n *\n * @param $event\n * @param $context\n *\n * @return string\n */\nfunction main_handler($event, $context)\n{\n    return run();\n}\n\n/**\n * 阿里云函数\n *\n * @param $event\n * @param $context\n *\n * @return string\n */\nfunction handler($event, $context)\n{\n    $logger = $GLOBALS['fcLogger'];\n    $logger->info(lang('100063'));\n\n    return run();\n}\n\n/**\n * 华为云函数\n *\n * @param $event\n * @param $context\n *\n * @return bool|string\n */\nfunction huawei_handler($event, $context)\n{\n    $logger = $context->getLogger();\n\n    $logger->info('开始执行华为云函数');\n\n    // 手动设置环境变量\n    $logger->info('设置环境变量');\n    $allEnvKeys = array_keys((array)env());\n    foreach ($allEnvKeys as $key) {\n        $value = $context->getUserData((string)$key);\n        if (strlen($value) > 0) {\n            $logger->info('从控制台发现环境变量：' . $key);\n            putenv(\"{$key}={$value}\");\n        }\n    }\n    $logger->info('环境变量设置完成');\n\n    return run();\n}\n\n/**\n * @return string|bool\n */\nfunction run()\n{\n    try {\n        system_check();\n\n        $class = sprintf('Luolongfei\\App\\Console\\%s', get_argv('c', 'FreeNom'));\n        $fn = get_argv('m', 'handle');\n\n        $class::getInstance()->$fn();\n\n        return IS_SCF ? lang('100007') : true;\n    } catch (\\Exception $e) {\n        system_log(sprintf(lang('100006'), $e->getMessage()), $e->getTrace());\n        Message::send(lang('100004') . $e->getMessage(), lang('100005'));\n    }\n\n    return IS_SCF ? lang('100008') : false;\n}\n\nrun();\n"
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}