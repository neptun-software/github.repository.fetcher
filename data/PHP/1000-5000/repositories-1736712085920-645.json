{
  "metadata": {
    "timestamp": 1736712085920,
    "page": 645,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "froxlor/Froxlor",
      "stars": 1651,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2705078125,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = tab\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml}]\nindent_style = space\nindent_size = 2\n\n[docker-compose.yml]\nindent_size = 4\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3271484375,
          "content": "install/update.log\ninstall/*.json\nlib/userdata.inc.php\nlib/userdata.inc.php.bak\nlib/config.inc.php\nlogs/*\n!logs/index.html\n.buildpath\n.project\n.settings/\n.test/\n*.diff\n*~\n.well-known\n.idea\n.DS_Store\n*.iml\nimg/\nvendor/\nnode_modules/\nfonts/\ntemplates/*\n!templates/index.html\n!templates/Froxlor/\ntemplates/Froxlor/build/\n!templates/misc/\n"
        },
        {
          "name": "2fa.php",
          "type": "blob",
          "size": 4.5185546875,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nif (!defined('AREA')) {\n\theader(\"Location: index.php\");\n\texit();\n}\n\nuse Froxlor\\Database\\Database;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\FroxlorTwoFactorAuth;\nuse Froxlor\\Settings;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\nuse Froxlor\\PhpHelper;\nuse Froxlor\\User;\n\nif (Settings::Get('2fa.enabled') != '1') {\n\tResponse::dynamicError('2fa.2fa_not_activated');\n}\n\n// This file is being included in admin_index and customer_index\n// and therefore does not need to require lib/init.php\nif (AREA == 'admin') {\n\t$upd_stmt = Database::prepare(\"UPDATE `\" . TABLE_PANEL_ADMINS . \"` SET `type_2fa` = :t2fa, `data_2fa` = :d2fa WHERE adminid = :id\");\n\t$uid = $userinfo['adminid'];\n} elseif (AREA == 'customer') {\n\t$upd_stmt = Database::prepare(\"UPDATE `\" . TABLE_PANEL_CUSTOMERS . \"` SET `type_2fa` = :t2fa, `data_2fa` = :d2fa WHERE customerid = :id\");\n\t$uid = $userinfo['customerid'];\n}\n$success_message = \"\";\n\n$tfa = new FroxlorTwoFactorAuth('Froxlor ' . Settings::Get('system.hostname'));\n\n// do the delete and then just show a success-message\nif ($action == 'delete') {\n\tDatabase::pexecute($upd_stmt, [\n\t\t't2fa' => 0,\n\t\t'd2fa' => \"\",\n\t\t'id' => $uid\n\t]);\n\tResponse::standardSuccess('2fa.2fa_removed');\n} elseif ($action == 'preadd') {\n\t$type = Request::post('type_2fa', '0');\n\n\t$data = \"\";\n\tif ($type > 0) {\n\t\t// generate secret for TOTP\n\t\t$data = $tfa->createSecret();\n\n\t\t$userinfo['type_2fa'] = $type;\n\t\t$userinfo['data_2fa'] = $data;\n\t\t$userinfo['2fa_unsaved'] = true;\n\n\t\t// if type = email, send a code there for confirmation\n\t\tif ($type == 1) {\n\t\t\t$code = $tfa->getCode($data);\n\t\t\t$_mailerror = false;\n\t\t\t$mailerr_msg = \"\";\n\t\t\t$replace_arr = [\n\t\t\t\t'CODE' => $code\n\t\t\t];\n\t\t\t$mail_body = html_entity_decode(PhpHelper::replaceVariables(lng('mails.2fa.mailbody'), $replace_arr));\n\n\t\t\ttry {\n\t\t\t\t$mail->Subject = lng('mails.2fa.subject');\n\t\t\t\t$mail->AltBody = $mail_body;\n\t\t\t\t$mail->MsgHTML(str_replace(\"\\n\", \"<br />\", $mail_body));\n\t\t\t\t$mail->AddAddress($userinfo['email'], User::getCorrectUserSalutation($userinfo));\n\t\t\t\t$mail->Send();\n\t\t\t} catch (\\PHPMailer\\PHPMailer\\Exception $e) {\n\t\t\t\t$mailerr_msg = $e->errorMessage();\n\t\t\t\t$_mailerror = true;\n\t\t\t} catch (Exception $e) {\n\t\t\t\t$mailerr_msg = $e->getMessage();\n\t\t\t\t$_mailerror = true;\n\t\t\t}\n\n\t\t\tif ($_mailerror) {\n\t\t\t\tResponse::dynamicError($mailerr_msg);\n\t\t\t}\n\t\t}\n\t\tUI::twig()->addGlobal('userinfo', $userinfo);\n\t} else {\n\t\tResponse::dynamicError('Select one of the possible values for 2FA');\n\t}\n} elseif ($action == 'add') {\n\t$type = Request::post('type_2fa', '0');\n\t$data = Request::post('data_2fa', '');\n\t$code = Request::post('codevalidation', '');\n\n\t// validate\n\t$result = $tfa->verifyCode($data, $code, 3);\n\n\tif ($result) {\n\t\tif ($type == 0 || $type == 1) {\n\t\t\t// no fixed secret for email validation, the validation code will be set on the fly\n\t\t\t$data = \"\";\n\t\t}\n\t\tDatabase::pexecute($upd_stmt, [\n\t\t\t't2fa' => $type,\n\t\t\t'd2fa' => $data,\n\t\t\t'id' => $uid\n\t\t]);\n\t\tResponse::standardSuccess('2fa.2fa_added', $filename);\n\t}\n\tResponse::dynamicError('Invalid/wrong code');\n}\n\n$log->logAction(FroxlorLogger::USR_ACTION, LOG_NOTICE, \"viewed 2fa::overview\");\n\n$type_select_values = [];\n$ga_qrcode = '';\nif ($userinfo['type_2fa'] == '0') {\n\t// available types\n\t$type_select_values = [\n\t\t0 => '-',\n\t\t1 => 'E-Mail',\n\t\t2 => 'Authenticator'\n\t];\n\tasort($type_select_values);\n} elseif ($userinfo['type_2fa'] == '1') {\n\t// email 2fa enabled\n} elseif ($userinfo['type_2fa'] == '2') {\n\t// authenticator 2fa enabled\n\t$ga_qrcode = $tfa->getQRCodeImageAsDataUri($userinfo['loginname'], $userinfo['data_2fa']);\n}\n\nUI::view('user/2fa.html.twig', [\n\t'type_select_values' => $type_select_values,\n\t'ga_qrcode' => $ga_qrcode\n]);\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 14.791015625,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n                       51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.630859375,
          "content": "[![Froxlor-CI](https://github.com/Froxlor/Froxlor/actions/workflows/build-mariadb.yml/badge.svg?branch=main)](https://github.com/Froxlor/Froxlor/actions/workflows/build-mariadb.yml)\n[![Froxlor-CI](https://github.com/Froxlor/Froxlor/actions/workflows/build-mysql.yml/badge.svg?branch=main)](https://github.com/Froxlor/Froxlor/actions/workflows/build-mysql.yml)\n[![Discord](https://badgen.net/badge/icon/discord?icon=discord&label)](https://discord.froxlor.org)\n\n# Froxlor\n\nThe server administration software for your needs.\nDeveloped by experienced server administrators, this panel simplifies the effort of managing your hosting platform.\n\n## Installation\n\n### Fast install\n1. Ensure that your webserver serves /var/www/html\n2. Extract froxlor into /var/www/html\n3. Point your browser to http://[ip-of-webserver]/froxlor\n4. Follow the installer\n5. Login as administrator\n6. Have fun!\n\nIf you have chosen to do the configuration by hand during the installation, you have to complete some more steps:\n\n1. Adjust \"System > Settings\" according to your needs\n2. Choose your distribution under \"System > Configuration\"\n3. Follow the steps for your services\n\n### Detailed installation\nhttps://docs.froxlor.org/latest/general/installation/\n\n## Help\n\nYou may find help in the following places:\n\n### Discord\n\nThe froxlor community discord server can be found here: https://discord.froxlor.org\n\n### Forum\n\nThe community is located on https://forum.froxlor.org/\n\n### Documentation\n\nThe documentation may be found at https://docs.froxlor.org/\n\n## License\n\nMay be found in [COPYING](COPYING)\n\n## Downloads\n\n### Tarball\nhttps://files.froxlor.org/releases/froxlor-latest.tar.gz [MD5](https://files.froxlor.org/releases/froxlor-latest.tar.gz.md5) [SHA1](https://files.froxlor.org/releases/froxlor-latest.tar.gz.sha1)\n\n### Debian / Ubuntu repository\n\n[HowTo](https://docs.froxlor.org/latest/general/installation/apt-package.html)\n\n#### Debian\n\n```\napt -y install apt-transport-https lsb-release ca-certificates curl gnupg\ncurl -sSLo /usr/share/keyrings/deb.froxlor.org-froxlor.gpg https://deb.froxlor.org/froxlor.gpg\nsh -c 'echo \"deb [signed-by=/usr/share/keyrings/deb.froxlor.org-froxlor.gpg] https://deb.froxlor.org/debian $(lsb_release -sc) main\" > /etc/apt/sources.list.d/froxlor.list'\n```\n\n#### Ubuntu\n\n```\napt -y install apt-transport-https lsb-release ca-certificates curl gnupg\ncurl -sSLo /usr/share/keyrings/deb.froxlor.org-froxlor.gpg https://deb.froxlor.org/froxlor.gpg\nsh -c 'echo \"deb [signed-by=/usr/share/keyrings/deb.froxlor.org-froxlor.gpg] https://deb.froxlor.org/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/froxlor.list'\n```\n\n## Contributing\n\n[see here](.github/CONTRIBUTING.md)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.2490234375,
          "content": "# froxlor's Security Policy\n\nWelcome and thanks for taking interest in [froxlor](https://www.froxlor.org)!\n\nWe are mostly interested in reports by actual froxlor users but all high quality contributions are welcome.\n\nPlease try your best to describe a clear and realistic impact for your report and please don't open any public issues on GitHub or social media, we're doing our best to respond through huntr as quickly as we can.\n\nWith that, good luck hacking us ;)\n\n## Supported versions\n\n- ️✅ **2.2.x**  (`main` git-branch)\n- ️✅ **2.1.x**  (`v2.1` git-branch)\n- ❌ 2.0.x (`2.0.x`-tags)\n- ❌ 0.10.x (`0.10.x`-tags)\n- ❌ other git-branches\n\n## Qualifying Vulnerabilities\n\n### Vulnerabilities we really care about\n- SQL injection bugs\n- server-side code execution bugs\n- cross-site scripting vulnerabilities\n- cross-site request forgery vulnerabilities\n- authentication and authorization flaws\n- sensitive information disclosure\n\n### Vulnerabilities we accept\n\nOnly reproducible issues on a default/clean setup from the latest stable release of a supported version will be accepted.\n\n## Non-Qualifying Vulnerabilities\n\n- Reports from automated tools or scanners\n- Theoretical attacks without proof of exploitability\n- Attacks that are the result of a third party library should be reported to the library maintainers\n- Social engineering\n- Attacks that require disabling security features or reducing the security level of the environment\n- Exploits by an admin user itself (privileged user and implicitly trusted)\n- Reflected file download\n- Physical attacks\n- Weak SSL/TLS/SSH algorithms or protocols\n- Attacks involving physical access to a user’s device, or involving a device or network that’s already seriously compromised (eg man-in-the-middle).\n- The user attacks themselves\n- anything in `/doc`\n- anything in `/tests`\n\n## Reporting a Vulnerability\n\nIf you think you have found a vulnerability in froxlor, please head over to [https://github.com/Froxlor/Froxlor/security/advisories](https://github.com/Froxlor/Froxlor/security/advisories/new) and use the reporting possibilities there. Also, please give us appropriate time to fix the issue and build update-packages before publishing anything into the wild. Alternatively you can email us to [team@froxlor.org](team@froxlor.org).\n"
        },
        {
          "name": "actions",
          "type": "tree",
          "content": null
        },
        {
          "name": "admin_admins.php",
          "type": "blob",
          "size": 6.119140625,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\Admins;\nuse Froxlor\\CurrentUser;\nuse Froxlor\\Database\\Database;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\PhpHelper;\nuse Froxlor\\Settings;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n$id = (int)Request::any('id');\n\nif (($page == 'admins' || $page == 'overview') && $userinfo['change_serversettings'] == '1') {\n\tif ($action == '') {\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"viewed admin_admins\");\n\n\t\ttry {\n\t\t\t$admin_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/admin/tablelisting.admins.php';\n\t\t\t$collection = (new Collection(Admins::class, $userinfo))\n\t\t\t\t->withPagination($admin_list_data['admin_list']['columns'], $admin_list_data['admin_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\tUI::view('user/table.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $admin_list_data, 'admin_list'),\n\t\t\t'actions_links' => [\n\t\t\t\t[\n\t\t\t\t\t'href' => $linker->getLink(['section' => 'admins', 'page' => $page, 'action' => 'add']),\n\t\t\t\t\t'label' => lng('admin.admin_add')\n\t\t\t\t]\n\t\t\t]\n\t\t]);\n\t} elseif ($action == 'su') {\n\t\ttry {\n\t\t\t$json_result = Admins::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\t\t$destination_admin = $result['loginname'];\n\n\t\tif ($destination_admin != '' && $result['adminid'] != $userinfo['userid']) {\n\t\t\t$result['switched_user'] = CurrentUser::getData();\n\t\t\t$result['adminsession'] = 1;\n\t\t\t$result['userid'] = $result['adminid'];\n\t\t\tsession_regenerate_id(true);\n\t\t\tCurrentUser::setData($result);\n\n\t\t\t$log->logAction(\n                FroxlorLogger::ADM_ACTION,\n                LOG_INFO,\n                \"switched adminuser and is now '\" . $destination_admin . \"'\"\n            );\n\t\t\tResponse::redirectTo('admin_index.php');\n\t\t} else {\n\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t'action' => 'login'\n\t\t\t]);\n\t\t}\n\t} elseif ($action == 'delete' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Admins::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif ($result['loginname'] != '') {\n\t\t\tif ($result['adminid'] == $userinfo['userid']) {\n\t\t\t\tResponse::standardError('youcantdeleteyourself');\n\t\t\t}\n\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\tAdmins::getLocal($userinfo, [\n\t\t\t\t\t'id' => $id\n\t\t\t\t])->delete();\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tHTML::askYesNo('admin_admin_reallydelete', $filename, [\n\t\t\t\t\t'id' => $id,\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => $action\n\t\t\t\t], $result['loginname']);\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'add') {\n\t\tif (Request::post('send') == 'send') {\n\t\t\ttry {\n\t\t\t\tAdmins::getLocal($userinfo, Request::postAll())->add();\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t} else {\n\t\t\t$ipaddress = [];\n\t\t\t$ipaddress[-1] = lng('admin.allips');\n\t\t\t$ipsandports_stmt = Database::query(\"\n\t\t\t\tSELECT `id`, `ip` FROM `\" . TABLE_PANEL_IPSANDPORTS . \"` GROUP BY `ip` ORDER BY `ip` ASC\n\t\t\t\");\n\t\t\twhile ($row = $ipsandports_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t$ipaddress[$row['id']] = $row['ip'];\n\t\t\t}\n\n\t\t\t$admin_add_data = include_once dirname(__FILE__) . '/lib/formfields/admin/admin/formfield.admin_add.php';\n\n\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'admins']),\n\t\t\t\t'formdata' => $admin_add_data['admin_add']\n\t\t\t]);\n\t\t}\n\t} elseif ($action == 'edit' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Admins::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif ($result['loginname'] != '') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tAdmins::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$dec_places = Settings::Get('panel.decimal_places');\n\t\t\t\t$result['traffic'] = round($result['traffic'] / (1024 * 1024), $dec_places);\n\t\t\t\t$result['diskspace'] = round($result['diskspace'] / 1024, $dec_places);\n\t\t\t\t$result['email'] = $idna_convert->decode($result['email']);\n\n\t\t\t\t$ipaddress = [];\n\t\t\t\t$ipaddress[-1] = lng('admin.allips');\n\t\t\t\t$ipsandports_stmt = Database::query(\"\n\t\t\t\t\tSELECT `id`, `ip` FROM `\" . TABLE_PANEL_IPSANDPORTS . \"` GROUP BY `ip` ORDER BY `ip` ASC\n\t\t\t\t\");\n\t\t\t\twhile ($row = $ipsandports_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t$ipaddress[$row['id']] = $row['ip'];\n\t\t\t\t}\n\n\t\t\t\t$result = PhpHelper::htmlentitiesArray($result);\n\n\t\t\t\t$admin_edit_data = include_once dirname(__FILE__) . '/lib/formfields/admin/admin/formfield.admin_edit.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'admins', 'id' => $id]),\n\t\t\t\t\t'formdata' => $admin_edit_data['admin_edit'],\n\t\t\t\t\t'editid' => $id\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "admin_apcuinfo.php",
          "type": "blob",
          "size": 7.3046875,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @author     Janos Muzsi <muzsij@hypernics.hu>\n * @author     Ralf Becker <beckerr@php.net>\n * @author     Rasmus Lerdorf <rasmus@php.net>\n * @author     Ilia Alshanetsky <ilia@prohost.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n *\n * Based on https://github.com/krakjoe/apcu/blob/master/apc.php, which is\n * licensed under the PHP licence (version 3.01), which can be viewed\n * online at https://www.php.net/license/3_01.txt\n */\n\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\nuse Froxlor\\UI\\HTML;\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\n$horizontal_bar_size = 950; // 1280px window width\n\nif ($action == 'delete' && function_exists('apcu_clear_cache') && $userinfo['change_serversettings'] == '1') {\n\tif (Request::post('send') == 'send') {\n\t\tapcu_clear_cache();\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_INFO, \"cleared APCu cache\");\n\t\theader('Location: ' . $linker->getLink([\n\t\t\t\t'section' => 'apcuinfo',\n\t\t\t\t'page' => 'showinfo'\n\t\t\t]));\n\t\texit();\n\t} else {\n\t\tHTML::askYesNo('cache_reallydelete', $filename, [\n\t\t\t'page' => $page,\n\t\t\t'action' => 'delete',\n\t\t], '', [\n\t\t\t'section' => 'apcuinfo',\n\t\t\t'page' => 'showinfo'\n\t\t]);\n\t}\n}\n\nif (!function_exists('apcu_cache_info') || !function_exists('apcu_sma_info')) {\n\tResponse::standardError('no_apcuinfo');\n}\n\nif ($page == 'showinfo' && $userinfo['change_serversettings'] == '1') {\n\t$cache = apcu_cache_info();\n\t$mem = apcu_sma_info();\n\t$time = time();\n\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"viewed admin_apcuinfo\");\n\n\t// check for possible empty values that are used in the templates\n\tif (!isset($cache['file_upload_progress'])) {\n\t\t$cache['file_upload_progress'] = lng('logger.unknown');\n\t}\n\n\tif (!isset($cache['num_expunges'])) {\n\t\t$cache['num_expunges'] = lng('logger.unknown');\n\t}\n\n\t$overview = [\n\t\t'mem_size' => $mem['num_seg'] * $mem['seg_size'],\n\t\t'mem_avail' => $mem['avail_mem'],\n\t\t'mem_used' => ($mem['num_seg'] * $mem['seg_size']) - $mem['avail_mem'],\n\t\t'seg_size' => bsize($mem['seg_size']),\n\t\t'num_hits' => $cache['num_hits'],\n\t\t'num_misses' => $cache['num_misses'],\n\t\t'num_inserts' => $cache['num_inserts'],\n\t\t'req_rate_user' => sprintf(\"%.2f\",\n\t\t\t$cache['num_hits'] ? (($cache['num_hits'] + $cache['num_misses']) / ($time - $cache['start_time'])) : 0),\n\t\t'hit_rate_user' => sprintf(\"%.2f\",\n\t\t\t$cache['num_hits'] ? (($cache['num_hits']) / ($time - $cache['start_time'])) : 0),\n\t\t'miss_rate_user' => sprintf(\"%.2f\",\n\t\t\t$cache['num_misses'] ? (($cache['num_misses']) / ($time - $cache['start_time'])) : 0),\n\t\t'insert_rate_user' => sprintf(\"%.2f\",\n\t\t\t$cache['num_inserts'] ? (($cache['num_inserts']) / ($time - $cache['start_time'])) : 0),\n\t\t'apcversion' => phpversion('apcu'),\n\t\t'phpversion' => phpversion(),\n\t\t'number_vars' => $cache['num_entries'],\n\t\t'size_vars' => bsize($cache['mem_size']),\n\t\t'num_hits_and_misses' => 0 >= ($cache['num_hits'] + $cache['num_misses']) ? 1 : ($cache['num_hits'] + $cache['num_misses']),\n\t\t'file_upload_progress' => $cache['file_upload_progress'],\n\t\t'num_expunges' => $cache['num_expunges'],\n\t\t'host' => (function_exists('gethostname')\n\t\t\t? gethostname()\n\t\t\t: (php_uname('n')\n\t\t\t\t?: (empty($_SERVER['SERVER_NAME'])\n\t\t\t\t\t? $_SERVER['HOST_NAME']\n\t\t\t\t\t: $_SERVER['SERVER_NAME']\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'server' => $_SERVER['SERVER_SOFTWARE'] ?: '',\n\t\t'start_time' => $cache['start_time'],\n\t\t'uptime' => duration($cache['start_time'])\n\t];\n\n\t$overview['mem_used_percentage'] = number_format(($overview['mem_used'] / $overview['mem_size']) * 100, 1);\n\t$overview['num_hits_percentage'] = number_format(($overview['num_hits'] / $overview['num_hits_and_misses']) * 100,\n\t\t1);\n\t$overview['num_misses_percentage'] = number_format(($overview['num_misses'] / $overview['num_hits_and_misses']) * 100,\n\t\t1);\n\t$overview['readable'] = [\n\t\t'mem_size' => bsize($overview['mem_size']),\n\t\t'mem_avail' => bsize($overview['mem_avail']),\n\t\t'mem_used' => bsize($overview['mem_used']),\n\t\t'num_hits' => number_format($overview['num_hits']),\n\t\t'num_misses' => number_format($overview['num_misses']),\n\t\t'number_vars' => number_format($overview['number_vars']),\n\t];\n\n\t$overview['runtimelines'] = [];\n\tforeach (ini_get_all('apcu') as $name => $v) {\n\t\t$value = $v['local_value'];\n\t\t$overview['runtimelines'][$name] = $value;\n\t}\n\n\t// Fragementation: (freeseg - 1) / total_seg\n\t$nseg = $freeseg = $fragsize = $freetotal = 0;\n\tfor ($i = 0; $i < $mem['num_seg']; $i++) {\n\t\t$ptr = 0;\n\t\tforeach ($mem['block_lists'][$i] as $block) {\n\t\t\tif ($block['offset'] != $ptr) {\n\t\t\t\t++$nseg;\n\t\t\t}\n\t\t\t$ptr = $block['offset'] + $block['size'];\n\t\t\t/* Only consider blocks <5M for the fragmentation % */\n\t\t\tif ($block['size'] < (5 * 1024 * 1024)) {\n\t\t\t\t$fragsize += $block['size'];\n\t\t\t}\n\t\t\t$freetotal += $block['size'];\n\t\t}\n\t\t$freeseg += count($mem['block_lists'][$i]);\n\t}\n\n\t$overview['fragmentation'] = [];\n\tif ($freeseg > 1) {\n\t\t$overview['fragmentation']['used_percentage'] = number_format(($fragsize / $freetotal) * 100, 1);\n\t\t$overview['fragmentation']['used_bytes'] = $fragsize;\n\t\t$overview['fragmentation']['total_bytes'] = $freetotal;\n\t\t$overview['fragmentation']['num_frags'] = $freeseg;\n\t\t$overview['fragmentation']['readable'] = [\n\t\t\t'used_bytes' => bsize($fragsize),\n\t\t\t'total_bytes' => bsize($freetotal),\n\t\t\t'num_frags' => number_format($freeseg)\n\t\t];\n\t} else {\n\t\t$overview['fragmentation'] = 0;\n\t}\n\n\tUI::view('settings/apcuinfo.html.twig', [\n\t\t'apcuinfo' => $overview\n\t]);\n}\n// pretty printer for byte values\nfunction bsize($size)\n{\n\t$i = 0;\n\t$val = ['b', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\twhile (($size / 1024) > 1) {\n\t\t$size /= 1024;\n\t\t++$i;\n\t}\n\treturn sprintf(\n\t\t'%.2f%s%s',\n\t\t$size,\n\t\t'',\n\t\t$val[$i]\n\t);\n}\n\nfunction duration($ts)\n{\n\tglobal $time;\n\t$years = (int)((($time - $ts) / (7 * 86400)) / 52.177457);\n\t$rem = (int)(($time - $ts) - ($years * 52.177457 * 7 * 86400));\n\t$weeks = (int)(($rem) / (7 * 86400));\n\t$days = (int)(($rem) / 86400) - $weeks * 7;\n\t$hours = (int)(($rem) / 3600) - $days * 24 - $weeks * 7 * 24;\n\t$mins = (int)(($rem) / 60) - $hours * 60 - $days * 24 * 60 - $weeks * 7 * 24 * 60;\n\t$str = '';\n\tif ($years == 1) {\n\t\t$str .= \"$years year, \";\n\t}\n\tif ($years > 1) {\n\t\t$str .= \"$years years, \";\n\t}\n\tif ($weeks == 1) {\n\t\t$str .= \"$weeks week, \";\n\t}\n\tif ($weeks > 1) {\n\t\t$str .= \"$weeks weeks, \";\n\t}\n\tif ($days == 1) {\n\t\t$str .= \"$days day,\";\n\t}\n\tif ($days > 1) {\n\t\t$str .= \"$days days,\";\n\t}\n\tif ($hours == 1) {\n\t\t$str .= \" $hours hour and\";\n\t}\n\tif ($hours > 1) {\n\t\t$str .= \" $hours hours and\";\n\t}\n\tif ($mins == 1) {\n\t\t$str .= \" 1 minute\";\n\t} else {\n\t\t$str .= \" $mins minutes\";\n\t}\n\treturn $str;\n}\n"
        },
        {
          "name": "admin_autoupdate.php",
          "type": "blob",
          "size": 5.734375,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Froxlor;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\FileDir;\nuse Froxlor\\Install\\AutoUpdate;\nuse Froxlor\\Settings;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\nif ($page != 'error') {\n\t// check for webupdate to be enabled\n\tif (Settings::Config('enable_webupdate') != true) {\n\t\tResponse::redirectTo($filename, [\n\t\t\t'page' => 'error',\n\t\t\t'errno' => 11\n\t\t]);\n\t}\n}\n\n// display initial version check\nif ($page == 'overview') {\n\t// log our actions\n\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"checking auto-update\");\n\n\t// check for new version\n\ttry {\n\t\t$result = AutoUpdate::checkVersion();\n\t} catch (Exception $e) {\n\t\tResponse::dynamicError($e->getMessage());\n\t}\n\n\tif ($result == 1) {\n\n\t\t// anzeige über version-status mit ggfls. formular\n\t\t// zum update schritt #1 -> download\n\t\t$text = lng('admin.newerversionavailable') . ' ' . lng('admin.newerversiondetails', [AutoUpdate::getFromResult('version'), Froxlor::VERSION]);\n\n\t\t$upd_formfield = [\n\t\t\t'updates' => [\n\t\t\t\t'title' => lng('update.update'),\n\t\t\t\t'image' => 'fa-solid fa-download',\n\t\t\t\t'sections' => [\n\t\t\t\t\t'section_autoupd' => [\n\t\t\t\t\t\t'fields' => [\n\t\t\t\t\t\t\t'newversion' => ['type' => 'hidden', 'value' => AutoUpdate::getFromResult('version')]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t'buttons' => [\n\t\t\t\t\t[\n\t\t\t\t\t\t'class' => 'btn-outline-secondary',\n\t\t\t\t\t\t'label' => lng('panel.cancel'),\n\t\t\t\t\t\t'type' => 'reset'\n\t\t\t\t\t],\n\t\t\t\t\t[\n\t\t\t\t\t\t'label' => lng('update.proceed')\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t];\n\n\t\tUI::view('user/form-note.html.twig', [\n\t\t\t'formaction' => $linker->getLink(['section' => 'autoupdate', 'page' => 'getdownload']),\n\t\t\t'formdata' => $upd_formfield['updates'],\n\t\t\t// alert\n\t\t\t'type' => 'warning',\n\t\t\t'alert_msg' => $text\n\t\t]);\n\t} else if ($result < 0 || $result > 1) {\n\t\t// remote errors\n\t\tif ($result < 0) {\n\t\t\tResponse::dynamicError(AutoUpdate::getLastError());\n\t\t} else {\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => 'error',\n\t\t\t\t'errno' => $result\n\t\t\t]);\n\t\t}\n\t} else {\n\t\t// no new version\n\t\tResponse::standardSuccess('update.noupdatesavail', (Settings::Get('system.update_channel') == 'testing' ? lng('serversettings.uc_testing') . ' ' : ''));\n\t}\n} // download the new archive\nelseif ($page == 'getdownload') {\n\t// retrieve the new version from the form\n\t$newversion = Request::post('newversion');\n\n\t$result = 6;\n\t// valid?\n\tif ($newversion !== null) {\n\t\t$result = AutoUpdate::downloadZip($newversion);\n\t\tif (!is_numeric($result)) {\n\t\t\t// to the next step\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => 'extract',\n\t\t\t\t'archive' => $result\n\t\t\t]);\n\t\t}\n\t}\n\tResponse::redirectTo($filename, [\n\t\t'page' => 'error',\n\t\t'errno' => $result\n\t]);\n} // extract and install new version\nelseif ($page == 'extract') {\n\tif (Request::post('send') == 'send') {\n\t\t$toExtract = Request::post('archive');\n\t\t$localArchive = FileDir::makeCorrectFile(Froxlor::getInstallDir() . '/updates/' . $toExtract);\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"Extracting \" . $localArchive . \" to \" . Froxlor::getInstallDir());\n\t\t$result = AutoUpdate::extractZip($localArchive);\n\t\tif ($result > 0) {\n\t\t\t// error\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => 'error',\n\t\t\t\t'errno' => $result\n\t\t\t]);\n\t\t}\n\t\t// redirect to update-page\n\t\tResponse::redirectTo('admin_updates.php');\n\t} else {\n\t\t$toExtract = Request::get('archive');\n\t\t$localArchive = FileDir::makeCorrectFile(Froxlor::getInstallDir() . '/updates/' . $toExtract);\n\t}\n\n\tif (!file_exists($localArchive)) {\n\t\tResponse::redirectTo($filename, [\n\t\t\t'page' => 'error',\n\t\t\t'errno' => 7\n\t\t]);\n\t}\n\n\t$text = lng('admin.extractdownloadedzip', [$toExtract]);\n\n\t$upd_formfield = [\n\t\t'updates' => [\n\t\t\t'title' => lng('update.update'),\n\t\t\t'image' => 'fa-solid fa-download',\n\t\t\t'sections' => [\n\t\t\t\t'section_autoupd' => [\n\t\t\t\t\t'fields' => [\n\t\t\t\t\t\t'archive' => ['type' => 'hidden', 'value' => $toExtract]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t'buttons' => [\n\t\t\t\t[\n\t\t\t\t\t'class' => 'btn-outline-secondary',\n\t\t\t\t\t'label' => lng('panel.cancel'),\n\t\t\t\t\t'type' => 'reset'\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'label' => lng('update.proceed')\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t];\n\n\tUI::view('user/form-note.html.twig', [\n\t\t'formaction' => $linker->getLink(['section' => 'autoupdate', 'page' => 'extract']),\n\t\t'formdata' => $upd_formfield['updates'],\n\t\t// alert\n\t\t'type' => 'warning',\n\t\t'alert_msg' => $text\n\t]);\n} // display error\nelseif ($page == 'error') {\n\t// retrieve error-number via url-parameter\n\t$errno = Request::get('errno', 0);\n\n\t// 2 = no Zlib\n\t// 3 = custom version detected\n\t// 4 = could not store archive to local hdd\n\t// 5 = some weird value came from version.froxlor.org\n\t// 6 = download without valid version\n\t// 7 = local archive does not exist\n\t// 8 = could not extract archive\n\t// 9 = checksum mismatch\n\t// 10 = <php-7.4\n\t// 11 = enable_webupdate = false\n\t$errmsg = 'autoupdate_' . $errno;\n\tif ($errno == 3) {\n\t\t$errmsg = 'customized_version';\n\t}\n\tResponse::standardError($errmsg);\n}\n"
        },
        {
          "name": "admin_configfiles.php",
          "type": "blob",
          "size": 6.1044921875,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Config\\ConfigParser;\nuse Froxlor\\FileDir;\nuse Froxlor\\Froxlor;\nuse Froxlor\\Settings;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\nuse Froxlor\\Validate\\Validate;\n\nif ($userinfo['change_serversettings'] == '1') {\n\tif ($action == 'setconfigured') {\n\t\tSettings::Set('panel.is_configured', '1', true);\n\t\tResponse::redirectTo('admin_configfiles.php');\n\t}\n\n\t// get distro from URL param\n\t$distribution = Request::any('distribution');\n\t$reselect = Request::any('reselect', 0);\n\n\t// check for possible setting\n\tif (empty($distribution)) {\n\t\t$distribution = Settings::Get('system.distribution') ?? \"\";\n\t}\n\tif ($reselect == 1) {\n\t\t$distribution = '';\n\t}\n\n\t$distributions_select = [];\n\n\t$services = [];\n\t$config_dir = FileDir::makeCorrectDir(Froxlor::getInstallDir() . '/lib/configfiles/');\n\n\tif (!empty($distribution)) {\n\t\tif (!file_exists($config_dir . '/' . $distribution . \".xml\")) {\n\t\t\t// unknown distribution -> redirect to select a valid distribution for config-templates\n\t\t\tSettings::Set('system.distribution', '');\n\t\t\tResponse::redirectTo('admin_configfiles.php', ['reselect' => 1]);\n\t\t}\n\n\t\t// update setting if different\n\t\tif ($distribution != Settings::Get('system.distribution')) {\n\t\t\tSettings::Set('system.distribution', $distribution);\n\t\t}\n\n\t\t// create configparser object\n\t\t$configfiles = new ConfigParser($config_dir . '/' . $distribution . \".xml\");\n\n\t\t// get distro-info\n\t\t$dist_display = $configfiles->getCompleteDistroName();\n\n\t\t// get all the services from the distro\n\t\t$services = $configfiles->getServices();\n\t} else {\n\t\t// show list of available distro's\n\t\t$distros = glob($config_dir . '*.xml');\n\t\t// read in all the distros\n\t\tforeach ($distros as $_distribution) {\n\t\t\t// get configparser object\n\t\t\t$dist = new ConfigParser($_distribution);\n\t\t\t// store in tmp array\n\t\t\t$distributions_select[str_replace(\".xml\", \"\", strtolower(basename($_distribution)))] = $dist->getCompleteDistroName();\n\t\t}\n\n\t\t// sort by distribution name\n\t\tasort($distributions_select);\n\t}\n\n\tif ($distribution != \"\" && !empty(Request::post('finish'))) {\n\t\t$valid_keys = ['http', 'dns', 'smtp', 'mail', 'antispam', 'ftp', 'system', 'distro'];\n\t\tunset($_POST['finish']);\n\t\tunset($_POST['csrf_token']);\n\t\t$params = Request::postAll();\n\t\t$params['distro'] = $distribution;\n\t\t$params['system'] = [];\n\t\tforeach (Request::post('system', []) as $sysdaemon) {\n\t\t\t$params['system'][] = $sysdaemon;\n\t\t}\n\t\t// validate params\n\t\tforeach ($params as $key => $value) {\n\t\t\tif (!in_array($key, $valid_keys)) {\n\t\t\t\tunset($params[$key]);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!is_array($value)) {\n\t\t\t\t$params[$key] = Validate::validate($value, $key);\n\t\t\t} else {\n\t\t\t\tforeach ($value as $subkey => $subvalue) {\n\t\t\t\t\t$params[$key][$subkey] = Validate::validate($subvalue, $key.'.'.$subkey);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$params_content = json_encode($params);\n\t\t$params_filename = FileDir::makeCorrectFile(Froxlor::getInstallDir() . 'install/' . Froxlor::genSessionId() . '.json');\n\t\tfile_put_contents($params_filename, $params_content);\n\n\t\tUI::twigBuffer('settings/configuration-final.html.twig', [\n\t\t\t'distribution' => $distribution,\n\t\t\t// alert\n\t\t\t'type' => 'info',\n\t\t\t'alert_msg' => lng('admin.configfiles.finishnote'),\n\t\t\t'basedir' => Froxlor::getInstallDir(),\n\t\t\t'params_filename' => $params_filename\n\t\t]);\n\t} else {\n\t\tif (!empty($distribution)) {\n\t\t\t// show available services to configure\n\t\t\t$fields = $services;\n\t\t\t$link_params = ['section' => 'configfiles', 'distribution' => $distribution];\n\t\t\tUI::twigBuffer('settings/configuration.html.twig', [\n\t\t\t\t'action' => $linker->getLink($link_params),\n\t\t\t\t'fields' => $fields,\n\t\t\t\t'distribution' => $distribution\n\t\t\t]);\n\t\t} else {\n\t\t\t$cfg_formfield = [\n\t\t\t\t'config' => [\n\t\t\t\t\t'title' => lng('admin.configfiles.serverconfiguration'),\n\t\t\t\t\t'image' => 'fa-solid fa-wrench',\n\t\t\t\t\t'description' => lng('admin.configfiles.description'),\n\t\t\t\t\t'sections' => [\n\t\t\t\t\t\t'section_config' => [\n\t\t\t\t\t\t\t'fields' => [\n\t\t\t\t\t\t\t\t'distribution' => [\n\t\t\t\t\t\t\t\t\t'type' => 'select',\n\t\t\t\t\t\t\t\t\t'select_var' => $distributions_select,\n\t\t\t\t\t\t\t\t\t'label' => lng('admin.configfiles.distribution'),\n\t\t\t\t\t\t\t\t\t'selected' => Settings::Get('system.distribution') ?? ''\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t'buttons' => [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'class' => 'btn-outline-secondary',\n\t\t\t\t\t\t\t'label' => lng('panel.cancel'),\n\t\t\t\t\t\t\t'type' => 'reset'\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'label' => lng('update.proceed')\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t];\n\n\t\t\tUI::twigBuffer('user/form-note.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'configfiles']),\n\t\t\t\t'formdata' => $cfg_formfield['config'],\n\t\t\t\t'actions_links' => (int)Settings::Get('panel.is_configured') == 0 ? [\n\t\t\t\t\t[\n\t\t\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t\t\t'section' => 'configfiles',\n\t\t\t\t\t\t\t'page' => 'overview',\n\t\t\t\t\t\t\t'action' => 'setconfigured'\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t'label' => lng('panel.ihave_configured'),\n\t\t\t\t\t\t'class' => 'btn-outline-warning',\n\t\t\t\t\t\t'icon' => 'fa-solid fa-circle-check'\n\t\t\t\t\t]\n\t\t\t\t] : [],\n\t\t\t\t// alert\n\t\t\t\t'type' => 'warning',\n\t\t\t\t'alert_msg' => lng('panel.settings_before_configuration') . ((int)Settings::Get('panel.is_configured') == 1 ? '<br><br>' . lng('panel.system_is_configured') : '')\n\t\t\t]);\n\t\t}\n\t}\n\n\tUI::twigOutputBuffer();\n} else {\n\tResponse::redirectTo('admin_index.php');\n}\n"
        },
        {
          "name": "admin_cronjobs.php",
          "type": "blob",
          "size": 2.974609375,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\Cronjobs;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n$id = (int)Request::any('id');\n\nif (($page == 'cronjobs' || $page == 'overview') && $userinfo['change_serversettings'] == '1') {\n\tif ($action == '') {\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, 'viewed admin_cronjobs');\n\n\t\ttry {\n\t\t\t$cron_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/admin/tablelisting.cronjobs.php';\n\t\t\t$collection = (new Collection(Cronjobs::class, $userinfo))\n\t\t\t\t->withPagination($cron_list_data['cron_list']['columns'], $cron_list_data['cron_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\tUI::view('user/table-note.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $cron_list_data, 'cron_list'),\n\t\t\t// alert-box\n\t\t\t'type' => 'warning',\n\t\t\t'alert_msg' => lng('cron.changewarning')\n\t\t]);\n\t} elseif ($action == 'new') {\n\t\t/*\n\t\t * @TODO later\n\t\t */\n\t} elseif ($action == 'edit' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Cronjobs::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\t\tif ($result['cronfile'] != '') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tCronjobs::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$cronjobs_edit_data = include_once dirname(__FILE__) . '/lib/formfields/admin/cronjobs/formfield.cronjobs_edit.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'cronjobs', 'id' => $id]),\n\t\t\t\t\t'formdata' => $cronjobs_edit_data['cronjobs_edit'],\n\t\t\t\t\t'editid' => $id\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'delete' && $id != 0) {\n\t\t/*\n\t\t * @TODO later\n\t\t */\n\t}\n}\n"
        },
        {
          "name": "admin_customers.php",
          "type": "blob",
          "size": 9.9150390625,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\Admins;\nuse Froxlor\\Api\\Commands\\Customers;\nuse Froxlor\\Api\\Commands\\MysqlServer;\nuse Froxlor\\CurrentUser;\nuse Froxlor\\Database\\Database;\nuse Froxlor\\Froxlor;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\PhpHelper;\nuse Froxlor\\Settings;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n$id = (int)Request::any('id');\n\nif (($page == 'customers' || $page == 'overview') && $userinfo['customers'] != '0') {\n\tif ($action == '') {\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"viewed admin_customers\");\n\n\t\ttry {\n\t\t\t$customer_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/admin/tablelisting.customers.php';\n\t\t\t$collection = (new Collection(Customers::class, $userinfo, ['show_usages' => true]))\n\t\t\t\t->withPagination($customer_list_data['customer_list']['columns'], $customer_list_data['customer_list']['default_sorting']);\n\t\t\tif ($userinfo['change_serversettings']) {\n\t\t\t\t$collection->has('admin', Admins::class, 'adminid', 'adminid');\n\t\t\t}\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\t$actions_links = false;\n\t\tif (CurrentUser::canAddResource('customers')) {\n\t\t\t$actions_links = [\n\t\t\t\t[\n\t\t\t\t\t'href' => $linker->getLink(['section' => 'customers', 'page' => $page, 'action' => 'add']),\n\t\t\t\t\t'label' => lng('admin.customer_add')\n\t\t\t\t]\n\t\t\t];\n\t\t}\n\n\t\tUI::view('user/table.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $customer_list_data, 'customer_list'),\n\t\t\t'actions_links' => $actions_links\n\t\t]);\n\t} elseif ($action == 'su' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Customers::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\t$destination_user = $result['loginname'];\n\n\t\tif ($destination_user != '') {\n\t\t\tif ($result['deactivated'] == '1') {\n\t\t\t\tResponse::standardError(\"usercurrentlydeactivated\", $destination_user);\n\t\t\t}\n\n\t\t\t$result['switched_user'] = CurrentUser::getData();\n\t\t\t$result['adminsession'] = 0;\n\t\t\t$result['userid'] = $result['customerid'];\n\t\t\tsession_regenerate_id(true);\n\t\t\tCurrentUser::setData($result);\n\n\t\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_INFO, \"switched user and is now '\" . $destination_user . \"'\");\n\n\t\t\t$target = Request::get('target', 'index');\n\t\t\t$redirect = \"customer_\" . $target . \".php\";\n\t\t\tif (!file_exists(Froxlor::getInstallDir() . \"/\" . $redirect)) {\n\t\t\t\t$redirect = \"customer_index.php\";\n\t\t\t}\n\t\t\tResponse::redirectTo($redirect, null, true);\n\t\t} else {\n\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t'action' => 'login'\n\t\t\t]);\n\t\t}\n\t} elseif ($action == 'unlock' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Customers::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (Request::post('send') == 'send') {\n\t\t\ttry {\n\t\t\t\t$json_result = Customers::getLocal($userinfo, [\n\t\t\t\t\t'id' => $id\n\t\t\t\t])->unlock();\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t} else {\n\t\t\tHTML::askYesNo('customer_reallyunlock', $filename, [\n\t\t\t\t'id' => $id,\n\t\t\t\t'page' => $page,\n\t\t\t\t'action' => $action\n\t\t\t], $result['loginname']);\n\t\t}\n\t} elseif ($action == 'delete' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Customers::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (Request::post('send') == 'send') {\n\t\t\ttry {\n\t\t\t\t$json_result = Customers::getLocal($userinfo, [\n\t\t\t\t\t'id' => $id,\n\t\t\t\t\t'delete_userfiles' => Request::post('delete_userfiles', 0)\n\t\t\t\t])->delete();\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t} else {\n\t\t\tHTML::askYesNoWithCheckbox('admin_customer_reallydelete', 'admin_customer_alsoremovefiles', $filename, [\n\t\t\t\t'id' => $id,\n\t\t\t\t'page' => $page,\n\t\t\t\t'action' => $action\n\t\t\t], $result['loginname']);\n\t\t}\n\t} elseif ($action == 'add') {\n\t\tif (Request::post('send') == 'send') {\n\t\t\ttry {\n\t\t\t\tCustomers::getLocal($userinfo, Request::postAll())->add();\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t} else {\n\t\t\t$mysql_servers = [];\n\t\t\ttry {\n\t\t\t\t$result_json = MysqlServer::getLocal($userinfo)->listing();\n\t\t\t\t$result_decoded = json_decode($result_json, true)['data']['list'];\n\t\t\t\tforeach ($result_decoded as $dbserver => $dbdata) {\n\t\t\t\t\t$mysql_servers[] = [\n\t\t\t\t\t\t'label' => $dbdata['caption'],\n\t\t\t\t\t\t'value' => $dbserver\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t} catch (Exception $e) {\n\t\t\t\t/* just none */\n\t\t\t}\n\n\t\t\t$phpconfigs = [];\n\t\t\t$configs = Database::query(\"\n\t\t\t\tSELECT c.*, fc.description as interpreter\n\t\t\t\tFROM `\" . TABLE_PANEL_PHPCONFIGS . \"` c\n\t\t\t\tLEFT JOIN `\" . TABLE_PANEL_FPMDAEMONS . \"` fc ON fc.id = c.fpmsettingid\n\t\t\t\");\n\t\t\twhile ($row = $configs->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\tif ((int)Settings::Get('phpfpm.enabled') == 1) {\n\t\t\t\t\t$phpconfigs[] = [\n\t\t\t\t\t\t'label' => $row['description'] . \" [\" . $row['interpreter'] . \"]\",\n\t\t\t\t\t\t'value' => $row['id']\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\t$phpconfigs[] = [\n\t\t\t\t\t\t'label' => $row['description'],\n\t\t\t\t\t\t'value' => $row['id']\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// hosting plans\n\t\t\t$hosting_plans = [];\n\t\t\t$plans = Database::query(\"\n\t\t\t\tSELECT *\n\t\t\t\tFROM `\" . TABLE_PANEL_PLANS . \"`\n\t\t\t\tORDER BY name ASC\n\t\t\t\");\n\t\t\t$hosting_plans = [\n\t\t\t\t0 => \"---\"\n\t\t\t];\n\t\t\twhile ($row = $plans->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t$hosting_plans[$row['id']] = $row['name'];\n\t\t\t}\n\n\t\t\t$customer_add_data = include_once dirname(__FILE__) . '/lib/formfields/admin/customer/formfield.customer_add.php';\n\n\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'customers']),\n\t\t\t\t'formdata' => $customer_add_data['customer_add']\n\t\t\t]);\n\t\t}\n\t} elseif ($action == 'edit' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Customers::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif ($result['loginname'] != '') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tCustomers::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$dec_places = Settings::Get('panel.decimal_places');\n\t\t\t\t$result['traffic'] = round($result['traffic'] / (1024 * 1024), $dec_places);\n\t\t\t\t$result['diskspace'] = round($result['diskspace'] / 1024, $dec_places);\n\t\t\t\t$result['email'] = $idna_convert->decode($result['email']);\n\n\t\t\t\t$result = PhpHelper::htmlentitiesArray($result);\n\n\t\t\t\t$mysql_servers = [];\n\t\t\t\ttry {\n\t\t\t\t\t$result_json = MysqlServer::getLocal($userinfo)->listing();\n\t\t\t\t\t$result_decoded = json_decode($result_json, true)['data']['list'];\n\t\t\t\t\tforeach ($result_decoded as $dbserver => $dbdata) {\n\t\t\t\t\t\t$mysql_servers[] = [\n\t\t\t\t\t\t\t'label' => $dbdata['caption'],\n\t\t\t\t\t\t\t'value' => $dbserver\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\t/* just none */\n\t\t\t\t}\n\n\t\t\t\t$phpconfigs = [];\n\t\t\t\t$configs = Database::query(\"\n\t\t\t\t\tSELECT c.*, fc.description as interpreter\n\t\t\t\t\tFROM `\" . TABLE_PANEL_PHPCONFIGS . \"` c\n\t\t\t\t\tLEFT JOIN `\" . TABLE_PANEL_FPMDAEMONS . \"` fc ON fc.id = c.fpmsettingid\n\t\t\t\t\");\n\t\t\t\twhile ($row = $configs->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\tif ((int)Settings::Get('phpfpm.enabled') == 1) {\n\t\t\t\t\t\t$phpconfigs[] = [\n\t\t\t\t\t\t\t'label' => $row['description'] . \" [\" . $row['interpreter'] . \"]\",\n\t\t\t\t\t\t\t'value' => $row['id']\n\t\t\t\t\t\t];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$phpconfigs[] = [\n\t\t\t\t\t\t\t'label' => $row['description'],\n\t\t\t\t\t\t\t'value' => $row['id']\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// hosting plans\n\t\t\t\t$plans = Database::query(\"\n\t\t\t\t\tSELECT *\n\t\t\t\t\tFROM `\" . TABLE_PANEL_PLANS . \"`\n\t\t\t\t\tORDER BY name ASC\n\t\t\t\t\");\n\t\t\t\t$hosting_plans = [\n\t\t\t\t\t0 => \"---\"\n\t\t\t\t];\n\t\t\t\twhile ($row = $plans->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t$hosting_plans[$row['id']] = $row['name'];\n\t\t\t\t}\n\n\t\t\t\t$available_admins_stmt = Database::prepare(\"\n\t\t\t\t\tSELECT * FROM `\" . TABLE_PANEL_ADMINS . \"`\n\t\t\t\t\tWHERE (`customers` = '-1' OR `customers` > `customers_used`)\n\t\t\t\t\tAND adminid <> :currentadmin\n\t\t\t\t\");\n\t\t\t\tDatabase::pexecute($available_admins_stmt, ['currentadmin' => $result['adminid']]);\n\t\t\t\t$admin_select = [\n\t\t\t\t\t0 => \"---\"\n\t\t\t\t];\n\t\t\t\twhile ($available_admin = $available_admins_stmt->fetch()) {\n\t\t\t\t\t$admin_select[$available_admin['adminid']] = $available_admin['name'] . \" (\" . $available_admin['loginname'] . \")\";\n\t\t\t\t}\n\n\t\t\t\t$customer_edit_data = include_once dirname(__FILE__) . '/lib/formfields/admin/customer/formfield.customer_edit.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'customers', 'id' => $id]),\n\t\t\t\t\t'formdata' => $customer_edit_data['customer_edit'],\n\t\t\t\t\t'editid' => $id\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "admin_domains.php",
          "type": "blob",
          "size": 24.49609375,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\Customers as Customers;\nuse Froxlor\\Api\\Commands\\Domains as Domains;\nuse Froxlor\\Bulk\\DomainBulkAction;\nuse Froxlor\\Cron\\TaskId;\nuse Froxlor\\CurrentUser;\nuse Froxlor\\Customer\\Customer;\nuse Froxlor\\Database\\Database;\nuse Froxlor\\FileDir;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\Settings;\nuse Froxlor\\System\\Cronjob;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\nuse Froxlor\\User;\nuse Froxlor\\Validate\\Validate;\n\n$id = (int)Request::any('id');\n\nif ($page == 'domains' || $page == 'overview') {\n\tif ($action == '') {\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"viewed admin_domains\");\n\n\t\ttry {\n\t\t\t$customerCollection = (new Collection(Customers::class, $userinfo));\n\t\t\t$domain_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/admin/tablelisting.domains.php';\n\t\t\t$collection = (new Collection(Domains::class, $userinfo))\n\t\t\t\t->has('customer', Customers::class, 'customerid', 'customerid')\n\t\t\t\t->withPagination($domain_list_data['domain_list']['columns'], $domain_list_data['domain_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\t$actions_links = false;\n\t\tif (CurrentUser::canAddResource('domains')) {\n\t\t\t$actions_links = [];\n\t\t\t$actions_links[] = [\n\t\t\t\t'href' => $linker->getLink(['section' => 'domains', 'page' => $page, 'action' => 'add']),\n\t\t\t\t'label' => lng('admin.domain_add')\n\t\t\t];\n\t\t\t$actions_links[] = [\n\t\t\t\t'href' => $linker->getLink(['section' => 'domains', 'page' => $page, 'action' => 'import']),\n\t\t\t\t'label' => lng('domains.domain_import'),\n\t\t\t\t'icon' => 'fa-solid fa-file-import',\n\t\t\t\t'class' => 'btn-outline-secondary'\n\t\t\t];\n\t\t}\n\n\t\tUI::view('user/table.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $domain_list_data, 'domain_list'),\n\t\t\t'actions_links' => $actions_links\n\t\t]);\n\t} elseif ($action == 'delete' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Domains::getLocal($userinfo, [\n\t\t\t\t'id' => $id,\n\t\t\t\t'no_std_subdomain' => true\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\t$alias_check_stmt = Database::prepare(\"\n\t\t\tSELECT COUNT(`id`) AS `count` FROM `\" . TABLE_PANEL_DOMAINS . \"`\n\t\t\tWHERE `aliasdomain`= :id\");\n\t\t$alias_check = Database::pexecute_first($alias_check_stmt, [\n\t\t\t'id' => $id\n\t\t]);\n\n\t\tif ($result['domain'] != '') {\n\t\t\tif (Request::post('send') == 'send' && $alias_check['count'] == 0) {\n\t\t\t\ttry {\n\t\t\t\t\tDomains::getLocal($userinfo, Request::postAll())->delete();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} elseif ($alias_check['count'] > 0) {\n\t\t\t\tResponse::standardError('domains_cantdeletedomainwithaliases');\n\t\t\t} else {\n\t\t\t\tHTML::askYesNoWithCheckbox('admin_domain_reallydelete', 'admin_customer_alsoremovemail', $filename, [\n\t\t\t\t\t'id' => $id,\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => $action\n\t\t\t\t], $idna_convert->decode($result['domain']));\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'add') {\n\t\tif (Request::post('send') == 'send') {\n\t\t\ttry {\n\t\t\t\tDomains::getLocal($userinfo, Request::postAll())->add();\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t} else {\n\t\t\t$customers = [\n\t\t\t\t0 => lng('panel.please_choose')\n\t\t\t];\n\t\t\t$result_customers_stmt = Database::prepare(\"\n\t\t\t\t\tSELECT `customerid`, `loginname`, `name`, `firstname`, `company`\n\t\t\t\t\tFROM `\" . TABLE_PANEL_CUSTOMERS . \"` \" . ($userinfo['customers_see_all'] ? '' : \" WHERE `adminid` = :adminid \") . \" ORDER BY COALESCE(NULLIF(`name`,''), `company`) ASC\");\n\t\t\t$params = [];\n\t\t\tif ($userinfo['customers_see_all'] == '0') {\n\t\t\t\t$params['adminid'] = $userinfo['adminid'];\n\t\t\t}\n\t\t\tDatabase::pexecute($result_customers_stmt, $params);\n\n\t\t\twhile ($row_customer = $result_customers_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t$customers[$row_customer['customerid']] = User::getCorrectFullUserDetails($row_customer) . ' (' . $row_customer['loginname'] . ')';\n\t\t\t}\n\n\t\t\t$admins = [];\n\t\t\tif ($userinfo['customers_see_all'] == '1') {\n\t\t\t\t$result_admins_stmt = Database::query(\"\n\t\t\t\t\t\tSELECT `adminid`, `loginname`, `name`\n\t\t\t\t\t\tFROM `\" . TABLE_PANEL_ADMINS . \"`\n\t\t\t\t\t\tWHERE `domains_used` < `domains` OR `domains` = '-1' ORDER BY `name` ASC\");\n\n\t\t\t\twhile ($row_admin = $result_admins_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t$admins[$row_admin['adminid']] = User::getCorrectFullUserDetails($row_admin) . ' (' . $row_admin['loginname'] . ')';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($userinfo['ip'] == \"-1\") {\n\t\t\t\t$result_ipsandports_stmt = Database::query(\"\n\t\t\t\t\t\tSELECT `id`, `ip`, `port` FROM `\" . TABLE_PANEL_IPSANDPORTS . \"` WHERE `ssl`='0' ORDER BY `ip`, `port` ASC\n\t\t\t\t\t\");\n\t\t\t\t$result_ssl_ipsandports_stmt = Database::query(\"\n\t\t\t\t\t\tSELECT `id`, `ip`, `port` FROM `\" . TABLE_PANEL_IPSANDPORTS . \"` WHERE `ssl`='1' ORDER BY `ip`, `port` ASC\n\t\t\t\t\t\");\n\t\t\t} else {\n\t\t\t\t$admin_ip_stmt = Database::prepare(\"\n\t\t\t\t\t\tSELECT `id`, `ip`, `port` FROM `\" . TABLE_PANEL_IPSANDPORTS . \"` WHERE `id` = :ipid ORDER BY `ip`, `port` ASC\n\t\t\t\t\t\");\n\t\t\t\t$admin_ip = Database::pexecute_first($admin_ip_stmt, [\n\t\t\t\t\t'ipid' => $userinfo['ip']\n\t\t\t\t]);\n\n\t\t\t\t$result_ipsandports_stmt = Database::prepare(\"\n\t\t\t\t\t\tSELECT `id`, `ip`, `port` FROM `\" . TABLE_PANEL_IPSANDPORTS . \"` WHERE `ssl`='0' AND `ip` = :ipid ORDER BY `ip`, `port` ASC\n\t\t\t\t\t\");\n\t\t\t\tDatabase::pexecute($result_ipsandports_stmt, [\n\t\t\t\t\t'ipid' => $admin_ip['ip']\n\t\t\t\t]);\n\n\t\t\t\t$result_ssl_ipsandports_stmt = Database::prepare(\"\n\t\t\t\t\t\tSELECT `id`, `ip`, `port` FROM `\" . TABLE_PANEL_IPSANDPORTS . \"` WHERE `ssl`='1' AND `ip` = :ipid ORDER BY `ip`, `port` ASC\n\t\t\t\t\t\");\n\t\t\t\tDatabase::pexecute($result_ssl_ipsandports_stmt, [\n\t\t\t\t\t'ipid' => $admin_ip['ip']\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\t// Build array holding all IPs and Ports available to this admin\n\t\t\t$ipsandports = [];\n\t\t\twhile ($row_ipandport = $result_ipsandports_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\tif (filter_var($row_ipandport['ip'], FILTER_VALIDATE_IP, FILTER_FLAG_IPV6)) {\n\t\t\t\t\t$row_ipandport['ip'] = '[' . $row_ipandport['ip'] . ']';\n\t\t\t\t}\n\n\t\t\t\t$ipsandports[] = [\n\t\t\t\t\t'label' => $row_ipandport['ip'] . ':' . $row_ipandport['port'],\n\t\t\t\t\t'value' => $row_ipandport['id']\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t$ssl_ipsandports = [];\n\t\t\twhile ($row_ssl_ipandport = $result_ssl_ipsandports_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\tif (filter_var($row_ssl_ipandport['ip'], FILTER_VALIDATE_IP, FILTER_FLAG_IPV6)) {\n\t\t\t\t\t$row_ssl_ipandport['ip'] = '[' . $row_ssl_ipandport['ip'] . ']';\n\t\t\t\t}\n\n\t\t\t\t$ssl_ipsandports[] = [\n\t\t\t\t\t'label' => $row_ssl_ipandport['ip'] . ':' . $row_ssl_ipandport['port'],\n\t\t\t\t\t'value' => $row_ssl_ipandport['id']\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t$standardsubdomains = [];\n\t\t\t$result_standardsubdomains_stmt = Database::query(\"\n\t\t\t\t\tSELECT `id` FROM `\" . TABLE_PANEL_DOMAINS . \"` `d`, `\" . TABLE_PANEL_CUSTOMERS . \"` `c` WHERE `d`.`id` = `c`.`standardsubdomain`\n\t\t\t\t\");\n\n\t\t\twhile ($row_standardsubdomain = $result_standardsubdomains_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t$standardsubdomains[$row_standardsubdomain['id']] = $row_standardsubdomain['id'];\n\t\t\t}\n\n\t\t\tif (count($standardsubdomains) > 0) {\n\t\t\t\t$standardsubdomains = \" AND `d`.`id` NOT IN (\" . join(',', $standardsubdomains) . \") \";\n\t\t\t} else {\n\t\t\t\t$standardsubdomains = '';\n\t\t\t}\n\n\t\t\t$domains = [\n\t\t\t\t0 => lng('domains.noaliasdomain')\n\t\t\t];\n\t\t\t$result_domains_stmt = Database::prepare(\"\n\t\t\t\t\tSELECT `d`.`id`, `d`.`domain`, `c`.`loginname` FROM `\" . TABLE_PANEL_DOMAINS . \"` `d`, `\" . TABLE_PANEL_CUSTOMERS . \"` `c`\n\t\t\t\t\tWHERE `d`.`aliasdomain` IS NULL AND `d`.`parentdomainid` = 0\" . $standardsubdomains . ($userinfo['customers_see_all'] ? '' : \" AND `d`.`adminid` = :adminid\") . \"\n\t\t\t\t\tAND `d`.`customerid`=`c`.`customerid` ORDER BY `loginname`, `domain` ASC\n\t\t\t\t\");\n\t\t\t$params = [];\n\t\t\tif ($userinfo['customers_see_all'] == '0') {\n\t\t\t\t$params['adminid'] = $userinfo['adminid'];\n\t\t\t}\n\t\t\tDatabase::pexecute($result_domains_stmt, $params);\n\n\t\t\twhile ($row_domain = $result_domains_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t$domains[$row_domain['id']] = $idna_convert->decode($row_domain['domain']) . ' (' . $row_domain['loginname'] . ')';\n\t\t\t}\n\n\t\t\t$phpconfigs = [];\n\t\t\t$configs = Database::query(\"\n\t\t\t\t\tSELECT c.*, fc.description as interpreter\n\t\t\t\t\tFROM `\" . TABLE_PANEL_PHPCONFIGS . \"` c\n\t\t\t\t\tLEFT JOIN `\" . TABLE_PANEL_FPMDAEMONS . \"` fc ON fc.id = c.fpmsettingid\n\t\t\t\t\");\n\n\t\t\twhile ($row = $configs->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\tif ((int)Settings::Get('phpfpm.enabled') == 1) {\n\t\t\t\t\t$phpconfigs[$row['id']] = $row['description'] . \" [\" . $row['interpreter'] . \"]\";\n\t\t\t\t} else {\n\t\t\t\t\t$phpconfigs[$row['id']] = $row['description'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$openbasedir = [\n\t\t\t\t0 => lng('domain.docroot'),\n\t\t\t\t1 => lng('domain.homedir'),\n\t\t\t\t2 => lng('domain.docparent')\n\t\t\t];\n\n\t\t\t// create serveralias options\n\t\t\t$serveraliasoptions = [\n\t\t\t\t0 => lng('domains.serveraliasoption_wildcard'),\n\t\t\t\t1 => lng('domains.serveraliasoption_www'),\n\t\t\t\t2 => lng('domains.serveraliasoption_none')\n\t\t\t];\n\n\t\t\t$subcanemaildomain = [\n\t\t\t\t0 => lng('admin.subcanemaildomain.never'),\n\t\t\t\t1 => lng('admin.subcanemaildomain.choosableno'),\n\t\t\t\t2 => lng('admin.subcanemaildomain.choosableyes'),\n\t\t\t\t3 => lng('admin.subcanemaildomain.always')\n\t\t\t];\n\n\t\t\t$domain_add_data = include_once dirname(__FILE__) . '/lib/formfields/admin/domains/formfield.domains_add.php';\n\n\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'domains']),\n\t\t\t\t'formdata' => $domain_add_data['domain_add']\n\t\t\t]);\n\t\t}\n\t} elseif ($action == 'edit' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Domains::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif ($result['domain'] != '') {\n\t\t\t$subdomains_stmt = Database::prepare(\"\n\t\t\t\tSELECT COUNT(`id`) AS count FROM `\" . TABLE_PANEL_DOMAINS . \"` WHERE\n\t\t\t\t`parentdomainid` = :resultid\n\t\t\t\");\n\t\t\t$subdomains = Database::pexecute_first($subdomains_stmt, [\n\t\t\t\t'resultid' => $result['id']\n\t\t\t]);\n\t\t\t$subdomains = $subdomains['count'];\n\n\t\t\t$alias_check_stmt = Database::prepare(\"\n\t\t\t\tSELECT COUNT(`id`) AS count FROM `\" . TABLE_PANEL_DOMAINS . \"` WHERE\n\t\t\t\t`aliasdomain` = :resultid\n\t\t\t\");\n\t\t\t$alias_check = Database::pexecute_first($alias_check_stmt, [\n\t\t\t\t'resultid' => $result['id']\n\t\t\t]);\n\t\t\t$alias_check = $alias_check['count'];\n\n\t\t\t$domain_emails_result_stmt = Database::prepare(\"\n\t\t\t\tSELECT `email`, `email_full`, `destination`, `popaccountid`\n\t\t\t\tFROM `\" . TABLE_MAIL_VIRTUAL . \"` WHERE `customerid` = :customerid AND `domainid` = :id\n\t\t\t\");\n\t\t\tDatabase::pexecute($domain_emails_result_stmt, [\n\t\t\t\t'customerid' => $result['customerid'],\n\t\t\t\t'id' => $result['id']\n\t\t\t]);\n\n\t\t\t$emails = Database::num_rows();\n\t\t\t$email_forwarders = 0;\n\t\t\t$email_accounts = 0;\n\n\t\t\twhile ($domain_emails_row = $domain_emails_result_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\tif ($domain_emails_row['destination'] != '') {\n\t\t\t\t\t$domain_emails_row['destination'] = explode(' ', FileDir::makeCorrectDestination($domain_emails_row['destination']));\n\t\t\t\t\t$email_forwarders += count($domain_emails_row['destination']);\n\n\t\t\t\t\tif (in_array($domain_emails_row['email_full'], $domain_emails_row['destination'])) {\n\t\t\t\t\t\t$email_forwarders -= 1;\n\t\t\t\t\t\t$email_accounts++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$ipsresult_stmt = Database::prepare(\"\n\t\t\t\tSELECT `id_ipandports` FROM `\" . TABLE_DOMAINTOIP . \"` WHERE `id_domain` = :id\n\t\t\t\");\n\t\t\tDatabase::pexecute($ipsresult_stmt, [\n\t\t\t\t'id' => $result['id']\n\t\t\t]);\n\n\t\t\t$usedips = [];\n\t\t\twhile ($ipsresultrow = $ipsresult_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t$usedips[] = $ipsresultrow['id_ipandports'];\n\t\t\t}\n\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\t// remove ssl ip/ports if set is empty\n\t\t\t\t\tif (empty(Request::post('ssl_ipandport'))) {\n\t\t\t\t\t\t$_POST['remove_ssl_ipandport'] = true;\n\t\t\t\t\t}\n\t\t\t\t\tDomains::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tif (Settings::Get('panel.allow_domain_change_customer') == '1') {\n\t\t\t\t\t$customers = [];\n\t\t\t\t\t$result_customers_stmt = Database::prepare(\"\n\t\t\t\t\t\tSELECT `customerid`, `loginname`, `name`, `firstname`, `company` FROM `\" . TABLE_PANEL_CUSTOMERS . \"`\n\t\t\t\t\t\tWHERE ( (`subdomains_used` + :subdomains <= `subdomains` OR `subdomains` = '-1' )\n\t\t\t\t\t\tAND (`emails_used` + :emails <= `emails` OR `emails` = '-1' )\n\t\t\t\t\t\tAND (`email_forwarders_used` + :forwarders <= `email_forwarders` OR `email_forwarders` = '-1' )\n\t\t\t\t\t\tAND (`email_accounts_used` + :accounts <= `email_accounts` OR `email_accounts` = '-1' ) \" . ($userinfo['customers_see_all'] ? '' : \" AND `adminid` = :adminid \") . \")\n\t\t\t\t\t\tOR `customerid` = :customerid ORDER BY `name` ASC\n\t\t\t\t\t\");\n\t\t\t\t\t$params = [\n\t\t\t\t\t\t'subdomains' => $subdomains,\n\t\t\t\t\t\t'emails' => $emails,\n\t\t\t\t\t\t'forwarders' => $email_forwarders,\n\t\t\t\t\t\t'accounts' => $email_accounts,\n\t\t\t\t\t\t'customerid' => $result['customerid']\n\t\t\t\t\t];\n\t\t\t\t\tif ($userinfo['customers_see_all'] == '0') {\n\t\t\t\t\t\t$params['adminid'] = $userinfo['adminid'];\n\t\t\t\t\t}\n\t\t\t\t\tDatabase::pexecute($result_customers_stmt, $params);\n\n\t\t\t\t\twhile ($row_customer = $result_customers_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t\t$customers[$row_customer['customerid']] = User::getCorrectFullUserDetails($row_customer) . ' (' . $row_customer['loginname'] . ')';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$customer_stmt = Database::prepare(\"\n\t\t\t\t\t\tSELECT `customerid`, `loginname`, `name`, `firstname`, `company` FROM `\" . TABLE_PANEL_CUSTOMERS . \"`\n\t\t\t\t\t\tWHERE `customerid` = :customerid\n\t\t\t\t\t\");\n\t\t\t\t\t$customer = Database::pexecute_first($customer_stmt, [\n\t\t\t\t\t\t'customerid' => $result['customerid']\n\t\t\t\t\t]);\n\t\t\t\t\t$result['customername'] = User::getCorrectFullUserDetails($customer);\n\t\t\t\t}\n\n\t\t\t\tif ($userinfo['customers_see_all'] == '1') {\n\t\t\t\t\tif (Settings::Get('panel.allow_domain_change_admin') == '1') {\n\t\t\t\t\t\t$admins = [];\n\t\t\t\t\t\t$result_admins_stmt = Database::prepare(\"\n\t\t\t\t\t\t\tSELECT `adminid`, `loginname`, `name` FROM `\" . TABLE_PANEL_ADMINS . \"`\n\t\t\t\t\t\t\tWHERE (`domains_used` < `domains` OR `domains` = '-1') OR `adminid` = :adminid ORDER BY `name` ASC\n\t\t\t\t\t\t\");\n\t\t\t\t\t\tDatabase::pexecute($result_admins_stmt, [\n\t\t\t\t\t\t\t'adminid' => $result['adminid']\n\t\t\t\t\t\t]);\n\n\t\t\t\t\t\twhile ($row_admin = $result_admins_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t\t\t$admins[$row_admin['adminid']] = User::getCorrectFullUserDetails($row_admin) . ' (' . $row_admin['loginname'] . ')';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$admin_stmt = Database::prepare(\"\n\t\t\t\t\t\t\tSELECT `adminid`, `loginname`, `name` FROM `\" . TABLE_PANEL_ADMINS . \"` WHERE `adminid` = :adminid\n\t\t\t\t\t\t\");\n\t\t\t\t\t\t$admin = Database::pexecute_first($admin_stmt, [\n\t\t\t\t\t\t\t'adminid' => $result['adminid']\n\t\t\t\t\t\t]);\n\t\t\t\t\t\t$result['adminname'] = User::getCorrectFullUserDetails($admin) . ' (' . $admin['loginname'] . ')';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$domains = [\n\t\t\t\t\t0 => lng('domains.noaliasdomain')\n\t\t\t\t];\n\n\t\t\t\t$result_domains_stmt = Database::prepare(\"\n\t\t\t\t\tSELECT `d`.`id`, `d`.`domain`  FROM `\" . TABLE_PANEL_DOMAINS . \"` `d`, `\" . TABLE_PANEL_CUSTOMERS . \"` `c`\n\t\t\t\t\tWHERE `d`.`aliasdomain` IS NULL AND `d`.`parentdomainid` = '0' AND `d`.`id` <> :id\n\t\t\t\t\tAND `c`.`standardsubdomain`<>`d`.`id` AND `d`.`customerid` = :customerid AND `c`.`customerid`=`d`.`customerid`\n\t\t\t\t\tORDER BY `d`.`domain` ASC\n\t\t\t\t\");\n\t\t\t\tDatabase::pexecute($result_domains_stmt, [\n\t\t\t\t\t'id' => $result['id'],\n\t\t\t\t\t'customerid' => $result['customerid']\n\t\t\t\t]);\n\n\t\t\t\twhile ($row_domain = $result_domains_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t$domains[$row_domain['id']] = $idna_convert->decode($row_domain['domain']);\n\t\t\t\t}\n\n\t\t\t\tif ($userinfo['ip'] == \"-1\") {\n\t\t\t\t\t$result_ipsandports_stmt = Database::query(\"\n\t\t\t\t\t\tSELECT `id`, `ip`, `port` FROM `\" . TABLE_PANEL_IPSANDPORTS . \"` WHERE `ssl`='0' ORDER BY `ip`, `port` ASC\n\t\t\t\t\t\");\n\t\t\t\t\t$result_ssl_ipsandports_stmt = Database::query(\"\n\t\t\t\t\t\tSELECT `id`, `ip`, `port` FROM `\" . TABLE_PANEL_IPSANDPORTS . \"` WHERE `ssl`='1' ORDER BY `ip`, `port` ASC\n\t\t\t\t\t\");\n\t\t\t\t} else {\n\t\t\t\t\t$admin_ip_stmt = Database::prepare(\"\n\t\t\t\t\t\tSELECT `id`, `ip`, `port` FROM `\" . TABLE_PANEL_IPSANDPORTS . \"` WHERE `id` = :ipid ORDER BY `ip`, `port` ASC\n\t\t\t\t\t\");\n\t\t\t\t\t$admin_ip = Database::pexecute_first($admin_ip_stmt, [\n\t\t\t\t\t\t'ipid' => $userinfo['ip']\n\t\t\t\t\t]);\n\n\t\t\t\t\t$result_ipsandports_stmt = Database::prepare(\"\n\t\t\t\t\t\tSELECT `id`, `ip`, `port` FROM `\" . TABLE_PANEL_IPSANDPORTS . \"` WHERE `ssl`='0' AND `ip` = :ipid ORDER BY `ip`, `port` ASC\n\t\t\t\t\t\");\n\t\t\t\t\tDatabase::pexecute($result_ipsandports_stmt, [\n\t\t\t\t\t\t'ipid' => $admin_ip['ip']\n\t\t\t\t\t]);\n\n\t\t\t\t\t$result_ssl_ipsandports_stmt = Database::prepare(\"\n\t\t\t\t\t\tSELECT `id`, `ip`, `port` FROM `\" . TABLE_PANEL_IPSANDPORTS . \"` WHERE `ssl`='1' AND `ip` = :ipid ORDER BY `ip`, `port` ASC\n\t\t\t\t\t\");\n\t\t\t\t\tDatabase::pexecute($result_ssl_ipsandports_stmt, [\n\t\t\t\t\t\t'ipid' => $admin_ip['ip']\n\t\t\t\t\t]);\n\t\t\t\t}\n\n\t\t\t\t$ipsandports = [];\n\t\t\t\twhile ($row_ipandport = $result_ipsandports_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\tif (filter_var($row_ipandport['ip'], FILTER_VALIDATE_IP, FILTER_FLAG_IPV6)) {\n\t\t\t\t\t\t$row_ipandport['ip'] = '[' . $row_ipandport['ip'] . ']';\n\t\t\t\t\t}\n\t\t\t\t\t$ipsandports[] = [\n\t\t\t\t\t\t'label' => $row_ipandport['ip'] . ':' . $row_ipandport['port'],\n\t\t\t\t\t\t'value' => $row_ipandport['id']\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\t$ssl_ipsandports = [];\n\t\t\t\twhile ($row_ssl_ipandport = $result_ssl_ipsandports_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\tif (filter_var($row_ssl_ipandport['ip'], FILTER_VALIDATE_IP, FILTER_FLAG_IPV6)) {\n\t\t\t\t\t\t$row_ssl_ipandport['ip'] = '[' . $row_ssl_ipandport['ip'] . ']';\n\t\t\t\t\t}\n\t\t\t\t\t$ssl_ipsandports[] = [\n\t\t\t\t\t\t'label' => $row_ssl_ipandport['ip'] . ':' . $row_ssl_ipandport['port'],\n\t\t\t\t\t\t'value' => $row_ssl_ipandport['id']\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\t// check that letsencrypt is not activated for wildcard domain\n\t\t\t\tif ($result['iswildcarddomain'] == '1') {\n\t\t\t\t\t$letsencrypt = 0;\n\t\t\t\t}\n\n\t\t\t\t// Fudge the result for ssl_redirect to hide the Let's Encrypt steps\n\t\t\t\t$result['temporary_ssl_redirect'] = $result['ssl_redirect'];\n\t\t\t\t$result['ssl_redirect'] = ($result['ssl_redirect'] == 0 ? 0 : 1);\n\n\t\t\t\t$openbasedir = [\n\t\t\t\t\t0 => lng('domain.docroot'),\n\t\t\t\t\t1 => lng('domain.homedir'),\n\t\t\t\t\t2 => lng('domain.docparent')\n\t\t\t\t];\n\n\t\t\t\t$serveraliasoptions = [\n\t\t\t\t\t0 => lng('domains.serveraliasoption_wildcard'),\n\t\t\t\t\t1 => lng('domains.serveraliasoption_www'),\n\t\t\t\t\t2 => lng('domains.serveraliasoption_none')\n\t\t\t\t];\n\n\t\t\t\t$subcanemaildomain = [\n\t\t\t\t\t0 => lng('admin.subcanemaildomain.never'),\n\t\t\t\t\t1 => lng('admin.subcanemaildomain.choosableno'),\n\t\t\t\t\t2 => lng('admin.subcanemaildomain.choosableyes'),\n\t\t\t\t\t3 => lng('admin.subcanemaildomain.always')\n\t\t\t\t];\n\n\t\t\t\t$phpconfigs = [];\n\t\t\t\t$phpconfigs_result_stmt = Database::query(\"\n\t\t\t\t\tSELECT c.*, fc.description as interpreter\n\t\t\t\t\tFROM `\" . TABLE_PANEL_PHPCONFIGS . \"` c\n\t\t\t\t\tLEFT JOIN `\" . TABLE_PANEL_FPMDAEMONS . \"` fc ON fc.id = c.fpmsettingid\n\t\t\t\t\");\n\t\t\t\t$c_allowed_configs = Customer::getCustomerDetail($result['customerid'], 'allowed_phpconfigs');\n\t\t\t\tif (!empty($c_allowed_configs)) {\n\t\t\t\t\t$c_allowed_configs = json_decode($c_allowed_configs, true);\n\t\t\t\t} else {\n\t\t\t\t\t$c_allowed_configs = [];\n\t\t\t\t}\n\n\t\t\t\twhile ($phpconfigs_row = $phpconfigs_result_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t$disabled = !empty($c_allowed_configs) && !in_array($phpconfigs_row['id'], $c_allowed_configs);\n\t\t\t\t\tif (!$disabled) {\n\t\t\t\t\t\tif ((int)Settings::Get('phpfpm.enabled') == 1) {\n\t\t\t\t\t\t\t$phpconfigs[$phpconfigs_row['id']] = $phpconfigs_row['description'] . \" [\" . $phpconfigs_row['interpreter'] . \"]\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$phpconfigs[$phpconfigs_row['id']] = $phpconfigs_row['description'];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (Settings::Get('panel.allow_domain_change_customer') != '1') {\n\t\t\t\t\t$result['customername'] .= ' (<a href=\"' . $linker->getLink([\n\t\t\t\t\t\t\t'section' => 'customers',\n\t\t\t\t\t\t\t'page' => 'customers',\n\t\t\t\t\t\t\t'action' => 'su',\n\t\t\t\t\t\t\t'id' => $customer['customerid']\n\t\t\t\t\t\t]) . '\" rel=\"external\">' . $customer['loginname'] . '</a>)';\n\t\t\t\t}\n\n\t\t\t\t$domain_edit_data = include_once dirname(__FILE__) . '/lib/formfields/admin/domains/formfield.domains_edit.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'domains', 'id' => $id]),\n\t\t\t\t\t'formdata' => $domain_edit_data['domain_edit'],\n\t\t\t\t\t'editid' => $id\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'jqGetCustomerPHPConfigs') {\n\t\t$customerid = intval(Request::post('customerid'));\n\t\t$allowed_phpconfigs = Customer::getCustomerDetail($customerid, 'allowed_phpconfigs');\n\t\techo !empty($allowed_phpconfigs) ? $allowed_phpconfigs : json_encode([]);\n\t\texit();\n\t} elseif ($action == 'jqSpeciallogfileNote') {\n\t\t$domainid = intval(Request::post('id'));\n\t\t$newval = intval(Request::post('newval'));\n\t\ttry {\n\t\t\t$json_result = Domains::getLocal($userinfo, [\n\t\t\t\t'id' => $domainid\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\t\tif ($newval != $result['speciallogfile']) {\n\t\t\techo json_encode(['changed' => true, 'info' => lng('admin.speciallogwarning')]);\n\t\t\texit();\n\t\t}\n\t\techo 0;\n\t\texit();\n\t} elseif ($action == 'jqEmaildomainNote') {\n\t\t$domainid = intval(Request::post('id'));\n\t\t$newval = intval(Request::post('newval'));\n\t\ttry {\n\t\t\t$json_result = Domains::getLocal($userinfo, [\n\t\t\t\t'id' => $domainid\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\t\tif ((int)$newval == 0 && $newval != $result['isemaildomain']) {\n\t\t\techo json_encode(['changed' => true, 'info' => lng('admin.emaildomainwarning')]);\n\t\t\texit();\n\t\t}\n\t\techo 0;\n\t\texit();\n\t} elseif ($action == 'import') {\n\t\tif (Request::post('send') == 'send') {\n\t\t\t$separator = Validate::validate(Request::post('separator'), 'separator');\n\t\t\t$offset = (int)Validate::validate(Request::post('offset'), 'offset', \"/[0-9]/i\");\n\n\t\t\t$file_name = $_FILES['file']['tmp_name'];\n\n\t\t\t$result = [];\n\n\t\t\ttry {\n\t\t\t\t$bulk = new DomainBulkAction($file_name, $userinfo);\n\t\t\t\t$result = $bulk->doImport($separator, $offset);\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::standardError('domain_import_error', $e->getMessage());\n\t\t\t}\n\n\t\t\tif (!empty($bulk->getErrors())) {\n\t\t\t\tResponse::dynamicError(implode(\"<br>\", $bulk->getErrors()));\n\t\t\t}\n\n\t\t\t// update customer/admin counters\n\t\t\tUser::updateCounters(false);\n\t\t\tCronjob::inserttask(TaskId::REBUILD_VHOST);\n\t\t\tCronjob::inserttask(TaskId::REBUILD_DNS);\n\n\t\t\t$result_str = $result['imported'] . ' / ' . $result['all'] . (!empty($result['note']) ? ' (' . $result['note'] . ')' : '');\n\t\t\tResponse::standardSuccess('domain_import_successfully', $result_str, [\n\t\t\t\t'filename' => $filename,\n\t\t\t\t'action' => '',\n\t\t\t\t'page' => 'domains'\n\t\t\t]);\n\t\t} else {\n\t\t\t$domain_import_data = include_once dirname(__FILE__) . '/lib/formfields/admin/domains/formfield.domains_import.php';\n\n\t\t\tUI::view('user/form-note.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'domains', 'page' => $page]),\n\t\t\t\t'formdata' => $domain_import_data['domain_import'],\n\t\t\t\t// alert-box\n\t\t\t\t'type' => 'info',\n\t\t\t\t'alert_msg' => lng('domains.import_description')\n\t\t\t]);\n\t\t}\n\t} elseif ($action == 'duplicate') {\n\t\tif (Request::post('send') == 'send') {\n\t\t\ttry {\n\t\t\t\tDomains::getLocal($userinfo, Request::postAll())->duplicate();\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page,\n\t\t\t\t'searchfield' => 'd.domain_ace',\n\t\t\t\t'searchtext' => Request::post('domain', \"\")\n\t\t\t]);\n\t\t} else {\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => 'overview'\n\t\t\t]);\n\t\t}\n\t}\n} elseif ($page == 'domainssleditor') {\n\trequire_once __DIR__ . '/ssl_editor.php';\n} elseif ($page == 'domaindnseditor' && Settings::Get('system.dnsenabled') == '1') {\n\trequire_once __DIR__ . '/dns_editor.php';\n} elseif ($page == 'sslcertificates') {\n\trequire_once __DIR__ . '/ssl_certificates.php';\n} elseif ($page == 'logfiles') {\n\trequire_once __DIR__ . '/logfiles_viewer.php';\n}\n"
        },
        {
          "name": "admin_index.php",
          "type": "blob",
          "size": 11.205078125,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\Admins as Admins;\nuse Froxlor\\Api\\Commands\\Froxlor as Froxlor;\nuse Froxlor\\CurrentUser;\nuse Froxlor\\Database\\Database;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\Language;\nuse Froxlor\\Settings;\nuse Froxlor\\System\\Cronjob;\nuse Froxlor\\System\\Crypt;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\nuse Froxlor\\Validate\\Validate;\n\n$id = (int)Request::any('id');\n\nif ($action == 'logout') {\n\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"logged out\");\n\tunset($_SESSION['userinfo']);\n\tCurrentUser::setData();\n\tsession_destroy();\n\n\tResponse::redirectTo('index.php');\n} elseif ($action == 'suback') {\n\tif (is_array(CurrentUser::getField('switched_user'))) {\n\t\t$result = CurrentUser::getData();\n\t\t$result = $result['switched_user'];\n\t\tsession_regenerate_id(true);\n\t\tCurrentUser::setData($result);\n\t\t$target = Request::get('target', 'index');\n\t\t$redirect = \"admin_\" . $target . \".php\";\n\t\tif (!file_exists(\\Froxlor\\Froxlor::getInstallDir() . \"/\" . $redirect)) {\n\t\t\t$redirect = \"admin_index.php\";\n\t\t}\n\t\tResponse::redirectTo($redirect, null, true);\n\t} else {\n\t\tResponse::dynamicError(\"Cannot change back - You've never switched to another user :-)\");\n\t}\n}\n\nif ($page == 'overview') {\n\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"viewed admin_index\");\n\t$params = [];\n\tif ($userinfo['customers_see_all'] == '0') {\n\t\t$params = [\n\t\t\t'adminid' => $userinfo['adminid']\n\t\t];\n\t}\n\t$overview_stmt = Database::prepare(\"SELECT COUNT(*) AS `number_customers`,\n\t\t\t\tSUM(case when `diskspace` > 0 then `diskspace` else 0 end) AS `diskspace_assigned`,\n\t\t\t\tSUM(`diskspace_used`) AS `diskspace_used`,\n\t\t\t\tSUM(case when `mysqls` > 0 then `mysqls` else 0 end) AS `mysqls_assigned`,\n\t\t\t\tSUM(`mysqls_used`) AS `mysqls_used`,\n\t\t\t\tSUM(case when `emails` > 0 then `emails` else 0 end) AS `emails_assigned`,\n\t\t\t\tSUM(`emails_used`) AS `emails_used`,\n\t\t\t\tSUM(case when `email_accounts` > 0 then `email_accounts` else 0 end) AS `email_accounts_assigned`,\n\t\t\t\tSUM(`email_accounts_used`) AS `email_accounts_used`,\n\t\t\t\tSUM(case when `email_forwarders` > 0 then `email_forwarders` else 0 end) AS `email_forwarders_assigned`,\n\t\t\t\tSUM(`email_forwarders_used`) AS `email_forwarders_used`,\n\t\t\t\tSUM(case when `email_quota` > 0 then `email_quota` else 0 end) AS `email_quota_assigned`,\n\t\t\t\tSUM(`email_quota_used`) AS `email_quota_used`,\n\t\t\t\tSUM(case when `ftps` > 0 then `ftps` else 0 end) AS `ftps_assigned`,\n\t\t\t\tSUM(`ftps_used`) AS `ftps_used`,\n\t\t\t\tSUM(case when `subdomains` > 0 then `subdomains` else 0 end) AS `subdomains_assigned`,\n\t\t\t\tSUM(`subdomains_used`) AS `subdomains_used`,\n\t\t\t\tSUM(case when `traffic` > 0 then `traffic` else 0 end) AS `traffic_assigned`,\n\t\t\t\tSUM(`traffic_used`) AS `traffic_used`\n\t\t\t\tFROM `\" . TABLE_PANEL_CUSTOMERS . \"`\" . ($userinfo['customers_see_all'] ? '' : \" WHERE `adminid` = :adminid \"));\n\t$overview = Database::pexecute_first($overview_stmt, $params);\n\n\t$userinfo['diskspace_bytes'] = ($userinfo['diskspace'] > -1) ? $userinfo['diskspace'] * 1024 : -1;\n\t$overview['diskspace_bytes'] = $overview['diskspace_assigned'] * 1024;\n\t$overview['diskspace_bytes_used'] = $overview['diskspace_used'] * 1024;\n\n\t$userinfo['traffic_bytes'] = ($userinfo['traffic'] > -1) ? $userinfo['traffic'] * 1024 : -1;\n\t$overview['traffic_bytes'] = $overview['traffic_assigned'] * 1024;\n\t$overview['traffic_bytes_used'] = $overview['traffic_used'] * 1024;\n\n\t$number_domains_stmt = Database::prepare(\"\n\t\tSELECT COUNT(*) AS `number_domains` FROM `\" . TABLE_PANEL_DOMAINS . \"`\n\t\tWHERE `parentdomainid`='0'\" . ($userinfo['customers_see_all'] ? '' : \" AND `adminid` = :adminid\"));\n\t$number_domains = Database::pexecute_first($number_domains_stmt, $params);\n\n\t$overview['number_domains'] = $number_domains['number_domains'];\n\n\tif (Request::get('lookfornewversion') == 'yes' || (isset($lookfornewversion) && $lookfornewversion == 'yes')) {\n\t\ttry {\n\t\t\t$json_result = Froxlor::getLocal($userinfo)->checkUpdate();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\t$lookfornewversion_lable = $result['version'];\n\t\t$lookfornewversion_link = $result['link'];\n\t\t$lookfornewversion_message = $result['message'];\n\t\t$lookfornewversion_addinfo = $result['additional_info'];\n\t\t$isnewerversion = $result['isnewerversion'];\n\t} else {\n\t\t$lookfornewversion_lable = lng('admin.lookfornewversion.clickhere');\n\t\t$lookfornewversion_link = htmlspecialchars($filename . '?page=' . urlencode($page) . '&lookfornewversion=yes');\n\t\t$lookfornewversion_message = '';\n\t\t$lookfornewversion_addinfo = '';\n\t\t$isnewerversion = 0;\n\t}\n\n\t$cron_last_runs = Cronjob::getCronjobsLastRun();\n\t$outstanding_tasks = Cronjob::getOutstandingTasks();\n\n\t// additional sys-infos\n\t$meminfo = explode(\"\\n\", @file_get_contents(\"/proc/meminfo\"));\n\t$memory = \"\";\n\tfor ($i = 0; $i < count($meminfo); ++$i) {\n\t\tif (substr($meminfo[$i], 0, 3) === \"Mem\") {\n\t\t\t$memory .= $meminfo[$i] . PHP_EOL;\n\t\t}\n\t}\n\n\tif (function_exists('sys_getloadavg')) {\n\t\t$loadArray = sys_getloadavg();\n\t\t$load = number_format($loadArray[0], 2, '.', '') . \" / \" . number_format($loadArray[1], 2, '.', '') . \" / \" . number_format($loadArray[2], 2, '.', '');\n\t} else {\n\t\t$load = @file_get_contents('/proc/loadavg');\n\t\tif (!$load) {\n\t\t\t$load = lng('admin.noloadavailable');\n\t\t}\n\t}\n\n\t$kernel = '';\n\tif (function_exists('posix_uname')) {\n\t\t$kernel_nfo = posix_uname();\n\t\t$kernel = $kernel_nfo['release'] . ' (' . $kernel_nfo['machine'] . ')';\n\t}\n\n\t// Try to get the uptime\n\t// First: With exec (let's hope it's enabled for the Froxlor - vHost)\n\t$uptime_array = explode(\" \", @file_get_contents(\"/proc/uptime\"));\n\t$uptime = '';\n\tif (is_array($uptime_array) && isset($uptime_array[0]) && is_numeric($uptime_array[0])) {\n\t\t// Some calculatioon to get a nicly formatted display\n\t\t$seconds = round($uptime_array[0], 0);\n\t\t$minutes = $seconds / 60;\n\t\t$hours = $minutes / 60;\n\t\t$days = floor($hours / 24);\n\t\t$hours = floor($hours - ($days * 24));\n\t\t$minutes = floor($minutes - ($days * 24 * 60) - ($hours * 60));\n\t\t$seconds = floor($seconds - ($days * 24 * 60 * 60) - ($hours * 60 * 60) - ($minutes * 60));\n\t\t$uptime = \"{$days}d, {$hours}h, {$minutes}m, {$seconds}s\";\n\t\t// Just cleanup\n\t\tunset($uptime_array, $seconds, $minutes, $hours, $days);\n\t}\n\n\t$sysinfo = [\n\t\t'webserver' => $_SERVER['SERVER_SOFTWARE'] ?? 'unknown',\n\t\t'phpversion' => phpversion(),\n\t\t'mysqlserverversion' => Database::getAttribute(PDO::ATTR_SERVER_VERSION),\n\t\t'phpsapi' => strtoupper(@php_sapi_name()),\n\t\t'hostname' => gethostname(),\n\t\t'memory' => $memory,\n\t\t'load' => $load,\n\t\t'kernel' => $kernel,\n\t\t'uptime' => $uptime\n\t];\n\n\tUI::twig()->addGlobal('userinfo', $userinfo);\n\tUI::view('user/index.html.twig', [\n\t\t'sysinfo' => $sysinfo,\n\t\t'overview' => $overview,\n\t\t'outstanding_tasks' => $outstanding_tasks,\n\t\t'cron_last_runs' => $cron_last_runs\n\t]);\n} elseif ($page == 'profile') {\n\t$languages = Language::getLanguages();\n\n\tif (!empty($_POST)) {\n\t\tif (Request::post('send') == 'changepassword') {\n\t\t\t$old_password = Validate::validate(Request::post('old_password'), 'old password');\n\n\t\t\tif (!Crypt::validatePasswordLogin($userinfo, $old_password, TABLE_PANEL_ADMINS, 'adminid')) {\n\t\t\t\tResponse::standardError('oldpasswordnotcorrect');\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t$new_password = Crypt::validatePassword(Request::post('new_password'), 'new password');\n\t\t\t\t$new_password_confirm = Crypt::validatePassword(Request::post('new_password_confirm'), 'new password confirm');\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\n\t\t\tif ($old_password == '') {\n\t\t\t\tResponse::standardError([\n\t\t\t\t\t'stringisempty',\n\t\t\t\t\t'changepassword.old_password'\n\t\t\t\t]);\n\t\t\t} elseif ($new_password == '') {\n\t\t\t\tResponse::standardError([\n\t\t\t\t\t'stringisempty',\n\t\t\t\t\t'changepassword.new_password'\n\t\t\t\t]);\n\t\t\t} elseif ($new_password_confirm == '') {\n\t\t\t\tResponse::standardError([\n\t\t\t\t\t'stringisempty',\n\t\t\t\t\t'changepassword.new_password_confirm'\n\t\t\t\t]);\n\t\t\t} elseif ($new_password != $new_password_confirm) {\n\t\t\t\tResponse::standardError('newpasswordconfirmerror');\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tAdmins::getLocal($userinfo, [\n\t\t\t\t\t\t'id' => $userinfo['adminid'],\n\t\t\t\t\t\t'admin_password' => $new_password\n\t\t\t\t\t])->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, 'changed password');\n\t\t\t\tResponse::redirectTo($filename);\n\t\t\t}\n\t\t} elseif (Request::post('send') == 'changetheme') {\n\t\t\tif (Settings::Get('panel.allow_theme_change_admin') == 1) {\n\t\t\t\t$theme = Validate::validate(Request::post('theme'), 'theme');\n\t\t\t\ttry {\n\t\t\t\t\tAdmins::getLocal($userinfo, [\n\t\t\t\t\t\t'id' => $userinfo['adminid'],\n\t\t\t\t\t\t'theme' => $theme\n\t\t\t\t\t])->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\n\t\t\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"changed his/her theme to '\" . $theme . \"'\");\n\t\t\t}\n\t\t\tResponse::redirectTo($filename);\n\t\t} elseif (Request::post('send') == 'changelanguage') {\n\t\t\t$def_language = Validate::validate(Request::post('def_language'), 'default language');\n\n\t\t\tif (isset($languages[$def_language])) {\n\t\t\t\ttry {\n\t\t\t\t\tAdmins::getLocal($userinfo, [\n\t\t\t\t\t\t'id' => $userinfo['adminid'],\n\t\t\t\t\t\t'def_language' => $def_language\n\t\t\t\t\t])->update();\n\t\t\t\t\tCurrentUser::setField('language', $def_language);\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t}\n\t\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"changed his/her default language to '\" . $def_language . \"'\");\n\t\t\tResponse::redirectTo($filename);\n\t\t}\n\t} else {\n\t\t// change theme\n\t\t$default_theme = Settings::Get('panel.default_theme');\n\t\tif ($userinfo['theme'] != '') {\n\t\t\t$default_theme = $userinfo['theme'];\n\t\t}\n\t\t$themes_avail = UI::getThemes();\n\n\t\t// change language\n\t\t$default_lang = Settings::Get('panel.standardlanguage');\n\t\tif ($userinfo['def_language'] != '') {\n\t\t\t$default_lang = $userinfo['def_language'];\n\t\t}\n\n\t\tUI::view('user/profile.html.twig', [\n\t\t\t'themes' => $themes_avail,\n\t\t\t'default_theme' => $default_theme,\n\t\t\t'languages' => $languages,\n\t\t\t'default_lang' => $default_lang,\n\t\t]);\n\t}\n} elseif ($page == 'send_error_report' && Settings::Get('system.allow_error_report_admin') == '1') {\n\trequire_once __DIR__ . '/error_report.php';\n} elseif ($page == 'apikeys' && Settings::Get('api.enabled') == 1) {\n\trequire_once __DIR__ . '/api_keys.php';\n} elseif ($page == '2fa' && Settings::Get('2fa.enabled') == 1) {\n\trequire_once __DIR__ . '/2fa.php';\n}\n"
        },
        {
          "name": "admin_ipsandports.php",
          "type": "blob",
          "size": 4.9892578125,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\IpsAndPorts;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\PhpHelper;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n$id = (int)Request::any('id');\n\nif (($page == 'ipsandports' || $page == 'overview') && $userinfo['change_serversettings'] == '1') {\n\tif ($action == '') {\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"viewed admin_ipsandports\");\n\n\t\ttry {\n\t\t\t$ipsandports_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/admin/tablelisting.ipsandports.php';\n\t\t\t$collection = (new Collection(IpsAndPorts::class, $userinfo))\n\t\t\t\t->withPagination($ipsandports_list_data['ipsandports_list']['columns'], $ipsandports_list_data['ipsandports_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\tUI::view('user/table.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $ipsandports_list_data, 'ipsandports_list'),\n\t\t\t'actions_links' => [\n\t\t\t\t[\n\t\t\t\t\t'href' => $linker->getLink(['section' => 'ipsandports', 'page' => $page, 'action' => 'add']),\n\t\t\t\t\t'label' => lng('admin.ipsandports.add')\n\t\t\t\t]\n\t\t\t]\n\t\t]);\n\t} elseif ($action == 'delete' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = IpsAndPorts::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['id']) && $result['id'] == $id) {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tIpsAndPorts::getLocal($userinfo, [\n\t\t\t\t\t\t'id' => $id\n\t\t\t\t\t])->delete();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tHTML::askYesNo('admin_ip_reallydelete', $filename, [\n\t\t\t\t\t'id' => $id,\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => $action\n\t\t\t\t], $result['ip'] . ':' . $result['port']);\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'add') {\n\t\tif (Request::post('send') == 'send') {\n\t\t\ttry {\n\t\t\t\tIpsAndPorts::getLocal($userinfo, Request::postAll())->add();\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t} else {\n\t\t\t$ipsandports_add_data = include_once dirname(__FILE__) . '/lib/formfields/admin/ipsandports/formfield.ipsandports_add.php';\n\n\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'ipsandports']),\n\t\t\t\t'formdata' => $ipsandports_add_data['ipsandports_add']\n\t\t\t]);\n\t\t}\n\t} elseif ($action == 'edit' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = IpsAndPorts::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif ($result['ip'] != '') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tIpsAndPorts::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$result = PhpHelper::htmlentitiesArray($result);\n\n\t\t\t\t$ipsandports_edit_data = include_once dirname(__FILE__) . '/lib/formfields/admin/ipsandports/formfield.ipsandports_edit.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'ipsandports', 'id' => $id]),\n\t\t\t\t\t'formdata' => $ipsandports_edit_data['ipsandports_edit'],\n\t\t\t\t\t'editid' => $id\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'jqCheckIP') {\n\t\t$ip = Request::post('ip', '');\n\t\tif (!filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4 | FILTER_FLAG_IPV6)) {\n\t\t\techo json_encode('<div id=\"ipnote\" class=\"invalid-feedback\">'.lng('error.invalidip', [$ip]).'</div>');\n\t\t} elseif (!filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_NO_RES_RANGE | FILTER_FLAG_NO_PRIV_RANGE)) {\n\t\t\t// returns notice if private network detected, so we can display it\n\t\t\techo json_encode(lng('admin.ipsandports.ipnote'));\n\t\t} else {\n\t\t\techo 0;\n\t\t}\n\t\texit();\n\t}\n}\n"
        },
        {
          "name": "admin_logger.php",
          "type": "blob",
          "size": 2.4013671875,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\SysLog;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\nif ($page == 'log' && $userinfo['change_serversettings'] == '1') {\n\tif ($action == '') {\n\t\ttry {\n\t\t\t$syslog_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/tablelisting.syslog.php';\n\t\t\t$collection = (new Collection(SysLog::class, $userinfo))\n\t\t\t\t->withPagination($syslog_list_data['syslog_list']['columns'], $syslog_list_data['syslog_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\tUI::view('user/table.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $syslog_list_data, 'syslog_list'),\n\t\t\t'actions_links' => [\n\t\t\t\t[\n\t\t\t\t\t'href' => $linker->getLink(['section' => 'logger', 'page' => 'log', 'action' => 'truncate']),\n\t\t\t\t\t'label' => lng('logger.truncate'),\n\t\t\t\t\t'icon' => 'fa-solid fa-recycle',\n\t\t\t\t\t'class' => 'btn-warning'\n\t\t\t\t]\n\t\t\t]\n\t\t]);\n\t} elseif ($action == 'truncate') {\n\t\tif (Request::post('send') == 'send') {\n\t\t\ttry {\n\t\t\t\tSysLog::getLocal($userinfo, [\n\t\t\t\t\t'min_to_keep' => 10\n\t\t\t\t])->delete();\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t} else {\n\t\t\tHTML::askYesNo('logger_reallytruncate', $filename, [\n\t\t\t\t'page' => $page,\n\t\t\t\t'action' => $action\n\t\t\t], TABLE_PANEL_LOG);\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "admin_message.php",
          "type": "blob",
          "size": 4.7373046875,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Database\\Database;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\nuse Froxlor\\User;\n\n$id = (int)Request::any('id');\n\n$note_type = null;\n$note_msg = null;\n\nif ($page == 'message') {\n\tif ($action == '') {\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, 'viewed panel_message');\n\n\t\tif (Request::post('send') == 'send') {\n\t\t\tif (Request::post('recipient', -1) == 0 && $userinfo['customers_see_all'] == '1') {\n\t\t\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, 'sending messages to admins');\n\t\t\t\t$result = Database::query('SELECT `name`, `email`  FROM `' . TABLE_PANEL_ADMINS . \"`\");\n\t\t\t} elseif (Request::post('recipient', -1) == 1) {\n\t\t\t\tif ($userinfo['customers_see_all'] == '1') {\n\t\t\t\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, 'sending messages to ALL customers');\n\t\t\t\t\t$result = Database::query('SELECT `firstname`, `name`, `company`, `email`  FROM `' . TABLE_PANEL_CUSTOMERS . \"`\");\n\t\t\t\t} else {\n\t\t\t\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, 'sending messages to customers');\n\t\t\t\t\t$result = Database::prepare('\n\t\t\t\t\t\tSELECT `firstname`, `name`, `company`, `email`  FROM `' . TABLE_PANEL_CUSTOMERS . \"`\n\t\t\t\t\t\tWHERE `adminid` = :adminid\");\n\t\t\t\t\tDatabase::pexecute($result, [\n\t\t\t\t\t\t'adminid' => $userinfo['adminid']\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tResponse::standardError('norecipientsgiven');\n\t\t\t}\n\n\t\t\t$subject = Request::post('subject');\n\t\t\t$message = wordwrap(Request::post('message'), 70);\n\n\t\t\tif (!empty($message)) {\n\t\t\t\t$mailcounter = 0;\n\t\t\t\t$mail->Body = $message;\n\t\t\t\t$mail->Subject = $subject;\n\n\t\t\t\twhile ($row = $result->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t$row['firstname'] = isset($row['firstname']) ? $row['firstname'] : '';\n\t\t\t\t\t$row['company'] = isset($row['company']) ? $row['company'] : '';\n\t\t\t\t\t$mail->AddAddress($row['email'], User::getCorrectUserSalutation([\n\t\t\t\t\t\t'firstname' => $row['firstname'],\n\t\t\t\t\t\t'name' => $row['name'],\n\t\t\t\t\t\t'company' => $row['company']\n\t\t\t\t\t]));\n\t\t\t\t\t$mail->From = $userinfo['email'];\n\t\t\t\t\t$mail->FromName = (isset($userinfo['firstname']) ? $userinfo['firstname'] . ' ' : '') . $userinfo['name'];\n\n\t\t\t\t\tif (!$mail->Send()) {\n\t\t\t\t\t\tif ($mail->ErrorInfo != '') {\n\t\t\t\t\t\t\t$mailerr_msg = $mail->ErrorInfo;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$mailerr_msg = $row['email'];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_ERR, 'Error sending mail: ' . $mailerr_msg);\n\t\t\t\t\t\tResponse::standardError('errorsendingmail', $row['email']);\n\t\t\t\t\t}\n\n\t\t\t\t\t$mailcounter++;\n\t\t\t\t\t$mail->ClearAddresses();\n\t\t\t\t}\n\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => 'showsuccess',\n\t\t\t\t\t'sentitems' => $mailcounter\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tResponse::standardError('nomessagetosend');\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'showsuccess') {\n\t\t$sentitems = Request::get('sentitems', 0);\n\n\t\tif ($sentitems == 0) {\n\t\t\t$note_type = 'info';\n\t\t\t$note_msg = lng('message.norecipients');\n\t\t} else {\n\t\t\t$note_type = 'success';\n\t\t\t$note_msg = lng('message.success', [$sentitems]);\n\t\t}\n\t}\n\n\t$recipients = [];\n\n\tif ($userinfo['customers_see_all'] == '1') {\n\t\t$recipients[0] = lng('panel.reseller');\n\t}\n\t$recipients[1] = lng('panel.customer');\n\n\t$messages_add_data = include_once dirname(__FILE__) . '/lib/formfields/admin/messages/formfield.messages_add.php';\n\n\tUI::view('user/form-note.html.twig', [\n\t\t'formaction' => $linker->getLink(['section' => 'message', 'action' => '']),\n\t\t'formdata' => $messages_add_data['messages_add'],\n\t\t'actions_links' => [\n\t\t\t[\n\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t'section' => 'settings',\n\t\t\t\t\t'page' => 'overview',\n\t\t\t\t\t'part' => 'system',\n\t\t\t\t\t'em' => 'system_mail_use_smtp'\n\t\t\t\t]),\n\t\t\t\t'label' => lng('admin.smtpsettings'),\n\t\t\t\t'icon' => 'fa-solid fa-gears',\n\t\t\t\t'class' => 'btn-outline-secondary'\n\t\t\t]\n\t\t],\n\t\t// alert-box\n\t\t'type' => $note_type,\n\t\t'alert_msg' => $note_msg\n\t]);\n}\n"
        },
        {
          "name": "admin_mysqlserver.php",
          "type": "blob",
          "size": 4.5205078125,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\MysqlServer;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\PhpHelper;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n$id = (int)Request::any('id');\n\nif (($page == 'mysqlserver' || $page == 'overview') && $userinfo['change_serversettings'] == '1') {\n\tif ($action == '') {\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"viewed admin_mysqlserver\");\n\n\t\ttry {\n\t\t\t$mysqlserver_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/admin/tablelisting.mysqlserver.php';\n\t\t\t$collection = (new Collection(MysqlServer::class, $userinfo))\n\t\t\t\t->withPagination($mysqlserver_list_data['mysqlserver_list']['columns'], $mysqlserver_list_data['mysqlserver_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\tUI::view('user/table.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $mysqlserver_list_data, 'mysqlserver_list'),\n\t\t\t'actions_links' => [\n\t\t\t\t[\n\t\t\t\t\t'href' => $linker->getLink(['section' => 'mysqlserver', 'page' => $page, 'action' => 'add']),\n\t\t\t\t\t'label' => lng('admin.mysqlserver.add')\n\t\t\t\t]\n\t\t\t]\n\t\t]);\n\t} elseif ($action == 'delete' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = MysqlServer::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['id']) && $result['id'] == $id) {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tMysqlServer::getLocal($userinfo, [\n\t\t\t\t\t\t'id' => $id\n\t\t\t\t\t])->delete();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tHTML::askYesNo('admin_mysqlserver_reallydelete', $filename, [\n\t\t\t\t\t'id' => $id,\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => $action\n\t\t\t\t], $result['caption'] . ' (' . $result['host'] . ')');\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'add') {\n\t\tif (Request::post('send') == 'send') {\n\t\t\ttry {\n\t\t\t\tMysqlServer::getLocal($userinfo, Request::postAll())->add();\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t} else {\n\t\t\t$mysqlserver_add_data = include_once dirname(__FILE__) . '/lib/formfields/admin/mysqlserver/formfield.mysqlserver_add.php';\n\n\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'mysqlserver']),\n\t\t\t\t'formdata' => $mysqlserver_add_data['mysqlserver_add']\n\t\t\t]);\n\t\t}\n\t} elseif ($action == 'edit' && $id >= 0) {\n\t\ttry {\n\t\t\t$json_result = MysqlServer::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['id']) && $result['id'] == $id) {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tMysqlServer::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$result = PhpHelper::htmlentitiesArray($result);\n\n\t\t\t\t$mysqlserver_edit_data = include_once dirname(__FILE__) . '/lib/formfields/admin/mysqlserver/formfield.mysqlserver_edit.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'mysqlserver', 'id' => $id]),\n\t\t\t\t\t'formdata' => $mysqlserver_edit_data['mysqlserver_edit'],\n\t\t\t\t\t'editid' => $id\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "admin_opcacheinfo.php",
          "type": "blob",
          "size": 2.65234375,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @author     Janos Muzsi <muzsij@hypernics.hu>\n * @author     Andrew Collington <andy@amnuts.com>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n *\n * Based on https://github.com/amnuts/opcache-gui, which is\n * licensed under the MIT licence, which can be viewed\n * online at https://acollington.mit-license.org/\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\nif ($action == 'reset' && function_exists('opcache_reset') && $userinfo['change_serversettings'] == '1') {\n\tif (Request::post('send') == 'send') {\n\t\topcache_reset();\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_INFO, \"reset OPcache\");\n\t\theader('Location: ' . $linker->getLink([\n\t\t\t\t'section' => 'opcacheinfo',\n\t\t\t\t'page' => 'showinfo'\n\t\t\t]));\n\t\texit();\n\t} else {\n\t\tHTML::askYesNo('cache_reallydelete', $filename, [\n\t\t\t'page' => $page,\n\t\t\t'action' => 'reset',\n\t\t], '', [\n\t\t\t'section' => 'opcacheinfo',\n\t\t\t'page' => 'showinfo'\n\t\t]);\n\t}\n}\n\nif (!extension_loaded('Zend OPcache')) {\n\tResponse::standardError('no_opcacheinfo');\n}\n\n$ocEnabled = ini_get('opcache.enable');\nif (empty($ocEnabled)) {\n\tResponse::standardError('inactive_opcacheinfo');\n}\n\nif ($page == 'showinfo' && $userinfo['change_serversettings'] == '1') {\n\t$time = time();\n\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"viewed OPcache info\");\n\n\t$opcache = (new \\Amnuts\\Opcache\\Service())->getData();\n\n\tUI::view('settings/opcacheinfo.html.twig', [\n\t\t'opcacheinfo' => [\n\t\t\t'version' => $opcache['version'],\n\t\t\t'overview' => $opcache['overview'],\n\t\t\t'files' => $opcache['files'],\n\t\t\t'preload' => $opcache['preload'],\n\t\t\t'directives' => $opcache['directives'],\n\t\t\t'blacklist' => $opcache['blacklist'],\n\t\t\t'functions' => $opcache['functions'],\n\t\t]\n\t]);\n}\n"
        },
        {
          "name": "admin_phpsettings.php",
          "type": "blob",
          "size": 9.4697265625,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\FpmDaemons;\nuse Froxlor\\Api\\Commands\\PhpSettings;\nuse Froxlor\\Database\\Database;\nuse Froxlor\\Froxlor;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n$id = (int)Request::any('id');\n\nif ($page == 'overview') {\n\tif ($action == '') {\n\t\ttry {\n\t\t\t$phpconf_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/admin/tablelisting.phpconfigs.php';\n\t\t\t$collection = (new Collection(PhpSettings::class, $userinfo, ['with_subdomains' => true]))\n\t\t\t\t->withPagination($phpconf_list_data['phpconf_list']['columns'], $phpconf_list_data['phpconf_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\tUI::view('user/table.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $phpconf_list_data, 'phpconf_list'),\n\t\t\t'actions_links' => (bool)$userinfo['change_serversettings'] ? [\n\t\t\t\t[\n\t\t\t\t\t'href' => $linker->getLink(['section' => 'phpsettings', 'page' => $page, 'action' => 'add']),\n\t\t\t\t\t'label' => lng('admin.phpsettings.addnew')\n\t\t\t\t]\n\t\t\t] : []\n\t\t]);\n\t}\n\n\tif ($action == 'add') {\n\t\tif ((int)$userinfo['change_serversettings'] == 1) {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tPhpSettings::getLocal($userinfo, Request::postAll())->add();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tif (file_exists(Froxlor::getInstallDir() . '/templates/misc/php/default.ini.php')) {\n\t\t\t\t\tinclude Froxlor::getInstallDir() . '/templates/misc/php/default.ini.php';\n\t\t\t\t\t$result = [\n\t\t\t\t\t\t'phpsettings' => $phpini\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\t// use first php-config as fallback\n\t\t\t\t\t$result_stmt = Database::query(\"SELECT * FROM `\" . TABLE_PANEL_PHPCONFIGS . \"` WHERE `id` = 1\");\n\t\t\t\t\t$result = $result_stmt->fetch(PDO::FETCH_ASSOC);\n\t\t\t\t}\n\n\t\t\t\t$fpmconfigs = [];\n\t\t\t\t$configs = Database::query(\"SELECT * FROM `\" . TABLE_PANEL_FPMDAEMONS . \"` ORDER BY `description` ASC\");\n\t\t\t\twhile ($row = $configs->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t$fpmconfigs[$row['id']] = $row['description'];\n\t\t\t\t}\n\n\t\t\t\t$phpconfig_add_data = include_once dirname(__FILE__) . '/lib/formfields/admin/phpconfig/formfield.phpconfig_add.php';\n\n\t\t\t\tUI::view('user/form-replacers.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'phpsettings']),\n\t\t\t\t\t'formdata' => $phpconfig_add_data['phpconfig_add'],\n\t\t\t\t\t'replacers' => $phpconfig_add_data['phpconfig_replacers']\n\t\t\t\t]);\n\t\t\t}\n\t\t} else {\n\t\t\tResponse::standardError('nopermissionsorinvalidid');\n\t\t}\n\t}\n\n\tif ($action == 'delete') {\n\t\ttry {\n\t\t\t$json_result = PhpSettings::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif ($result['id'] != 0 && $result['id'] == $id && (int)$userinfo['change_serversettings'] == 1 && $id != 1) // cannot delete the default php.config\n\t\t{\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tPhpSettings::getLocal($userinfo, [\n\t\t\t\t\t\t'id' => $id\n\t\t\t\t\t])->delete();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tHTML::askYesNo('phpsetting_reallydelete', $filename, [\n\t\t\t\t\t'id' => $id,\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => $action\n\t\t\t\t], $result['description']);\n\t\t\t}\n\t\t} else {\n\t\t\tResponse::standardError('nopermissionsorinvalidid');\n\t\t}\n\t}\n\n\tif ($action == 'edit') {\n\t\ttry {\n\t\t\t$json_result = PhpSettings::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif ($result['id'] != 0 && $result['id'] == $id && (int)$userinfo['change_serversettings'] == 1) {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tPhpSettings::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$fpmconfigs = [];\n\t\t\t\t$configs = Database::query(\"SELECT * FROM `\" . TABLE_PANEL_FPMDAEMONS . \"` ORDER BY `description` ASC\");\n\t\t\t\twhile ($row = $configs->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t$fpmconfigs[$row['id']] = $row['description'];\n\t\t\t\t}\n\n\t\t\t\t$phpconfig_edit_data = include_once dirname(__FILE__) . '/lib/formfields/admin/phpconfig/formfield.phpconfig_edit.php';\n\n\t\t\t\tUI::view('user/form-replacers.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'phpsettings', 'id' => $id]),\n\t\t\t\t\t'formdata' => $phpconfig_edit_data['phpconfig_edit'],\n\t\t\t\t\t'replacers' => $phpconfig_edit_data['phpconfig_replacers'],\n\t\t\t\t\t'editid' => $id\n\t\t\t\t]);\n\t\t\t}\n\t\t} else {\n\t\t\tResponse::standardError('nopermissionsorinvalidid');\n\t\t}\n\t}\n} elseif ($page == 'fpmdaemons') {\n\tif ($action == '') {\n\t\ttry {\n\t\t\t$fpmconf_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/admin/tablelisting.fpmconfigs.php';\n\t\t\t$collection = (new Collection(FpmDaemons::class, $userinfo))\n\t\t\t\t->withPagination($fpmconf_list_data['fpmconf_list']['columns'], $fpmconf_list_data['fpmconf_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\tUI::view('user/table.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $fpmconf_list_data, 'fpmconf_list'),\n\t\t\t'actions_links' => (bool)$userinfo['change_serversettings'] ? [\n\t\t\t\t[\n\t\t\t\t\t'href' => $linker->getLink(['section' => 'phpsettings', 'page' => $page, 'action' => 'add']),\n\t\t\t\t\t'label' => lng('admin.fpmsettings.addnew')\n\t\t\t\t]\n\t\t\t] : []\n\t\t]);\n\t}\n\n\tif ($action == 'add') {\n\t\tif ((int)$userinfo['change_serversettings'] == 1) {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tFpmDaemons::getLocal($userinfo, Request::postAll())->add();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$fpmconfig_add_data = include_once dirname(__FILE__) . '/lib/formfields/admin/phpconfig/formfield.fpmconfig_add.php';\n\n\t\t\t\tUI::view('user/form-replacers.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'phpsettings', 'page' => 'fpmdaemons']),\n\t\t\t\t\t'formdata' => $fpmconfig_add_data['fpmconfig_add'],\n\t\t\t\t\t'replacers' => $fpmconfig_add_data['fpmconfig_replacers']\n\t\t\t\t]);\n\t\t\t}\n\t\t} else {\n\t\t\tResponse::standardError('nopermissionsorinvalidid');\n\t\t}\n\t}\n\n\tif ($action == 'delete') {\n\t\ttry {\n\t\t\t$json_result = FpmDaemons::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif ($id == 1) {\n\t\t\tResponse::standardError('cannotdeletedefaultphpconfig');\n\t\t}\n\n\t\tif ($result['id'] != 0 && $result['id'] == $id && (int)$userinfo['change_serversettings'] == 1 && $id != 1) // cannot delete the default php.config\n\t\t{\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tFpmDaemons::getLocal($userinfo, Request::postAll())->delete();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tHTML::askYesNo('fpmsetting_reallydelete', $filename, [\n\t\t\t\t\t'id' => $id,\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => $action\n\t\t\t\t], $result['description']);\n\t\t\t}\n\t\t} else {\n\t\t\tResponse::standardError('nopermissionsorinvalidid');\n\t\t}\n\t}\n\n\tif ($action == 'edit') {\n\t\ttry {\n\t\t\t$json_result = FpmDaemons::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif ($result['id'] != 0 && $result['id'] == $id && (int)$userinfo['change_serversettings'] == 1) {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tFpmDaemons::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$fpmconfig_edit_data = include_once dirname(__FILE__) . '/lib/formfields/admin/phpconfig/formfield.fpmconfig_edit.php';\n\n\t\t\t\tUI::view('user/form-replacers.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'phpsettings', 'page' => 'fpmdaemons', 'id' => $id]),\n\t\t\t\t\t'formdata' => $fpmconfig_edit_data['fpmconfig_edit'],\n\t\t\t\t\t'replacers' => $fpmconfig_edit_data['fpmconfig_replacers'],\n\t\t\t\t\t'editid' => $id\n\t\t\t\t]);\n\t\t\t}\n\t\t} else {\n\t\t\tResponse::standardError('nopermissionsorinvalidid');\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "admin_plans.php",
          "type": "blob",
          "size": 8.8076171875,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\HostingPlans;\nuse Froxlor\\Api\\Commands\\MysqlServer;\nuse Froxlor\\Database\\Database;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\PhpHelper;\nuse Froxlor\\Settings;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n$id = (int)Request::any('id');\n\nif ($page == '' || $page == 'overview') {\n\tif ($action == '') {\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"viewed admin_plans\");\n\n\t\ttry {\n\t\t\t$plan_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/admin/tablelisting.plans.php';\n\t\t\t$collection = (new Collection(HostingPlans::class, $userinfo))\n\t\t\t\t->withPagination($plan_list_data['plan_list']['columns'], $plan_list_data['plan_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\tUI::view('user/table.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $plan_list_data, 'plan_list'),\n\t\t\t'actions_links' => [\n\t\t\t\t[\n\t\t\t\t\t'href' => $linker->getLink(['section' => 'plans', 'page' => $page, 'action' => 'add']),\n\t\t\t\t\t'label' => lng('admin.plans.add')\n\t\t\t\t]\n\t\t\t]\n\t\t]);\n\t} elseif ($action == 'delete' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = HostingPlans::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif ($result['id'] != 0 && $result['id'] == $id && (int)$userinfo['adminid'] == $result['adminid']) {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tHostingPlans::getLocal($userinfo, [\n\t\t\t\t\t\t'id' => $id\n\t\t\t\t\t])->delete();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tHTML::askYesNo('plan_reallydelete', $filename, [\n\t\t\t\t\t'id' => $id,\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => $action\n\t\t\t\t], $result['name']);\n\t\t\t}\n\t\t} else {\n\t\t\tResponse::standardError('nopermissionsorinvalidid');\n\t\t}\n\t} elseif ($action == 'add') {\n\t\tif (Request::post('send') == 'send') {\n\t\t\ttry {\n\t\t\t\tHostingPlans::getLocal($userinfo, Request::postAll())->add();\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t} else {\n\t\t\t$mysql_servers = [];\n\t\t\ttry {\n\t\t\t\t$result_json = MysqlServer::getLocal($userinfo)->listing();\n\t\t\t\t$result_decoded = json_decode($result_json, true)['data']['list'];\n\t\t\t\tforeach ($result_decoded as $dbserver => $dbdata) {\n\t\t\t\t\t$mysql_servers[] = [\n\t\t\t\t\t\t'label' => $dbdata['caption'],\n\t\t\t\t\t\t'value' => $dbserver\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t} catch (Exception $e) {\n\t\t\t\t/* just none */\n\t\t\t}\n\n\t\t\t$phpconfigs = [];\n\t\t\t$configs = Database::query(\"\n\t\t\t\t\tSELECT c.*, fc.description as interpreter\n\t\t\t\t\tFROM `\" . TABLE_PANEL_PHPCONFIGS . \"` c\n\t\t\t\t\tLEFT JOIN `\" . TABLE_PANEL_FPMDAEMONS . \"` fc ON fc.id = c.fpmsettingid\n\t\t\t\t\");\n\t\t\twhile ($row = $configs->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\tif ((int)Settings::Get('phpfpm.enabled') == 1) {\n\t\t\t\t\t$phpconfigs[] = [\n\t\t\t\t\t\t'label' => $row['description'] . \" [\" . $row['interpreter'] . \"]\",\n\t\t\t\t\t\t'value' => $row['id']\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\t$phpconfigs[] = [\n\t\t\t\t\t\t'label' => $row['description'],\n\t\t\t\t\t\t'value' => $row['id']\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// dummy to avoid unknown variables\n\t\t\t$hosting_plans = null;\n\n\t\t\t$plans_add_data = include_once __DIR__ . '/lib/formfields/admin/plans/formfield.plans_add.php';\n\t\t\t$cust_add_data = include_once __DIR__ . '/lib/formfields/admin/customer/formfield.customer_add.php';\n\t\t\t// unset unneeded stuff\n\t\t\tunset($cust_add_data['customer_add']['sections']['section_a']);\n\t\t\tunset($cust_add_data['customer_add']['sections']['section_b']);\n\t\t\tunset($cust_add_data['customer_add']['sections']['section_cpre']);\n\t\t\t// merge\n\t\t\t$plans_add_data['plans_add']['sections'] = array_merge($plans_add_data['plans_add']['sections'], $cust_add_data['customer_add']['sections']);\n\n\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'plans']),\n\t\t\t\t'formdata' => $plans_add_data['plans_add']\n\t\t\t]);\n\t\t}\n\t} elseif ($action == 'edit' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = HostingPlans::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif ($result['name'] != '') {\n\t\t\t$result['value'] = json_decode($result['value'], true);\n\t\t\t$result = PhpHelper::htmlentitiesArray($result);\n\n\t\t\tforeach ($result['value'] as $index => $value) {\n\t\t\t\t$result[$index] = $value;\n\t\t\t}\n\t\t\t$result['allowed_phpconfigs'] = json_encode($result['allowed_phpconfigs']);\n\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tHostingPlans::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$mysql_servers = [];\n\t\t\t\ttry {\n\t\t\t\t\t$result_json = MysqlServer::getLocal($userinfo)->listing();\n\t\t\t\t\t$result_decoded = json_decode($result_json, true)['data']['list'];\n\t\t\t\t\tforeach ($result_decoded as $dbserver => $dbdata) {\n\t\t\t\t\t\t$mysql_servers[] = [\n\t\t\t\t\t\t\t'label' => $dbdata['caption'],\n\t\t\t\t\t\t\t'value' => $dbserver\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\t/* just none */\n\t\t\t\t}\n\n\t\t\t\t$phpconfigs = [];\n\t\t\t\t$configs = Database::query(\"\n\t\t\t\t\tSELECT c.*, fc.description as interpreter\n\t\t\t\t\tFROM `\" . TABLE_PANEL_PHPCONFIGS . \"` c\n\t\t\t\t\tLEFT JOIN `\" . TABLE_PANEL_FPMDAEMONS . \"` fc ON fc.id = c.fpmsettingid\n\t\t\t\t\");\n\t\t\t\twhile ($row = $configs->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\tif ((int)Settings::Get('phpfpm.enabled') == 1) {\n\t\t\t\t\t\t$phpconfigs[] = [\n\t\t\t\t\t\t\t'label' => $row['description'] . \" [\" . $row['interpreter'] . \"]\",\n\t\t\t\t\t\t\t'value' => $row['id']\n\t\t\t\t\t\t];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$phpconfigs[] = [\n\t\t\t\t\t\t\t'label' => $row['description'],\n\t\t\t\t\t\t\t'value' => $row['id']\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$result['imap'] = $result['email_imap'];\n\t\t\t\t$result['pop3'] = $result['email_pop3'];\n\n\t\t\t\t// dummy to avoid unknown variables\n\t\t\t\t$result['loginname'] = null;\n\t\t\t\t$result['documentroot'] = null;\n\t\t\t\t$result['standardsubdomain'] = null;\n\t\t\t\t$result['deactivated'] = null;\n\t\t\t\t$result['def_language'] = null;\n\t\t\t\t$result['firstname'] = null;\n\t\t\t\t$result['gender'] = null;\n\t\t\t\t$result['company'] = null;\n\t\t\t\t$result['street'] = null;\n\t\t\t\t$result['zipcode'] = null;\n\t\t\t\t$result['city'] = null;\n\t\t\t\t$result['phone'] = null;\n\t\t\t\t$result['fax'] = null;\n\t\t\t\t$result['email'] = null;\n\t\t\t\t$result['customernumber'] = null;\n\t\t\t\t$result['custom_notes'] = null;\n\t\t\t\t$result['custom_notes_show'] = null;\n\t\t\t\t$result['api_allowed'] = null;\n\t\t\t\t$hosting_plans = null;\n\t\t\t\t$admin_select = [];\n\n\t\t\t\t$plans_edit_data = include_once __DIR__ . '/lib/formfields/admin/plans/formfield.plans_edit.php';\n\t\t\t\t$cust_edit_data = include_once __DIR__ . '/lib/formfields/admin/customer/formfield.customer_edit.php';\n\t\t\t\t// unset unneeded stuff\n\t\t\t\tunset($cust_edit_data['customer_edit']['sections']['section_a']);\n\t\t\t\tunset($cust_edit_data['customer_edit']['sections']['section_b']);\n\t\t\t\tunset($cust_edit_data['customer_edit']['sections']['section_cpre']);\n\t\t\t\tunset($cust_edit_data['customer_edit']['sections']['section_d']);\n\t\t\t\t// merge\n\t\t\t\t$plans_edit_data['plans_edit']['sections'] = array_merge($plans_edit_data['plans_edit']['sections'], $cust_edit_data['customer_edit']['sections']);\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'plans', 'id' => $id]),\n\t\t\t\t\t'formdata' => $plans_edit_data['plans_edit'],\n\t\t\t\t\t'editid' => $id\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'jqGetPlanValues') {\n\t\t$planid = (int)Request::any('planid', 0);\n\t\ttry {\n\t\t\t$json_result = HostingPlans::getLocal($userinfo, [\n\t\t\t\t'id' => $planid\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\t\techo $result['value'];\n\t\texit();\n\t}\n}\n"
        },
        {
          "name": "admin_settings.php",
          "type": "blob",
          "size": 14.0537109375,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nuse Froxlor\\Api\\Commands\\Froxlor;\nuse Froxlor\\Cron\\TaskId;\nuse Froxlor\\Database\\Database;\nuse Froxlor\\Database\\IntegrityCheck;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\PhpHelper;\nuse Froxlor\\Settings;\nuse Froxlor\\System\\Cronjob;\nuse Froxlor\\UI\\Form;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\nuse Froxlor\\User;\nuse PHPMailer\\PHPMailer\\PHPMailer;\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nif ($page == 'overview' && $userinfo['change_serversettings'] == '1') {\n\t$settings_data = PhpHelper::loadConfigArrayDir('./actions/admin/settings/');\n\tSettings::loadSettingsInto($settings_data);\n\n\tif (Request::post('send') == 'send') {\n\t\t$_part = Request::get('part', '');\n\t\tif ($_part == '') {\n\t\t\t$_part = Request::post('part', '');\n\t\t}\n\n\t\tif ($_part != '') {\n\t\t\tif ($_part == 'all') {\n\t\t\t\t$settings_all = true;\n\t\t\t\t$settings_part = false;\n\t\t\t} else {\n\t\t\t\t$settings_all = false;\n\t\t\t\t$settings_part = true;\n\t\t\t}\n\t\t\t$only_enabledisable = false;\n\t\t} else {\n\t\t\t$settings_all = false;\n\t\t\t$settings_part = false;\n\t\t\t$only_enabledisable = true;\n\t\t}\n\n\t\t// check if the session timeout is too low #815\n\t\tif (!empty(Request::post('session_sessiontimeout')) &&  intval(Request::post('session_sessiontimeout', 0)) < 60) {\n\t\t\tResponse::standardError(['session_timeout', 'session_timeout_desc']);\n\t\t}\n\n\t\ttry {\n\t\t\tif (Form::processForm($settings_data, Request::postAll(), [\n\t\t\t\t'filename' => $filename,\n\t\t\t\t'action' => $action,\n\t\t\t\t'page' => $page,\n\t\t\t\t'part' => $_part,\n\t\t\t], $_part, $settings_all, $settings_part, $only_enabledisable)) {\n\t\t\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_INFO, \"rebuild configfiles due to changed setting\");\n\t\t\t\tCronjob::inserttask(TaskId::REBUILD_VHOST);\n\t\t\t\t// Using nameserver, insert a task which rebuilds the server config\n\t\t\t\tCronjob::inserttask(TaskId::REBUILD_DNS);\n\t\t\t\t// cron.d file\n\t\t\t\tCronjob::inserttask(TaskId::REBUILD_CRON);\n\n\t\t\t\tResponse::standardSuccess('settingssaved', '', [\n\t\t\t\t\t'filename' => $filename,\n\t\t\t\t\t'action' => $action,\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t}\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage(), $e->getCode());\n\t\t}\n\t} else {\n\t\t$_part = Request::get('part', '');\n\t\tif ($_part == '') {\n\t\t\t$_part = Request::post('part', '');\n\t\t}\n\n\t\t$fields = Form::buildForm($settings_data, $_part);\n\n\t\tif ($_part == '' || $_part == 'all') {\n\t\t\tUI::view('settings/index.html.twig', ['fields' => $fields]);\n\t\t} else {\n\t\t\t$em = Request::any('em', '');\n\t\t\tUI::view('settings/detailpart.html.twig', ['fields' => $fields, 'em' => $em]);\n\t\t}\n\t}\n} elseif ($page == 'phpinfo' && $userinfo['change_serversettings'] == '1') {\n\tob_start();\n\tphpinfo();\n\t$phpinfo = [\n\t\t'phpinfo' => []\n\t];\n\tif (preg_match_all('#(?:<h2>(?:<a name=\".*?\">)?(.*?)(?:</a>)?</h2>)|(?:<tr(?: class=\".*?\")?><t[hd](?: class=\".*?\")?>(.*?)\\s*</t[hd]>(?:<t[hd](?: class=\".*?\")?>(.*?)\\s*</t[hd]>(?:<t[hd](?: class=\".*?\")?>(.*?)\\s*</t[hd]>)?)?</tr>)#s', ob_get_clean(), $matches, PREG_SET_ORDER)) {\n\t\tforeach ($matches as $match) {\n\t\t\t$end = array_keys($phpinfo);\n\t\t\t$end = end($end);\n\t\t\tif (strlen($match[1])) {\n\t\t\t\t$phpinfo[$match[1]] = [];\n\t\t\t} elseif (isset($match[3])) {\n\t\t\t\t$phpinfo[$end][$match[2]] = isset($match[4]) ? [\n\t\t\t\t\t$match[3],\n\t\t\t\t\t$match[4]\n\t\t\t\t] : $match[3];\n\t\t\t} else {\n\t\t\t\t$phpinfo[$end][] = $match[2];\n\t\t\t}\n\t\t}\n\t} else {\n\t\tResponse::standardError('error.no_phpinfo');\n\t}\n\tUI::view('settings/phpinfo.html.twig', [\n\t\t'phpversion' => PHP_VERSION,\n\t\t'phpinfo' => $phpinfo\n\t]);\n} elseif ($page == 'rebuildconfigs' && $userinfo['change_serversettings'] == '1') {\n\tif (Request::post('send') == 'send') {\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_INFO, \"rebuild configfiles\");\n\t\tCronjob::inserttask(TaskId::REBUILD_VHOST);\n\t\tCronjob::inserttask(TaskId::CREATE_QUOTA);\n\t\t// Using nameserver, insert a task which rebuilds the server config\n\t\tCronjob::inserttask(TaskId::REBUILD_DNS);\n\t\t// cron.d file\n\t\tCronjob::inserttask(TaskId::REBUILD_CRON);\n\n\t\tResponse::standardSuccess('rebuildingconfigs', '', [\n\t\t\t'filename' => 'admin_index.php'\n\t\t]);\n\t} else {\n\t\tHTML::askYesNo('admin_configs_reallyrebuild', $filename, [\n\t\t\t'page' => $page\n\t\t]);\n\t}\n} elseif ($page == 'updatecounters' && $userinfo['change_serversettings'] == '1') {\n\tif (Request::post('send') == 'send') {\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_INFO, \"updated resource-counters\");\n\t\t$updatecounters = User::updateCounters(true);\n\t\tUI::view('user/resource-counter.html.twig', [\n\t\t\t'counters' => $updatecounters\n\t\t]);\n\t} else {\n\t\tHTML::askYesNo('admin_counters_reallyupdate', $filename, [\n\t\t\t'page' => $page\n\t\t]);\n\t}\n} elseif ($page == 'wipecleartextmailpws' && $userinfo['change_serversettings'] == '1') {\n\tif (Request::post('send') == 'send') {\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_WARNING, \"wiped all cleartext mail passwords\");\n\t\tDatabase::query(\"UPDATE `\" . TABLE_MAIL_USERS . \"` SET `password` = '';\");\n\t\tDatabase::query(\"UPDATE `\" . TABLE_PANEL_SETTINGS . \"` SET `value` = '0' WHERE `settinggroup` = 'system' AND `varname` = 'mailpwcleartext'\");\n\t\tResponse::redirectTo($filename);\n\t} else {\n\t\tHTML::askYesNo('admin_cleartextmailpws_reallywipe', $filename, [\n\t\t\t'page' => $page\n\t\t]);\n\t}\n} elseif ($page == 'wipequotas' && $userinfo['change_serversettings'] == '1') {\n\tif (Request::post('send') == 'send') {\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_WARNING, \"wiped all mailquotas\");\n\n\t\t// Set the quota to 0 which means unlimited\n\t\tDatabase::query(\"UPDATE `\" . TABLE_MAIL_USERS . \"` SET `quota` = '0';\");\n\t\tDatabase::query(\"UPDATE `\" . TABLE_PANEL_CUSTOMERS . \"` SET `email_quota_used` = '0'\");\n\t\tResponse::redirectTo($filename);\n\t} else {\n\t\tHTML::askYesNo('admin_quotas_reallywipe', $filename, [\n\t\t\t'page' => $page\n\t\t]);\n\t}\n} elseif ($page == 'enforcequotas' && $userinfo['change_serversettings'] == '1') {\n\tif (Request::post('send') == 'send') {\n\t\t// Fetch all accounts\n\t\t$result_stmt = Database::query(\"SELECT `quota`, `customerid` FROM `\" . TABLE_MAIL_USERS . \"`\");\n\n\t\tif (Database::num_rows() > 0) {\n\t\t\t$upd_stmt = Database::prepare(\"\n\t\t\t\tUPDATE `\" . TABLE_PANEL_CUSTOMERS . \"` SET\n\t\t\t\t`email_quota_used` = `email_quota_used` + :diff\n\t\t\t\tWHERE `customerid` = :customerid\n\t\t\t\");\n\n\t\t\twhile ($array = $result_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t$difference = Settings::Get('system.mail_quota') - $array['quota'];\n\t\t\t\tDatabase::pexecute($upd_stmt, [\n\t\t\t\t\t'diff' => $difference,\n\t\t\t\t\t'customerid' => $customerid\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\n\t\t// Set the new quota\n\t\t$upd_stmt = Database::prepare(\"\n\t\t\tUPDATE `\" . TABLE_MAIL_USERS . \"` SET `quota` = :quota\n\t\t\");\n\t\tDatabase::pexecute($upd_stmt, [\n\t\t\t'quota' => Settings::Get('system.mail_quota')\n\t\t]);\n\n\t\t// Update the Customer, if the used quota is bigger than the allowed quota\n\t\tDatabase::query(\"UPDATE `\" . TABLE_PANEL_CUSTOMERS . \"` SET `email_quota` = `email_quota_used` WHERE `email_quota` < `email_quota_used`\");\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_WARNING, 'enforcing mailquota to all customers: ' . Settings::Get('system.mail_quota') . ' MB');\n\t\tResponse::redirectTo($filename);\n\t} else {\n\t\tHTML::askYesNo('admin_quotas_reallyenforce', $filename, [\n\t\t\t'page' => $page\n\t\t]);\n\t}\n} elseif ($page == 'integritycheck' && $userinfo['change_serversettings'] == '1') {\n\t$integrity = new IntegrityCheck();\n\tif (Request::post('send') == 'send') {\n\t\t$integrity->fixAll();\n\t} elseif (Request::get('action') == \"fix\") {\n\t\tHTML::askYesNo('admin_integritycheck_reallyfix', $filename, [\n\t\t\t'page' => $page\n\t\t]);\n\t}\n\n\t$integritycheck = [];\n\tforeach ($integrity->available as $id => $check) {\n\t\t$integritycheck[] = [\n\t\t\t'displayid' => $id + 1,\n\t\t\t'result' => $integrity->$check(),\n\t\t\t'checkdesc' => lng('integrity_check.' . $check)\n\t\t];\n\t}\n\n\t$integrity_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/admin/tablelisting.integrity.php';\n\t$collection = [\n\t\t'data' => $integritycheck,\n\t\t'pagination' => []\n\t];\n\n\tUI::view('user/table.html.twig', [\n\t\t'listing' => Listing::formatFromArray($collection, $integrity_list_data['integrity_list'], 'integrity_list'),\n\t\t'actions_links' => [\n\t\t\t[\n\t\t\t\t'href' => $linker->getLink(['section' => 'settings', 'page' => $page, 'action' => 'fix']),\n\t\t\t\t'label' => lng('admin.integrityfix'),\n\t\t\t\t'icon' => 'fa-solid fa-screwdriver-wrench',\n\t\t\t\t'class' => 'btn-warning'\n\t\t\t]\n\t\t]\n\t]);\n} elseif ($page == 'importexport' && $userinfo['change_serversettings'] == '1') {\n\t// check for json-stuff\n\tif (!extension_loaded('json')) {\n\t\tResponse::standardError('jsonextensionnotfound');\n\t}\n\n\tif (Request::get('action') == \"export\") {\n\t\t// export\n\t\ttry {\n\t\t\t$json_result = Froxlor::getLocal($userinfo)->exportSettings();\n\t\t\t$json_export = json_decode($json_result, true)['data'];\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\theader('Content-disposition: attachment; filename=Froxlor_settings-' . \\Froxlor\\Froxlor::VERSION . '-' . \\Froxlor\\Froxlor::DBVERSION . '_' . date('d.m.Y') . '.json');\n\t\theader('Content-type: application/json');\n\t\techo $json_export;\n\t\texit();\n\t} elseif (Request::get('action') == \"import\") {\n\t\t// import\n\t\tif (Request::post('send') == 'send') {\n\t\t\t// get uploaded file\n\t\t\tif (isset($_FILES[\"import_file\"][\"tmp_name\"])) {\n\t\t\t\t$imp_content = file_get_contents($_FILES[\"import_file\"][\"tmp_name\"]);\n\t\t\t\ttry {\n\t\t\t\t\tFroxlor::getLocal($userinfo, [\n\t\t\t\t\t\t'json_str' => $imp_content\n\t\t\t\t\t])->importSettings();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::standardSuccess('settingsimported', '', [\n\t\t\t\t\t'filename' => 'admin_settings.php'\n\t\t\t\t]);\n\t\t\t}\n\t\t\tResponse::dynamicError(\"Upload failed\");\n\t\t}\n\t} else {\n\t\t$settings_data = include_once dirname(__FILE__) . '/lib/formfields/admin/settings/formfield.settings_import.php';\n\n\t\tUI::view('user/form.html.twig', [\n\t\t\t'formaction' => $linker->getLink(['section' => 'settings', 'page' => $page, 'action' => 'import']),\n\t\t\t'formdata' => $settings_data['settings_import'],\n\t\t\t'actions_links' => [\n\t\t\t\t[\n\t\t\t\t\t'class' => 'btn-outline-primary',\n\t\t\t\t\t'href' => $linker->getLink(['section' => 'settings', 'page' => 'overview']),\n\t\t\t\t\t'label' => lng('admin.configfiles.overview'),\n\t\t\t\t\t'icon' => 'fa-solid fa-grip'\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'class' => 'btn-outline-secondary',\n\t\t\t\t\t'href' => $linker->getLink(['section' => 'settings', 'page' => $page, 'action' => 'export']),\n\t\t\t\t\t'label' => 'Download/export ' . lng('admin.serversettings'),\n\t\t\t\t\t'icon' => 'fa-solid fa-file-import'\n\t\t\t\t]\n\t\t\t]\n\t\t]);\n\t}\n} elseif ($page == 'testmail') {\n\t$note_type = 'info';\n\t$note_msg = lng('admin.smtptestnote');\n\n\tif (Request::post('send') == 'send') {\n\t\t$test_addr = Request::post('test_addr');\n\n\t\t// Initialize the mailingsystem\n\t\t$testmail = new PHPMailer(true);\n\t\t$testmail->CharSet = \"UTF-8\";\n\n\t\tif (Settings::Get('system.mail_use_smtp')) {\n\t\t\t$testmail->isSMTP();\n\t\t\t$testmail->Host = Settings::Get('system.mail_smtp_host');\n\t\t\t$testmail->SMTPAuth = Settings::Get('system.mail_smtp_auth') == '1';\n\t\t\t$testmail->Username = Settings::Get('system.mail_smtp_user');\n\t\t\t$testmail->Password = Settings::Get('system.mail_smtp_passwd');\n\t\t\tif (Settings::Get('system.mail_smtp_usetls')) {\n\t\t\t\t$testmail->SMTPSecure = 'tls';\n\t\t\t} else {\n\t\t\t\t$testmail->SMTPAutoTLS = false;\n\t\t\t}\n\t\t\t$testmail->Port = Settings::Get('system.mail_smtp_port');\n\t\t}\n\n\t\t$_mailerror = false;\n\t\tif (PHPMailer::ValidateAddress(Settings::Get('panel.adminmail')) !== false) {\n\t\t\t// set return-to address and custom sender-name, see #76\n\t\t\t$testmail->SetFrom(Settings::Get('panel.adminmail'), Settings::Get('panel.adminmail_defname'));\n\t\t\tif (Settings::Get('panel.adminmail_return') != '') {\n\t\t\t\t$testmail->AddReplyTo(Settings::Get('panel.adminmail_return'), Settings::Get('panel.adminmail_defname'));\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t$testmail->Subject = \"Froxlor Test-Mail\";\n\t\t\t\t$mail_body = \"Yay, this worked :)\";\n\t\t\t\t$testmail->AltBody = $mail_body;\n\t\t\t\t$testmail->MsgHTML(str_replace(\"\\n\", \"<br />\", $mail_body));\n\t\t\t\t$testmail->AddAddress($test_addr);\n\t\t\t\t$testmail->Send();\n\t\t\t} catch (\\PHPMailer\\PHPMailer\\Exception $e) {\n\t\t\t\t$note_type = 'danger';\n\t\t\t\t$note_msg = $e->getMessage();\n\t\t\t\t$_mailerror = true;\n\t\t\t} catch (Exception $e) {\n\t\t\t\t$note_type = 'danger';\n\t\t\t\t$note_msg = $e->getMessage();\n\t\t\t\t$_mailerror = true;\n\t\t\t}\n\n\t\t\tif (!$_mailerror) {\n\t\t\t\t// success\n\t\t\t\t$mail->ClearAddresses();\n\t\t\t\tResponse::standardSuccess('testmailsent', '', [\n\t\t\t\t\t'filename' => 'admin_settings.php',\n\t\t\t\t\t'page' => 'testmail'\n\t\t\t\t]);\n\t\t\t}\n\t\t} else {\n\t\t\t// invalid sender e-mail\n\t\t\t$note_type = 'warning';\n\t\t\t$note_msg = \"Invalid sender e-mail address: \" . Settings::Get('panel.adminmail');\n\t\t}\n\t}\n\n\t$mailtest_add_data = include_once dirname(__FILE__) . '/lib/formfields/admin/settings/formfield.settings_mailtest.php';\n\n\tUI::view('user/form-note.html.twig', [\n\t\t'formaction' => $linker->getLink(['section' => 'settings']),\n\t\t'formdata' => $mailtest_add_data['mailtest'],\n\t\t'actions_links' => [\n\t\t\t[\n\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t'section' => 'settings',\n\t\t\t\t\t'page' => 'overview',\n\t\t\t\t\t'part' => 'system',\n\t\t\t\t\t'em' => 'system_mail_use_smtp'\n\t\t\t\t]),\n\t\t\t\t'label' => lng('admin.smtpsettings'),\n\t\t\t\t'icon' => 'fa-solid fa-gears',\n\t\t\t\t'class' => 'btn-outline-secondary'\n\t\t\t]\n\t\t],\n\t\t// alert-box\n\t\t'type' => $note_type,\n\t\t'alert_msg' => $note_msg\n\t]);\n} elseif ($page == 'toggleSettingsMode') {\n\tif ($userinfo['change_serversettings'] == '1') {\n\t\t$cmode = Settings::Get('panel.settings_mode');\n\t\tSettings::Set('panel.settings_mode', (int)(!(bool)$cmode));\n\t}\n\tResponse::redirectTo($filename);\n}\n"
        },
        {
          "name": "admin_templates.php",
          "type": "blob",
          "size": 18.818359375,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Database\\Database;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\Language;\nuse Froxlor\\PhpHelper;\nuse Froxlor\\Settings;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\nuse Froxlor\\Validate\\Validate;\nuse Froxlor\\CurrentUser;\n\n$id = (int)Request::any('id');\n$subjectid = intval(Request::any('subjectid'));\n$mailbodyid = intval(Request::any('mailbodyid'));\n\n$available_templates = [\n\t'createcustomer',\n\t'pop_success',\n\t'new_database_by_customer',\n\t'new_ftpaccount_by_customer',\n\t'password_reset'\n];\n\n// only show templates of features that are enabled #1191\nif ((int)Settings::Get('system.report_enable') == 1) {\n\tarray_push($available_templates, 'trafficmaxpercent', 'diskmaxpercent');\n}\nif (Settings::Get('panel.sendalternativemail') == 1) {\n\tarray_push($available_templates, 'pop_success_alternative');\n}\n\n$file_templates = [\n\t'index_html',\n\t'unconfigured_html'\n];\n\n$languages = Language::getLanguages();\n\nif ($action == '') {\n\t// email templates\n\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"viewed admin_templates\");\n\n\t$templates_array = [];\n\t$result_stmt = Database::prepare(\"\n\t\tSELECT `id`, `language`, `varname` FROM `\" . TABLE_PANEL_TEMPLATES . \"`\n\t\tWHERE `adminid` = :adminid AND `templategroup`='mails'\n\t\tORDER BY `language`, `varname`\n\t\");\n\tDatabase::pexecute($result_stmt, [\n\t\t'adminid' => $userinfo['adminid']\n\t]);\n\n\twhile ($row = $result_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t$parts = [];\n\t\tpreg_match('/^([a-z]([a-z_]+[a-z])*)_(mailbody|subject)$/', $row['varname'], $parts);\n\t\t$templates_array[$row['language']][$parts[1]][$parts[3]] = $row['id'];\n\t}\n\n\t$templates = [];\n\tforeach ($templates_array as $language => $template_defs) {\n\t\tforeach ($template_defs as $action => $email) {\n\t\t\t$templates[] = [\n\t\t\t\t'subjectid' => $email['subject'],\n\t\t\t\t'mailbodyid' => $email['mailbody'],\n\t\t\t\t'template' => lng('admin.templates.' . $action),\n\t\t\t\t'language' => $language\n\t\t\t];\n\t\t}\n\t}\n\n\t$mail_actions_links = false;\n\tforeach ($languages as $language_file => $language_name) {\n\t\t$templates_done = [];\n\t\t$result_stmt = Database::prepare(\"\n\t\t\tSELECT `varname` FROM `\" . TABLE_PANEL_TEMPLATES . \"`\n\t\t\tWHERE `adminid` = :adminid AND `language`= :lang\n\t\t\tAND `templategroup` = 'mails' AND `varname` LIKE '%_subject'\n\t\t\");\n\t\tDatabase::pexecute($result_stmt, [\n\t\t\t'adminid' => $userinfo['adminid'],\n\t\t\t'lang' => $language_name\n\t\t]);\n\n\t\twhile ($row = $result_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t$templates_done[] = str_replace('_subject', '', $row['varname']);\n\t\t}\n\n\t\tif (count(array_diff($available_templates, $templates_done)) > 0) {\n\t\t\t$mail_actions_links = [\n\t\t\t\t[\n\t\t\t\t\t'href' => $linker->getLink(['section' => 'templates', 'page' => $page, 'action' => 'add']),\n\t\t\t\t\t'label' => lng('admin.templates.template_add')\n\t\t\t\t]\n\t\t\t];\n\t\t}\n\t}\n\n\t$mailtpl_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/admin/tablelisting.mailtemplates.php';\n\t$collection_mail = [\n\t\t'data' => $templates,\n\t\t'pagination' => []\n\t];\n\n\t// filetemplates\n\t$result_stmt = Database::prepare(\"\n\t\tSELECT `id`, `varname` FROM `\" . TABLE_PANEL_TEMPLATES . \"`\n\t\tWHERE `adminid` = :adminid AND `templategroup`='files'\");\n\tDatabase::pexecute($result_stmt, [\n\t\t'adminid' => $userinfo['adminid']\n\t]);\n\n\t$filetemplates = [];\n\twhile ($row = $result_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t$filetemplates[] = [\n\t\t\t'id' => $row['id'],\n\t\t\t'template' => lng('admin.templates.' . $row['varname'])\n\t\t];\n\t}\n\n\t$file_actions_links = false;\n\tif (Database::num_rows() != count($file_templates)) {\n\t\t$file_actions_links = [\n\t\t\t[\n\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t'section' => 'templates',\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => 'add',\n\t\t\t\t\t'files' => 'files'\n\t\t\t\t]),\n\t\t\t\t'label' => lng('admin.templates.template_fileadd')\n\t\t\t]\n\t\t];\n\t}\n\n\t$filetpl_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/admin/tablelisting.filetemplates.php';\n\t$collection_file = [\n\t\t'data' => $filetemplates,\n\t\t'pagination' => []\n\t];\n\n\tif ($mail_actions_links === false) {\n\t\t$mail_actions_links = [];\n\t}\n\tif ($file_actions_links === false) {\n\t\t$file_actions_links = [];\n\t}\n\n\tUI::view('user/table-tpl.html.twig', [\n\t\t'maillisting' => Listing::formatFromArray($collection_mail, $mailtpl_list_data['mailtpl_list'], 'mailtpl_list'),\n\t\t'filelisting' => Listing::formatFromArray($collection_file, $filetpl_list_data['filetpl_list'], 'filetpl_list'),\n\t\t'actions_links' => array_merge($mail_actions_links, $file_actions_links)\n\t]);\n} elseif ($action == 'delete' && $subjectid != 0 && $mailbodyid != 0) {\n\t// email templates\n\t$result_stmt = Database::prepare(\"\n\t\tSELECT `language`, `varname` FROM `\" . TABLE_PANEL_TEMPLATES . \"`\n\t\tWHERE `adminid` = :adminid AND `id` = :id\");\n\tDatabase::pexecute($result_stmt, [\n\t\t'adminid' => $userinfo['adminid'],\n\t\t'id' => $subjectid\n\t]);\n\t$result = $result_stmt->fetch(PDO::FETCH_ASSOC);\n\n\tif ($result['varname'] != '') {\n\t\tif (Request::post('send') == 'send') {\n\t\t\t$del_stmt = Database::prepare(\"\n\t\t\t\tDELETE FROM `\" . TABLE_PANEL_TEMPLATES . \"`\n\t\t\t\tWHERE `adminid` = :adminid\n\t\t\t\tAND (`id` = :ida OR `id` = :idb)\");\n\t\t\tDatabase::pexecute($del_stmt, [\n\t\t\t\t'adminid' => $userinfo['adminid'],\n\t\t\t\t'ida' => $subjectid,\n\t\t\t\t'idb' => $mailbodyid\n\t\t\t]);\n\t\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_INFO, \"deleted template '\" . $result['language'] . ' - ' . lng('admin.templates.' . str_replace('_subject', '', $result['varname'])) . \"'\");\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t} else {\n\t\t\tHTML::askYesNo('admin_template_reallydelete', $filename, [\n\t\t\t\t'subjectid' => $subjectid,\n\t\t\t\t'mailbodyid' => $mailbodyid,\n\t\t\t\t'page' => $page,\n\t\t\t\t'action' => $action\n\t\t\t], $result['language'] . ' - ' . lng('admin.templates.' . str_replace('_subject', '', $result['varname'])));\n\t\t}\n\t}\n} elseif ($action == 'deletef' && $id != 0) {\n\t// file templates\n\t$result_stmt = Database::prepare(\"\n\t\tSELECT * FROM `\" . TABLE_PANEL_TEMPLATES . \"`\n\t\tWHERE `adminid` = :adminid AND `id` = :id\");\n\tDatabase::pexecute($result_stmt, [\n\t\t'adminid' => $userinfo['adminid'],\n\t\t'id' => $id\n\t]);\n\n\tif (Database::num_rows() > 0) {\n\t\t$row = $result_stmt->fetch(PDO::FETCH_ASSOC);\n\n\t\tif (Request::post('send') == 'send') {\n\t\t\t$del_stmt = Database::prepare(\"\n\t\t\t\tDELETE FROM `\" . TABLE_PANEL_TEMPLATES . \"`\n\t\t\t\tWHERE `adminid` = :adminid AND `id` = :id\");\n\t\t\tDatabase::pexecute($del_stmt, [\n\t\t\t\t'adminid' => $userinfo['adminid'],\n\t\t\t\t'id' => $id\n\t\t\t]);\n\t\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_INFO, \"deleted template '\" . lng('admin.templates.' . $row['varname']) . \"'\");\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t} else {\n\t\t\tHTML::askYesNo('admin_template_reallydelete', $filename, [\n\t\t\t\t'id' => $id,\n\t\t\t\t'page' => $page,\n\t\t\t\t'action' => $action\n\t\t\t], lng('admin.templates.' . $row['varname']));\n\t\t}\n\t} else {\n\t\tResponse::standardError('templatenotfound');\n\t}\n} elseif ($action == 'add') {\n\tif (Request::post('prepare') == 'prepare') {\n\t\t// email templates\n\t\t$language = htmlentities(Validate::validate(Request::post('language'), 'language', '/^[^\\r\\n\\0\"\\']+$/', 'nolanguageselect'));\n\t\tif (!array_key_exists($language, $languages)) {\n\t\t\tResponse::standardError('templatelanguageinvalid');\n\t\t}\n\t\t$template = Validate::validate(Request::post('template'), 'template');\n\n\t\t$result_stmt = Database::prepare(\"\n\t\t\tSELECT COUNT(*) as def FROM `\" . TABLE_PANEL_TEMPLATES . \"`\n\t\t\tWHERE `adminid` = :adminid AND `language` = :lang\n\t\t\tAND `templategroup` = 'mails' AND `varname` LIKE :template\n\t\t\");\n\t\t$result = Database::pexecute_first($result_stmt, [\n\t\t\t'adminid' => $userinfo['adminid'],\n\t\t\t'lang' => $language,\n\t\t\t'template' => $template . '%'\n\t\t]);\n\t\tif ($result && $result['def'] > 0) {\n\t\t\tResponse::standardError('templatelanguagecombodefined');\n\t\t}\n\n\t\t// set target language\n\t\tLanguage::setLanguage($language);\n\n\t\t$subject = lng('mails.' . $template . '.subject');\n\t\t$body = str_replace('\\n', \"\\n\", lng('mails.' . $template . '.mailbody'));\n\n\t\t// re set language to user\n\t\tLanguage::setLanguage(CurrentUser::getField('def_language'));\n\n\t\t$template_add_data = include_once dirname(__FILE__) . '/lib/formfields/admin/templates/formfield.template_add.php';\n\n\t\tUI::view('user/form-replacers.html.twig', [\n\t\t\t'formaction' => $linker->getLink(['section' => 'templates']),\n\t\t\t'formdata' => $template_add_data['template_add'],\n\t\t\t'replacers' => $template_add_data['template_replacers']\n\t\t]);\n\t} elseif (Request::post('send') == 'send' && empty(Request::post('filesend'))) {\n\t\t// email templates\n\t\t$language = htmlentities(Validate::validate(Request::post('language'), 'language', '/^[^\\r\\n\\0\"\\']+$/', 'nolanguageselect'));\n\t\tif (!array_key_exists($language, $languages)) {\n\t\t\tResponse::standardError('templatelanguageinvalid');\n\t\t}\n\t\t$template = Validate::validate(Request::post('template'), 'template');\n\t\t$subject = Validate::validate(Request::post('subject'), 'subject', '/^[^\\r\\n\\0]+$/', 'nosubjectcreate');\n\t\t$mailbody = Validate::validate(Request::post('mailbody'), 'mailbody', '/^[^\\0]+$/', 'nomailbodycreate');\n\t\t$templates = [];\n\t\t$result_stmt = Database::prepare(\"\n\t\t\tSELECT `varname` FROM `\" . TABLE_PANEL_TEMPLATES . \"`\n\t\t\tWHERE `adminid` = :adminid AND `language` = :lang\n\t\t\tAND `templategroup` = 'mails' AND `varname` LIKE '%_subject'\");\n\t\tDatabase::pexecute($result_stmt, [\n\t\t\t'adminid' => $userinfo['adminid'],\n\t\t\t'lang' => $language\n\t\t]);\n\n\t\twhile ($row = $result_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t$templates[] = str_replace('_subject', '', $row['varname']);\n\t\t}\n\n\t\t$templates = array_diff($available_templates, $templates);\n\t\tif (!in_array($template, $templates)) {\n\t\t\tResponse::standardError('templatenotfound');\n\t\t} else {\n\t\t\t$ins_stmt = Database::prepare(\"\n\t\t\t\tINSERT INTO `\" . TABLE_PANEL_TEMPLATES . \"` SET\n\t\t\t\t\t`adminid` = :adminid,\n\t\t\t\t\t`language` = :lang,\n\t\t\t\t\t`templategroup` = 'mails',\n\t\t\t\t\t`varname` = :var,\n\t\t\t\t\t`value` = :value\");\n\n\t\t\t// mail-subject\n\t\t\t$ins_data = [\n\t\t\t\t'adminid' => $userinfo['adminid'],\n\t\t\t\t'lang' => $language,\n\t\t\t\t'var' => $template . '_subject',\n\t\t\t\t'value' => $subject\n\t\t\t];\n\t\t\tDatabase::pexecute($ins_stmt, $ins_data);\n\n\t\t\t// mail-body\n\t\t\t$ins_data = [\n\t\t\t\t'adminid' => $userinfo['adminid'],\n\t\t\t\t'lang' => $language,\n\t\t\t\t'var' => $template . '_mailbody',\n\t\t\t\t'value' => $mailbody\n\t\t\t];\n\t\t\tDatabase::pexecute($ins_stmt, $ins_data);\n\n\t\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_INFO, \"added template '\" . $language . ' - ' . $template . \"'\");\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t}\n\t} elseif (Request::post('filesend') == 'filesend') {\n\t\t// file templates\n\t\t$template = Validate::validate(Request::post('template'), 'template');\n\t\t$filecontent = Validate::validate(Request::post('filecontent'), 'filecontent', '/^[^\\0]+$/', 'filecontentnotset');\n\n\t\t$ins_stmt = Database::prepare(\"\n\t\t\tINSERT INTO `\" . TABLE_PANEL_TEMPLATES . \"` SET\n\t\t\t\t`adminid` = :adminid,\n\t\t\t\t`language` = '',\n\t\t\t\t`templategroup` = 'files',\n\t\t\t\t`varname` = :var,\n\t\t\t\t`value` = :value\");\n\n\t\t$ins_data = [\n\t\t\t'adminid' => $userinfo['adminid'],\n\t\t\t'var' => $template,\n\t\t\t'value' => $filecontent\n\t\t];\n\t\tDatabase::pexecute($ins_stmt, $ins_data);\n\n\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_INFO, \"added template '\" . $template . \"'\");\n\t\tResponse::redirectTo($filename, [\n\t\t\t'page' => $page\n\t\t]);\n\t} elseif (empty(Request::get('files'))) {\n\t\t// email templates\n\t\t$add = false;\n\t\t$language_options = [];\n\t\t$template_options = [];\n\n\t\tforeach ($languages as $language_file => $language_name) {\n\t\t\t$templates = [];\n\t\t\t$result_stmt = Database::prepare(\"\n\t\t\t\tSELECT `varname` FROM `\" . TABLE_PANEL_TEMPLATES . \"`\n\t\t\t\tWHERE `adminid` = :adminid AND `language` = :lang\n\t\t\t\tAND `templategroup` = 'mails' AND `varname` LIKE '%_subject'\");\n\t\t\tDatabase::pexecute($result_stmt, [\n\t\t\t\t'adminid' => $userinfo['adminid'],\n\t\t\t\t'lang' => $language_name\n\t\t\t]);\n\n\t\t\twhile ($row = $result_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t$templates[] = str_replace('_subject', '', $row['varname']);\n\t\t\t}\n\n\t\t\tif (count(array_diff($available_templates, $templates)) > 0) {\n\t\t\t\t$add = true;\n\t\t\t\t$language_options[$language_file] = $language_name;\n\n\t\t\t\t$templates = array_diff($available_templates, $templates);\n\n\t\t\t\tforeach ($templates as $template) {\n\t\t\t\t\t$template_options[$template] = lng('admin.templates.' . $template);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($add) {\n\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'templates']),\n\t\t\t\t'formdata' => [\n\t\t\t\t\t'title' => lng('admin.templates.template_add'),\n\t\t\t\t\t'image' => 'fa-solid fa-plus',\n\t\t\t\t\t'self_overview' => ['section' => 'templates', 'page' => 'email'],\n\t\t\t\t\t'sections' => [\n\t\t\t\t\t\t'section_a' => [\n\t\t\t\t\t\t\t'title' => lng('admin.templates.template_add'),\n\t\t\t\t\t\t\t'fields' => [\n\t\t\t\t\t\t\t\t'language' => [\n\t\t\t\t\t\t\t\t\t'label' => lng('login.language'),\n\t\t\t\t\t\t\t\t\t'type' => 'select',\n\t\t\t\t\t\t\t\t\t'select_var' => $language_options,\n\t\t\t\t\t\t\t\t\t'selected' => $userinfo['language']\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t'template' => [\n\t\t\t\t\t\t\t\t\t'label' => lng('admin.templates.action'),\n\t\t\t\t\t\t\t\t\t'type' => 'select',\n\t\t\t\t\t\t\t\t\t'select_var' => $template_options\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t'prepare' => [\n\t\t\t\t\t\t\t\t\t'type' => 'hidden',\n\t\t\t\t\t\t\t\t\t'value' => 'prepare'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t'editid' => $id\n\t\t\t]);\n\t\t} else {\n\t\t\tResponse::standardError('alltemplatesdefined');\n\t\t}\n\t} else {\n\t\t// filetemplates\n\t\t$result_stmt = Database::prepare(\"\n\t\t\tSELECT `id`, `varname` FROM `\" . TABLE_PANEL_TEMPLATES . \"`\n\t\t\tWHERE `adminid` = :adminid AND `templategroup`='files'\");\n\t\tDatabase::pexecute($result_stmt, [\n\t\t\t'adminid' => $userinfo['adminid']\n\t\t]);\n\n\t\tif (Database::num_rows() == count($file_templates)) {\n\t\t\tResponse::standardError('alltemplatesdefined');\n\t\t} else {\n\t\t\t$templatesdefined = [];\n\t\t\t$free_templates = [];\n\n\t\t\twhile ($row = $result_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t$templatesdefined[] = $row['varname'];\n\t\t\t}\n\n\t\t\tforeach (array_diff($file_templates, $templatesdefined) as $template) {\n\t\t\t\t$free_templates[$template] = lng('admin.templates.' . $template);\n\t\t\t}\n\n\t\t\t$filetemplate_add_data = include_once dirname(__FILE__) . '/lib/formfields/admin/templates/formfield.filetemplate_add.php';\n\n\t\t\tUI::view('user/form-replacers.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'templates']),\n\t\t\t\t'formdata' => $filetemplate_add_data['filetemplate_add'],\n\t\t\t\t'replacers' => $filetemplate_add_data['filetemplate_replacers']\n\t\t\t]);\n\t\t}\n\t}\n} elseif ($action == 'edit' && $subjectid != 0 && $mailbodyid != 0) {\n\t// email templates\n\t$result_stmt = Database::prepare(\"\n\t\tSELECT `language`, `varname`, `value` FROM `\" . TABLE_PANEL_TEMPLATES . \"`\n\t\tWHERE `adminid` = :adminid AND `id` = :subjectid\");\n\tDatabase::pexecute($result_stmt, [\n\t\t'adminid' => $userinfo['adminid'],\n\t\t'subjectid' => $subjectid\n\t]);\n\t$result = $result_stmt->fetch(PDO::FETCH_ASSOC);\n\n\tif ($result['varname'] != '') {\n\t\tif (Request::post('send') == 'send') {\n\t\t\t$subject = Validate::validate(Request::post('subject'), 'subject', '/^[^\\r\\n\\0]+$/', 'nosubjectcreate');\n\t\t\t$mailbody = Validate::validate(Request::post('mailbody'), 'mailbody', '/^[^\\0]+$/', 'nomailbodycreate');\n\n\t\t\t$upd_stmt = Database::prepare(\"\n\t\t\t\tUPDATE `\" . TABLE_PANEL_TEMPLATES . \"` SET\n\t\t\t\t\t`value` = :value\n\t\t\t\tWHERE `adminid` = :adminid AND `id` = :id\");\n\t\t\t// subject\n\t\t\tDatabase::pexecute($upd_stmt, [\n\t\t\t\t'value' => $subject,\n\t\t\t\t'adminid' => $userinfo['adminid'],\n\t\t\t\t'id' => $subjectid\n\t\t\t]);\n\t\t\t// same query but mailbody\n\t\t\tDatabase::pexecute($upd_stmt, [\n\t\t\t\t'value' => $mailbody,\n\t\t\t\t'adminid' => $userinfo['adminid'],\n\t\t\t\t'id' => $mailbodyid\n\t\t\t]);\n\n\t\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_INFO, \"edited template '\" . $result['varname'] . \"'\");\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t} else {\n\t\t\t$result = PhpHelper::htmlentitiesArray($result);\n\t\t\t$template_name = lng('admin.templates.' . str_replace('_subject', '', $result['varname']));\n\t\t\t$subject = $result['value'];\n\t\t\t$result_stmt = Database::prepare(\"\n\t\t\t\tSELECT `language`, `varname`, `value`\n\t\t\t\tFROM `\" . TABLE_PANEL_TEMPLATES . \"`\n\t\t\t\tWHERE `id` = :id\");\n\t\t\tDatabase::pexecute($result_stmt, [\n\t\t\t\t'id' => $mailbodyid\n\t\t\t]);\n\t\t\t$result = $result_stmt->fetch(PDO::FETCH_ASSOC);\n\n\t\t\t$template = str_replace('_mailbody', '', $result['varname']);\n\n\t\t\t// don't escape the already escaped language-string so save up before htmlentities()\n\t\t\t$language = $result['language'];\n\t\t\t$result = PhpHelper::htmlentitiesArray($result);\n\t\t\t$mailbody = $result['value'];\n\n\t\t\t$template_edit_data = include_once dirname(__FILE__) . '/lib/formfields/admin/templates/formfield.template_edit.php';\n\n\t\t\tUI::view('user/form-replacers.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'templates']),\n\t\t\t\t'formdata' => $template_edit_data['template_edit'],\n\t\t\t\t'replacers' => $template_edit_data['template_replacers']\n\t\t\t]);\n\t\t}\n\t}\n} elseif ($action == 'editf' && $id != 0) {\n\t// file templates\n\t$result_stmt = Database::prepare(\"\n\t\tSELECT * FROM `\" . TABLE_PANEL_TEMPLATES . \"`\n\t\tWHERE `adminid` = :adminid AND `id` = :id\");\n\tDatabase::pexecute($result_stmt, [\n\t\t'adminid' => $userinfo['adminid'],\n\t\t'id' => $id\n\t]);\n\n\tif (Database::num_rows() > 0) {\n\t\t$row = $result_stmt->fetch(PDO::FETCH_ASSOC);\n\n\t\t// filetemplates\n\t\tif (Request::post('filesend') == 'filesend') {\n\t\t\t$filecontent = Validate::validate(Request::post('filecontent'), 'filecontent', '/^[^\\0]+$/', 'filecontentnotset');\n\t\t\t$upd_stmt = Database::prepare(\"\n\t\t\t\tUPDATE `\" . TABLE_PANEL_TEMPLATES . \"` SET\n\t\t\t\t\t`value` = :value\n\t\t\t\tWHERE `adminid` = :adminid AND `id` = :id\");\n\t\t\tDatabase::pexecute($upd_stmt, [\n\t\t\t\t'value' => $filecontent,\n\t\t\t\t'adminid' => $userinfo['adminid'],\n\t\t\t\t'id' => $id\n\t\t\t]);\n\n\t\t\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_INFO, \"edited template '\" . $row['varname'] . \"'\");\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t} else {\n\t\t\t$row = PhpHelper::htmlentitiesArray($row);\n\n\t\t\t$filetemplate_edit_data = include_once dirname(__FILE__) . '/lib/formfields/admin/templates/formfield.filetemplate_edit.php';\n\n\t\t\tUI::view('user/form-replacers.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'templates']),\n\t\t\t\t'formdata' => $filetemplate_edit_data['filetemplate_edit'],\n\t\t\t\t'replacers' => $filetemplate_edit_data['filetemplate_replacers'],\n\t\t\t\t'editid' => $id\n\t\t\t]);\n\t\t}\n\t} else {\n\t\tResponse::standardError('templatenotfound');\n\t}\n}\n"
        },
        {
          "name": "admin_traffic.php",
          "type": "blob",
          "size": 1.478515625,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Traffic\\Traffic;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n$range = Request::any('range', 'currentmonth');\n\nif ($page == 'overview' || $page == 'customers') {\n\ttry {\n\t\t$context = Traffic::getCustomerStats($userinfo, $range);\n\t} catch (Exception $e) {\n\t\tif ($e->getCode() === 405) {\n\t\t\tResponse::dynamicError(lng('traffic.nocustomers'));\n\t\t}\n\t\tResponse::dynamicError($e->getMessage());\n\t}\n\n\t// pass metrics to the view\n\tUI::view('user/traffic.html.twig', $context);\n}\n"
        },
        {
          "name": "admin_updates.php",
          "type": "blob",
          "size": 3.6611328125,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'admin';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Cron\\TaskId;\nuse Froxlor\\Froxlor;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\Install\\Preconfig;\nuse Froxlor\\Install\\Update;\nuse Froxlor\\Settings;\nuse Froxlor\\System\\Cronjob;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\nuse Froxlor\\User;\n\nif ($page == 'overview') {\n\t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"viewed admin_updates\");\n\n\tif (!Froxlor::isFroxlor()) {\n\t\tthrow new Exception('SysCP/customized upgrades are not supported');\n\t}\n\n\tif (Froxlor::hasDbUpdates() || Froxlor::hasUpdates()) {\n\t\t$successful_update = false;\n\t\t$message = '';\n\n\t\tif (Request::post('send') == 'send') {\n\t\t\tif ((!empty(Request::post('update_preconfig')) && intval(Request::post('update_changesagreed', 0)) != 0) || empty(Request::post('update_preconfig'))) {\n\t\t\t\tinclude_once Froxlor::getInstallDir() . 'install/updatesql.php';\n\n\t\t\t\tUser::updateCounters();\n\t\t\t\tCronjob::inserttask(TaskId::REBUILD_VHOST);\n\t\t\t\t@chmod(Froxlor::getInstallDir() . '/lib/userdata.inc.php', 0400);\n\n\t\t\t\tUI::view('install/update.html.twig', [\n\t\t\t\t\t'checks' => Update::getUpdateTasks()\n\t\t\t\t]);\n\t\t\t\texit;\n\t\t\t} else {\n\t\t\t\t$message = '<br><br><strong>You have to agree that you have read the update notifications.</strong>';\n\t\t\t}\n\t\t}\n\n\t\t$current_version = Settings::Get('panel.version');\n\t\t$current_db_version = Settings::Get('panel.db_version');\n\t\tif (empty($current_db_version)) {\n\t\t\t$current_db_version = \"0\";\n\t\t}\n\t\t$new_version = Froxlor::VERSION;\n\t\t$new_db_version = Froxlor::DBVERSION;\n\n\t\tif (Froxlor::VERSION != $current_version) {\n\t\t\t$replacer_currentversion = $current_version;\n\t\t\t$replacer_newversion = $new_version;\n\t\t} else {\n\t\t\t// show db version\n\t\t\t$replacer_currentversion = $current_db_version;\n\t\t\t$replacer_newversion = $new_db_version;\n\t\t}\n\t\t$ui_text = lng('update.update_information.part_a', [$replacer_newversion, $replacer_currentversion]);\n\t\t$ui_text .= lng('update.update_information.part_b');\n\n\t\t$upd_formfield = [\n\t\t\t'updates' => [\n\t\t\t\t'title' => lng('update.update'),\n\t\t\t\t'image' => 'fa-solid fa-download',\n\t\t\t\t'description' => lng('update.description'),\n\t\t\t\t'sections' => [],\n\t\t\t\t'buttons' => [\n\t\t\t\t\t[\n\t\t\t\t\t\t'label' => lng('update.proceed')\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t];\n\n\t\t$preconfig = Preconfig::getPreConfig();\n\t\tif (!empty($preconfig)) {\n\t\t\t$upd_formfield['updates']['sections'] = $preconfig;\n\t\t}\n\n\t\tUI::view('user/form-note.html.twig', [\n\t\t\t'formaction' => $linker->getLink(['section' => 'updates']),\n\t\t\t'formdata' => $upd_formfield['updates'],\n\t\t\t// alert\n\t\t\t'type' => !empty($message) ? 'danger' : 'info',\n\t\t\t'alert_msg' => $ui_text . $message\n\t\t]);\n\t} else {\n\t\tResponse::standardSuccess('update.noupdatesavail', Settings::Get('system.update_channel') == 'testing' ? lng('serversettings.uc_testing') . ' ' : '');\n\t}\n}\n"
        },
        {
          "name": "api.php",
          "type": "blob",
          "size": 1.37109375,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nuse Froxlor\\Api\\Api;\nuse Froxlor\\Api\\Response;\n\nrequire __DIR__ . '/vendor/autoload.php';\nrequire __DIR__ . '/lib/functions.php';\nrequire __DIR__ . '/lib/tables.inc.php';\n\n// set error-handler\n@set_error_handler([\n\t'\\\\Froxlor\\\\Api\\\\Api',\n\t'phpErrHandler'\n]);\n\n// Return response\ntry {\n\techo (new Api)->formatMiddleware(@file_get_contents('php://input'))->handle();\n} catch (Exception $e) {\n\techo Response::jsonErrorResponse($e->getMessage(), $e->getCode());\n}\n"
        },
        {
          "name": "api_keys.php",
          "type": "blob",
          "size": 5.8837890625,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nif (!defined('AREA')) {\n\theader(\"Location: index.php\");\n\texit();\n}\n\nuse Froxlor\\Database\\Database;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n// redirect if this customer has no permission for API usage\nif ($userinfo['adminsession'] == 0 && $userinfo['api_allowed'] == 0) {\n\tResponse::redirectTo('customer_index.php');\n}\n// redirect if this admin has no permission for API usage\nif ($userinfo['adminsession'] == 1 && $userinfo['api_allowed'] == 0) {\n\tResponse::redirectTo('admin_index.php');\n}\n\n// This file is being included in admin_index and customer_index\n// and therefore does not need to require lib/init.php\n\n$del_stmt = Database::prepare(\"DELETE FROM `\" . TABLE_API_KEYS . \"` WHERE id = :id\");\n$id = (int)Request::any('id');\n\n// do the delete and then just show a success-message and the apikeys list again\nif ($action == 'delete' && $id > 0) {\n\tHTML::askYesNo('apikey_reallydelete', $filename, [\n\t\t'id' => $id,\n\t\t'page' => $page,\n\t\t'action' => 'deletesure'\n\t], '', [\n\t\t'section' => 'index',\n\t\t'page' => $page\n\t]);\n} elseif (Request::post('send') == 'send' && $action == 'deletesure' && $id > 0) {\n\t$chk = (AREA == 'admin' && $userinfo['customers_see_all'] == '1') ? true : false;\n\tif (AREA == 'customer') {\n\t\t$chk_stmt = Database::prepare(\"\n\t\t\t\tSELECT c.customerid FROM `\" . TABLE_PANEL_CUSTOMERS . \"` c\n\t\t\t\tLEFT JOIN `\" . TABLE_API_KEYS . \"` ak ON ak.customerid = c.customerid\n\t\t\t\tWHERE ak.`id` = :id AND c.`customerid` = :cid\n\t\t\t\");\n\t\t$chk = Database::pexecute_first($chk_stmt, [\n\t\t\t'id' => $id,\n\t\t\t'cid' => $userinfo['customerid']\n\t\t]);\n\t} elseif (AREA == 'admin' && $userinfo['customers_see_all'] == '0') {\n\t\t$chk_stmt = Database::prepare(\"\n\t\t\t\tSELECT a.adminid FROM `\" . TABLE_PANEL_ADMINS . \"` a\n\t\t\t\tLEFT JOIN `\" . TABLE_API_KEYS . \"` ak ON ak.adminid = a.adminid\n\t\t\t\tWHERE ak.`id` = :id AND a.`adminid` = :aid\n\t\t\t\");\n\t\t$chk = Database::pexecute_first($chk_stmt, [\n\t\t\t'id' => $id,\n\t\t\t'aid' => $userinfo['adminid']\n\t\t]);\n\t}\n\tif ($chk !== false) {\n\t\tDatabase::pexecute($del_stmt, [\n\t\t\t'id' => $id\n\t\t]);\n\t\tResponse::standardSuccess('apikeys.apikey_removed', $id, [\n\t\t\t'filename' => $filename,\n\t\t\t'page' => $page\n\t\t]);\n\t}\n} elseif ($action == 'add') {\n\tif (Request::post('send') == 'send') {\n\t\t$ins_stmt = Database::prepare(\"\n\t\t\tINSERT INTO `\" . TABLE_API_KEYS . \"` SET\n\t\t\t`apikey` = :key, `secret` = :secret, `adminid` = :aid, `customerid` = :cid, `valid_until` = '-1', `allowed_from` = ''\n\t\t\");\n\t\t// customer generates for himself, admins will see a customer-select-box later\n\t\tif (AREA == 'admin') {\n\t\t\t$cid = 0;\n\t\t} elseif (AREA == 'customer') {\n\t\t\t$cid = $userinfo['customerid'];\n\t\t}\n\t\t$key = hash('sha256', openssl_random_pseudo_bytes(64 * 64));\n\t\t$secret = hash('sha512', openssl_random_pseudo_bytes(64 * 64 * 4));\n\t\tDatabase::pexecute($ins_stmt, [\n\t\t\t'key' => $key,\n\t\t\t'secret' => $secret,\n\t\t\t'aid' => $userinfo['adminid'],\n\t\t\t'cid' => $cid\n\t\t]);\n\t\tResponse::standardSuccess('apikeys.apikey_added', '', [\n\t\t\t'filename' => $filename,\n\t\t\t'page' => $page\n\t\t]);\n\t}\n\tHTML::askYesNo('apikey_reallyadd', $filename, [\n\t\t'id' => $id,\n\t\t'page' => $page,\n\t\t'action' => $action\n\t], '', [\n\t\t'section' => 'index',\n\t\t'page' => $page\n\t]);\n\texit;\n}\n\n$log->logAction(FroxlorLogger::USR_ACTION, LOG_NOTICE, \"viewed api::api_keys\");\n\n// select all my (accessible) api-keys\n$keys_stmt_query = \"SELECT ak.*, c.loginname, a.loginname as adminname\n\tFROM `\" . TABLE_API_KEYS . \"` ak\n\tLEFT JOIN `\" . TABLE_PANEL_CUSTOMERS . \"` c ON `c`.`customerid` = `ak`.`customerid`\n\tLEFT JOIN `\" . TABLE_PANEL_ADMINS . \"` a ON `a`.`adminid` = `ak`.`adminid`\n\tWHERE \";\n\n$qry_params = [];\nif (AREA == 'admin' && $userinfo['customers_see_all'] == '0') {\n\t// admin with only customer-specific permissions\n\t$keys_stmt_query .= \"ak.adminid = :adminid \";\n\t$qry_params['adminid'] = $userinfo['adminid'];\n\t$fields = [\n\t\t'a.loginname' => lng('login.username')\n\t];\n} elseif (AREA == 'customer') {\n\t// customer-area\n\t$keys_stmt_query .= \"ak.customerid = :cid \";\n\t$qry_params['cid'] = $userinfo['customerid'];\n\t$fields = [\n\t\t'c.loginname' => lng('login.username')\n\t];\n} else {\n\t// admin who can see all customers / reseller / admins\n\t$keys_stmt_query .= \"1 \";\n\t$fields = [\n\t\t'a.loginname' => lng('login.username')\n\t];\n}\n\n//$keys_stmt_query .= $paging->getSqlWhere(true) . \" \" . $paging->getSqlOrderBy() . \" \" . $paging->getSqlLimit();\n\n$keys_stmt = Database::prepare($keys_stmt_query);\nDatabase::pexecute($keys_stmt, $qry_params);\n$all_keys = $keys_stmt->fetchAll(PDO::FETCH_ASSOC);\n\n$apikeys_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/tablelisting.apikeys.php';\n$collection = [\n\t'data' => $all_keys,\n\t'pagination' => []\n];\n\n$tpl = 'user/table.html.twig';\n\nUI::view($tpl, [\n\t'listing' => Listing::formatFromArray($collection, $apikeys_list_data['apikeys_list'], 'apikeys_list'),\n\t'actions_links' => (int)$userinfo['api_allowed'] == 1 ? [\n\t\t[\n\t\t\t'href' => $linker->getLink(['section' => 'index', 'page' => $page, 'action' => 'add']),\n\t\t\t'label' => lng('apikeys.key_add')\n\t\t]\n\t] : null,\n]);\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.xml",
          "type": "blob",
          "size": 10.1865234375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<project name=\"froxlor\" default=\"build\">\n\n\t<!-- Use this when the tools are managed by Composer in ${basedir}/vendor/bin -->\n\t<property name=\"pdepend\" value=\"${basedir}/vendor/bin/pdepend\" />\n\t<property name=\"phpcpd\" value=\"${basedir}/vendor/bin/phpcpd\" />\n\t<property name=\"phpcs\" value=\"${basedir}/vendor/bin/phpcs\" />\n\t<property name=\"phploc\" value=\"${basedir}/vendor/bin/phploc\" />\n\t<property name=\"phpmd\" value=\"${basedir}/vendor/bin/phpmd\" />\n\t<property name=\"phpunit\" value=\"${basedir}/vendor/bin/phpunit\" />\n\n\t<target name=\"full-build\"\n\t\tdepends=\"prepare,composer,static-analysis,phpunit,-check-failure\"\n\t\tdescription=\"Performs static analysis, runs the tests, and generates project documentation\" />\n\n\t<target name=\"full-build-parallel\"\n\t\tdepends=\"prepare,composer,static-analysis-parallel,phpunit,-check-failure\"\n\t\tdescription=\"Performs static analysis (executing the tools in parallel), runs the tests, and generates project documentation\" />\n\n\t<target name=\"quick-build\"\n\t\tdepends=\"prepare,composer,lint,phpunit-no-coverage,-check-failure\"\n\t\tdescription=\"Performs a lint check and runs the tests (without generating code coverage reports)\" />\n\n\t<target name=\"static-analysis\"\n\t\tdepends=\"composer,lint,phploc-ci,pdepend,phpmd-ci,phpcs-ci,phpcompat-ci,phpcpd-ci\"\n\t\tdescription=\"Performs static analysis\" />\n\n\t<!-- Adjust the threadCount attribute's value to the number of CPUs -->\n\t<target name=\"static-analysis-parallel\"\n\t\tdescription=\"Performs static analysis (executing the tools in parallel)\">\n\t\t<parallel threadCount=\"2\">\n\t\t\t<sequential>\n\t\t\t\t<antcall target=\"pdepend\" />\n\t\t\t\t<antcall target=\"phpmd-ci\" />\n\t\t\t</sequential>\n\t\t\t<antcall target=\"lint\" />\n\t\t\t<antcall target=\"phpcpd-ci\" />\n\t\t\t<antcall target=\"phpcs-ci\" />\n\t\t\t<antcall target=\"phpcompat-ci\" />\n\t\t\t<antcall target=\"phploc-ci\" />\n\t\t</parallel>\n\t</target>\n\n\t<target name=\"clean\" unless=\"clean.done\"\n\t\tdescription=\"Cleanup build artifacts\">\n\t\t<delete dir=\"${basedir}/build/api\" />\n\t\t<delete dir=\"${basedir}/build/coverage\" />\n\t\t<delete dir=\"${basedir}/build/logs\" />\n\t\t<delete dir=\"${basedir}/build/pdepend\" />\n\t\t<property name=\"clean.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"prepare\" unless=\"prepare.done\" depends=\"clean\"\n\t\tdescription=\"Prepare for build\">\n\t\t<mkdir dir=\"${basedir}/build/api\" />\n\t\t<mkdir dir=\"${basedir}/build/coverage\" />\n\t\t<mkdir dir=\"${basedir}/build/logs\" />\n\t\t<mkdir dir=\"${basedir}/build/pdepend\" />\n\n\t\t<property name=\"prepare.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"composer\"\n\t\tdescription=\"Installing composer dependencies\" depends=\"prepare\">\n\t\t<exec executable=\"composer\" failonerror=\"true\">\n\t\t\t<arg value=\"install\" />\n\t\t\t<arg value=\"--prefer-dist\" />\n\t\t\t<arg value=\"--no-progress\" />\n\t\t</exec>\n\t</target>\n\n\t<target name=\"lint\" unless=\"lint.done\"\n\t\tdescription=\"Perform syntax check of sourcecode files\">\n\t\t<apply executable=\"php\" taskname=\"lint\">\n\t\t\t<arg value=\"-l\" />\n\n\t\t\t<fileset dir=\"${basedir}/lib/Froxlor\">\n\t\t\t\t<include name=\"**/*.php\" />\n\t\t\t\t<modified />\n\t\t\t</fileset>\n\n\t\t\t<fileset dir=\"${basedir}/tests\">\n\t\t\t\t<include name=\"**/*.php\" />\n\t\t\t\t<modified />\n\t\t\t</fileset>\n\t\t</apply>\n\n\t\t<property name=\"lint.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"phploc\" unless=\"phploc.done\"\n\t\tdescription=\"Measure project size using PHPLOC and print human readable output. Intended for usage on the command line.\">\n\t\t<exec executable=\"${phploc}\" taskname=\"phploc\">\n\t\t\t<arg value=\"--count-tests\" />\n\t\t\t<arg path=\"${basedir}/lib/Froxlor\" />\n\t\t\t<arg path=\"${basedir}/tests\" />\n\t\t</exec>\n\n\t\t<property name=\"phploc.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"phploc-ci\" unless=\"phploc.done\" depends=\"prepare\"\n\t\tdescription=\"Measure project size using PHPLOC and log result in CSV and XML format. Intended for usage within a continuous integration environment.\">\n\t\t<exec executable=\"${phploc}\" taskname=\"phploc\">\n\t\t\t<arg value=\"--count-tests\" />\n\t\t\t<arg value=\"--log-csv\" />\n\t\t\t<arg path=\"${basedir}/build/logs/phploc.csv\" />\n\t\t\t<arg value=\"--log-xml\" />\n\t\t\t<arg path=\"${basedir}/build/logs/phploc.xml\" />\n\t\t\t<arg path=\"${basedir}/lib/Froxlor\" />\n\t\t\t<arg path=\"${basedir}/tests\" />\n\t\t</exec>\n\n\t\t<property name=\"phploc.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"pdepend\" unless=\"pdepend.done\" depends=\"prepare\"\n\t\tdescription=\"Calculate software metrics using PHP_Depend and log result in XML format. Intended for usage within a continuous integration environment.\">\n\t\t<exec executable=\"${pdepend}\" taskname=\"pdepend\">\n\t\t\t<arg value=\"--jdepend-xml=${basedir}/build/logs/jdepend.xml\" />\n\t\t\t<arg\n\t\t\t\tvalue=\"--jdepend-chart=${basedir}/build/pdepend/dependencies.svg\" />\n\t\t\t<arg\n\t\t\t\tvalue=\"--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg\" />\n\t\t\t<arg path=\"${basedir}/lib/Froxlor\" />\n\t\t</exec>\n\n\t\t<property name=\"pdepend.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"phpmd\" unless=\"phpmd.done\"\n\t\tdescription=\"Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.\">\n\t\t<exec executable=\"${phpmd}\" taskname=\"phpmd\">\n\t\t\t<arg path=\"${basedir}/lib/Froxlor\" />\n\t\t\t<arg value=\"text\" />\n\t\t\t<arg path=\"${basedir}/phpmd.xml\" />\n\t\t</exec>\n\n\t\t<property name=\"phpmd.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"phpmd-ci\" unless=\"phpmd.done\" depends=\"prepare\"\n\t\tdescription=\"Perform project mess detection using PHPMD and log result in XML format. Intended for usage within a continuous integration environment.\">\n\t\t<exec executable=\"${phpmd}\" taskname=\"phpmd\">\n\t\t\t<arg path=\"${basedir}/lib/Froxlor\" />\n\t\t\t<arg value=\"xml\" />\n\t\t\t<arg path=\"${basedir}/phpmd.xml\" />\n\t\t\t<arg value=\"--reportfile\" />\n\t\t\t<arg path=\"${basedir}/build/logs/pmd.xml\" />\n\t\t</exec>\n\n\t\t<property name=\"phpmd.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"phpcs\" unless=\"phpcs.done\"\n\t\tdescription=\"Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.\">\n\t\t<exec executable=\"${phpcs}\" taskname=\"phpcs\">\n\t\t\t<arg value=\"--standard=${basedir}/phpcs.xml\" />\n\t\t\t<arg value=\"--extensions=php\" />\n\t\t\t<arg path=\"${basedir}/lib/Froxlor\" />\n\t\t\t<arg path=\"${basedir}/tests\" />\n\t\t</exec>\n\n\t\t<property name=\"phpcs.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"phpcs-ci\" unless=\"phpcs.done\" depends=\"prepare\"\n\t\tdescription=\"Find coding standard violations using PHP_CodeSniffer and log result in XML format. Intended for usage within a continuous integration environment.\">\n\t\t<exec executable=\"${phpcs}\" output=\"/dev/null\" taskname=\"phpcs\">\n\t\t\t<arg value=\"--report=checkstyle\" />\n\t\t\t<arg\n\t\t\t\tvalue=\"--report-file=${basedir}/build/logs/checkstyle-standard.xml\" />\n\t\t\t<arg value=\"--standard=${basedir}/phpcs.xml\" />\n\t\t\t<arg value=\"--extensions=php\" />\n\t\t\t<arg path=\"${basedir}/lib/Froxlor\" />\n\t\t\t<arg path=\"${basedir}/tests\" />\n\t\t</exec>\n\n\t\t<property name=\"phpcs.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"phpcompat\" unless=\"phpcompat.done\"\n\t\tdepends=\"composer\"\n\t\tdescription=\"Find php violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.\">\n\t\t<exec executable=\"${phpcs}\" taskname=\"phpcompat\">\n\t\t\t<arg\n\t\t\t\tline=\"--standard=PHPCompatibility --runtime-set testVersion 5.6 ${basedir}/lib/Froxlor ${basedir}/tests\" />\n\t\t</exec>\n\n\t\t<property name=\"phpcompat.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"phpcompat-ci\" unless=\"phpcompat.done\"\n\t\tdepends=\"composer\"\n\t\tdescription=\"Find php violations using PHP_CodeSniffer and log result in XML format. Intended for usage within a continuous integration environment.\">\n\t\t<exec executable=\"${phpcs}\" output=\"/dev/null\"\n\t\t\ttaskname=\"phpcompat\">\n\t\t\t<arg\n\t\t\t\tline=\"--standard=PHPCompatibility --runtime-set testVersion 5.6 --report=checkstyle --report-file=${basedir}/build/logs/checkstyle-compat.xml ${basedir}/lib/Froxlor ${basedir}/tests\" />\n\t\t</exec>\n\n\t\t<property name=\"phpcompat.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"phpcpd\" unless=\"phpcpd.done\"\n\t\tdescription=\"Find duplicate code using PHPCPD and print human readable output. Intended for usage on the command line before committing.\">\n\t\t<exec executable=\"${phpcpd}\" taskname=\"phpcpd\">\n\t\t\t<arg path=\"${basedir}/lib/Froxlor\" />\n\t\t</exec>\n\n\t\t<property name=\"phpcpd.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"phpcpd-ci\" unless=\"phpcpd.done\" depends=\"prepare\"\n\t\tdescription=\"Find duplicate code using PHPCPD and log result in XML format. Intended for usage within a continuous integration environment.\">\n\t\t<exec executable=\"${phpcpd}\" taskname=\"phpcpd\">\n\t\t\t<arg value=\"--log-pmd\" />\n\t\t\t<arg path=\"${basedir}/build/logs/pmd-cpd.xml\" />\n\t\t\t<arg path=\"${basedir}/lib/Froxlor\" />\n\t\t</exec>\n\n\t\t<property name=\"phpcpd.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"phpunit-prepare\" unless=\"phpunit-prepare.done\" depends=\"composer\"\n\t\tdescription=\"prepare xdebug unit tests\">\n\t\t<exec executable=\"${phpunit}\" resultproperty=\"result.phpunit-prepare\"\n\t\t\ttaskname=\"phpunit\">\n\t\t\t<arg value=\"--configuration\" />\n\t\t\t<arg path=\"${basedir}/phpunit.xml\" />\n\t\t\t<arg value=\"--dump-xdebug-filter\" />\n\t\t\t<arg path=\"${basedir}/tests/xdebug-filter.php\" />\n\t\t</exec>\n\n\t\t<property name=\"phpunit-prepare.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"phpunit\" unless=\"phpunit.done\" depends=\"phpunit-prepare\"\n\t\tdescription=\"Run unit tests with PHPUnit\">\n\t\t<exec executable=\"${phpunit}\" failonerror=\"true\" resultproperty=\"result.phpunit\"\n\t\t\ttaskname=\"phpunit\">\n\t\t\t<arg value=\"--configuration\" />\n\t\t\t<arg path=\"${basedir}/phpunit.xml\" />\n\t\t\t<arg value=\"--testsuite\" />\n\t\t\t<arg value=\"froxlor\" />\n\t\t\t<arg value=\"--prepend\" />\n\t\t\t<arg path=\"${basedir}/tests/xdebug-filter.php\" />\n\t\t</exec>\n\n\t\t<property name=\"phpunit.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"phpunit-no-coverage\" unless=\"phpunit.done\"\n\t\tdepends=\"composer\"\n\t\tdescription=\"Run unit tests with PHPUnit (without generating code coverage reports)\">\n\t\t<exec executable=\"${phpunit}\" failonerror=\"true\" resultproperty=\"result.phpunit\"\n\t\t\ttaskname=\"phpunit\">\n\t\t\t<arg value=\"--configuration\" />\n\t\t\t<arg path=\"${basedir}/phpunit.xml\" />\n\t\t\t<arg value=\"--testsuite\" />\n\t\t\t<arg value=\"froxlor\" />\n\t\t\t<arg value=\"--no-coverage\" />\n\t\t</exec>\n\n\t\t<property name=\"phpunit.done\" value=\"true\" />\n\t</target>\n\n\t<target name=\"-check-failure\">\n\t\t<fail message=\"PHPUnit did not finish successfully\">\n\t\t\t<condition>\n\t\t\t\t<not>\n\t\t\t\t\t<equals arg1=\"${result.phpunit}\" arg2=\"0\" />\n\t\t\t\t</not>\n\t\t\t</condition>\n\t\t</fail>\n\t</target>\n</project>\n"
        },
        {
          "name": "cache",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.3359375,
          "content": "{\n\t\"name\": \"froxlor/froxlor\",\n\t\"description\": \"The server administration software for your needs. Developed by experienced server administrators, this panel simplifies the effort of managing your hosting platform.\",\n\t\"keywords\": [\n\t\t\"server\",\n\t\t\"administration\",\n\t\t\"php\"\n\t],\n\t\"homepage\": \"https://www.froxlor.org\",\n\t\"license\": \"GPL-2.0-or-later\",\n\t\"authors\": [\n\t\t{\n\t\t\t\"name\": \"Michael Kaufmann\",\n\t\t\t\"email\": \"team@froxlor.org\",\n\t\t\t\"role\": \"Lead Developer\"\n\t\t}\n\t],\n\t\"support\": {\n\t\t\"email\": \"team@froxlor.org\",\n\t\t\"issues\": \"https://github.com/Froxlor/Froxlor/issues\",\n\t\t\"forum\": \"https://forum.froxlor.org/\",\n\t\t\"source\": \"https://github.com/Froxlor/Froxlor\",\n\t\t\"docs\": \"https://docs.froxlor.org/\",\n\t\t\"chat\": \"https://discord.froxlor.org/\"\n\t},\n\t\"funding\": [\n\t\t{\n\t\t\t\"type\": \"github\",\n\t\t\t\"url\": \"https://github.com/sponsors/d00p\"\n\t\t}\n\t],\n\t\"require\": {\n\t\t\"php\": \"^7.4 || ^8.0\",\n\t\t\"ext-session\": \"*\",\n\t\t\"ext-ctype\": \"*\",\n\t\t\"ext-pdo\": \"*\",\n\t\t\"ext-pdo_mysql\": \"*\",\n\t\t\"ext-simplexml\": \"*\",\n\t\t\"ext-xml\": \"*\",\n\t\t\"ext-filter\": \"*\",\n\t\t\"ext-posix\": \"*\",\n\t\t\"ext-mbstring\": \"*\",\n\t\t\"ext-curl\": \"*\",\n\t\t\"ext-json\": \"*\",\n\t\t\"ext-openssl\": \"*\",\n\t\t\"ext-fileinfo\": \"*\",\n\t\t\"ext-gmp\": \"*\",\n\t\t\"ext-gd\": \"*\",\n\t\t\"ext-gnupg\": \"*\",\n\t\t\"phpmailer/phpmailer\": \"~6.0\",\n\t\t\"monolog/monolog\": \"^1.24\",\n\t\t\"robthree/twofactorauth\": \"^1.6\",\n\t\t\"froxlor/idna-convert-legacy\": \"^2.1\",\n\t\t\"voku/anti-xss\": \"^4.1\",\n\t\t\"twig/twig\": \"^3.3\",\n\t\t\"symfony/console\": \"^5.4\",\n\t\t\"pear/net_dns2\": \"^1.5\",\n\t\t\"amnuts/opcache-gui\": \"^3.4\",\n\t\t\"league/commonmark\": \"^2.4\"\n\t},\n\t\"require-dev\": {\n\t\t\"phpunit/phpunit\": \"^9\",\n\t\t\"ext-pcntl\": \"*\",\n\t\t\"phpcompatibility/php-compatibility\": \"*\",\n\t\t\"squizlabs/php_codesniffer\": \"*\",\n\t\t\"pdepend/pdepend\": \"^2.9\",\n\t\t\"sebastian/phpcpd\": \"^6.0\",\n\t\t\"phploc/phploc\": \"^7.0\",\n\t\t\"phpmd/phpmd\": \"^2.10\",\n\t\t\"phpunit/php-timer\" : \"^5\",\n\t\t\"phpstan/phpstan\": \"^1.8\"\n\t},\n\t\"suggest\": {\n\t\t\"ext-bcmath\": \"*\",\n\t\t\"ext-zip\": \"*\",\n\t\t\"ext-apcu\": \"*\",\n\t\t\"ext-readline\": \"*\"\n\t},\n\t\"config\": {\n\t\t\"platform\": {\n\t\t\t\"php\": \"7.4\"\n\t\t}\n\t},\n\t\"autoload\": {\n\t\t\"psr-4\": {\n\t\t\t\"Froxlor\\\\\": [\n\t\t\t\t\"lib/Froxlor\"\n\t\t\t]\n\t\t}\n\t},\n\t\"scripts\": {\n\t\t\"post-install-cmd\": \"if [ -f ./vendor/bin/phpcs ]; then \\\"vendor/bin/phpcs\\\" --config-set installed_paths vendor/phpcompatibility/php-compatibility ; fi\",\n\t\t\"post-update-cmd\" : \"if [ -f ./vendor/bin/phpcs ]; then \\\"vendor/bin/phpcs\\\" --config-set installed_paths vendor/phpcompatibility/php-compatibility ; fi\"\n\t}\n}\n"
        },
        {
          "name": "composer.lock",
          "type": "blob",
          "size": 176.26953125,
          "content": "{\n    \"_readme\": [\n        \"This file locks the dependencies of your project to a known state\",\n        \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies\",\n        \"This file is @generated automatically\"\n    ],\n    \"content-hash\": \"d816217447c19befb9f4757a53a7b40e\",\n    \"packages\": [\n        {\n            \"name\": \"amnuts/opcache-gui\",\n            \"version\": \"3.5.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/amnuts/opcache-gui.git\",\n                \"reference\": \"4ad9866c4bb5a96fd8a40353afb15f6934f4919b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/amnuts/opcache-gui/zipball/4ad9866c4bb5a96fd8a40353afb15f6934f4919b\",\n                \"reference\": \"4ad9866c4bb5a96fd8a40353afb15f6934f4919b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"ext-zend-opcache\": \"*\",\n                \"php\": \">=7.1.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Amnuts\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Andrew Collington\",\n                    \"email\": \"andy@amnuts.com\",\n                    \"homepage\": \"https://blog.amnuts.com/\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Contributors\",\n                    \"homepage\": \"https://github.com/amnuts/opcache-gui/graphs/contributors\"\n                }\n            ],\n            \"description\": \"A clean, effective and responsive interface for Zend OPcache, with real(ish)-time monitoring, filtering and the ability to invalidate files\",\n            \"keywords\": [\n                \"Opcache\",\n                \"cache\",\n                \"gui\",\n                \"interface\",\n                \"opcodes\"\n            ],\n            \"support\": {\n                \"email\": \"andy@amnuts.com\",\n                \"issues\": \"https://github.com/amnuts/opcache-gui/issues\",\n                \"source\": \"https://github.com/amnuts/opcache-gui/tree/3.5.5\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/amnuts\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-06-23T13:01:33+00:00\"\n        },\n        {\n            \"name\": \"dflydev/dot-access-data\",\n            \"version\": \"v3.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/dflydev/dflydev-dot-access-data.git\",\n                \"reference\": \"a23a2bf4f31d3518f3ecb38660c95715dfead60f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/dflydev/dflydev-dot-access-data/zipball/a23a2bf4f31d3518f3ecb38660c95715dfead60f\",\n                \"reference\": \"a23a2bf4f31d3518f3ecb38660c95715dfead60f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"phpstan/phpstan\": \"^0.12.42\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.3\",\n                \"scrutinizer/ocular\": \"1.6.0\",\n                \"squizlabs/php_codesniffer\": \"^3.5\",\n                \"vimeo/psalm\": \"^4.0.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Dflydev\\\\DotAccessData\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Dragonfly Development Inc.\",\n                    \"email\": \"info@dflydev.com\",\n                    \"homepage\": \"http://dflydev.com\"\n                },\n                {\n                    \"name\": \"Beau Simensen\",\n                    \"email\": \"beau@dflydev.com\",\n                    \"homepage\": \"http://beausimensen.com\"\n                },\n                {\n                    \"name\": \"Carlos Frutos\",\n                    \"email\": \"carlos@kiwing.it\",\n                    \"homepage\": \"https://github.com/cfrutos\"\n                },\n                {\n                    \"name\": \"Colin O'Dell\",\n                    \"email\": \"colinodell@gmail.com\",\n                    \"homepage\": \"https://www.colinodell.com\"\n                }\n            ],\n            \"description\": \"Given a deep data structure, access data by dot notation.\",\n            \"homepage\": \"https://github.com/dflydev/dflydev-dot-access-data\",\n            \"keywords\": [\n                \"access\",\n                \"data\",\n                \"dot\",\n                \"notation\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/dflydev/dflydev-dot-access-data/issues\",\n                \"source\": \"https://github.com/dflydev/dflydev-dot-access-data/tree/v3.0.3\"\n            },\n            \"time\": \"2024-07-08T12:26:09+00:00\"\n        },\n        {\n            \"name\": \"froxlor/idna-convert-legacy\",\n            \"version\": \"v2.1.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Froxlor/idna-convert-legacy.git\",\n                \"reference\": \"09c1db623ba19e1ed8f2f9dabc15eeda9dc713b7\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Froxlor/idna-convert-legacy/zipball/09c1db623ba19e1ed8f2f9dabc15eeda9dc713b7\",\n                \"reference\": \"09c1db623ba19e1ed8f2f9dabc15eeda9dc713b7\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-pcre\": \"*\",\n                \"php\": \">=5.6.0\"\n            },\n            \"suggest\": {\n                \"ext-iconv\": \"Install ext/iconv for using input / output other than UTF-8 or ISO-8859-1\",\n                \"ext-mbstring\": \"Install ext/mbstring for using input / output other than UTF-8 or ISO-8859-1\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Algo26\\\\IdnaConvert\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-2.1+\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Matthias Sommerfeld\",\n                    \"email\": \"matthias.sommerfeld@algo26.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Michael Kaufmann (d00p)\",\n                    \"email\": \"d00p@froxlor.org\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"A library for encoding and decoding internationalized domain names\",\n            \"homepage\": \"http://idnaconv.net/\",\n            \"keywords\": [\n                \"idn\",\n                \"idna\",\n                \"php\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/Froxlor/idna-convert-legacy/tree/v2.1.2\"\n            },\n            \"time\": \"2019-12-31T12:16:30+00:00\"\n        },\n        {\n            \"name\": \"league/commonmark\",\n            \"version\": \"2.6.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/commonmark.git\",\n                \"reference\": \"d990688c91cedfb69753ffc2512727ec646df2ad\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/commonmark/zipball/d990688c91cedfb69753ffc2512727ec646df2ad\",\n                \"reference\": \"d990688c91cedfb69753ffc2512727ec646df2ad\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-mbstring\": \"*\",\n                \"league/config\": \"^1.1.1\",\n                \"php\": \"^7.4 || ^8.0\",\n                \"psr/event-dispatcher\": \"^1.0\",\n                \"symfony/deprecation-contracts\": \"^2.1 || ^3.0\",\n                \"symfony/polyfill-php80\": \"^1.16\"\n            },\n            \"require-dev\": {\n                \"cebe/markdown\": \"^1.0\",\n                \"commonmark/cmark\": \"0.31.1\",\n                \"commonmark/commonmark.js\": \"0.31.1\",\n                \"composer/package-versions-deprecated\": \"^1.8\",\n                \"embed/embed\": \"^4.4\",\n                \"erusev/parsedown\": \"^1.0\",\n                \"ext-json\": \"*\",\n                \"github/gfm\": \"0.29.0\",\n                \"michelf/php-markdown\": \"^1.4 || ^2.0\",\n                \"nyholm/psr7\": \"^1.5\",\n                \"phpstan/phpstan\": \"^1.8.2\",\n                \"phpunit/phpunit\": \"^9.5.21 || ^10.5.9 || ^11.0.0\",\n                \"scrutinizer/ocular\": \"^1.8.1\",\n                \"symfony/finder\": \"^5.3 | ^6.0 | ^7.0\",\n                \"symfony/process\": \"^5.4 | ^6.0 | ^7.0\",\n                \"symfony/yaml\": \"^2.3 | ^3.0 | ^4.0 | ^5.0 | ^6.0 | ^7.0\",\n                \"unleashedtech/php-coding-standard\": \"^3.1.1\",\n                \"vimeo/psalm\": \"^4.24.0 || ^5.0.0\"\n            },\n            \"suggest\": {\n                \"symfony/yaml\": \"v2.3+ required if using the Front Matter extension\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"2.7-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\CommonMark\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Colin O'Dell\",\n                    \"email\": \"colinodell@gmail.com\",\n                    \"homepage\": \"https://www.colinodell.com\",\n                    \"role\": \"Lead Developer\"\n                }\n            ],\n            \"description\": \"Highly-extensible PHP Markdown parser which fully supports the CommonMark spec and GitHub-Flavored Markdown (GFM)\",\n            \"homepage\": \"https://commonmark.thephpleague.com\",\n            \"keywords\": [\n                \"commonmark\",\n                \"flavored\",\n                \"gfm\",\n                \"github\",\n                \"github-flavored\",\n                \"markdown\",\n                \"md\",\n                \"parser\"\n            ],\n            \"support\": {\n                \"docs\": \"https://commonmark.thephpleague.com/\",\n                \"forum\": \"https://github.com/thephpleague/commonmark/discussions\",\n                \"issues\": \"https://github.com/thephpleague/commonmark/issues\",\n                \"rss\": \"https://github.com/thephpleague/commonmark/releases.atom\",\n                \"source\": \"https://github.com/thephpleague/commonmark\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.colinodell.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.paypal.me/colinpodell/10.00\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/colinodell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/league/commonmark\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-12-29T14:10:59+00:00\"\n        },\n        {\n            \"name\": \"league/config\",\n            \"version\": \"v1.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/config.git\",\n                \"reference\": \"754b3604fb2984c71f4af4a9cbe7b57f346ec1f3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/config/zipball/754b3604fb2984c71f4af4a9cbe7b57f346ec1f3\",\n                \"reference\": \"754b3604fb2984c71f4af4a9cbe7b57f346ec1f3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"dflydev/dot-access-data\": \"^3.0.1\",\n                \"nette/schema\": \"^1.2\",\n                \"php\": \"^7.4 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"phpstan/phpstan\": \"^1.8.2\",\n                \"phpunit/phpunit\": \"^9.5.5\",\n                \"scrutinizer/ocular\": \"^1.8.1\",\n                \"unleashedtech/php-coding-standard\": \"^3.1\",\n                \"vimeo/psalm\": \"^4.7.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\Config\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Colin O'Dell\",\n                    \"email\": \"colinodell@gmail.com\",\n                    \"homepage\": \"https://www.colinodell.com\",\n                    \"role\": \"Lead Developer\"\n                }\n            ],\n            \"description\": \"Define configuration arrays with strict schemas and access values with dot notation\",\n            \"homepage\": \"https://config.thephpleague.com\",\n            \"keywords\": [\n                \"array\",\n                \"config\",\n                \"configuration\",\n                \"dot\",\n                \"dot-access\",\n                \"nested\",\n                \"schema\"\n            ],\n            \"support\": {\n                \"docs\": \"https://config.thephpleague.com/\",\n                \"issues\": \"https://github.com/thephpleague/config/issues\",\n                \"rss\": \"https://github.com/thephpleague/config/releases.atom\",\n                \"source\": \"https://github.com/thephpleague/config\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.colinodell.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.paypal.me/colinpodell/10.00\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/colinodell\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2022-12-11T20:36:23+00:00\"\n        },\n        {\n            \"name\": \"monolog/monolog\",\n            \"version\": \"1.27.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Seldaek/monolog.git\",\n                \"reference\": \"904713c5929655dc9b97288b69cfeedad610c9a1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Seldaek/monolog/zipball/904713c5929655dc9b97288b69cfeedad610c9a1\",\n                \"reference\": \"904713c5929655dc9b97288b69cfeedad610c9a1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\",\n                \"psr/log\": \"~1.0\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0.0\"\n            },\n            \"require-dev\": {\n                \"aws/aws-sdk-php\": \"^2.4.9 || ^3.0\",\n                \"doctrine/couchdb\": \"~1.0@dev\",\n                \"graylog2/gelf-php\": \"~1.0\",\n                \"php-amqplib/php-amqplib\": \"~2.4\",\n                \"php-console/php-console\": \"^3.1.3\",\n                \"phpstan/phpstan\": \"^0.12.59\",\n                \"phpunit/phpunit\": \"~4.5\",\n                \"ruflin/elastica\": \">=0.90 <3.0\",\n                \"sentry/sentry\": \"^0.13\",\n                \"swiftmailer/swiftmailer\": \"^5.3|^6.0\"\n            },\n            \"suggest\": {\n                \"aws/aws-sdk-php\": \"Allow sending log messages to AWS services like DynamoDB\",\n                \"doctrine/couchdb\": \"Allow sending log messages to a CouchDB server\",\n                \"ext-amqp\": \"Allow sending log messages to an AMQP server (1.0+ required)\",\n                \"ext-mongo\": \"Allow sending log messages to a MongoDB server\",\n                \"graylog2/gelf-php\": \"Allow sending log messages to a GrayLog2 server\",\n                \"mongodb/mongodb\": \"Allow sending log messages to a MongoDB server via PHP Driver\",\n                \"php-amqplib/php-amqplib\": \"Allow sending log messages to an AMQP server using php-amqplib\",\n                \"php-console/php-console\": \"Allow sending log messages to Google Chrome\",\n                \"rollbar/rollbar\": \"Allow sending log messages to Rollbar\",\n                \"ruflin/elastica\": \"Allow sending log messages to an Elastic Search server\",\n                \"sentry/sentry\": \"Allow sending log messages to a Sentry server\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Monolog\\\\\": \"src/Monolog\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jordi Boggiano\",\n                    \"email\": \"j.boggiano@seld.be\",\n                    \"homepage\": \"http://seld.be\"\n                }\n            ],\n            \"description\": \"Sends your logs to files, sockets, inboxes, databases and various web services\",\n            \"homepage\": \"http://github.com/Seldaek/monolog\",\n            \"keywords\": [\n                \"log\",\n                \"logging\",\n                \"psr-3\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/Seldaek/monolog/issues\",\n                \"source\": \"https://github.com/Seldaek/monolog/tree/1.27.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Seldaek\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/monolog/monolog\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-06-09T08:53:42+00:00\"\n        },\n        {\n            \"name\": \"nette/schema\",\n            \"version\": \"v1.2.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/nette/schema.git\",\n                \"reference\": \"0462f0166e823aad657c9224d0f849ecac1ba10a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/nette/schema/zipball/0462f0166e823aad657c9224d0f849ecac1ba10a\",\n                \"reference\": \"0462f0166e823aad657c9224d0f849ecac1ba10a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"nette/utils\": \"^2.5.7 || ^3.1.5 ||  ^4.0\",\n                \"php\": \"7.1 - 8.3\"\n            },\n            \"require-dev\": {\n                \"nette/tester\": \"^2.3 || ^2.4\",\n                \"phpstan/phpstan-nette\": \"^1.0\",\n                \"tracy/tracy\": \"^2.7\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\",\n                \"GPL-2.0-only\",\n                \"GPL-3.0-only\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"David Grudl\",\n                    \"homepage\": \"https://davidgrudl.com\"\n                },\n                {\n                    \"name\": \"Nette Community\",\n                    \"homepage\": \"https://nette.org/contributors\"\n                }\n            ],\n            \"description\": \"📐 Nette Schema: validating data structures against a given Schema.\",\n            \"homepage\": \"https://nette.org\",\n            \"keywords\": [\n                \"config\",\n                \"nette\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/nette/schema/issues\",\n                \"source\": \"https://github.com/nette/schema/tree/v1.2.5\"\n            },\n            \"time\": \"2023-10-05T20:37:59+00:00\"\n        },\n        {\n            \"name\": \"nette/utils\",\n            \"version\": \"v3.2.10\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/nette/utils.git\",\n                \"reference\": \"a4175c62652f2300c8017fb7e640f9ccb11648d2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/nette/utils/zipball/a4175c62652f2300c8017fb7e640f9ccb11648d2\",\n                \"reference\": \"a4175c62652f2300c8017fb7e640f9ccb11648d2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2 <8.4\"\n            },\n            \"conflict\": {\n                \"nette/di\": \"<3.0.6\"\n            },\n            \"require-dev\": {\n                \"jetbrains/phpstorm-attributes\": \"dev-master\",\n                \"nette/tester\": \"~2.0\",\n                \"phpstan/phpstan\": \"^1.0\",\n                \"tracy/tracy\": \"^2.3\"\n            },\n            \"suggest\": {\n                \"ext-gd\": \"to use Image\",\n                \"ext-iconv\": \"to use Strings::webalize(), toAscii(), chr() and reverse()\",\n                \"ext-intl\": \"to use Strings::webalize(), toAscii(), normalize() and compare()\",\n                \"ext-json\": \"to use Nette\\\\Utils\\\\Json\",\n                \"ext-mbstring\": \"to use Strings::lower() etc...\",\n                \"ext-tokenizer\": \"to use Nette\\\\Utils\\\\Reflection::getUseStatements()\",\n                \"ext-xml\": \"to use Strings::length() etc. when mbstring is not available\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\",\n                \"GPL-2.0-only\",\n                \"GPL-3.0-only\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"David Grudl\",\n                    \"homepage\": \"https://davidgrudl.com\"\n                },\n                {\n                    \"name\": \"Nette Community\",\n                    \"homepage\": \"https://nette.org/contributors\"\n                }\n            ],\n            \"description\": \"🛠  Nette Utils: lightweight utilities for string & array manipulation, image handling, safe JSON encoding/decoding, validation, slug or strong password generating etc.\",\n            \"homepage\": \"https://nette.org\",\n            \"keywords\": [\n                \"array\",\n                \"core\",\n                \"datetime\",\n                \"images\",\n                \"json\",\n                \"nette\",\n                \"paginator\",\n                \"password\",\n                \"slugify\",\n                \"string\",\n                \"unicode\",\n                \"utf-8\",\n                \"utility\",\n                \"validation\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/nette/utils/issues\",\n                \"source\": \"https://github.com/nette/utils/tree/v3.2.10\"\n            },\n            \"time\": \"2023-07-30T15:38:18+00:00\"\n        },\n        {\n            \"name\": \"pear/net_dns2\",\n            \"version\": \"v1.5.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/mikepultz/netdns2.git\",\n                \"reference\": \"c4a167ff1bc93aaae95601ebc86099376c994581\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/mikepultz/netdns2/zipball/c4a167ff1bc93aaae95601ebc86099376c994581\",\n                \"reference\": \"c4a167ff1bc93aaae95601ebc86099376c994581\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.4\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-0\": {\n                    \"Net_DNS2\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mike Pultz\",\n                    \"email\": \"mike@mikepultz.com\",\n                    \"homepage\": \"https://mikepultz.com/\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Native PHP DNS Resolver and Updater Library\",\n            \"homepage\": \"https://netdns2.com/\",\n            \"keywords\": [\n                \"PEAR\",\n                \"dns\",\n                \"network\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/mikepultz/netdns2/issues\",\n                \"source\": \"https://github.com/mikepultz/netdns2\"\n            },\n            \"time\": \"2023-10-01T05:15:14+00:00\"\n        },\n        {\n            \"name\": \"phpmailer/phpmailer\",\n            \"version\": \"v6.9.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHPMailer/PHPMailer.git\",\n                \"reference\": \"2f5c94fe7493efc213f643c23b1b1c249d40f47e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHPMailer/PHPMailer/zipball/2f5c94fe7493efc213f643c23b1b1c249d40f47e\",\n                \"reference\": \"2f5c94fe7493efc213f643c23b1b1c249d40f47e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"ext-filter\": \"*\",\n                \"ext-hash\": \"*\",\n                \"php\": \">=5.5.0\"\n            },\n            \"require-dev\": {\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"^1.0\",\n                \"doctrine/annotations\": \"^1.2.6 || ^1.13.3\",\n                \"php-parallel-lint/php-console-highlighter\": \"^1.0.0\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.3.2\",\n                \"phpcompatibility/php-compatibility\": \"^9.3.5\",\n                \"roave/security-advisories\": \"dev-latest\",\n                \"squizlabs/php_codesniffer\": \"^3.7.2\",\n                \"yoast/phpunit-polyfills\": \"^1.0.4\"\n            },\n            \"suggest\": {\n                \"decomplexity/SendOauth2\": \"Adapter for using XOAUTH2 authentication\",\n                \"ext-mbstring\": \"Needed to send email in multibyte encoding charset or decode encoded addresses\",\n                \"ext-openssl\": \"Needed for secure SMTP sending and DKIM signing\",\n                \"greew/oauth2-azure-provider\": \"Needed for Microsoft Azure XOAUTH2 authentication\",\n                \"hayageek/oauth2-yahoo\": \"Needed for Yahoo XOAUTH2 authentication\",\n                \"league/oauth2-google\": \"Needed for Google XOAUTH2 authentication\",\n                \"psr/log\": \"For optional PSR-3 debug logging\",\n                \"symfony/polyfill-mbstring\": \"To support UTF-8 if the Mbstring PHP extension is not enabled (^1.2)\",\n                \"thenetworg/oauth2-azure\": \"Needed for Microsoft XOAUTH2 authentication\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PHPMailer\\\\PHPMailer\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-2.1-only\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marcus Bointon\",\n                    \"email\": \"phpmailer@synchromedia.co.uk\"\n                },\n                {\n                    \"name\": \"Jim Jagielski\",\n                    \"email\": \"jimjag@gmail.com\"\n                },\n                {\n                    \"name\": \"Andy Prevost\",\n                    \"email\": \"codeworxtech@users.sourceforge.net\"\n                },\n                {\n                    \"name\": \"Brent R. Matzelle\"\n                }\n            ],\n            \"description\": \"PHPMailer is a full-featured email creation and transfer class for PHP\",\n            \"support\": {\n                \"issues\": \"https://github.com/PHPMailer/PHPMailer/issues\",\n                \"source\": \"https://github.com/PHPMailer/PHPMailer/tree/v6.9.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Synchro\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-11-24T18:04:13+00:00\"\n        },\n        {\n            \"name\": \"psr/container\",\n            \"version\": \"1.1.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/container.git\",\n                \"reference\": \"513e0666f7216c7459170d56df27dfcefe1689ea\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/container/zipball/513e0666f7216c7459170d56df27dfcefe1689ea\",\n                \"reference\": \"513e0666f7216c7459170d56df27dfcefe1689ea\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.4.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Container\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common Container Interface (PHP FIG PSR-11)\",\n            \"homepage\": \"https://github.com/php-fig/container\",\n            \"keywords\": [\n                \"PSR-11\",\n                \"container\",\n                \"container-interface\",\n                \"container-interop\",\n                \"psr\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-fig/container/issues\",\n                \"source\": \"https://github.com/php-fig/container/tree/1.1.2\"\n            },\n            \"time\": \"2021-11-05T16:50:12+00:00\"\n        },\n        {\n            \"name\": \"psr/event-dispatcher\",\n            \"version\": \"1.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/event-dispatcher.git\",\n                \"reference\": \"dbefd12671e8a14ec7f180cab83036ed26714bb0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/event-dispatcher/zipball/dbefd12671e8a14ec7f180cab83036ed26714bb0\",\n                \"reference\": \"dbefd12671e8a14ec7f180cab83036ed26714bb0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\EventDispatcher\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Standard interfaces for event handling.\",\n            \"keywords\": [\n                \"events\",\n                \"psr\",\n                \"psr-14\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-fig/event-dispatcher/issues\",\n                \"source\": \"https://github.com/php-fig/event-dispatcher/tree/1.0.0\"\n            },\n            \"time\": \"2019-01-08T18:20:26+00:00\"\n        },\n        {\n            \"name\": \"psr/log\",\n            \"version\": \"1.1.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/log.git\",\n                \"reference\": \"d49695b909c3b7628b6289db5479a1c204601f11\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/log/zipball/d49695b909c3b7628b6289db5479a1c204601f11\",\n                \"reference\": \"d49695b909c3b7628b6289db5479a1c204601f11\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Log\\\\\": \"Psr/Log/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for logging libraries\",\n            \"homepage\": \"https://github.com/php-fig/log\",\n            \"keywords\": [\n                \"log\",\n                \"psr\",\n                \"psr-3\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/log/tree/1.1.4\"\n            },\n            \"time\": \"2021-05-03T11:20:27+00:00\"\n        },\n        {\n            \"name\": \"robthree/twofactorauth\",\n            \"version\": \"1.8.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/RobThree/TwoFactorAuth.git\",\n                \"reference\": \"65681de5a324eae05140ac58b08648a60212afc0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/RobThree/TwoFactorAuth/zipball/65681de5a324eae05140ac58b08648a60212afc0\",\n                \"reference\": \"65681de5a324eae05140ac58b08648a60212afc0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.6.0\"\n            },\n            \"require-dev\": {\n                \"php-parallel-lint/php-parallel-lint\": \"^1.2\",\n                \"phpunit/phpunit\": \"@stable\"\n            },\n            \"suggest\": {\n                \"bacon/bacon-qr-code\": \"Needed for BaconQrCodeProvider provider\",\n                \"endroid/qr-code\": \"Needed for EndroidQrCodeProvider\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"RobThree\\\\Auth\\\\\": \"lib\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Rob Janssen\",\n                    \"homepage\": \"http://robiii.me\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Two Factor Authentication\",\n            \"homepage\": \"https://github.com/RobThree/TwoFactorAuth\",\n            \"keywords\": [\n                \"Authentication\",\n                \"MFA\",\n                \"Multi Factor Authentication\",\n                \"Two Factor Authentication\",\n                \"authenticator\",\n                \"authy\",\n                \"php\",\n                \"tfa\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/RobThree/TwoFactorAuth/issues\",\n                \"source\": \"https://github.com/RobThree/TwoFactorAuth\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://paypal.me/robiii\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/RobThree\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2022-03-22T16:11:07+00:00\"\n        },\n        {\n            \"name\": \"symfony/console\",\n            \"version\": \"v5.4.47\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/console.git\",\n                \"reference\": \"c4ba980ca61a9eb18ee6bcc73f28e475852bb1ed\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/console/zipball/c4ba980ca61a9eb18ee6bcc73f28e475852bb1ed\",\n                \"reference\": \"c4ba980ca61a9eb18ee6bcc73f28e475852bb1ed\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1|^3\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php73\": \"^1.9\",\n                \"symfony/polyfill-php80\": \"^1.16\",\n                \"symfony/service-contracts\": \"^1.1|^2|^3\",\n                \"symfony/string\": \"^5.1|^6.0\"\n            },\n            \"conflict\": {\n                \"psr/log\": \">=3\",\n                \"symfony/dependency-injection\": \"<4.4\",\n                \"symfony/dotenv\": \"<5.1\",\n                \"symfony/event-dispatcher\": \"<4.4\",\n                \"symfony/lock\": \"<4.4\",\n                \"symfony/process\": \"<4.4\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0|2.0\"\n            },\n            \"require-dev\": {\n                \"psr/log\": \"^1|^2\",\n                \"symfony/config\": \"^4.4|^5.0|^6.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0|^6.0\",\n                \"symfony/event-dispatcher\": \"^4.4|^5.0|^6.0\",\n                \"symfony/lock\": \"^4.4|^5.0|^6.0\",\n                \"symfony/process\": \"^4.4|^5.0|^6.0\",\n                \"symfony/var-dumper\": \"^4.4|^5.0|^6.0\"\n            },\n            \"suggest\": {\n                \"psr/log\": \"For using the console logger\",\n                \"symfony/event-dispatcher\": \"\",\n                \"symfony/lock\": \"\",\n                \"symfony/process\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Console\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Eases the creation of beautiful and testable command line interfaces\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"cli\",\n                \"command-line\",\n                \"console\",\n                \"terminal\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/console/tree/v5.4.47\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-06T11:30:55+00:00\"\n        },\n        {\n            \"name\": \"symfony/deprecation-contracts\",\n            \"version\": \"v2.5.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/deprecation-contracts.git\",\n                \"reference\": \"605389f2a7e5625f273b53960dc46aeaf9c62918\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/deprecation-contracts/zipball/605389f2a7e5625f273b53960dc46aeaf9c62918\",\n                \"reference\": \"605389f2a7e5625f273b53960dc46aeaf9c62918\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/contracts\",\n                    \"name\": \"symfony/contracts\"\n                },\n                \"branch-alias\": {\n                    \"dev-main\": \"2.5-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"function.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"A generic function and convention to trigger deprecation notices\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/deprecation-contracts/tree/v2.5.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-25T14:11:13+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-ctype\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-ctype.git\",\n                \"reference\": \"a3cc8b044a6ea513310cbd48ef7333b384945638\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-ctype/zipball/a3cc8b044a6ea513310cbd48ef7333b384945638\",\n                \"reference\": \"a3cc8b044a6ea513310cbd48ef7333b384945638\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"provide\": {\n                \"ext-ctype\": \"*\"\n            },\n            \"suggest\": {\n                \"ext-ctype\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Ctype\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Gert de Pagter\",\n                    \"email\": \"BackEndTea@gmail.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for ctype functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"ctype\",\n                \"polyfill\",\n                \"portable\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-ctype/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-iconv\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-iconv.git\",\n                \"reference\": \"48becf00c920479ca2e910c22a5a39e5d47ca956\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-iconv/zipball/48becf00c920479ca2e910c22a5a39e5d47ca956\",\n                \"reference\": \"48becf00c920479ca2e910c22a5a39e5d47ca956\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"provide\": {\n                \"ext-iconv\": \"*\"\n            },\n            \"suggest\": {\n                \"ext-iconv\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Iconv\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for the Iconv extension\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"iconv\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-iconv/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-grapheme\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-grapheme.git\",\n                \"reference\": \"b9123926e3b7bc2f98c02ad54f6a4b02b91a8abe\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-grapheme/zipball/b9123926e3b7bc2f98c02ad54f6a4b02b91a8abe\",\n                \"reference\": \"b9123926e3b7bc2f98c02ad54f6a4b02b91a8abe\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Grapheme\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's grapheme_* functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"grapheme\",\n                \"intl\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-intl-grapheme/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-normalizer\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-normalizer.git\",\n                \"reference\": \"3833d7255cc303546435cb650316bff708a1c75c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-normalizer/zipball/3833d7255cc303546435cb650316bff708a1c75c\",\n                \"reference\": \"3833d7255cc303546435cb650316bff708a1c75c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Normalizer\\\\\": \"\"\n                },\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's Normalizer class and related functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"intl\",\n                \"normalizer\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-intl-normalizer/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-mbstring\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-mbstring.git\",\n                \"reference\": \"85181ba99b2345b0ef10ce42ecac37612d9fd341\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-mbstring/zipball/85181ba99b2345b0ef10ce42ecac37612d9fd341\",\n                \"reference\": \"85181ba99b2345b0ef10ce42ecac37612d9fd341\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"provide\": {\n                \"ext-mbstring\": \"*\"\n            },\n            \"suggest\": {\n                \"ext-mbstring\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Mbstring\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for the Mbstring extension\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"mbstring\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-mbstring/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php72\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php72.git\",\n                \"reference\": \"fa2ae56c44f03bed91a39bfc9822e31e7c5c38ce\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php72/zipball/fa2ae56c44f03bed91a39bfc9822e31e7c5c38ce\",\n                \"reference\": \"fa2ae56c44f03bed91a39bfc9822e31e7c5c38ce\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"type\": \"metapackage\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 7.2+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-php72/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php73\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php73.git\",\n                \"reference\": \"0f68c03565dcaaf25a890667542e8bd75fe7e5bb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php73/zipball/0f68c03565dcaaf25a890667542e8bd75fe7e5bb\",\n                \"reference\": \"0f68c03565dcaaf25a890667542e8bd75fe7e5bb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Php73\\\\\": \"\"\n                },\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 7.3+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-php73/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php80\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php80.git\",\n                \"reference\": \"60328e362d4c2c802a54fcbf04f9d3fb892b4cf8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php80/zipball/60328e362d4c2c802a54fcbf04f9d3fb892b4cf8\",\n                \"reference\": \"60328e362d4c2c802a54fcbf04f9d3fb892b4cf8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Php80\\\\\": \"\"\n                },\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ion Bazan\",\n                    \"email\": \"ion.bazan@gmail.com\"\n                },\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-php80/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php81\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php81.git\",\n                \"reference\": \"4a4cfc2d253c21a5ad0e53071df248ed48c6ce5c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php81/zipball/4a4cfc2d253c21a5ad0e53071df248ed48c6ce5c\",\n                \"reference\": \"4a4cfc2d253c21a5ad0e53071df248ed48c6ce5c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/polyfill\",\n                    \"name\": \"symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Php81\\\\\": \"\"\n                },\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 8.1+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-php81/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/service-contracts\",\n            \"version\": \"v2.5.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/service-contracts.git\",\n                \"reference\": \"f37b419f7aea2e9abf10abd261832cace12e3300\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/service-contracts/zipball/f37b419f7aea2e9abf10abd261832cace12e3300\",\n                \"reference\": \"f37b419f7aea2e9abf10abd261832cace12e3300\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/container\": \"^1.1\",\n                \"symfony/deprecation-contracts\": \"^2.1|^3\"\n            },\n            \"conflict\": {\n                \"ext-psr\": \"<1.1|>=2\"\n            },\n            \"suggest\": {\n                \"symfony/service-implementation\": \"\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/contracts\",\n                    \"name\": \"symfony/contracts\"\n                },\n                \"branch-alias\": {\n                    \"dev-main\": \"2.5-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Contracts\\\\Service\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Generic abstractions related to writing services\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"abstractions\",\n                \"contracts\",\n                \"decoupling\",\n                \"interfaces\",\n                \"interoperability\",\n                \"standards\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/service-contracts/tree/v2.5.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-25T14:11:13+00:00\"\n        },\n        {\n            \"name\": \"symfony/string\",\n            \"version\": \"v5.4.47\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/string.git\",\n                \"reference\": \"136ca7d72f72b599f2631aca474a4f8e26719799\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/string/zipball/136ca7d72f72b599f2631aca474a4f8e26719799\",\n                \"reference\": \"136ca7d72f72b599f2631aca474a4f8e26719799\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-intl-grapheme\": \"~1.0\",\n                \"symfony/polyfill-intl-normalizer\": \"~1.0\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php80\": \"~1.15\"\n            },\n            \"conflict\": {\n                \"symfony/translation-contracts\": \">=3.0\"\n            },\n            \"require-dev\": {\n                \"symfony/error-handler\": \"^4.4|^5.0|^6.0\",\n                \"symfony/http-client\": \"^4.4|^5.0|^6.0\",\n                \"symfony/translation-contracts\": \"^1.1|^2\",\n                \"symfony/var-exporter\": \"^4.4|^5.0|^6.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"Resources/functions.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\String\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides an object-oriented API to strings and deals with bytes, UTF-8 code points and grapheme clusters in a unified way\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"grapheme\",\n                \"i18n\",\n                \"string\",\n                \"unicode\",\n                \"utf-8\",\n                \"utf8\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/string/tree/v5.4.47\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-10T20:33:58+00:00\"\n        },\n        {\n            \"name\": \"twig/twig\",\n            \"version\": \"v3.11.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/twigphp/Twig.git\",\n                \"reference\": \"3b06600ff3abefaf8ff55d5c336cd1c4253f8c7e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/twigphp/Twig/zipball/3b06600ff3abefaf8ff55d5c336cd1c4253f8c7e\",\n                \"reference\": \"3b06600ff3abefaf8ff55d5c336cd1c4253f8c7e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.5|^3\",\n                \"symfony/polyfill-ctype\": \"^1.8\",\n                \"symfony/polyfill-mbstring\": \"^1.3\",\n                \"symfony/polyfill-php80\": \"^1.22\",\n                \"symfony/polyfill-php81\": \"^1.29\"\n            },\n            \"require-dev\": {\n                \"psr/container\": \"^1.0|^2.0\",\n                \"symfony/phpunit-bridge\": \"^5.4.9|^6.4|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/Resources/core.php\",\n                    \"src/Resources/debug.php\",\n                    \"src/Resources/escaper.php\",\n                    \"src/Resources/string_loader.php\"\n                ],\n                \"psr-4\": {\n                    \"Twig\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\",\n                    \"homepage\": \"http://fabien.potencier.org\",\n                    \"role\": \"Lead Developer\"\n                },\n                {\n                    \"name\": \"Twig Team\",\n                    \"role\": \"Contributors\"\n                },\n                {\n                    \"name\": \"Armin Ronacher\",\n                    \"email\": \"armin.ronacher@active-4.com\",\n                    \"role\": \"Project Founder\"\n                }\n            ],\n            \"description\": \"Twig, the flexible, fast, and secure template language for PHP\",\n            \"homepage\": \"https://twig.symfony.com\",\n            \"keywords\": [\n                \"templating\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/twigphp/Twig/issues\",\n                \"source\": \"https://github.com/twigphp/Twig/tree/v3.11.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/twig/twig\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-07T12:34:41+00:00\"\n        },\n        {\n            \"name\": \"voku/anti-xss\",\n            \"version\": \"4.1.42\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/voku/anti-xss.git\",\n                \"reference\": \"bca1f8607e55a3c5077483615cd93bd8f11bd675\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/voku/anti-xss/zipball/bca1f8607e55a3c5077483615cd93bd8f11bd675\",\n                \"reference\": \"bca1f8607e55a3c5077483615cd93bd8f11bd675\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.0.0\",\n                \"voku/portable-utf8\": \"~6.0.2\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"~6.0 || ~7.0 || ~9.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"voku\\\\helper\\\\\": \"src/voku/helper/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"EllisLab Dev Team\",\n                    \"homepage\": \"http://ellislab.com/\"\n                },\n                {\n                    \"name\": \"Lars Moelleken\",\n                    \"email\": \"lars@moelleken.org\",\n                    \"homepage\": \"https://www.moelleken.org/\"\n                }\n            ],\n            \"description\": \"anti xss-library\",\n            \"homepage\": \"https://github.com/voku/anti-xss\",\n            \"keywords\": [\n                \"anti-xss\",\n                \"clean\",\n                \"security\",\n                \"xss\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/voku/anti-xss/issues\",\n                \"source\": \"https://github.com/voku/anti-xss/tree/4.1.42\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.paypal.me/moelleken\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/voku\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://opencollective.com/anti-xss\",\n                    \"type\": \"open_collective\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/voku\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/voku/anti-xss\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-07-03T14:40:46+00:00\"\n        },\n        {\n            \"name\": \"voku/portable-ascii\",\n            \"version\": \"2.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/voku/portable-ascii.git\",\n                \"reference\": \"b1d923f88091c6bf09699efcd7c8a1b1bfd7351d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/voku/portable-ascii/zipball/b1d923f88091c6bf09699efcd7c8a1b1bfd7351d\",\n                \"reference\": \"b1d923f88091c6bf09699efcd7c8a1b1bfd7351d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.0.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"~6.0 || ~7.0 || ~9.0\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"Use Intl for transliterator_transliterate() support\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"voku\\\\\": \"src/voku/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Lars Moelleken\",\n                    \"homepage\": \"https://www.moelleken.org/\"\n                }\n            ],\n            \"description\": \"Portable ASCII library - performance optimized (ascii) string functions for php.\",\n            \"homepage\": \"https://github.com/voku/portable-ascii\",\n            \"keywords\": [\n                \"ascii\",\n                \"clean\",\n                \"php\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/voku/portable-ascii/issues\",\n                \"source\": \"https://github.com/voku/portable-ascii/tree/2.0.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.paypal.me/moelleken\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/voku\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://opencollective.com/portable-ascii\",\n                    \"type\": \"open_collective\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/voku\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/voku/portable-ascii\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-21T01:49:47+00:00\"\n        },\n        {\n            \"name\": \"voku/portable-utf8\",\n            \"version\": \"6.0.13\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/voku/portable-utf8.git\",\n                \"reference\": \"b8ce36bf26593e5c2e81b1850ef0ffb299d2043f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/voku/portable-utf8/zipball/b8ce36bf26593e5c2e81b1850ef0ffb299d2043f\",\n                \"reference\": \"b8ce36bf26593e5c2e81b1850ef0ffb299d2043f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.0.0\",\n                \"symfony/polyfill-iconv\": \"~1.0\",\n                \"symfony/polyfill-intl-grapheme\": \"~1.0\",\n                \"symfony/polyfill-intl-normalizer\": \"~1.0\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php72\": \"~1.0\",\n                \"voku/portable-ascii\": \"~2.0.0\"\n            },\n            \"require-dev\": {\n                \"phpstan/phpstan\": \"1.9.*@dev\",\n                \"phpstan/phpstan-strict-rules\": \"1.4.*@dev\",\n                \"phpunit/phpunit\": \"~6.0 || ~7.0 || ~9.0\",\n                \"thecodingmachine/phpstan-strict-rules\": \"1.0.*@dev\",\n                \"voku/phpstan-rules\": \"3.1.*@dev\"\n            },\n            \"suggest\": {\n                \"ext-ctype\": \"Use Ctype for e.g. hexadecimal digit detection\",\n                \"ext-fileinfo\": \"Use Fileinfo for better binary file detection\",\n                \"ext-iconv\": \"Use iconv for best performance\",\n                \"ext-intl\": \"Use Intl for best performance\",\n                \"ext-json\": \"Use JSON for string detection\",\n                \"ext-mbstring\": \"Use Mbstring for best performance\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"voku\\\\\": \"src/voku/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"(Apache-2.0 or GPL-2.0)\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Hamid Sarfraz\",\n                    \"homepage\": \"http://pageconfig.com/\"\n                },\n                {\n                    \"name\": \"Lars Moelleken\",\n                    \"homepage\": \"http://www.moelleken.org/\"\n                }\n            ],\n            \"description\": \"Portable UTF-8 library - performance optimized (unicode) string functions for php.\",\n            \"homepage\": \"https://github.com/voku/portable-utf8\",\n            \"keywords\": [\n                \"UTF\",\n                \"clean\",\n                \"php\",\n                \"unicode\",\n                \"utf-8\",\n                \"utf8\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/voku/portable-utf8/issues\",\n                \"source\": \"https://github.com/voku/portable-utf8/tree/6.0.13\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.paypal.me/moelleken\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/voku\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://opencollective.com/portable-utf8\",\n                    \"type\": \"open_collective\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/voku\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/voku/portable-utf8\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-03-08T08:35:38+00:00\"\n        }\n    ],\n    \"packages-dev\": [\n        {\n            \"name\": \"composer/pcre\",\n            \"version\": \"3.3.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/composer/pcre.git\",\n                \"reference\": \"b2bed4734f0cc156ee1fe9c0da2550420d99a21e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/composer/pcre/zipball/b2bed4734f0cc156ee1fe9c0da2550420d99a21e\",\n                \"reference\": \"b2bed4734f0cc156ee1fe9c0da2550420d99a21e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.4 || ^8.0\"\n            },\n            \"conflict\": {\n                \"phpstan/phpstan\": \"<1.11.10\"\n            },\n            \"require-dev\": {\n                \"phpstan/phpstan\": \"^1.12 || ^2\",\n                \"phpstan/phpstan-strict-rules\": \"^1 || ^2\",\n                \"phpunit/phpunit\": \"^8 || ^9\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"phpstan\": {\n                    \"includes\": [\n                        \"extension.neon\"\n                    ]\n                },\n                \"branch-alias\": {\n                    \"dev-main\": \"3.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Composer\\\\Pcre\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jordi Boggiano\",\n                    \"email\": \"j.boggiano@seld.be\",\n                    \"homepage\": \"http://seld.be\"\n                }\n            ],\n            \"description\": \"PCRE wrapping library that offers type-safe preg_* replacements.\",\n            \"keywords\": [\n                \"PCRE\",\n                \"preg\",\n                \"regex\",\n                \"regular expression\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/composer/pcre/issues\",\n                \"source\": \"https://github.com/composer/pcre/tree/3.3.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://packagist.com\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/composer\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/composer/composer\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-12T16:29:46+00:00\"\n        },\n        {\n            \"name\": \"composer/xdebug-handler\",\n            \"version\": \"3.0.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/composer/xdebug-handler.git\",\n                \"reference\": \"6c1925561632e83d60a44492e0b344cf48ab85ef\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/composer/xdebug-handler/zipball/6c1925561632e83d60a44492e0b344cf48ab85ef\",\n                \"reference\": \"6c1925561632e83d60a44492e0b344cf48ab85ef\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"composer/pcre\": \"^1 || ^2 || ^3\",\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"psr/log\": \"^1 || ^2 || ^3\"\n            },\n            \"require-dev\": {\n                \"phpstan/phpstan\": \"^1.0\",\n                \"phpstan/phpstan-strict-rules\": \"^1.1\",\n                \"phpunit/phpunit\": \"^8.5 || ^9.6 || ^10.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Composer\\\\XdebugHandler\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"John Stevenson\",\n                    \"email\": \"john-stevenson@blueyonder.co.uk\"\n                }\n            ],\n            \"description\": \"Restarts a process without Xdebug.\",\n            \"keywords\": [\n                \"Xdebug\",\n                \"performance\"\n            ],\n            \"support\": {\n                \"irc\": \"ircs://irc.libera.chat:6697/composer\",\n                \"issues\": \"https://github.com/composer/xdebug-handler/issues\",\n                \"source\": \"https://github.com/composer/xdebug-handler/tree/3.0.5\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://packagist.com\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/composer\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/composer/composer\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-05-06T16:37:16+00:00\"\n        },\n        {\n            \"name\": \"doctrine/instantiator\",\n            \"version\": \"1.5.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/instantiator.git\",\n                \"reference\": \"0a0fa9780f5d4e507415a065172d26a98d02047b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/instantiator/zipball/0a0fa9780f5d4e507415a065172d26a98d02047b\",\n                \"reference\": \"0a0fa9780f5d4e507415a065172d26a98d02047b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^9 || ^11\",\n                \"ext-pdo\": \"*\",\n                \"ext-phar\": \"*\",\n                \"phpbench/phpbench\": \"^0.16 || ^1\",\n                \"phpstan/phpstan\": \"^1.4\",\n                \"phpstan/phpstan-phpunit\": \"^1\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.5\",\n                \"vimeo/psalm\": \"^4.30 || ^5.4\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Instantiator\\\\\": \"src/Doctrine/Instantiator/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marco Pivetta\",\n                    \"email\": \"ocramius@gmail.com\",\n                    \"homepage\": \"https://ocramius.github.io/\"\n                }\n            ],\n            \"description\": \"A small, lightweight utility to instantiate objects in PHP without invoking their constructors\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/instantiator.html\",\n            \"keywords\": [\n                \"constructor\",\n                \"instantiate\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/instantiator/issues\",\n                \"source\": \"https://github.com/doctrine/instantiator/tree/1.5.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Finstantiator\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-12-30T00:15:36+00:00\"\n        },\n        {\n            \"name\": \"myclabs/deep-copy\",\n            \"version\": \"1.12.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/myclabs/DeepCopy.git\",\n                \"reference\": \"123267b2c49fbf30d78a7b2d333f6be754b94845\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/myclabs/DeepCopy/zipball/123267b2c49fbf30d78a7b2d333f6be754b94845\",\n                \"reference\": \"123267b2c49fbf30d78a7b2d333f6be754b94845\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"conflict\": {\n                \"doctrine/collections\": \"<1.6.8\",\n                \"doctrine/common\": \"<2.13.3 || >=3 <3.2.2\"\n            },\n            \"require-dev\": {\n                \"doctrine/collections\": \"^1.6.8\",\n                \"doctrine/common\": \"^2.13.3 || ^3.2.2\",\n                \"phpspec/prophecy\": \"^1.10\",\n                \"phpunit/phpunit\": \"^7.5.20 || ^8.5.23 || ^9.5.13\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/DeepCopy/deep_copy.php\"\n                ],\n                \"psr-4\": {\n                    \"DeepCopy\\\\\": \"src/DeepCopy/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"Create deep copies (clones) of your objects\",\n            \"keywords\": [\n                \"clone\",\n                \"copy\",\n                \"duplicate\",\n                \"object\",\n                \"object graph\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/myclabs/DeepCopy/issues\",\n                \"source\": \"https://github.com/myclabs/DeepCopy/tree/1.12.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/myclabs/deep-copy\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-08T17:47:46+00:00\"\n        },\n        {\n            \"name\": \"nikic/php-parser\",\n            \"version\": \"v5.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/nikic/PHP-Parser.git\",\n                \"reference\": \"447a020a1f875a434d62f2a401f53b82a396e494\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/nikic/PHP-Parser/zipball/447a020a1f875a434d62f2a401f53b82a396e494\",\n                \"reference\": \"447a020a1f875a434d62f2a401f53b82a396e494\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-tokenizer\": \"*\",\n                \"php\": \">=7.4\"\n            },\n            \"require-dev\": {\n                \"ircmaxell/php-yacc\": \"^0.0.7\",\n                \"phpunit/phpunit\": \"^9.0\"\n            },\n            \"bin\": [\n                \"bin/php-parse\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PhpParser\\\\\": \"lib/PhpParser\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nikita Popov\"\n                }\n            ],\n            \"description\": \"A PHP parser written in PHP\",\n            \"keywords\": [\n                \"parser\",\n                \"php\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/nikic/PHP-Parser/issues\",\n                \"source\": \"https://github.com/nikic/PHP-Parser/tree/v5.4.0\"\n            },\n            \"time\": \"2024-12-30T11:07:19+00:00\"\n        },\n        {\n            \"name\": \"pdepend/pdepend\",\n            \"version\": \"2.16.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/pdepend/pdepend.git\",\n                \"reference\": \"f942b208dc2a0868454d01b29f0c75bbcfc6ed58\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/pdepend/pdepend/zipball/f942b208dc2a0868454d01b29f0c75bbcfc6ed58\",\n                \"reference\": \"f942b208dc2a0868454d01b29f0c75bbcfc6ed58\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.7\",\n                \"symfony/config\": \"^2.3.0|^3|^4|^5|^6.0|^7.0\",\n                \"symfony/dependency-injection\": \"^2.3.0|^3|^4|^5|^6.0|^7.0\",\n                \"symfony/filesystem\": \"^2.3.0|^3|^4|^5|^6.0|^7.0\",\n                \"symfony/polyfill-mbstring\": \"^1.19\"\n            },\n            \"require-dev\": {\n                \"easy-doc/easy-doc\": \"0.0.0|^1.2.3\",\n                \"gregwar/rst\": \"^1.0\",\n                \"squizlabs/php_codesniffer\": \"^2.0.0\"\n            },\n            \"bin\": [\n                \"src/bin/pdepend\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PDepend\\\\\": \"src/main/php/PDepend\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Official version of pdepend to be handled with Composer\",\n            \"keywords\": [\n                \"PHP Depend\",\n                \"PHP_Depend\",\n                \"dev\",\n                \"pdepend\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/pdepend/pdepend/issues\",\n                \"source\": \"https://github.com/pdepend/pdepend/tree/2.16.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/pdepend/pdepend\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-12-17T18:09:59+00:00\"\n        },\n        {\n            \"name\": \"phar-io/manifest\",\n            \"version\": \"2.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phar-io/manifest.git\",\n                \"reference\": \"54750ef60c58e43759730615a392c31c80e23176\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phar-io/manifest/zipball/54750ef60c58e43759730615a392c31c80e23176\",\n                \"reference\": \"54750ef60c58e43759730615a392c31c80e23176\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-phar\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"phar-io/version\": \"^3.0.1\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Heuer\",\n                    \"email\": \"sebastian@phpeople.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Component for reading phar.io manifest information from a PHP Archive (PHAR)\",\n            \"support\": {\n                \"issues\": \"https://github.com/phar-io/manifest/issues\",\n                \"source\": \"https://github.com/phar-io/manifest/tree/2.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/theseer\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-03T12:33:53+00:00\"\n        },\n        {\n            \"name\": \"phar-io/version\",\n            \"version\": \"3.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phar-io/version.git\",\n                \"reference\": \"4f7fd7836c6f332bb2933569e566a0d6c4cbed74\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phar-io/version/zipball/4f7fd7836c6f332bb2933569e566a0d6c4cbed74\",\n                \"reference\": \"4f7fd7836c6f332bb2933569e566a0d6c4cbed74\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Heuer\",\n                    \"email\": \"sebastian@phpeople.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Library for handling version information and constraints\",\n            \"support\": {\n                \"issues\": \"https://github.com/phar-io/version/issues\",\n                \"source\": \"https://github.com/phar-io/version/tree/3.2.1\"\n            },\n            \"time\": \"2022-02-21T01:04:05+00:00\"\n        },\n        {\n            \"name\": \"phpcompatibility/php-compatibility\",\n            \"version\": \"9.3.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHPCompatibility/PHPCompatibility.git\",\n                \"reference\": \"9fb324479acf6f39452e0655d2429cc0d3914243\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHPCompatibility/PHPCompatibility/zipball/9fb324479acf6f39452e0655d2429cc0d3914243\",\n                \"reference\": \"9fb324479acf6f39452e0655d2429cc0d3914243\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3\",\n                \"squizlabs/php_codesniffer\": \"^2.3 || ^3.0.2\"\n            },\n            \"conflict\": {\n                \"squizlabs/php_codesniffer\": \"2.6.2\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"~4.5 || ^5.0 || ^6.0 || ^7.0\"\n            },\n            \"suggest\": {\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"^0.5 || This Composer plugin will sort out the PHPCS 'installed_paths' automatically.\",\n                \"roave/security-advisories\": \"dev-master || Helps prevent installing dependencies with known security issues.\"\n            },\n            \"type\": \"phpcodesniffer-standard\",\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-3.0-or-later\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Wim Godden\",\n                    \"homepage\": \"https://github.com/wimg\",\n                    \"role\": \"lead\"\n                },\n                {\n                    \"name\": \"Juliette Reinders Folmer\",\n                    \"homepage\": \"https://github.com/jrfnl\",\n                    \"role\": \"lead\"\n                },\n                {\n                    \"name\": \"Contributors\",\n                    \"homepage\": \"https://github.com/PHPCompatibility/PHPCompatibility/graphs/contributors\"\n                }\n            ],\n            \"description\": \"A set of sniffs for PHP_CodeSniffer that checks for PHP cross-version compatibility.\",\n            \"homepage\": \"http://techblog.wimgodden.be/tag/codesniffer/\",\n            \"keywords\": [\n                \"compatibility\",\n                \"phpcs\",\n                \"standards\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/PHPCompatibility/PHPCompatibility/issues\",\n                \"source\": \"https://github.com/PHPCompatibility/PHPCompatibility\"\n            },\n            \"time\": \"2019-12-27T09:44:58+00:00\"\n        },\n        {\n            \"name\": \"phploc/phploc\",\n            \"version\": \"7.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/phploc.git\",\n                \"reference\": \"af0d5fc84f3f7725513ba59cdcbe670ac2a4532a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/phploc/zipball/af0d5fc84f3f7725513ba59cdcbe670ac2a4532a\",\n                \"reference\": \"af0d5fc84f3f7725513ba59cdcbe670ac2a4532a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-json\": \"*\",\n                \"php\": \">=7.3\",\n                \"phpunit/php-file-iterator\": \"^3.0\",\n                \"sebastian/cli-parser\": \"^1.0\",\n                \"sebastian/version\": \"^3.0\"\n            },\n            \"bin\": [\n                \"phploc\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"7.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"A tool for quickly measuring the size of a PHP project.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/phploc\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/phploc/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/phploc/tree/7.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-12-07T05:51:20+00:00\"\n        },\n        {\n            \"name\": \"phpmd/phpmd\",\n            \"version\": \"2.15.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpmd/phpmd.git\",\n                \"reference\": \"74a1f56e33afad4128b886e334093e98e1b5e7c0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpmd/phpmd/zipball/74a1f56e33afad4128b886e334093e98e1b5e7c0\",\n                \"reference\": \"74a1f56e33afad4128b886e334093e98e1b5e7c0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"composer/xdebug-handler\": \"^1.0 || ^2.0 || ^3.0\",\n                \"ext-xml\": \"*\",\n                \"pdepend/pdepend\": \"^2.16.1\",\n                \"php\": \">=5.3.9\"\n            },\n            \"require-dev\": {\n                \"easy-doc/easy-doc\": \"0.0.0 || ^1.3.2\",\n                \"ext-json\": \"*\",\n                \"ext-simplexml\": \"*\",\n                \"gregwar/rst\": \"^1.0\",\n                \"mikey179/vfsstream\": \"^1.6.8\",\n                \"squizlabs/php_codesniffer\": \"^2.9.2 || ^3.7.2\"\n            },\n            \"bin\": [\n                \"src/bin/phpmd\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-0\": {\n                    \"PHPMD\\\\\": \"src/main/php\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Manuel Pichler\",\n                    \"email\": \"github@manuel-pichler.de\",\n                    \"homepage\": \"https://github.com/manuelpichler\",\n                    \"role\": \"Project Founder\"\n                },\n                {\n                    \"name\": \"Marc Würth\",\n                    \"email\": \"ravage@bluewin.ch\",\n                    \"homepage\": \"https://github.com/ravage84\",\n                    \"role\": \"Project Maintainer\"\n                },\n                {\n                    \"name\": \"Other contributors\",\n                    \"homepage\": \"https://github.com/phpmd/phpmd/graphs/contributors\",\n                    \"role\": \"Contributors\"\n                }\n            ],\n            \"description\": \"PHPMD is a spin-off project of PHP Depend and aims to be a PHP equivalent of the well known Java tool PMD.\",\n            \"homepage\": \"https://phpmd.org/\",\n            \"keywords\": [\n                \"dev\",\n                \"mess detection\",\n                \"mess detector\",\n                \"pdepend\",\n                \"phpmd\",\n                \"pmd\"\n            ],\n            \"support\": {\n                \"irc\": \"irc://irc.freenode.org/phpmd\",\n                \"issues\": \"https://github.com/phpmd/phpmd/issues\",\n                \"source\": \"https://github.com/phpmd/phpmd/tree/2.15.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/phpmd/phpmd\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-12-11T08:22:20+00:00\"\n        },\n        {\n            \"name\": \"phpstan/phpstan\",\n            \"version\": \"1.12.15\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpstan/phpstan.git\",\n                \"reference\": \"c91d4e8bc056f46cf653656e6f71004b254574d1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpstan/phpstan/zipball/c91d4e8bc056f46cf653656e6f71004b254574d1\",\n                \"reference\": \"c91d4e8bc056f46cf653656e6f71004b254574d1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2|^8.0\"\n            },\n            \"conflict\": {\n                \"phpstan/phpstan-shim\": \"*\"\n            },\n            \"bin\": [\n                \"phpstan\",\n                \"phpstan.phar\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"PHPStan - PHP Static Analysis Tool\",\n            \"keywords\": [\n                \"dev\",\n                \"static analysis\"\n            ],\n            \"support\": {\n                \"docs\": \"https://phpstan.org/user-guide/getting-started\",\n                \"forum\": \"https://github.com/phpstan/phpstan/discussions\",\n                \"issues\": \"https://github.com/phpstan/phpstan/issues\",\n                \"security\": \"https://github.com/phpstan/phpstan/security/policy\",\n                \"source\": \"https://github.com/phpstan/phpstan-src\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/ondrejmirtes\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/phpstan\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2025-01-05T16:40:22+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-code-coverage\",\n            \"version\": \"9.2.32\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-code-coverage.git\",\n                \"reference\": \"85402a822d1ecf1db1096959413d35e1c37cf1a5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/85402a822d1ecf1db1096959413d35e1c37cf1a5\",\n                \"reference\": \"85402a822d1ecf1db1096959413d35e1c37cf1a5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"nikic/php-parser\": \"^4.19.1 || ^5.1.0\",\n                \"php\": \">=7.3\",\n                \"phpunit/php-file-iterator\": \"^3.0.6\",\n                \"phpunit/php-text-template\": \"^2.0.4\",\n                \"sebastian/code-unit-reverse-lookup\": \"^2.0.3\",\n                \"sebastian/complexity\": \"^2.0.3\",\n                \"sebastian/environment\": \"^5.1.5\",\n                \"sebastian/lines-of-code\": \"^1.0.4\",\n                \"sebastian/version\": \"^3.0.2\",\n                \"theseer/tokenizer\": \"^1.2.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.6\"\n            },\n            \"suggest\": {\n                \"ext-pcov\": \"PHP extension that provides line coverage\",\n                \"ext-xdebug\": \"PHP extension that provides line coverage as well as branch and path coverage\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"9.2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library that provides collection, processing, and rendering functionality for PHP code coverage information.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-code-coverage\",\n            \"keywords\": [\n                \"coverage\",\n                \"testing\",\n                \"xunit\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-code-coverage/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/php-code-coverage/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/php-code-coverage/tree/9.2.32\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-08-22T04:23:01+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-file-iterator\",\n            \"version\": \"3.0.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-file-iterator.git\",\n                \"reference\": \"cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-file-iterator/zipball/cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf\",\n                \"reference\": \"cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"FilterIterator implementation that filters files based on a list of suffixes.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-file-iterator/\",\n            \"keywords\": [\n                \"filesystem\",\n                \"iterator\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-file-iterator/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-file-iterator/tree/3.0.6\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2021-12-02T12:48:52+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-invoker\",\n            \"version\": \"3.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-invoker.git\",\n                \"reference\": \"5a10147d0aaf65b58940a0b72f71c9ac0423cc67\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-invoker/zipball/5a10147d0aaf65b58940a0b72f71c9ac0423cc67\",\n                \"reference\": \"5a10147d0aaf65b58940a0b72f71c9ac0423cc67\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"ext-pcntl\": \"*\",\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"suggest\": {\n                \"ext-pcntl\": \"*\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Invoke callables with a timeout\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-invoker/\",\n            \"keywords\": [\n                \"process\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-invoker/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-invoker/tree/3.1.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-09-28T05:58:55+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-text-template\",\n            \"version\": \"2.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-text-template.git\",\n                \"reference\": \"5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-text-template/zipball/5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28\",\n                \"reference\": \"5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Simple template engine.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-text-template/\",\n            \"keywords\": [\n                \"template\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-text-template/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-text-template/tree/2.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-26T05:33:50+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-timer\",\n            \"version\": \"5.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-timer.git\",\n                \"reference\": \"5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-timer/zipball/5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2\",\n                \"reference\": \"5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Utility class for timing\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-timer/\",\n            \"keywords\": [\n                \"timer\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-timer/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-timer/tree/5.0.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-26T13:16:10+00:00\"\n        },\n        {\n            \"name\": \"phpunit/phpunit\",\n            \"version\": \"9.6.22\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/phpunit.git\",\n                \"reference\": \"f80235cb4d3caa59ae09be3adf1ded27521d1a9c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/phpunit/zipball/f80235cb4d3caa59ae09be3adf1ded27521d1a9c\",\n                \"reference\": \"f80235cb4d3caa59ae09be3adf1ded27521d1a9c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/instantiator\": \"^1.5.0 || ^2\",\n                \"ext-dom\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"ext-xml\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"myclabs/deep-copy\": \"^1.12.1\",\n                \"phar-io/manifest\": \"^2.0.4\",\n                \"phar-io/version\": \"^3.2.1\",\n                \"php\": \">=7.3\",\n                \"phpunit/php-code-coverage\": \"^9.2.32\",\n                \"phpunit/php-file-iterator\": \"^3.0.6\",\n                \"phpunit/php-invoker\": \"^3.1.1\",\n                \"phpunit/php-text-template\": \"^2.0.4\",\n                \"phpunit/php-timer\": \"^5.0.3\",\n                \"sebastian/cli-parser\": \"^1.0.2\",\n                \"sebastian/code-unit\": \"^1.0.8\",\n                \"sebastian/comparator\": \"^4.0.8\",\n                \"sebastian/diff\": \"^4.0.6\",\n                \"sebastian/environment\": \"^5.1.5\",\n                \"sebastian/exporter\": \"^4.0.6\",\n                \"sebastian/global-state\": \"^5.0.7\",\n                \"sebastian/object-enumerator\": \"^4.0.4\",\n                \"sebastian/resource-operations\": \"^3.0.4\",\n                \"sebastian/type\": \"^3.2.1\",\n                \"sebastian/version\": \"^3.0.2\"\n            },\n            \"suggest\": {\n                \"ext-soap\": \"To be able to generate mocks based on WSDL files\",\n                \"ext-xdebug\": \"PHP extension that provides line coverage as well as branch and path coverage\"\n            },\n            \"bin\": [\n                \"phpunit\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"9.6-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/Framework/Assert/Functions.php\"\n                ],\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"The PHP Unit Testing framework.\",\n            \"homepage\": \"https://phpunit.de/\",\n            \"keywords\": [\n                \"phpunit\",\n                \"testing\",\n                \"xunit\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/phpunit/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/phpunit/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/phpunit/tree/9.6.22\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://phpunit.de/sponsors.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/phpunit/phpunit\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-12-05T13:48:26+00:00\"\n        },\n        {\n            \"name\": \"sebastian/cli-parser\",\n            \"version\": \"1.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/cli-parser.git\",\n                \"reference\": \"2b56bea83a09de3ac06bb18b92f068e60cc6f50b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/cli-parser/zipball/2b56bea83a09de3ac06bb18b92f068e60cc6f50b\",\n                \"reference\": \"2b56bea83a09de3ac06bb18b92f068e60cc6f50b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library for parsing CLI options\",\n            \"homepage\": \"https://github.com/sebastianbergmann/cli-parser\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/cli-parser/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/cli-parser/tree/1.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T06:27:43+00:00\"\n        },\n        {\n            \"name\": \"sebastian/code-unit\",\n            \"version\": \"1.0.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/code-unit.git\",\n                \"reference\": \"1fc9f64c0927627ef78ba436c9b17d967e68e120\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/code-unit/zipball/1fc9f64c0927627ef78ba436c9b17d967e68e120\",\n                \"reference\": \"1fc9f64c0927627ef78ba436c9b17d967e68e120\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Collection of value objects that represent the PHP code units\",\n            \"homepage\": \"https://github.com/sebastianbergmann/code-unit\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/code-unit/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/code-unit/tree/1.0.8\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-26T13:08:54+00:00\"\n        },\n        {\n            \"name\": \"sebastian/code-unit-reverse-lookup\",\n            \"version\": \"2.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup.git\",\n                \"reference\": \"ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/code-unit-reverse-lookup/zipball/ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5\",\n                \"reference\": \"ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Looks up which function or method a line of code belongs to\",\n            \"homepage\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup/\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup/tree/2.0.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-09-28T05:30:19+00:00\"\n        },\n        {\n            \"name\": \"sebastian/comparator\",\n            \"version\": \"4.0.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/comparator.git\",\n                \"reference\": \"fa0f136dd2334583309d32b62544682ee972b51a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/comparator/zipball/fa0f136dd2334583309d32b62544682ee972b51a\",\n                \"reference\": \"fa0f136dd2334583309d32b62544682ee972b51a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\",\n                \"sebastian/diff\": \"^4.0\",\n                \"sebastian/exporter\": \"^4.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Jeff Welch\",\n                    \"email\": \"whatthejeff@gmail.com\"\n                },\n                {\n                    \"name\": \"Volker Dusch\",\n                    \"email\": \"github@wallbash.com\"\n                },\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@2bepublished.at\"\n                }\n            ],\n            \"description\": \"Provides the functionality to compare PHP values for equality\",\n            \"homepage\": \"https://github.com/sebastianbergmann/comparator\",\n            \"keywords\": [\n                \"comparator\",\n                \"compare\",\n                \"equality\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/comparator/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/comparator/tree/4.0.8\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2022-09-14T12:41:17+00:00\"\n        },\n        {\n            \"name\": \"sebastian/complexity\",\n            \"version\": \"2.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/complexity.git\",\n                \"reference\": \"25f207c40d62b8b7aa32f5ab026c53561964053a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/complexity/zipball/25f207c40d62b8b7aa32f5ab026c53561964053a\",\n                \"reference\": \"25f207c40d62b8b7aa32f5ab026c53561964053a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"nikic/php-parser\": \"^4.18 || ^5.0\",\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library for calculating the complexity of PHP code units\",\n            \"homepage\": \"https://github.com/sebastianbergmann/complexity\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/complexity/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/complexity/tree/2.0.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-12-22T06:19:30+00:00\"\n        },\n        {\n            \"name\": \"sebastian/diff\",\n            \"version\": \"4.0.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/diff.git\",\n                \"reference\": \"ba01945089c3a293b01ba9badc29ad55b106b0bc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/diff/zipball/ba01945089c3a293b01ba9badc29ad55b106b0bc\",\n                \"reference\": \"ba01945089c3a293b01ba9badc29ad55b106b0bc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\",\n                \"symfony/process\": \"^4.2 || ^5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Kore Nordmann\",\n                    \"email\": \"mail@kore-nordmann.de\"\n                }\n            ],\n            \"description\": \"Diff implementation\",\n            \"homepage\": \"https://github.com/sebastianbergmann/diff\",\n            \"keywords\": [\n                \"diff\",\n                \"udiff\",\n                \"unidiff\",\n                \"unified diff\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/diff/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/diff/tree/4.0.6\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T06:30:58+00:00\"\n        },\n        {\n            \"name\": \"sebastian/environment\",\n            \"version\": \"5.1.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/environment.git\",\n                \"reference\": \"830c43a844f1f8d5b7a1f6d6076b784454d8b7ed\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/environment/zipball/830c43a844f1f8d5b7a1f6d6076b784454d8b7ed\",\n                \"reference\": \"830c43a844f1f8d5b7a1f6d6076b784454d8b7ed\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"suggest\": {\n                \"ext-posix\": \"*\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Provides functionality to handle HHVM/PHP environments\",\n            \"homepage\": \"http://www.github.com/sebastianbergmann/environment\",\n            \"keywords\": [\n                \"Xdebug\",\n                \"environment\",\n                \"hhvm\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/environment/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/environment/tree/5.1.5\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T06:03:51+00:00\"\n        },\n        {\n            \"name\": \"sebastian/exporter\",\n            \"version\": \"4.0.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/exporter.git\",\n                \"reference\": \"78c00df8f170e02473b682df15bfcdacc3d32d72\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/exporter/zipball/78c00df8f170e02473b682df15bfcdacc3d32d72\",\n                \"reference\": \"78c00df8f170e02473b682df15bfcdacc3d32d72\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\",\n                \"sebastian/recursion-context\": \"^4.0\"\n            },\n            \"require-dev\": {\n                \"ext-mbstring\": \"*\",\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Jeff Welch\",\n                    \"email\": \"whatthejeff@gmail.com\"\n                },\n                {\n                    \"name\": \"Volker Dusch\",\n                    \"email\": \"github@wallbash.com\"\n                },\n                {\n                    \"name\": \"Adam Harvey\",\n                    \"email\": \"aharvey@php.net\"\n                },\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@gmail.com\"\n                }\n            ],\n            \"description\": \"Provides the functionality to export PHP variables for visualization\",\n            \"homepage\": \"https://www.github.com/sebastianbergmann/exporter\",\n            \"keywords\": [\n                \"export\",\n                \"exporter\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/exporter/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/exporter/tree/4.0.6\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T06:33:00+00:00\"\n        },\n        {\n            \"name\": \"sebastian/global-state\",\n            \"version\": \"5.0.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/global-state.git\",\n                \"reference\": \"bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/global-state/zipball/bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9\",\n                \"reference\": \"bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\",\n                \"sebastian/object-reflector\": \"^2.0\",\n                \"sebastian/recursion-context\": \"^4.0\"\n            },\n            \"require-dev\": {\n                \"ext-dom\": \"*\",\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"suggest\": {\n                \"ext-uopz\": \"*\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Snapshotting of global state\",\n            \"homepage\": \"http://www.github.com/sebastianbergmann/global-state\",\n            \"keywords\": [\n                \"global state\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/global-state/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/global-state/tree/5.0.7\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T06:35:11+00:00\"\n        },\n        {\n            \"name\": \"sebastian/lines-of-code\",\n            \"version\": \"1.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/lines-of-code.git\",\n                \"reference\": \"e1e4a170560925c26d424b6a03aed157e7dcc5c5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/lines-of-code/zipball/e1e4a170560925c26d424b6a03aed157e7dcc5c5\",\n                \"reference\": \"e1e4a170560925c26d424b6a03aed157e7dcc5c5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"nikic/php-parser\": \"^4.18 || ^5.0\",\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library for counting the lines of code in PHP source code\",\n            \"homepage\": \"https://github.com/sebastianbergmann/lines-of-code\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/lines-of-code/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/lines-of-code/tree/1.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-12-22T06:20:34+00:00\"\n        },\n        {\n            \"name\": \"sebastian/object-enumerator\",\n            \"version\": \"4.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/object-enumerator.git\",\n                \"reference\": \"5c9eeac41b290a3712d88851518825ad78f45c71\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/object-enumerator/zipball/5c9eeac41b290a3712d88851518825ad78f45c71\",\n                \"reference\": \"5c9eeac41b290a3712d88851518825ad78f45c71\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\",\n                \"sebastian/object-reflector\": \"^2.0\",\n                \"sebastian/recursion-context\": \"^4.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Traverses array structures and object graphs to enumerate all referenced objects\",\n            \"homepage\": \"https://github.com/sebastianbergmann/object-enumerator/\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/object-enumerator/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/object-enumerator/tree/4.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-26T13:12:34+00:00\"\n        },\n        {\n            \"name\": \"sebastian/object-reflector\",\n            \"version\": \"2.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/object-reflector.git\",\n                \"reference\": \"b4f479ebdbf63ac605d183ece17d8d7fe49c15c7\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/object-reflector/zipball/b4f479ebdbf63ac605d183ece17d8d7fe49c15c7\",\n                \"reference\": \"b4f479ebdbf63ac605d183ece17d8d7fe49c15c7\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Allows reflection of object attributes, including inherited and non-public ones\",\n            \"homepage\": \"https://github.com/sebastianbergmann/object-reflector/\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/object-reflector/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/object-reflector/tree/2.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-26T13:14:26+00:00\"\n        },\n        {\n            \"name\": \"sebastian/phpcpd\",\n            \"version\": \"6.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/phpcpd.git\",\n                \"reference\": \"f3683aa0db2e8e09287c2bb33a595b2873ea9176\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/phpcpd/zipball/f3683aa0db2e8e09287c2bb33a595b2873ea9176\",\n                \"reference\": \"f3683aa0db2e8e09287c2bb33a595b2873ea9176\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"php\": \">=7.3\",\n                \"phpunit/php-file-iterator\": \"^3.0\",\n                \"phpunit/php-timer\": \"^5.0\",\n                \"sebastian/cli-parser\": \"^1.0\",\n                \"sebastian/version\": \"^3.0\"\n            },\n            \"bin\": [\n                \"phpcpd\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"6.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Copy/Paste Detector (CPD) for PHP code.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/phpcpd\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/phpcpd/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/phpcpd/tree/6.0.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2020-12-07T05:39:23+00:00\"\n        },\n        {\n            \"name\": \"sebastian/recursion-context\",\n            \"version\": \"4.0.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/recursion-context.git\",\n                \"reference\": \"e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1\",\n                \"reference\": \"e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Jeff Welch\",\n                    \"email\": \"whatthejeff@gmail.com\"\n                },\n                {\n                    \"name\": \"Adam Harvey\",\n                    \"email\": \"aharvey@php.net\"\n                }\n            ],\n            \"description\": \"Provides functionality to recursively process PHP variables\",\n            \"homepage\": \"https://github.com/sebastianbergmann/recursion-context\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/recursion-context/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/recursion-context/tree/4.0.5\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T06:07:39+00:00\"\n        },\n        {\n            \"name\": \"sebastian/resource-operations\",\n            \"version\": \"3.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/resource-operations.git\",\n                \"reference\": \"05d5692a7993ecccd56a03e40cd7e5b09b1d404e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/resource-operations/zipball/05d5692a7993ecccd56a03e40cd7e5b09b1d404e\",\n                \"reference\": \"05d5692a7993ecccd56a03e40cd7e5b09b1d404e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Provides a list of PHP built-in functions that operate on resources\",\n            \"homepage\": \"https://www.github.com/sebastianbergmann/resource-operations\",\n            \"support\": {\n                \"source\": \"https://github.com/sebastianbergmann/resource-operations/tree/3.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-14T16:00:52+00:00\"\n        },\n        {\n            \"name\": \"sebastian/type\",\n            \"version\": \"3.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/type.git\",\n                \"reference\": \"75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/type/zipball/75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7\",\n                \"reference\": \"75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Collection of value objects that represent the types of the PHP type system\",\n            \"homepage\": \"https://github.com/sebastianbergmann/type\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/type/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/type/tree/3.2.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T06:13:03+00:00\"\n        },\n        {\n            \"name\": \"sebastian/version\",\n            \"version\": \"3.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/version.git\",\n                \"reference\": \"c6c1022351a901512170118436c764e473f6de8c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/version/zipball/c6c1022351a901512170118436c764e473f6de8c\",\n                \"reference\": \"c6c1022351a901512170118436c764e473f6de8c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library that helps with managing the version number of Git-hosted PHP projects\",\n            \"homepage\": \"https://github.com/sebastianbergmann/version\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/version/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/version/tree/3.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-09-28T06:39:44+00:00\"\n        },\n        {\n            \"name\": \"squizlabs/php_codesniffer\",\n            \"version\": \"3.11.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHPCSStandards/PHP_CodeSniffer.git\",\n                \"reference\": \"1368f4a58c3c52114b86b1abe8f4098869cb0079\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHPCSStandards/PHP_CodeSniffer/zipball/1368f4a58c3c52114b86b1abe8f4098869cb0079\",\n                \"reference\": \"1368f4a58c3c52114b86b1abe8f4098869cb0079\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-simplexml\": \"*\",\n                \"ext-tokenizer\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"php\": \">=5.4.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.0 || ^5.0 || ^6.0 || ^7.0 || ^8.0 || ^9.3.4\"\n            },\n            \"bin\": [\n                \"bin/phpcbf\",\n                \"bin/phpcs\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.x-dev\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Greg Sherwood\",\n                    \"role\": \"Former lead\"\n                },\n                {\n                    \"name\": \"Juliette Reinders Folmer\",\n                    \"role\": \"Current lead\"\n                },\n                {\n                    \"name\": \"Contributors\",\n                    \"homepage\": \"https://github.com/PHPCSStandards/PHP_CodeSniffer/graphs/contributors\"\n                }\n            ],\n            \"description\": \"PHP_CodeSniffer tokenizes PHP, JavaScript and CSS files and detects violations of a defined set of coding standards.\",\n            \"homepage\": \"https://github.com/PHPCSStandards/PHP_CodeSniffer\",\n            \"keywords\": [\n                \"phpcs\",\n                \"standards\",\n                \"static analysis\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/PHPCSStandards/PHP_CodeSniffer/issues\",\n                \"security\": \"https://github.com/PHPCSStandards/PHP_CodeSniffer/security/policy\",\n                \"source\": \"https://github.com/PHPCSStandards/PHP_CodeSniffer\",\n                \"wiki\": \"https://github.com/PHPCSStandards/PHP_CodeSniffer/wiki\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/PHPCSStandards\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/jrfnl\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://opencollective.com/php_codesniffer\",\n                    \"type\": \"open_collective\"\n                }\n            ],\n            \"time\": \"2024-12-11T16:04:26+00:00\"\n        },\n        {\n            \"name\": \"symfony/config\",\n            \"version\": \"v5.4.46\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/config.git\",\n                \"reference\": \"977c88a02d7d3f16904a81907531b19666a08e78\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/config/zipball/977c88a02d7d3f16904a81907531b19666a08e78\",\n                \"reference\": \"977c88a02d7d3f16904a81907531b19666a08e78\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1|^3\",\n                \"symfony/filesystem\": \"^4.4|^5.0|^6.0\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-php80\": \"^1.16\",\n                \"symfony/polyfill-php81\": \"^1.22\"\n            },\n            \"conflict\": {\n                \"symfony/finder\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"symfony/event-dispatcher\": \"^4.4|^5.0|^6.0\",\n                \"symfony/finder\": \"^4.4|^5.0|^6.0\",\n                \"symfony/messenger\": \"^4.4|^5.0|^6.0\",\n                \"symfony/service-contracts\": \"^1.1|^2|^3\",\n                \"symfony/yaml\": \"^4.4|^5.0|^6.0\"\n            },\n            \"suggest\": {\n                \"symfony/yaml\": \"To use the yaml reference dumper\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Config\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Helps you find, load, combine, autofill and validate configuration values of any kind\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/config/tree/v5.4.46\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-10-30T07:58:02+00:00\"\n        },\n        {\n            \"name\": \"symfony/dependency-injection\",\n            \"version\": \"v5.4.48\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/dependency-injection.git\",\n                \"reference\": \"e5ca16dee39ef7d63e552ff0bf0a2526a1142c92\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/dependency-injection/zipball/e5ca16dee39ef7d63e552ff0bf0a2526a1142c92\",\n                \"reference\": \"e5ca16dee39ef7d63e552ff0bf0a2526a1142c92\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/container\": \"^1.1.1\",\n                \"symfony/deprecation-contracts\": \"^2.1|^3\",\n                \"symfony/polyfill-php80\": \"^1.16\",\n                \"symfony/polyfill-php81\": \"^1.22\",\n                \"symfony/service-contracts\": \"^1.1.6|^2\"\n            },\n            \"conflict\": {\n                \"ext-psr\": \"<1.1|>=2\",\n                \"symfony/config\": \"<5.3\",\n                \"symfony/finder\": \"<4.4\",\n                \"symfony/proxy-manager-bridge\": \"<4.4\",\n                \"symfony/yaml\": \"<4.4.26\"\n            },\n            \"provide\": {\n                \"psr/container-implementation\": \"1.0\",\n                \"symfony/service-implementation\": \"1.0|2.0\"\n            },\n            \"require-dev\": {\n                \"symfony/config\": \"^5.3|^6.0\",\n                \"symfony/expression-language\": \"^4.4|^5.0|^6.0\",\n                \"symfony/yaml\": \"^4.4.26|^5.0|^6.0\"\n            },\n            \"suggest\": {\n                \"symfony/config\": \"\",\n                \"symfony/expression-language\": \"For using expressions in service container configuration\",\n                \"symfony/finder\": \"For using double-star glob patterns or when GLOB_BRACE portability is required\",\n                \"symfony/proxy-manager-bridge\": \"Generate service proxies to lazy load them\",\n                \"symfony/yaml\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\DependencyInjection\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Allows you to standardize and centralize the way objects are constructed in your application\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/dependency-injection/tree/v5.4.48\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-20T10:51:57+00:00\"\n        },\n        {\n            \"name\": \"symfony/filesystem\",\n            \"version\": \"v5.4.45\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/filesystem.git\",\n                \"reference\": \"57c8294ed37d4a055b77057827c67f9558c95c54\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/filesystem/zipball/57c8294ed37d4a055b77057827c67f9558c95c54\",\n                \"reference\": \"57c8294ed37d4a055b77057827c67f9558c95c54\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-mbstring\": \"~1.8\",\n                \"symfony/polyfill-php80\": \"^1.16\"\n            },\n            \"require-dev\": {\n                \"symfony/process\": \"^5.4|^6.4\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Filesystem\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides basic utilities for the filesystem\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/filesystem/tree/v5.4.45\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-10-22T13:05:35+00:00\"\n        },\n        {\n            \"name\": \"theseer/tokenizer\",\n            \"version\": \"1.2.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/theseer/tokenizer.git\",\n                \"reference\": \"737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/theseer/tokenizer/zipball/737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2\",\n                \"reference\": \"737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-tokenizer\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"A small library for converting tokenized PHP source code into XML and potentially other formats\",\n            \"support\": {\n                \"issues\": \"https://github.com/theseer/tokenizer/issues\",\n                \"source\": \"https://github.com/theseer/tokenizer/tree/1.2.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/theseer\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-03T12:36:25+00:00\"\n        }\n    ],\n    \"aliases\": [],\n    \"minimum-stability\": \"stable\",\n    \"stability-flags\": {},\n    \"prefer-stable\": false,\n    \"prefer-lowest\": false,\n    \"platform\": {\n        \"php\": \"^7.4 || ^8.0\",\n        \"ext-session\": \"*\",\n        \"ext-ctype\": \"*\",\n        \"ext-pdo\": \"*\",\n        \"ext-pdo_mysql\": \"*\",\n        \"ext-simplexml\": \"*\",\n        \"ext-xml\": \"*\",\n        \"ext-filter\": \"*\",\n        \"ext-posix\": \"*\",\n        \"ext-mbstring\": \"*\",\n        \"ext-curl\": \"*\",\n        \"ext-json\": \"*\",\n        \"ext-openssl\": \"*\",\n        \"ext-fileinfo\": \"*\",\n        \"ext-gmp\": \"*\",\n        \"ext-gd\": \"*\",\n        \"ext-gnupg\": \"*\"\n    },\n    \"platform-dev\": {\n        \"ext-pcntl\": \"*\"\n    },\n    \"platform-overrides\": {\n        \"php\": \"7.4\"\n    },\n    \"plugin-api-version\": \"2.6.0\"\n}\n"
        },
        {
          "name": "customer_domains.php",
          "type": "blob",
          "size": 15.205078125,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'customer';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\SubDomains;\nuse Froxlor\\CurrentUser;\nuse Froxlor\\Database\\Database;\nuse Froxlor\\Domain\\Domain;\nuse Froxlor\\FileDir;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\PhpHelper;\nuse Froxlor\\Settings;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\nuse Froxlor\\Validate\\Validate;\n\n// redirect if this customer page is hidden via settings\nif (Settings::IsInList('panel.customer_hide_options', 'domains')) {\n\tResponse::redirectTo('customer_index.php');\n}\n\n$id = (int)Request::any('id');\n\nif ($page == 'overview' || $page == 'domains') {\n\tif ($action == '') {\n\t\t$log->logAction(FroxlorLogger::USR_ACTION, LOG_INFO, \"viewed customer_domains::domains\");\n\n\t\t$parentdomain_id = (int)Request::any('pid', '0');\n\n\t\ttry {\n\t\t\t$domain_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/customer/tablelisting.domains.php';\n\t\t\t$collection = (new Collection(SubDomains::class, $userinfo))\n\t\t\t\t->withPagination($domain_list_data['domain_list']['columns'], $domain_list_data['domain_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\t$actions_links = [];\n\t\tif (CurrentUser::canAddResource('subdomains')) {\n\t\t\t$actions_links[] = [\n\t\t\t\t'href' => $linker->getLink(['section' => 'domains', 'page' => 'domains', 'action' => 'add']),\n\t\t\t\t'label' => lng('domains.subdomain_add')\n\t\t\t];\n\t\t}\n\n\t\t$actions_links[] = [\n\t\t\t'href' => \\Froxlor\\Froxlor::getDocsUrl() . 'user-guide/domains/',\n\t\t\t'target' => '_blank',\n\t\t\t'icon' => 'fa-solid fa-circle-info',\n\t\t\t'class' => 'btn-outline-secondary'\n\t\t];\n\n\t\t$table_tpl = 'table.html.twig';\n\t\tif ($collection->count() == 0) {\n\t\t\t$table_tpl = 'table-note.html.twig';\n\t\t}\n\t\tUI::view('user/' . $table_tpl, [\n\t\t\t'listing' => Listing::format($collection, $domain_list_data, 'domain_list'),\n\t\t\t'actions_links' => $actions_links,\n\t\t\t'entity_info' => lng('domains.description'),\n\t\t\t// alert-box\n\t\t\t'type' => 'warning',\n\t\t\t'alert_msg' => lng('domains.nodomainsassignedbyadmin')\n\t\t]);\n\t} elseif ($action == 'delete' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = SubDomains::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\t$alias_stmt = Database::prepare(\"SELECT COUNT(`id`) AS `count` FROM `\" . TABLE_PANEL_DOMAINS . \"` WHERE `aliasdomain` = :aliasdomain\");\n\t\t$alias_check = Database::pexecute_first($alias_stmt, [\n\t\t\t\"aliasdomain\" => $id\n\t\t]);\n\n\t\tif (isset($result['parentdomainid']) && $result['parentdomainid'] != '0' && $alias_check['count'] == 0) {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tSubDomains::getLocal($userinfo, Request::postAll())->delete();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tHTML::askYesNo('domains_reallydelete', $filename, [\n\t\t\t\t\t'id' => $id,\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => $action\n\t\t\t\t], $idna_convert->decode($result['domain']));\n\t\t\t}\n\t\t} else {\n\t\t\tResponse::standardError('domains_cantdeletemaindomain');\n\t\t}\n\t} elseif ($action == 'add') {\n\t\tif ($userinfo['subdomains_used'] < $userinfo['subdomains'] || $userinfo['subdomains'] == '-1') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tSubDomains::getLocal($userinfo, Request::postAll())->add();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$stmt = Database::prepare(\"SELECT `id`, `domain`, `documentroot`, `ssl_redirect`,`isemaildomain`,`letsencrypt` FROM `\" . TABLE_PANEL_DOMAINS . \"`\n\t\t\t\t\tWHERE `customerid` = :customerid\n\t\t\t\t\tAND `parentdomainid` = '0'\n\t\t\t\t\tAND `email_only` = '0'\n\t\t\t\t\tAND `deactivated` = '0'\n\t\t\t\t\tORDER BY `domain` ASC\");\n\t\t\t\tDatabase::pexecute($stmt, [\n\t\t\t\t\t\"customerid\" => $userinfo['customerid']\n\t\t\t\t]);\n\t\t\t\t$domains = [];\n\t\t\t\twhile ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t$domains[$row['domain']] = $idna_convert->decode($row['domain']);\n\t\t\t\t}\n\n\t\t\t\t// check of there are any domains to be used\n\t\t\t\tif (count($domains) <= 0) {\n\t\t\t\t\t// no, possible direct URL access, redirect to overview\n\t\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t\t'page' => $page\n\t\t\t\t\t]);\n\t\t\t\t}\n\n\t\t\t\t$aliasdomains[0] = lng('domains.noaliasdomain');\n\t\t\t\t$domains_stmt = Database::prepare(\"SELECT `d`.`id`, `d`.`domain` FROM `\" . TABLE_PANEL_DOMAINS . \"` `d`, `\" . TABLE_PANEL_CUSTOMERS . \"` `c`\n\t\t\t\t\tWHERE `d`.`aliasdomain` IS NULL\n\t\t\t\t\tAND `d`.`id` <> `c`.`standardsubdomain`\n\t\t\t\t\tAND `d`.`parentdomainid` = '0'\n\t\t\t\t\tAND `d`.`customerid`=`c`.`customerid`\n\t\t\t\t\tAND `d`.`email_only`='0'\n\t\t\t\t\tAND `d`.`customerid`= :customerid\n\t\t\t\t\tORDER BY `d`.`domain` ASC\");\n\t\t\t\tDatabase::pexecute($domains_stmt, [\n\t\t\t\t\t\"customerid\" => $userinfo['customerid']\n\t\t\t\t]);\n\n\t\t\t\twhile ($row_domain = $domains_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t$aliasdomains[$row_domain['id']] = $idna_convert->decode($row_domain['domain']);\n\t\t\t\t}\n\n\t\t\t\t$redirectcode = [];\n\t\t\t\tif (Settings::Get('customredirect.enabled') == '1') {\n\t\t\t\t\t$codes = Domain::getRedirectCodesArray();\n\t\t\t\t\tforeach ($codes as $rc) {\n\t\t\t\t\t\t$redirectcode[$rc['id']] = $rc['code'] . ' (' . lng('redirect_desc.' . $rc['desc']) . ')';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// check if we at least have one ssl-ip/port, #1179\n\t\t\t\t$ssl_ipsandports = false;\n\t\t\t\t$ssl_ip_stmt = Database::prepare(\"\n\t\t\t\t\tSELECT COUNT(*) as countSSL\n\t\t\t\t\tFROM `\" . TABLE_PANEL_IPSANDPORTS . \"` pip\n\t\t\t\t\tLEFT JOIN `\" . TABLE_DOMAINTOIP . \"` dti ON dti.id_ipandports = pip.id\n\t\t\t\t\tWHERE pip.`ssl`='1'\n\t\t\t\t\");\n\t\t\t\tDatabase::pexecute($ssl_ip_stmt);\n\t\t\t\t$resultX = $ssl_ip_stmt->fetch(PDO::FETCH_ASSOC);\n\t\t\t\tif (isset($resultX['countSSL']) && (int)$resultX['countSSL'] > 0) {\n\t\t\t\t\t$ssl_ipsandports = true;\n\t\t\t\t}\n\n\t\t\t\t$openbasedir = [\n\t\t\t\t\t0 => lng('domain.docroot'),\n\t\t\t\t\t1 => lng('domain.homedir'),\n\t\t\t\t\t2 => lng('domain.docparent')\n\t\t\t\t];\n\t\t\t\t$pathSelect = FileDir::makePathfield($userinfo['documentroot'], $userinfo['guid'], $userinfo['guid']);\n\n\t\t\t\t$phpconfigs = [];\n\t\t\t\tif (isset($userinfo['allowed_phpconfigs']) && !empty($userinfo['allowed_phpconfigs'])) {\n\t\t\t\t\t$allowed_cfg = json_decode($userinfo['allowed_phpconfigs'], JSON_OBJECT_AS_ARRAY);\n\t\t\t\t\t$phpconfigs_result_stmt = Database::query(\"\n\t\t\t\t\t\tSELECT c.*, fc.description as interpreter\n\t\t\t\t\t\tFROM `\" . TABLE_PANEL_PHPCONFIGS . \"` c\n\t\t\t\t\t\tLEFT JOIN `\" . TABLE_PANEL_FPMDAEMONS . \"` fc ON fc.id = c.fpmsettingid\n\t\t\t\t\t\tWHERE c.id IN (\" . implode(\", \", $allowed_cfg) . \")\n\t\t\t\t\t\");\n\t\t\t\t\twhile ($phpconfigs_row = $phpconfigs_result_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t\tif ((int)Settings::Get('phpfpm.enabled') == 1) {\n\t\t\t\t\t\t\t$phpconfigs[$phpconfigs_row['id']] = $phpconfigs_row['description'] . \" [\" . $phpconfigs_row['interpreter'] . \"]\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$phpconfigs[$phpconfigs_row['id']] = $phpconfigs_row['description'];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$subdomain_add_data = include_once dirname(__FILE__) . '/lib/formfields/customer/domains/formfield.domains_add.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'domains']),\n\t\t\t\t\t'formdata' => $subdomain_add_data['domain_add']\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'edit' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = SubDomains::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['customerid']) && $result['customerid'] == $userinfo['customerid']) {\n\n\t\t\tif ((int)$result['caneditdomain'] == 0) {\n\t\t\t\tResponse::standardError('domaincannotbeedited', $result['domain']);\n\t\t\t}\n\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tSubDomains::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$result['domain'] = $idna_convert->decode($result['domain']);\n\n\t\t\t\t$domains[0] = lng('domains.noaliasdomain');\n\t\t\t\t// also check ip/port combination to be the same, #176\n\t\t\t\t$domains_stmt = Database::prepare(\"SELECT `d`.`id`, `d`.`domain` FROM `\" . TABLE_PANEL_DOMAINS . \"` `d` , `\" . TABLE_PANEL_CUSTOMERS . \"` `c` , `\" . TABLE_DOMAINTOIP . \"` `dip`\n\t\t\t\t\tWHERE `d`.`aliasdomain` IS NULL\n\t\t\t\t\tAND `d`.`id` <> :id\n\t\t\t\t\tAND `c`.`standardsubdomain` <> `d`.`id`\n\t\t\t\t\tAND `d`.`parentdomainid` = '0'\n\t\t\t\t\tAND `d`.`customerid` = :customerid\n\t\t\t\t\tAND `c`.`customerid` = `d`.`customerid`\n\t\t\t\t\tAND `d`.`id` = `dip`.`id_domain`\n\t\t\t\t\tAND `dip`.`id_ipandports`\n\t\t\t\t\tIN (SELECT `id_ipandports` FROM `\" . TABLE_DOMAINTOIP . \"`\n\t\t\t\t\t\tWHERE `id_domain` = :id)\n\t\t\t\t\tGROUP BY `d`.`id`, `d`.`domain`\n\t\t\t\t\tORDER BY `d`.`domain` ASC\");\n\t\t\t\tDatabase::pexecute($domains_stmt, [\n\t\t\t\t\t\"id\" => $result['id'],\n\t\t\t\t\t\"customerid\" => $userinfo['customerid']\n\t\t\t\t]);\n\n\t\t\t\twhile ($row_domain = $domains_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t$domains[$row_domain['id']] = $idna_convert->decode($row_domain['domain']);\n\t\t\t\t}\n\n\t\t\t\tif (preg_match('/^https?\\:\\/\\//', $result['documentroot']) && Validate::validateUrl($result['documentroot'])) {\n\t\t\t\t\tif (Settings::Get('panel.pathedit') == 'Dropdown') {\n\t\t\t\t\t\t$urlvalue = $result['documentroot'];\n\t\t\t\t\t\t$pathSelect = FileDir::makePathfield($userinfo['documentroot'], $userinfo['guid'], $userinfo['guid']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$urlvalue = '';\n\t\t\t\t\t\t$pathSelect = FileDir::makePathfield($userinfo['documentroot'], $userinfo['guid'], $userinfo['guid'], $result['documentroot'], true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$urlvalue = '';\n\t\t\t\t\t$pathSelect = FileDir::makePathfield($userinfo['documentroot'], $userinfo['guid'], $userinfo['guid'], $result['documentroot']);\n\t\t\t\t}\n\n\t\t\t\t$redirectcode = [];\n\t\t\t\tif (Settings::Get('customredirect.enabled') == '1') {\n\t\t\t\t\t$def_code = Domain::getDomainRedirectId($id);\n\t\t\t\t\t$codes = Domain::getRedirectCodesArray();\n\t\t\t\t\tforeach ($codes as $rc) {\n\t\t\t\t\t\t$redirectcode[$rc['id']] = $rc['code'] . ' (' . lng('redirect_desc.' . $rc['desc']) . ')';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// check if we at least have one ssl-ip/port, #1179\n\t\t\t\t$ssl_ipsandports = false;\n\t\t\t\t$ssl_ip_stmt = Database::prepare(\"\n\t\t\t\t\tSELECT COUNT(*) as countSSL\n\t\t\t\t\tFROM `\" . TABLE_PANEL_IPSANDPORTS . \"` pip\n\t\t\t\t\tLEFT JOIN `\" . TABLE_DOMAINTOIP . \"` dti ON dti.id_ipandports = pip.id\n\t\t\t\t\tWHERE `dti`.`id_domain` = :id_domain AND pip.`ssl`='1'\n\t\t\t\t\");\n\t\t\t\tDatabase::pexecute($ssl_ip_stmt, [\n\t\t\t\t\t\"id_domain\" => $result['id']\n\t\t\t\t]);\n\t\t\t\t$resultX = $ssl_ip_stmt->fetch(PDO::FETCH_ASSOC);\n\t\t\t\tif (isset($resultX['countSSL']) && (int)$resultX['countSSL'] > 0) {\n\t\t\t\t\t$ssl_ipsandports = true;\n\t\t\t\t}\n\n\t\t\t\t// Fudge the result for ssl_redirect to hide the Let's Encrypt steps\n\t\t\t\t$result['temporary_ssl_redirect'] = $result['ssl_redirect'];\n\t\t\t\t$result['ssl_redirect'] = ($result['ssl_redirect'] == 0 ? 0 : 1);\n\n\t\t\t\t$openbasedir = [\n\t\t\t\t\t0 => lng('domain.docroot'),\n\t\t\t\t\t1 => lng('domain.homedir'),\n\t\t\t\t\t2 => lng('domain.docparent')\n\t\t\t\t];\n\n\t\t\t\t// create serveralias options\n\t\t\t\t$serveraliasoptions = [];\n\t\t\t\t$serveraliasoptions_selected = '2';\n\t\t\t\tif ($result['iswildcarddomain'] == '1') {\n\t\t\t\t\t$serveraliasoptions_selected = '0';\n\t\t\t\t} elseif ($result['wwwserveralias'] == '1') {\n\t\t\t\t\t$serveraliasoptions_selected = '1';\n\t\t\t\t}\n\t\t\t\t$serveraliasoptions[0] = lng('domains.serveraliasoption_wildcard');\n\t\t\t\t$serveraliasoptions[1] = lng('domains.serveraliasoption_www');\n\t\t\t\t$serveraliasoptions[2] = lng('domains.serveraliasoption_none');\n\n\t\t\t\t$ips_stmt = Database::prepare(\"SELECT `p`.`ip` AS `ip` FROM `\" . TABLE_PANEL_IPSANDPORTS . \"` `p`\n\t\t\t\t\tLEFT JOIN `\" . TABLE_DOMAINTOIP . \"` `dip`\n\t\t\t\t\tON ( `dip`.`id_ipandports` = `p`.`id` )\n\t\t\t\t\tWHERE `dip`.`id_domain` = :id_domain\n\t\t\t\t\tGROUP BY `p`.`ip`\");\n\t\t\t\tDatabase::pexecute($ips_stmt, [\n\t\t\t\t\t\"id_domain\" => $result['id']\n\t\t\t\t]);\n\t\t\t\t$domainips = [];\n\t\t\t\twhile ($rowip = $ips_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t$domainips[] = ['item' => $rowip['ip']];\n\t\t\t\t}\n\n\t\t\t\t$phpconfigs = [];\n\t\t\t\tif (isset($userinfo['allowed_phpconfigs']) && !empty($userinfo['allowed_phpconfigs'])) {\n\t\t\t\t\t$allowed_cfg = json_decode($userinfo['allowed_phpconfigs'], JSON_OBJECT_AS_ARRAY);\n\t\t\t\t\t$phpconfigs_result_stmt = Database::query(\"\n\t\t\t\t\t\tSELECT c.*, fc.description as interpreter\n\t\t\t\t\t\tFROM `\" . TABLE_PANEL_PHPCONFIGS . \"` c\n\t\t\t\t\t\tLEFT JOIN `\" . TABLE_PANEL_FPMDAEMONS . \"` fc ON fc.id = c.fpmsettingid\n\t\t\t\t\t\tWHERE c.id IN (\" . implode(\", \", $allowed_cfg) . \")\n\t\t\t\t\t\");\n\t\t\t\t\twhile ($phpconfigs_row = $phpconfigs_result_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t\tif ((int)Settings::Get('phpfpm.enabled') == 1) {\n\t\t\t\t\t\t\t$phpconfigs[$phpconfigs_row['id']] = $phpconfigs_row['description'] . \" [\" . $phpconfigs_row['interpreter'] . \"]\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$phpconfigs[$phpconfigs_row['id']] = $phpconfigs_row['description'];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$alias_stmt = Database::prepare(\"SELECT COUNT(`id`) AS count FROM `\" . TABLE_PANEL_DOMAINS . \"` WHERE `aliasdomain`= :aliasdomain\");\n\t\t\t\t$alias_check = Database::pexecute_first($alias_stmt, [\n\t\t\t\t\t\"aliasdomain\" => $result['id']\n\t\t\t\t]);\n\t\t\t\t$alias_check = $alias_check['count'];\n\n\t\t\t\t$result = PhpHelper::htmlentitiesArray($result);\n\n\t\t\t\t$subdomain_edit_data = include_once dirname(__FILE__) . '/lib/formfields/customer/domains/formfield.domains_edit.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'domains', 'id' => $id]),\n\t\t\t\t\t'formdata' => $subdomain_edit_data['domain_edit'],\n\t\t\t\t\t'editid' => $id\n\t\t\t\t]);\n\t\t\t}\n\t\t} else {\n\t\t\tResponse::standardError('domains_canteditdomain');\n\t\t}\n\t} elseif ($action == 'jqSpeciallogfileNote') {\n\t\t$domainid = intval(Request::post('id'));\n\t\t$newval = intval(Request::post('newval'));\n\t\ttry {\n\t\t\t$json_result = SubDomains::getLocal($userinfo, [\n\t\t\t\t'id' => $domainid\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\t\tif ($newval != $result['speciallogfile']) {\n\t\t\techo json_encode(['changed' => true, 'info' => lng('admin.speciallogwarning')]);\n\t\t\texit();\n\t\t}\n\t\techo 0;\n\t\texit();\n\t}\n} elseif ($page == 'domainssleditor') {\n\trequire_once __DIR__ . '/ssl_editor.php';\n} elseif ($page == 'domaindnseditor' && $userinfo['dnsenabled'] == '1' && Settings::Get('system.dnsenabled') == '1') {\n\trequire_once __DIR__ . '/dns_editor.php';\n} elseif ($page == 'sslcertificates') {\n\trequire_once __DIR__ . '/ssl_certificates.php';\n} elseif ($page == 'logfiles') {\n\trequire_once __DIR__ . '/logfiles_viewer.php';\n}\n"
        },
        {
          "name": "customer_email.php",
          "type": "blob",
          "size": 19.7587890625,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'customer';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\EmailAccounts;\nuse Froxlor\\Api\\Commands\\EmailDomains;\nuse Froxlor\\Api\\Commands\\EmailForwarders;\nuse Froxlor\\Api\\Commands\\Emails;\nuse Froxlor\\Cron\\Mail\\Rspamd;\nuse Froxlor\\CurrentUser;\nuse Froxlor\\Database\\Database;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\PhpHelper;\nuse Froxlor\\Settings;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\nuse Froxlor\\Validate\\Check;\n\n// redirect if this customer page is hidden via settings\nif (Settings::IsInList('panel.customer_hide_options', 'email') || $userinfo['emails'] == 0) {\n\tResponse::redirectTo('customer_index.php');\n}\n\n$id = (int)Request::any('id');\n\nif ($page == 'overview' || $page == 'emails') {\n\t$result_stmt = Database::prepare(\"\n\t\tSELECT COUNT(DISTINCT `domainid`) as maildomains FROM `\" . TABLE_MAIL_VIRTUAL . \"` WHERE `customerid`= :cid\n\t\");\n\t$domain_count = Database::pexecute_first($result_stmt, [\n\t\t\"cid\" => $userinfo['customerid']\n\t]);\n\tif ($domain_count['maildomains'] && $domain_count['maildomains'] > 1) {\n\t\ttry {\n\t\t\t$emaildomain_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/customer/tablelisting.emails_overview.php';\n\t\t\t$collection = (new Collection(EmailDomains::class, $userinfo))\n\t\t\t\t->withPagination($emaildomain_list_data['emaildomain_list']['columns'],\n\t\t\t\t\t$emaildomain_list_data['emaildomain_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\t$actions_links = [];\n\t\tif (CurrentUser::canAddResource('emails')) {\n\t\t\t$actions_links[] = [\n\t\t\t\t'href' => $linker->getLink(['section' => 'email', 'page' => 'email_domain', 'action' => 'add']),\n\t\t\t\t'label' => lng('emails.emails_add')\n\t\t\t];\n\t\t}\n\n\t\t$actions_links[] = [\n\t\t\t'href' => \\Froxlor\\Froxlor::getDocsUrl() . 'user-guide/emails/',\n\t\t\t'target' => '_blank',\n\t\t\t'icon' => 'fa-solid fa-circle-info',\n\t\t\t'class' => 'btn-outline-secondary'\n\t\t];\n\n\t\tUI::view('user/table.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $emaildomain_list_data, 'emaildomain_list'),\n\t\t\t'actions_links' => $actions_links,\n\t\t]);\n\t} else {\n\t\t// only emails for one domain -> show email address listing directly\n\t\t$page = 'email_domain';\n\t}\n}\nif ($page == 'email_domain') {\n\t$email_domainid = Request::any('domainid', 0);\n\tif ($action == '') {\n\t\t$log->logAction(FroxlorLogger::USR_ACTION, LOG_INFO, \"viewed customer_email::emails\");\n\n\t\t$sql_search = [];\n\t\tif ($email_domainid > 0) {\n\t\t\t$sql_search = ['sql_search' => ['m.domainid' => ['op' => '=', 'value' => $email_domainid]]];\n\t\t}\n\t\ttry {\n\t\t\t$email_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/customer/tablelisting.emails.php';\n\t\t\t$collection = (new Collection(Emails::class, $userinfo, $sql_search))\n\t\t\t\t->withPagination($email_list_data['email_list']['columns'],\n\t\t\t\t\t$email_list_data['email_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\t$result_stmt = Database::prepare(\"\n\t\t\tSELECT COUNT(`id`) as emaildomains\n\t\t\tFROM `\" . TABLE_PANEL_DOMAINS . \"`\n\t\t\tWHERE `customerid`= :cid AND `isemaildomain` = '1'\n\t\t\");\n\t\t$result2 = Database::pexecute_first($result_stmt, [\n\t\t\t\"cid\" => $userinfo['customerid']\n\t\t]);\n\t\t$emaildomains_count = $result2['emaildomains'];\n\n\t\t$actions_links = [];\n\t\tif ($email_domainid > 0) {\n\t\t\t$actions_links[] = [\n\t\t\t\t'class' => 'btn-outline-primary',\n\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t'section' => 'email',\n\t\t\t\t\t'page' => 'emails',\n\t\t\t\t]),\n\t\t\t\t'label' => lng('emails.back_to_overview'),\n\t\t\t\t'icon' => 'fa-solid fa-reply'\n\t\t\t];\n\t\t}\n\t\tif (CurrentUser::canAddResource('emails')) {\n\t\t\t$actions_links[] = [\n\t\t\t\t'href' => $linker->getLink(['section' => 'email', 'page' => 'email_domain', 'action' => 'add', 'domainid' => $email_domainid]),\n\t\t\t\t'label' => lng('emails.emails_add')\n\t\t\t];\n\t\t}\n\t\t$actions_links[] = [\n\t\t\t'href' => \\Froxlor\\Froxlor::getDocsUrl() . 'user-guide/emails/',\n\t\t\t'target' => '_blank',\n\t\t\t'icon' => 'fa-solid fa-circle-info',\n\t\t\t'class' => 'btn-outline-secondary'\n\t\t];\n\n\t\tUI::view('user/table.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $email_list_data, 'email_list'),\n\t\t\t'actions_links' => $actions_links,\n\t\t\t'entity_info' => lng('emails.description')\n\t\t]);\n\t} elseif ($action == 'delete' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Emails::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['email']) && $result['email'] != '') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tEmails::getLocal($userinfo, [\n\t\t\t\t\t\t'id' => $id,\n\t\t\t\t\t\t'delete_userfiles' => Request::post('delete_userfiles', 0)\n\t\t\t\t\t])->delete();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tif ($result['popaccountid'] != '0') {\n\t\t\t\t\t$show_checkbox = true;\n\t\t\t\t} else {\n\t\t\t\t\t$show_checkbox = false;\n\t\t\t\t}\n\t\t\t\tHTML::askYesNoWithCheckbox('email_reallydelete', 'admin_customer_alsoremovemail', $filename, [\n\t\t\t\t\t'id' => $id,\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => $action\n\t\t\t\t], $idna_convert->decode($result['email_full']), $show_checkbox);\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'add') {\n\t\tif ($userinfo['emails_used'] < $userinfo['emails'] || $userinfo['emails'] == '-1') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\t$json_result = Emails::getLocal($userinfo, Request::postAll())->add();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\t$result = json_decode($json_result, true)['data'];\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => 'edit',\n\t\t\t\t\t'id' => $result['id']\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$result_stmt = Database::prepare(\"SELECT `id`, `domain`, `customerid` FROM `\" . TABLE_PANEL_DOMAINS . \"`\n\t\t\t\t\tWHERE `customerid`= :cid\n\t\t\t\t\tAND `isemaildomain`='1'\n\t\t\t\t\tORDER BY `domain_ace` ASC\");\n\t\t\t\tDatabase::pexecute($result_stmt, [\n\t\t\t\t\t\"cid\" => $userinfo['customerid']\n\t\t\t\t]);\n\t\t\t\t$domains = [];\n\t\t\t\t$selected_domain = \"\";\n\t\t\t\twhile ($row = $result_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\tif ($email_domainid == $row['id']) {\n\t\t\t\t\t\t$selected_domain = $row['domain'];\n\t\t\t\t\t}\n\t\t\t\t\t$domains[$row['domain']] = $idna_convert->decode($row['domain']);\n\t\t\t\t}\n\n\t\t\t\tif (count($domains) > 0) {\n\t\t\t\t\t$email_add_data = include_once dirname(__FILE__) . '/lib/formfields/customer/email/formfield.emails_add.php';\n\n\t\t\t\t\tif (Settings::Get('catchall.catchall_enabled') != '1') {\n\t\t\t\t\t\tunset($email_add_data['emails_add']['sections']['section_a']['fields']['iscatchall']);\n\t\t\t\t\t}\n\t\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'email']),\n\t\t\t\t\t\t'formdata' => $email_add_data['emails_add']\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tResponse::standardError('emails.noemaildomainaddedyet');\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tResponse::standardError('allresourcesused');\n\t\t}\n\t} elseif ($action == 'edit' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Emails::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['email']) && $result['email'] != '') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tEmails::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t}\n\t\t\t$result['email'] = $idna_convert->decode($result['email']);\n\t\t\t$result['email_full'] = $idna_convert->decode($result['email_full']);\n\t\t\t$result['destination'] = explode(' ', $result['destination']);\n\t\t\tuasort($result['destination'], 'strcasecmp');\n\t\t\t$forwarders = [];\n\t\t\t$forwarders_count = 0;\n\n\t\t\tforeach ($result['destination'] as $dest_id => $destination) {\n\t\t\t\t$destination = $idna_convert->decode($destination);\n\t\t\t\tif ($destination != $result['email_full'] && $destination != '') {\n\t\t\t\t\t$forwarders[] = [\n\t\t\t\t\t\t'item' => $destination,\n\t\t\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t\t\t'section' => 'email',\n\t\t\t\t\t\t\t'page' => 'forwarders',\n\t\t\t\t\t\t\t'action' => 'delete',\n\t\t\t\t\t\t\t'id' => $id,\n\t\t\t\t\t\t\t'forwarderid' => $dest_id\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t'label' => lng('panel.delete'),\n\t\t\t\t\t\t'classes' => 'btn btn-sm btn-danger'\n\t\t\t\t\t];\n\t\t\t\t\t$forwarders_count++;\n\t\t\t\t}\n\t\t\t\t$result['destination'][$dest_id] = $destination;\n\t\t\t}\n\n\t\t\t$destinations_count = count($result['destination']);\n\t\t\t$result = PhpHelper::htmlentitiesArray($result);\n\n\t\t\t$email_edit_data = include_once dirname(__FILE__) . '/lib/formfields/customer/email/formfield.emails_edit.php';\n\n\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'email']),\n\t\t\t\t'formdata' => $email_edit_data['emails_edit'],\n\t\t\t\t'editid' => $id\n\t\t\t]);\n\t\t}\n\t}\n} elseif ($page == 'accounts') {\n\t$email_domainid = Request::any('domainid', 0);\n\tif ($action == 'add' && $id != 0) {\n\t\tif ($userinfo['email_accounts'] == '-1' || ($userinfo['email_accounts_used'] < $userinfo['email_accounts'])) {\n\t\t\ttry {\n\t\t\t\t$json_result = Emails::getLocal($userinfo, [\n\t\t\t\t\t'id' => $id\n\t\t\t\t])->get();\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\t\t\t$result = json_decode($json_result, true)['data'];\n\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tEmailAccounts::getLocal($userinfo, Request::postAll())->add();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => 'email_domain',\n\t\t\t\t\t'domainid' => $email_domainid,\n\t\t\t\t\t'action' => 'edit',\n\t\t\t\t\t'id' => $id\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tif (Check::checkMailAccDeletionState($result['email_full'])) {\n\t\t\t\t\tResponse::standardError([\n\t\t\t\t\t\t'mailaccistobedeleted'\n\t\t\t\t\t], $result['email_full']);\n\t\t\t\t}\n\n\t\t\t\t$result['email_full'] = $idna_convert->decode($result['email_full']);\n\t\t\t\t$result = PhpHelper::htmlentitiesArray($result);\n\t\t\t\t$quota = Settings::Get('system.mail_quota');\n\n\t\t\t\t$account_add_data = include_once dirname(__FILE__) . '/lib/formfields/customer/email/formfield.emails_addaccount.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'email', 'id' => $id]),\n\t\t\t\t\t'formdata' => $account_add_data['emails_addaccount'],\n\t\t\t\t\t'actions_links' => [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'class' => 'btn-secondary',\n\t\t\t\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t\t\t\t'section' => 'email',\n\t\t\t\t\t\t\t\t'page' => 'email_domain',\n\t\t\t\t\t\t\t\t'domainid' => $email_domainid,\n\t\t\t\t\t\t\t\t'action' => 'edit',\n\t\t\t\t\t\t\t\t'id' => $id\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t'label' => lng('emails.emails_edit'),\n\t\t\t\t\t\t\t'icon' => 'fa-solid fa-pen'\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'class' => 'btn-secondary',\n\t\t\t\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t\t\t\t'section' => 'email',\n\t\t\t\t\t\t\t\t'page' => 'email_domain',\n\t\t\t\t\t\t\t\t'domainid' => $email_domainid\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t'label' => lng('menue.email.emails'),\n\t\t\t\t\t\t\t'icon' => 'fa-solid fa-envelope'\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t]);\n\t\t\t}\n\t\t} else {\n\t\t\tResponse::standardError([\n\t\t\t\t'allresourcesused',\n\t\t\t\t'allocatetoomuchquota'\n\t\t\t], $quota);\n\t\t}\n\t} elseif ($action == 'changepw' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Emails::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['popaccountid']) && $result['popaccountid'] != '') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tEmailAccounts::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => 'email_domain',\n\t\t\t\t\t'domainid' => $email_domainid,\n\t\t\t\t\t'action' => 'edit',\n\t\t\t\t\t'id' => $id\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$result['email_full'] = $idna_convert->decode($result['email_full']);\n\t\t\t\t$result = PhpHelper::htmlentitiesArray($result);\n\n\t\t\t\t$account_changepw_data = include_once dirname(__FILE__) . '/lib/formfields/customer/email/formfield.emails_accountchangepasswd.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'email', 'id' => $id]),\n\t\t\t\t\t'formdata' => $account_changepw_data['emails_accountchangepasswd'],\n\t\t\t\t\t'actions_links' => [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'class' => 'btn-secondary',\n\t\t\t\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t\t\t\t'section' => 'email',\n\t\t\t\t\t\t\t\t'page' => 'email_domain',\n\t\t\t\t\t\t\t\t'domainid' => $email_domainid,\n\t\t\t\t\t\t\t\t'action' => 'edit',\n\t\t\t\t\t\t\t\t'id' => $id\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t'label' => lng('emails.emails_edit'),\n\t\t\t\t\t\t\t'icon' => 'fa-solid fa-pen'\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'class' => 'btn-secondary',\n\t\t\t\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t\t\t\t'section' => 'email',\n\t\t\t\t\t\t\t\t'page' => 'email_domain',\n\t\t\t\t\t\t\t\t'domainid' => $email_domainid\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t'label' => lng('menue.email.emails'),\n\t\t\t\t\t\t\t'icon' => 'fa-solid fa-envelope'\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'changequota' && Settings::Get('system.mail_quota_enabled') == '1' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Emails::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['popaccountid']) && $result['popaccountid'] != '') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tEmailAccounts::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => 'email_domain',\n\t\t\t\t\t'domainid' => $email_domainid,\n\t\t\t\t\t'action' => 'edit',\n\t\t\t\t\t'id' => $id\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$result['email_full'] = $idna_convert->decode($result['email_full']);\n\t\t\t\t$result = PhpHelper::htmlentitiesArray($result);\n\n\t\t\t\t$quota_edit_data = include_once dirname(__FILE__) . '/lib/formfields/customer/email/formfield.emails_accountchangequota.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'email', 'id' => $id]),\n\t\t\t\t\t'formdata' => $quota_edit_data['emails_accountchangequota'],\n\t\t\t\t\t'actions_links' => [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'class' => 'btn-secondary',\n\t\t\t\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t\t\t\t'section' => 'email',\n\t\t\t\t\t\t\t\t'page' => 'email_domain',\n\t\t\t\t\t\t\t\t'domainid' => $email_domainid,\n\t\t\t\t\t\t\t\t'action' => 'edit',\n\t\t\t\t\t\t\t\t'id' => $id\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t'label' => lng('emails.emails_edit'),\n\t\t\t\t\t\t\t'icon' => 'fa-solid fa-pen'\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'class' => 'btn-secondary',\n\t\t\t\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t\t\t\t'section' => 'email',\n\t\t\t\t\t\t\t\t'page' => 'email_domain',\n\t\t\t\t\t\t\t\t'domainid' => $email_domainid\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t'label' => lng('menue.email.emails'),\n\t\t\t\t\t\t\t'icon' => 'fa-solid fa-envelope'\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'delete' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Emails::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['popaccountid']) && $result['popaccountid'] != '') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tEmailAccounts::getLocal($userinfo, Request::postAll())->delete();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => 'email_domain',\n\t\t\t\t\t'domainid' => $email_domainid,\n\t\t\t\t\t'action' => 'edit',\n\t\t\t\t\t'id' => $id\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tHTML::askYesNoWithCheckbox('email_reallydelete_account', 'admin_customer_alsoremovemail', $filename, [\n\t\t\t\t\t'id' => $id,\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'domainid' => $email_domainid,\n\t\t\t\t\t'action' => $action\n\t\t\t\t], $idna_convert->decode($result['email_full']));\n\t\t\t}\n\t\t}\n\t}\n} elseif ($page == 'forwarders') {\n\t$email_domainid = Request::any('domainid', 0);\n\tif ($action == 'add' && $id != 0) {\n\t\tif ($userinfo['email_forwarders_used'] < $userinfo['email_forwarders'] || $userinfo['email_forwarders'] == '-1') {\n\t\t\ttry {\n\t\t\t\t$json_result = Emails::getLocal($userinfo, [\n\t\t\t\t\t'id' => $id\n\t\t\t\t])->get();\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\t\t\t$result = json_decode($json_result, true)['data'];\n\n\t\t\tif (isset($result['email']) && $result['email'] != '') {\n\t\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tEmailForwarders::getLocal($userinfo, Request::postAll())->add();\n\t\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t\t}\n\t\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t\t'page' => 'email_domain',\n\t\t\t\t\t\t'domainid' => $email_domainid,\n\t\t\t\t\t\t'action' => 'edit',\n\t\t\t\t\t\t'id' => $id\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\t$result['email_full'] = $idna_convert->decode($result['email_full']);\n\t\t\t\t\t$result = PhpHelper::htmlentitiesArray($result);\n\n\t\t\t\t\t$forwarder_add_data = include_once dirname(__FILE__) . '/lib/formfields/customer/email/formfield.emails_addforwarder.php';\n\n\t\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'email', 'id' => $id]),\n\t\t\t\t\t\t'formdata' => $forwarder_add_data['emails_addforwarder'],\n\t\t\t\t\t\t'actions_links' => [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'class' => 'btn-secondary',\n\t\t\t\t\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t\t\t\t\t'section' => 'email',\n\t\t\t\t\t\t\t\t\t'page' => 'email_domain',\n\t\t\t\t\t\t\t\t\t'domainid' => $email_domainid,\n\t\t\t\t\t\t\t\t\t'action' => 'edit',\n\t\t\t\t\t\t\t\t\t'id' => $id\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t'label' => lng('emails.emails_edit'),\n\t\t\t\t\t\t\t\t'icon' => 'fa-solid fa-pen'\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'class' => 'btn-secondary',\n\t\t\t\t\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t\t\t\t\t'section' => 'email',\n\t\t\t\t\t\t\t\t\t'page' => 'email_domain',\n\t\t\t\t\t\t\t\t\t'domainid' => $email_domainid\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t'label' => lng('menue.email.emails'),\n\t\t\t\t\t\t\t\t'icon' => 'fa-solid fa-envelope'\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tResponse::standardError('allresourcesused');\n\t\t}\n\t} elseif ($action == 'delete' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Emails::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['destination']) && $result['destination'] != '') {\n\t\t\t$forwarderid = Request::any('forwarderid', 0);\n\t\t\t$result['destination'] = explode(' ', $result['destination']);\n\n\t\t\tif (isset($result['destination'][$forwarderid]) && $result['email'] != $result['destination'][$forwarderid]) {\n\t\t\t\t$forwarder = $result['destination'][$forwarderid];\n\n\t\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tEmailForwarders::getLocal($userinfo, Request::postAll())->delete();\n\t\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t\t}\n\t\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t\t'page' => 'email_domain',\n\t\t\t\t\t\t'domainid' => $email_domainid,\n\t\t\t\t\t\t'action' => 'edit',\n\t\t\t\t\t\t'id' => $id\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tHTML::askYesNo('email_reallydelete_forwarder', $filename, [\n\t\t\t\t\t\t'id' => $id,\n\t\t\t\t\t\t'forwarderid' => $forwarderid,\n\t\t\t\t\t\t'page' => $page,\n\t\t\t\t\t\t'domainid' => $email_domainid,\n\t\t\t\t\t\t'action' => $action\n\t\t\t\t\t], $idna_convert->decode($result['email_full']) . ' -> ' . $idna_convert->decode($forwarder));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "customer_extras.php",
          "type": "blob",
          "size": 12.4111328125,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'customer';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\DataDump as DataDump;\nuse Froxlor\\Api\\Commands\\DirOptions as DirOptions;\nuse Froxlor\\Api\\Commands\\DirProtections as DirProtections;\nuse Froxlor\\Customer\\Customer;\nuse Froxlor\\FileDir;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\PhpHelper;\nuse Froxlor\\Settings;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n// redirect if this customer page is hidden via settings\nif (Settings::IsInList('panel.customer_hide_options', 'extras')) {\n\tResponse::redirectTo('customer_index.php');\n}\n\n$id = (int)Request::any('id');\n\nif ($page == 'overview' || $page == 'htpasswds') {\n\t// redirect if this customer sub-page is hidden via settings\n\tif (Settings::IsInList('panel.customer_hide_options', 'extras.directoryprotection')) {\n\t\tResponse::redirectTo('customer_index.php');\n\t}\n\n\tif ($action == '') {\n\t\t$log->logAction(FroxlorLogger::USR_ACTION, LOG_NOTICE, \"viewed customer_extras::htpasswds\");\n\t\t$fields = [\n\t\t\t'username' => lng('login.username'),\n\t\t\t'path' => lng('panel.path')\n\t\t];\n\t\ttry {\n\t\t\t$htpasswd_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/customer/tablelisting.htpasswd.php';\n\t\t\t$collection = (new Collection(DirProtections::class, $userinfo))\n\t\t\t\t->withPagination($htpasswd_list_data['htpasswd_list']['columns'], $htpasswd_list_data['htpasswd_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\t$actions_links = [];\n\t\t$actions_links[] = [\n\t\t\t'href' => $linker->getLink(['section' => 'extras', 'page' => 'htpasswds', 'action' => 'add']),\n\t\t\t'label' => lng('extras.directoryprotection_add')\n\t\t];\n\n\t\t$actions_links[] = [\n\t\t\t'href' => \\Froxlor\\Froxlor::getDocsUrl() . 'user-guide/extras/',\n\t\t\t'target' => '_blank',\n\t\t\t'icon' => 'fa-solid fa-circle-info',\n\t\t\t'class' => 'btn-outline-secondary'\n\t\t];\n\n\t\tUI::view('user/table.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $htpasswd_list_data, 'htpasswd_list'),\n\t\t\t'actions_links' => $actions_links,\n\t\t\t'entity_info' => lng('extras.description')\n\t\t]);\n\t} elseif ($action == 'delete' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = DirProtections::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['username']) && $result['username'] != '') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tDirProtections::getLocal($userinfo, Request::postAll())->delete();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tif (strpos($result['path'], $userinfo['documentroot']) === 0) {\n\t\t\t\t\t$result['path'] = str_replace($userinfo['documentroot'], \"/\", $result['path']);\n\t\t\t\t}\n\n\t\t\t\tHTML::askYesNo('extras_reallydelete', $filename, [\n\t\t\t\t\t'id' => $id,\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => $action\n\t\t\t\t], $result['username'] . ' (' . $result['path'] . ')');\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'add') {\n\t\tif (Request::post('send') == 'send') {\n\t\t\ttry {\n\t\t\t\tDirProtections::getLocal($userinfo, Request::postAll())->add();\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t} else {\n\t\t\t$pathSelect = FileDir::makePathfield($userinfo['documentroot'], $userinfo['guid'], $userinfo['guid']);\n\n\t\t\t$htpasswd_add_data = include_once dirname(__FILE__) . '/lib/formfields/customer/extras/formfield.htpasswd_add.php';\n\n\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'extras']),\n\t\t\t\t'formdata' => $htpasswd_add_data['htpasswd_add']\n\t\t\t]);\n\t\t}\n\t} elseif ($action == 'edit' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = DirProtections::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['username']) && $result['username'] != '') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tDirProtections::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tif (strpos($result['path'], $userinfo['documentroot']) === 0) {\n\t\t\t\t\t$result['path'] = str_replace($userinfo['documentroot'], \"/\", $result['path']);\n\t\t\t\t}\n\t\t\t\t$result = PhpHelper::htmlentitiesArray($result);\n\n\t\t\t\t$htpasswd_edit_data = include_once dirname(__FILE__) . '/lib/formfields/customer/extras/formfield.htpasswd_edit.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'extras', 'id' => $id]),\n\t\t\t\t\t'formdata' => $htpasswd_edit_data['htpasswd_edit'],\n\t\t\t\t\t'editid' => $id\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t}\n} elseif ($page == 'htaccess') {\n\t// redirect if this customer sub-page is hidden via settings\n\tif (Settings::IsInList('panel.customer_hide_options', 'extras.pathoptions')) {\n\t\tResponse::redirectTo('customer_index.php');\n\t}\n\n\tif ($action == '') {\n\t\t$log->logAction(FroxlorLogger::USR_ACTION, LOG_NOTICE, \"viewed customer_extras::htaccess\");\n\n\t\t$cperlenabled = Customer::customerHasPerlEnabled($userinfo['customerid']);\n\n\t\ttry {\n\t\t\t$htaccess_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/customer/tablelisting.htaccess.php';\n\t\t\t$collection = (new Collection(DirOptions::class, $userinfo))\n\t\t\t\t->withPagination($htaccess_list_data['htaccess_list']['columns'], $htaccess_list_data['htaccess_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\t$actions_links = [];\n\t\t$actions_links[] = [\n\t\t\t'href' => $linker->getLink(['section' => 'extras', 'page' => 'htaccess', 'action' => 'add']),\n\t\t\t'label' => lng('extras.pathoptions_add')\n\t\t];\n\n\t\t$actions_links[] = [\n\t\t\t'href' => \\Froxlor\\Froxlor::getDocsUrl() . 'user-guide/extras/',\n\t\t\t'target' => '_blank',\n\t\t\t'icon' => 'fa-solid fa-circle-info',\n\t\t\t'class' => 'btn-outline-secondary'\n\t\t];\n\n\t\tUI::view('user/table.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $htaccess_list_data, 'htaccess_list'),\n\t\t\t'actions_links' => $actions_links,\n\t\t\t'entity_info' => lng('extras.description')\n\t\t]);\n\t} elseif ($action == 'delete' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = DirOptions::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['customerid']) && $result['customerid'] != '' && $result['customerid'] == $userinfo['customerid']) {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tDirOptions::getLocal($userinfo, Request::postAll())->delete();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tHTML::askYesNo('extras_reallydelete_pathoptions', $filename, [\n\t\t\t\t\t'id' => $id,\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => $action\n\t\t\t\t], str_replace($userinfo['documentroot'], '/', $result['path']));\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'add') {\n\t\tif (Request::post('send') == 'send') {\n\t\t\ttry {\n\t\t\t\tDirOptions::getLocal($userinfo, Request::postAll())->add();\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => $page\n\t\t\t]);\n\t\t} else {\n\t\t\t$pathSelect = FileDir::makePathfield($userinfo['documentroot'], $userinfo['guid'], $userinfo['guid']);\n\t\t\t$cperlenabled = Customer::customerHasPerlEnabled($userinfo['customerid']);\n\n\t\t\t$htaccess_add_data = include_once dirname(__FILE__) . '/lib/formfields/customer/extras/formfield.htaccess_add.php';\n\n\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'extras']),\n\t\t\t\t'formdata' => $htaccess_add_data['htaccess_add']\n\t\t\t]);\n\t\t}\n\t} elseif (($action == 'edit') && ($id != 0)) {\n\t\ttry {\n\t\t\t$json_result = DirOptions::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif ((isset($result['customerid'])) && ($result['customerid'] != '') && ($result['customerid'] == $userinfo['customerid'])) {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tDirOptions::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tif (strpos($result['path'], $userinfo['documentroot']) === 0) {\n\t\t\t\t\t$result['path'] = str_replace($userinfo['documentroot'], \"/\", $result['path']);\n\t\t\t\t}\n\t\t\t\t$cperlenabled = Customer::customerHasPerlEnabled($userinfo['customerid']);\n\n\t\t\t\t$result = PhpHelper::htmlentitiesArray($result);\n\n\t\t\t\t$htaccess_edit_data = include_once dirname(__FILE__) . '/lib/formfields/customer/extras/formfield.htaccess_edit.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'extras', 'id' => $id]),\n\t\t\t\t\t'formdata' => $htaccess_edit_data['htaccess_edit'],\n\t\t\t\t\t'editid' => $id\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t}\n} elseif ($page == 'export') {\n\t// redirect if this customer sub-page is hidden via settings\n\tif (Settings::IsInList('panel.customer_hide_options', 'extras.export')) {\n\t\tResponse::redirectTo('customer_index.php');\n\t}\n\n\tif (Settings::Get('system.exportenabled') == 1) {\n\t\tif ($action == 'abort') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\t$log->logAction(FroxlorLogger::USR_ACTION, LOG_NOTICE, \"customer_extras::export - aborted scheduled data export job\");\n\t\t\t\ttry {\n\t\t\t\t\tDataDump::getLocal($userinfo, Request::postAll())->delete();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => ''\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tHTML::askYesNo('extras_reallydelete_export', $filename, [\n\t\t\t\t\t'job_entry' => $id,\n\t\t\t\t\t'section' => 'extras',\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => $action\n\t\t\t\t]);\n\t\t\t}\n\t\t} elseif ($action == '') {\n\t\t\t$log->logAction(FroxlorLogger::USR_ACTION, LOG_INFO, \"viewed customer_extras::export\");\n\n\t\t\t// check whether there is a backup-job for this customer\n\t\t\ttry {\n\t\t\t\t$export_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/customer/tablelisting.export.php';\n\t\t\t\t$collection = (new Collection(DataDump::class, $userinfo));\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tDataDump::getLocal($userinfo, Request::postAll())->add();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::standardSuccess('exportscheduled');\n\t\t\t} else {\n\t\t\t\t$pathSelect = FileDir::makePathfield($userinfo['documentroot'], $userinfo['guid'], $userinfo['guid']);\n\t\t\t\t$export_data = include_once dirname(__FILE__) . '/lib/formfields/customer/extras/formfield.export.php';\n\n\t\t\t\t$actions_links = [\n\t\t\t\t\t[\n\t\t\t\t\t\t'href' => \\Froxlor\\Froxlor::getDocsUrl() . 'user-guide/extras/',\n\t\t\t\t\t\t'target' => '_blank',\n\t\t\t\t\t\t'icon' => 'fa-solid fa-circle-info',\n\t\t\t\t\t\t'class' => 'btn-outline-secondary'\n\t\t\t\t\t]\n\t\t\t\t];\n\n\t\t\t\tUI::view('user/form-datatable.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'extras']),\n\t\t\t\t\t'formdata' => $export_data['export'],\n\t\t\t\t\t'actions_links' => $actions_links,\n\t\t\t\t\t'tabledata' => Listing::format($collection, $export_list_data, 'export_list'),\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tResponse::standardError('exportfunctionnotenabled');\n\t}\n}\n"
        },
        {
          "name": "customer_ftp.php",
          "type": "blob",
          "size": 6.828125,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'customer';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\Ftps as Ftps;\nuse Froxlor\\CurrentUser;\nuse Froxlor\\Database\\Database;\nuse Froxlor\\FileDir;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\Settings;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n// redirect if this customer page is hidden via settings\nif (Settings::IsInList('panel.customer_hide_options', 'ftp')) {\n\tResponse::redirectTo('customer_index.php');\n}\n\n$id = (int)Request::any('id', 0);\n\nif ($page == 'overview' || $page == 'accounts') {\n\tif ($action == '') {\n\t\t$log->logAction(FroxlorLogger::USR_ACTION, LOG_NOTICE, \"viewed customer_ftp::accounts\");\n\t\ttry {\n\t\t\t$ftp_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/customer/tablelisting.ftps.php';\n\t\t\t$collection = (new Collection(Ftps::class, $userinfo))\n\t\t\t\t->withPagination($ftp_list_data['ftp_list']['columns'], $ftp_list_data['ftp_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\t$actions_links = [];\n\t\tif (CurrentUser::canAddResource('ftps')) {\n\t\t\t$actions_links[] = [\n\t\t\t\t'href' => $linker->getLink(['section' => 'ftp', 'page' => 'accounts', 'action' => 'add']),\n\t\t\t\t'label' => lng('ftp.account_add')\n\t\t\t];\n\t\t}\n\t\t$actions_links[] = [\n\t\t\t'href' => \\Froxlor\\Froxlor::getDocsUrl() . 'user-guide/ftp-accounts/',\n\t\t\t'target' => '_blank',\n\t\t\t'icon' => 'fa-solid fa-circle-info',\n\t\t\t'class' => 'btn-outline-secondary'\n\t\t];\n\n\t\tUI::view('user/table.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $ftp_list_data, 'ftp_list'),\n\t\t\t'actions_links' => $actions_links,\n\t\t\t'entity_info' => lng('ftp.description')\n\t\t]);\n\t} elseif ($action == 'delete' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Ftps::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['username']) && $result['username'] != $userinfo['loginname']) {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tFtps::getLocal($userinfo, Request::postAll())->delete();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tHTML::askYesNoWithCheckbox('ftp_reallydelete', 'admin_customer_alsoremoveftphomedir', $filename, [\n\t\t\t\t\t'id' => $id,\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => $action\n\t\t\t\t], $result['username']);\n\t\t\t}\n\t\t} else {\n\t\t\tResponse::standardError('ftp_cantdeletemainaccount');\n\t\t}\n\t} elseif ($action == 'add') {\n\t\tif ($userinfo['ftps_used'] < $userinfo['ftps'] || $userinfo['ftps'] == '-1') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tFtps::getLocal($userinfo, Request::postAll())->add();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$pathSelect = FileDir::makePathfield($userinfo['documentroot'], $userinfo['guid'], $userinfo['guid'], '/');\n\n\t\t\t\tif (Settings::Get('customer.ftpatdomain') == '1') {\n\t\t\t\t\t$domainlist = [];\n\t\t\t\t\t$result_domains_stmt = Database::prepare(\"SELECT `domain` FROM `\" . TABLE_PANEL_DOMAINS . \"`\n\t\t\t\t\t\tWHERE `customerid`= :customerid ORDER BY `domain` ASC\");\n\t\t\t\t\tDatabase::pexecute($result_domains_stmt, [\n\t\t\t\t\t\t\"customerid\" => $userinfo['customerid']\n\t\t\t\t\t]);\n\n\t\t\t\t\twhile ($row_domain = $result_domains_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t\t\t\t\t$domainlist[$row_domain['domain']] = $idna_convert->decode($row_domain['domain']);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (Settings::Get('system.allow_customer_shell') == '1') {\n\t\t\t\t\t$shells['/bin/false'] = \"/bin/false\";\n\t\t\t\t\t$shells_avail = Settings::Get('system.available_shells');\n\t\t\t\t\tif (!empty($shells_avail)) {\n\t\t\t\t\t\t$shells_avail_arr = explode(\",\", $shells_avail);\n\t\t\t\t\t\t$shells_avail_arr = array_map(\"trim\", $shells_avail_arr);\n\t\t\t\t\t\tforeach ($shells_avail_arr as $shell) {\n\t\t\t\t\t\t\t$shells[$shell] = $shell;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$ftp_add_data = include_once dirname(__FILE__) . '/lib/formfields/customer/ftp/formfield.ftp_add.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'ftp']),\n\t\t\t\t\t'formdata' => $ftp_add_data['ftp_add']\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'edit' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Ftps::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['username']) && $result['username'] != '') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tFtps::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tif (strpos($result['homedir'], $userinfo['documentroot']) === 0) {\n\t\t\t\t\t$homedir = str_replace($userinfo['documentroot'], \"/\", $result['homedir']);\n\t\t\t\t} else {\n\t\t\t\t\t$homedir = $result['homedir'];\n\t\t\t\t}\n\t\t\t\t$homedir = FileDir::makeCorrectDir($homedir);\n\n\t\t\t\t$pathSelect = FileDir::makePathfield($userinfo['documentroot'], $userinfo['guid'], $userinfo['guid'], $homedir);\n\n\t\t\t\tif (Settings::Get('system.allow_customer_shell') == '1') {\n\t\t\t\t\t$shells['/bin/false'] = \"/bin/false\";\n\t\t\t\t\t$shells_avail = Settings::Get('system.available_shells');\n\t\t\t\t\tif (!empty($shells_avail)) {\n\t\t\t\t\t\t$shells_avail_arr = explode(\",\", $shells_avail);\n\t\t\t\t\t\t$shells_avail_arr = array_map(\"trim\", $shells_avail_arr);\n\t\t\t\t\t\tforeach ($shells_avail_arr as $shell) {\n\t\t\t\t\t\t\t$shells[$shell] = $shell;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$ftp_edit_data = include_once dirname(__FILE__) . '/lib/formfields/customer/ftp/formfield.ftp_edit.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'ftp', 'id' => $id]),\n\t\t\t\t\t'formdata' => $ftp_edit_data['ftp_edit'],\n\t\t\t\t\t'editid' => $id\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "customer_index.php",
          "type": "blob",
          "size": 10.6259765625,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'customer';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\Customers as Customers;\nuse Froxlor\\Cron\\TaskId;\nuse Froxlor\\CurrentUser;\nuse Froxlor\\Database\\Database;\nuse Froxlor\\Database\\DbManager;\nuse Froxlor\\Froxlor;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\Language;\nuse Froxlor\\Settings;\nuse Froxlor\\System\\Cronjob;\nuse Froxlor\\System\\Crypt;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\nuse Froxlor\\Validate\\Validate;\n\nif ($action == 'logout') {\n\t$log->logAction(FroxlorLogger::USR_ACTION, LOG_INFO, 'logged out');\n\n\tunset($_SESSION['userinfo']);\n\tCurrentUser::setData();\n\tsession_destroy();\n\n\tResponse::redirectTo('index.php');\n} elseif ($action == 'suback') {\n\tif (is_array(CurrentUser::getField('switched_user'))) {\n\t\t$result = CurrentUser::getData();\n\t\t$result = $result['switched_user'];\n\t\tsession_regenerate_id(true);\n\t\tCurrentUser::setData($result);\n\t\t$target = Request::get('target', 'index');\n\t\t$redirect = \"admin_\" . $target . \".php\";\n\t\tif (!file_exists(Froxlor::getInstallDir() . \"/\" . $redirect)) {\n\t\t\t$redirect = \"admin_index.php\";\n\t\t}\n\t\tResponse::redirectTo($redirect, null, true);\n\t} else {\n\t\tResponse::dynamicError(\"Cannot change back - You've never switched to another user :-)\");\n\t}\n}\n\nif ($page == 'overview') {\n\t$log->logAction(FroxlorLogger::USR_ACTION, LOG_INFO, \"viewed customer_index\");\n\n\t$domain_stmt = Database::prepare(\"SELECT `domain` FROM `\" . TABLE_PANEL_DOMAINS . \"`\n\t\tWHERE `customerid` = :customerid\n\t\tAND `parentdomainid` = '0'\n\t\tAND `id` <> :standardsubdomain\n\t\");\n\tDatabase::pexecute($domain_stmt, [\n\t\t\"customerid\" => $userinfo['customerid'],\n\t\t\"standardsubdomain\" => $userinfo['standardsubdomain']\n\t]);\n\n\t$domainArray = [];\n\twhile ($row = $domain_stmt->fetch(PDO::FETCH_ASSOC)) {\n\t\t$domainArray[] = $idna_convert->decode($row['domain']);\n\t}\n\tnatsort($domainArray);\n\n\t// standard-subdomain\n\t$stdsubdomain = '';\n\tif ($userinfo['standardsubdomain'] != '0') {\n\t\t$std_domain_stmt = Database::prepare(\"\n\t\t\tSELECT `domain` FROM `\" . TABLE_PANEL_DOMAINS . \"`\n\t\t\tWHERE `customerid` = :customerid\n\t\t\tAND `id` = :standardsubdomain\n\t\t\");\n\t\t$std_domain = Database::pexecute_first($std_domain_stmt, [\n\t\t\t\"customerid\" => $userinfo['customerid'],\n\t\t\t\"standardsubdomain\" => $userinfo['standardsubdomain']\n\t\t]);\n\t\t$stdsubdomain = $std_domain['domain'];\n\t}\n\n\t$userinfo['email'] = $idna_convert->decode($userinfo['email']);\n\t$yesterday = time() - (60 * 60 * 24);\n\t$month = date('M Y', $yesterday);\n\n\t// get disk-space usages for web, mysql and mail\n\t$usages_stmt = Database::prepare(\"SELECT * FROM `\" . TABLE_PANEL_DISKSPACE . \"` WHERE `customerid` = :cid ORDER BY `stamp` DESC LIMIT 1\");\n\t$usages = Database::pexecute_first($usages_stmt, [\n\t\t'cid' => $userinfo['customerid']\n\t]);\n\n\t// get everything in bytes for the percentage calculation on the dashboard\n\t$userinfo['diskspace_bytes'] = ($userinfo['diskspace'] > -1) ? $userinfo['diskspace'] * 1024 : -1;\n\t$userinfo['traffic_bytes'] = ($userinfo['traffic'] > -1) ? $userinfo['traffic'] * 1024 : -1;\n\t$userinfo['traffic_bytes_used'] = $userinfo['traffic_used'] * 1024;\n\n\tif (Settings::Get('system.mail_quota_enabled')) {\n\t\t$userinfo['email_quota_bytes'] = ($userinfo['email_quota'] > -1) ? $userinfo['email_quota'] * 1024 * 1024 : -1;\n\t\t$userinfo['email_quota_bytes_used'] = $userinfo['email_quota_used'] * 1024 * 1024;\n\t}\n\n\tif ($usages) {\n\t\t$userinfo['diskspace_bytes_used'] = $usages['webspace'] * 1024;\n\t\t$userinfo['mailspace_used'] = $usages['mail'] * 1024;\n\t\t$userinfo['dbspace_used'] = $usages['mysql'] * 1024;\n\t\t$userinfo['total_bytes_used'] = ($usages['webspace'] + $usages['mail'] + $usages['mysql']) * 1024;\n\t} else {\n\t\t$userinfo['diskspace_bytes_used'] = 0;\n\t\t$userinfo['total_bytes_used'] = 0;\n\t\t$userinfo['mailspace_used'] = 0;\n\t\t$userinfo['dbspace_used'] = 0;\n\t}\n\n\tUI::twig()->addGlobal('userinfo', $userinfo);\n\tUI::view('user/index.html.twig', [\n\t\t'domains' => $domainArray,\n\t\t'stdsubdomain' => $stdsubdomain\n\t]);\n} elseif ($page == 'profile') {\n\t$languages = Language::getLanguages();\n\n\tif (!empty($_POST)) {\n\t\tif (Request::post('send') == 'changepassword') {\n\t\t\t$old_password = Validate::validate(Request::post('old_password'), 'old password');\n\n\t\t\tif (!Crypt::validatePasswordLogin($userinfo, $old_password, TABLE_PANEL_CUSTOMERS, 'customerid')) {\n\t\t\t\tResponse::standardError('oldpasswordnotcorrect');\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t$new_password = Crypt::validatePassword(Request::post('new_password'), 'new password');\n\t\t\t\t$new_password_confirm = Crypt::validatePassword(Request::post('new_password_confirm'), 'new password confirm');\n\t\t\t} catch (Exception $e) {\n\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t}\n\n\t\t\tif ($old_password == '') {\n\t\t\t\tResponse::standardError([\n\t\t\t\t\t'stringisempty',\n\t\t\t\t\t'changepassword.old_password'\n\t\t\t\t]);\n\t\t\t} elseif ($new_password == '') {\n\t\t\t\tResponse::standardError([\n\t\t\t\t\t'stringisempty',\n\t\t\t\t\t'changepassword.new_password'\n\t\t\t\t]);\n\t\t\t} elseif ($new_password_confirm == '') {\n\t\t\t\tResponse::standardError([\n\t\t\t\t\t'stringisempty',\n\t\t\t\t\t'changepassword.new_password_confirm'\n\t\t\t\t]);\n\t\t\t} elseif ($new_password != $new_password_confirm) {\n\t\t\t\tResponse::standardError('newpasswordconfirmerror');\n\t\t\t} else {\n\t\t\t\t// Update user password\n\t\t\t\ttry {\n\t\t\t\t\tCustomers::getLocal($userinfo, [\n\t\t\t\t\t\t'id' => $userinfo['customerid'],\n\t\t\t\t\t\t'new_customer_password' => $new_password\n\t\t\t\t\t])->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\t$log->logAction(FroxlorLogger::USR_ACTION, LOG_NOTICE, 'changed password');\n\n\t\t\t\t// Update ftp password\n\t\t\t\tif (Request::post('change_main_ftp') == 'true') {\n\t\t\t\t\t$cryptPassword = Crypt::makeCryptPassword($new_password);\n\t\t\t\t\t$stmt = Database::prepare(\"UPDATE `\" . TABLE_FTP_USERS . \"`\n\t\t\t\t\tSET `password` = :password\n\t\t\t\t\tWHERE `customerid` = :customerid\n\t\t\t\t\tAND `username` = :username\");\n\t\t\t\t\t$params = [\n\t\t\t\t\t\t\"password\" => $cryptPassword,\n\t\t\t\t\t\t\"customerid\" => $userinfo['customerid'],\n\t\t\t\t\t\t\"username\" => $userinfo['loginname']\n\t\t\t\t\t];\n\t\t\t\t\tDatabase::pexecute($stmt, $params);\n\t\t\t\t\t$log->logAction(FroxlorLogger::USR_ACTION, LOG_NOTICE, 'changed main ftp password');\n\t\t\t\t}\n\n\t\t\t\t// Update statistics password\n\t\t\t\tif (Request::post('change_stats') == 'true') {\n\t\t\t\t\t$new_stats_password = Crypt::makeCryptPassword($new_password, true);\n\n\t\t\t\t\t$stmt = Database::prepare(\"UPDATE `\" . TABLE_PANEL_HTPASSWDS . \"`\n\t\t\t\t\tSET `password` = :password\n\t\t\t\t\tWHERE `customerid` = :customerid\n\t\t\t\t\tAND `username` = :username\");\n\t\t\t\t\t$params = [\n\t\t\t\t\t\t\"password\" => $new_stats_password,\n\t\t\t\t\t\t\"customerid\" => $userinfo['customerid'],\n\t\t\t\t\t\t\"username\" => $userinfo['loginname']\n\t\t\t\t\t];\n\t\t\t\t\tDatabase::pexecute($stmt, $params);\n\t\t\t\t\tCronjob::inserttask(TaskId::REBUILD_VHOST);\n\t\t\t\t}\n\n\t\t\t\t// Update global myqsl user password\n\t\t\t\tif ($userinfo['mysqls'] != 0 && Request::post('change_global_mysql') == 'true') {\n\t\t\t\t\t$allowed_mysqlservers = json_decode($userinfo['allowed_mysqlserver'] ?? '[]', true);\n\t\t\t\t\tforeach ($allowed_mysqlservers as $dbserver) {\n\t\t\t\t\t\t// require privileged access for target db-server\n\t\t\t\t\t\tDatabase::needRoot(true, $dbserver, false);\n\t\t\t\t\t\t// get DbManager\n\t\t\t\t\t\t$dbm = new DbManager($log);\n\t\t\t\t\t\t// give permission to the user on every access-host we have\n\t\t\t\t\t\tforeach (array_map('trim', explode(',', Settings::Get('system.mysql_access_host'))) as $mysql_access_host) {\n\t\t\t\t\t\t\tif ($dbm->getManager()->userExistsOnHost($userinfo['loginname'], $mysql_access_host)) {\n\t\t\t\t\t\t\t\t$dbm->getManager()->grantPrivilegesTo($userinfo['loginname'], $new_password, $mysql_access_host, false, true);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// create global mysql user if not exists\n\t\t\t\t\t\t\t\t$dbm->getManager()->grantPrivilegesTo($userinfo['loginname'], $new_password, $mysql_access_host, false, false, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$dbm->getManager()->flushPrivileges();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tResponse::redirectTo($filename);\n\t\t\t}\n\t\t} elseif (Request::post('send') == 'changetheme') {\n\t\t\tif (Settings::Get('panel.allow_theme_change_customer') == 1) {\n\t\t\t\t$theme = Validate::validate(Request::post('theme'), 'theme');\n\t\t\t\ttry {\n\t\t\t\t\tCustomers::getLocal($userinfo, [\n\t\t\t\t\t\t'id' => $userinfo['customerid'],\n\t\t\t\t\t\t'theme' => $theme\n\t\t\t\t\t])->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\n\t\t\t\t$log->logAction(FroxlorLogger::USR_ACTION, LOG_NOTICE, \"changed default theme to '\" . $theme . \"'\");\n\t\t\t}\n\t\t\tResponse::redirectTo($filename);\n\t\t} elseif (Request::post('send') == 'changelanguage') {\n\t\t\t$def_language = Validate::validate(Request::post('def_language'), 'default language');\n\t\t\tif (isset($languages[$def_language])) {\n\t\t\t\ttry {\n\t\t\t\t\tCustomers::getLocal($userinfo, [\n\t\t\t\t\t\t'id' => $userinfo['customerid'],\n\t\t\t\t\t\t'def_language' => $def_language\n\t\t\t\t\t])->update();\n\t\t\t\t\tCurrentUser::setField('language', $def_language);\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t}\n\t\t\t$log->logAction(FroxlorLogger::USR_ACTION, LOG_NOTICE, \"changed default language to '\" . $def_language . \"'\");\n\t\t\tResponse::redirectTo($filename);\n\t\t}\n\t} else {\n\t\t// change theme\n\t\t$default_theme = Settings::Get('panel.default_theme');\n\t\tif ($userinfo['theme'] != '') {\n\t\t\t$default_theme = $userinfo['theme'];\n\t\t}\n\t\t$themes_avail = UI::getThemes();\n\n\t\t// change language\n\t\t$default_lang = Settings::Get('panel.standardlanguage');\n\t\tif ($userinfo['def_language'] != '') {\n\t\t\t$default_lang = $userinfo['def_language'];\n\t\t}\n\n\t\tUI::view('user/profile.html.twig', [\n\t\t\t'themes' => $themes_avail,\n\t\t\t'default_theme' => $default_theme,\n\t\t\t'languages' => $languages,\n\t\t\t'default_lang' => $default_lang,\n\t\t]);\n\t}\n} elseif ($page == 'send_error_report' && Settings::Get('system.allow_error_report_customer') == '1') {\n\trequire_once __DIR__ . '/error_report.php';\n} elseif ($page == 'apikeys' && Settings::Get('api.enabled') == 1) {\n\trequire_once __DIR__ . '/api_keys.php';\n} elseif ($page == '2fa' && Settings::Get('2fa.enabled') == 1) {\n\trequire_once __DIR__ . '/2fa.php';\n}\n"
        },
        {
          "name": "customer_logger.php",
          "type": "blob",
          "size": 1.8330078125,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'customer';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\SysLog;\nuse Froxlor\\Settings;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Response;\n\n// redirect if this customer page is hidden via settings\nif (Settings::IsInList('panel.customer_hide_options', 'extras.logger')) {\n\tResponse::redirectTo('customer_index.php');\n}\n\nif ($page == 'log') {\n\tif ($action == '') {\n\t\ttry {\n\t\t\t$syslog_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/tablelisting.syslog.php';\n\t\t\t$collection = (new Collection(SysLog::class, $userinfo))\n\t\t\t\t->withPagination($syslog_list_data['syslog_list']['columns'], $syslog_list_data['syslog_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\tUI::view('user/table.html.twig', [\n\t\t\t'listing' => Listing::format($collection, $syslog_list_data, 'syslog_list')\n\t\t]);\n\t}\n}\n"
        },
        {
          "name": "customer_mysql.php",
          "type": "blob",
          "size": 8.63671875,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'customer';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\Commands\\Mysqls;\nuse Froxlor\\Api\\Commands\\MysqlServer;\nuse Froxlor\\CurrentUser;\nuse Froxlor\\Database\\Database;\nuse Froxlor\\Database\\DbManager;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\Settings;\nuse Froxlor\\System\\Crypt;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n// redirect if this customer page is hidden via settings or no resources given\nif (Settings::IsInList('panel.customer_hide_options', 'mysql') || $userinfo['mysqls'] == 0) {\n\tResponse::redirectTo('customer_index.php');\n}\n\n// get sql-root access data\nDatabase::needRoot(true);\nDatabase::needSqlData();\n$sql_root = Database::getSqlData();\nDatabase::needRoot(false);\n\n$id = (int)Request::any('id');\n\nif ($page == 'overview' || $page == 'mysqls') {\n\tif ($action == '') {\n\t\t$log->logAction(FroxlorLogger::USR_ACTION, LOG_NOTICE, \"viewed customer_mysql::mysqls\");\n\n\t\t$multiple_mysqlservers = count(json_decode($userinfo['allowed_mysqlserver'] ?? '[]', true)) > 1;\n\n\t\ttry {\n\t\t\t$mysql_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/customer/tablelisting.mysqls.php';\n\t\t\t$collection = (new Collection(Mysqls::class, $userinfo))\n\t\t\t\t->withPagination($mysql_list_data['mysql_list']['columns'], $mysql_list_data['mysql_list']['default_sorting']);\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\n\t\t$actions_links = [];\n\t\tif (CurrentUser::canAddResource('mysqls')) {\n\t\t\t$actions_links[] = [\n\t\t\t\t'href' => $linker->getLink(['section' => 'mysql', 'page' => 'mysqls', 'action' => 'add']),\n\t\t\t\t'label' => lng('mysql.database_create')\n\t\t\t];\n\t\t}\n\n\t\t$view = 'user/table.html.twig';\n\t\tif ($collection->count() > 0) {\n\t\t\t$view = 'user/table-note.html.twig';\n\n\t\t\t$actions_links[] = [\n\t\t\t\t'href' => $linker->getLink(['section' => 'mysql', 'page' => 'mysqls', 'action' => 'global_user']),\n\t\t\t\t'label' => lng('mysql.edit_global_user'),\n\t\t\t\t'icon' => 'fa-solid fa-user-tie',\n\t\t\t\t'class' => 'btn-outline-secondary'\n\t\t\t];\n\t\t}\n\n\t\t$actions_links[] = [\n\t\t\t'href' => \\Froxlor\\Froxlor::getDocsUrl() . 'user-guide/databases/',\n\t\t\t'target' => '_blank',\n\t\t\t'icon' => 'fa-solid fa-circle-info',\n\t\t\t'class' => 'btn-outline-secondary'\n\t\t];\n\n\t\tUI::view($view, [\n\t\t\t'listing' => Listing::format($collection, $mysql_list_data, 'mysql_list'),\n\t\t\t'actions_links' => $actions_links,\n\t\t\t'entity_info' => lng('mysql.description'),\n\t\t\t// alert-box\n\t\t\t'type' => 'info',\n\t\t\t'alert_msg' => lng('mysql.globaluserinfo', [$userinfo['loginname']]),\n\t\t]);\n\t} elseif ($action == 'delete' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Mysqls::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['databasename']) && $result['databasename'] != '') {\n\t\t\tDatabase::needRoot(true, $result['dbserver'], false);\n\t\t\tDatabase::needSqlData();\n\t\t\t$sql_root = Database::getSqlData();\n\t\t\tDatabase::needRoot(false);\n\n\t\t\tif (!isset($sql_root[$result['dbserver']]) || !is_array($sql_root[$result['dbserver']])) {\n\t\t\t\t$result['dbserver'] = 0;\n\t\t\t}\n\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tMysqls::getLocal($userinfo, Request::postAll())->delete();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$dbnamedesc = $result['databasename'];\n\t\t\t\tif (isset($result['description']) && $result['description'] != '') {\n\t\t\t\t\t$dbnamedesc .= ' (' . $result['description'] . ')';\n\t\t\t\t}\n\t\t\t\tHTML::askYesNo('mysql_reallydelete', $filename, [\n\t\t\t\t\t'id' => $id,\n\t\t\t\t\t'page' => $page,\n\t\t\t\t\t'action' => $action\n\t\t\t\t], $dbnamedesc);\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'add') {\n\t\tif ($userinfo['mysqls_used'] < $userinfo['mysqls'] || $userinfo['mysqls'] == '-1') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\tMysqls::getLocal($userinfo, Request::postAll())->add();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$mysql_servers = [];\n\t\t\t\ttry {\n\t\t\t\t\t$result_json = MysqlServer::getLocal($userinfo)->listing();\n\t\t\t\t\t$result_decoded = json_decode($result_json, true)['data']['list'];\n\t\t\t\t\tforeach ($result_decoded as $dbserver => $dbdata) {\n\t\t\t\t\t\t$mysql_servers[$dbserver] = $dbdata['caption'];\n\t\t\t\t\t}\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\t/* just none */\n\t\t\t\t}\n\n\t\t\t\t$mysql_add_data = include_once dirname(__FILE__) . '/lib/formfields/customer/mysql/formfield.mysql_add.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'mysql']),\n\t\t\t\t\t'formdata' => $mysql_add_data['mysql_add']\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'edit' && $id != 0) {\n\t\ttry {\n\t\t\t$json_result = Mysqls::getLocal($userinfo, [\n\t\t\t\t'id' => $id\n\t\t\t])->get();\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t$result = json_decode($json_result, true)['data'];\n\n\t\tif (isset($result['databasename']) && $result['databasename'] != '') {\n\t\t\tif (Request::post('send') == 'send') {\n\t\t\t\ttry {\n\t\t\t\t\t$json_result = Mysqls::getLocal($userinfo, Request::postAll())->update();\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\tResponse::dynamicError($e->getMessage());\n\t\t\t\t}\n\t\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t\t'page' => $page\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t$mysql_servers = [];\n\t\t\t\ttry {\n\t\t\t\t\t$result_json = MysqlServer::getLocal($userinfo)->listing();\n\t\t\t\t\t$result_decoded = json_decode($result_json, true)['data']['list'];\n\t\t\t\t\tforeach ($result_decoded as $dbserver => $dbdata) {\n\t\t\t\t\t\t$mysql_servers[$dbserver] = $dbdata['caption'] . ' (' . $dbdata['host'] . (isset($dbdata['port']) && !empty($dbdata['port']) ? ':' . $dbdata['port'] : '') . ')';\n\t\t\t\t\t}\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\t/* just none */\n\t\t\t\t}\n\n\t\t\t\t$mysql_edit_data = include_once dirname(__FILE__) . '/lib/formfields/customer/mysql/formfield.mysql_edit.php';\n\n\t\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t\t'formaction' => $linker->getLink(['section' => 'mysql', 'id' => $id]),\n\t\t\t\t\t'formdata' => $mysql_edit_data['mysql_edit'],\n\t\t\t\t\t'editid' => $id\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t} elseif ($action == 'global_user') {\n\n\t\t$allowed_mysqlservers = json_decode($userinfo['allowed_mysqlserver'] ?? '[]', true);\n\t\tif ($userinfo['mysqls'] == 0 || empty($allowed_mysqlservers)) {\n\t\t\tResponse::dynamicError('No permission');\n\t\t}\n\n\t\tif (Request::post('send') == 'send') {\n\n\t\t\t$new_password = Crypt::validatePassword(Request::post('mysql_password'));\n\t\t\tforeach ($allowed_mysqlservers as $dbserver) {\n\t\t\t\t// require privileged access for target db-server\n\t\t\t\tDatabase::needRoot(true, $dbserver, true);\n\t\t\t\t// get DbManager\n\t\t\t\t$dbm = new DbManager($log);\n\t\t\t\t// give permission to the user on every access-host we have\n\t\t\t\tforeach (array_map('trim', explode(',', Settings::Get('system.mysql_access_host'))) as $mysql_access_host) {\n\t\t\t\t\tif ($dbm->getManager()->userExistsOnHost($userinfo['loginname'], $mysql_access_host)) {\n\t\t\t\t\t\t// update password\n\t\t\t\t\t\t$dbm->getManager()->grantPrivilegesTo($userinfo['loginname'], $new_password, $mysql_access_host, false, true, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// create missing user\n\t\t\t\t\t\t$dbm->getManager()->grantPrivilegesTo($userinfo['loginname'], $new_password, $mysql_access_host, false, false, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$dbm->getManager()->flushPrivileges();\n\t\t\t}\n\n\t\t\tResponse::redirectTo($filename, [\n\t\t\t\t'page' => 'overview'\n\t\t\t]);\n\t\t} else {\n\t\t\t$mysql_global_user_data = include_once dirname(__FILE__) . '/lib/formfields/customer/mysql/formfield.mysql_global_user.php';\n\n\t\t\tUI::view('user/form.html.twig', [\n\t\t\t\t'formaction' => $linker->getLink(['section' => 'mysql', 'page' => 'mysqls', 'action' => 'global_user']),\n\t\t\t\t'formdata' => $mysql_global_user_data['mysql_global_user'],\n\t\t\t\t'editid' => $id\n\t\t\t]);\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "customer_traffic.php",
          "type": "blob",
          "size": 1.578125,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'customer';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Traffic\\Traffic;\nuse Froxlor\\Settings;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n// redirect if this customer page is hidden via settings\nif (Settings::IsInList('panel.customer_hide_options', 'traffic')) {\n\tResponse::redirectTo('customer_index.php');\n}\n\n$range = Request::any('range', 'currentyear');\n\nif ($page == 'current') {\n\t$range = 'currentmonth';\n}\n\ntry {\n\t$context = Traffic::getCustomerStats($userinfo, $range);\n} catch (Exception $e) {\n\tResponse::dynamicError($e->getMessage());\n}\n\n// pass metrics to the view\nUI::view('user/traffic.html.twig', $context);\n"
        },
        {
          "name": "dns_editor.php",
          "type": "blob",
          "size": 4.6533203125,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nif (!defined('AREA')) {\n\theader(\"Location: index.php\");\n\texit();\n}\n\nuse Froxlor\\Api\\Commands\\DomainZones;\nuse Froxlor\\Dns\\Dns;\nuse Froxlor\\Settings;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n// This file is being included in admin_domains and customer_domains\n// and therefore does not need to require lib/init.php\n\n$domain_id = (int)Request::any('domain_id');\n\n$record = Request::post('dns_record');\n$type = Request::post('dns_type', 'A');\n$prio = Request::post('dns_mxp');\n$content = Request::post('dns_content');\n$ttl = (int)Request::post('dns_ttl', Settings::get('system.defaultttl'));\n\n// get domain-name\n$domain = Dns::getAllowedDomainEntry($domain_id, AREA, $userinfo);\n\n$errors = \"\";\n$success_message = \"\";\n\n// action for adding a new entry\nif ($action == 'add_record' && !empty($_POST)) {\n\ttry {\n\t\tDomainZones::getLocal($userinfo, [\n\t\t\t'id' => $domain_id,\n\t\t\t'record' => $record,\n\t\t\t'type' => $type,\n\t\t\t'prio' => $prio,\n\t\t\t'content' => $content,\n\t\t\t'ttl' => $ttl\n\t\t])->add();\n\t\t$success_message = lng('success.dns_record_added');\n\t\t$record = $prio = $content = \"\";\n\t} catch (Exception $e) {\n\t\t$errors = str_replace(\"\\n\", \"<br>\", $e->getMessage());\n\t}\n} elseif ($action == 'delete') {\n\t$entry_id = (int)Request::get('id', 0);\n\tHTML::askYesNo('dnsentry_reallydelete', $filename, [\n\t\t'id' => $entry_id,\n\t\t'domain_id' => $domain_id,\n\t\t'page' => $page,\n\t\t'action' => 'deletesure'\n\t], '', [\n\t\t'section' => 'domains',\n\t\t'page' => $page,\n\t\t'domain_id' => $domain_id\n\t]);\n} elseif (Request::post('send') == 'send' && $action == 'deletesure' && !empty($_POST)) {\n\t$entry_id = (int)Request::post('id', 0);\n\t$domain_id = (int)Request::post('domain_id', 0);\n\t// remove entry\n\tif ($entry_id > 0 && $domain_id > 0) {\n\t\ttry {\n\t\t\tDomainZones::getLocal($userinfo, [\n\t\t\t\t'entry_id' => $entry_id,\n\t\t\t\t'id' => $domain_id\n\t\t\t])->delete();\n\t\t\t// success message (inline)\n\t\t\t$success_message = lng('success.dns_record_deleted');\n\t\t} catch (Exception $e) {\n\t\t\t$errors = str_replace(\"\\n\", \"<br>\", $e->getMessage());\n\t\t}\n\t}\n}\n\n// select all entries\ntry {\n\t$dns_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/tablelisting.dns.php';\n\t$collection = (new Collection(DomainZones::class, $userinfo, ['id' => $domain_id]))\n\t\t->withPagination($dns_list_data['dns_list']['columns'], $dns_list_data['dns_list']['default_sorting'], ['domain_id='.$domain_id]);\n} catch (Exception $e) {\n\tResponse::dynamicError($e->getMessage());\n}\n\ntry {\n\t$json_result = DomainZones::getLocal($userinfo, [\n\t\t'id' => $domain_id\n\t])->get();\n} catch (Exception $e) {\n\tResponse::dynamicError($e->getMessage());\n}\n$result = json_decode($json_result, true)['data'];\n$zonefile = implode(\"\\n\", $result);\n\n$dns_add_data = include_once dirname(__FILE__) . '/lib/formfields/formfield.dns_add.php';\n\nUI::view('user/dns-editor.html.twig', [\n\t'listing' => Listing::format($collection, $dns_list_data, 'dns_list', ['domain_id' => $domain_id]),\n\t'actions_links' => [\n\t\t[\n\t\t\t'href' => $linker->getLink([\n\t\t\t\t'section' => 'domains',\n\t\t\t\t'page' => 'domains',\n\t\t\t\t'action' => 'edit',\n\t\t\t\t'id' => $domain_id\n\t\t\t]),\n\t\t\t'label' => lng('admin.domain_edit'),\n\t\t\t'icon' => 'fa-solid fa-pen'\n\t\t],\n\t\t[\n\t\t\t'href' => $linker->getLink(['section' => 'domains', 'page' => 'domains']),\n\t\t\t'label' => lng('panel.backtooverview'),\n\t\t\t'icon' => 'fa-solid fa-reply'\n\t\t]\n\t],\n\t'formaction' => $linker->getLink(['section' => 'domains', 'action' => 'add_record', 'domain_id' => $domain_id]),\n\t'formdata' => $dns_add_data['dns_add'],\n\t// alert-box\n\t'type' => (!empty($errors) ? 'danger' : (!empty($success_message) ? 'success' : 'warning')),\n\t'alert_msg' => (!empty($errors) ? $errors : (!empty($success_message) ? $success_message : lng('dns.howitworks'))),\n\t'zonefile' => $zonefile,\n]);\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "error_report.php",
          "type": "blob",
          "size": 3.9326171875,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nif (!defined('AREA')) {\n\theader(\"Location: index.php\");\n\texit();\n}\n\nuse Froxlor\\FileDir;\nuse Froxlor\\Froxlor;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\nuse Froxlor\\Database\\Database;\n\n// This file is being included in admin_domains and customer_domains\n// and therefore does not need to require lib/init.php\n\n$errid = Request::any('errorid');\n\nif (!empty($errid)) {\n\t// read error file\n\t$err_dir = FileDir::makeCorrectDir(Froxlor::getInstallDir() . \"/logs/\");\n\t$err_file = FileDir::makeCorrectFile($err_dir . \"/\" . $errid . \"_sql-error.log\");\n\n\tif (file_exists($err_file)) {\n\t\t$error_content = file_get_contents($err_file);\n\t\t$error = explode(\"|\", $error_content);\n\n\t\t$_error = [\n\t\t\t'code' => str_replace(\"\\n\", \"\", substr($error[1], 5)),\n\t\t\t'message' => str_replace(\"\\n\", \"\", substr($error[2], 4)),\n\t\t\t'file' => str_replace(\"\\n\", \"\", substr($error[3], 5 + strlen(Froxlor::getInstallDir()))),\n\t\t\t'line' => str_replace(\"\\n\", \"\", substr($error[4], 5)),\n\t\t\t'trace' => str_replace(Froxlor::getInstallDir(), \"\", substr($error[5], 6))\n\t\t];\n\n\t\t// build mail-content\n\t\t$mail_body = \"Dear froxlor-team,\\n\\n\";\n\t\t$mail_body .= \"the following error has been reported by a user:\\n\\n\";\n\t\t$mail_body .= \"-------------------------------------------------------------\\n\";\n\t\t$mail_body .= $_error['code'] . ' ' . $_error['message'] . \"\\n\\n\";\n\t\t$mail_body .= \"File: \" . $_error['file'] . ':' . $_error['line'] . \"\\n\\n\";\n\t\t$mail_body .= \"Trace:\\n\" . trim($_error['trace']) . \"\\n\\n\";\n\t\t$mail_body .= \"-------------------------------------------------------------\\n\\n\";\n\t\t$mail_body .= \"User-Area: \" . AREA . \"\\n\";\n\t\t$mail_body .= \"Froxlor-version: \" . Froxlor::VERSION . \"\\n\";\n\t\t$mail_body .= \"DB-version: \" . Froxlor::DBVERSION . \"\\n\\n\";\n\t\ttry {\n\t\t\t$mail_body .= \"Database: \" . Database::getAttribute(PDO::ATTR_SERVER_VERSION);\n\t\t} catch (\\Exception $e) {\n\t\t\t/* ignore */\n\t\t}\n\t\t$mail_body .= \"End of report\";\n\t\t$mail_html = nl2br($mail_body);\n\n\t\t// send actual report to dev-team\n\t\tif (Request::post('send') == 'send') {\n\t\t\t// send mail and say thanks\n\t\t\t$_mailerror = false;\n\t\t\ttry {\n\t\t\t\t$mail->Subject = '[Froxlor] Error report by user';\n\t\t\t\t$mail->AltBody = $mail_body;\n\t\t\t\t$mail->MsgHTML($mail_html);\n\t\t\t\t$mail->AddAddress('error-reports@froxlor.org', 'Froxlor Developer Team');\n\t\t\t\t$mail->Send();\n\t\t\t} catch (\\PHPMailer\\PHPMailer\\Exception $e) {\n\t\t\t\t$mailerr_msg = $e->errorMessage();\n\t\t\t\t$_mailerror = true;\n\t\t\t} catch (Exception $e) {\n\t\t\t\t$mailerr_msg = $e->getMessage();\n\t\t\t\t$_mailerror = true;\n\t\t\t}\n\n\t\t\tif ($_mailerror) {\n\t\t\t\t// error when reporting an error...LOLFUQ\n\t\t\t\tResponse::standardError('send_report_error', $mailerr_msg);\n\t\t\t}\n\n\t\t\t// finally remove error from fs\n\t\t\t@unlink($err_file);\n\t\t\tResponse::standardSuccess('sent_error_report', '', ['filename' => 'index.php']);\n\t\t}\n\t\t// show a nice summary of the error-report\n\t\t// before actually sending anything\n\t\tUI::view('user/error_report.html.twig', [\n\t\t\t'mail_html' => $mail_body,\n\t\t\t'errorid' => $errid\n\t\t]);\n\t} else {\n\t\tResponse::redirectTo($filename);\n\t}\n} else {\n\tResponse::redirectTo($filename);\n}\n"
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 29.3466796875,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nconst AREA = 'login';\nrequire __DIR__ . '/lib/init.php';\n\nuse Froxlor\\Api\\FroxlorRPC;\nuse Froxlor\\CurrentUser;\nuse Froxlor\\Customer\\Customer;\nuse Froxlor\\Database\\Database;\nuse Froxlor\\FileDir;\nuse Froxlor\\Froxlor;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\FroxlorTwoFactorAuth;\nuse Froxlor\\PhpHelper;\nuse Froxlor\\Settings;\nuse Froxlor\\System\\Crypt;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\nuse Froxlor\\User;\nuse Froxlor\\Validate\\Validate;\n\nif ($action == '') {\n\t$action = 'login';\n}\n\nif ($action == '2fa_entercode') {\n\t// page for entering the 2FA code after successful login\n\tif (!isset($_SESSION) || !isset($_SESSION['secret_2fa'])) {\n\t\t// no session - redirect to index\n\t\tResponse::redirectTo('index.php');\n\t\texit();\n\t}\n\t$smessage = (int)Request::get('showmessage', 0);\n\t$message = \"\";\n\tif ($smessage > 0) {\n\t\t$message = lng('error.2fa_wrongcode');\n\t}\n\t// show template to enter code\n\tUI::view('login/enter2fa.html.twig', [\n\t\t'pagetitle' => lng('login.2fa'),\n\t\t'remember_me' => (Settings::Get('panel.db_version') >= 202407200) ? true : false,\n\t\t'message' => $message\n\t]);\n} elseif ($action == '2fa_verify') {\n\t// verify code from 2fa code-enter form\n\tif (!isset($_SESSION) || !isset($_SESSION['secret_2fa'])) {\n\t\t// no session - redirect to index\n\t\tResponse::redirectTo('index.php');\n\t\texit();\n\t}\n\t$code = Request::post('2fa_code');\n\t$remember = Request::post('2fa_remember');\n\t// verify entered code\n\t$tfa = new FroxlorTwoFactorAuth('Froxlor ' . Settings::Get('system.hostname'));\n\t// get user-data\n\t$table = $_SESSION['uidtable_2fa'];\n\t$field = $_SESSION['uidfield_2fa'];\n\t$uid = $_SESSION['uid_2fa'];\n\t$isadmin = $_SESSION['unfo_2fa'];\n\tif ($_SESSION['secret_2fa'] == 'email') {\n\t\t// verify code set to user's data_2fa field\n\t\t$sel_stmt = Database::prepare(\"SELECT `data_2fa` FROM \" . $table . \" WHERE `\" . $field . \"` = :uid\");\n\t\t$userinfo_code = Database::pexecute_first($sel_stmt, ['uid' => $uid]);\n\t\t// 60sec discrepancy (possible slow email delivery)\n\t\t$result = $tfa->verifyCode($userinfo_code['data_2fa'], $code, 60);\n\t} else {\n\t\t$result = $tfa->verifyCode($_SESSION['secret_2fa'], $code, 3);\n\t}\n\t// either the code is valid when using authenticator-app, or we will select userdata by id and entered code\n\t// which is temporarily stored for the customer when using email-2fa\n\tif ($result) {\n\t\t$sel_param = [\n\t\t\t'uid' => $uid\n\t\t];\n\t\t$sel_stmt = Database::prepare(\"SELECT * FROM \" . $table . \" WHERE `\" . $field . \"` = :uid\");\n\t\t$userinfo = Database::pexecute_first($sel_stmt, $sel_param);\n\t\t// whoops, no (valid) user? Start again\n\t\tif (empty($userinfo)) {\n\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t'showmessage' => '2'\n\t\t\t]);\n\t\t}\n\t\t// set fields in $userinfo required for finishLogin()\n\t\t$userinfo['adminsession'] = $isadmin;\n\t\t$userinfo['userid'] = $uid;\n\n\t\t// when using email-2fa, remove the one-time-code\n\t\tif ($userinfo['type_2fa'] == '1') {\n\t\t\t$del_stmt = Database::prepare(\"UPDATE \" . $table . \" SET `data_2fa` = '' WHERE `\" . $field . \"` = :uid\");\n\t\t\tDatabase::pexecute_first($del_stmt, [\n\t\t\t\t'uid' => $uid\n\t\t\t]);\n\t\t}\n\n\t\t// when remember is activated, set the cookie\n\t\tif ($remember) {\n\t\t\t$selector = base64_encode(Froxlor::genSessionId(9));\n\t\t\t$authenticator = Froxlor::genSessionId(33);\n\t\t\t$valid_until = time()+60*60*24*30;\n\t\t\t$ins_stmt = Database::prepare(\"\n\t\t\t\tINSERT INTO `\".TABLE_PANEL_2FA_TOKENS.\"` SET\n\t\t\t\t`selector` = :selector,\n\t\t\t\t`token` = :authenticator,\n\t\t\t\t`userid` = :userid,\n\t\t\t\t`valid_until` = :valid_until\n\t\t\t\");\n\t\t\tDatabase::pexecute($ins_stmt, [\n\t\t\t\t'selector' => $selector,\n\t\t\t\t'authenticator' => hash('sha256', $authenticator),\n\t\t\t\t'userid' => $uid,\n\t\t\t\t'valid_until' => $valid_until\n\t\t\t]);\n\t\t\t$cookie_params = [\n\t\t\t\t'expires' => $valid_until, // 30 days\n\t\t\t\t'path' => '/',\n\t\t\t\t'domain' => UI::getCookieHost(),\n\t\t\t\t'secure' => UI::requestIsHttps(),\n\t\t\t\t'httponly' => true,\n\t\t\t\t'samesite' => 'Strict'\n\t\t\t];\n\t\t\tsetcookie('frx_2fa_remember', $selector.':'.base64_encode($authenticator), $cookie_params);\n\t\t}\n\n\t\t// if not successful somehow - start again\n\t\tif (!finishLogin($userinfo)) {\n\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t'showmessage' => '2'\n\t\t\t]);\n\t\t}\n\t\texit();\n\t}\n\t// wrong 2fa code - treat like \"wrong password\"\n\t$stmt = Database::prepare(\"\n\t\tUPDATE \" . $table . \"\n\t\tSET `lastlogin_fail`= :lastlogin_fail, `loginfail_count`=`loginfail_count`+1\n\t\tWHERE `\" . $field . \"`= :uid\n\t\");\n\tDatabase::pexecute($stmt, [\n\t\t\"lastlogin_fail\" => time(),\n\t\t\"uid\" => $uid\n\t]);\n\n\t// get data for processing further\n\t$stmt = Database::prepare(\"\n\t\tSELECT `loginname`, `loginfail_count`, `lastlogin_fail` FROM \" . $table . \"\n\t\tWHERE `\" . $field . \"`= :uid\n\t\");\n\t$fail_user = Database::pexecute_first($stmt, [\n\t\t\"uid\" => $uid\n\t]);\n\n\tif ($fail_user['loginfail_count'] >= Settings::Get('login.maxloginattempts') && $fail_user['lastlogin_fail'] > (time() - Settings::Get('login.deactivatetime'))) {\n\t\t// Log failed login\n\t\t$rstlog = FroxlorLogger::getInstanceOf([\n\t\t\t'loginname' => $_SERVER['REMOTE_ADDR']\n\t\t]);\n\t\t$rstlog->logAction(FroxlorLogger::LOGIN_ACTION, LOG_WARNING, \"User '\" . $fail_user['loginname'] . \"' entered wrong 2fa code too often.\");\n\t\tunset($fail_user);\n\t\tResponse::redirectTo('index.php', [\n\t\t\t'showmessage' => '3'\n\t\t]);\n\t\texit();\n\t}\n\tunset($fail_user);\n\t// back to form\n\tResponse::redirectTo('index.php', [\n\t\t'action' => '2fa_entercode',\n\t\t'showmessage' => '1'\n\t]);\n\texit();\n} elseif ($action == 'login') {\n\tif (!empty($_POST)) {\n\t\t$loginname = Validate::validate(Request::post('loginname'), 'loginname');\n\t\t$password = Validate::validate(Request::post('password'), 'password');\n\n\t\t$select_additional = '';\n\t\tif (Settings::Get('panel.db_version') >= 202312230) {\n\t\t\t$select_additional = ' AND `gui_access` = 1';\n\t\t}\n\t\t$stmt = Database::prepare(\"\n\t\t\tSELECT `loginname` AS `customer`\n\t\t\tFROM `\" . TABLE_PANEL_CUSTOMERS . \"`\n\t\t\tWHERE `loginname`= :loginname\" .\n\t\t\t$select_additional\n\t\t);\n\t\tDatabase::pexecute($stmt, [\n\t\t\t\"loginname\" => $loginname\n\t\t]);\n\t\t$row = $stmt->fetch(PDO::FETCH_ASSOC);\n\n\t\t$is_admin = false;\n\t\t$table = \"\";\n\t\tif ($row && $row['customer'] == $loginname) {\n\t\t\t$table = \"`\" . TABLE_PANEL_CUSTOMERS . \"`\";\n\t\t\t$uid = 'customerid';\n\t\t\t$adminsession = '0';\n\t\t} else {\n\t\t\tif ((int)Settings::Get('login.domain_login') == 1) {\n\t\t\t\t$domainname = $idna_convert->encode(preg_replace([\n\t\t\t\t\t'/\\:(\\d)+$/',\n\t\t\t\t\t'/^https?\\:\\/\\//'\n\t\t\t\t], '', $loginname));\n\t\t\t\t$stmt = Database::prepare(\"\n\t\t\t\t\tSELECT `customerid`\n\t\t\t\t\tFROM `\" . TABLE_PANEL_DOMAINS . \"`\n\t\t\t\t\tWHERE `domain` = :domain\n\t\t\t\t\");\n\t\t\t\tDatabase::pexecute($stmt, [\n\t\t\t\t\t\"domain\" => $domainname\n\t\t\t\t]);\n\t\t\t\t$row2 = $stmt->fetch(PDO::FETCH_ASSOC);\n\n\t\t\t\tif (isset($row2['customerid']) && $row2['customerid'] > 0) {\n\t\t\t\t\t$loginname = Customer::getCustomerDetail($row2['customerid'], 'loginname');\n\t\t\t\t\tif ($loginname !== false) {\n\t\t\t\t\t\t$stmt = Database::prepare(\"\n\t\t\t\t\t\t\tSELECT `loginname` AS `customer`\n\t\t\t\t\t\t\tFROM `\" . TABLE_PANEL_CUSTOMERS . \"`\n\t\t\t\t\t\t\tWHERE `loginname`= :loginname\n\t\t\t\t\t\t\");\n\t\t\t\t\t\tDatabase::pexecute($stmt, [\n\t\t\t\t\t\t\t\"loginname\" => $loginname\n\t\t\t\t\t\t]);\n\t\t\t\t\t\t$row3 = $stmt->fetch(PDO::FETCH_ASSOC);\n\t\t\t\t\t\tif ($row3 && $row3['customer'] == $loginname) {\n\t\t\t\t\t\t\t$table = \"`\" . TABLE_PANEL_CUSTOMERS . \"`\";\n\t\t\t\t\t\t\t$uid = 'customerid';\n\t\t\t\t\t\t\t$adminsession = '0';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (empty($table)) {\n\t\t\t// try login as admin of no customer-login method worked\n\t\t\t$is_admin = true;\n\t\t}\n\n\t\tif ((Froxlor::hasUpdates() || Froxlor::hasDbUpdates()) && $is_admin == false) {\n\t\t\tResponse::redirectTo('index.php');\n\t\t\texit();\n\t\t}\n\n\t\tif ($is_admin) {\n\t\t\tif (Froxlor::hasUpdates() || Froxlor::hasDbUpdates()) {\n\t\t\t\t$stmt = Database::prepare(\"\n\t\t\t\t\tSELECT `loginname` AS `admin` FROM `\" . TABLE_PANEL_ADMINS . \"`\n\t\t\t\t\tWHERE `loginname`= :loginname\n\t\t\t\t\tAND `change_serversettings` = '1'\n\t\t\t\t\");\n\t\t\t\tDatabase::pexecute($stmt, [\n\t\t\t\t\t\"loginname\" => $loginname\n\t\t\t\t]);\n\t\t\t\t$row = $stmt->fetch(PDO::FETCH_ASSOC);\n\t\t\t\tif (!isset($row['admin'])) {\n\t\t\t\t\t// not an admin who can see updates\n\t\t\t\t\tResponse::redirectTo('index.php');\n\t\t\t\t\texit();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$select_additional = '';\n\t\t\t\tif (Settings::Get('panel.db_version') >= 202312230) {\n\t\t\t\t\t$select_additional = ' AND `gui_access` = 1';\n\t\t\t\t}\n\t\t\t\t$stmt = Database::prepare(\"\n\t\t\t\t\tSELECT `loginname` AS `admin`\n\t\t\t\t\tFROM `\" . TABLE_PANEL_ADMINS . \"`\n\t\t\t\t\tWHERE `loginname`= :loginname\" .\n\t\t\t\t\t$select_additional\n\t\t\t\t);\n\t\t\t\tDatabase::pexecute($stmt, [\n\t\t\t\t\t\"loginname\" => $loginname\n\t\t\t\t]);\n\t\t\t\t$row = $stmt->fetch(PDO::FETCH_ASSOC);\n\t\t\t}\n\n\t\t\tif ($row && $row['admin'] == $loginname) {\n\t\t\t\t$table = \"`\" . TABLE_PANEL_ADMINS . \"`\";\n\t\t\t\t$uid = 'adminid';\n\t\t\t\t$adminsession = '1';\n\t\t\t} else {\n\t\t\t\t// Log failed login\n\t\t\t\t$rstlog = FroxlorLogger::getInstanceOf([\n\t\t\t\t\t'loginname' => $_SERVER['REMOTE_ADDR']\n\t\t\t\t]);\n\t\t\t\t$rstlog->logAction(FroxlorLogger::LOGIN_ACTION, LOG_WARNING, \"Unknown user tried to login.\");\n\n\t\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t\t'showmessage' => '2'\n\t\t\t\t]);\n\t\t\t\texit();\n\t\t\t}\n\t\t}\n\n\t\t$userinfo_stmt = Database::prepare(\"\n\t\t\tSELECT * FROM $table WHERE `loginname`= :loginname\n\t\t\");\n\t\tDatabase::pexecute($userinfo_stmt, [\n\t\t\t\"loginname\" => $loginname\n\t\t]);\n\t\t$userinfo = $userinfo_stmt->fetch(PDO::FETCH_ASSOC);\n\n\t\tif ($userinfo['loginfail_count'] >= Settings::Get('login.maxloginattempts') && $userinfo['lastlogin_fail'] > (time() - Settings::Get('login.deactivatetime'))) {\n\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t'showmessage' => '3'\n\t\t\t]);\n\t\t\texit();\n\t\t} elseif (Crypt::validatePasswordLogin($userinfo, $password, $table, $uid)) {\n\t\t\t// only show \"you're banned\" if the login was successful\n\t\t\t// because we don't want to publish that the user does exist\n\t\t\tif ($userinfo['deactivated']) {\n\t\t\t\tunset($userinfo);\n\t\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t\t'showmessage' => '5'\n\t\t\t\t]);\n\t\t\t\texit();\n\t\t\t} else {\n\t\t\t\t// login correct\n\t\t\t\t// reset loginfail_counter, set lastlogin_succ\n\t\t\t\t$stmt = Database::prepare(\"\n\t\t\t\t\tUPDATE $table\n\t\t\t\t\tSET `lastlogin_succ`= :lastlogin_succ, `loginfail_count`='0'\n\t\t\t\t\tWHERE `$uid`= :uid\n\t\t\t\t\");\n\t\t\t\tDatabase::pexecute($stmt, [\n\t\t\t\t\t\"lastlogin_succ\" => time(),\n\t\t\t\t\t\"uid\" => $userinfo[$uid]\n\t\t\t\t]);\n\t\t\t\t$userinfo['userid'] = $userinfo[$uid];\n\t\t\t\t$userinfo['adminsession'] = $adminsession;\n\t\t\t}\n\t\t} else {\n\t\t\t// login incorrect\n\t\t\t$stmt = Database::prepare(\"\n\t\t\t\tUPDATE $table\n\t\t\t\tSET `lastlogin_fail`= :lastlogin_fail, `loginfail_count`=`loginfail_count`+1\n\t\t\t\tWHERE `$uid`= :uid\n\t\t\t\");\n\t\t\tDatabase::pexecute($stmt, [\n\t\t\t\t\"lastlogin_fail\" => time(),\n\t\t\t\t\"uid\" => $userinfo[$uid]\n\t\t\t]);\n\n\t\t\t// Log failed login\n\t\t\t$rstlog = FroxlorLogger::getInstanceOf([\n\t\t\t\t'loginname' => $_SERVER['REMOTE_ADDR']\n\t\t\t]);\n\t\t\t$rstlog->logAction(FroxlorLogger::LOGIN_ACTION, LOG_WARNING, \"User tried to login with wrong password.\");\n\n\t\t\tunset($userinfo);\n\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t'showmessage' => '2'\n\t\t\t]);\n\t\t\texit();\n\t\t}\n\n\t\t// 2FA activated\n\t\tif (Settings::Get('2fa.enabled') == '1' && $userinfo['type_2fa'] > 0) {\n\n\t\t\t// check for remember cookie\n\t\t\tif (!empty($_COOKIE['frx_2fa_remember'])) {\n\t\t\t\tlist($selector, $authenticator) = explode(':', $_COOKIE['frx_2fa_remember']);\n\t\t\t\t$sel_stmt = Database::prepare(\"SELECT `token` FROM `\".TABLE_PANEL_2FA_TOKENS.\"` WHERE `selector` = :selector AND `userid` = :uid AND `valid_until` >= UNIX_TIMESTAMP()\");\n\t\t\t\t$token_check = Database::pexecute_first($sel_stmt, ['selector' => $selector, 'uid' => $userinfo[$uid]]);\n\t\t\t\tif ($token_check && hash_equals($token_check['token'], hash('sha256', base64_decode($authenticator)))) {\n\t\t\t\t\tif (!finishLogin($userinfo)) {\n\t\t\t\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t\t\t\t'showmessage' => '2'\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t\texit();\n\t\t\t\t}\n\t\t\t\t// not found or invalid, this cookie is useless, get rid of it\n\t\t\t\tunset($_COOKIE['frx_2fa_remember']);\n\t\t\t\tsetcookie('frx_2fa_remember', \"\", time()-3600);\n\t\t\t}\n\n\t\t\t// redirect to code-enter-page\n\t\t\t$_SESSION['secret_2fa'] = ($userinfo['type_2fa'] == 2 ? $userinfo['data_2fa'] : 'email');\n\t\t\t$_SESSION['uid_2fa'] = $userinfo[$uid];\n\t\t\t$_SESSION['uidfield_2fa'] = $uid;\n\t\t\t$_SESSION['uidtable_2fa'] = $table;\n\t\t\t$_SESSION['unfo_2fa'] = $is_admin;\n\t\t\t// send mail if type_2fa = 1 (email)\n\t\t\tif ($userinfo['type_2fa'] == 1) {\n\t\t\t\t// generate code\n\t\t\t\t$tfa = new FroxlorTwoFactorAuth('Froxlor ' . Settings::Get('system.hostname'));\n\t\t\t\t$secret = $tfa->createSecret();\n\t\t\t\t$code = $tfa->getCode($secret);\n\t\t\t\t// set code for user\n\t\t\t\t$stmt = Database::prepare(\"UPDATE $table SET `data_2fa` = :d2fa WHERE `$uid` = :uid\");\n\t\t\t\tDatabase::pexecute($stmt, [\n\t\t\t\t\t\"d2fa\" => $secret,\n\t\t\t\t\t\"uid\" => $userinfo[$uid]\n\t\t\t\t]);\n\t\t\t\t// build up & send email\n\t\t\t\t$_mailerror = false;\n\t\t\t\t$mailerr_msg = \"\";\n\t\t\t\t$replace_arr = [\n\t\t\t\t\t'CODE' => $code\n\t\t\t\t];\n\t\t\t\t$mail_body = html_entity_decode(PhpHelper::replaceVariables(lng('mails.2fa.mailbody'), $replace_arr));\n\n\t\t\t\ttry {\n\t\t\t\t\t$mail->Subject = lng('mails.2fa.subject');\n\t\t\t\t\t$mail->AltBody = $mail_body;\n\t\t\t\t\t$mail->MsgHTML(str_replace(\"\\n\", \"<br />\", $mail_body));\n\t\t\t\t\t$mail->AddAddress($userinfo['email'], User::getCorrectUserSalutation($userinfo));\n\t\t\t\t\t$mail->Send();\n\t\t\t\t} catch (\\PHPMailer\\PHPMailer\\Exception $e) {\n\t\t\t\t\t$mailerr_msg = $e->errorMessage();\n\t\t\t\t\t$_mailerror = true;\n\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\t$mailerr_msg = $e->getMessage();\n\t\t\t\t\t$_mailerror = true;\n\t\t\t\t}\n\n\t\t\t\tif ($_mailerror) {\n\t\t\t\t\t$rstlog = FroxlorLogger::getInstanceOf([\n\t\t\t\t\t\t'loginname' => '2fa code-sending'\n\t\t\t\t\t]);\n\t\t\t\t\t$rstlog->logAction(FroxlorLogger::ADM_ACTION, LOG_ERR, \"Error sending mail: \" . $mailerr_msg);\n\t\t\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t\t\t'showmessage' => '4',\n\t\t\t\t\t\t'customermail' => $userinfo['email']\n\t\t\t\t\t]);\n\t\t\t\t\texit();\n\t\t\t\t}\n\n\t\t\t\t$mail->ClearAddresses();\n\t\t\t}\n\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t'action' => '2fa_entercode'\n\t\t\t]);\n\t\t\texit();\n\t\t}\n\n\t\tif (!finishLogin($userinfo)) {\n\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t'showmessage' => '2'\n\t\t\t]);\n\t\t}\n\t\texit();\n\t} else {\n\t\t$smessage = (int)Request::get('showmessage', 0);\n\t\t$message = '';\n\t\t$successmessage = '';\n\n\t\tswitch ($smessage) {\n\t\t\tcase 1:\n\t\t\t\t$successmessage = lng('pwdreminder.success');\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t$message = lng('error.login');\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t$message = lng('error.login_blocked', [Settings::Get('login.deactivatetime')]);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\t$message = lng('error.errorsendingmailpub');\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\t$message = lng('error.user_banned');\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\t$successmessage = lng('pwdreminder.changed');\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\t$message = lng('pwdreminder.wrongcode');\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\t$message = lng('pwdreminder.notallowed');\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$update_in_progress = false;\n\t\tif (Froxlor::hasUpdates() || Froxlor::hasDbUpdates()) {\n\t\t\t$update_in_progress = true;\n\t\t}\n\n\t\t// Pass the last used page if needed\n\t\t$lastscript = Request::any('script', '');\n\t\tif (!empty($lastscript)) {\n\t\t\t$lastscript = str_replace(\"..\", \"\", $lastscript);\n\t\t\t$lastscript = htmlspecialchars($lastscript, ENT_QUOTES);\n\n\t\t\tif (file_exists(__DIR__ . \"/\" . $lastscript)) {\n\t\t\t\t$_SESSION['lastscript'] = $lastscript;\n\t\t\t} else {\n\t\t\t\t$lastscript = \"\";\n\t\t\t}\n\t\t}\n\t\t$lastqrystr = Request::any('qrystr', '');\n\t\tif (!empty($lastqrystr)) {\n\t\t\t$lastqrystr = urlencode($lastqrystr);\n\t\t\t$_SESSION['lastqrystr'] = $lastqrystr;\n\t\t}\n\n\t\tUI::view('login/login.html.twig', [\n\t\t\t'pagetitle' => 'Login',\n\t\t\t'upd_in_progress' => $update_in_progress,\n\t\t\t'message' => $message,\n\t\t\t'successmsg' => $successmessage\n\t\t]);\n\t}\n}\n\nif ($action == 'forgotpwd') {\n\t$adminchecked = false;\n\t$message = '';\n\n\tif (!empty($_POST)) {\n\t\t$loginname = Validate::validate(Request::post('loginname'), 'loginname');\n\t\t$email = Validate::validateEmail(Request::post('loginemail'));\n\t\t$result_stmt = Database::prepare(\"SELECT `adminid`, `customerid`, `customernumber`, `firstname`, `name`, `company`, `email`, `loginname`, `def_language`, `deactivated` FROM `\" . TABLE_PANEL_CUSTOMERS . \"`\n\t\t\tWHERE `loginname`= :loginname\n\t\t\tAND `email`= :email\");\n\t\tDatabase::pexecute($result_stmt, [\n\t\t\t\"loginname\" => $loginname,\n\t\t\t\"email\" => $email\n\t\t]);\n\n\t\tif (Database::num_rows() == 0) {\n\t\t\t$result_stmt = Database::prepare(\"SELECT `adminid`, `name`, `email`, `loginname`, `def_language`, `deactivated` FROM `\" . TABLE_PANEL_ADMINS . \"`\n\t\t\t\tWHERE `loginname`= :loginname\n\t\t\t\tAND `email`= :email\");\n\t\t\tDatabase::pexecute($result_stmt, [\n\t\t\t\t\"loginname\" => $loginname,\n\t\t\t\t\"email\" => $email\n\t\t\t]);\n\n\t\t\tif (Database::num_rows() > 0) {\n\t\t\t\t$adminchecked = true;\n\t\t\t} else {\n\t\t\t\t$result_stmt = null;\n\t\t\t}\n\t\t}\n\n\t\tif ($adminchecked) {\n\t\t\tif (Settings::Get('panel.allow_preset_admin') != '1') {\n\t\t\t\t$message = lng('pwdreminder.notallowed');\n\t\t\t\tunset($adminchecked);\n\t\t\t}\n\t\t} else {\n\t\t\tif (Settings::Get('panel.allow_preset') != '1') {\n\t\t\t\t$message = lng('pwdreminder.notallowed');\n\t\t\t}\n\t\t}\n\n\t\tif (empty($message)) {\n\t\t\tif ($result_stmt !== null) {\n\t\t\t\t$user = $result_stmt->fetch(PDO::FETCH_ASSOC);\n\n\t\t\t\t/* Check whether user is banned */\n\t\t\t\tif ($user['deactivated']) {\n\t\t\t\t\t$message = lng('pwdreminder.notallowed');\n\t\t\t\t} else {\n\t\t\t\t\tif (($adminchecked && Settings::Get('panel.allow_preset_admin') == '1') || $adminchecked == false) {\n\t\t\t\t\t\tif ($user !== false) {\n\t\t\t\t\t\t\t// build a activation code\n\t\t\t\t\t\t\t$timestamp = time();\n\t\t\t\t\t\t\t$first = substr(md5($user['loginname'] . $timestamp . PhpHelper::randomStr(16)), 0, 15);\n\t\t\t\t\t\t\t$third = substr(md5($user['email'] . $timestamp . PhpHelper::randomStr(16)), -15);\n\t\t\t\t\t\t\t$activationcode = $first . $timestamp . $third . substr(md5($third . $timestamp), 0, 10);\n\n\t\t\t\t\t\t\t// Drop all existing activation codes for this user\n\t\t\t\t\t\t\t$stmt = Database::prepare(\"DELETE FROM `\" . TABLE_PANEL_ACTIVATION . \"`\n\t\t\t\t\t\t\t\tWHERE `userid` = :userid\n\t\t\t\t\t\t\t\tAND `admin` = :admin\");\n\t\t\t\t\t\t\t$params = [\n\t\t\t\t\t\t\t\t\"userid\" => $adminchecked ? $user['adminid'] : $user['customerid'],\n\t\t\t\t\t\t\t\t\"admin\" => $adminchecked ? 1 : 0\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\tDatabase::pexecute($stmt, $params);\n\n\t\t\t\t\t\t\t// Add new activation code to database\n\t\t\t\t\t\t\t$stmt = Database::prepare(\"INSERT INTO `\" . TABLE_PANEL_ACTIVATION . \"`\n\t\t\t\t\t\t\t\t(userid, admin, creation, activationcode)\n\t\t\t\t\t\t\t\tVALUES (:userid, :admin, :creation, :activationcode)\");\n\t\t\t\t\t\t\t$params = [\n\t\t\t\t\t\t\t\t\"userid\" => $adminchecked ? $user['adminid'] : $user['customerid'],\n\t\t\t\t\t\t\t\t\"admin\" => $adminchecked ? 1 : 0,\n\t\t\t\t\t\t\t\t\"creation\" => $timestamp,\n\t\t\t\t\t\t\t\t\"activationcode\" => $activationcode\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\tDatabase::pexecute($stmt, $params);\n\n\t\t\t\t\t\t\t$rstlog = FroxlorLogger::getInstanceOf([\n\t\t\t\t\t\t\t\t'loginname' => 'password_reset'\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t$rstlog->logAction(FroxlorLogger::USR_ACTION, LOG_WARNING, \"User '\" . $user['loginname'] . \"' requested a link for setting a new password.\");\n\n\t\t\t\t\t\t\t// Set together our activation link\n\t\t\t\t\t\t\t$protocol = empty($_SERVER['HTTPS']) ? 'http' : 'https';\n\t\t\t\t\t\t\t// this can be a fixed value to avoid potential exploiting by modifying headers\n\t\t\t\t\t\t\t$host = Settings::Get('system.hostname'); // $_SERVER['HTTP_HOST'];\n\t\t\t\t\t\t\t$port = $_SERVER['SERVER_PORT'] != 80 ? ':' . $_SERVER['SERVER_PORT'] : '';\n\t\t\t\t\t\t\t// don't add :443 when https is used, as it is default (and just looks weird!)\n\t\t\t\t\t\t\tif ($protocol == 'https' && $_SERVER['SERVER_PORT'] == '443') {\n\t\t\t\t\t\t\t\t$port = '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// there can be only one script to handle this so we can use a fixed value here\n\t\t\t\t\t\t\t$script = \"/index.php\"; // $_SERVER['SCRIPT_NAME'];\n\t\t\t\t\t\t\tif (Settings::Get('system.froxlordirectlyviahostname') == 0) {\n\t\t\t\t\t\t\t\t$script = FileDir::makeCorrectFile(\"/\" . basename(__DIR__) . \"/\" . $script);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$activationlink = $protocol . '://' . $host . $port . $script . '?action=resetpwd&resetcode=' . $activationcode;\n\n\t\t\t\t\t\t\t$replace_arr = [\n\t\t\t\t\t\t\t\t'SALUTATION' => User::getCorrectUserSalutation($user),\n\t\t\t\t\t\t\t\t'NAME' => $user['name'],\n\t\t\t\t\t\t\t\t'FIRSTNAME' => $user['firstname'] ?? \"\",\n\t\t\t\t\t\t\t\t'COMPANY' => $user['company'] ?? \"\",\n\t\t\t\t\t\t\t\t'CUSTOMER_NO' => $user['customernumber'] ?? 0,\n\t\t\t\t\t\t\t\t'USERNAME' => $loginname,\n\t\t\t\t\t\t\t\t'LINK' => $activationlink\n\t\t\t\t\t\t\t];\n\n\t\t\t\t\t\t\t$def_language = ($user['def_language'] != '') ? $user['def_language'] : Settings::Get('panel.standardlanguage');\n\t\t\t\t\t\t\t$result_stmt = Database::prepare('SELECT `value` FROM `' . TABLE_PANEL_TEMPLATES . '`\n\t\t\t\t\t\t\t\tWHERE `adminid`= :adminid\n\t\t\t\t\t\t\t\tAND `language`= :lang\n\t\t\t\t\t\t\t\tAND `templategroup`=\\'mails\\'\n\t\t\t\t\t\t\t\tAND `varname`=\\'password_reset_subject\\'');\n\t\t\t\t\t\t\tDatabase::pexecute($result_stmt, [\n\t\t\t\t\t\t\t\t\"adminid\" => $user['adminid'],\n\t\t\t\t\t\t\t\t\"lang\" => $def_language\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t$result = $result_stmt->fetch(PDO::FETCH_ASSOC);\n\t\t\t\t\t\t\t$mail_subject = html_entity_decode(PhpHelper::replaceVariables((($result['value'] != '') ? $result['value'] : lng('mails.password_reset.subject')), $replace_arr));\n\n\t\t\t\t\t\t\t$result_stmt = Database::prepare('SELECT `value` FROM `' . TABLE_PANEL_TEMPLATES . '`\n\t\t\t\t\t\t\t\tWHERE `adminid`= :adminid\n\t\t\t\t\t\t\t\tAND `language`= :lang\n\t\t\t\t\t\t\t\tAND `templategroup`=\\'mails\\'\n\t\t\t\t\t\t\t\tAND `varname`=\\'password_reset_mailbody\\'');\n\t\t\t\t\t\t\tDatabase::pexecute($result_stmt, [\n\t\t\t\t\t\t\t\t\"adminid\" => $user['adminid'],\n\t\t\t\t\t\t\t\t\"lang\" => $def_language\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t$result = $result_stmt->fetch(PDO::FETCH_ASSOC);\n\t\t\t\t\t\t\t$mail_body = html_entity_decode(PhpHelper::replaceVariables((($result['value'] != '') ? $result['value'] : lng('mails.password_reset.mailbody')), $replace_arr));\n\n\t\t\t\t\t\t\t$_mailerror = false;\n\t\t\t\t\t\t\t$mailerr_msg = \"\";\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t$mail->Subject = $mail_subject;\n\t\t\t\t\t\t\t\t$mail->AltBody = $mail_body;\n\t\t\t\t\t\t\t\t$mail->MsgHTML(str_replace(\"\\n\", \"<br />\", $mail_body));\n\t\t\t\t\t\t\t\t$mail->AddAddress($user['email'], User::getCorrectUserSalutation($user));\n\t\t\t\t\t\t\t\t$mail->Send();\n\t\t\t\t\t\t\t} catch (\\PHPMailer\\PHPMailer\\Exception $e) {\n\t\t\t\t\t\t\t\t$mailerr_msg = $e->errorMessage();\n\t\t\t\t\t\t\t\t$_mailerror = true;\n\t\t\t\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\t\t\t\t$mailerr_msg = $e->getMessage();\n\t\t\t\t\t\t\t\t$_mailerror = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ($_mailerror) {\n\t\t\t\t\t\t\t\t$rstlog = FroxlorLogger::getInstanceOf([\n\t\t\t\t\t\t\t\t\t'loginname' => 'password_reset'\n\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t$rstlog->logAction(FroxlorLogger::ADM_ACTION, LOG_ERR, \"Error sending mail: \" . $mailerr_msg);\n\t\t\t\t\t\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t\t\t\t\t\t'showmessage' => '4',\n\t\t\t\t\t\t\t\t\t'customermail' => $user['email']\n\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\texit();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$mail->ClearAddresses();\n\t\t\t\t\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t\t\t\t\t'showmessage' => '1'\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\texit();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$rstlog = FroxlorLogger::getInstanceOf([\n\t\t\t\t\t\t\t\t'loginname' => 'password_reset'\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t$rstlog->logAction(FroxlorLogger::USR_ACTION, LOG_WARNING, \"Unknown user requested to set a new password, but was not found in database!\");\n\t\t\t\t\t\t\t$message = lng('login.usernotfound');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tunset($user);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$message = lng('pwdreminder.notallowed');\n\t\t\t}\n\t\t}\n\t}\n\n\tUI::view('login/fpwd.html.twig', [\n\t\t'pagetitle' => lng('login.presend'),\n\t\t'formaction' => 'index.php?action=' . $action,\n\t\t'message' => $message,\n\t]);\n}\n\nif ($action == 'resetpwd') {\n\t$message = '';\n\n\t// Remove old activation codes\n\t$stmt = Database::prepare(\"DELETE FROM `\" . TABLE_PANEL_ACTIVATION . \"`\n\t\tWHERE creation < :oldest\");\n\tDatabase::pexecute($stmt, [\n\t\t\"oldest\" => time() - 86400\n\t]);\n\n\t$activationcode = Request::get('resetcode');\n\tif (!empty($activationcode) && strlen($activationcode) == 50) {\n\t\t// Check if activation code is valid\n\t\t$timestamp = substr($activationcode, 15, 10);\n\t\t$third = substr($activationcode, 25, 15);\n\t\t$check = substr($activationcode, 40, 10);\n\n\t\tif (substr(md5($third . $timestamp), 0, 10) == $check && $timestamp >= time() - 86400) {\n\t\t\tif (!empty($_POST)) {\n\t\t\t\t$stmt = Database::prepare(\"SELECT `userid`, `admin` FROM `\" . TABLE_PANEL_ACTIVATION . \"`\n\t\t\t\t\tWHERE `activationcode` = :activationcode\");\n\t\t\t\t$result = Database::pexecute_first($stmt, [\n\t\t\t\t\t\"activationcode\" => $activationcode\n\t\t\t\t]);\n\n\t\t\t\tif ($result !== false) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t$new_password = Crypt::validatePassword(Request::post('new_password'), true);\n\t\t\t\t\t\t$new_password_confirm = Crypt::validatePassword(Request::post('new_password_confirm'), true);\n\t\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\t\t$message = $e->getMessage();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (empty($message) && (empty($new_password) || $new_password != $new_password_confirm)) {\n\t\t\t\t\t\t$message = lng('error.newpasswordconfirmerror');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (empty($message)) {\n\t\t\t\t\t\t// Update user password\n\t\t\t\t\t\tif ($result['admin'] == 1) {\n\t\t\t\t\t\t\t$stmt = Database::prepare(\"UPDATE `\" . TABLE_PANEL_ADMINS . \"`\n\t\t\t\t\t\t\t\tSET `password` = :newpassword\n\t\t\t\t\t\t\t\tWHERE `adminid` = :userid\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$stmt = Database::prepare(\"UPDATE `\" . TABLE_PANEL_CUSTOMERS . \"`\n\t\t\t\t\t\t\t\tSET `password` = :newpassword\n\t\t\t\t\t\t\t\tWHERE `customerid` = :userid\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tDatabase::pexecute($stmt, [\n\t\t\t\t\t\t\t\"newpassword\" => Crypt::makeCryptPassword($new_password),\n\t\t\t\t\t\t\t\"userid\" => $result['userid']\n\t\t\t\t\t\t]);\n\n\t\t\t\t\t\t$rstlog = FroxlorLogger::getInstanceOf([\n\t\t\t\t\t\t\t'loginname' => 'password_reset'\n\t\t\t\t\t\t]);\n\t\t\t\t\t\t$rstlog->logAction(FroxlorLogger::USR_ACTION, LOG_NOTICE, \"changed password using password reset.\");\n\n\t\t\t\t\t\t// Remove activation code from DB\n\t\t\t\t\t\t$stmt = Database::prepare(\"DELETE FROM `\" . TABLE_PANEL_ACTIVATION . \"`\n\t\t\t\t\t\t\tWHERE `activationcode` = :activationcode\n\t\t\t\t\t\t\tAND `userid` = :userid\");\n\t\t\t\t\t\tDatabase::pexecute($stmt, [\n\t\t\t\t\t\t\t\"activationcode\" => $activationcode,\n\t\t\t\t\t\t\t\"userid\" => $result['userid']\n\t\t\t\t\t\t]);\n\t\t\t\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t\t\t\t\"showmessage\" => '6'\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t\t\t\"showmessage\" => '7'\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tUI::view('login/rpwd.html.twig', [\n\t\t\t\t'pagetitle' => lng('pwdreminder.choosenew'),\n\t\t\t\t'formaction' => 'index.php?action=resetpwd&resetcode=' . $activationcode,\n\t\t\t\t'message' => $message,\n\t\t\t]);\n\t\t} else {\n\t\t\tResponse::redirectTo('index.php', [\n\t\t\t\t\"showmessage\" => '7'\n\t\t\t]);\n\t\t}\n\t} else {\n\t\tResponse::redirectTo('index.php');\n\t}\n}\n\n// one-time link login\nif ($action == 'll') {\n\tif (!Froxlor::hasUpdates() && !Froxlor::hasDbUpdates()) {\n\t\t$loginname = Request::get('ln');\n\t\t$hash = Request::get('h');\n\t\tif ($loginname && $hash) {\n\t\t\t$sel_stmt = Database::prepare(\"\n\t\t\t\tSELECT * FROM `\" . TABLE_PANEL_LOGINLINKS . \"`\n\t\t\t\tWHERE `loginname` = :loginname AND `hash` = :hash\n\t\t\t\");\n\t\t\ttry {\n\t\t\t\t$entry = Database::pexecute_first($sel_stmt, ['loginname' => $loginname, 'hash' => $hash]);\n\t\t\t} catch (Exception $e) {\n\t\t\t\t$entry = false;\n\t\t\t}\n\t\t\tif ($entry) {\n\t\t\t\t// delete entry\n\t\t\t\t$del_stmt = Database::prepare(\"DELETE FROM `\" . TABLE_PANEL_LOGINLINKS . \"` WHERE `loginname` = :loginname AND `hash` = :hash\");\n\t\t\t\tDatabase::pexecute($del_stmt, ['loginname' => $loginname, 'hash' => $hash]);\n\t\t\t\tif (time() <= $entry['valid_until']) {\n\t\t\t\t\t$valid = true;\n\t\t\t\t\t// validate source ip if specified\n\t\t\t\t\tif (!empty($entry['allowed_from'])) {\n\t\t\t\t\t\t$valid = false;\n\t\t\t\t\t\t$ip_list = explode(\",\", $entry['allowed_from']);\n\t\t\t\t\t\tif (FroxlorRPC::validateAllowedFrom($ip_list, $_SERVER['REMOTE_ADDR'])) {\n\t\t\t\t\t\t\t$valid = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ($valid) {\n\t\t\t\t\t\t// login user / select only non-deactivated (in case the user got deactivated after generating the link)\n\t\t\t\t\t\t$userinfo_stmt = Database::prepare(\"SELECT * FROM `\" . TABLE_PANEL_CUSTOMERS . \"` WHERE `loginname`= :loginname AND `deactivated` = 0\");\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t$userinfo = Database::pexecute_first($userinfo_stmt, [\n\t\t\t\t\t\t\t\t\"loginname\" => $loginname\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\t\t\t$userinfo = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($userinfo) {\n\t\t\t\t\t\t\t$userinfo['userid'] = $userinfo['customerid'];\n\t\t\t\t\t\t\t$userinfo['adminsession'] = 0;\n\t\t\t\t\t\t\tfinishLogin($userinfo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tResponse::redirectTo('index.php');\n}\n\nfunction finishLogin($userinfo)\n{\n\tif (isset($userinfo['userid']) && $userinfo['userid'] != '') {\n\t\tsession_regenerate_id(true);\n\t\tCurrentUser::setData($userinfo);\n\n\t\t$language = $userinfo['def_language'] ?? Settings::Get('panel.standardlanguage');\n\t\tCurrentUser::setField('language', $language);\n\n\t\tif (isset($userinfo['theme']) && $userinfo['theme'] != '') {\n\t\t\t$theme = $userinfo['theme'];\n\t\t} else {\n\t\t\t$theme = Settings::Get('panel.default_theme');\n\t\t}\n\t\tCurrentUser::setField('theme', $theme);\n\n\t\t$qryparams = [];\n\t\tif (!empty($_SESSION['lastqrystr'])) {\n\t\t\tparse_str(urldecode($_SESSION['lastqrystr']), $qryparams);\n\t\t\tunset($_SESSION['lastqrystr']);\n\t\t}\n\n\t\tif ($userinfo['adminsession'] == '1') {\n\t\t\tif (Froxlor::hasUpdates() || Froxlor::hasDbUpdates()) {\n\t\t\t\tResponse::redirectTo('admin_updates.php?page=overview');\n\t\t\t} else {\n\t\t\t\tif (!empty($_SESSION['lastscript'])) {\n\t\t\t\t\t$lastscript = $_SESSION['lastscript'];\n\t\t\t\t\tunset($_SESSION['lastscript']);\n\t\t\t\t\tif (preg_match(\"/customer\\_/\", $lastscript) === 1) {\n\t\t\t\t\t\tResponse::redirectTo('admin_customers.php', [\n\t\t\t\t\t\t\t\"page\" => \"customers\"\n\t\t\t\t\t\t]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tResponse::redirectTo($lastscript, $qryparams);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tResponse::redirectTo('admin_index.php', $qryparams);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!empty($_SESSION['lastscript'])) {\n\t\t\t\t$lastscript = $_SESSION['lastscript'];\n\t\t\t\tunset($_SESSION['lastscript']);\n\t\t\t\tResponse::redirectTo($lastscript, $qryparams);\n\t\t\t} else {\n\t\t\t\tResponse::redirectTo('customer_index.php', $qryparams);\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n"
        },
        {
          "name": "install",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "lng",
          "type": "tree",
          "content": null
        },
        {
          "name": "logfiles_viewer.php",
          "type": "blob",
          "size": 3.9931640625,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nif (!defined('AREA')) {\n\theader(\"Location: index.php\");\n\texit();\n}\n\nuse Froxlor\\Api\\Commands\\SubDomains;\nuse Froxlor\\Customer\\Customer;\nuse Froxlor\\FileDir;\nuse Froxlor\\Settings;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n// This file is being included in admin_domains and customer_domains\n// and therefore does not need to require lib/init.php\n\n$domain_id = (int)Request::any('domain_id');\n$last_n = (int)Request::any('number_of_lines', 100);\n\n// user's with logviewenabled = false\nif (AREA != 'admin' && $userinfo['logviewenabled'] != '1') {\n\t// back to domain overview\n\tResponse::redirectTo($filename, [\n\t\t'page' => 'domains'\n\t]);\n}\n\nif (function_exists('exec')) {\n\t// get domain-info\n\ttry {\n\t\t$json_result = SubDomains::getLocal($userinfo, [\n\t\t\t'id' => $domain_id\n\t\t])->get();\n\t} catch (Exception $e) {\n\t\tResponse::dynamicError($e->getMessage());\n\t}\n\t$domain = json_decode($json_result, true)['data'];\n\n\tif ($domain['email_only']) {\n\t\tResponse::dynamicError(\"There are no webserver logfiles for email only domains.\");\n\t}\n\n\t$speciallogfile = '';\n\tif ($domain['speciallogfile'] == '1') {\n\t\tif ($domain['parentdomainid'] == '0') {\n\t\t\t$speciallogfile = '-' . $domain['domain'];\n\t\t} else {\n\t\t\t$speciallogfile = '-' . $domain['parentdomain'];\n\t\t}\n\t}\n\t// The normal access/error - logging is enabled\n\t$error_log = FileDir::makeCorrectFile(Settings::Get('system.logfiles_directory') . Customer::getCustomerDetail($domain['customerid'], 'loginname') . $speciallogfile . '-error.log');\n\t$access_log = FileDir::makeCorrectFile(Settings::Get('system.logfiles_directory') . Customer::getCustomerDetail($domain['customerid'], 'loginname') . $speciallogfile . '-access.log');\n\n\t// error log\n\tif (file_exists($error_log)) {\n\t\t$result = FileDir::safe_exec('tail -n ' . $last_n . ' ' . escapeshellarg($error_log));\n\t\t$error_log_content = implode(\"\\n\", $result);\n\t} else {\n\t\t$error_log_content = \"Error-Log\" . (AREA == 'admin' ? \" '\" . $error_log . \"'\" : \"\") . \" does not seem to exist\";\n\t}\n\n\t// access log\n\tif (file_exists($access_log)) {\n\t\t$result = FileDir::safe_exec('tail -n ' . $last_n . ' ' . escapeshellarg($access_log));\n\t\t$access_log_content = implode(\"\\n\", $result);\n\t} else {\n\t\t$access_log_content = \"Access-Log\" . (AREA == 'admin' ? \" '\" . $access_log . \"'\" : \"\") . \" does not seem to exist\";\n\t}\n\n\tUI::view('user/logfiles.html.twig', [\n\t\t'error_log_content' => $error_log_content,\n\t\t'access_log_content' => $access_log_content,\n\t\t'actions_links' => [\n\t\t\t[\n\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t'section' => 'domains',\n\t\t\t\t\t'page' => 'domains',\n\t\t\t\t\t'action' => 'edit',\n\t\t\t\t\t'id' => $domain_id\n\t\t\t\t]),\n\t\t\t\t'label' => lng('admin.domain_edit'),\n\t\t\t\t'icon' => 'fa-solid fa-pen'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'href' => $linker->getLink(['section' => 'domains', 'page' => 'domains']),\n\t\t\t\t'label' => lng('panel.backtooverview'),\n\t\t\t\t'icon' => 'fa-solid fa-reply'\n\t\t\t]\n\t\t]\n\t]);\n} else {\n\tif (AREA == 'admin') {\n\t\tResponse::dynamicError('You need to allow the exec() function in the froxlor-vhost php-config');\n\t} else {\n\t\tResponse::dynamicError('Required function exec() is not allowed. Please contact the system administrator.');\n\t}\n}\n"
        },
        {
          "name": "logs",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 36.666015625,
          "content": "{\n\t\"name\": \"froxlor\",\n\t\"lockfileVersion\": 3,\n\t\"requires\": true,\n\t\"packages\": {\n\t\t\"\": {\n\t\t\t\"name\": \"froxlor\",\n\t\t\t\"devDependencies\": {\n\t\t\t\t\"@fortawesome/fontawesome-free\": \"^6.4.2\",\n\t\t\t\t\"@popperjs/core\": \"^2.11.8\",\n\t\t\t\t\"@vitejs/plugin-vue\": \"^4.0.0\",\n\t\t\t\t\"axios\": \"^1.7.4\",\n\t\t\t\t\"bootstrap\": \"^5.3.2\",\n\t\t\t\t\"chart.js\": \"^4.4.0\",\n\t\t\t\t\"jquery\": \"^3.6.1\",\n\t\t\t\t\"jquery-validation\": \"^1.20.0\",\n\t\t\t\t\"laravel-vite-plugin\": \"^0.8.0\",\n\t\t\t\t\"lodash\": \"^4.17.19\",\n\t\t\t\t\"postcss\": \"^8.1.14\",\n\t\t\t\t\"resolve-url-loader\": \"^5.0.0\",\n\t\t\t\t\"sass\": \"^1.69.3\",\n\t\t\t\t\"vite\": \"^4.5.5\",\n\t\t\t\t\"vue\": \"^3.2.37\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=18\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@babel/parser\": {\n\t\t\t\"version\": \"7.23.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.23.0.tgz\",\n\t\t\t\"integrity\": \"sha512-vvPKKdMemU85V9WE/l5wZEmImpCtLqbnTvqDS2U1fJ96KrxoW7KrXhNsNCblQlg8Ck4b85yxdTyelsMUgFUXiw==\",\n\t\t\t\"dev\": true,\n\t\t\t\"bin\": {\n\t\t\t\t\"parser\": \"bin/babel-parser.js\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=6.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/android-arm\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-fyi7TDI/ijKKNZTUJAQqiG5T7YjJXgnzkURqmGj13C6dCqckZBLdl4h7bkhHt/t0WP+zO9/zwroDvANaOqO5Sw==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"arm\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"android\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/android-arm64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-Nz4rJcchGDtENV0eMKUNa6L12zz2zBDXuhj/Vjh18zGqB44Bi7MBMSXjgunJgjRhCmKOjnPuZp4Mb6OKqtMHLQ==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"arm64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"android\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/android-x64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-8GDdlePJA8D6zlZYJV/jnrRAi6rOiNaCC/JclcXpB+KIuvfBN4owLtgzY2bsxnx666XjJx2kDPUmnTtR8qKQUg==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"x64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"android\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/darwin-arm64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-bxRHW5kHU38zS2lPTPOyuyTm+S+eobPUnTNkdJEfAddYgEcll4xkT8DB9d2008DtTbl7uJag2HuE5NZAZgnNEA==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"arm64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"darwin\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/darwin-x64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-pc5gxlMDxzm513qPGbCbDukOdsGtKhfxD1zJKXjCCcU7ju50O7MeAZ8c4krSJcOIJGFR+qx21yMMVYwiQvyTyQ==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"x64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"darwin\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/freebsd-arm64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-yqDQHy4QHevpMAaxhhIwYPMv1NECwOvIpGCZkECn8w2WFHXjEwrBn3CeNIYsibZ/iZEUemj++M26W3cNR5h+Tw==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"arm64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"freebsd\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/freebsd-x64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-tgWRPPuQsd3RmBZwarGVHZQvtzfEBOreNuxEMKFcd5DaDn2PbBxfwLcj4+aenoh7ctXcbXmOQIn8HI6mCSw5MQ==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"x64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"freebsd\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/linux-arm\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-/5bHkMWnq1EgKr1V+Ybz3s1hWXok7mDFUMQ4cG10AfW3wL02PSZi5kFpYKrptDsgb2WAJIvRcDm+qIvXf/apvg==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"arm\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"linux\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/linux-arm64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-2YbscF+UL7SQAVIpnWvYwM+3LskyDmPhe31pE7/aoTMFKKzIc9lLbyGUpmmb8a8AixOL61sQ/mFh3jEjHYFvdA==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"arm64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"linux\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/linux-ia32\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-P4etWwq6IsReT0E1KHU40bOnzMHoH73aXp96Fs8TIT6z9Hu8G6+0SHSw9i2isWrD2nbx2qo5yUqACgdfVGx7TA==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"ia32\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"linux\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/linux-loong64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-nXW8nqBTrOpDLPgPY9uV+/1DjxoQ7DoB2N8eocyq8I9XuqJ7BiAMDMf9n1xZM9TgW0J8zrquIb/A7s3BJv7rjg==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"loong64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"linux\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/linux-mips64el\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-d5NeaXZcHp8PzYy5VnXV3VSd2D328Zb+9dEq5HE6bw6+N86JVPExrA6O68OPwobntbNJ0pzCpUFZTo3w0GyetQ==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"mips64el\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"linux\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/linux-ppc64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-WHPyeScRNcmANnLQkq6AfyXRFr5D6N2sKgkFo2FqguP44Nw2eyDlbTdZwd9GYk98DZG9QItIiTlFLHJHjxP3FA==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"ppc64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"linux\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/linux-riscv64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-WSxo6h5ecI5XH34KC7w5veNnKkju3zBRLEQNY7mv5mtBmrP/MjNBCAlsM2u5hDBlS3NGcTQpoBvRzqBcRtpq1A==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"riscv64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"linux\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/linux-s390x\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-+8231GMs3mAEth6Ja1iK0a1sQ3ohfcpzpRLH8uuc5/KVDFneH6jtAJLFGafpzpMRO6DzJ6AvXKze9LfFMrIHVQ==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"s390x\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"linux\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/linux-x64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-UYqiqemphJcNsFEskc73jQ7B9jgwjWrSayxawS6UVFZGWrAAtkzjxSqnoclCXxWtfwLdzU+vTpcNYhpn43uP1w==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"x64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"linux\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/netbsd-x64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-iO1c++VP6xUBUmltHZoMtCUdPlnPGdBom6IrO4gyKPFFVBKioIImVooR5I83nTew5UOYrk3gIJhbZh8X44y06A==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"x64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"netbsd\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/openbsd-x64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-e5e4YSsuQfX4cxcygw/UCPIEP6wbIL+se3sxPdCiMbFLBWu0eiZOJ7WoD+ptCLrmjZBK1Wk7I6D/I3NglUGOxg==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"x64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"openbsd\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/sunos-x64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-kDbFRFp0YpTQVVrqUd5FTYmWo45zGaXe0X8E1G/LKFC0v8x0vWrhOWSLITcCn63lmZIxfOMXtCfti/RxN/0wnQ==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"x64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"sunos\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/win32-arm64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-ddYFR6ItYgoaq4v4JmQQaAI5s7npztfV4Ag6NrhiaW0RrnOXqBkgwZLofVTlq1daVTQNhtI5oieTvkRPfZrePg==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"arm64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"win32\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/win32-ia32\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-Wv7QBi3ID/rROT08SABTS7eV4hX26sVduqDOTe1MvGMjNd3EjOz4b7zeexIR62GTIEKrfJXKL9LFxTYgkyeu7g==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"ia32\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"win32\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@esbuild/win32-x64\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-kTdfRcSiDfQca/y9QIkng02avJ+NCaQvrMejlsB3RRv5sE9rRoeBPISaZpKxHELzRxZyLvNts1P27W3wV+8geQ==\",\n\t\t\t\"cpu\": [\n\t\t\t\t\"x64\"\n\t\t\t],\n\t\t\t\"dev\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"win32\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@fortawesome/fontawesome-free\": {\n\t\t\t\"version\": \"6.4.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@fortawesome/fontawesome-free/-/fontawesome-free-6.4.2.tgz\",\n\t\t\t\"integrity\": \"sha512-m5cPn3e2+FDCOgi1mz0RexTUvvQibBebOUlUlW0+YrMjDTPkiJ6VTKukA1GRsvRw+12KyJndNjj0O4AgTxm2Pg==\",\n\t\t\t\"dev\": true,\n\t\t\t\"hasInstallScript\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=6\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@jridgewell/sourcemap-codec\": {\n\t\t\t\"version\": \"1.4.15\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.15.tgz\",\n\t\t\t\"integrity\": \"sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg==\",\n\t\t\t\"dev\": true\n\t\t},\n\t\t\"node_modules/@kurkle/color\": {\n\t\t\t\"version\": \"0.3.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@kurkle/color/-/color-0.3.2.tgz\",\n\t\t\t\"integrity\": \"sha512-fuscdXJ9G1qb7W8VdHi+IwRqij3lBkosAm4ydQtEmbY58OzHXqQhvlxqEkoz0yssNVn38bcpRWgA9PP+OGoisw==\",\n\t\t\t\"dev\": true\n\t\t},\n\t\t\"node_modules/@popperjs/core\": {\n\t\t\t\"version\": \"2.11.8\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@popperjs/core/-/core-2.11.8.tgz\",\n\t\t\t\"integrity\": \"sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==\",\n\t\t\t\"dev\": true,\n\t\t\t\"funding\": {\n\t\t\t\t\"type\": \"opencollective\",\n\t\t\t\t\"url\": \"https://opencollective.com/popperjs\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@vitejs/plugin-vue\": {\n\t\t\t\"version\": \"4.4.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@vitejs/plugin-vue/-/plugin-vue-4.4.0.tgz\",\n\t\t\t\"integrity\": \"sha512-xdguqb+VUwiRpSg+nsc2HtbAUSGak25DXYvpQQi4RVU1Xq1uworyoH/md9Rfd8zMmPR/pSghr309QNcftUVseg==\",\n\t\t\t\"dev\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \"^14.18.0 || >=16.0.0\"\n\t\t\t},\n\t\t\t\"peerDependencies\": {\n\t\t\t\t\"vite\": \"^4.0.0\",\n\t\t\t\t\"vue\": \"^3.2.25\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@vue/compiler-core\": {\n\t\t\t\"version\": \"3.3.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@vue/compiler-core/-/compiler-core-3.3.4.tgz\",\n\t\t\t\"integrity\": \"sha512-cquyDNvZ6jTbf/+x+AgM2Arrp6G4Dzbb0R64jiG804HRMfRiFXWI6kqUVqZ6ZR0bQhIoQjB4+2bhNtVwndW15g==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"@babel/parser\": \"^7.21.3\",\n\t\t\t\t\"@vue/shared\": \"3.3.4\",\n\t\t\t\t\"estree-walker\": \"^2.0.2\",\n\t\t\t\t\"source-map-js\": \"^1.0.2\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@vue/compiler-dom\": {\n\t\t\t\"version\": \"3.3.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@vue/compiler-dom/-/compiler-dom-3.3.4.tgz\",\n\t\t\t\"integrity\": \"sha512-wyM+OjOVpuUukIq6p5+nwHYtj9cFroz9cwkfmP9O1nzH68BenTTv0u7/ndggT8cIQlnBeOo6sUT/gvHcIkLA5w==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"@vue/compiler-core\": \"3.3.4\",\n\t\t\t\t\"@vue/shared\": \"3.3.4\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@vue/compiler-sfc\": {\n\t\t\t\"version\": \"3.3.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@vue/compiler-sfc/-/compiler-sfc-3.3.4.tgz\",\n\t\t\t\"integrity\": \"sha512-6y/d8uw+5TkCuzBkgLS0v3lSM3hJDntFEiUORM11pQ/hKvkhSKZrXW6i69UyXlJQisJxuUEJKAWEqWbWsLeNKQ==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"@babel/parser\": \"^7.20.15\",\n\t\t\t\t\"@vue/compiler-core\": \"3.3.4\",\n\t\t\t\t\"@vue/compiler-dom\": \"3.3.4\",\n\t\t\t\t\"@vue/compiler-ssr\": \"3.3.4\",\n\t\t\t\t\"@vue/reactivity-transform\": \"3.3.4\",\n\t\t\t\t\"@vue/shared\": \"3.3.4\",\n\t\t\t\t\"estree-walker\": \"^2.0.2\",\n\t\t\t\t\"magic-string\": \"^0.30.0\",\n\t\t\t\t\"postcss\": \"^8.1.10\",\n\t\t\t\t\"source-map-js\": \"^1.0.2\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@vue/compiler-ssr\": {\n\t\t\t\"version\": \"3.3.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@vue/compiler-ssr/-/compiler-ssr-3.3.4.tgz\",\n\t\t\t\"integrity\": \"sha512-m0v6oKpup2nMSehwA6Uuu+j+wEwcy7QmwMkVNVfrV9P2qE5KshC6RwOCq8fjGS/Eak/uNb8AaWekfiXxbBB6gQ==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"@vue/compiler-dom\": \"3.3.4\",\n\t\t\t\t\"@vue/shared\": \"3.3.4\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@vue/reactivity\": {\n\t\t\t\"version\": \"3.3.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@vue/reactivity/-/reactivity-3.3.4.tgz\",\n\t\t\t\"integrity\": \"sha512-kLTDLwd0B1jG08NBF3R5rqULtv/f8x3rOFByTDz4J53ttIQEDmALqKqXY0J+XQeN0aV2FBxY8nJDf88yvOPAqQ==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"@vue/shared\": \"3.3.4\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@vue/reactivity-transform\": {\n\t\t\t\"version\": \"3.3.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@vue/reactivity-transform/-/reactivity-transform-3.3.4.tgz\",\n\t\t\t\"integrity\": \"sha512-MXgwjako4nu5WFLAjpBnCj/ieqcjE2aJBINUNQzkZQfzIZA4xn+0fV1tIYBJvvva3N3OvKGofRLvQIwEQPpaXw==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"@babel/parser\": \"^7.20.15\",\n\t\t\t\t\"@vue/compiler-core\": \"3.3.4\",\n\t\t\t\t\"@vue/shared\": \"3.3.4\",\n\t\t\t\t\"estree-walker\": \"^2.0.2\",\n\t\t\t\t\"magic-string\": \"^0.30.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@vue/runtime-core\": {\n\t\t\t\"version\": \"3.3.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@vue/runtime-core/-/runtime-core-3.3.4.tgz\",\n\t\t\t\"integrity\": \"sha512-R+bqxMN6pWO7zGI4OMlmvePOdP2c93GsHFM/siJI7O2nxFRzj55pLwkpCedEY+bTMgp5miZ8CxfIZo3S+gFqvA==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"@vue/reactivity\": \"3.3.4\",\n\t\t\t\t\"@vue/shared\": \"3.3.4\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@vue/runtime-dom\": {\n\t\t\t\"version\": \"3.3.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@vue/runtime-dom/-/runtime-dom-3.3.4.tgz\",\n\t\t\t\"integrity\": \"sha512-Aj5bTJ3u5sFsUckRghsNjVTtxZQ1OyMWCr5dZRAPijF/0Vy4xEoRCwLyHXcj4D0UFbJ4lbx3gPTgg06K/GnPnQ==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"@vue/runtime-core\": \"3.3.4\",\n\t\t\t\t\"@vue/shared\": \"3.3.4\",\n\t\t\t\t\"csstype\": \"^3.1.1\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@vue/server-renderer\": {\n\t\t\t\"version\": \"3.3.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@vue/server-renderer/-/server-renderer-3.3.4.tgz\",\n\t\t\t\"integrity\": \"sha512-Q6jDDzR23ViIb67v+vM1Dqntu+HUexQcsWKhhQa4ARVzxOY2HbC7QRW/ggkDBd5BU+uM1sV6XOAP0b216o34JQ==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"@vue/compiler-ssr\": \"3.3.4\",\n\t\t\t\t\"@vue/shared\": \"3.3.4\"\n\t\t\t},\n\t\t\t\"peerDependencies\": {\n\t\t\t\t\"vue\": \"3.3.4\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/@vue/shared\": {\n\t\t\t\"version\": \"3.3.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/@vue/shared/-/shared-3.3.4.tgz\",\n\t\t\t\"integrity\": \"sha512-7OjdcV8vQ74eiz1TZLzZP4JwqM5fA94K6yntPS5Z25r9HDuGNzaGdgvwKYq6S+MxwF0TFRwe50fIR/MYnakdkQ==\",\n\t\t\t\"dev\": true\n\t\t},\n\t\t\"node_modules/adjust-sourcemap-loader\": {\n\t\t\t\"version\": \"4.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/adjust-sourcemap-loader/-/adjust-sourcemap-loader-4.0.0.tgz\",\n\t\t\t\"integrity\": \"sha512-OXwN5b9pCUXNQHJpwwD2qP40byEmSgzj8B4ydSN0uMNYWiFmJ6x6KwUllMmfk8Rwu/HJDFR7U8ubsWBoN0Xp0A==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"loader-utils\": \"^2.0.0\",\n\t\t\t\t\"regex-parser\": \"^2.2.11\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=8.9\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/anymatch\": {\n\t\t\t\"version\": \"3.1.3\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n\t\t\t\"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"normalize-path\": \"^3.0.0\",\n\t\t\t\t\"picomatch\": \"^2.0.4\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">= 8\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/asynckit\": {\n\t\t\t\"version\": \"0.4.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",\n\t\t\t\"integrity\": \"sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==\",\n\t\t\t\"dev\": true\n\t\t},\n\t\t\"node_modules/axios\": {\n\t\t\t\"version\": \"1.7.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/axios/-/axios-1.7.4.tgz\",\n\t\t\t\"integrity\": \"sha512-DukmaFRnY6AzAALSH4J2M3k6PkaC+MfaAGdEERRWcC9q3/TWQwLpHR8ZRLKTdQ3aBDL64EdluRDjJqKw+BPZEw==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"follow-redirects\": \"^1.15.6\",\n\t\t\t\t\"form-data\": \"^4.0.0\",\n\t\t\t\t\"proxy-from-env\": \"^1.1.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/big.js\": {\n\t\t\t\"version\": \"5.2.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/big.js/-/big.js-5.2.2.tgz\",\n\t\t\t\"integrity\": \"sha512-vyL2OymJxmarO8gxMr0mhChsO9QGwhynfuu4+MHTAW6czfq9humCB7rKpUjDd9YUiDPU4mzpyupFSvOClAwbmQ==\",\n\t\t\t\"dev\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \"*\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/binary-extensions\": {\n\t\t\t\"version\": \"2.2.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz\",\n\t\t\t\"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\n\t\t\t\"dev\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=8\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/bootstrap\": {\n\t\t\t\"version\": \"5.3.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/bootstrap/-/bootstrap-5.3.2.tgz\",\n\t\t\t\"integrity\": \"sha512-D32nmNWiQHo94BKHLmOrdjlL05q1c8oxbtBphQFb9Z5to6eGRDCm0QgeaZ4zFBHzfg2++rqa2JkqCcxDy0sH0g==\",\n\t\t\t\"dev\": true,\n\t\t\t\"funding\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"github\",\n\t\t\t\t\t\"url\": \"https://github.com/sponsors/twbs\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"opencollective\",\n\t\t\t\t\t\"url\": \"https://opencollective.com/bootstrap\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"peerDependencies\": {\n\t\t\t\t\"@popperjs/core\": \"^2.11.8\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/braces\": {\n\t\t\t\"version\": \"3.0.3\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n\t\t\t\"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"fill-range\": \"^7.1.1\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=8\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/chart.js\": {\n\t\t\t\"version\": \"4.4.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/chart.js/-/chart.js-4.4.0.tgz\",\n\t\t\t\"integrity\": \"sha512-vQEj6d+z0dcsKLlQvbKIMYFHd3t8W/7L2vfJIbYcfyPcRx92CsHqECpueN8qVGNlKyDcr5wBrYAYKnfu/9Q1hQ==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"@kurkle/color\": \"^0.3.0\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"pnpm\": \">=7\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/chokidar\": {\n\t\t\t\"version\": \"3.5.3\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz\",\n\t\t\t\"integrity\": \"sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==\",\n\t\t\t\"dev\": true,\n\t\t\t\"funding\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"individual\",\n\t\t\t\t\t\"url\": \"https://paulmillr.com/funding/\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"dependencies\": {\n\t\t\t\t\"anymatch\": \"~3.1.2\",\n\t\t\t\t\"braces\": \"~3.0.2\",\n\t\t\t\t\"glob-parent\": \"~5.1.2\",\n\t\t\t\t\"is-binary-path\": \"~2.1.0\",\n\t\t\t\t\"is-glob\": \"~4.0.1\",\n\t\t\t\t\"normalize-path\": \"~3.0.0\",\n\t\t\t\t\"readdirp\": \"~3.6.0\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">= 8.10.0\"\n\t\t\t},\n\t\t\t\"optionalDependencies\": {\n\t\t\t\t\"fsevents\": \"~2.3.2\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/combined-stream\": {\n\t\t\t\"version\": \"1.0.8\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz\",\n\t\t\t\"integrity\": \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"delayed-stream\": \"~1.0.0\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">= 0.8\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/convert-source-map\": {\n\t\t\t\"version\": \"1.9.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.9.0.tgz\",\n\t\t\t\"integrity\": \"sha512-ASFBup0Mz1uyiIjANan1jzLQami9z1PoYSZCiiYW2FczPbenXc45FZdBZLzOT+r6+iciuEModtmCti+hjaAk0A==\",\n\t\t\t\"dev\": true\n\t\t},\n\t\t\"node_modules/csstype\": {\n\t\t\t\"version\": \"3.1.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/csstype/-/csstype-3.1.2.tgz\",\n\t\t\t\"integrity\": \"sha512-I7K1Uu0MBPzaFKg4nI5Q7Vs2t+3gWWW648spaF+Rg7pI9ds18Ugn+lvg4SHczUdKlHI5LWBXyqfS8+DufyBsgQ==\",\n\t\t\t\"dev\": true\n\t\t},\n\t\t\"node_modules/delayed-stream\": {\n\t\t\t\"version\": \"1.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",\n\t\t\t\"integrity\": \"sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==\",\n\t\t\t\"dev\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=0.4.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/emojis-list\": {\n\t\t\t\"version\": \"3.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/emojis-list/-/emojis-list-3.0.0.tgz\",\n\t\t\t\"integrity\": \"sha512-/kyM18EfinwXZbno9FyUGeFh87KC8HRQBQGildHZbEuRyWFOmv1U10o9BBp8XVZDVNNuQKyIGIu5ZYAAXJ0V2Q==\",\n\t\t\t\"dev\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">= 4\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/esbuild\": {\n\t\t\t\"version\": \"0.18.20\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.18.20.tgz\",\n\t\t\t\"integrity\": \"sha512-ceqxoedUrcayh7Y7ZX6NdbbDzGROiyVBgC4PriJThBKSVPWnnFHZAkfI1lJT8QFkOwH4qOS2SJkS4wvpGl8BpA==\",\n\t\t\t\"dev\": true,\n\t\t\t\"hasInstallScript\": true,\n\t\t\t\"bin\": {\n\t\t\t\t\"esbuild\": \"bin/esbuild\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t},\n\t\t\t\"optionalDependencies\": {\n\t\t\t\t\"@esbuild/android-arm\": \"0.18.20\",\n\t\t\t\t\"@esbuild/android-arm64\": \"0.18.20\",\n\t\t\t\t\"@esbuild/android-x64\": \"0.18.20\",\n\t\t\t\t\"@esbuild/darwin-arm64\": \"0.18.20\",\n\t\t\t\t\"@esbuild/darwin-x64\": \"0.18.20\",\n\t\t\t\t\"@esbuild/freebsd-arm64\": \"0.18.20\",\n\t\t\t\t\"@esbuild/freebsd-x64\": \"0.18.20\",\n\t\t\t\t\"@esbuild/linux-arm\": \"0.18.20\",\n\t\t\t\t\"@esbuild/linux-arm64\": \"0.18.20\",\n\t\t\t\t\"@esbuild/linux-ia32\": \"0.18.20\",\n\t\t\t\t\"@esbuild/linux-loong64\": \"0.18.20\",\n\t\t\t\t\"@esbuild/linux-mips64el\": \"0.18.20\",\n\t\t\t\t\"@esbuild/linux-ppc64\": \"0.18.20\",\n\t\t\t\t\"@esbuild/linux-riscv64\": \"0.18.20\",\n\t\t\t\t\"@esbuild/linux-s390x\": \"0.18.20\",\n\t\t\t\t\"@esbuild/linux-x64\": \"0.18.20\",\n\t\t\t\t\"@esbuild/netbsd-x64\": \"0.18.20\",\n\t\t\t\t\"@esbuild/openbsd-x64\": \"0.18.20\",\n\t\t\t\t\"@esbuild/sunos-x64\": \"0.18.20\",\n\t\t\t\t\"@esbuild/win32-arm64\": \"0.18.20\",\n\t\t\t\t\"@esbuild/win32-ia32\": \"0.18.20\",\n\t\t\t\t\"@esbuild/win32-x64\": \"0.18.20\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/estree-walker\": {\n\t\t\t\"version\": \"2.0.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz\",\n\t\t\t\"integrity\": \"sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==\",\n\t\t\t\"dev\": true\n\t\t},\n\t\t\"node_modules/fill-range\": {\n\t\t\t\"version\": \"7.1.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n\t\t\t\"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"to-regex-range\": \"^5.0.1\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=8\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/follow-redirects\": {\n\t\t\t\"version\": \"1.15.6\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.6.tgz\",\n\t\t\t\"integrity\": \"sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\",\n\t\t\t\"dev\": true,\n\t\t\t\"funding\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"individual\",\n\t\t\t\t\t\"url\": \"https://github.com/sponsors/RubenVerborgh\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=4.0\"\n\t\t\t},\n\t\t\t\"peerDependenciesMeta\": {\n\t\t\t\t\"debug\": {\n\t\t\t\t\t\"optional\": true\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"node_modules/form-data\": {\n\t\t\t\"version\": \"4.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-4.0.0.tgz\",\n\t\t\t\"integrity\": \"sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"asynckit\": \"^0.4.0\",\n\t\t\t\t\"combined-stream\": \"^1.0.8\",\n\t\t\t\t\"mime-types\": \"^2.1.12\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">= 6\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/fsevents\": {\n\t\t\t\"version\": \"2.3.3\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n\t\t\t\"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n\t\t\t\"dev\": true,\n\t\t\t\"hasInstallScript\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"os\": [\n\t\t\t\t\"darwin\"\n\t\t\t],\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/glob-parent\": {\n\t\t\t\"version\": \"5.1.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n\t\t\t\"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"is-glob\": \"^4.0.1\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">= 6\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/immutable\": {\n\t\t\t\"version\": \"4.3.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/immutable/-/immutable-4.3.4.tgz\",\n\t\t\t\"integrity\": \"sha512-fsXeu4J4i6WNWSikpI88v/PcVflZz+6kMhUfIwc5SY+poQRPnaf5V7qds6SUyUN3cVxEzuCab7QIoLOQ+DQ1wA==\",\n\t\t\t\"dev\": true\n\t\t},\n\t\t\"node_modules/is-binary-path\": {\n\t\t\t\"version\": \"2.1.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n\t\t\t\"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"binary-extensions\": \"^2.0.0\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=8\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/is-extglob\": {\n\t\t\t\"version\": \"2.1.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n\t\t\t\"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n\t\t\t\"dev\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=0.10.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/is-glob\": {\n\t\t\t\"version\": \"4.0.3\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n\t\t\t\"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"is-extglob\": \"^2.1.1\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=0.10.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/is-number\": {\n\t\t\t\"version\": \"7.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n\t\t\t\"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n\t\t\t\"dev\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=0.12.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/jquery\": {\n\t\t\t\"version\": \"3.7.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/jquery/-/jquery-3.7.1.tgz\",\n\t\t\t\"integrity\": \"sha512-m4avr8yL8kmFN8psrbFFFmB/If14iN5o9nw/NgnnM+kybDJpRsAynV2BsfpTYrTRysYUdADVD7CkUUizgkpLfg==\",\n\t\t\t\"dev\": true\n\t\t},\n\t\t\"node_modules/jquery-validation\": {\n\t\t\t\"version\": \"1.20.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/jquery-validation/-/jquery-validation-1.20.0.tgz\",\n\t\t\t\"integrity\": \"sha512-c8tg4ltIIP6L7l0bZ79sRzOJYquyjS48kQZ6iv8MJ2r0OYztxtkWYKTReZyU2/zVFYiINB29i0Z/IRNNuJQN1g==\",\n\t\t\t\"dev\": true,\n\t\t\t\"peerDependencies\": {\n\t\t\t\t\"jquery\": \"^1.7 || ^2.0 || ^3.1\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/json5\": {\n\t\t\t\"version\": \"2.2.3\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/json5/-/json5-2.2.3.tgz\",\n\t\t\t\"integrity\": \"sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==\",\n\t\t\t\"dev\": true,\n\t\t\t\"bin\": {\n\t\t\t\t\"json5\": \"lib/cli.js\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=6\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/laravel-vite-plugin\": {\n\t\t\t\"version\": \"0.8.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/laravel-vite-plugin/-/laravel-vite-plugin-0.8.1.tgz\",\n\t\t\t\"integrity\": \"sha512-fxzUDjOA37kOsYq8dP+3oPIlw8/kJVXwu0hOXLun82R1LpV02shGeWGYKx2lbpKffL5I0sfPPjfqbYxuqBluAA==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"picocolors\": \"^1.0.0\",\n\t\t\t\t\"vite-plugin-full-reload\": \"^1.0.5\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=14\"\n\t\t\t},\n\t\t\t\"peerDependencies\": {\n\t\t\t\t\"vite\": \"^3.0.0 || ^4.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/loader-utils\": {\n\t\t\t\"version\": \"2.0.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/loader-utils/-/loader-utils-2.0.4.tgz\",\n\t\t\t\"integrity\": \"sha512-xXqpXoINfFhgua9xiqD8fPFHgkoq1mmmpE92WlDbm9rNRd/EbRb+Gqf908T2DMfuHjjJlksiK2RbHVOdD/MqSw==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"big.js\": \"^5.2.2\",\n\t\t\t\t\"emojis-list\": \"^3.0.0\",\n\t\t\t\t\"json5\": \"^2.1.2\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=8.9.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/lodash\": {\n\t\t\t\"version\": \"4.17.21\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n\t\t\t\"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\n\t\t\t\"dev\": true\n\t\t},\n\t\t\"node_modules/magic-string\": {\n\t\t\t\"version\": \"0.30.5\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/magic-string/-/magic-string-0.30.5.tgz\",\n\t\t\t\"integrity\": \"sha512-7xlpfBaQaP/T6Vh8MO/EqXSW5En6INHEvEXQiuff7Gku0PWjU3uf6w/j9o7O+SpB5fOAkrI5HeoNgwjEO0pFsA==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"@jridgewell/sourcemap-codec\": \"^1.4.15\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/mime-db\": {\n\t\t\t\"version\": \"1.52.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n\t\t\t\"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n\t\t\t\"dev\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">= 0.6\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/mime-types\": {\n\t\t\t\"version\": \"2.1.35\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n\t\t\t\"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"mime-db\": \"1.52.0\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">= 0.6\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/nanoid\": {\n\t\t\t\"version\": \"3.3.6\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-3.3.6.tgz\",\n\t\t\t\"integrity\": \"sha512-BGcqMMJuToF7i1rt+2PWSNVnWIkGCU78jBG3RxO/bZlnZPK2Cmi2QaffxGO/2RvWi9sL+FAiRiXMgsyxQ1DIDA==\",\n\t\t\t\"dev\": true,\n\t\t\t\"funding\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"github\",\n\t\t\t\t\t\"url\": \"https://github.com/sponsors/ai\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"bin\": {\n\t\t\t\t\"nanoid\": \"bin/nanoid.cjs\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \"^10 || ^12 || ^13.7 || ^14 || >=15.0.1\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/normalize-path\": {\n\t\t\t\"version\": \"3.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n\t\t\t\"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n\t\t\t\"dev\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=0.10.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/picocolors\": {\n\t\t\t\"version\": \"1.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz\",\n\t\t\t\"integrity\": \"sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ==\",\n\t\t\t\"dev\": true\n\t\t},\n\t\t\"node_modules/picomatch\": {\n\t\t\t\"version\": \"2.3.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n\t\t\t\"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n\t\t\t\"dev\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=8.6\"\n\t\t\t},\n\t\t\t\"funding\": {\n\t\t\t\t\"url\": \"https://github.com/sponsors/jonschlinkert\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/postcss\": {\n\t\t\t\"version\": \"8.4.31\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz\",\n\t\t\t\"integrity\": \"sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==\",\n\t\t\t\"dev\": true,\n\t\t\t\"funding\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"opencollective\",\n\t\t\t\t\t\"url\": \"https://opencollective.com/postcss/\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"tidelift\",\n\t\t\t\t\t\"url\": \"https://tidelift.com/funding/github/npm/postcss\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"github\",\n\t\t\t\t\t\"url\": \"https://github.com/sponsors/ai\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"dependencies\": {\n\t\t\t\t\"nanoid\": \"^3.3.6\",\n\t\t\t\t\"picocolors\": \"^1.0.0\",\n\t\t\t\t\"source-map-js\": \"^1.0.2\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \"^10 || ^12 || >=14\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/proxy-from-env\": {\n\t\t\t\"version\": \"1.1.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz\",\n\t\t\t\"integrity\": \"sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==\",\n\t\t\t\"dev\": true\n\t\t},\n\t\t\"node_modules/readdirp\": {\n\t\t\t\"version\": \"3.6.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n\t\t\t\"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"picomatch\": \"^2.2.1\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=8.10.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/regex-parser\": {\n\t\t\t\"version\": \"2.2.11\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/regex-parser/-/regex-parser-2.2.11.tgz\",\n\t\t\t\"integrity\": \"sha512-jbD/FT0+9MBU2XAZluI7w2OBs1RBi6p9M83nkoZayQXXU9e8Robt69FcZc7wU4eJD/YFTjn1JdCk3rbMJajz8Q==\",\n\t\t\t\"dev\": true\n\t\t},\n\t\t\"node_modules/resolve-url-loader\": {\n\t\t\t\"version\": \"5.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-5.0.0.tgz\",\n\t\t\t\"integrity\": \"sha512-uZtduh8/8srhBoMx//5bwqjQ+rfYOUq8zC9NrMUGtjBiGTtFJM42s58/36+hTqeqINcnYe08Nj3LkK9lW4N8Xg==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"adjust-sourcemap-loader\": \"^4.0.0\",\n\t\t\t\t\"convert-source-map\": \"^1.7.0\",\n\t\t\t\t\"loader-utils\": \"^2.0.0\",\n\t\t\t\t\"postcss\": \"^8.2.14\",\n\t\t\t\t\"source-map\": \"0.6.1\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=12\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/rollup\": {\n\t\t\t\"version\": \"3.29.5\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/rollup/-/rollup-3.29.5.tgz\",\n\t\t\t\"integrity\": \"sha512-GVsDdsbJzzy4S/v3dqWPJ7EfvZJfCHiDqe80IyrF59LYuP+e6U1LJoUqeuqRbwAWoMNoXivMNeNAOf5E22VA1w==\",\n\t\t\t\"dev\": true,\n\t\t\t\"bin\": {\n\t\t\t\t\"rollup\": \"dist/bin/rollup\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=14.18.0\",\n\t\t\t\t\"npm\": \">=8.0.0\"\n\t\t\t},\n\t\t\t\"optionalDependencies\": {\n\t\t\t\t\"fsevents\": \"~2.3.2\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/sass\": {\n\t\t\t\"version\": \"1.69.3\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/sass/-/sass-1.69.3.tgz\",\n\t\t\t\"integrity\": \"sha512-X99+a2iGdXkdWn1akFPs0ZmelUzyAQfvqYc2P/MPTrJRuIRoTffGzT9W9nFqG00S+c8hXzVmgxhUuHFdrwxkhQ==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"chokidar\": \">=3.0.0 <4.0.0\",\n\t\t\t\t\"immutable\": \"^4.0.0\",\n\t\t\t\t\"source-map-js\": \">=0.6.2 <2.0.0\"\n\t\t\t},\n\t\t\t\"bin\": {\n\t\t\t\t\"sass\": \"sass.js\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=14.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/source-map\": {\n\t\t\t\"version\": \"0.6.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n\t\t\t\"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n\t\t\t\"dev\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=0.10.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/source-map-js\": {\n\t\t\t\"version\": \"1.0.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/source-map-js/-/source-map-js-1.0.2.tgz\",\n\t\t\t\"integrity\": \"sha512-R0XvVJ9WusLiqTCEiGCmICCMplcCkIwwR11mOSD9CR5u+IXYdiseeEuXCVAjS54zqwkLcPNnmU4OeJ6tUrWhDw==\",\n\t\t\t\"dev\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=0.10.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/to-regex-range\": {\n\t\t\t\"version\": \"5.0.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n\t\t\t\"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"is-number\": \"^7.0.0\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \">=8.0\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/vite\": {\n\t\t\t\"version\": \"4.5.5\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/vite/-/vite-4.5.5.tgz\",\n\t\t\t\"integrity\": \"sha512-ifW3Lb2sMdX+WU91s3R0FyQlAyLxOzCSCP37ujw0+r5POeHPwe6udWVIElKQq8gk3t7b8rkmvqC6IHBpCff4GQ==\",\n\t\t\t\"dev\": true,\n\t\t\t\"license\": \"MIT\",\n\t\t\t\"dependencies\": {\n\t\t\t\t\"esbuild\": \"^0.18.10\",\n\t\t\t\t\"postcss\": \"^8.4.27\",\n\t\t\t\t\"rollup\": \"^3.27.1\"\n\t\t\t},\n\t\t\t\"bin\": {\n\t\t\t\t\"vite\": \"bin/vite.js\"\n\t\t\t},\n\t\t\t\"engines\": {\n\t\t\t\t\"node\": \"^14.18.0 || >=16.0.0\"\n\t\t\t},\n\t\t\t\"funding\": {\n\t\t\t\t\"url\": \"https://github.com/vitejs/vite?sponsor=1\"\n\t\t\t},\n\t\t\t\"optionalDependencies\": {\n\t\t\t\t\"fsevents\": \"~2.3.2\"\n\t\t\t},\n\t\t\t\"peerDependencies\": {\n\t\t\t\t\"@types/node\": \">= 14\",\n\t\t\t\t\"less\": \"*\",\n\t\t\t\t\"lightningcss\": \"^1.21.0\",\n\t\t\t\t\"sass\": \"*\",\n\t\t\t\t\"stylus\": \"*\",\n\t\t\t\t\"sugarss\": \"*\",\n\t\t\t\t\"terser\": \"^5.4.0\"\n\t\t\t},\n\t\t\t\"peerDependenciesMeta\": {\n\t\t\t\t\"@types/node\": {\n\t\t\t\t\t\"optional\": true\n\t\t\t\t},\n\t\t\t\t\"less\": {\n\t\t\t\t\t\"optional\": true\n\t\t\t\t},\n\t\t\t\t\"lightningcss\": {\n\t\t\t\t\t\"optional\": true\n\t\t\t\t},\n\t\t\t\t\"sass\": {\n\t\t\t\t\t\"optional\": true\n\t\t\t\t},\n\t\t\t\t\"stylus\": {\n\t\t\t\t\t\"optional\": true\n\t\t\t\t},\n\t\t\t\t\"sugarss\": {\n\t\t\t\t\t\"optional\": true\n\t\t\t\t},\n\t\t\t\t\"terser\": {\n\t\t\t\t\t\"optional\": true\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"node_modules/vite-plugin-full-reload\": {\n\t\t\t\"version\": \"1.0.5\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/vite-plugin-full-reload/-/vite-plugin-full-reload-1.0.5.tgz\",\n\t\t\t\"integrity\": \"sha512-kVZFDFWr0DxiHn6MuDVTQf7gnWIdETGlZh0hvTiMXzRN80vgF4PKbONSq8U1d0WtHsKaFODTQgJeakLacoPZEQ==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"picocolors\": \"^1.0.0\",\n\t\t\t\t\"picomatch\": \"^2.3.1\"\n\t\t\t},\n\t\t\t\"peerDependencies\": {\n\t\t\t\t\"vite\": \"^2 || ^3 || ^4\"\n\t\t\t}\n\t\t},\n\t\t\"node_modules/vue\": {\n\t\t\t\"version\": \"3.3.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/vue/-/vue-3.3.4.tgz\",\n\t\t\t\"integrity\": \"sha512-VTyEYn3yvIeY1Py0WaYGZsXnz3y5UnGi62GjVEqvEGPl6nxbOrCXbVOTQWBEJUqAyTUk2uJ5JLVnYJ6ZzGbrSw==\",\n\t\t\t\"dev\": true,\n\t\t\t\"dependencies\": {\n\t\t\t\t\"@vue/compiler-dom\": \"3.3.4\",\n\t\t\t\t\"@vue/compiler-sfc\": \"3.3.4\",\n\t\t\t\t\"@vue/runtime-dom\": \"3.3.4\",\n\t\t\t\t\"@vue/server-renderer\": \"3.3.4\",\n\t\t\t\t\"@vue/shared\": \"3.3.4\"\n\t\t\t}\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.560546875,
          "content": "{\n\t\"name\": \"froxlor\",\n\t\"private\": true,\n\t\"scripts\": {\n\t\t\"dev\": \"vite\",\n\t\t\"build\": \"vite build\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@fortawesome/fontawesome-free\": \"^6.4.2\",\n\t\t\"@popperjs/core\": \"^2.11.8\",\n\t\t\"@vitejs/plugin-vue\": \"^4.0.0\",\n\t\t\"axios\": \"^1.7.4\",\n\t\t\"bootstrap\": \"^5.3.2\",\n\t\t\"chart.js\": \"^4.4.0\",\n\t\t\"jquery\": \"^3.6.1\",\n\t\t\"jquery-validation\": \"^1.20.0\",\n\t\t\"laravel-vite-plugin\": \"^0.8.0\",\n\t\t\"lodash\": \"^4.17.19\",\n\t\t\"postcss\": \"^8.1.14\",\n\t\t\"resolve-url-loader\": \"^5.0.0\",\n\t\t\"sass\": \"^1.69.3\",\n\t\t\"vite\": \"^4.5.5\",\n\t\t\"vue\": \"^3.2.37\"\n\t},\n\t\"engines\": {\n\t\t\"node\": \">=18\"\n\t}\n}\n"
        },
        {
          "name": "phpcs.xml",
          "type": "blob",
          "size": 1.2783203125,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\"PSR2-Froxlor\">\n\t<description>PSR2 with tabs instead of spaces.</description>\n\t<config name=\"show_progress\" value=\"1\" />\n\t<config name=\"ignore_warnings_on_exit\" value=\"1\" />\n\t<arg name=\"tab-width\" value=\"4\" />\n\t<!-- Show sniff codes in all reports -->\n\t<arg value=\"s\" />\n\t<rule ref=\"PSR2\">\n\t\t<exclude name=\"Generic.WhiteSpace.DisallowTabIndent\" />\n\t\t<exclude name=\"Generic.Files.LineLength\" />\n\t\t<exclude\n\t\t\tname=\"Generic.ControlStructures.InlineControlStructure\" />\n\t\t<exclude\n\t\t\tname=\"Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpen\" />\n\t\t<exclude name=\"Squiz.WhiteSpace.SuperfluousWhitespace.EndLine\" />\n\t</rule>\n\n\t<rule ref=\"PSR1.Classes.ClassDeclaration.MissingNamespace\">\n\t\t<exclude-pattern>tests/</exclude-pattern>\n\t</rule>\n\n\t<rule ref=\"PSR1.Methods.CamelCapsMethodName.NotCamelCaps\">\n\t\t<exclude-pattern>lib/Froxlor/Settings.php</exclude-pattern>\n\t\t<exclude-pattern>lib/Froxlor/FileDir.php</exclude-pattern>\n\t\t<exclude-pattern>lib/Froxlor/Validate/Validate.php</exclude-pattern>\n\t\t<exclude-pattern>lib/Froxlor/Database/Database.php</exclude-pattern>\n\t\t<exclude-pattern>lib/Froxlor/UI/Response.php</exclude-pattern>\n\t</rule>\n\n\t<rule ref=\"PSR1.Files.SideEffects.FoundWithSymbols\">\n\t\t<exclude-pattern>tests/bootstrap.php</exclude-pattern>\n\t</rule>\n</ruleset>\n"
        },
        {
          "name": "phpdox.xml",
          "type": "blob",
          "size": 1.0927734375,
          "content": "<phpdox xmlns=\"http://xml.phpdox.net/config\">\n\t<project name=\"froxlor\" source=\"${basedir}/lib/Froxlor\"\n\t\tworkdir=\"${basedir}/build/phpdox\">\n\t\t<collector publiconly=\"true\" backend=\"parser\">\n\t\t\t<include mask=\"*.php\" />\n\t\t</collector>\n\n\t\t<generator output=\"${basedir}/build\">\n\t\t\t<enrich base=\"${basedir}/build\">\n\t\t\t\t<!-- add phploc output -->\n\t\t\t\t<source type=\"phploc\">\n\t\t\t\t\t<file name=\"logs/phploc.xml\" />\n\t\t\t\t</source>\n\n\t\t\t\t<!-- PHP Code Sniffer findings -->\n\t\t\t\t<source type=\"phpcs\">\n\t\t\t\t\t<file name=\"logs/checkstyle-standard.xml\" />\n\t\t\t\t</source>\n\n                                <!-- PHP Code Sniffer PHPCompatibility -->\n                                <source type=\"phpcs\">\n                                        <file name=\"logs/checkstyle-compat.xml\" />\n                                </source>\n\n\t\t\t\t<!-- PHPMessDetector -->\n\t\t\t\t<source type=\"pmd\">\n\t\t\t\t\t<file name=\"logs/pmd.xml\" />\n\t\t\t\t</source>\n\n\t\t\t\t<!-- PHPUnit Coverage XML <source type=\"phpunit\"> </source> -->\n\t\t\t</enrich>\n\t\t\t<build engine=\"html\" enabled=\"true\" output=\"api\">\n\t\t\t\t<file extension=\"html\" />\n\t\t\t</build>\n\t\t</generator>\n\t</project>\n</phpdox>\n"
        },
        {
          "name": "phpmd.xml",
          "type": "blob",
          "size": 1.2939453125,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\"froxlor ruleset\"\n\txmlns=\"http://pmd.sf.net/ruleset/1.0.0\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd\"\n\txsi:noNamespaceSchemaLocation=\"http://pmd.sf.net/ruleset_xml_schema.xsd\">\n\t<description>\n\t\tfroxlor ruleset.\n\t</description>\n\n\t<rule ref=\"rulesets/design.xml\">\n\t\t<exclude name=\"NumberOfChildren\" />\n\t</rule>\n\t<rule ref=\"rulesets/unusedcode.xml\" />\n\n\t<rule ref=\"rulesets/codesize.xml\">\n\t\t<exclude name=\"CyclomaticComplexity\" />\n\t\t<exclude name=\"ExcessiveClassComplexity\" />\n\t\t<exclude name=\"ExcessiveClassLength\" />\n\t\t<exclude name=\"ExcessiveMethodLength\" />\n\t\t<exclude name=\"NPathComplexity\" />\n\t</rule>\n\n\t<rule ref=\"rulesets/naming.xml\">\n\t\t<exclude name=\"ShortVariable\" />\n\t\t<exclude name=\"LongVariable\" />\n\t</rule>\n\n\t<rule ref=\"rulesets/naming.xml/ShortVariable\">\n\t\t<properties>\n\t\t\t<property name=\"exceptions\" value=\"id,ip\" />\n\t\t</properties>\n\t</rule>\n\n\t<rule ref=\"rulesets/codesize.xml/CyclomaticComplexity\">\n\t\t<priority>1</priority>\n\t\t<properties>\n\t\t\t<property name=\"reportLevel\" value=\"150\" />\n\t\t</properties>\n\t</rule>\n\n\t<rule ref=\"rulesets/codesize.xml/ExcessiveClassComplexity\">\n\t\t<properties>\n\t\t\t<property name=\"maximum\" value=\"300\" />\n\t\t</properties>\n\t</rule>\n\n</ruleset>\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 1.765625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" backupGlobals=\"false\" backupStaticAttributes=\"false\" colors=\"false\" convertErrorsToExceptions=\"true\" convertNoticesToExceptions=\"true\" convertWarningsToExceptions=\"true\" processIsolation=\"false\" stopOnFailure=\"false\" bootstrap=\"tests/bootstrap.php\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\">\n  <coverage processUncoveredFiles=\"true\">\n    <include>\n      <directory suffix=\".php\">./lib/Froxlor</directory>\n    </include>\n    <report>\n      <clover outputFile=\"build/logs/clover.xml\"/>\n      <crap4j outputFile=\"build/logs/crap4j.xml\"/>\n      <html outputDirectory=\"build/coverage\" lowUpperBound=\"35\" highLowerBound=\"70\"/>\n    </report>\n  </coverage>\n  <testsuites>\n    <testsuite name=\"froxlor\">\n      <!-- we need to specify the order of the tests for dependency-reasons -->\n      <directory>tests/Global</directory>\n      <directory>tests/Admins</directory>\n      <directory>tests/Customers</directory>\n      <directory>tests/IpsAndPorts</directory>\n      <directory>tests/Domains</directory>\n      <directory>tests/Cronjobs</directory>\n      <directory>tests/SubDomains</directory>\n      <directory>tests/Certificates</directory>\n      <directory>tests/Ftps</directory>\n      <directory>tests/Emails</directory>\n      <directory>tests/Extras</directory>\n      <directory>tests/Backup</directory>\n      <directory>tests/DomainZones</directory>\n      <directory>tests/Mysqls</directory>\n      <directory>tests/PhpAndFpm</directory>\n      <directory>tests/Traffic</directory>\n      <directory>tests/Froxlor</directory>\n      <directory>tests/Cron</directory>\n    </testsuite>\n  </testsuites>\n  <logging>\n    <junit outputFile=\"build/logs/junit.xml\"/>\n  </logging>\n</phpunit>\n"
        },
        {
          "name": "ssl_certificates.php",
          "type": "blob",
          "size": 2.83203125,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nif (!defined('AREA')) {\n\theader(\"Location: index.php\");\n\texit();\n}\n\nuse Froxlor\\Api\\Commands\\Certificates;\nuse Froxlor\\Api\\Commands\\Domains;\nuse Froxlor\\Api\\Commands\\SubDomains;\nuse Froxlor\\FroxlorLogger;\nuse Froxlor\\UI\\Collection;\nuse Froxlor\\UI\\HTML;\nuse Froxlor\\UI\\Listing;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n// This file is being included in admin_domains and customer_domains\n// and therefore does not need to require lib/init.php\n\n$success_message = \"\";\n$id = (int)Request::any('id');\n\n// do the delete and then just show a success-message and the certificates list again\nif ($action == 'delete') {\n\tHTML::askYesNo('certificate_reallydelete', $filename, [\n\t\t'id' => $id,\n\t\t'page' => $page,\n\t\t'action' => 'deletesure'\n\t], '', [\n\t\t'section' => 'domains',\n\t\t'page' => $page\n\t]);\n} elseif (Request::post('send') == 'send' && $action == 'deletesure' && $id > 0) {\n\ttry {\n\t\t$json_result = Certificates::getLocal($userinfo, [\n\t\t\t'id' => $id\n\t\t])->delete();\n\t\t$success_message = lng('domains.ssl_certificate_removed', [$id]);\n\t} catch (Exception $e) {\n\t\tResponse::dynamicError($e->getMessage());\n\t}\n}\n\n$log->logAction(FroxlorLogger::USR_ACTION, LOG_NOTICE, \"viewed domains::ssl_certificates\");\n\ntry {\n\t$certificates_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/tablelisting.sslcertificates.php';\n\t$collection = (new Collection(Certificates::class, $userinfo))\n\t\t->withPagination($certificates_list_data['sslcertificates_list']['columns'],\n\t\t\t$certificates_list_data['sslcertificates_list']['default_sorting']);\n\tif ($userinfo['adminsession'] == 1) {\n\t\t$collection->has('domains', Domains::class, 'domainid', 'id');\n\t} else {\n\t\t$collection->has('domains', SubDomains::class, 'domainid', 'id');\n\t}\n} catch (Exception $e) {\n\tResponse::dynamicError($e->getMessage());\n}\n\nUI::view('user/table.html.twig', [\n\t'listing' => Listing::format($collection, $certificates_list_data, 'sslcertificates_list'),\n]);\n"
        },
        {
          "name": "ssl_editor.php",
          "type": "blob",
          "size": 3.525390625,
          "content": "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, you can also view it online at\n * https://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  the authors\n * @author     Froxlor team <team@froxlor.org>\n * @license    https://files.froxlor.org/misc/COPYING.txt GPLv2\n */\n\nif (!defined('AREA')) {\n\theader(\"Location: index.php\");\n\texit();\n}\n\nuse Froxlor\\Api\\Commands\\Certificates;\nuse Froxlor\\Api\\Commands\\SubDomains;\nuse Froxlor\\Database\\Database;\nuse Froxlor\\PhpHelper;\nuse Froxlor\\UI\\Panel\\UI;\nuse Froxlor\\UI\\Request;\nuse Froxlor\\UI\\Response;\n\n// This file is being included in admin_domains and customer_domains\n// and therefore does not need to require lib/init.php\n\nif ($action == '' || $action == 'view') {\n\t// get domain\n\ttry {\n\t\t$json_result = SubDomains::getLocal($userinfo, [\n\t\t\t'id' => $id\n\t\t])->get();\n\t} catch (Exception $e) {\n\t\tResponse::dynamicError($e->getMessage());\n\t}\n\t$result_domain = json_decode($json_result, true)['data'];\n\n\tif ($result_domain['email_only']) {\n\t\tResponse::dynamicError(\"There are no ssl-certificates for email only domains.\");\n\t}\n\n\tif (Request::post('send') == 'send') {\n\t\t$do_insert = Request::post('do_insert', 0) == 1;\n\t\ttry {\n\t\t\tif ($do_insert) {\n\t\t\t\tCertificates::getLocal($userinfo, Request::postAll())->add();\n\t\t\t} else {\n\t\t\t\tCertificates::getLocal($userinfo, Request::postAll())->update();\n\t\t\t}\n\t\t} catch (Exception $e) {\n\t\t\tResponse::dynamicError($e->getMessage());\n\t\t}\n\t\t// back to domain overview\n\t\tResponse::redirectTo($filename, [\n\t\t\t'page' => 'domains'\n\t\t]);\n\t}\n\n\t$stmt = Database::prepare(\"SELECT * FROM `\" . TABLE_PANEL_DOMAIN_SSL_SETTINGS . \"`\n\t\tWHERE `domainid`= :domainid\");\n\t$result = Database::pexecute_first($stmt, [\n\t\t\"domainid\" => $id\n\t]);\n\n\t$do_insert = false;\n\t// if no entry can be found, behave like we have empty values\n\tif (!is_array($result) || !isset($result['ssl_cert_file'])) {\n\t\t$result = [\n\t\t\t'ssl_cert_file' => '',\n\t\t\t'ssl_key_file' => '',\n\t\t\t'ssl_ca_file' => '',\n\t\t\t'ssl_cert_chainfile' => ''\n\t\t];\n\t\t$do_insert = true;\n\t}\n\n\t$result = PhpHelper::htmlentitiesArray($result);\n\n\t$ssleditor_data = include_once dirname(__FILE__) . '/lib/formfields/formfield.domain_ssleditor.php';\n\n\t$title = ['title'];\n\t$image = $ssleditor_data['domain_ssleditor']['image'];\n\n\tUI::view('user/form.html.twig', [\n\t\t'formaction' => $linker->getLink(['section' => 'domains', 'page' => 'domainssleditor', 'id' => $id]),\n\t\t'formdata' => $ssleditor_data['domain_ssleditor'],\n\t\t'editid' => $id,\n\t\t'actions_links' => [\n\t\t\t[\n\t\t\t\t'class' => 'btn-outline-secondary',\n\t\t\t\t'href' => $linker->getLink([\n\t\t\t\t\t'section' => 'domains',\n\t\t\t\t\t'page' => 'domains',\n\t\t\t\t\t'action' => 'edit',\n\t\t\t\t\t'id' => $id\n\t\t\t\t]),\n\t\t\t\t'label' => lng('admin.domain_edit'),\n\t\t\t\t'icon' => 'fa-solid fa-pen'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'class' => 'btn-outline-primary',\n\t\t\t\t'href' => $linker->getLink(['section' => 'domains', 'page' => 'overview']),\n\t\t\t\t'label' => lng('admin.domains'),\n\t\t\t\t'icon' => 'fa-solid fa-globe'\n\t\t\t]\n\t\t]\n\t]);\n}\n"
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "vite.config.js",
          "type": "blob",
          "size": 0.625,
          "content": "import { defineConfig } from 'vite';\nimport laravel from 'laravel-vite-plugin';\nimport vue from '@vitejs/plugin-vue';\n\nexport default defineConfig({\n\tbuild: {\n\t\tchunkSizeWarningLimit: 1000,\n\t},\n\tbase: \"./\",\n\tplugins: [\n\t\tlaravel({\n\t\t\tinput: [\n\t\t\t\t'templates/Froxlor/assets/scss/app.scss',\n\t\t\t\t'templates/Froxlor/assets/js/app.js',\n\t\t\t],\n\t\t\thotFile: 'templates/Froxlor/hot',\n\t\t\tbuildDirectory: '../templates/Froxlor/build',\n\t\t\trefresh: true,\n\t\t}),\n\t\tvue({\n\t\t\ttemplate: {\n\t\t\t\ttransformAssetUrls: {\n\t\t\t\t\tbase: null,\n\t\t\t\t\tincludeAbsolute: false,\n\t\t\t\t},\n\t\t\t},\n\t\t}),\n\t],\n\tresolve: {\n\t\talias: {\n\t\t\tvue: 'vue/dist/vue.esm-bundler.js',\n\t\t},\n\t},\n});\n"
        }
      ]
    }
  ]
}