{
  "metadata": {
    "timestamp": 1736711797492,
    "page": 71,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "doctrine-extensions/DoctrineExtensions",
      "stars": 4061,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".docker",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.400390625,
          "content": "# Exclude nonessential files from dist\n/.docker export-ignore\n/.github export-ignore\n/doc export-ignore\n/example export-ignore\n/tests export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/.php-cs-fixer.dist.php export-ignore\n/.yamllint\nCONTRIBUTING.md export-ignore\n/docker-compose.yml export-ignore\nphpstan.neon.dist export-ignore\nphpstan-baseline.neon export-ignore\nrector.php export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1025390625,
          "content": ".php-cs-fixer.cache\nbin\nvendor\ncomposer.lock\ncoverage.xml\nphpstan.neon\n.phpunit.result.cache\nphpunit.xml\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 3.55859375,
          "content": "<?php\n\ndeclare(strict_types=1);\n\n/*\n * This file is part of the Doctrine Behavioral Extensions package.\n * (c) Gediminas Morkevicius <gediminas.morkevicius@gmail.com> http://www.gediminasm.org\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n$header = <<<'HEADER'\n    This file is part of the Doctrine Behavioral Extensions package.\n    (c) Gediminas Morkevicius <gediminas.morkevicius@gmail.com> http://www.gediminasm.org\n    For the full copyright and license information, please view the LICENSE\n    file that was distributed with this source code.\n    HEADER;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->in([\n        __DIR__.'/example',\n        __DIR__.'/src',\n        __DIR__.'/tests',\n    ])\n    ->append([__FILE__, __DIR__.'/rector.php'])\n    ->exclude([\n        __DIR__.'/tests/data',\n    ]);\n\nreturn (new PhpCsFixer\\Config())\n    ->setRules([\n        '@DoctrineAnnotation' => true,\n        '@PHP71Migration' => true,\n        '@PHP71Migration:risky' => true,\n        '@PHP74Migration' => true,\n        '@PHP74Migration:risky' => true,\n        '@PHPUnit84Migration:risky' => true,\n        '@PSR2' => true,\n        '@Symfony' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'blank_line_before_statement' => true,\n        'combine_consecutive_issets' => true,\n        'combine_consecutive_unsets' => true,\n        // @todo: Change the following rule to `true` in the next major release.\n        'declare_strict_types' => false,\n        'error_suppression' => true,\n        'global_namespace_import' => ['import_classes' => false, 'import_constants' => false, 'import_functions' => false],\n        'header_comment' => ['header' => $header],\n        'is_null' => false,\n        'list_syntax' => ['syntax' => 'short'],\n        'modernize_types_casting' => true,\n        'no_homoglyph_names' => true,\n        'no_null_property_initialization' => true,\n        'no_superfluous_elseif' => true,\n        'no_superfluous_phpdoc_tags' => false,\n        'no_unset_on_property' => true,\n        'no_useless_else' => true,\n        'nullable_type_declaration_for_default_null_value' => ['use_nullable_type_declaration' => true],\n        'ordered_class_elements' => true,\n        'ordered_imports' => ['sort_algorithm' => 'alpha'],\n        'phpdoc_order' => ['order' => ['param', 'throws', 'return']],\n        'phpdoc_separation' => ['groups' => [\n            ['Gedmo\\\\*'],\n            ['ODM\\\\*'],\n            ['ORM\\\\*'],\n        ]],\n        'phpdoc_summary' => false,\n        'phpdoc_to_comment' => false,\n        'php_unit_construct' => true,\n        'php_unit_dedicate_assert' => true,\n        'php_unit_dedicate_assert_internal_type' => true,\n        'php_unit_method_casing' => false,\n        'php_unit_mock' => true,\n        'php_unit_namespaced' => true,\n        'php_unit_set_up_tear_down_visibility' => true,\n        'php_unit_strict' => true,\n        'php_unit_test_annotation' => ['style' => 'prefix'],\n        'php_unit_test_case_static_method_calls' => true,\n        'psr_autoloading' => true,\n        'random_api_migration' => true,\n        'return_assignment' => true,\n        'self_accessor' => true,\n        'static_lambda' => true,\n        'strict_param' => true,\n        'ternary_to_null_coalescing' => true,\n        'trailing_comma_in_multiline' => [\n            'elements' => [\n                'arrays',\n            ],\n        ],\n        // @todo: Change the following rule to `true` in the next major release.\n        'void_return' => false,\n    ])\n    ->setFinder($finder)\n    ->setRiskyAllowed(true)\n    ->setUsingCache(true);\n"
        },
        {
          "name": ".yamllint",
          "type": "blob",
          "size": 0.2646484375,
          "content": "ignore: vendor/\n\nextends: default\n\nrules:\n  comments: disable\n  comments-indentation: disable\n  document-start: disable\n  empty-lines:\n    max: 1\n    max-start: 0\n    max-end: 0\n  line-length: disable\n  truthy:\n    allowed-values: ['true', 'false']\n    check-keys: false\n"
        },
        {
          "name": "CHANGELOG-v2.4.x.md",
          "type": "blob",
          "size": 1.6611328125,
          "content": "# Doctrine Extensions Changelog - v2.4.x\n\n:warning: This is an archived changelog from the v2.4.x history of Doctrine Extensions.\nView the main [CHANGELOG.md](CHANGELOG.md) file for the most recent version history.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n---\n\n## [2.4.42] - 2020-08-20\n### Translatable\n#### Fixed\n- Allow for both falsy and null-fallback translatable values (#2152)\n\n## [2.4.41] - 2020-05-10\n### Sluggable\n#### Fixed\n- Remove PHPDoc samples as they are interpreted by Annotation Reader (#2120)\n\n## [2.4.40] - 2020-04-27\n### SoftDeleteable\n#### Fixed\n- Invalidate query cache when toggling filter on/off for an entity (#2112)\n\n## [2.4.39] - 2020-01-18\n### Tree\n#### Fixed\n- The value of path source property is cast to string type for Materialized Path Tree strategy (#2061)\n\n## [2.4.38] - 2019-11-08\n### Global / Shared\n#### Fixed\n- Add `parent::__construct()` calls to Listeners w/ custom constructors (#2012)\n- Add upcoming Doctrine ODM 2.0 to `composer.json` conflicts (#2027)\n\n### Loggable\n#### Fixed\n- Added missing string casting of `objectId` in `LogEntryRepository::revert()` method (#2009)\n\n### ReferenceIntegrity\n#### Fixed\n- Get class from meta in ReferenceIntegrityListener (#2021)\n\n### Translatable\n#### Fixed\n- Return default AST executor instead of throwing Exception in Walker (#2018)\n- Fix duplicate inherited properties (#2029)\n\n### Tree\n#### Fixed\n- Remove hard-coded parent column name in repository prev/next sibling queries (#2020)\n\n## [2.4.37] - 2019-03-17\n### Translatable\n#### Fixed\n- Bugfix to load null value translations (#1990)\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 17.2255859375,
          "content": "# Doctrine Extensions Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\nEach release should include sub-headers for the Extension above the types of\nchanges, in order to more easily recognize how an Extension has changed in\na release.\n\n```markdown\n## [3.6.1] - 2022-07-26\n### Fixed\n- Sortable: Fix issue with add+delete position synchronization (#1932)\n```\n\n---\n\n## [Unreleased]\n### Deprecated\n- Sluggable: Annotation-specific mapping parameters (#2837)\n\n### Fixed\n- Fix regression with `doctrine/dbal` >= 4.0 that caused MariaDB to improperly attempt LONGTEXT casting in `TranslationWalker` (issue #2887)\n- Tree: allow usage of UuidV4 as path source with the materialized path strategy\n\n## [3.17.1] - 2024-10-07\n### Fixed\n- Removed invalid `@note` annotation from `AbstractLogEntry::$data`, which was causing issues in projects using annotation parsers\n\n## [3.17.0] - 2024-10-06\n### Added\n- Support for `doctrine/dbal` >= 4.0 with all extensions, except Loggable\n\n### Changed\n- Extend `Throwable` from `Gedmo\\Exception` interface\n\n## [3.16.1] - 2024-06-25\n### Fixed\n- Restructure the SqlWalkerCompat trait to fix optimized autoloading\n\n## [3.16.0] - 2024-06-24\n### Added\n- Support for `doctrine/orm` 3\n- Blameable: Added UUID in allowed types list for Blameable fields in Annotation\n- Blameable: Allow ascii_string to validTypes (issue #2726)\n- Sluggable: Allow ascii_string to validTypes\n- IpTraceable: Allow ascii_string to validTypes\n- Sluggable: Use `TranslationWalker` hint when looking for similar slugs (`getSimilarSlugs` method) for entities which implement `Translatable` interface and have `uniqueOverTranslations: true` Slug option (#100, #2530)\n\n### Deprecated\n- Support for defining mapping information from annotations has been deprecated and will be removed in 4.0, use PHP attributes mapping instead.\n\n### Fixed\n- Tree: Cascade remove not being triggered on entity children at `MaterializedPath::removeNode()`.\n- Tree: Materialize Path strategy when using autogenerated identifiers.\n\n## [3.15.0] - 2024-02-12\n### Added\n- SoftDeleteable: `Gedmo\\SoftDeleteable\\Event\\PreSoftDeleteEventArgs` and\n  `Gedmo\\SoftDeleteable\\Event\\PostSoftDeleteEventArgs` classes.\n- Add support for injecting a `psr/clock` implementation into event adapters\n  that create new `DateTimeInterface` objects (SoftDeleteable and Timestampable)\n\n### Changed\n- Make doctrine/annotations an optional dependency.\n- Remove `@internal` annotation from `Gedmo\\Mapping\\Driver\\AttributeReader`.\n\n### Deprecated\n- Do not add type-hinted parameters `Gedmo\\SoftDeleteable\\Event\\PreSoftDeleteEventArgs` and\n  `Gedmo\\SoftDeleteable\\Event\\PostSoftDeleteEventArgs` classes to `preSoftDelete` and `postSoftDelete` events.\n- The `createLifecycleEventArgsInstance()` method on `Gedmo\\Mapping\\Event\\AdapterInterface`\n  implementations is deprecated, use your own subclass of `Doctrine\\Persistence\\Event\\LifecycleEventArgs` as needed.\n\n### Fixed\n- Add conflict against \"doctrine/orm\" >= 3.\n- Add conflict against \"doctrine/dbal\" => 4.\n\n## [3.14.0] - 2023-12-03\n### Added\n- Support for Symfony 7\n- Tree: Added `@template` and `@template-extends` annotations to the Tree repositories\n\n### Changed\n- Dropped support for PHP < 7.4\n- Dropped support for Symfony < 5.4\n- Dropped support for doctrine/dbal < 3.2\n\n### Deprecated\n- Calling `Gedmo\\Mapping\\Event\\Adapter\\ORM::getObjectManager()` and `getObject()` on EventArgs that do not implement `getObjectManager()` and `getObject()` (such as old EventArgs implementing `getEntityManager()` and `getEntity()`) \n- Calling `Gedmo\\Uploadable\\Event\\UploadableBaseEventArgs::getEntityManager()` and `getEntity()`. Call `getObjectManager()` and `getObject()` instead.\n\n## [3.13.0] - 2023-09-06\n### Fixed\n- References: fixed condition in `XML` Driver that did not allow to retrieve from the entity definition the `mappedBy` and `inversedBy` fields.\n- Fix bug collecting metadata for inherited mapped classes\n\n## [3.12.0] - 2023-07-08\n### Added\n- Tree: `setSibling()` and `getSibling()` methods in the `Node` interface through the BC `@method` annotation\n- Tree: Support array of fields and directions in the `$sortByField` and `$direction` parameters at `AbstractTreeRepository::recover()`\n- Loggable: Support for composite identifiers\n\n### Changed\n- Named arguments have precedence over the values passed in the `$data` array in annotation classes at `Gedmo\\Mapping\\Annotation\\`\n  namespace\n- Removed conflict against \"doctrine/cache\" < 1.11, as this library is not used\n- Return type from `TranslationProxy::__set()` (from `TranslationProxy` to `void`)\n\n### Fixed\n- Tree: Creation of dynamic `Node::$sibling` property, which is deprecated as of PHP >= 8.2\n- Return type from `TranslationProxy::__set()` in order to honor its original signature (`void`)\n\n### Deprecated\n- Tree: Not implementing `Node` interface in classes that are used as nodes\n- Implementing the `Gedmo\\Tool\\WrapperInterface::getIdentifier()` method without the second argument (`$flatten`) is deprecated and will\n  be required in version 4.0\n\n## [3.11.1] - 2023-02-20\n### Fixed\n- Loggable: Remove unfixable deprecation when extending `LoggableListener`\n- Remove unfixable deprecations when extending repository classes\n- Fix error caused by the attempt of \"doctrine/annotations\" parsing a `@note` annotation\n\n## [3.11.0] - 2023-01-26\n### Added\n- Tree: [NestedSet] Added \"base\" property for tree level annotation\n- Tree: [NestedSet] Added `$options` as parameter 2 in `getPathQueryBuilder()` to specify whether you want the starting node included or not\n- Tree: [NestedSet] Added `getPathAsString()` method to entity repository\n- Tree: [NestedSet] Added \"treeRootNode\" option in `verify()` in case you want to verify a single tree in a forest\n- Tree: [NestedSet] Added `recoverFast()` method for where speed is more important than safety and entity manager state\n- Tree: [NestedSet] Added options to `recover()` for sibling order, tree root in a forest, verification skip and auto-flushing\n- Tree: [NestedSet] Verify and recover wrong levels in nested set\n\n### Added\n- Tree: Add `Nested::ALLOWED_NODE_POSITIONS` constant in order to expose the available node positions\n- Support for `doctrine/collections` 2.0\n- Support for `doctrine/event-manager` 2.0\n- Loggable: Add `LogEntryInterface` interface in order to be implemented by log entry models\n\n### Fixed\n- Sortable: Fix return value check of Comparable interface (#2541)\n- Uploadable: Retrieve the correct metadata when uploading entities of different classes (#2071)\n- Translatable: Fix property existence check at `TranslatableListener::getTranslatableLocale()`\n\n### Deprecated\n- In order to close the API, `@final` and `@internal` annotations were added to all non base classes, which means that extending\n  these classes is deprecated and can not be inherited in version 4.0.\n- Sortable: Accepting a return type other than \"integer\" from `Comparable::compareTo()` is deprecated in `SortableListener::postFlush()`.\n  This will not be accepted in version 4.0.\n- Deprecate the annotation reader being allowed to be any object.\n  In 4.0, a `Doctrine\\Common\\Annotations\\Reader` or `Gedmo\\Mapping\\Driver\\AttributeReader` instance will be required.\n- `Gedmo\\DoctrineExtensions::registerAnnotations()` is deprecated and will be removed in 4.0, the method has been no-op'd as all\n  supported `doctrine/annotations` versions support autoloading\n- Loggable: Constants `LoggableListener::ACTION_CREATE`, `LoggableListener::ACTION_UPDATE` and `LoggableListener::ACTION_REMOVE`\n  are deprecated. Use `LogEntryInterface::ACTION_CREATE`, `LogEntryInterface::ACTION_UPDATE` and `LogEntryInterface::ACTION_REMOVE`\n  instead.\n\n## [3.10.0] - 2022-11-14\n### Changed\n- Bump \"doctrine/event-manager\" dependency from ^1.0 to ^1.2.\n\n### Fixed\n- Tree: TreeRoot without rootIdentifierMethod when calling getNextSiblings (#2518)\n- Sortable: Fix duplicated positions when manually updating position on more than one object (#2439)\n\n## [3.9.0] - 2022-09-22\n### Fixed\n- Tree: Allow sorting children by a ManyToOne relation (#2492)\n- Tree: Fix passing `null` to `abs()` function\n- Timestampable: Use an attribute in Timestampable attribute docs\n\n### Deprecated\n- Tree: Passing `null` as argument 8 to `Nested::shiftRangeRL()`\n\n## [3.8.0] - 2022-07-17\n### Added\n- Sluggable: Add support for `DateTimeImmutable` fields\n- Tree: [NestedSet] `childrenQueryBuilder()` to allow specifying sort order separately for each field\n- Tree: [NestedSet] Added option to reorder only direct children in `reorder()` method\n\n### Changed\n- Tree: In `ClosureTreeRepository::removeFromTree()` and `NestedTreeRepository::removeFromTree()` when something fails in the transaction, it uses the `code` from the original exception to construct the `\\Gedmo\\Exception\\RuntimeException` instance instead of `null`.\n\n### Fixed\n- Sluggable: Cast slug to string before passing it as argument 2 to `preg_match()` (#2473)\n- Sortable: [SortableGroup] Fix sorting date columns in SQLite (#2462).\n- PHPDoc of `AbstractMaterializedPath::removeNode()` and `AbstractMaterializedPath::getChildren()`\n- Retrieving the proper metadata cache from Doctrine when using a CacheWarmer.\n\n## [3.7.0] - 2022-05-17\n### Added\n- Add support for doctrine/persistence 3\n\n### Changed\n- Removed call to deprecated `ClassMetadataFactory::getCacheDriver()` method.\n- Dropped support for doctrine/mongodb-odm < 2.3.\n- Make doctrine/cache an optional dependency.\n\n### Fixed\n- Loggable: Fix `appendNumber` renaming for files without extension (#2228)\n\n## [3.6.0] - 2022-03-19\n### Added\n- Translatable: Add defaultTranslationValue option to allow null or string value (#2167). TranslatableListener can hydrate object properties with null value, but it may cause a Type error for non-nullable getter upon a missing translation.\n\n### Fixed\n- Uploadable: `FileInfoInterface::getSize()` return type declaration (#2413).\n- Tree: Setting a new Tree Root when Tree Parent is `null`.\n- Tree: update cache key used by Closure to match Doctrine's one (#2416).\n- Tree: persist order does not affect entities on Closure (#2432)\n\n## [3.5.0] - 2022-01-10\n### Added\n- SoftDeleteable: Support to use annotations as attributes on PHP >= 8.0.\n- Blameable: Support to use annotations as attributes on PHP >= 8.0.\n- IpTraceable: Support to use annotations as attributes on PHP >= 8.0.\n- Sortable: Support to use annotations as attributes on PHP >= 8.0.\n- Sluggable: Support to use annotations as attributes on PHP >= 8.0.\n- Uploadable: Support to use annotations as attributes on PHP >= 8.0.\n- Tree: Support to use annotations as attributes on PHP >= 8.0.\n- References: Support to use annotations as attributes on PHP >= 8.0.\n- ReferenceIntegrity: Support to use annotations as attributes on PHP >= 8.0.\n- SoftDeleteable: Support for custom column types (like Carbon).\n- Timestampable: Support for custom column types (like Carbon).\n- Translatable: Added an index to `Translation` entity to speed up searches using\n  `Gedmo\\Translatable\\Entity\\Repository\\TranslationRepository::findTranslations()` method.\n- `Gedmo\\Mapping\\Event\\AdapterInterface::getObject()` method.\n\n### Fixed\n- Blameable, IpTraceable, Timestampable: Type handling for the tracked field values configured in the origin field.\n- Loggable: Using only PHP 8 attributes.\n- References: Avoid deprecations using LazyCollection with PHP 8.1\n- Tree: Association mapping problems using Closure tree strategy (by manually defining mapping on the closure entity).\n- Wrong PHPDoc type declarations.\n- Avoid calling deprecated `AbstractClassMetadataFactory::getCacheDriver()` method.\n- Avoid deprecations using `doctrine/mongodb-odm` >= 2.2\n- Translatable: `Gedmo\\Translatable\\Document\\Repository\\TranslationRepository::findObjectByTranslatedField()`\n  method accessing a non-existing key.\n\n### Deprecated\n- Tree: When using Closure tree strategy, it is deprecated not defining the mapping associations of the closure entity.\n- `Gedmo\\Tool\\Logging\\DBAL\\QueryAnalizer` class without replacement.\n- Using YAML mapping is deprecated, you SHOULD migrate to attributes, annotations or XML.\n- `Gedmo\\Mapping\\Event\\AdapterInterface::__call()` method.\n- `Gedmo\\Tool\\Wrapper\\AbstractWrapper::clear()` method.\n- `Gedmo\\Tool\\Wrapper\\WrapperInterface::populate()` method.\n\n### Changed\n- In order to use a custom cache for storing configuration of an extension, the user has to call `setCacheItemPool()`\n  on the extension listener passing an instance of `Psr\\Cache\\CacheItemPoolInterface`.\n\n## [3.4.0] - 2021-12-05\n### Added\n- PHP 8 Attributes support for Doctrine MongoDB to document & traits.\n- Support for doctrine/dbal >=3.2.\n- Timestampable: Support to use annotations as attributes on PHP >= 8.0.\n- Loggable: Support to use annotations as attributes on PHP >= 8.0.\n\n### Changed\n- Translatable: Dropped support for other values than \"true\", \"false\", \"1\" and \"0\" in the `fallback` attribute of the `translatable`\n  element in the XML mapping.\n- Tree: Dropped support for other values than \"true\", \"false\", \"1\" and \"0\" in the `activate-locking` attribute of the `tree`\n  element in the XML mapping.\n- Tree: Dropped support for other values than \"true\", \"false\", \"1\" and \"0\" in the `append_id`, `starts_with_separator` and\n  `ends_with_separator` attributes of the `tree-path` element in the XML mapping.\n- Dropped support for doctrine/dbal < 2.13.1.\n- The third argument of `Gedmo\\SoftDeleteable\\Query\\TreeWalker\\Exec\\MultiTableDeleteExecutor::__construct()` requires a `Doctrine\\ORM\\Mapping\\ClassMetadata` instance.\n\n## [3.3.1] - 2021-11-18\n### Fixed\n- Translatable: Using ORM/ODM attribute mapping and translatable annotations.\n- Tree: Missing support for `tree-path-hash` fields in XML mapping.\n- Tree: Check for affected rows at `ClosureTreeRepository::cleanUpClosure()` and `Closure::updateNode()`.\n- `Gedmo\\Mapping\\Driver\\Xml::_loadMappingFile()` behavior in scenarios where `libxml_disable_entity_loader(true)` was previously\n  called.\n- Loggable: Missing support for `versioned` fields at `attribute-override` in XML mapping.\n\n## [3.3.0] - 2021-11-15\n### Added\n- Support to use Translatable annotations as attributes on PHP >= 8.0.\n\n### Deprecated\n- `Gedmo\\Mapping\\Driver\\File::$_paths` property and `Gedmo\\Mapping\\Driver\\File::setPaths()` method are deprecated and will\n  be removed in version 4.0, as they are not used.\n\n### Fixed\n- Value passed in the `--config` option to `fix-cs` Composer script.\n- Return value for `replaceRelative()` and `replaceInverseRelative()` at `Gedmo\\Sluggable\\Mapping\\Event\\Adapter\\ODM` if the\n  query result does not implement `Doctrine\\ODM\\MongoDB\\Iterator\\Iterator`.\n- Restored compatibility with doctrine/orm >= 2.10.2 (#2272).\n  Since doctrine/orm 2.10, `Doctrine\\ORM\\UnitOfWork` relies on SPL object IDs instead of hashes, thus we need to adapt our codebase in order to be compatible with this change.\n  As `Doctrine\\ODM\\MongoDB\\UnitOfWork` from doctrine/mongodb-odm still uses `spl_object_hash()`, all `spl_object_hash()` calls were replaced by `spl_object_id()` to make it work with both ORM and ODM managers.\n\n## [3.2.0] - 2021-10-05\n### Added\n- PHP 8 Attributes for Doctrine ORM to entities & traits (#2251)\n\n### Fixed\n- Removed legacy checks targeting older versions of PHP (#2201)\n- Added missing XSD definitions (#2244)\n- Replaced undefined constants from `Doctrine\\DBAL\\Types\\Type` at `Gedmo\\Translatable\\Mapping\\Event\\Adapter\\ORM::foreignKey()` (#2250)\n- Add conflict against \"doctrine/orm\" >=2.10 in order to guarantee the schema extension (see https://github.com/doctrine/orm/pull/8852) (#2255)\n\n## [3.1.0] - 2021-06-22\n### Fixed\n- Allow installing doctrine/cache 2.0 (thanks @alcaeus!)\n- Make doctrine/cache a dev dependency\n\n## [3.0.5] - 2021-04-23\n### Fixed\n- Use path_separator when removing children (#2217)\n\n## [3.0.4] - 2021-03-27\n### Fixed\n- Add hacky measure to resolve incompatibility with DoctrineBundle 2.3 [#2211](https://github.com/doctrine-extensions/DoctrineExtensions/pull/2211)\n\n## [3.0.3] - 2021-01-23\n### Fixed\n- Add PHP 8 compatibility to `composer.json`, resolving minor function parameter deprecations [#2194](https://github.com/Atlantic18/DoctrineExtensions/pull/2194)\n\n## [3.0.2] - 2021-01-23\n- Ignore; tag & version mismatch\n\n## [3.0.1] - 2021-01-23\n- Ignore; wrong branch published\n\n## [3.0.0] - 2020-09-23\n### Notable & Breaking Changes\n- Minimum PHP version requirement of 7.2\n- Source files moved from `/lib/Gedmo` to `/src`\n- Added compatibility for `doctrine/common` 3.0 and `doctrine/persistence` 2.0\n- All string column type annotations changed to 191 character length (#1941)\n- Removed support for `\\Zend_date` date format [#2163](https://github.com/Atlantic18/DoctrineExtensions/pull/2163)\n- Renamed `Zend Framework` to `Laminas` [#2163](https://github.com/Atlantic18/DoctrineExtensions/pull/2163)\n\nChanges below marked ⚠️ may also be breaking, if you have extended DoctrineExtensions.\n\n### MongoDB\n- Requires the `ext-mongodb` PHP extension. Usage of `ext-mongo` is deprecated and will be removed in the next major version.\n- Minimum Doctrine MongoDB ODM requirement of 2.0\n- Usages of `\\MongoDate` replaced with `MongoDB\\BSON\\UTCDateTime`\n\n### Global / Shared\n#### Fixed\n- Removed `null` parameter from `Doctrine\\Common\\Cache\\Cache::save()` calls (#1996)\n\n### Tree\n#### Fixed\n- The value of path source property is cast to string type for Materialized Path Tree strategy (#2061)\n\n### SoftDeleteable\n#### Changed\n- ⚠️ Generate different Date values based on column type (#2115)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.140625,
          "content": "# Contributing to Doctrine Extensions\n\nThank you for your interest in contributing to Doctrine Extensions!\n\n## Which Branch Should I Contribute To?\n\nAll pull requests (new features and bug fixes) should target the `main` branch.\nAnything that can be back-ported to v2.4.x will be done by maintainers.\n\n:warning: The `v.2.4.x` branch has been marked as legacy/deprecated.\n\n## Pull Request Titles\n\nPlease include the name(s) of the related extensions as a \"tag\" in the\npull request title.\n\n> [Tree] Add a new Oak Tree branching style\n  \n## Changelog\n\nAll updates must include an entry in the [Changelog](/CHANGELOG.md).\nPut your entry in the `[Unreleased]` section at the top, under the\ncorresponding Extension and Category.\n\nIf there is a related GitHub issue, add it as a suffix to your change.\n\n```\n## [Unreleased]\n### Fixed\n- Loggable: Allow emoji in the docs (#123)\n```\n\n## What You Can Contribute\n\nWant to contribute but aren't sure where to start? Check out our\n[Issue Board](https://github.com/Atlantic18/DoctrineExtensions/issues)!\nThere are lots of opportunities for helping other users with their issue,\nor contributing a reported bug fix or feature request.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.123046875,
          "content": "Copyright (c) 2011-2015 Gediminas Morkevičius\n\nThe MIT license, reference http://www.opensource.org/licenses/mit-license.php\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.013671875,
          "content": "all:\n\t@echo \"Please choose a task.\"\n.PHONY: all\n\nlint: lint-composer lint-yaml lint-xml\n.PHONY: lint\n\nlint-composer:\n\tcomposer-normalize --dry-run\n\tcomposer validate\n.PHONY: lint-composer\n\nlint-xml:\n\tfind './tests/.' \\( -name '*.xml' \\) \\\n\t\t| while read xmlFile; \\\n\tdo \\\n\t\tXMLLINT_INDENT='    ' xmllint --encode UTF-8 --format \"$$xmlFile\"|diff - \"$$xmlFile\"; \\\n\t\tif [ $$? -ne 0 ]; then echo \"$$xmlFile\" && exit 1; fi; \\\n\tdone\n\n.PHONY: lint-xml\n\nlint-doctrine-xml-schema:\n\tfind './tests/Gedmo/Mapping/Driver/Xml/.' \\( -name '*.xml' \\) \\\n\t\t| while read xmlFile; \\\n\tdo \\\n\t\txmllint --encode UTF-8 --format \"$$xmlFile\" --schema \"./doctrine-mapping.xsd\"; \\\n\t\tif [ $$? -ne 0 ]; then echo \"$$xmlFile\" && exit 1; fi; \\\n\tdone\n\n.PHONY: lint-doctrine-xml-schema\n\ncs-fix-doctrine-xml:\n\tfind './tests/Gedmo/Mapping/Driver/Xml/.' \\( -name '*.xml' \\) \\\n\t\t| while read xmlFile; \\\n\tdo \\\n\t\tXMLLINT_INDENT='    ' xmllint --encode UTF-8 --format \"$$xmlFile\" --output \"$$xmlFile\"; \\\n\tdone\n.PHONY: cs-fix-doctrine-xml\n\nlint-yaml:\n\tyamllint .\n\n.PHONY: lint-yaml\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.0537109375,
          "content": "# Doctrine Behavioral Extensions\n\n[![Continuous Integration](https://github.com/doctrine-extensions/DoctrineExtensions/actions/workflows/continuous-integration.yml/badge.svg)](https://github.com/doctrine-extensions/DoctrineExtensions/actions/workflows/continuous-integration.yml)\n[![Quality Assurance](https://github.com/doctrine-extensions/DoctrineExtensions/actions/workflows/qa.yml/badge.svg)](https://github.com/doctrine-extensions/DoctrineExtensions/actions/workflows/qa.yml)\n[![Coding Standards](https://github.com/doctrine-extensions/DoctrineExtensions/actions/workflows/coding-standards.yml/badge.svg)](https://github.com/doctrine-extensions/DoctrineExtensions/actions/workflows/coding-standards.yml)\n[![Latest Stable Version](https://poser.pugx.org/gedmo/doctrine-extensions/version)](https://packagist.org/packages/gedmo/doctrine-extensions)\n\nThis package contains extensions for Doctrine ORM and MongoDB ODM that offer new functionality or tools to use Doctrine\nmore efficiently. These behaviors can be easily attached to the event system of Doctrine and handle the records being\nflushed in a behavioral way.\n\n---\n\n## Doctrine Extensions 3.0 Released :tada:\n\n3.0 focuses on refreshing this package for today's PHP. This includes:\n\n- Bumping minimum version requirements of PHP, Doctrine, and other dependencies\n- Implementing support for the latest Doctrine MongoDB & Common packages\n- Updating the test suite, add code and style standards, and other needed build tools\n- Cleaning up documentation, code, comments, etc.\n\n[Read the Upgrade Doc for more info.](/doc/upgrading/upgrade-v2.4-to-v3.0.md)\n\n---\n\n## Installation\n\n    composer require gedmo/doctrine-extensions\n\n* [Symfony](/doc/frameworks/symfony.md)\n* [Laravel](/doc/frameworks/laravel.md)\n* [Laminas](/doc/frameworks/laminas.md)\n\n### Upgrading\n\n* [From 2.4.x to 3.0](/doc/upgrading/upgrade-v2.4-to-v3.0.md)\n\n## Extensions\n\n#### ORM & MongoDB ODM\n\n- [**Blameable**](/doc/blameable.md) - updates string or reference fields on create, update and even property change with a string or object (e.g. user).\n- [**Loggable**](/doc/loggable.md) - helps tracking changes and history of objects, also supports version management.\n- [**Sluggable**](/doc/sluggable.md) - urlizes your specified fields into single unique slug\n- [**Timestampable**](/doc/timestampable.md) - updates date fields on create, update and even property change.\n- [**Translatable**](/doc/translatable.md) - gives you a very handy solution for translating records into different languages. Easy to setup, easier to use.\n- [**Tree**](/doc/tree.md) - automates the tree handling process and adds some tree-specific functions on repository.\n(**closure**, **nested set** or **materialized path**)\n  _(MongoDB ODM only supports materialized path)_\n\n#### ORM Only\n\n- [**IpTraceable**](/doc/ip_traceable.md) - inherited from Timestampable, sets IP address instead of timestamp\n- [**SoftDeleteable**](/doc/softdeleteable.md) - allows to implicitly remove records\n- [**Sortable**](/doc/sortable.md) - makes any document or entity sortable\n- [**Uploadable**](/doc/uploadable.md) - provides file upload handling in entity fields\n\n#### MongoDB ODM Only\n\n- [**References**](/doc/references.md) - supports linking Entities in Documents and vice versa\n- [**ReferenceIntegrity**](/doc/reference_integrity.md) - constrains ODM MongoDB Document references\n\nAll extensions support **Attribute**, **XML** and **Annotation** (deprecated) mapping. Additional mapping drivers\ncan be easily implemented using Mapping extension to handle the additional metadata mapping.\n\n### Version Compatibility\n\n* DBAL: `^3.2` (for all the extensions) or `^4.0` (for all the extensions, except **Loggable**)\n* ORM: `^2.14` or `^3.0`\n* MongoDB ODM: `^2.3`\n\nIf you are setting up the Entity Manager without a framework, see the [example](/example/em.php) to prevent issues like #1310\n\n### XML Mapping\n\nXML mapping needs to be in a different namespace, the declared namespace for\nDoctrine extensions is http://gediminasm.org/schemas/orm/doctrine-extensions-mapping\nSo root node now looks like this:\n\n```xml\n<doctrine-mapping xmlns=\"http://doctrine-project.org/schemas/orm/doctrine-mapping\"\n                 xmlns:gedmo=\"http://gediminasm.org/schemas/orm/doctrine-extensions-mapping\">\n...\n</doctrine-mapping>\n```\n\nXML mapping xsd schemas are also versioned and can be used by version suffix:\n\n- Latest version - **http://gediminasm.org/schemas/orm/doctrine-extensions-mapping**\n- 2.2.x version - **http://gediminasm.org/schemas/orm/doctrine-extensions-mapping-2-2**\n- 2.1.x version - **http://gediminasm.org/schemas/orm/doctrine-extensions-mapping-2-1**\n\n### Running Tests\n\nTo set up and run the tests, follow these steps:\n\n- Install [Docker](https://www.docker.com/) and ensure you have `docker compose`\n- From the project root, run `docker compose up -d` to start containers in daemon mode\n- Enter the container via `docker compose exec php bash` (you are now in the root directory: `/var/www`)\n- Install Composer dependencies via `composer install`\n- Run the tests: `vendor/bin/phpunit`\n\n### Running the Example\n\nTo set up and run example, follow these steps:\n\n- go to the root directory of extensions\n- [download composer](https://getcomposer.org/download/)\n- install dev libraries: `composer install`\n- edit `example/em.php` and configure your database on top of the file\n- run: `php example/bin/console` or `php example/bin/console` for console commands\n- run: `php example/bin/console orm:schema-tool:create` to create the schema\n- run: `php example/bin/console app:print-category-translation-tree` to run the example to print the category translation tree\n\n### Contributors\n\nThanks to [everyone participating](https://github.com/doctrine-extensions/DoctrineExtensions/contributors) in\nthe development of these great Doctrine extensions!\n\nAnd especially ones who create and maintain new extensions:\n\n- Lukas Botsch [lbotsch](https://github.com/lbotsch)\n- Gustavo Adrian [comfortablynumb](https://github.com/comfortablynumb)\n- Boussekeyt Jules [gordonslondon](https://github.com/gordonslondon)\n- Kudryashov Konstantin [everzet](https://github.com/everzet)\n- David Buchmann [dbu](https://github.com/dbu)\n"
        },
        {
          "name": "compose.yaml",
          "type": "blob",
          "size": 0.7060546875,
          "content": "services:\n  php:\n    build:\n      context: .\n      target: php\n      dockerfile: ./.docker/php/Dockerfile\n      args:\n        PHP_VERSION: ${PHP_VERSION:-8.4-cli}\n    volumes:\n      - .:/var/www\n    working_dir: /var/www\n    environment:\n      MONGODB_SERVER: 'mongodb://mongodb:27017'\n    tty: true\n    stdin_open: true\n    init: true\n\n  mysql:\n    image: mysql:8.0\n    healthcheck:\n      test: [\"CMD-SHELL\", \"mysql -h mysql --user=root --password=$${MYSQL_ROOT_PASSWORD} -e status\"]\n      interval: 10s\n      timeout: 2s\n      retries: 5\n    environment:\n      MYSQL_ROOT_PASSWORD: de_root_password\n      MYSQL_DATABASE: de_testing\n      MYSQL_USER: de_user\n      MYSQL_PASSWORD: de_password\n\n  mongodb:\n    image: mongo\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 3.021484375,
          "content": "{\n    \"name\": \"gedmo/doctrine-extensions\",\n    \"description\": \"Doctrine behavioral extensions\",\n    \"license\": \"MIT\",\n    \"type\": \"library\",\n    \"keywords\": [\n        \"behaviors\",\n        \"doctrine\",\n        \"extensions\",\n        \"gedmo\",\n        \"sluggable\",\n        \"loggable\",\n        \"odm\",\n        \"orm\",\n        \"translatable\",\n        \"tree\",\n        \"nestedset\",\n        \"sortable\",\n        \"timestampable\",\n        \"blameable\",\n        \"uploadable\"\n    ],\n    \"authors\": [\n        {\n            \"name\": \"Gediminas Morkevicius\",\n            \"email\": \"gediminas.morkevicius@gmail.com\"\n        },\n        {\n            \"name\": \"Gustavo Falco\",\n            \"email\": \"comfortablynumb84@gmail.com\"\n        },\n        {\n            \"name\": \"David Buchmann\",\n            \"email\": \"david@liip.ch\"\n        }\n    ],\n    \"homepage\": \"http://gediminasm.org/\",\n    \"support\": {\n        \"email\": \"gediminas.morkevicius@gmail.com\",\n        \"wiki\": \"https://github.com/Atlantic18/DoctrineExtensions/tree/main/doc\"\n    },\n    \"require\": {\n        \"php\": \"^7.4 || ^8.0\",\n        \"behat/transliterator\": \"^1.2\",\n        \"doctrine/collections\": \"^1.2 || ^2.0\",\n        \"doctrine/common\": \"^2.13 || ^3.0\",\n        \"doctrine/deprecations\": \"^1.0\",\n        \"doctrine/event-manager\": \"^1.2 || ^2.0\",\n        \"doctrine/persistence\": \"^2.2 || ^3.0\",\n        \"psr/cache\": \"^1 || ^2 || ^3\",\n        \"psr/clock\": \"^1\",\n        \"symfony/cache\": \"^5.4 || ^6.0 || ^7.0\"\n    },\n    \"require-dev\": {\n        \"doctrine/annotations\": \"^1.13 || ^2.0\",\n        \"doctrine/cache\": \"^1.11 || ^2.0\",\n        \"doctrine/dbal\": \"^3.7 || ^4.0\",\n        \"doctrine/doctrine-bundle\": \"^2.3\",\n        \"doctrine/mongodb-odm\": \"^2.3\",\n        \"doctrine/orm\": \"^2.14.0 || ^3.0\",\n        \"friendsofphp/php-cs-fixer\": \"^3.14.0\",\n        \"nesbot/carbon\": \"^2.71 || ^3.0\",\n        \"phpstan/phpstan\": \"^1.11\",\n        \"phpstan/phpstan-doctrine\": \"^1.4\",\n        \"phpstan/phpstan-phpunit\": \"^1.4\",\n        \"phpunit/phpunit\": \"^9.6\",\n        \"rector/rector\": \"^1.1\",\n        \"symfony/console\": \"^5.4 || ^6.0 || ^7.0\",\n        \"symfony/doctrine-bridge\": \"^5.4 || ^6.0 || ^7.0\",\n        \"symfony/phpunit-bridge\": \"^6.0 || ^7.0\",\n        \"symfony/uid\": \"^5.4 || ^6.0 || ^7.0\",\n        \"symfony/yaml\": \"^5.4 || ^6.0 || ^7.0\"\n    },\n    \"conflict\": {\n        \"doctrine/annotations\": \"<1.13 || >=3.0\",\n        \"doctrine/dbal\": \"<3.7 || >=5.0\",\n        \"doctrine/mongodb-odm\": \"<2.3 || >=3.0\",\n        \"doctrine/orm\": \"<2.14.0 || 2.16.0 || 2.16.1 || >=4.0\"\n    },\n    \"suggest\": {\n        \"doctrine/mongodb-odm\": \"to use the extensions with the MongoDB ODM\",\n        \"doctrine/orm\": \"to use the extensions with the ORM\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Gedmo\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Gedmo\\\\Tests\\\\\": \"tests/Gedmo/\"\n        }\n    },\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-main\": \"3.x-dev\"\n        }\n    },\n    \"scripts\": {\n        \"fix-cs\": \"php-cs-fixer fix --config=.php-cs-fixer.dist.php\"\n    }\n}\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "doctrine-mapping.xsd",
          "type": "blob",
          "size": 0.41796875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<schema elementFormDefault=\"qualified\" xmlns=\"http://www.w3.org/2001/XMLSchema\">\n    <import namespace=\"http://doctrine-project.org/schemas/orm/doctrine-mapping\" schemaLocation=\"./vendor/doctrine/orm/doctrine-mapping.xsd\"/>\n    <import namespace=\"http://gediminasm.org/schemas/orm/doctrine-extensions-mapping\" schemaLocation=\"./schemas/orm/doctrine-extensions-mapping-2-2.xsd\"/>\n</schema>\n"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 37.9482421875,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/AbstractTrackingListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/AbstractTrackingListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/AbstractTrackingListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to offset 'inherited' on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\MongoDB\\\\\\\\Mapping\\\\\\\\AssociationFieldMapping\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Blameable/Mapping/Driver/Attribute.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Gedmo\\\\\\\\Mapping\\\\\\\\Annotation\\\\\\\\Blameable\\\\:\\\\:\\\\$field \\\\(array\\\\<string\\\\>\\\\|string\\\\) in isset\\\\(\\\\) is not nullable\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Blameable/Mapping/Driver/Attribute.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Blameable/Mapping/Driver/Xml.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Blameable/Mapping/Driver/Yaml.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver not found\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/DoctrineExtensions.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to offset 'inherited' on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\MongoDB\\\\\\\\Mapping\\\\\\\\AssociationFieldMapping\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/IpTraceable/Mapping/Driver/Attribute.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/IpTraceable/Mapping/Driver/Xml.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/IpTraceable/Mapping/Driver/Yaml.php\n\n\t\t-\n\t\t\tmessage: \"#^Unable to resolve the template type T in call to method Doctrine\\\\\\\\ORM\\\\\\\\EntityManagerInterface\\\\:\\\\:getReference\\\\(\\\\)$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Loggable/Entity/Repository/LogEntryRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<Gedmo\\\\\\\\Loggable\\\\\\\\LogEntryInterface\\\\<T of object\\\\>\\\\>\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Loggable/LoggableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<Gedmo\\\\\\\\Loggable\\\\\\\\LogEntryInterface\\\\<T of object\\\\>\\\\>\\\\:\\\\:newInstance\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Loggable/LoggableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 4\n\t\t\tpath: src/Loggable/LoggableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\Tool\\\\\\\\WrapperInterface\\\\<Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\>\\\\:\\\\:getIdentifier\\\\(\\\\) invoked with 2 parameters, 0\\\\-1 required\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Loggable/LoggableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:\\\\$associationMappings\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Loggable/Mapping/Driver/Xml.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/Driver/AbstractAnnotationDriver.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Common\\\\\\\\EventArgs\\\\:\\\\:getDocument\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/Event/Adapter/ODM.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Common\\\\\\\\EventArgs\\\\:\\\\:getDocumentManager\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/Event/Adapter/ODM.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Common\\\\\\\\EventArgs\\\\:\\\\:getEntity\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/Event/Adapter/ORM.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Common\\\\\\\\EventArgs\\\\:\\\\:getEntityManager\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/Event/Adapter/ORM.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\Mapping\\\\\\\\Event\\\\\\\\Adapter\\\\\\\\ORM\\\\:\\\\:createLifecycleEventArgsInstance\\\\(\\\\) has invalid return type Doctrine\\\\\\\\ORM\\\\\\\\Event\\\\\\\\LifecycleEventArgs\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/Event/Adapter/ORM.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to property \\\\$isMappedSuperclass on an unknown class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadataInfo\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/ExtensionMetadataFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to property \\\\$parentClasses on an unknown class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadataInfo\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/ExtensionMetadataFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to property \\\\$reflClass on an unknown class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadataInfo\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/ExtensionMetadataFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriver\\\\:\\\\:getDefaultDriver\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Mapping/ExtensionMetadataFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriver\\\\:\\\\:getDrivers\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/ExtensionMetadataFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriver\\\\:\\\\:getLocator\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/ExtensionMetadataFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getConfiguration\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/ExtensionMetadataFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to method getName\\\\(\\\\) on an unknown class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadataInfo\\\\.$#\"\n\t\t\tcount: 4\n\t\t\tpath: src/Mapping/ExtensionMetadataFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to method isInheritanceTypeNone\\\\(\\\\) on an unknown class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadataInfo\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/ExtensionMetadataFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadataInfo not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/ExtensionMetadataFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\$meta of method Gedmo\\\\\\\\Mapping\\\\\\\\ExtensionMetadataFactory\\\\:\\\\:getExtensionMetadata\\\\(\\\\) has invalid type Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadataInfo\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/ExtensionMetadataFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/MappedEventSubscriber.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/MappedEventSubscriber.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to method getName\\\\(\\\\) on an unknown class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadataInfo\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/MappedEventSubscriber.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadataInfo not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Mapping/MappedEventSubscriber.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/ReferenceIntegrity/ReferenceIntegrityListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/ReferenceIntegrity/ReferenceIntegrityListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:isCollectionValuedReference\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 4\n\t\t\tpath: src/ReferenceIntegrity/ReferenceIntegrityListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:isSingleValuedReference\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/ReferenceIntegrity/ReferenceIntegrityListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to offset 'inherited' on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\MongoDB\\\\\\\\Mapping\\\\\\\\AssociationFieldMapping\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/References/Mapping/Driver/Attribute.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/References/Mapping/Event/Adapter/ODM.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:isInheritanceTypeNone\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/References/Mapping/Event/Adapter/ODM.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getReference\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/References/Mapping/Event/Adapter/ODM.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/References/Mapping/Event/Adapter/ODM.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/References/Mapping/Event/Adapter/ORM.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:isInheritanceTypeNone\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/References/Mapping/Event/Adapter/ORM.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/References/Mapping/Event/Adapter/ORM.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to method getClassMetadata\\\\(\\\\) on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManager\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/References/Mapping/Event/Adapter/ORM.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to method getReference\\\\(\\\\) on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManager\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/References/Mapping/Event/Adapter/ORM.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManager not found\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/References/Mapping/Event/Adapter/ORM.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:\\\\$reflClass\\\\.$#\"\n\t\t\tcount: 4\n\t\t\tpath: src/References/ReferencesListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getFieldValue\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/References/ReferencesListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:setFieldValue\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/References/ReferencesListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Sluggable/Handler/InversedRelativeSlugHandler.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Sluggable/Handler/InversedRelativeSlugHandler.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Sluggable/Handler/RelativeSlugHandler.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Sluggable/Handler/TreeSlugHandler.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/Sluggable/Handler/TreeSlugHandler.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to offset 'inherited' on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\MongoDB\\\\\\\\Mapping\\\\\\\\AssociationFieldMapping\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sluggable/Mapping/Driver/Attribute.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:\\\\$isMappedSuperclass\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sluggable/Mapping/Driver/Xml.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sluggable/Mapping/Driver/Xml.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:\\\\$isMappedSuperclass\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sluggable/Mapping/Driver/Yaml.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sluggable/Mapping/Driver/Yaml.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to method getFieldName\\\\(\\\\) on an unknown class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadataInfo\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sluggable/Mapping/Event/Adapter/ORM.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadataInfo not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sluggable/Mapping/Event/Adapter/ORM.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Sluggable/SluggableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 7\n\t\t\tpath: src/Sluggable/SluggableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Sluggable/SluggableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:\\\\$isMappedSuperclass\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/SoftDeleteable/Mapping/Validator.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/SoftDeleteable/Mapping/Validator.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property Gedmo\\\\\\\\SoftDeleteable\\\\\\\\Query\\\\\\\\TreeWalker\\\\\\\\Exec\\\\\\\\MultiTableDeleteExecutor\\\\:\\\\:\\\\$_sqlStatements\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/SoftDeleteable/Query/TreeWalker/Exec/MultiTableDeleteExecutor.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\SoftDeleteable\\\\\\\\Query\\\\\\\\TreeWalker\\\\\\\\SoftDeleteableWalker\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$parserResult with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/SoftDeleteable/Query/TreeWalker/SoftDeleteableWalker.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\SoftDeleteable\\\\\\\\Query\\\\\\\\TreeWalker\\\\\\\\SoftDeleteableWalker\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$query with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/SoftDeleteable/Query/TreeWalker/SoftDeleteableWalker.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to offset 'inherited' on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\MongoDB\\\\\\\\Mapping\\\\\\\\AssociationFieldMapping\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sortable/Mapping/Driver/Attribute.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sortable/Mapping/Driver/Xml.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sortable/Mapping/Driver/Yaml.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 5\n\t\t\tpath: src/Sortable/SortableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 4\n\t\t\tpath: src/Sortable/SortableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 4\n\t\t\tpath: src/Sortable/SortableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Gedmo\\\\\\\\Sortable\\\\\\\\Mapping\\\\\\\\Event\\\\\\\\SortableAdapter\\\\:\\\\:getMaxPosition\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sortable/SortableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Gedmo\\\\\\\\Sortable\\\\\\\\Mapping\\\\\\\\Event\\\\\\\\SortableAdapter\\\\:\\\\:updatePositions\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sortable/SortableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to offset 'inherited' on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\MongoDB\\\\\\\\Mapping\\\\\\\\AssociationFieldMapping\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Timestampable/Mapping/Driver/Attribute.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Gedmo\\\\\\\\Mapping\\\\\\\\Annotation\\\\\\\\Timestampable\\\\:\\\\:\\\\$field \\\\(array\\\\<string\\\\>\\\\|string\\\\) in isset\\\\(\\\\) is not nullable\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Timestampable/Mapping/Driver/Attribute.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Timestampable/Mapping/Driver/Xml.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Timestampable/Mapping/Driver/Yaml.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tool/Wrapper/EntityWrapper.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#2 \\\\$em of class Gedmo\\\\\\\\Tool\\\\\\\\Wrapper\\\\\\\\EntityWrapper constructor expects Doctrine\\\\\\\\ORM\\\\\\\\EntityManagerInterface, Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tool/Wrapper/EntityWrapper.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property ProxyManager\\\\\\\\Proxy\\\\\\\\GhostObjectInterface\\\\:\\\\:\\\\$identifier\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tool/Wrapper/MongoDocumentWrapper.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Tool/Wrapper/MongoDocumentWrapper.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to function property_exists\\\\(\\\\) with \\\\$this\\\\(Gedmo\\\\\\\\Translatable\\\\\\\\Hydrator\\\\\\\\ORM\\\\\\\\ObjectHydrator\\\\) and '_em' will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/Hydrator/ORM/ObjectHydrator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\Translatable\\\\\\\\Hydrator\\\\\\\\ORM\\\\\\\\ObjectHydrator\\\\:\\\\:hydrateAllData\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/Hydrator/ORM/ObjectHydrator.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to function property_exists\\\\(\\\\) with \\\\$this\\\\(Gedmo\\\\\\\\Translatable\\\\\\\\Hydrator\\\\\\\\ORM\\\\\\\\SimpleObjectHydrator\\\\) and '_em' will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/Hydrator/ORM/SimpleObjectHydrator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\Translatable\\\\\\\\Hydrator\\\\\\\\ORM\\\\\\\\SimpleObjectHydrator\\\\:\\\\:hydrateAllData\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/Hydrator/ORM/SimpleObjectHydrator.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to offset 'inherited' on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\MongoDB\\\\\\\\Mapping\\\\\\\\AssociationFieldMapping\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/Mapping/Driver/Attribute.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to offset 'association' on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\MongoDB\\\\\\\\Mapping\\\\\\\\FieldMapping\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Translatable/Mapping/Event/Adapter/ODM.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to offset 'fieldName' on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\MongoDB\\\\\\\\Mapping\\\\\\\\FieldMapping\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/Mapping/Event/Adapter/ODM.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to offset 'mappedBy' on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\MongoDB\\\\\\\\Mapping\\\\\\\\FieldMapping\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/Mapping/Event/Adapter/ODM.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to offset 'targetDocument' on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\MongoDB\\\\\\\\Mapping\\\\\\\\FieldMapping\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/Mapping/Event/Adapter/ODM.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to method getAssociationMappings\\\\(\\\\) on an unknown class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadataInfo\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/Mapping/Event/Adapter/ORM.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadataInfo not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/Mapping/Event/Adapter/ORM.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property Doctrine\\\\\\\\ORM\\\\\\\\Query\\\\\\\\AST\\\\\\\\Join\\\\:\\\\:\\\\$aliasIdentificationVariable\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/Query/TreeWalker/TranslationWalker.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property Doctrine\\\\\\\\ORM\\\\\\\\Query\\\\\\\\AST\\\\\\\\Node\\\\:\\\\:\\\\$aliasIdentificationVariable\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/Query/TreeWalker/TranslationWalker.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\Translatable\\\\\\\\Query\\\\\\\\TreeWalker\\\\\\\\TranslationWalker\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$parserResult with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/Query/TreeWalker/TranslationWalker.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\Translatable\\\\\\\\Query\\\\\\\\TreeWalker\\\\\\\\TranslationWalker\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$query with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/Query/TreeWalker/TranslationWalker.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/TranslatableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:newInstance\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Translatable/TranslatableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 4\n\t\t\tpath: src/Translatable/TranslatableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Gedmo\\\\\\\\Tree\\\\\\\\Strategy\\\\:\\\\:updateNode\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tree/Entity/Repository/ClosureTreeRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$association of method Gedmo\\\\\\\\Tree\\\\\\\\Entity\\\\\\\\Repository\\\\\\\\ClosureTreeRepository\\\\<T of object\\\\>\\\\:\\\\:getJoinColumnFieldName\\\\(\\\\) expects array\\\\<string, mixed\\\\>, Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\AssociationMapping given\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Tree/Entity/Repository/ClosureTreeRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Gedmo\\\\\\\\Tree\\\\\\\\Strategy\\\\:\\\\:max\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tree/Entity/Repository/NestedTreeRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Gedmo\\\\\\\\Tree\\\\\\\\Strategy\\\\:\\\\:setNodePosition\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tree/Entity/Repository/NestedTreeRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Gedmo\\\\\\\\Tree\\\\\\\\Strategy\\\\:\\\\:shiftRL\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/Tree/Entity/Repository/NestedTreeRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Gedmo\\\\\\\\Tree\\\\\\\\Strategy\\\\:\\\\:shiftRangeRL\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Tree/Entity/Repository/NestedTreeRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Gedmo\\\\\\\\Tree\\\\\\\\Strategy\\\\:\\\\:updateNode\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Tree/Entity/Repository/NestedTreeRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to function property_exists\\\\(\\\\) with \\\\$this\\\\(Gedmo\\\\\\\\Tree\\\\\\\\Hydrator\\\\\\\\ORM\\\\\\\\TreeObjectHydrator\\\\) and '_em' will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tree/Hydrator/ORM/TreeObjectHydrator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\Tree\\\\\\\\Hydrator\\\\\\\\ORM\\\\\\\\TreeObjectHydrator\\\\:\\\\:hydrateAllData\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tree/Hydrator/ORM/TreeObjectHydrator.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to offset 'inherited' on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\MongoDB\\\\\\\\Mapping\\\\\\\\AssociationFieldMapping\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tree/Mapping/Driver/Attribute.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 6\n\t\t\tpath: src/Tree/Mapping/Validator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\Tree\\\\\\\\RepositoryUtils\\\\:\\\\:buildTreeArray\\\\(\\\\) should return array\\\\<int, array\\\\<string, mixed\\\\>\\\\> but returns array\\\\<int\\\\<0, max\\\\>, ArrayAccess\\\\>\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tree/RepositoryUtils.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tree/Strategy/AbstractMaterializedPath.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getIdentifierValue\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tree/Strategy/AbstractMaterializedPath.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 10\n\t\t\tpath: src/Tree/Strategy/AbstractMaterializedPath.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getSingleIdentifierFieldName\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tree/Strategy/AbstractMaterializedPath.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getReference\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tree/Strategy/AbstractMaterializedPath.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Tree/Strategy/AbstractMaterializedPath.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\ORM\\\\\\\\EntityRepository\\\\<object\\\\>\\\\:\\\\:children\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tree/Strategy/ORM/Closure.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tree/TreeListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\Uploadable\\\\\\\\Event\\\\\\\\UploadableBaseEventArgs\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$config with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Uploadable/Event/UploadableBaseEventArgs.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\Uploadable\\\\\\\\Event\\\\\\\\UploadableBaseEventArgs\\\\:\\\\:getExtensionConfiguration\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Uploadable/Event/UploadableBaseEventArgs.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Gedmo\\\\\\\\Uploadable\\\\\\\\Event\\\\\\\\UploadableBaseEventArgs\\\\:\\\\:\\\\$config is never read, only written\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Uploadable/Event/UploadableBaseEventArgs.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Gedmo\\\\\\\\Uploadable\\\\\\\\Event\\\\\\\\UploadableBaseEventArgs\\\\:\\\\:\\\\$config type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Uploadable/Event/UploadableBaseEventArgs.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Gedmo\\\\\\\\Uploadable\\\\\\\\Event\\\\\\\\UploadableBaseEventArgs\\\\:\\\\:\\\\$extensionConfiguration is never written, only read\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Uploadable/Event/UploadableBaseEventArgs.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Gedmo\\\\\\\\Uploadable\\\\\\\\Event\\\\\\\\UploadableBaseEventArgs\\\\:\\\\:\\\\$extensionConfiguration type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Uploadable/Event/UploadableBaseEventArgs.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:\\\\$isMappedSuperclass\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Uploadable/Mapping/Validator.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getFieldMapping\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Uploadable/Mapping/Validator.php\n\n\t\t-\n\t\t\tmessage: \"#^Negated boolean expression is always false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Uploadable/MimeType/MimeTypeGuesser.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Uploadable/UploadableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/Uploadable/UploadableListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver not found\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: tests/Gedmo/DoctrineExtensionsTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Gedmo\\\\\\\\Tests\\\\\\\\Translatable\\\\\\\\Fixture\\\\\\\\CategoryTranslation not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/Fixture/Category.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver not found\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: tests/Gedmo/Mapping/MappingEventSubscriberTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$driverImpl of method Doctrine\\\\\\\\ORM\\\\\\\\Configuration\\\\:\\\\:setMetadataDriverImpl\\\\(\\\\) expects Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriver, Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver given\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: tests/Gedmo/Mapping/MappingEventSubscriberTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/MappingTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$driverImpl of method Doctrine\\\\\\\\ORM\\\\\\\\Configuration\\\\:\\\\:setMetadataDriverImpl\\\\(\\\\) expects Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriver, Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/MappingTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<T of object\\\\>\\\\:\\\\:mapField\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: tests/Gedmo/Mapping/MetadataFactory/CustomDriverTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<T of object\\\\>\\\\:\\\\:setIdGeneratorType\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/MetadataFactory/CustomDriverTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Doctrine\\\\\\\\ORM\\\\\\\\Id\\\\\\\\IdentityGenerator does not have a constructor and must be instantiated without any parameters\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/MetadataFactory/ForcedMetadataTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/MetadataFactory/ForcedMetadataTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$driverImpl of method Doctrine\\\\\\\\ORM\\\\\\\\Configuration\\\\:\\\\:setMetadataDriverImpl\\\\(\\\\) expects Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriver, Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/MetadataFactory/ForcedMetadataTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<object\\\\>\\\\:\\\\:getReflectionProperty\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: tests/Gedmo/Mapping/Mock/Extension/Encoder/EncoderListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: tests/Gedmo/Mapping/Mock/Extension/Encoder/EncoderListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to offset 'inherited' on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\MongoDB\\\\\\\\Mapping\\\\\\\\AssociationFieldMapping\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/Mock/Extension/Encoder/Mapping/Driver/Attribute.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver not found\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: tests/Gedmo/Mapping/MultiManagerMappingTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$nestedDriver of method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriverChain\\\\:\\\\:addDriver\\\\(\\\\) expects Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriver, Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/ORMMappingTestCase.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$nestedDriver of method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriverChain\\\\:\\\\:addDriver\\\\(\\\\) expects Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriver, Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\YamlDriver given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/ORMMappingTestCase.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Gedmo\\\\\\\\Tests\\\\\\\\Mapping\\\\\\\\ReferenceIntegrityMappingTest\\\\:\\\\:\\\\$dm is never written, only read\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/ReferenceIntegrityMappingTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Gedmo\\\\\\\\Tests\\\\\\\\Mapping\\\\\\\\ReferenceIntegrityMappingTest\\\\:\\\\:\\\\$referenceIntegrity is never written, only read\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/ReferenceIntegrityMappingTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Unreachable statement \\\\- code above always terminates\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/ReferenceIntegrityMappingTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/TreeMappingTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\YamlDriver not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/TreeMappingTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$nestedDriver of method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriverChain\\\\:\\\\:addDriver\\\\(\\\\) expects Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriver, Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\YamlDriver given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/TreeMappingTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/Xml/ClosureTreeMappingTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/Xml/MaterializedPathTreeMappingTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/Xml/ReferencesMappingTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Mapping/Xml/TranslatableMappingTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\Tests\\\\\\\\Sluggable\\\\\\\\Fixture\\\\\\\\Doctrine\\\\\\\\FakeFilter\\\\:\\\\:addFilterConstraint\\\\(\\\\) has parameter \\\\$targetTableAlias with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Sluggable/Fixture/Doctrine/FakeFilter.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\YamlDriver not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Sluggable/Issue/Issue116Test.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$nestedDriver of method Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriverChain\\\\:\\\\:addDriver\\\\(\\\\) expects Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriver, Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\YamlDriver given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Sluggable/Issue/Issue116Test.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\$args of method Gedmo\\\\\\\\Tests\\\\\\\\SoftDeleteable\\\\\\\\Fixture\\\\\\\\Listener\\\\\\\\WithLifecycleEventArgsFromORMTypeListener\\\\:\\\\:postSoftDelete\\\\(\\\\) has invalid type Doctrine\\\\\\\\ORM\\\\\\\\Event\\\\\\\\LifecycleEventArgs\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/SoftDeleteable/Fixture/Listener/WithLifecycleEventArgsFromORMTypeListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\$args of method Gedmo\\\\\\\\Tests\\\\\\\\SoftDeleteable\\\\\\\\Fixture\\\\\\\\Listener\\\\\\\\WithLifecycleEventArgsFromORMTypeListener\\\\:\\\\:preSoftDelete\\\\(\\\\) has invalid type Doctrine\\\\\\\\ORM\\\\\\\\Event\\\\\\\\LifecycleEventArgs\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/SoftDeleteable/Fixture/Listener/WithLifecycleEventArgsFromORMTypeListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\Tests\\\\\\\\Timestampable\\\\\\\\Fixture\\\\\\\\ArticleCarbon\\\\:\\\\:getCreated\\\\(\\\\) should return Carbon\\\\\\\\Carbon\\\\|null but returns DateTime\\\\|null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Timestampable/Fixture/ArticleCarbon.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to function method_exists\\\\(\\\\) with Doctrine\\\\\\\\ORM\\\\\\\\EntityManager\\\\|null and 'merge' will always evaluate to false\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: tests/Gedmo/Timestampable/TimestampableTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Tool/BaseTestCaseOM.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\Tests\\\\\\\\Tool\\\\\\\\BaseTestCaseOM\\\\:\\\\:getORMDriver\\\\(\\\\) should return Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriver but returns Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Tool/BaseTestCaseOM.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Tool/BaseTestCaseORM.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Gedmo\\\\\\\\Tests\\\\\\\\Tool\\\\\\\\BaseTestCaseORM\\\\:\\\\:getMetadataDriverImplementation\\\\(\\\\) should return Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\MappingDriver but returns Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\Driver\\\\\\\\AnnotationDriver\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Tool/BaseTestCaseORM.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Gedmo\\\\\\\\Tests\\\\\\\\Tree\\\\\\\\MaterializedPathODMMongoDBRepositoryTest\\\\:\\\\:\\\\$repo \\\\(Gedmo\\\\\\\\Tree\\\\\\\\Document\\\\\\\\MongoDB\\\\\\\\Repository\\\\\\\\MaterializedPathRepository\\\\<Gedmo\\\\\\\\Tests\\\\\\\\Tree\\\\\\\\Fixture\\\\\\\\Document\\\\\\\\Category\\\\>\\\\) does not accept Doctrine\\\\\\\\ORM\\\\\\\\EntityRepository\\\\<Gedmo\\\\\\\\Tests\\\\\\\\Tree\\\\\\\\Fixture\\\\\\\\Document\\\\\\\\Category\\\\>\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Tree/MaterializedPathODMMongoDBRepositoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Unreachable statement \\\\- code above always terminates\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Tree/MaterializedPathODMMongoDBTreeLockingTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to static method PHPUnit\\\\\\\\Framework\\\\\\\\Assert\\\\:\\\\:assertIsArray\\\\(\\\\) with true will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Tree/NestedTreeRootRepositoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to static method PHPUnit\\\\\\\\Framework\\\\\\\\Assert\\\\:\\\\:assertIsArray\\\\(\\\\) with true will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Gedmo/Tree/RepositoryTest.php\n\n"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 1.85546875,
          "content": "includes:\n    - phpstan-baseline.neon\n    - vendor/phpstan/phpstan-doctrine/extension.neon\n    - vendor/phpstan/phpstan-phpunit/extension.neon\n\nparameters:\n    level: 6\n    paths:\n        - src\n        - tests\n    bootstrapFiles:\n        - tests/bootstrap.php\n    treatPhpDocTypesAsCertain: false\n    ignoreErrors:\n        - '#^Property Gedmo\\\\Tests\\\\.+\\\\Fixture\\\\[^:]+::\\$\\w+ is never written, only read\\.$#'\n        - '#^Property Gedmo\\\\Tests\\\\.+\\\\Fixture\\\\[^:]+::\\$\\w+ is never read, only written\\.$#'\n        - '#^Property Gedmo\\\\Tests\\\\.+\\\\Fixture\\\\[^:]+::\\$\\w+ is unused\\.$#'\n        - '#^Method Gedmo\\\\(?:[^\\\\]+\\\\)*Mapping\\\\Driver[^:]+::readExtendedMetadata\\(\\) with return type void returns [\\w\\|<>\\s,]+ but should not return anything\\.$#'\n        - '#^Method Gedmo\\\\Uploadable\\\\Mapping\\\\Validator::validateConfiguration\\(\\) with return type void returns array<string, mixed> but should not return anything\\.$#'\n        - '#^Result of static method Gedmo\\\\Uploadable\\\\Mapping\\\\Validator::validateConfiguration\\(\\) \\(void\\) is used\\.$#'\n        - '#^Result of method Gedmo\\\\Mapping\\\\Driver::readExtendedMetadata\\(\\) \\(void\\) is used\\.$#'\n    excludePaths:\n        # Deprecated and unused class, interface does not exist as of 4.0\n        - src/Tool/Logging/DBAL/QueryAnalyzer.php\n        # Generates non-ignorable errors like \" Parameter #1 $method (string) of method Gedmo\\Tree\\Entity\\Repository\\NestedTreeRepository::__call() is not contravariant with parameter #1 $method (mixed) of method Doctrine\\ORM\\EntityRepository::__call().\"\n        - src/Tool/ORM/Repository/EntityRepositoryCompat.php\n        # Uses a tracking policy that was removed in ORM 3, PHPStan crashes on this file\n        - tests/Gedmo/Sortable/Fixture/NotifyNode.php\n        # Generates non-ignorable errors regarding covariance due to the internal compat layer\n        - tests/Gedmo/Translatable/Fixture/Type/Custom.php\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 3.169921875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    backupGlobals=\"false\"\n    backupStaticAttributes=\"false\"\n    colors=\"true\"\n    convertErrorsToExceptions=\"true\"\n    convertNoticesToExceptions=\"true\"\n    convertWarningsToExceptions=\"true\"\n    processIsolation=\"false\"\n    stopOnFailure=\"false\"\n    bootstrap=\"./tests/bootstrap.php\"\n    xsi:noNamespaceSchemaLocation=\"./vendor/phpunit/phpunit/phpunit.xsd\"\n>\n    <coverage>\n        <include>\n            <directory>./src</directory>\n        </include>\n    </coverage>\n    <testsuites>\n        <testsuite name=\"Translatable Extension\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/Translatable/</directory>\n        </testsuite>\n        <testsuite name=\"Sluggable Extension\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/Sluggable/</directory>\n        </testsuite>\n        <testsuite name=\"Sortable Extension\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/Sortable/</directory>\n        </testsuite>\n        <testsuite name=\"Tree Extension\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/Tree/</directory>\n        </testsuite>\n        <testsuite name=\"Timestampable Extension\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/Timestampable/</directory>\n        </testsuite>\n        <testsuite name=\"Blameable Extension\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/Blameable/</directory>\n        </testsuite>\n        <testsuite name=\"IpTraceable Extension\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/IpTraceable/</directory>\n        </testsuite>\n        <testsuite name=\"Mapping Extension\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/Mapping/</directory>\n        </testsuite>\n        <testsuite name=\"Loggable Extension\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/Loggable/</directory>\n        </testsuite>\n        <testsuite name=\"Sortable Extension\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/Sortable/</directory>\n        </testsuite>\n        <testsuite name=\"Object wrappers\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/Wrapper/</directory>\n        </testsuite>\n        <testsuite name=\"Translator extension\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/Translator/</directory>\n        </testsuite>\n        <testsuite name=\"SoftDeleteable Extension\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/SoftDeleteable/</directory>\n        </testsuite>\n        <testsuite name=\"Uploadable Extension\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/Uploadable/</directory>\n        </testsuite>\n        <testsuite name=\"ReferenceIntegrity Extension\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/ReferenceIntegrity/</directory>\n        </testsuite>\n        <testsuite name=\"References Extension\">\n            <directory suffix=\"Test.php\">./tests/Gedmo/References/</directory>\n        </testsuite>\n    </testsuites>\n    <php>\n        <env name=\"SYMFONY_DEPRECATIONS_HELPER\" value=\"max[self]=0\" />\n        <env name=\"MONGODB_SERVER\" value=\"mongodb://mongodb:27017\"/>\n    </php>\n    <listeners>\n        <listener class=\"Symfony\\Bridge\\PhpUnit\\SymfonyTestsListener\"/>\n    </listeners>\n</phpunit>\n"
        },
        {
          "name": "rector.php",
          "type": "blob",
          "size": 1.337890625,
          "content": "<?php\n\ndeclare(strict_types=1);\n\n/*\n * This file is part of the Doctrine Behavioral Extensions package.\n * (c) Gediminas Morkevicius <gediminas.morkevicius@gmail.com> http://www.gediminasm.org\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nuse Rector\\Config\\RectorConfig;\nuse Rector\\TypeDeclaration\\Rector\\Property\\TypedPropertyFromAssignsRector;\nuse Rector\\ValueObject\\PhpVersion;\n\nreturn RectorConfig::configure()\n    ->withPaths([\n        __DIR__.'/src',\n        __DIR__.'/tests',\n        __DIR__.'/example',\n    ])\n    ->withPhpVersion(PhpVersion::PHP_74)\n    ->withPhpSets()\n    ->withConfiguredRule(TypedPropertyFromAssignsRector::class, [])\n    ->withSkip([\n        TypedPropertyFromAssignsRector::class => [\n            __DIR__.'/src/Mapping/MappedEventSubscriber.php', // Rector is trying to set a type on the $annotationReader property which requires a union type, not supported on PHP 7.4\n            __DIR__.'/tests/Gedmo/Blameable/Fixture/Entity/Company.php', // @todo: Remove this when fixing the configuration for the `Company::$created` property\n            __DIR__.'/tests/Gedmo/Wrapper/Fixture/Entity/CompositeRelation.php', // @todo: Remove this when https://github.com/doctrine/orm/issues/8255 is solved\n        ],\n    ])\n    ->withImportNames(true, true, false)\n;\n"
        },
        {
          "name": "schemas",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}