{
  "metadata": {
    "timestamp": 1736711930408,
    "page": 343,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "smalot/pdfparser",
      "stars": 2443,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2109375,
          "content": "; top-most EditorConfig file\nroot = true\n\n; Unix-style newlines\n[*]\nend_of_line = LF\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[.github/**.yml]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.349609375,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n/.editorconfig export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/.php_cs export-ignore\n/.scrutinizer.yml export-ignore\n/.travis.yml export-ignore\n/dev-tools export-ignore\n/phpstan.neon export-ignore\n/phpunit.xml export-ignore\n/samples export-ignore\n/tests export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1611328125,
          "content": "/.idea/*\n/coverage/*\n/vendor/*\n/xdebug/*\n/composer.phar\n/dev-tools/vendor\n/composer\ndebug*\ncomposer.lock\n/.php-cs-fixer.cache\n/.phpunit.cache\n/.phpunit.result.cache\n"
        },
        {
          "name": ".php-cs-fixer.php",
          "type": "blob",
          "size": 0.7861328125,
          "content": "<?php\n\nuse PhpCsFixer\\Config;\nuse PhpCsFixer\\Finder;\n\n$finder = Finder::create()\n    ->in([\n        __DIR__.'/src',\n        __DIR__.'/tests',\n    ])\n    ->name('*.php')\n;\n\n$config = new Config();\n$config\n    ->setFinder($finder)\n    ->setRules([\n        '@PSR12' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'no_empty_phpdoc' => true,\n        'no_unused_imports' => true,\n        'no_superfluous_phpdoc_tags' => true,\n        'ordered_imports' => true,\n        'phpdoc_summary' => false,\n        'protected_to_private' => false,\n        'get_class_to_class_keyword' => false, // override for PHP < 8.0 (because ::class usage is not allowed there)\n        'modernize_strpos' => false, // override for PHP < 8.0 (because str_contains not available in PHP 7.x)\n    ])\n;\n\nreturn $config;\n"
        },
        {
          "name": ".scrutinizer.yml",
          "type": "blob",
          "size": 0.8046875,
          "content": "build:\n    cache:\n        directories:\n            - vendor # Cache for already installed composer package -> speed up composer install\n    nodes:\n        analysis:\n            environment:\n                php:\n                    version: 8.2\n                    ini:\n                        memory_limit: \"-1\"\n                variables:\n                    XDEBUG_MODE: 'coverage'\n            tests:\n                override:\n                    - php-scrutinizer-run\n                    -\n                        command: make install-dev-tools && make run-phpunit ARGS=\"--migrate-configuration\" && make run-phpunit ARGS=\"--exclude-group memory-heavy --coverage-clover coverage/clover.xml\"\n                        coverage:\n                            file: coverage/clover.xml\n                            format: clover\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.3095703125,
          "content": "# Contributing\n\n**Please read the following text before creating a pull request.**\n\nThis project is organized and supported by contributions from the community. Maintenance is done in our limited time.\nWe welcome any pull request that contributes to PDFParser (code, documentation, ...).\nHowever, we would like to point out that you are initially responsible for a contribution.\nIf you are new to dealing with pull requests, you can find more information at [Github documentation](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\nPlease don't just throw code at us and expect us to handle it.\nNevertheless, we will support you and give you feedback.\n\nTo make life easier for you and us, there is a Continuous Integration (CI) system that carries out software tests and performs a number of other tasks.\nThe following points describe the relevant preparations/inputs for the CI system.\nAll checks must be green, otherwise a pull request will not be accepted.\n* Please create an [issue](https://github.com/smalot/pdfparser/issues) before starting work on any significant changes.\n* We only accept code that is bundled with tests, regardless of whether it is a new function or a bug fix. This strengthens the code base and avoids later regressions. :exclamation: **If you don't know how to write a test, tell us upfront when you open the pull request and we might add them ourselves or discuss other ways**. This [Medium article](https://pguso.medium.com/a-beginners-guide-to-phpunit-writing-and-running-unit-tests-in-php-d0b23b96749f) might be a good starting point. Code changes without tests are very likely to be rejected.\n* Fix reported issues with the coding style. We use **PHP-CS-Fixer** for this. See [.php-cs-fixer.php](./.php-cs-fixer.php) for more information about our coding styles. [Developer.md](./doc/Developer.md) contains more information about this topic.\n* If you are fixing an **existing error**, refer to it in the introduction text of the pull request. For example, if you created a fix for issue `#1234` write the following Markdown: `fixes #1234`.\n* In case you have changed **internal behavior/functionality**, check our documentation to make sure these changes are **correctly documented**: https://github.com/smalot/pdfparser/tree/master/doc\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 7.4716796875,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.232421875,
          "content": "install-dev-tools:\n\tcomposer update --working-dir=dev-tools\n\nrun-php-cs-fixer:\n\tdev-tools/vendor/bin/php-cs-fixer fix $(ARGS)\n\nrun-phpstan:\n\tdev-tools/vendor/bin/phpstan analyze $(ARGS)\n\nrun-phpunit:\n\tdev-tools/vendor/bin/phpunit $(ARGS)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.0888671875,
          "content": "# PDF parser\n\n[![Version](https://poser.pugx.org/smalot/pdfparser/v)](//packagist.org/packages/smalot/pdfparser)\n![CI](https://github.com/smalot/pdfparser/workflows/CI/badge.svg)\n![CS](https://github.com/smalot/pdfparser/workflows/CS/badge.svg)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/smalot/pdfparser/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/smalot/pdfparser/?branch=master)\n[![Downloads](https://poser.pugx.org/smalot/pdfparser/downloads)](//packagist.org/packages/smalot/pdfparser)\n\nThe `smalot/pdfparser` is a standalone PHP package that provides various tools to extract data from PDF files.\n\nThis library is under **active maintenance**.\nThere is no active development by the author of this library (at the moment), but we welcome any pull request adding/extending functionality!\nSee [CONTRIBUTING.md](./CONTRIBUTING.md) for further information about how to contribute.\n\n## Features\n\n- Load/parse objects and headers\n- Extract metadata (author, description, ...)\n- Extract text from ordered pages\n- Support of compressed PDFs\n- Support of MAC OS Roman charset encoding\n- Handling of hexa and octal encoding in text sections\n- Create custom configurations (see [CustomConfig.md](/doc/CustomConfig.md)).\n\nCurrently, secured documents and extracting form data are not supported.\n\n## License\n\nThis library is under the [LGPLv3 license](https://github.com/smalot/pdfparser/blob/master/LICENSE.txt).\n\n## Install\n\nThis library requires PHP 7.1+ since [v1](https://github.com/smalot/pdfparser/releases/tag/v1.0.0).\nYou can install it via [Composer](https://getcomposer.org/):\n\n```bash\ncomposer require smalot/pdfparser\n```\n\nIn case you can't use Composer, you can include `alt_autoload.php-dist`. It will include all required files automatically.\n\n## Quick example\n\n```php\n<?php\n\n// Parse PDF file and build necessary objects.\n$parser = new \\Smalot\\PdfParser\\Parser();\n$pdf = $parser->parseFile('/path/to/document.pdf');\n\n$text = $pdf->getText();\necho $text;\n```\n\nFurther usage information can be found [here](/doc/Usage.md).\n\n## Documentation\n\nDocumentation can be found in the [doc](/doc) folder.\n"
        },
        {
          "name": "alt_autoload.php-dist",
          "type": "blob",
          "size": 2.4970703125,
          "content": "<?php\n\n/**\n * @file This file is part of the PdfParser library.\n *\n * @author  Konrad Abicht <k.abicht@gmail.com>\n * @date    2021-02-09\n *\n * @license LGPLv3\n * @url     <https://github.com/smalot/pdfparser>\n *\n *  PdfParser is a pdf library written in PHP, extraction oriented.\n *  Copyright (C) 2017 - Sébastien MALOT <sebastien@malot.fr>\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU Lesser General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU Lesser General Public License for more details.\n *\n *  You should have received a copy of the GNU Lesser General Public License\n *  along with this program.\n *  If not, see <http://www.pdfparser.org/sites/default/LICENSE.txt>.\n *\n * --------------------------------------------------------------------------------------\n *\n * About:\n * This file provides an alternative to the Composer-approach.\n * Include it into your project and all required files of PDFParser will be loaded automatically.\n * Please use it only, if Composer is not available.\n *\n * How to use:\n * 1. include this file as it is OR copy and rename it as you like (and then include it)\n * 2. afterwards you can use PDFParser classes\n * Done.\n */\n\n/**\n * Loads all files found in a given folder.\n * Calls itself recursively for all sub folders.\n *\n * @param string $dir\n */\nfunction requireFilesOfFolder($dir)\n{\n    foreach (new DirectoryIterator($dir) as $fileInfo) {\n        if (!$fileInfo->isDot()) {\n            if ($fileInfo->isDir()) {\n                requireFilesOfFolder($fileInfo->getPathname());\n            } else {\n                require_once $fileInfo->getPathname();\n            }\n        }\n    }\n}\n\n$rootFolder = __DIR__.'/src/Smalot/PdfParser';\n\n// Manually require files, which can't be loaded automatically that easily.\nrequire_once $rootFolder.'/Element.php';\nrequire_once $rootFolder.'/PDFObject.php';\nrequire_once $rootFolder.'/Font.php';\nrequire_once $rootFolder.'/Page.php';\nrequire_once $rootFolder.'/Element/ElementString.php';\nrequire_once $rootFolder.'/Encoding/AbstractEncoding.php';\n\n/*\n * Load the rest of PDFParser files from /src/Smalot/PDFParser\n * Dont worry, it wont load files multiple times.\n */\nrequireFilesOfFolder($rootFolder);\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.9287109375,
          "content": "{\n    \"name\": \"smalot/pdfparser\",\n    \"description\": \"Pdf parser library. Can read and extract information from pdf file.\",\n    \"keywords\": [\"PDF\", \"text\", \"parser\", \"parse\", \"extract\"],\n    \"type\": \"library\",\n    \"license\": \"LGPL-3.0\",\n    \"authors\": [\n        {\n            \"name\": \"Sebastien MALOT\",\n            \"email\": \"sebastien@malot.fr\"\n        }\n    ],\n    \"support\": {\n        \"issues\": \"https://github.com/smalot/pdfparser/issues\"\n    },\n    \"homepage\": \"https://www.pdfparser.org\",\n    \"require\": {\n        \"php\": \">=7.1\",\n        \"symfony/polyfill-mbstring\": \"^1.18\",\n        \"ext-zlib\": \"*\",\n        \"ext-iconv\": \"*\"\n    },\n    \"autoload\": {\n        \"psr-0\": {\n            \"Smalot\\\\PdfParser\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"PerformanceTests\\\\\": \"tests/Performance/\",\n            \"PHPUnitTests\\\\\": \"tests/PHPUnit/\"\n        }\n    },\n    \"config\": {\n        \"process-timeout\": 1200\n    }\n}\n"
        },
        {
          "name": "dev-tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.2421875,
          "content": "includes:\n    - dev-tools/vendor/phpstan/phpstan-phpunit/extension.neon\n    - dev-tools/vendor/phpstan/phpstan-phpunit/rules.neon\n\nparameters:\n    level: 3\n    paths:\n        - src\n        - tests\n\n    bootstrapFiles:\n        - vendor/autoload.php\n"
        },
        {
          "name": "phpunit-windows.xml",
          "type": "blob",
          "size": 0.9150390625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- https://phpunit.de/manual/current/en/appendixes.configuration.html -->\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.0/phpunit.xsd\" backupGlobals=\"false\" bootstrap=\"vendor\\autoload.php\" colors=\"true\" processIsolation=\"false\" stopOnFailure=\"false\" cacheDirectory=\".phpunit.cache\" backupStaticProperties=\"false\" displayDetailsOnTestsThatTriggerWarnings=\"true\">\n  <coverage>\n    <include>\n      <directory>src</directory>\n    </include>\n  </coverage>\n  <php>\n    <ini name=\"error_reporting\" value=\"-1\"/>\n    <ini name=\"zend.enable_gc\" value=\"0\"/>\n    <ini name=\"error_reporting\" value=\"-1\"/>\n    <ini name=\"intl.error_level\" value=\"0\"/>\n    <ini name=\"display_errors\" value=\"On\"/>\n  </php>\n  <testsuites>\n    <testsuite name=\"all\">\n      <directory>tests/PHPUnit</directory>\n    </testsuite>\n  </testsuites>\n</phpunit>\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.9150390625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- https://phpunit.de/manual/current/en/appendixes.configuration.html -->\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.0/phpunit.xsd\" backupGlobals=\"false\" bootstrap=\"vendor/autoload.php\" colors=\"true\" processIsolation=\"false\" stopOnFailure=\"false\" cacheDirectory=\".phpunit.cache\" backupStaticProperties=\"false\" displayDetailsOnTestsThatTriggerWarnings=\"true\">\n  <coverage>\n    <include>\n      <directory>src</directory>\n    </include>\n  </coverage>\n  <php>\n    <ini name=\"error_reporting\" value=\"-1\"/>\n    <ini name=\"zend.enable_gc\" value=\"0\"/>\n    <ini name=\"error_reporting\" value=\"-1\"/>\n    <ini name=\"intl.error_level\" value=\"0\"/>\n    <ini name=\"display_errors\" value=\"On\"/>\n  </php>\n  <testsuites>\n    <testsuite name=\"all\">\n      <directory>tests/PHPUnit</directory>\n    </testsuite>\n  </testsuites>\n</phpunit>\n"
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}