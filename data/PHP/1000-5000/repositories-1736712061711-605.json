{
  "metadata": {
    "timestamp": 1736712061711,
    "page": 605,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ReactiveX/RxPHP",
      "stars": 1708,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0791015625,
          "content": "phpunit.xml\ncomposer.lock\ncomposer.phar\n/vendor/\ndocs/reactivex.github.io\nbuild/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 15.0283203125,
          "content": "# 2.0.13\n\n- Fix `pluck` to correctly handle null values when an index or property exists but is null. #216\n- Updated testing to work with PHP 8.3\n\n# 2.0.12\n\n### Update\n\n- Add support for react/promise v3\n\n# 2.0.11\n\n### Update\n\n- Small fixes for and test on PHP 8.2\n\n# 2.0.10\n\n### Update\n\n- Suppress warnings from php 8.1\n\n# 2.0.9\n\n### Bug Fixes\n\n- ObservableFactoryWrapper should convert promise to observable ([b24ec82](https://github.com/ReactiveX/RxPHP/commit/6115f363e686891eb0dee8acc38c19cc6b24ec82))\n- Promise should support low level Throwable ([c48c168](https://github.com/ReactiveX/RxPHP/commit/fa9136ecf96c80d964aaa5976261d4a50c48c168))\n\n\n# 2.0.8\n\n### Update\n\n- Allow PHP 8\n- Update PHPUnit\n\n# 2.0.7\n\n### Update\n\n- Forward compatibility with react/event-loop 1.0 and 0.5 while still supporting 0.4 ([5f91a62](https://github.com/ReactiveX/RxPHP/commit/5f91a6200ecda70776d78c969f4d04294fe5ac89))\n\n# 2.0.6\n\n### Bug Fixes\n\n- Reroute exceptions in onNext to onError by default ([b7ba556](https://github.com/ReactiveX/RxPHP/commit/b7ba55623676257cf4b1bea5d8a9218333cfb563))\n\n# 2.0.5\n\n### Bug Fixes\n\n- Immediately complete if the iterator is no longer valid ([af6765a](https://github.com/ReactiveX/RxPHP/commit/af6765a0f996b2f8d1d4b8d93e1d0bb755587843))\n- Dispose inner observable when promise is cancelled ([4855812](https://github.com/ReactiveX/RxPHP/commit/48558124af3a47c2057ce50953bf5d7019bd6382))\n\n# 2.0.4\n\n### Bug Fixes\n\n- Fixed issue where EventLoopScheduler did not cancel timers in certain circumstances ([c915843](https://github.com/ReactiveX/RxPHP/commit/c91584391da87f78649af0222368f14ba22e0837))\n\n### Features\n\n- Added `singleInstance` operator ([4f77d38](https://github.com/ReactiveX/RxPHP/pull/185/commits/4f77d386b4596eccb2f5a3e9e3f9658a9aa57015))\n\n# 2.0.3\n\n### Bug Fixes\n\n- Fixed order of subscriptions in `takeUntil` ([1838ede](https://github.com/ReactiveX/RxPHP/commit/1838ede703bcb14eb67ed54cd61401f2ffff08c8))\n- Fixed issue where disposed of scheduled item would not cancel timer in some instances ([bb2c5a0](https://github.com/ReactiveX/RxPHP/commit/bb2c5a09dd37d0a4f5dd16c8c5ae8607e59936cb))\n- Removed throttle.expect to get rid of non-determinate test failures ([97a980c](https://github.com/ReactiveX/RxPHP/commit/97a980c3b87dae992ac774c03d87726a268a042a))\n\n### Features\n\n- Updated PHPUnit to 5.7 ([b1b37ab](https://github.com/ReactiveX/RxPHP/commit/b1b37ab2cf4ae3649b8571b0d42d7fcfefc079ae))\n\n# 2.0.2\n\n### Bug Fixes\n\n- Make scheduler optional for `ReplaySubject` ([a8d1c50](https://github.com/ReactiveX/RxPHP/commit/a8d1c50d69c80ae71a945886de06a01d1b0f4d09))\n- EventLoop will only ever scheduler 1 timer now #167 #165 ([bccbce9](https://github.com/ReactiveX/RxPHP/commit/bccbce9af3dc9bf083fb26b5812aad119ad2e97b))\n- Canceled items are now removed from `PriorityQueue` #168 ([6a4f9e7](https://github.com/ReactiveX/RxPHP/pull/168/commits/6a4f9e7fd8b3f9390b19bd451b87c5907b012562))\n- Fix memory leak and refactor `groupBy*` operators ([7e4dc3c](https://github.com/ReactiveX/RxPHP/commit/7e4dc3c9e4eb04045bcb94db3296cb452def2cda))\n\n### Features\n\n- Added `withLatestFrom` operator ([273df81](https://github.com/ReactiveX/RxPHP/commit/273df812f7871a320b6702bf8b74657423fafa9c))\n\n\n# 2.0.1\n\n### Bug Fixes\n\n- Fix `concat` to dispose of current observable ([1eadb7b](https://github.com/ReactiveX/RxPHP/commit/1eadb7be7e026a07331f12d585d47e86cbd818bb))\n\n# 2.0.0\n\n### Changes and Additions\n- Added global static `Scheduler` class that allows setting scheduler factory callables\n- Schedulers are now passed in during `Observable` construction or into operators as needed\n- Static Observable constructors and operators will get scheduler from global static `Scheduler` if not specified\n- PHP 7 is required\n- HHVM support was removed\n- All files now `declare(strict_types=1)`\n- `ObserverInterface::onError` now takes a `Throwable` parameter instead of `Exception`\n- `subscribeCallback` has been deprecated in favor of `subscribe` which now takes callables or an `ObserverInterface` implementation\n- `doOnNext` and `doOnEach` have been deprecated in favor of `do` and follows the same syntax as `subscribe`\n- `catchError` has been deprecated in favor of `catch`\n- `just` has been deprecated in favor of `of`\n- `emptyObservable` has been deprecated in favor of `empty`\n- `switchLatest` has been deprecated in favor of `switch`\n- `Observable` is now abstract and requires subclasses to define `_subscribe`\n- Added `toPromise` and `fromPromise` operators\n- Marble tests are now supported\n- `timeout` now throws `TimeoutException` to allow detection of timeouts down stream\n- Parameter and return types have been added\n\n# 1.5.3\n\n### Features\n\n- Added `compose` operator ([140e21a](https://github.com/ReactiveX/RxPHP/commit/140e21a61c2bcd6e2572d3b6d51d3309934b29d1))\n- Added plucking for multiple items at once ([11b86c9](https://github.com/ReactiveX/RxPHP/commit/11b86c9eccc2dfb7d767b7cc4986d4f2d4ff548e))\n- Added custom operators in nested namespace ([897b747](https://github.com/ReactiveX/RxPHP/commit/897b74795d42b94fef3242ca9534345fcb45ed7e))\n\n# 1.5.2\n\n### Bug Fixes\n\n- Fix interface mismatch on subscribe type hints ([b817619](https://github.com/ReactiveX/RxPHP/commit/b8176196a9bb836579838966b0b89dcfcbc48dd1))\n- Fix `IteratorObservable` to check if the key is valid instead of null ([dafb14b](https://github.com/ReactiveX/RxPHP/commit/dafb14bc8f0bd22550325419f7ab2e98a454659b))\n\n### Features\n\n- Optimized `distinct` operator ([462d433](https://github.com/ReactiveX/RxPHP/commit/462d433a9268d1de60e7fcd1a9af19a2cac5f164))\n- Added `finally` operator ([e2cfdb2](https://github.com/ReactiveX/RxPHP/commit/e2cfdb2f8b374b0687d64c9e774a8557dbe77b5c))\n- Added `isEmpty` operator ([2429fb7](https://github.com/ReactiveX/RxPHP/commit/2429fb719de6c499db5da6cede086725bf82ece9))\n- Added `forkJoin` operator ([9fb9197](https://github.com/ReactiveX/RxPHP/commit/9fb9197d04e47cd68363c0d4de845519ae2e2a66))\n- Refactored `mergeAll` to be consistent with RxJS and `switchLatest` ([7aeb8ce](https://github.com/ReactiveX/RxPHP/commit/7aeb8cef74b29bdaa09ea969daf78577299a2aad))\n\n# 1.5.1\n\n### Bug Fixes\n\n- Fixed non-strict search in CompositeDisposable ([c17fb6c](https://github.com/ReactiveX/RxPHP/commit/c17fb6cbba2ab3ac7c351b0e7c7e74f30b24f3b4))\n- Fixed missing array type hint on Observable::__call ([1672dc1](https://github.com/ReactiveX/RxPHP/commit/1672dc12a3817888dbac8207a324cf14600f6dee))\n\n\n# 1.5.0\n\n### Bug Fixes\n\n- Fixed throttle.php demo ([cee42e2](https://github.com/ReactiveX/RxPHP/commit/cee42e2f04dd1df23c4a5ac013cb017d0af79b78))\n- Fixed Promise::fromObservable() to allow selecting the scheduler ([de88548](https://github.com/ReactiveX/RxPHP/commit/de8854883d8f47d251961503daf6beea1d492959))\n- Fixed VirtualTimeScheduler to use now() method ([d5afdde](https://github.com/ReactiveX/RxPHP/commit/d5afdde8e1913f5e0edee6a9667edfefc49a90ba))\n- Fixed `defer` swallowing errors ([#85](https://github.com/ReactiveX/RxPHP/commit/5332561fe773e61da35adfe92c9766f1594442bb))\n- Fixed phpunit deprecation warnings ([b7f754c](https://github.com/ReactiveX/RxPHP/commit/b7f754c1d5f337ae3a6383316cd3ca4bcec085e9))\n- Fixed scheduler disposable on delay dispose ([#87](https://github.com/ReactiveX/RxPHP/commit/13287702407b77222a5aa0f2599df55c0b4e24a5))\n\n### Features\n\n- Added custom operators ([c7d351d](https://github.com/ReactiveX/RxPHP/commit/c7d351d579f90134eef3701d87eb1ea8cd1e072e))\n- Added output values for failed demos in tests ([c2b4a56](https://github.com/ReactiveX/RxPHP/commit/c2b4a561224b9c8e3c2690b1b71c8aa97a2b7d22))\n- Added `throttle` operator ([b93d296](https://github.com/ReactiveX/RxPHP/commit/b93d296771a199c81e8ff8f21085f73d404c5ad9))\n- Added support for cancellable promises ([a5602ab](https://github.com/ReactiveX/RxPHP/commit/a5602abfc5b27152a509effdaff635e1d1a97419))\n- Added `switchFirst` operator ([620c70f](https://github.com/ReactiveX/RxPHP/commit/620c70f1dd9ebc8bff15a5cd889e84f314437c69)) ([a98c65f](https://github.com/ReactiveX/RxPHP/commit/a98c65f7f73802503939520852747a004f988aa1)) ([fc039fb](https://github.com/ReactiveX/RxPHP/commit/fc039fbf45ac8104b8f71aa0300aeb5e18beba5c)) ([b254d06](https://github.com/ReactiveX/RxPHP/commit/b254d060b6eb80824b0f299d4aacab02f6550ef9)) ([1f13650](https://github.com/ReactiveX/RxPHP/commit/1f136501c1491a9caffade898d099a152d0b3784))\n- Added `DoObserver` ([4807ab1](https://github.com/ReactiveX/RxPHP/commit/4807ab11285bb3f5e665cff2ead766d72f775a87))\n- Added coveralls ([7ed1a86](https://github.com/ReactiveX/RxPHP/commit/7ed1a860546c3b9748ae82e59e5bfa6053f3a95f))\n\n# 1.4.1\n\n### Bug Fixes\n\n- Fixed EventLoopScheduler ([f0302d2](https://github.com/ReactiveX/RxPHP/commit/680eed0af8596a938871aac967419c150f0302d2))\n\n\n# 1.4.0\n\n### Bug Fixes\n\n- Fixed doc block, demo updates ([7090947](https://github.com/ReactiveX/RxPHP/commit/70909479b99f2cc8fafa3ca666ff842b9c9f013e)) ([306ead9](https://github.com/ReactiveX/RxPHP/commit/306ead9c10356f2efcb0711d7581d6ebca2efd25)) ([8c4e9ab](https://github.com/ReactiveX/RxPHP/commit/8c4e9abf2d0993dbe126182fb1a6289c4568d353)) ([a21b8fd](https://github.com/ReactiveX/RxPHP/commit/a21b8fdf28bbe4b95599fca6febf2361899454d6))\n- Fixed `reduce` operator issue with falsy seed ([#71](https://github.com/ReactiveX/RxPHP/commit/d1cb412535beddb4d9892887104921340495bf81))\n- Fixed skipped tests ([26c2476](https://github.com/ReactiveX/RxPHP/commit/26c2476a2459307e9883279a258e1ed6dc854ed2))\n- Fixed `retryWhen` ([#59](https://github.com/ReactiveX/RxPHP/commit/e8e44ea9ae0b8f20c5fc4332aecec498cdcfc721))\n\n### Features\n\n- Added `flatMapTo` operator ([a8c6967](https://github.com/ReactiveX/RxPHP/commit/a8c69671ff4b7872423ebb602fba759c9564ae66))\n- Added `pluck` operator ([ec1fce1](https://github.com/ReactiveX/RxPHP/commit/ec1fce117bdc9a82e004624e2e8fcfb20ed50add))\n- Added `average` operator ([da591a6](https://github.com/ReactiveX/RxPHP/commit/da591a6cf8f32e923a597d08426fe1c8be116f7b))\n- Added `sum` operator ([2f44168](https://github.com/ReactiveX/RxPHP/commit/2f441687b8b806f4151f8966f38f1b11b065cd77))\n- Added CONTRIBUTING.md ([e45210c](https://github.com/ReactiveX/RxPHP/commit/e45210c9facbb3c38a48c8018f883dc820c6a292))\n- Added `min` operator ([f458564](https://github.com/ReactiveX/RxPHP/commit/f458564c82245813e3cf4d7d84a461b8a983e270))\n- Added `repeatWhen` operator ([d0fc1f8](https://github.com/ReactiveX/RxPHP/commit/d0fc1f84721940638274cd71492e91ea0030e4e4))\n- Added `race` operator (amb) ([81b70e7](https://github.com/ReactiveX/RxPHP/commit/81b70e7e7eca111fdfaa0bdc00a5b45afd569a6b))\n- Added `takeLast` operator ([8759ca4](https://github.com/ReactiveX/RxPHP/commit/8759ca42ba201b94c0a3dbe0979fde673c83df25))\n\n# 1.3.0\n\n### Bug Fixes\n\n- Fixed `combineLatest` when using the EventLoopScheduler ([12fce12](https://github.com/ReactiveX/RxPHP/commit/12fce1200e8d7951bcfc12a681f7105d5a171620))\n- Fixed argument ordering issue with `combineLatest` ([c5a8e5a](https://github.com/ReactiveX/RxPHP/commit/c5a8e5a07b4cae3bfe506ba2fced59fa3ed0467e))\n- Fixed `shareReplay`, so arguments are optional ([e38e8a4](https://github.com/ReactiveX/RxPHP/commit/e38e8a4da42f154caa58e8aa006b7c515fe3d809))\n- Fixed double subscription issue with `concatAll` ([4c64a82](https://github.com/ReactiveX/RxPHP/commit/4c64a82478fdf180dee97283413da85c38bc4ab7))\n- Fixed `delay` now uses `materialize` and `timestamp`, so that it has consistent behavior between all supported schedulers ([#51](https://github.com/ReactiveX/RxPHP/pull/51)) \n- Fixed EventLoopScheduler, which is now based off of the VirtualTimeScheduler ([#50](https://github.com/ReactiveX/RxPHP/pull/50))\n\n\n### Features\n\n- Added `materialize` and `dematerialize` operators ([6d6bba4](https://github.com/ReactiveX/RxPHP/commit/6d6bba44a139bb4c6a05ec5b4521ac3d13825a24))\n- Added `timestamp` operator ([4109934](https://github.com/ReactiveX/RxPHP/commit/41099345d05e2dac87b84ea3b297ab31421f9504)) \n- Added `switchLatest` operator ([58c95b0](https://github.com/ReactiveX/RxPHP/commit/58c95b04271dd3dee8f1c71673ba7e4b6056d8e5))\n- Added `partition` operator ([ca95144](https://github.com/ReactiveX/RxPHP/commit/ca951446f38a0ae16bc02039f70c89c74c98fe66))\n- Added `flatMapLatest` operator ([c0d15ff](https://github.com/ReactiveX/RxPHP/commit/c0d15ffd88ecda1a32f7cba73112c28c667ce9a8))\n\n# 1.2.0\n\n### Bug Fixes\n\n- Fixed uninitialized disposable in `skipUntil` ([2b5ea0b](https://github.com/ReactiveX/RxPHP/commit/2b5ea0b5fc8ae6f6cda20eb0fb0a3512ea3ef217))\n- Fixed `asObservable` operator was not passing through the scheduler ([d805cfd](https://github.com/ReactiveX/RxPHP/commit/d805cfdf620334ab977ef9532f1c2e29f79c4cf7))\n- Fixed uninitialized disposable in `retry` ([ca4da7e](https://github.com/ReactiveX/RxPHP/commit/ca4da7e24527ffcb7d206865e1e8c2caee3ea583))\n- Fixed #23 - changing yield behavior in hhvm ([da2737c](https://github.com/ReactiveX/RxPHP/commit/da2737ccd19fa3faed3cedc734130c8e6866d66f))\n- Fixed #33 - For Rx\\React\\Promise::toObservable, wrap non-exceptions on reject ([ed852de](https://github.com/ReactiveX/RxPHP/commit/ed852de1596652466d72ef0a67b491a3b0242927))\n\n### Features\n\n- Added ability to record and validate output of demo files ([883ad4b](https://github.com/ReactiveX/RxPHP/commit/883ad4ba8bfeb3e2192d7501039b99eb8a641229))\n- Added `catchError` operator ([cd4fc03](https://github.com/ReactiveX/RxPHP/commit/cd4fc034644e7d30c697597d9cec4d4995080dcd))\n- Added `takeWhile` and `takeWhileWithIndex` operators ([177835e](https://github.com/ReactiveX/RxPHP/commit/177835e8dbfd593f1f62cefb88012bd9ed306d77))\n- Added `startWith` and `startWithArray` operators ([585f893](https://github.com/ReactiveX/RxPHP/commit/585f8933dd859c720aacee385f3ac0c62f07f0f0))\n- Added `retryWhen` operator ([19b36fc](https://github.com/ReactiveX/RxPHP/commit/19b36fc5f232ad1f4d8a7da953e59d09affc7bb1))\n- Added utility to generate documentation for reactivex.io ([a62d46b](https://github.com/ReactiveX/RxPHP/commit/a62d46b50a24bc88adca5da64215f00c5ce2b350))\n- Added `concatAll` and `concatMap` operators ([c794cf3](https://github.com/ReactiveX/RxPHP/commit/c794cf31cf577fe374f7ab120c6a0b20afeb3957))\n- Added `skipWhile` and `skipWhileWithIndex` operators ([80c997f](https://github.com/ReactiveX/RxPHP/commit/80c997ff1cc2ed852ca2db4f60872fc32cab2daf))\n- Added `max` operator ([1a841fa](https://github.com/ReactiveX/RxPHP/commit/1a841fa25e7b17c70fd00084a3688fb5d432ce15))\n\n# 1.1.0\n\n### Bug fixes\n\n- Fixed bug where the `map` operator called `onNext` after it was disposed ([8a1d68c](https://github.com/ReactiveX/RxPHP/commit/8a1d68c))\n- Minor fixes to `groupByUntil` ([f6f56e3](https://github.com/ReactiveX/RxPHP/commit/f6f56e3))\n- Minor fixes to `delay` ([2613f36](https://github.com/ReactiveX/RxPHP/commit/2613f36))\n\n### Features\n\n- Added `range` observable ([1684522](https://github.com/ReactiveX/RxPHP/commit/1684522)) ([0ceab90](https://github.com/ReactiveX/RxPHP/commit/0ceab90)) ([121806c](https://github.com/ReactiveX/RxPHP/commit/121806c))\n- Added index to `map` selector ([8a1d68c](https://github.com/ReactiveX/RxPHP/commit/8a1d68c))\n- Added `mapTo` operator ([8a1d68c](https://github.com/ReactiveX/RxPHP/commit/8a1d68c))\n- Added `timer` observable ([304bc0c](https://github.com/ReactiveX/RxPHP/commit/304bc0c))\n- Added `distinct` and `distinctKey` ([e9575f1](https://github.com/ReactiveX/RxPHP/commit/e9575f1))\n- Split `distinctUntilChanged` into `distinctUntilChanged` and `distinctUntilKeyChanged` ([e9575f1](https://github.com/ReactiveX/RxPHP/commit/e9575f1))\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.1083984375,
          "content": "# Contributing to RxPHP\n\nThank you for taking the time to contribute.\n\nHere are some guidelines that you can follow:\n\n## <a name=\"rules\"></a> Coding Rules\nThese rules are to ensure consistency throughout the source code and with other ReactiveX [projects](http://reactivex.io/languages.html), please keep these rules in mind as you are working:\n\n* All features or bug fixes **must be tested**.\n* Test coverage should be equal to or greater than the [RxJS v4 tests](https://github.com/Reactive-Extensions/RxJS/tree/master/tests/observable).\n* Test coverage must be 100% by lines.\n* We follow the [PSR2](http://www.php-fig.org/psr/psr-2/) coding style guide.\n* New operators should be composed with existing operators unless non-composed performance gains are demonstrable.\n* Examples for operators should be based upon the RxJS v4 [operators](https://github.com/Reactive-Extensions/RxJS/tree/master/doc/api/core/operators).\n* When at all possible, operator definitions and behavior should mirror RxJS or RxJava.\n\nIf you have any questions or need help with your contribution, please feel free to open a PR or an issue and ask for help.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0498046875,
          "content": "Copyright (c) 2017 Alexander <iam.asm89@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.966796875,
          "content": "RxPHP\n======\n\nReactive extensions for PHP. The reactive extensions for PHP are a set of\nlibraries to compose asynchronous and event-based programs using observable\nstreams.\n\n[![CI status](https://github.com/ReactiveX/RxPHP/workflows/CI/badge.svg)](https://github.com/ReactiveX/RxPHP/actions)\n[![Coverage Status](https://coveralls.io/repos/github/ReactiveX/RxPHP/badge.svg?branch=master)](https://coveralls.io/github/ReactiveX/RxPHP?branch=master)\n\n## Example\n\n```php\n$source = \\Rx\\Observable::fromArray([1, 2, 3, 4]);\n\n$source->subscribe(\n    function ($x) {\n        echo 'Next: ', $x, PHP_EOL;\n    },\n    function (Exception $ex) {\n        echo 'Error: ', $ex->getMessage(), PHP_EOL;\n    },\n    function () {\n        echo 'Completed', PHP_EOL;\n    }\n);\n\n//Next: 1\n//Next: 2\n//Next: 3\n//Next: 4\n//Completed\n\n```\n\n## Try out the demos\n\n```bash\n$ git clone https://github.com/ReactiveX/RxPHP.git\n$ cd RxPHP\n$ composer install\n$ php demo/interval/interval.php\n```\n\nHave fun running the demos in `/demo`.\n\nnote:  When running the demos, the scheduler is automatically bootstrapped.  When using RxPHP within your own project, you'll need to set the default scheduler. \n\n## Installation\n1. Install an event loop.  Any event loop should work, but the ReactPHP event loop is recommended.\n\n```bash\n$ composer require react/event-loop\n```\n\n2. Install RxPHP using [composer](https://getcomposer.org).\n\n```bash\n$ composer require reactivex/rxphp\n```\n\n3. Write some code.\n\n```PHP\n<?php\n\nrequire_once __DIR__ . '/vendor/autoload.php';\n\nuse Rx\\Observable;\nuse React\\EventLoop\\Factory;\nuse Rx\\Scheduler;\n\n$loop = Factory::create();\n\n//You only need to set the default scheduler once\nScheduler::setDefaultFactory(function() use($loop){\n    return new Scheduler\\EventLoopScheduler($loop);\n});\n\nObservable::interval(1000)\n    ->take(5)\n    ->flatMap(function ($i) {\n        return Observable::of($i + 1);\n    })\n    ->subscribe(function ($e) {\n        echo $e, PHP_EOL;\n    });\n\n$loop->run();\n\n```\n## Working with Promises\n\nSome async PHP frameworks have yet to fully embrace the awesome power of observables.  To help ease the transition, RxPHP has built in support for [ReactPHP promises](https://github.com/reactphp/promise).\n\nMixing a promise into an observable stream:\n\n```PHP\nObservable::interval(1000)\n    ->flatMap(function ($i) {\n        return Observable::fromPromise(\\React\\Promise\\resolve(42 + $i));\n    })\n    ->subscribe(function ($v) {\n        echo $v . PHP_EOL;\n    });\n```\n\nConverting an Observable into a promise. (This is useful for libraries that use generators and coroutines):\n```PHP\n$observable = Observable::interval(1000)\n    ->take(10)\n    ->toArray()\n    ->map('json_encode');\n\n$promise = $observable->toPromise();\n```\n\n## Additional Information\n- [The Official Reactive Extensions Documentation](http://reactivex.io/documentation/observable.html)\n- [A Simple Introduction to Observables](https://www.youtube.com/watch?v=uQ1zhJHclvs)(video)\n\n\n## License\n\nRxPHP is licensed under the MIT License - see the LICENSE file for details\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.25,
          "content": "{\n    \"name\": \"reactivex/rxphp\",\n    \"description\": \"Reactive extensions for php.\",\n    \"keywords\": [\"reactive\", \"extensions\", \"rx\"],\n    \"homepage\": \"https://github.com/ReactiveX/RxPHP\",\n    \"type\": \"library\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Alexander\",\n            \"email\": \"iam.asm89@gmail.com\"\n        },\n        {\n            \"name\": \"David Dan\",\n            \"email\": \"davidwdan@gmail.com\"\n        },\n        {\n            \"name\": \"Matt Bonneau\",\n            \"email\": \"matt@bonneau.net\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=7.0.0\",\n        \"react/promise\": \"^3 || ~2.2\"\n    },\n    \"require-dev\": {\n        \"satooshi/php-coveralls\": \"~1.0\",\n        \"phpunit/phpunit\": \"^8.5 || ^9\",\n        \"react/event-loop\": \"^1.0 || ^0.5 || ^0.4.2\"\n    },\n    \"suggest\": {\n        \"react/event-loop\": \"Used for scheduling async operations\"\n    },\n    \"autoload\": {\n        \"psr-4\": { \"Rx\\\\\": \"src\" }\n    },\n    \"autoload-dev\": {\n        \"files\": [\n            \"test/helper-functions.php\"\n        ],\n        \"psr-4\": {\n            \"CustomOperatorTest\\\\Rx\\\\Operator\\\\\": \"test/CustomOperatorTest\",\n            \"Rx\\\\\": \"test/Rx\"\n        }\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"2.0-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.0927734375,
          "content": "parameters:\n    level: max\n\n    paths:\n        - test/types/\n\n    fileExtensions:\n        - php"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.98046875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\"\n         bootstrap=\"test/bootstrap.php\"\n         xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\">\n    <coverage>\n        <include>\n            <directory suffix=\".php\">./src/</directory>\n        </include>\n        <exclude>\n            <directory suffix=\"Interface.php\">./src/</directory>\n        </exclude>\n        <report>\n            <clover outputFile=\"build/logs/clover.xml\"/>\n        </report>\n    </coverage>\n    <testsuites>\n        <testsuite name=\"RxPHP Test Suite\">\n            <directory>./test/Rx/</directory>\n        </testsuite>\n    </testsuites>\n    <logging/>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}