{
  "metadata": {
    "timestamp": 1736711769367,
    "page": 22,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "moneyphp/money",
      "stars": 4678,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.171875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.neon]\nindent_style = tab\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.642578125,
          "content": ".editorconfig          export-ignore\n.gitattributes         export-ignore\n/.github/              export-ignore\n.gitignore             export-ignore\n/.php_cs.dist          export-ignore\n/.scrutinizer.yml      export-ignore\nDockerfile             export-ignore\n/benchmark/            export-ignore\n/hack/                 export-ignore\n/phpbench.json         export-ignore\n/phpstan-baseline.neon export-ignore\n/phpstan.neon.dist     export-ignore\n/phpunit.xml.dist      export-ignore\n/psalm.xml             export-ignore\n/tests/                export-ignore\n\n/doc/               export-ignore\n/resources/logo.png export-ignore\n/static-analysis/   export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1162109375,
          "content": "/.phpbench\n.php_cs\n.php_cs.cache\n.phpunit.result.cache\n/build/\n/phpunit.xml\n/vendor/\n\ndoc/_build/\ncomposer.lock\n.idea/\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.17578125,
          "content": "version: 2\n\nbuild:\n    os: \"ubuntu-22.04\"\n    tools:\n        python: \"3\"\n\npython:\n    install:\n        - requirements: doc/requirements.txt\n\nsphinx:\n    configuration: doc/conf.py\n"
        },
        {
          "name": ".scrutinizer.yml",
          "type": "blob",
          "size": 0.1435546875,
          "content": "filter:\n    paths: [src/*]\nchecks:\n    php:\n        code_rating: true\n        duplication: true\ntools:\n    external_code_coverage:\n        runs: 2\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 14.947265625,
          "content": "# Change Log\n\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n\n## [Unreleased]\n\n\n## [4.6.0] - 2024-11-22\n\n### Added\n\n- PHP 8.4 support\n\n\n## [4.5.0] - 2024-02-15\n\n### Fixed\n\n- PHPUnit 10 support\n- Update currencies\n- Updated doctrine/coding-standard\n- Updated other dev dependencies\n\n### Removed\n\n- PHP 8.0 support\n\n\n## [4.4.0] - 2024-01-24\n\n### Added\n\n- Extended support for psr/cache, now version 1.0.1 up until 3.0 is supported.\n\n\n## [4.3.0] - 2023-11-22\n\n### Added\n\n- Support for PHP 8.3\n- Allow divisor in mod to be a number as well\n\n### Removed\n\n- PHPSpec tests, we are using PHPUnit only now\n\n\n## [4.2.0] - 2023-08-16\n\n### Added\n\n- Teller object to help legacy applications\n\n\n## [4.1.1] - 2023-04-11\n\n### Fixed\n\n- Optimized result representation for BcMathCalculator\n- Use sprintf for float to string conversion in swap exchange\n- Fix rounding to unit with value between 10 and 49\n- Return type for DecimalMoneyFormatter::format is numeric-string\n- Money::ratioOf throws exception if currencies don't match.\n- Updated currencies: added SLE and VED, removed HRK.\n- Do not let php-http/discovery change composer.json.\n\n\n## [4.1.0] - 2022-12-19\n\n### Added\n\n- Full PHP8.2 compatibility\n\n### Fixed\n\n- Fix parsing amounts with leading zero's\n- Fix invalid exception message in DecimalMoneyParser\n- Upgrade enchant to newer version\n- Support Psalm 5.3\n- Fix ROUND_UP and ROUND_DOWN in roundToUnit\n\n### Changes\n\n- `composer.lock` is not committed anymore\n- MoneyFactory now also contains crypto-currencies\n\n### Added\n\n- `CryptoCurrencies` class that serves crypto-currencies from [moneyphp/crypto-currencies](https://github.com/moneyphp/crypto-currencies)\n\n\n## [4.0.5] - 2022-08-11\n\n### Fixed\n\n- Enabled zend.assertions during CI\n- Fixed invalid assertions\n\n\n## [4.0.4] - 2022-05-18\n\n### Added\n\n- Full PHP8.1 compatibility (#670)\n\n### Changes\n\n- Dropped mutation testing as the library owners are unfamiliar with it\n- CHANGELOG BC change improvement\n\n## [4.0.3] - 2021-12-01\n\n### Fixed\n\n- `jsonSerialize` return types, resulting in no PHP 8.1 warnings.\n- Documentation CI pipeline failure.\n\n\n## [4.0.2] - 2021-06-30\n\n### Changes\n\n- Added all extensions to `composer.json`, including those bundled with PHP.\n\n### Fixed\n\n- Remove all `empty` uses. Money values of '0' gave an assertion error in decimal formats (#655)\n\n\n## [4.0.1] - 2021-05-25\n\n### Changed\n\n- Allow `int` as multiplier for `Money::multiply`\n- Allow `int` as divisor for `Money::divide`\n\n\n## [4.0.0] - 2021-05-17\n\n### Added\n\n- PHP8.0 compatibility (#633 and #619)\n- Recommendation to use a type-checker like psalm or phpstan\n- Rounding to units\n- `Converter#convertAndReturnWithCurrencyPair` to get the combination of the converted money and currency pair\n- `Converter#convertAgainstCurrencyPair` to convert against a currency pair\n\n### Changed\n\n- **[BC break]** BC Math required as it is the default calculator\n- **[BC break]** The methods `multiply` and `divide` do not accept floating points any more. Callers are required to\n  convert a float to string (e.g. `sprintf('%.14F', $float)`) before calling these methods.\n- **[BC break]** The constructor of the `FixedExchange` does not accept floating points any more. Callers are required to\nconvert a float to string (e.g. `sprintf('%.14F', $float)`) before calling the constructor.\n- Allow multiple arguments to `Money#isSameCurrency`\n- Renamed second parameter of `Parser#parse` to `$fallbackCurrency`\n\n### Fixed\n\n- Fix GMP multiply and divide by negative (#640 #626)\n- Currency code must be uppercase (#639 #638 #637)\n- The CPU no longer overheats when using this library (#634)\n- No longer allowing null amount (#615)\n- Update cached currencies (#583)\n- Only numeric strings allowed (#575)\n- Calculator and Number are internal (#465)\n- Negative ratio in `Money#allocate()` is now allowed (#258)\n\n### Removed\n\n- **[BC break]** Removed `PhpCalculator`\n- **[BC break]** Removed `Currency#isAvailableWithin()`\n- **[BC break]** Removed string as allowed type for second parameter to `MoneyParser#parse`, only Currency objects are accepted now\n- **[BC break]** Completely remove float usage, methods now return numeric-strings\n\n\n## [3.3.1] - 2019-03-13\n\n### Fixed\n\n- GMP: division of negative values\n- GMP: compare 0.x value\n\n\n## [3.3.0] - 2019-12-27\n\n### Changed\n\n- Added types for `Money` to be understood as pure/immutable downstream (#576)\n\n### Fixed\n\n- JSON serialization (#551)\n- Several documentation fixes\n- Minor fixes\n\n\n## [3.2.1] - 2019-02-07\n\n### Changed\n\n- `Money::allocate` now maintains keys of ratios array\n- All parsers now emit a deprecation warning when passing currency as string\n\n### Fixed\n\n- Docs fix : plus sign in numeric strings is allowed\n- Added ext-json as required extension\n- Throw exception in case of empty currency\n- BCMath calculator now uses scale parameters for addition and subtracting\n- Fixed allocation remainder bug\n- Added PHP 7.3 in test suite\n- Fixed dockerignore to ignore Dockerfile\n- Fixed Bitcoin parsing bug when using trailing zeros\n\n\n## [3.2.0] - 2018-12-05\n\n### Added\n\n- [Exchanger](https://github.com/florianv/exchanger) exchange\n- Generated static factory to help IDEs understand code like `Money::EUR(500)`\n- Aggregation functions (min, max, avg, sum)\n\n### Changed\n\n- `Money::add` and `Money::subtract` now accept variadic arguments\n\n### Fixed\n\n- Division causing unnecessary fractional parts\n- Numeric comparison for negative numbers\n\n\n## [3.1.3] - 2018-02-16\n\n### Fixed\n\n- Allocation when the amount is smaller than the number of ratios\n\n\n## [3.1.2] - 2018-02-16\n\n### Added\n\n- `Number::fromNumber` to be used when the actual type is not known\n\n### Changed\n\n- Refactored `Number` usage to make the code cleaner and use less casting\n\n### Fixed\n\n- Float cast to string issue on certain locales\n\n\n## [3.1.1] - 2018-01-19\n\n### Fixed\n\n- Float cast to string issue on certain locales\n- Deal with numbers represented with E-XX\n\n\n## [3.1.0] - 2018-01-10\n\n### Added\n\n- CurrencyList to instantiate in-memory currencies\n- modulus method to Money\n- ratioOf method to Money\n- Comparator for easier testing Money object with PHPUnit\n- IntlLocalizedDecimalParser and IntlLocalizedDecimalFormatter\n\n### Changed\n\n- `MoneyParser::parse` method now expects a Currency object\n- Dropped PHP 5.5\n\n### Deprecated\n\n- Passing currency code as string to `MoneyParser::parse`\n\n### Fixed\n\n- Do not allocate remainder to a ratio of zero\n- Conversion result is always 0 when subunit difference is large enough\n- Unexpected result when converting small Bitcoin amounts\n- Fixed StyleCI being too aggressive\n\n\n## [3.0.9] - 2017-11-05\n\n### Fixed\n\n- Bitcoin currency symbol\n\n\n## [3.0.8] - 2017-10-03\n\n### Fixed\n\n- Rounding issue in Number class.\n- Reduce composer package file size by leaving out docs and logo.\n- Missing Travis tests for PHP 7.2.\n\n\n## [3.0.7] - 2017-08-07\n\n### Changed\n\n- Currencies\n\n\n## [3.0.6] - 2017-07-25\n\n### Added\n\n- IndirectExchange: a way to get an exchange rate through a minimal set of intermediate conversions.\n\n### Fixed\n\n- Tests for HHVM\n- Incorrect documentation on Bitcoin parser\n\n\n## [3.0.5] - 2017-04-26\n\n### Added\n\n- numericCodeFor method to ISOCurrencies\n\n\n## [3.0.4] - 2017-04-21\n\n### Added\n\n- Negative method\n\n### Changed\n\n- Updated ISO Currencies\n- Removed old Belarusian ruble from ISOCurrencies (BYR)\n\n### Fixed\n\n- ISOCurrencies will no longer have a blank currency\n- Double symbol when formatting negative Bitcoin amounts\n\n\n## [3.0.3] - 2017-03-22\n\n### Fixed\n\n- Parsing empty strings and number starting or ending with a decimal point for DecimalMoneyParser\n- Parsing zero for DecimalMoneyParser\n- Multiplying and dividing with a locale that use commas as separator\n\n## [3.0.2] - 2017-03-11\n\n### Fixed\n\n- BCMath / GMP: comparing values smaller than one\n- GMP: multiplying with zero\n- ISOCurrencies: minor refactoring, remove duplication of code\n\n\n## [3.0.1] - 2017-02-14\n\n### Added\n\n- Reversed Currencies Exchange to try resolving reverse of a currency pair\n- Documentation on allowed integer(ish) values when constructing Money\n\n### Fixed\n\n- Passing integer validation when chunk started with a dash\n- Passing integer validation when the fractional part started with a dash\n- Formatting problem for Bitcoin currency with small amounts in PHP < 7.0\n- Money constructed from a string with fractional zeroes equals to a Money constructed without the fractional part (eg. `'5.00'` and `'5'`)\n\n\n## [3.0.0] - 2016-10-26\n\n### Added\n\n- DecimalMoneyFormatter: returns locale-independent raw decimal string\n\n### Changed\n\n- **[BC break]** Replaced StringToUnitsParser with DecimalMoneyParser\n- **[BC break]** Moved `Money\\Exception\\Exception` to `Money\\Exception`\n- **[BC break]** UnkownCurrencyException is now DomainException instead of RuntimeException\n- **[Doctrine break]** In `Currency` the private variable `name` was renamed to `code`, which could break your Doctrine mapping if you are using embeddables or any other Reflection related implementation.\n\n\n## [3.0.0-beta.3] - 2016-10-04\n\n### Added\n\n- FixedExchange: returns fixed exchange rates based on a list (array)\n\n### Changed\n\n- **[BC break]** Convert method now moved to its own class: Converter\n- **[BC break]** Exchange had one method getCurrencyPair which is now renamed to quote\n- Minor documentation issues\n\n### Fixed\n\n- Integer detection when the number overflows the integer type and contains zeros\n- Rounding numbers containg trailing zeros\n- Converting Money to currency with different number of subunits\n\n\n## [3.0.0-beta.2] - 2016-08-03\n\n### Added\n\n- PHP Spec tests\n- absolute method to Money and Calculator\n- subunitFor method to Currencies\n- Currencies now extends IteratorAggregate\n- Library exceptions now implement a common interface\n- Formatter and Parser implementation are now rounding half up\n\n### Changed\n\n- **[BC break]** Dropped PHP 5.4 support\n- **[BC break]** Intl and Bitcoin formatters and parsers now require Currencies\n- ISOCurrencies now uses moneyphp/iso-currencies as currency data source\n\n### Fixed\n\n- Documentation to be inline with upcoming version 3\n- Rounding issues in calculators with negative numbers\n- Formatting and parser issues for amounts and numbers with a trailing zero\n- Improved many exception messages\n- Registration of own Calculator implementations\n\n\n## [3.0.0-beta] - 2016-03-01\n\n### Added\n\n- Bitcoin parser and formatter\n- Also checking tests folder for StyleCI\n\n### Fixed\n\n- Currencies are now included in the repo\n- Currency list generation moved to dev dependency: reduces repo size\n- BC Math calculator adding and subtracting failed when bcscale was set\n- Parsing zero for StringToUnitsParser\n\n\n## 3.0.0-alpha - 2016-02-04\n\n### Added\n\n- Currency repositories (ISO currencies included)\n- Money exchange (including [Swap](https://github.com/florianv/swap) implementation)\n- Money formatting (including intl formatter)\n- Money parsing (including intl parser)\n- Big integer support utilizing different, transparent calculation logic upon availability (bcmath, gmp, plain php)\n- Money and Currency implements JsonSerializable\n- Rounding up and down\n- Allocation to N targets\n\n### Changed\n\n- **[BC break]** Money::getAmount() returns a string instead of an int value\n- **[BC break]** Moved stringToUnits to StringToUnitsParser parser\n- Library requires at least PHP 5.4\n- Library uses PSR-4\n\n### Fixed\n\n- Integer overflow\n\n### Removed\n\n- **[BC break]** UnkownCurrency exception\n- **[BC break]** Currency list is now provided by [umpirsky/currency-list](https://github.com/umpirsky/currency-list/)\n- **[BC break]** RoundingMode class\n- **[BC break]** Announced deprecations are removed (Currency::getName, CurrencyPair::getRatio, Money::getUnits)\n\n\n## Pre 3.0\n\n- 2015-03-23 Minimum php version is now 5.4\n- 2015-03-23 JsonSerializable\n- (... missing changelog because who remembers to document stuff anyway?)\n- 2014-03-22 Removed \\Money\\InvalidArgumentException in favour of plain old InvalidArgumentException\n- 2014-03-22 Introduce RoundingMode object, used to specify desired rounding\n- 2014-03-22 Introduced RoundingMode backwards compatible API changes to Money::multiply and Money::divide\n- 2014-03-22 Allow RoundingMode to be specified when converting currencies\n- 2014-03-22 CurrencyPair has an equals() method\n- 2013-10-13 Base currency and counter currency in CurrencyPair named correctly.\n- 2013-01-08 Removed the Doctrine2\\MoneyType helper, to be replaced by something better in the future. It's available\n             at https://gist.github.com/4485025 in case you need it.\n- 2013-01-08 Use vendor/autoload.php instead of lib/bootstrap.php (or use PSR-0 autolaoding)\n- 2012-12-10 Renamed Money::getUnits() to Money::getAmount()\n\n[Unreleased]: https://github.com/moneyphp/money/compare/v4.4.0...HEAD\n[4.6.0]: https://github.com/moneyphp/money/compare/v4.5.0...v4.6.0\n[4.5.0]: https://github.com/moneyphp/money/compare/v4.4.0...v4.5.0\n[4.4.0]: https://github.com/moneyphp/money/compare/v4.3.0...v4.4.0\n[4.3.0]: https://github.com/moneyphp/money/compare/v4.2.0...v4.3.0\n[4.2.0]: https://github.com/moneyphp/money/compare/v4.1.1...v4.2.0\n[4.1.1]: https://github.com/moneyphp/money/compare/v4.1.0...v4.1.1\n[4.1.0]: https://github.com/moneyphp/money/compare/v4.0.5...v4.1.0\n[4.0.5]: https://github.com/moneyphp/money/compare/v4.0.4...v4.0.5\n[4.0.4]: https://github.com/moneyphp/money/compare/v4.0.3...v4.0.4\n[4.0.3]: https://github.com/moneyphp/money/compare/v4.0.2...v4.0.3\n[4.0.2]: https://github.com/moneyphp/money/compare/v4.0.1...v4.0.2\n[4.0.1]: https://github.com/moneyphp/money/compare/v4.0.0...v4.0.1\n[4.0.0]: https://github.com/moneyphp/money/compare/v3.3.1...v4.0.0\n[3.3.1]: https://github.com/moneyphp/money/compare/v3.3.0...v3.3.1\n[3.3.0]: https://github.com/moneyphp/money/compare/v3.2.1...v3.3.0\n[3.2.1]: https://github.com/moneyphp/money/compare/v3.2.0...v3.2.1\n[3.2.0]: https://github.com/moneyphp/money/compare/v3.1.3...v3.2.0\n[3.1.3]: https://github.com/moneyphp/money/compare/v3.1.2...v3.1.3\n[3.1.2]: https://github.com/moneyphp/money/compare/v3.1.1...v3.1.2\n[3.1.1]: https://github.com/moneyphp/money/compare/v3.1.0...v3.1.1\n[3.1.0]: https://github.com/moneyphp/money/compare/v3.0.9...v3.1.0\n[3.0.9]: https://github.com/moneyphp/money/compare/v3.0.8...v3.0.9\n[3.0.8]: https://github.com/moneyphp/money/compare/v3.0.7...v3.0.8\n[3.0.7]: https://github.com/moneyphp/money/compare/v3.0.6...v3.0.7\n[3.0.6]: https://github.com/moneyphp/money/compare/v3.0.5...v3.0.6\n[3.0.5]: https://github.com/moneyphp/money/compare/v3.0.4...v3.0.5\n[3.0.4]: https://github.com/moneyphp/money/compare/v3.0.3...v3.0.4\n[3.0.3]: https://github.com/moneyphp/money/compare/v3.0.2...v3.0.3\n[3.0.2]: https://github.com/moneyphp/money/compare/v3.0.1...v3.0.2\n[3.0.1]: https://github.com/moneyphp/money/compare/v3.0.0...v3.0.1\n[3.0.0]: https://github.com/moneyphp/money/compare/v3.0.0-beta.4...v3.0.0\n[3.0.0-beta4]: https://github.com/moneyphp/money/compare/v3.0.0-beta.3...v3.0.0-beta.4\n[3.0.0-beta3]: https://github.com/moneyphp/money/compare/v3.0.0-beta.2...v3.0.0-beta.3\n[3.0.0-beta2]: https://github.com/moneyphp/money/compare/v3.0.0-beta...v3.0.0-beta.2\n[3.0.0-beta]: https://github.com/moneyphp/money/compare/v3.0.0-alpha...v3.0.0-beta\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.5830078125,
          "content": "FROM php:8.0-cli\n\nRUN set -xe \\\n\t&& apt-get update \\\n\t&& apt-get install -qqy libicu-dev locales libgmp-dev \\\n\t&& docker-php-ext-install -j$(nproc) intl bcmath gmp\n\nRUN set -xe \\\n\t&& echo en_US ISO-8859-1 >> /etc/locale.gen \\\n\t&& echo en_US.UTF-8 UTF-8 >> /etc/locale.gen \\\n\t&& echo en_CA ISO-8859-1 >> /etc/locale.gen \\\n\t&& echo en_CA.UTF-8 UTF-8 >> /etc/locale.gen \\\n\t&& echo es_ES ISO-8859-1 >> /etc/locale.gen \\\n\t&& echo es_ES.UTF-8 UTF-8 >> /etc/locale.gen \\\n\t&& echo ru_RU ISO-8859-5 >> /etc/locale.gen \\\n\t&& echo ru_RU.UTF-8 UTF-8 >> /etc/locale.gen \\\n\t&& locale-gen \\\n    && update-locale\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1552734375,
          "content": "Copyright (c) 2011-2016 Mathias Verraes\nCopyright (c) 2016 Márk Sági-Kazár <mark.sagikazar@gmail.com>\nCopyright (c) 2016 Frederik Bosch <f.bosch@genkgo.nl>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.8408203125,
          "content": "# Money\n\n[![Latest Version](https://img.shields.io/github/release/moneyphp/money.svg?style=flat-square)](https://github.com/moneyphp/money/releases)\n![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/moneyphp/money/ci.yml?branch=master&style=flat-square)\n[![Total Downloads](https://img.shields.io/packagist/dt/moneyphp/money.svg?style=flat-square)](https://packagist.org/packages/moneyphp/money)\n\n[![Email](https://img.shields.io/badge/email-team@moneyphp.org-blue.svg?style=flat-square)](mailto:team@moneyphp.org)\n\n![Money PHP](/resources/logo.png?raw=true)\n\nPHP library to make working with money safer, easier, and fun!\n\n> \"If I had a dime for every time I've seen someone use FLOAT to store currency, I'd have $999.997634\" -- [Bill Karwin](https://twitter.com/billkarwin/status/347561901460447232)\n\nIn short: You shouldn't represent monetary values by a float. Wherever\nyou need to represent money, use this Money value object. Since version\n3.0 this library uses [strings internally](https://github.com/moneyphp/money/pull/136)\nin order to support unlimited integers.\n\n```php\n<?php\n\nuse Money\\Money;\n\n$fiveEur = Money::EUR(500);\n$tenEur = $fiveEur->add($fiveEur);\n\nlist($part1, $part2, $part3) = $tenEur->allocate([1, 1, 1]);\nassert($part1->equals(Money::EUR(334)));\nassert($part2->equals(Money::EUR(333)));\nassert($part3->equals(Money::EUR(333)));\n```\n\nThe documentation is available at http://moneyphp.org\n\n\n## Requirements\n\nThis library requires the [BCMath PHP extension](https://www.php.net/manual/en/book.bc.php). There might be additional dependencies for specific feature, e.g. the\nSwap exchange implementation, check the documentation for more information.\n\nVersion 4 requires PHP 8.0. For older version of PHP, use version 3 of this library. From version 4.5 this package\nwill only support [PHP versions that actually receive updates by PHP itself](https://www.php.net/supported-versions.php).\nIf you want to use the package with older PHP versions, you can of course use older versions of this package.\n\n\n## Install\n\nVia Composer\n\n```bash\n$ composer require moneyphp/money\n```\n\n\n## Features\n\n- JSON Serialization\n- Big integer support utilizing different, transparent calculation logic upon availability (bcmath, gmp, plain php)\n- Money formatting (including intl formatter)\n- Currency repositories (ISO currencies included)\n- Money exchange (including [Swap](http://swap.voutzinos.org) implementation)\n\n\n## Documentation\n\nPlease see the [official documentation](http://moneyphp.org).\n\n\n## Testing\n\nWe try to follow TDD by using [phpunit](https://phpunit.de) to test this library.\n\n```bash\n$ composer test\n```\n\n### Running the tests in Docker\n\nMoney requires a set of dependencies, so you might want to run it in Docker.\n\nFirst, build the image locally:\n\n```bash\n$ docker build -t moneyphp .\n```\n\nThen run the tests:\n\n```bash\n$ docker run --rm -it -v $PWD:/app -w /app moneyphp vendor/bin/phpunit --exclude-group segmentation\n```\n\n\n## Contributing\n\nWe would love to see you helping us to make this library better and better.\nPlease keep in mind we do not use suffixes and prefixes in class names,\nso not `CurrenciesInterface`, but `Currencies`. Other than that, Style CI will help you\nusing the same code style as we are using. Please provide tests when creating a PR and clear descriptions of bugs when filing issues.\n\n\n## Security\n\nIf you discover any security related issues, please contact us at [team@moneyphp.org](mailto:team@moneyphp.org).\n\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE) for more information.\n\n\n## Acknowledgements\n\nThis library is heavily inspired by [Martin Fowler's Money pattern](http://martinfowler.com/eaaCatalog/money.html).\nA special remark goes to [Mathias Verraes](https://github.com/mathiasverraes), without his contributions,\nin code and via his [blog](http://verraes.net/#blog), this library would not be where it stands now.\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 3.4072265625,
          "content": "{\n    \"name\": \"moneyphp/money\",\n    \"description\": \"PHP implementation of Fowler's Money pattern\",\n    \"license\": \"MIT\",\n    \"keywords\": [\n        \"money\",\n        \"vo\",\n        \"value object\"\n    ],\n    \"authors\": [\n        {\n            \"name\": \"Mathias Verraes\",\n            \"email\": \"mathias@verraes.net\",\n            \"homepage\": \"http://verraes.net\"\n        },\n        {\n            \"name\": \"Márk Sági-Kazár\",\n            \"email\": \"mark.sagikazar@gmail.com\"\n        },\n        {\n            \"name\": \"Frederik Bosch\",\n            \"email\": \"f.bosch@genkgo.nl\"\n        }\n    ],\n    \"homepage\": \"http://moneyphp.org\",\n    \"require\": {\n        \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\",\n        \"ext-bcmath\": \"*\",\n        \"ext-filter\": \"*\",\n        \"ext-json\": \"*\"\n    },\n    \"require-dev\": {\n        \"ext-gmp\": \"*\",\n        \"ext-intl\": \"*\",\n        \"cache/taggable-cache\": \"^1.1.0\",\n        \"doctrine/coding-standard\": \"^12.0\",\n        \"doctrine/instantiator\": \"^1.5.0 || ^2.0\",\n        \"florianv/exchanger\": \"^2.8.1\",\n        \"florianv/swap\": \"^4.3.0\",\n        \"moneyphp/crypto-currencies\": \"^1.1.0\",\n        \"moneyphp/iso-currencies\": \"^3.4\",\n        \"php-http/message\": \"^1.16.0\",\n        \"php-http/mock-client\": \"^1.6.0\",\n        \"phpbench/phpbench\": \"^1.2.5\",\n        \"phpstan/extension-installer\": \"^1.4\",\n        \"phpstan/phpstan\": \"^2.0\",\n        \"phpstan/phpstan-phpunit\": \"^2.0\",\n        \"phpunit/phpunit\": \"^10.5.9\",\n        \"psr/cache\": \"^1.0.1 || ^2.0 || ^3.0\",\n        \"ticketswap/phpstan-error-formatter\": \"^1.1\"\n    },\n    \"suggest\": {\n        \"ext-gmp\": \"Calculate without integer limits\",\n        \"ext-intl\": \"Format Money objects with intl\",\n        \"florianv/exchanger\": \"Exchange rates library for PHP\",\n        \"florianv/swap\": \"Exchange rates library for PHP\",\n        \"psr/cache-implementation\": \"Used for Currency caching\"\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"autoload\": {\n        \"psr-4\": {\n            \"Money\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Benchmark\\\\Money\\\\\": \"benchmark/\",\n            \"Tests\\\\Money\\\\\": \"tests/\"\n        }\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"composer/package-versions-deprecated\": true,\n            \"dealerdirect/phpcodesniffer-composer-installer\": true,\n            \"ergebnis/composer-normalize\": true,\n            \"infection/extension-installer\": true,\n            \"php-http/discovery\": false,\n            \"phpstan/extension-installer\": true\n        },\n        \"sort-packages\": true\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"3.x-dev\"\n        }\n    },\n    \"scripts\": {\n        \"benchmark\": [\n            \"vendor/bin/phpbench run --retry-threshold=3 --iterations=15 --revs=1000  --warmup=2\"\n        ],\n        \"clean\": \"rm -rf build/ vendor/\",\n        \"test\": [\n            \"vendor/bin/phpbench run\",\n            \"vendor/bin/phpunit\",\n            \"vendor/bin/phpstan\",\n            \"vendor/bin/phpcs\"\n        ],\n        \"test-coverage\": [\n            \"vendor/bin/phpunit --coverage-text --coverage-clover=build/unit_coverage.xml\"\n        ],\n        \"update-currencies\": [\n            \"cp vendor/moneyphp/iso-currencies/resources/current.php resources/currency.php\",\n            \"cp vendor/moneyphp/crypto-currencies/resources/binance.php resources/binance.php\",\n            \"php resources/generate-money-factory.php\",\n            \"php resources/generate-teller-factory.php\"\n        ]\n    }\n}\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpbench.json",
          "type": "blob",
          "size": 0.080078125,
          "content": "{\n    \"runner.bootstrap\": \"vendor/autoload.php\",\n    \"runner.path\": \"benchmark\"\n}\n"
        },
        {
          "name": "phpcs.xml.dist",
          "type": "blob",
          "size": 1.8955078125,
          "content": "<?xml version=\"1.0\"?>\n<ruleset\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:noNamespaceSchemaLocation=\"vendor/squizlabs/php_codesniffer/phpcs.xsd\"\n>\n    <arg name=\"basepath\" value=\".\"/>\n    <arg name=\"extensions\" value=\"php\"/>\n    <arg name=\"parallel\" value=\"80\"/>\n    <arg name=\"colors\"/>\n\n    <!-- Ignore warnings and show progress of the run -->\n    <arg value=\"np\"/>\n\n    <!-- spec files do not seem to follow reasonable rules around the type system, and therefore should be ignored from CS -->\n    <!--<file>./spec</file>-->\n    <file>./src</file>\n    <file>./static-analysis</file>\n    <file>./tests</file>\n\n    <rule ref=\"Doctrine\">\n        <!-- some variables and method names are not compliant with CS naming patterns -->\n        <exclude name=\"Squiz.NamingConventions.ValidVariableName.NotCamelCaps\"/>\n        <exclude name=\"PSR1.Methods.CamelCapsMethodName.NotCamelCaps\"/>\n\n        <!-- renaming exceptions in this library is too big of a BC break for no real benefit -->\n        <exclude name=\"SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix\"/>\n\n        <!-- language-level non-strict comparison is (consciously) used in the codebase for performance reasons -->\n        <exclude name=\"SlevomatCodingStandard.Operators.DisallowEqualOperators.DisallowedEqualOperator\"/>\n        <exclude name=\"SlevomatCodingStandard.Operators.DisallowEqualOperators.DisallowedNotEqualOperator\"/>\n\n        <!-- We do not want trailing commas -->\n        <exclude name=\"SlevomatCodingStandard.Commenting.RequireOneLineDocComment\"/>\n        <exclude name=\"SlevomatCodingStandard.Functions.RequireTrailingCommaInCall\"/>\n        <exclude name=\"SlevomatCodingStandard.Functions.RequireTrailingCommaInClosureUse\"/>\n        <exclude name=\"SlevomatCodingStandard.Functions.RequireTrailingCommaInDeclaration\"/>\n        <exclude name=\"SlevomatCodingStandard.Arrays.TrailingArrayComma\"/>\n    </rule>\n</ruleset>\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.271484375,
          "content": "parameters:\n\tlevel: 6\n\tpaths:\n\t\t- src\n\t\t- tests\n\terrorFormat: ticketswap\n\teditorUrl: 'phpstorm://open?file=%%file%%&line=%%line%%'\n\tignoreErrors:\n\t\t-\n\t\t\tidentifier: staticMethod.alreadyNarrowedType\n\t\t\tpath: tests/*\n\t\t-\n\t\t\tidentifier: method.alreadyNarrowedType\n\t\t\tpath: tests/*\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.4912109375,
          "content": "<?xml version=\"1.0\"?>\n<phpunit\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n    bootstrap=\"./vendor/autoload.php\"\n    colors=\"true\"\n    columns=\"max\"\n    beStrictAboutChangesToGlobalState=\"true\"\n>\n\n  <testsuites>\n    <testsuite name=\"Money Test Suite\">\n      <directory>tests/</directory>\n    </testsuite>\n  </testsuites>\n\n  <source>\n    <include>\n      <directory>src</directory>\n    </include>\n  </source>\n</phpunit>\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "static-analysis",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}