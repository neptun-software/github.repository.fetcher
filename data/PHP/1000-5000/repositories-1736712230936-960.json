{
  "metadata": {
    "timestamp": 1736712230936,
    "page": 960,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tempestphp/tempest-framework",
      "stars": 1191,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".commitlintrc.json",
          "type": "blob",
          "size": 0.1826171875,
          "content": "{\n  \"extends\": [\"@commitlint/config-conventional\"],\n  \"rules\": {\n    \"subject-case\": [\n      2,\n      \"never\",\n\t\t\t[\"sentence-case\", \"start-case\", \"pascal-case\", \"upper-case\"]\n    ]\n  }\n}\n"
        },
        {
          "name": ".env.example",
          "type": "blob",
          "size": 0.6240234375,
          "content": "# Possible values: local, staging, production, ci, testing, other\nENVIRONMENT=local\n\n# The base URI that's used for all generated URIs\nBASE_URI=http://localhost\n\n# The CACHE key is used as a global override to turn all caches on or off\n# Should be true in production, but null or false in local development\nCACHE=null\n\n# Enable or disable discovery cache\nDISCOVERY_CACHE=false\n\n# Enable or disable config cache\nCONFIG_CACHE=false\n\n# Enable or disable view cache\nVIEW_CACHE=false\n\n# Enable or disable project cache (allround cache)\nPROJECT_CACHE=false\n\n# Overwrite default log paths (null = default)\nDEBUG_LOG_PATH=null\nSERVER_LOG_PATH=null"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.732421875,
          "content": "# Exclude build/test files from the release\n/bin/                     export-ignore\n.github/                  export-ignore\ntests/                    export-ignore\n.gitattributes            export-ignore\n.gitignore                export-ignore\n.php-cs-fixer.dist.php    export-ignore\nmonorepo-builder.php      export-ignore\nphpstan.neon.dist         export-ignore\nphpstan-baseline.neon     export-ignore\nphpstan-baseline.php      export-ignore\nphpunit.xml               export-ignore\nphpunit.xml.dist          export-ignore\nREADME.md                 export-ignore\nrector.php                export-ignore\ncliff.toml                export-ignore\n.commitlintrc.json        export-ignore\n\n# Configure diff output for .php and .phar files.\n*.php diff=php\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2626953125,
          "content": ".cache/\n.idea/\nbuild/\nsessions/\nvendor/\nsrc/Tempest/database.sqlite\ntests/Fixtures/database.sqlite\ntests/Unit/Console/test-console.log\nsrc/Tempest/Database/src/database.sqlite\n.env\ncomposer.lock\ndebug.log\ntempest.log\npublic/static\ntests/Unit/Log\nlog/\nnode_modules\ndist\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 4.412109375,
          "content": "<?php\n\ndeclare(strict_types=1);\n\n$finder = Symfony\\Component\\Finder\\Finder::create()\n    ->in([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->name('*.php')\n    ->notName('*.cache.php')\n    ->notPath('Tempest/Router/src/Route.php') // phpcs doesn't yet support property hooks in interfaces\n    ->ignoreDotFiles(true)\n    ->ignoreVCS(true);\n\nreturn (new PhpCsFixer\\Config())\n    ->setParallelConfig(PhpCsFixer\\Runner\\Parallel\\ParallelConfigFactory::detect())\n    ->setCacheFile('.cache/fixer/cs-fixer.cache')\n    ->setRules([\n        '@PSR12' => true,\n        '@PHP84Migration' => true,\n        'ordered_attributes' => true,\n        'ordered_traits' => true,\n        'attribute_empty_parentheses' => true,\n        'yoda_style' => [\n            'equal' => false,\n            'identical' => false,\n            'less_and_greater' => false\n        ],\n        'get_class_to_class_keyword' => true,\n        'cast_spaces' => true,\n        'single_space_around_construct' => true,\n        'heredoc_indentation' => true,\n        'types_spaces' => true,\n        'single_quote' => true,\n        'no_short_bool_cast' => true,\n        'explicit_string_variable' => true,\n        'no_extra_blank_lines' => [\n            'tokens' => [\n                'case',\n                'continue',\n                'curly_brace_block',\n                'default',\n                'extra',\n                'parenthesis_brace_block',\n                'square_brace_block',\n                'switch',\n                'throw',\n                'use',\n            ],\n        ],\n        'array_syntax' => ['syntax' => 'short'],\n        'ordered_imports' => [\n            'sort_algorithm' => 'alpha',\n            'imports_order' => [\n                'class',\n                'function',\n                'const',\n            ],\n        ],\n        'no_unused_imports' => true,\n        'no_unneeded_import_alias' => true,\n        'blank_line_between_import_groups' => false,\n        'single_import_per_statement' => true,\n        'no_leading_import_slash' => true,\n        'fully_qualified_strict_types' => [\n            'import_symbols' => true,\n            'phpdoc_tags' => [],\n        ],\n        'global_namespace_import' => [\n            'import_classes' => true,\n            'import_constants' => true,\n            'import_functions' => true,\n        ],\n        'not_operator_with_successor_space' => true,\n        'trailing_comma_in_multiline' => [\n            'elements' => ['arrays', 'arguments', 'parameters', 'match'],\n        ],\n        'phpdoc_scalar' => true,\n        'unary_operator_spaces' => true,\n        'binary_operator_spaces' => true,\n        'blank_line_before_statement' => [\n            'statements' => ['break', 'continue', 'declare', 'return', 'throw', 'try'],\n        ],\n        'phpdoc_single_line_var_spacing' => true,\n        'phpdoc_var_without_name' => true,\n        'class_attributes_separation' => [\n            'elements' => [\n                'method' => 'one',\n            ],\n        ],\n        'method_argument_space' => [\n            'on_multiline' => 'ensure_fully_multiline',\n            'keep_multiple_spaces_after_comma' => true,\n        ],\n        'single_trait_insert_per_statement' => true,\n        'declare_strict_types' => true,\n        'no_empty_comment' => true,\n        'no_empty_phpdoc' => true,\n\n        // Test styling\n        'php_unit_data_provider_name' => [\n            'prefix' => 'provide_',\n            'suffix' => '_cases',\n        ],\n        'php_unit_data_provider_return_type' => true,\n        'php_unit_data_provider_static' => [\n            'force' => true,\n        ],\n        'php_unit_dedicate_assert_internal_type' => true,\n        'php_unit_internal_class' => true,\n        'php_unit_method_casing' => [\n            'case' => 'snake_case',\n        ],\n        'php_unit_expectation' => [\n            'target' => 'newest',\n        ],\n        'php_unit_mock' => [\n            'target' => 'newest',\n        ],\n        'php_unit_mock_short_will_return' => true,\n        'php_unit_set_up_tear_down_visibility' => true,\n        'visibility_required' => [\n            'elements' => [\n//            'property' // Disabled because of PHP 8.4 aviz\n                'method',\n                'const'\n            ],\n        ],\n        'php_unit_size_class' => false,\n        'php_unit_test_annotation' => [\n            'style' => 'prefix',\n        ],\n        'php_unit_test_case_static_method_calls' => [\n            'call_type' => 'this',\n        ],\n    ])\n    ->setFinder($finder);\n"
        },
        {
          "name": "LICENCE.md",
          "type": "blob",
          "size": 1.0703125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2024 Brent Roose brendt@stitcher.io\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.0546875,
          "content": "# The PHP framework that gets out of your way.\n\nTempest is a PHP framework that gets out of your way. Its design philosophy is that developers should write as little framework-related code as possible, so that they can focus on application code instead. Zero config, zero overhead. This is Tempest:\n\n```php\nfinal class BookController\n{\n    #[Get('/books/{book}')]\n    public function show(Book $book): Response\n    {\n        return new Ok($book);\n    }\n\n    #[Post('/books')]\n    public function store(CreateBookRequest $request): Response\n    {\n        $book = map($request)->to(Book::class)->save();\n\n        return new Redirect([self::class, 'show'], book: $book->id);\n    }\n    \n    // …\n}\n```\n\n```php\nfinal class MigrateUpCommand\n{\n    public function __construct(\n        private Console $console,\n        private MigrationManager $migrationManager,\n    ) {}\n\n    #[ConsoleCommand(\n        name: 'migrate:up',\n        description: 'Run all new migrations',\n        middleware: [ForceMiddleware::class, CautionMiddleware::class],\n    )]\n    public function __invoke(): void\n    {\n        $this->migrationManager->up();\n\n        $this->console->success(\"Everything migrated\");\n    }\n\n    #[EventHandler]\n    public function onMigrationMigrated(MigrationMigrated $migrationMigrated): void\n    {\n        $this->console->writeln(\"- {$migrationMigrated->name}\");\n    }\n}\n```\n\nRead how to get started with Tempest [here](https://tempestphp.com).\n\n## Installation\n\nInstall Tempest in any project, including existing projects:\n\n```\ncomposer require tempest/framework:1.0-alpha.4\n```\n\nOr create a Tempest project from scratch:\n\n```\ncomposer create-project tempest/app:1.0-alpha.4 <name>\n```\n\nContinue to read how Tempest works in [the docs](https://tempestphp.com).\n\n## Contributing\n\nWe welcome contributing to the Tempest framework! We only ask that you take a quick look at our [guidelines](https://tempestphp.com/docs/internals/contributing/) and then head on over to the issues page to see some ways you might help out!\n\nFor more information, [join the Tempest Discord](https://tempestphp.com/discord)\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "bun.lockb",
          "type": "blob",
          "size": 249.296875,
          "content": null
        },
        {
          "name": "cliff.toml",
          "type": "blob",
          "size": 2.40234375,
          "content": "[bump]\ninitial_tag = \"1.0-alpha1\"\n\n[changelog]\nheader = \"\"\"\n# Changelog\\n\nAll notable changes to this project will be documented in this file.\\n\n\"\"\"\nbody = \"\"\"\n{%- macro remote_url() -%}\n  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}\n{%- endmacro -%}\n\n{% macro print_commit(commit) -%}\n    - {% if commit.scope %}**{{ commit.scope }}**: {% endif %}\\\n        {% if commit.breaking %}[**breaking**] {% endif %}\\\n        {{ commit.message }} \\\n        ([{{ commit.id | truncate(length=7, end=\"\") }}]({{ self::remote_url() }}/commit/{{ commit.id }}))\\\n{% endmacro -%}\n\n{% if version %}\\\n    {% if previous.version %}\\\n        ## [{{ version | trim_start_matches(pat=\"v\") }}]\\\n          ({{ self::remote_url() }}/compare/{{ previous.version }}..{{ version }})  —  {{ timestamp | date(format=\"%Y-%m-%d\") }}\n    {% else %}\\\n        ## {{ version | trim_start_matches(pat=\"v\") }}  —  {{ timestamp | date(format=\"%Y-%m-%d\") }}\n    {% endif %}\\\n{% else %}\\\n    ## [unreleased]\n{% endif %}\\\n\n{% for group, commits in commits | group_by(attribute=\"group\") %}\n    ### {{ group | striptags | trim | upper_first }}\n    {% for commit in commits | filter(attribute=\"scope\") | sort(attribute=\"scope\") %}\n        {{ self::print_commit(commit=commit) }}\n    {%- endfor %}\n    {% for commit in commits %}\n        {%- if not commit.scope -%}\n            {{ self::print_commit(commit=commit) }}\n        {% endif -%}\n    {% endfor -%}\n{% endfor %}\n\n\n\"\"\"\n\n[git]\nskip_tags = \"(0\\\\.0\\\\.\\\\d)|(1\\\\.0-alpha1)\"\ncommit_parsers = [\n  { field = \"breaking\", pattern = \"true\", group = \"<!-- -1 -->🚨 Breaking changes\" },\n  { message = \"^feat\", group = \"<!-- 0 -->🚀 Features\" },\n  { message = \"^fix\", group = \"<!-- 1 -->🐛 Bug fixes\" },\n  { message = \"^doc\", group = \"<!-- 3 -->📚 Documentation\" },\n  { message = \"^perf\", group = \"<!-- 4 -->⚡ Performance\" },\n  { message = \"^refactor\", group = \"<!-- 2 -->🚜 Refactor\" },\n  { message = \"^style\", skip = true },\n  { message = \"^test\", group = \"<!-- 6 -->🧪 Tests\" },\n  { message = \"^chore\\\\(release\\\\): prepare for\", skip = true },\n  { message = \"^chore\\\\(deps.*\\\\)\", skip = true },\n  { message = \"^chore\\\\(pr\\\\)\", skip = true },\n  { message = \"^chore\\\\(pull\\\\)\", skip = true },\n  { message = \"^chore: update changelog\", skip = true },\n  { message = \"^chore|^ci\", skip = true },\n  { body = \".*security\", group = \"<!-- 8 -->🛡️ Security\" },\n  { message = \"^revert\", group = \"<!-- 9 -->⏪ Revert\" },\n]\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 7.630859375,
          "content": "{\n    \"name\": \"tempest/framework\",\n    \"description\": \"The PHP framework that gets out of your way.\",\n    \"license\": \"MIT\",\n    \"require\": {\n        \"doctrine/inflector\": \"^2.0\",\n        \"egulias/email-validator\": \"^4.0.2\",\n        \"ext-dom\": \"*\",\n        \"ext-fileinfo\": \"*\",\n        \"ext-libxml\": \"*\",\n        \"ext-mbstring\": \"*\",\n        \"ext-pdo\": \"*\",\n        \"ext-readline\": \"*\",\n        \"ext-simplexml\": \"*\",\n        \"filp/whoops\": \"^2.15\",\n        \"giggsey/libphonenumber-for-php\": \"^8.13.40\",\n        \"guzzlehttp/guzzle\": \"^7.8\",\n        \"laminas/laminas-diactoros\": \"^3.3\",\n        \"monolog/monolog\": \"^3.7.0\",\n        \"nette/php-generator\": \"^4.1.6\",\n        \"nikic/php-parser\": \"^5.3\",\n        \"php\": \"^8.4\",\n        \"psr-discovery/http-client-implementations\": \"1.x-dev\",\n        \"psr-discovery/http-factory-implementations\": \"1.x-dev\",\n        \"psr/cache\": \"^3.0\",\n        \"psr/clock\": \"^1.0.0\",\n        \"psr/http-client\": \"^1.0.0\",\n        \"psr/http-factory\": \"^1.0\",\n        \"psr/http-message\": \"^1.0|^2.0\",\n        \"psr/log\": \"^3.0.0\",\n        \"symfony/cache\": \"^7.2\",\n        \"symfony/process\": \"^7.1\",\n        \"symfony/uid\": \"^7.1\",\n        \"symfony/var-dumper\": \"^7.1\",\n        \"symfony/var-exporter\": \"^7.1\",\n        \"tempest/highlight\": \"^2.11.2\",\n        \"vlucas/phpdotenv\": \"^5.6\"\n    },\n    \"require-dev\": {\n        \"aidan-casey/mock-client\": \"dev-master\",\n        \"friendsofphp/php-cs-fixer\": \"^3.21\",\n        \"guzzlehttp/psr7\": \"^2.6.1\",\n        \"illuminate/view\": \"~11.7.0\",\n        \"jenssegers/blade\": \"^2.0\",\n        \"mikey179/vfsstream\": \"^2.0@dev\",\n        \"nyholm/psr7\": \"^1.8\",\n        \"phpbench/phpbench\": \"84.x-dev\",\n        \"phpstan/phpstan\": \"^2.0\",\n        \"phpunit/phpunit\": \"^11.3.5\",\n        \"rector/rector\": \"^2.0-rc2\",\n        \"spatie/phpunit-snapshot-assertions\": \"^5.1.6\",\n        \"spaze/phpstan-disallowed-calls\": \"^4.0\",\n        \"symplify/monorepo-builder\": \"^11.2\",\n        \"twig/twig\": \"^3.16\",\n        \"phpat/phpat\": \"^0.11.0\"\n    },\n    \"replace\": {\n        \"tempest/auth\": \"self.version\",\n        \"tempest/cache\": \"self.version\",\n        \"tempest/clock\": \"self.version\",\n        \"tempest/command-bus\": \"self.version\",\n        \"tempest/console\": \"self.version\",\n        \"tempest/container\": \"self.version\",\n        \"tempest/core\": \"self.version\",\n        \"tempest/database\": \"self.version\",\n        \"tempest/debug\": \"self.version\",\n        \"tempest/discovery\": \"self.version\",\n        \"tempest/event-bus\": \"self.version\",\n        \"tempest/filesystem\": \"self.version\",\n        \"tempest/generation\": \"self.version\",\n        \"tempest/http\": \"self.version\",\n        \"tempest/http-client\": \"self.version\",\n        \"tempest/log\": \"self.version\",\n        \"tempest/mapper\": \"self.version\",\n        \"tempest/reflection\": \"self.version\",\n        \"tempest/router\": \"self.version\",\n        \"tempest/support\": \"self.version\",\n        \"tempest/validation\": \"self.version\",\n        \"tempest/view\": \"self.version\",\n        \"tempest/vite\": \"self.version\"\n    },\n    \"suggest\": {\n        \"ext-pcntl\": \"Required to use some interactive console components.\"\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"autoload\": {\n        \"psr-4\": {\n            \"Tempest\\\\Auth\\\\\": \"src/Tempest/Auth/src/\",\n            \"Tempest\\\\Cache\\\\\": \"src/Tempest/Cache/src/\",\n            \"Tempest\\\\Clock\\\\\": \"src/Tempest/Clock/src/\",\n            \"Tempest\\\\CommandBus\\\\\": \"src/Tempest/CommandBus/src\",\n            \"Tempest\\\\Console\\\\\": \"src/Tempest/Console/src\",\n            \"Tempest\\\\Container\\\\\": \"src/Tempest/Container/src\",\n            \"Tempest\\\\Core\\\\\": \"src/Tempest/Core/src\",\n            \"Tempest\\\\Database\\\\\": \"src/Tempest/Database/src\",\n            \"Tempest\\\\Debug\\\\\": \"src/Tempest/Debug/src\",\n            \"Tempest\\\\Discovery\\\\\": \"src/Tempest/Discovery/src\",\n            \"Tempest\\\\EventBus\\\\\": \"src/Tempest/EventBus/src\",\n            \"Tempest\\\\Filesystem\\\\\": \"src/Tempest/Filesystem/src\",\n            \"Tempest\\\\Framework\\\\\": \"src/Tempest/Framework\",\n            \"Tempest\\\\Generation\\\\\": \"src/Tempest/Generation/src\",\n            \"Tempest\\\\HttpClient\\\\\": \"src/Tempest/HttpClient/src\",\n            \"Tempest\\\\Http\\\\\": \"src/Tempest/Http/src\",\n            \"Tempest\\\\Log\\\\\": \"src/Tempest/Log/src\",\n            \"Tempest\\\\Mapper\\\\\": \"src/Tempest/Mapper/src\",\n            \"Tempest\\\\Reflection\\\\\": \"src/Tempest/Reflection/src\",\n            \"Tempest\\\\Router\\\\\": \"src/Tempest/Router/src\",\n            \"Tempest\\\\Support\\\\\": \"src/Tempest/Support/src\",\n            \"Tempest\\\\Validation\\\\\": \"src/Tempest/Validation/src\",\n            \"Tempest\\\\View\\\\\": \"src/Tempest/View/src\",\n            \"Tempest\\\\Vite\\\\\": \"src/Tempest/Vite/src\"\n        },\n        \"files\": [\n            \"src/Tempest/CommandBus/src/functions.php\",\n            \"src/Tempest/Container/src/functions.php\",\n            \"src/Tempest/Core/src/functions.php\",\n            \"src/Tempest/Debug/src/functions.php\",\n            \"src/Tempest/EventBus/src/functions.php\",\n            \"src/Tempest/Mapper/src/functions.php\",\n            \"src/Tempest/Reflection/src/functions.php\",\n            \"src/Tempest/Router/src/functions.php\",\n            \"src/Tempest/Support/src/functions.php\",\n            \"src/Tempest/View/src/functions.php\",\n            \"src/Tempest/Vite/src/functions.php\"\n        ]\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Tempest\\\\Auth\\\\Tests\\\\\": \"src/Tempest/Auth/tests\",\n            \"Tempest\\\\Cache\\\\Tests\\\\\": \"src/Tempest/Cache/tests\",\n            \"Tempest\\\\Clock\\\\Tests\\\\\": \"src/Tempest/Clock/tests\",\n            \"Tempest\\\\CommandBus\\\\Tests\\\\\": \"src/Tempest/CommandBus/tests\",\n            \"Tempest\\\\Console\\\\Tests\\\\\": \"src/Tempest/Console/tests\",\n            \"Tempest\\\\Container\\\\Tests\\\\\": \"src/Tempest/Container/tests\",\n            \"Tempest\\\\Core\\\\Tests\\\\\": \"src/Tempest/Core/tests\",\n            \"Tempest\\\\Database\\\\Tests\\\\\": \"src/Tempest/Database/tests\",\n            \"Tempest\\\\Discovery\\\\Tests\\\\\": \"src/Tempest/Discovery/tests\",\n            \"Tempest\\\\EventBus\\\\Tests\\\\\": \"src/Tempest/EventBus/tests\",\n            \"Tempest\\\\Filesystem\\\\Tests\\\\\": \"src/Tempest/Filesystem/tests\",\n            \"Tempest\\\\Generation\\\\Tests\\\\\": \"src/Tempest/Generation/tests\",\n            \"Tempest\\\\HttpClient\\\\Tests\\\\\": \"src/Tempest/HttpClient/tests\",\n            \"Tempest\\\\Http\\\\Tests\\\\\": [\n                \"src/Tempest/Http/tests\",\n                \"src/Tempest/Router/tests\"\n            ],\n            \"Tempest\\\\Log\\\\Tests\\\\\": \"src/Tempest/Log/tests\",\n            \"Tempest\\\\Mapper\\\\Tests\\\\\": \"src/Tempest/Mapper/tests\",\n            \"Tempest\\\\Reflection\\\\Tests\\\\\": \"src/Tempest/Reflection/tests\",\n            \"Tempest\\\\Router\\\\Tests\\\\\": \"src/Tempest/Router/tests\",\n            \"Tempest\\\\Support\\\\Tests\\\\\": \"src/Tempest/Support/tests\",\n            \"Tempest\\\\Validation\\\\Tests\\\\\": \"src/Tempest/Validation/tests\",\n            \"Tempest\\\\Vite\\\\Tests\\\\\": \"src/Tempest/Vite/tests\",\n            \"Tests\\\\Tempest\\\\\": \"tests/\"\n        }\n    },\n    \"bin\": [\n        \"src/Tempest/Console/bin/tempest\"\n    ],\n    \"scripts\": {\n        \"phpunit\": \"vendor/bin/phpunit --display-warnings --display-skipped --display-deprecations --display-errors --display-notices\",\n        \"coverage\": \"vendor/bin/phpunit --coverage-html build/reports/html --coverage-clover build/reports/clover.xml\",\n        \"csfixer\": \"PHP_CS_FIXER_IGNORE_ENV=1 vendor/bin/php-cs-fixer fix --allow-risky=yes\",\n        \"phpstan\": \"vendor/bin/phpstan analyse src tests --memory-limit=1G\",\n        \"rector\": \"vendor/bin/rector process --no-ansi\",\n        \"merge\": \"vendor/bin/monorepo-builder merge\",\n        \"qa\": [\n            \"composer merge\",\n            \"./bin/validate-packages\",\n            \"./tempest discovery:clear\",\n            \"composer rector\",\n            \"composer csfixer\",\n            \"composer phpunit\",\n            \"composer phpstan\"\n        ]\n    }\n}\n"
        },
        {
          "name": "eslint.config.mjs",
          "type": "blob",
          "size": 0.0927734375,
          "content": "import defineEslintConfig from '@innocenzi/eslint-config'\n\nexport default defineEslintConfig()\n"
        },
        {
          "name": "monorepo-builder.php",
          "type": "blob",
          "size": 0.193359375,
          "content": "<?php\n\ndeclare(strict_types=1);\n\nuse Symplify\\MonorepoBuilder\\Config\\MBConfig;\n\nreturn static function (MBConfig $mbConfig): void {\n    $mbConfig->packageDirectories([__DIR__ . '/src/Tempest']);\n};\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.5625,
          "content": "{\n  \"private\": true,\n  \"workspaces\": [\"packages/*\"],\n  \"scripts\": {\n    \"qa\": \"bun lint:fix && bun run test run && bun run build\",\n    \"lint\": \"eslint packages\",\n    \"lint:fix\": \"eslint --fix packages\",\n    \"build\": \"bun --filter '*' build\",\n    \"dev\": \"bun --filter '*' build:stub\",\n    \"test\": \"vitest\"\n  },\n  \"devDependencies\": {\n    \"@innocenzi/eslint-config\": \"^0.22.4\",\n    \"@types/bun\": \"latest\",\n    \"bumpp\": \"^9.9.0\",\n    \"eslint\": \"^9.16.0\",\n    \"typescript\": \"^5.7.2\",\n    \"unbuild\": \"^2.0.0\",\n    \"vite-plugin-tempest\": \"workspace:*\",\n    \"vitest\": \"^2.1.8\"\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpbench.json",
          "type": "blob",
          "size": 0.107421875,
          "content": "{\n  \"$schema\":\"./vendor/phpbench/phpbench/phpbench.schema.json\",\n  \"runner.bootstrap\": \"vendor/autoload.php\"\n}"
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 0.0283203125,
          "content": "parameters:\n\tignoreErrors: []"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 1.09375,
          "content": "includes:\n\t- phpstan-baseline.neon\n\t- vendor/spaze/phpstan-disallowed-calls/extension.neon\n\t- vendor/phpat/phpat/extension.neon\nservices:\n\t-\n\t\tclass: Tests\\Tempest\\Architecture\\ArchitectureTestCase\n\t\ttags:\n\t\t\t- phpat.test\nparameters:\n\tlevel: 5\n\ttmpDir: .cache/phpstan\n\ttips:\n\t    treatPhpDocTypesAsCertain: false\n\texcludePaths:\n\t    - tests/Integration/View/blade/cache/**.php\n\tpaths:\n\t\t- src\n\t\t- tests\n\tignoreErrors:\n\t\t-\n\t\t\tidentifier: argument.named\n\t\t-\n\t\t\tmessage: '#.*#'\n\t\t\tpath: src/Tempest/Router/src/Exceptions/exception.php\n\t\t-\n\t\t    message: '#.*exec*#'\n\t\t    path: src/Tempest/Console/src/Terminal/Terminal.php\n\t\t-\n\t\t    message: '#.*uninitialized readonly property \\$console*#'\n\t\t-\n\t\t    message: '#.*uninitialized readonly property \\$composer*#'\n\t\t-\n\t\t    message: '#.*uninitialized readonly property \\$stubFileGenerator*#'\n\t\t-\n\t\t    message: '#.*undefined property Dom*#'\n\t\t-\n\t\t    message: '#.*undefined method Dom*#'\n\n\tdisallowedFunctionCalls:\n\t\t-\n\t\t\tfunction: 'exec()'\n\t\t-\n\t\t\tfunction: 'eval()'\n\t\t-\n\t\t\tfunction: 'dd()'\n\t\t-\n\t\t\tfunction: 'dump()'\n\t\t-\n\t\t\tfunction: 'phpinfo()'\n\t\t-\n\t\t\tfunction: 'var_dump()'\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 1.37890625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.2/phpunit.xsd\"\n        colors=\"true\"\n        displayDetailsOnTestsThatTriggerDeprecations=\"true\"\n        displayDetailsOnTestsThatTriggerErrors=\"true\"\n        displayDetailsOnTestsThatTriggerNotices=\"true\"\n        displayDetailsOnTestsThatTriggerWarnings=\"true\"\n        bootstrap=\"./tests/bootstrap.php\"\n        cacheDirectory=\".cache/phpunit\"\n>\n  <testsuites>\n    <testsuite name=\"Integration\">\n      <directory suffix=\"Test.php\">tests/Integration</directory>\n    </testsuite>\n    <testsuite name=\"Unit\">\n      <directory suffix=\"Test.php\">src/Tempest/**/tests</directory>\n    </testsuite>\n  </testsuites>\n  <coverage />\n  <source>\n    <include>\n      <directory suffix=\".php\">src</directory>\n    </include>\n    <exclude>\n      <directory suffix=\".php\">src/Tempest/**/tests</directory>\n      <directory suffix=\".cache.php\">src</directory>\n    </exclude>\n  </source>\n  <php>\n    <env name=\"ENVIRONMENT\" value=\"testing\" />\n    <env name=\"BASE_URI\" value=\"\" />\n    <env name=\"CACHE\" value=\"null\" />\n    <env name=\"DISCOVERY_CACHE\" value=\"true\" />\n    <env name=\"DEBUG_LOG_PATH\" value=\"log/debug.test.log\" />\n    <env name=\"SERVER_LOG_PATH\" value=\"log/server.test.log\" />\n    <ini name=\"memory_limit\" value=\"256M\" />\n  </php>\n</phpunit>\n"
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "rector.php",
          "type": "blob",
          "size": 3.1884765625,
          "content": "<?php\n\ndeclare(strict_types=1);\n\nuse Rector\\Arguments\\Rector\\ClassMethod\\ArgumentAdderRector;\nuse Rector\\Caching\\ValueObject\\Storage\\FileCacheStorage;\nuse Rector\\CodingStyle\\Rector\\Encapsed\\EncapsedStringsToSprintfRector;\nuse Rector\\Config\\RectorConfig;\nuse Rector\\DeadCode\\Rector\\ClassMethod\\RemoveUnusedPublicMethodParameterRector;\nuse Rector\\DeadCode\\Rector\\PropertyProperty\\RemoveNullPropertyInitializationRector;\nuse Rector\\Php70\\Rector\\StaticCall\\StaticCallOnNonStaticToInstanceCallRector;\nuse Rector\\Php74\\Rector\\Closure\\ClosureToArrowFunctionRector;\nuse Rector\\Php74\\Rector\\Property\\RestoreDefaultNullToNullableTypePropertyRector;\nuse Rector\\Php74\\Rector\\Ternary\\ParenthesizeNestedTernaryRector;\nuse Rector\\Php81\\Rector\\Array_\\FirstClassCallableRector;\nuse Rector\\Php81\\Rector\\FuncCall\\NullToStrictStringFuncCallArgRector;\nuse Rector\\Php81\\Rector\\Property\\ReadOnlyPropertyRector;\nuse Rector\\Php82\\Rector\\Class_\\ReadOnlyClassRector;\nuse Rector\\Php82\\Rector\\Param\\AddSensitiveParameterAttributeRector;\nuse Rector\\Php83\\Rector\\ClassMethod\\AddOverrideAttributeToOverriddenMethodsRector;\nuse Rector\\Php84\\Rector\\Param\\ExplicitNullableParamTypeRector;\nuse Rector\\TypeDeclaration\\Rector\\ArrowFunction\\AddArrowFunctionReturnTypeRector;\nuse Rector\\TypeDeclaration\\Rector\\ClassMethod\\ReturnNeverTypeRector;\nuse Rector\\TypeDeclaration\\Rector\\Closure\\ClosureReturnTypeRector;\nuse Rector\\TypeDeclaration\\Rector\\Empty_\\EmptyOnNullableObjectToInstanceOfRector;\n\nreturn RectorConfig::configure()\n    ->withCache('./.cache/rector', FileCacheStorage::class)\n    ->withPaths([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->withConfiguredRule(AddSensitiveParameterAttributeRector::class, [\n        'sensitive_parameters' => [\n            'password',\n            'secret',\n        ],\n    ])\n    ->withRules([\n        ParenthesizeNestedTernaryRector::class,\n        ExplicitNullableParamTypeRector::class,\n    ])\n    ->withSkip([\n        AddOverrideAttributeToOverriddenMethodsRector::class,\n        ArgumentAdderRector::class,\n        ClosureToArrowFunctionRector::class,\n        EmptyOnNullableObjectToInstanceOfRector::class,\n        FirstClassCallableRector::class,\n        NullToStrictStringFuncCallArgRector::class,\n        ReadOnlyClassRector::class,\n        ReadOnlyPropertyRector::class,\n        RemoveNullPropertyInitializationRector::class,\n        AddSensitiveParameterAttributeRector::class,\n        RemoveUnusedPublicMethodParameterRector::class,\n        RestoreDefaultNullToNullableTypePropertyRector::class,\n        ReturnNeverTypeRector::class,\n        StaticCallOnNonStaticToInstanceCallRector::class,\n        ClosureReturnTypeRector::class,\n        EncapsedStringsToSprintfRector::class,\n        AddArrowFunctionReturnTypeRector::class,\n    ])\n    ->withSkipPath(__DIR__  .'/src/Tempest/Router/src/Exceptions/HttpProductionErrorHandler.php')\n    ->withSkipPath(__DIR__ . '/src/Tempest/Router/src/Exceptions/exception.php')\n    ->withParallel(300, 10, 10)\n    ->withPreparedSets(\n        codeQuality: false,\n        codingStyle: true,\n        privatization: true,\n        naming: false,\n        earlyReturn: true,\n    )\n    ->withDeadCodeLevel(40)\n    ->withMemoryLimit('3G')\n    ->withPhpSets(php83: true)\n    ->withTypeCoverageLevel(37);\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tempest",
          "type": "blob",
          "size": 0.4345703125,
          "content": "#!/usr/bin/env php\n<?php\n\nuse Tempest\\Console\\ConsoleApplication;\nuse Tempest\\Discovery\\DiscoveryLocation;\n\nrequire_once getcwd() . '/vendor/autoload.php';\n\nConsoleApplication::boot(discoveryLocations: [\n        new DiscoveryLocation('Tests\\\\Tempest\\\\Fixtures\\\\', getcwd() . '/tests/Fixtures/'),\n        new DiscoveryLocation('Tests\\\\Tempest\\\\Integration\\\\Console\\\\Fixtures', getcwd() . '/tests/Integration/Console/Fixtures'),\n])->run();\n\nexit;\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}