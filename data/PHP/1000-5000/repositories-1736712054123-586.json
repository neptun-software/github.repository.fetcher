{
  "metadata": {
    "timestamp": 1736712054123,
    "page": 586,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress",
      "stars": 1753,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.861328125,
          "content": "# Created by http://www.gitignore.io\n\n### OSX ###\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\r\r\n\n# Thumbnails\n._*\n\n# Files that might appear on external disk\n.Spotlight-V100\n.Trashes\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n\n### Node ###\n# Logs\nlogs\n*.log\n\n# Runtime data\npids\n*.pid\n*.seed\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Compiled binary addons (http://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directory\n# Deployed apps should consider commenting this line out:\n# see https://npmjs.org/doc/faq.html#Should-I-check-my-node_modules-folder-into-git\nnode_modules\n\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.4306640625,
          "content": "language: php\n\nphp:\n    - 5.3\n    - 5.4\n\nenv:\n    - WP_VERSION=latest WP_MULTISITE=0\n    - WP_VERSION=latest WP_MULTISITE=1\n    - WP_VERSION=3.8 WP_MULTISITE=0\n    - WP_VERSION=3.8 WP_MULTISITE=1\n    - WP_VERSION=3.5 WP_MULTISITE=0\n    - WP_VERSION=3.5 WP_MULTISITE=1\n\nbefore_script:\n    - bash tests/bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION\n\nscript: phpunit\n\nbranches:\n    only:\n        - master\n        - trunk\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.41015625,
          "content": "### The issues section is for bug reports and feature requests only. If you need help, please use [stackoverflow](http://stackoverflow.com/search?q=cmb).\n\n**Note: all future development will continue on [CMB2](https://github.com/WebDevStudios/CMB2). Please see [that repo's CONTRIBUTING.md](https://github.com/WebDevStudios/CMB2/blob/master/CONTRIBUTING.md)**\n\nAll future Pull Requests and Issues will be directed here.\n"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 2.5146484375,
          "content": "module.exports = function(grunt) {\n\tgrunt.initConfig({\n\t\tpkg: grunt.file.readJSON('package.json'),\n\t\tphpunit: {\n\t\t\tclasses: {}\n\t\t},\n\t\tgithooks: {\n\t\t\tall: {\n\t\t\t\t'pre-commit': 'default'\n\t\t\t}\n\t\t},\n\t\t// concat: {\n\t\t// \toptions: {\n\t\t// \t\tstripBanners: true,\n\t\t// \t\t// banner: '/*! <%= pkg.title %> - v<%= pkg.version %> - <%= grunt.template.today(\"yyyy-mm-dd\") %>\\n' +\n\t\t// \t\t// \t' * <%= pkg.homepage %>\\n' +\n\t\t// \t\t// \t' * Copyright (c) <%= grunt.template.today(\"yyyy\") %>;' +\n\t\t// \t\t// \t' * Licensed GPLv2+' +\n\t\t// \t\t// \t' */\\n'\n\t\t// \t},\n\t\t// \t'': {\n\t\t// \t\tsrc: [\n\t\t// \t\t\t'js/cmb.js',\n\t\t// \t\t\t'js/cmb.js',\n\t\t// \t\t],\n\t\t// \t\tdest: 'assets/js/{%= dir_name %}.js'\n\t\t// \t}\n\t\t// },\n\t\tcssmin: {\n\t\t\toptions: {\n\t\t\t\t// banner: '/*! <%= pkg.title %> - v<%= pkg.version %> - <%= grunt.template.today(\"yyyy-mm-dd\") %>\\n' +\n\t\t\t\t// \t' * <%= pkg.homepage %>\\n' +\n\t\t\t\t// \t' * Copyright (c) <%= grunt.template.today(\"yyyy\") %>;' +\n\t\t\t\t// \t' * Licensed GPLv2+' +\n\t\t\t\t// \t' */\\n'\n\t\t\t},\n\t\t\tminify: {\n\t\t\t\texpand: true,\n\t\t\t\tsrc: ['style.css'],\n\t\t\t\t// dest: '',\n\t\t\t\text: '.min.css'\n\t\t\t}\n\t\t},\n\t\tjshint: {\n\t\t\tall: [\n\t\t\t\t'Gruntfile.js',\n\t\t\t\t'js/cmb.js'\n\t\t\t],\n\t\t\toptions: {\n\t\t\t\tcurly   : true,\n\t\t\t\teqeqeq  : true,\n\t\t\t\timmed   : true,\n\t\t\t\tlatedef : true,\n\t\t\t\tnewcap  : true,\n\t\t\t\tnoarg   : true,\n\t\t\t\tsub     : true,\n\t\t\t\tunused  : true,\n\t\t\t\tundef   : true,\n\t\t\t\tboss    : true,\n\t\t\t\teqnull  : true,\n\t\t\t\tglobals : {\n\t\t\t\t\texports : true,\n\t\t\t\t\tmodule  : false\n\t\t\t\t},\n\t\t\t\tpredef  :['document','window','jQuery','cmb_l10','wp','tinyMCEPreInit','tinyMCE','console']\n\t\t\t}\n\t\t},\n\t\tuglify: {\n\t\t\tall: {\n\t\t\t\tfiles: {\n\t\t\t\t\t'js/cmb.min.js': ['js/cmb.js']\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\t// banner: '/*! <%= pkg.title %> - v<%= pkg.version %> - <%= grunt.template.today(\"yyyy-mm-dd\") %>\\n' +\n\t\t\t\t\t// \t' * <%= pkg.homepage %>\\n' +\n\t\t\t\t\t// \t' * Copyright (c) <%= grunt.template.today(\"yyyy\") %>;' +\n\t\t\t\t\t// \t' * Licensed GPLv2+' +\n\t\t\t\t\t// \t' */\\n',\n\t\t\t\t\tmangle: false\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\twatch:  {\n\n\t\t\tcss: {\n\t\t\t\tfiles: ['style.css'],\n\t\t\t\ttasks: ['cssmin']\n\t\t\t},\n\n\t\t\tscripts: {\n\t\t\t\tfiles: ['js/cmb.js'],\n\t\t\t\ttasks: ['jshint', 'uglify'],\n\t\t\t\toptions: {\n\t\t\t\t\tdebounceDelay: 500\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t});\n\n\tgrunt.loadNpmTasks('grunt-phpunit');\n\tgrunt.loadNpmTasks('grunt-githooks');\n\tgrunt.loadNpmTasks('grunt-contrib-jshint');\n\tgrunt.loadNpmTasks('grunt-contrib-uglify');\n\tgrunt.loadNpmTasks('grunt-contrib-cssmin');\n\tgrunt.loadNpmTasks('grunt-contrib-watch');\n\t// grunt.loadNpmTasks('grunt-contrib-concat');\n\n\tgrunt.registerTask('default', ['jshint', 'cssmin', 'uglify', 'phpunit']);\n\tgrunt.registerTask('tests', ['jshint', 'phpunit']);\n};\n"
        },
        {
          "name": "example-functions.php",
          "type": "blob",
          "size": 14.0712890625,
          "content": "<?php\r\n/**\r\n * Include and setup custom metaboxes and fields.\r\n *\r\n * @category YourThemeOrPlugin\r\n * @package  Metaboxes\r\n * @license  http://www.opensource.org/licenses/gpl-license.php GPL v2.0 (or later)\r\n * @link     https://github.com/webdevstudios/Custom-Metaboxes-and-Fields-for-WordPress\r\n */\r\n\r\nadd_filter( 'cmb_meta_boxes', 'cmb_sample_metaboxes' );\r\n/**\r\n * Define the metabox and field configurations.\r\n *\r\n * @param  array $meta_boxes\r\n * @return array\r\n */\r\nfunction cmb_sample_metaboxes( array $meta_boxes ) {\r\n\r\n\t// Start with an underscore to hide fields from custom fields list\r\n\t$prefix = '_cmb_';\r\n\r\n\t/**\r\n\t * Sample metabox to demonstrate each field type included\r\n\t */\r\n\t$meta_boxes['test_metabox'] = array(\r\n\t\t'id'         => 'test_metabox',\r\n\t\t'title'      => __( 'Test Metabox', 'cmb' ),\r\n\t\t'pages'      => array( 'page', ), // Post type\r\n\t\t'context'    => 'normal',\r\n\t\t'priority'   => 'high',\r\n\t\t'show_names' => true, // Show field names on the left\r\n\t\t// 'cmb_styles' => true, // Enqueue the CMB stylesheet on the frontend\r\n\t\t'fields'     => array(\r\n\t\t\tarray(\r\n\t\t\t\t'name'       => __( 'Test Text', 'cmb' ),\r\n\t\t\t\t'desc'       => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'         => $prefix . 'test_text',\r\n\t\t\t\t'type'       => 'text',\r\n\t\t\t\t'show_on_cb' => 'cmb_test_text_show_on_cb', // function should return a bool value\r\n\t\t\t\t// 'sanitization_cb' => 'my_custom_sanitization', // custom sanitization callback parameter\r\n\t\t\t\t// 'escape_cb'       => 'my_custom_escaping',  // custom escaping callback parameter\r\n\t\t\t\t// 'on_front'        => false, // Optionally designate a field to wp-admin only\r\n\t\t\t\t// 'repeatable'      => true,\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Test Text Small', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'test_textsmall',\r\n\t\t\t\t'type' => 'text_small',\r\n\t\t\t\t// 'repeatable' => true,\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Test Text Medium', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'test_textmedium',\r\n\t\t\t\t'type' => 'text_medium',\r\n\t\t\t\t// 'repeatable' => true,\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Website URL', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'url',\r\n\t\t\t\t'type' => 'text_url',\r\n\t\t\t\t// 'protocols' => array('http', 'https', 'ftp', 'ftps', 'mailto', 'news', 'irc', 'gopher', 'nntp', 'feed', 'telnet'), // Array of allowed protocols\r\n\t\t\t\t// 'repeatable' => true,\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Test Text Email', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'email',\r\n\t\t\t\t'type' => 'text_email',\r\n\t\t\t\t// 'repeatable' => true,\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Test Time', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'test_time',\r\n\t\t\t\t'type' => 'text_time',\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Time zone', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'Time zone', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'timezone',\r\n\t\t\t\t'type' => 'select_timezone',\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Test Date Picker', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'test_textdate',\r\n\t\t\t\t'type' => 'text_date',\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Test Date Picker (UNIX timestamp)', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'test_textdate_timestamp',\r\n\t\t\t\t'type' => 'text_date_timestamp',\r\n\t\t\t\t// 'timezone_meta_key' => $prefix . 'timezone', // Optionally make this field honor the timezone selected in the select_timezone specified above\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Test Date/Time Picker Combo (UNIX timestamp)', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'test_datetime_timestamp',\r\n\t\t\t\t'type' => 'text_datetime_timestamp',\r\n\t\t\t),\r\n\t\t\t// This text_datetime_timestamp_timezone field type\r\n\t\t\t// is only compatible with PHP versions 5.3 or above.\r\n\t\t\t// Feel free to uncomment and use if your server meets the requirement\r\n\t\t\t// array(\r\n\t\t\t// \t'name' => __( 'Test Date/Time Picker/Time zone Combo (serialized DateTime object)', 'cmb' ),\r\n\t\t\t// \t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t// \t'id'   => $prefix . 'test_datetime_timestamp_timezone',\r\n\t\t\t// \t'type' => 'text_datetime_timestamp_timezone',\r\n\t\t\t// ),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Test Money', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'test_textmoney',\r\n\t\t\t\t'type' => 'text_money',\r\n\t\t\t\t// 'before'     => '£', // override '$' symbol if needed\r\n\t\t\t\t// 'repeatable' => true,\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name'    => __( 'Test Color Picker', 'cmb' ),\r\n\t\t\t\t'desc'    => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'      => $prefix . 'test_colorpicker',\r\n\t\t\t\t'type'    => 'colorpicker',\r\n\t\t\t\t'default' => '#ffffff'\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Test Text Area', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'test_textarea',\r\n\t\t\t\t'type' => 'textarea',\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Test Text Area Small', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'test_textareasmall',\r\n\t\t\t\t'type' => 'textarea_small',\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Test Text Area for Code', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'test_textarea_code',\r\n\t\t\t\t'type' => 'textarea_code',\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Test Title Weeeee', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'This is a title description', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'test_title',\r\n\t\t\t\t'type' => 'title',\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name'    => __( 'Test Select', 'cmb' ),\r\n\t\t\t\t'desc'    => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'      => $prefix . 'test_select',\r\n\t\t\t\t'type'    => 'select',\r\n\t\t\t\t'options' => array(\r\n\t\t\t\t\t'standard' => __( 'Option One', 'cmb' ),\r\n\t\t\t\t\t'custom'   => __( 'Option Two', 'cmb' ),\r\n\t\t\t\t\t'none'     => __( 'Option Three', 'cmb' ),\r\n\t\t\t\t),\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name'    => __( 'Test Radio inline', 'cmb' ),\r\n\t\t\t\t'desc'    => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'      => $prefix . 'test_radio_inline',\r\n\t\t\t\t'type'    => 'radio_inline',\r\n\t\t\t\t'options' => array(\r\n\t\t\t\t\t'standard' => __( 'Option One', 'cmb' ),\r\n\t\t\t\t\t'custom'   => __( 'Option Two', 'cmb' ),\r\n\t\t\t\t\t'none'     => __( 'Option Three', 'cmb' ),\r\n\t\t\t\t),\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name'    => __( 'Test Radio', 'cmb' ),\r\n\t\t\t\t'desc'    => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'      => $prefix . 'test_radio',\r\n\t\t\t\t'type'    => 'radio',\r\n\t\t\t\t'options' => array(\r\n\t\t\t\t\t'option1' => __( 'Option One', 'cmb' ),\r\n\t\t\t\t\t'option2' => __( 'Option Two', 'cmb' ),\r\n\t\t\t\t\t'option3' => __( 'Option Three', 'cmb' ),\r\n\t\t\t\t),\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name'     => __( 'Test Taxonomy Radio', 'cmb' ),\r\n\t\t\t\t'desc'     => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'       => $prefix . 'text_taxonomy_radio',\r\n\t\t\t\t'type'     => 'taxonomy_radio',\r\n\t\t\t\t'taxonomy' => 'category', // Taxonomy Slug\r\n\t\t\t\t// 'inline'  => true, // Toggles display to inline\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name'     => __( 'Test Taxonomy Select', 'cmb' ),\r\n\t\t\t\t'desc'     => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'       => $prefix . 'text_taxonomy_select',\r\n\t\t\t\t'type'     => 'taxonomy_select',\r\n\t\t\t\t'taxonomy' => 'category', // Taxonomy Slug\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name'     => __( 'Test Taxonomy Multi Checkbox', 'cmb' ),\r\n\t\t\t\t'desc'     => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'       => $prefix . 'test_multitaxonomy',\r\n\t\t\t\t'type'     => 'taxonomy_multicheck',\r\n\t\t\t\t'taxonomy' => 'post_tag', // Taxonomy Slug\r\n\t\t\t\t// 'inline'  => true, // Toggles display to inline\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Test Checkbox', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'test_checkbox',\r\n\t\t\t\t'type' => 'checkbox',\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name'    => __( 'Test Multi Checkbox', 'cmb' ),\r\n\t\t\t\t'desc'    => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'      => $prefix . 'test_multicheckbox',\r\n\t\t\t\t'type'    => 'multicheck',\r\n\t\t\t\t'options' => array(\r\n\t\t\t\t\t'check1' => __( 'Check One', 'cmb' ),\r\n\t\t\t\t\t'check2' => __( 'Check Two', 'cmb' ),\r\n\t\t\t\t\t'check3' => __( 'Check Three', 'cmb' ),\r\n\t\t\t\t),\r\n\t\t\t\t// 'inline'  => true, // Toggles display to inline\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name'    => __( 'Test wysiwyg', 'cmb' ),\r\n\t\t\t\t'desc'    => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'      => $prefix . 'test_wysiwyg',\r\n\t\t\t\t'type'    => 'wysiwyg',\r\n\t\t\t\t'options' => array( 'textarea_rows' => 5, ),\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Test Image', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'Upload an image or enter a URL.', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'test_image',\r\n\t\t\t\t'type' => 'file',\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name'         => __( 'Multiple Files', 'cmb' ),\r\n\t\t\t\t'desc'         => __( 'Upload or add multiple images/attachments.', 'cmb' ),\r\n\t\t\t\t'id'           => $prefix . 'test_file_list',\r\n\t\t\t\t'type'         => 'file_list',\r\n\t\t\t\t'preview_size' => array( 100, 100 ), // Default: array( 50, 50 )\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'oEmbed', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'Enter a youtube, twitter, or instagram URL. Supports services listed at <a href=\"http://codex.wordpress.org/Embeds\">http://codex.wordpress.org/Embeds</a>.', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'test_embed',\r\n\t\t\t\t'type' => 'oembed',\r\n\t\t\t),\r\n\t\t),\r\n\t);\r\n\r\n\t/**\r\n\t * Metabox to be displayed on a single page ID\r\n\t */\r\n\t$meta_boxes['about_page_metabox'] = array(\r\n\t\t'id'         => 'about_page_metabox',\r\n\t\t'title'      => __( 'About Page Metabox', 'cmb' ),\r\n\t\t'pages'      => array( 'page', ), // Post type\r\n\t\t'context'    => 'normal',\r\n\t\t'priority'   => 'high',\r\n\t\t'show_names' => true, // Show field names on the left\r\n\t\t'show_on'    => array( 'key' => 'id', 'value' => array( 2, ), ), // Specific post IDs to display this metabox\r\n\t\t'fields'     => array(\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Test Text', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . '_about_test_text',\r\n\t\t\t\t'type' => 'text',\r\n\t\t\t),\r\n\t\t)\r\n\t);\r\n\r\n\t/**\r\n\t * Repeatable Field Groups\r\n\t */\r\n\t$meta_boxes['field_group'] = array(\r\n\t\t'id'         => 'field_group',\r\n\t\t'title'      => __( 'Repeating Field Group', 'cmb' ),\r\n\t\t'pages'      => array( 'page', ),\r\n\t\t'fields'     => array(\r\n\t\t\tarray(\r\n\t\t\t\t'id'          => $prefix . 'repeat_group',\r\n\t\t\t\t'type'        => 'group',\r\n\t\t\t\t'description' => __( 'Generates reusable form entries', 'cmb' ),\r\n\t\t\t\t'options'     => array(\r\n\t\t\t\t\t'group_title'   => __( 'Entry {#}', 'cmb' ), // {#} gets replaced by row number\r\n\t\t\t\t\t'add_button'    => __( 'Add Another Entry', 'cmb' ),\r\n\t\t\t\t\t'remove_button' => __( 'Remove Entry', 'cmb' ),\r\n\t\t\t\t\t'sortable'      => true, // beta\r\n\t\t\t\t),\r\n\t\t\t\t// Fields array works the same, except id's only need to be unique for this group. Prefix is not needed.\r\n\t\t\t\t'fields'      => array(\r\n\t\t\t\t\tarray(\r\n\t\t\t\t\t\t'name' => 'Entry Title',\r\n\t\t\t\t\t\t'id'   => 'title',\r\n\t\t\t\t\t\t'type' => 'text',\r\n\t\t\t\t\t\t// 'repeatable' => true, // Repeatable fields are supported w/in repeatable groups (for most types)\r\n\t\t\t\t\t),\r\n\t\t\t\t\tarray(\r\n\t\t\t\t\t\t'name' => 'Description',\r\n\t\t\t\t\t\t'description' => 'Write a short description for this entry',\r\n\t\t\t\t\t\t'id'   => 'description',\r\n\t\t\t\t\t\t'type' => 'textarea_small',\r\n\t\t\t\t\t),\r\n\t\t\t\t\tarray(\r\n\t\t\t\t\t\t'name' => 'Entry Image',\r\n\t\t\t\t\t\t'id'   => 'image',\r\n\t\t\t\t\t\t'type' => 'file',\r\n\t\t\t\t\t),\r\n\t\t\t\t\tarray(\r\n\t\t\t\t\t\t'name' => 'Image Caption',\r\n\t\t\t\t\t\t'id'   => 'image_caption',\r\n\t\t\t\t\t\t'type' => 'text',\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t),\r\n\t\t),\r\n\t);\r\n\r\n\t/**\r\n\t * Metabox for the user profile screen\r\n\t */\r\n\t$meta_boxes['user_edit'] = array(\r\n\t\t'id'         => 'user_edit',\r\n\t\t'title'      => __( 'User Profile Metabox', 'cmb' ),\r\n\t\t'pages'      => array( 'user' ), // Tells CMB to use user_meta vs post_meta\r\n\t\t'show_names' => true,\r\n\t\t'cmb_styles' => false, // Show cmb bundled styles.. not needed on user profile page\r\n\t\t'fields'     => array(\r\n\t\t\tarray(\r\n\t\t\t\t'name'     => __( 'Extra Info', 'cmb' ),\r\n\t\t\t\t'desc'     => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'       => $prefix . 'exta_info',\r\n\t\t\t\t'type'     => 'title',\r\n\t\t\t\t'on_front' => false,\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name'    => __( 'Avatar', 'cmb' ),\r\n\t\t\t\t'desc'    => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'      => $prefix . 'avatar',\r\n\t\t\t\t'type'    => 'file',\r\n\t\t\t\t'save_id' => true,\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Facebook URL', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'facebookurl',\r\n\t\t\t\t'type' => 'text_url',\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Twitter URL', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'twitterurl',\r\n\t\t\t\t'type' => 'text_url',\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Google+ URL', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'googleplusurl',\r\n\t\t\t\t'type' => 'text_url',\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'Linkedin URL', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'linkedinurl',\r\n\t\t\t\t'type' => 'text_url',\r\n\t\t\t),\r\n\t\t\tarray(\r\n\t\t\t\t'name' => __( 'User Field', 'cmb' ),\r\n\t\t\t\t'desc' => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'   => $prefix . 'user_text_field',\r\n\t\t\t\t'type' => 'text',\r\n\t\t\t),\r\n\t\t)\r\n\t);\r\n\r\n\t/**\r\n\t * Metabox for an options page. Will not be added automatically, but needs to be called with\r\n\t * the `cmb_metabox_form` helper function. See wiki for more info.\r\n\t */\r\n\t$meta_boxes['options_page'] = array(\r\n\t\t'id'      => 'options_page',\r\n\t\t'title'   => __( 'Theme Options Metabox', 'cmb' ),\r\n\t\t'show_on' => array( 'key' => 'options-page', 'value' => array( $prefix . 'theme_options', ), ),\r\n\t\t'fields'  => array(\r\n\t\t\tarray(\r\n\t\t\t\t'name'    => __( 'Site Background Color', 'cmb' ),\r\n\t\t\t\t'desc'    => __( 'field description (optional)', 'cmb' ),\r\n\t\t\t\t'id'      => $prefix . 'bg_color',\r\n\t\t\t\t'type'    => 'colorpicker',\r\n\t\t\t\t'default' => '#ffffff'\r\n\t\t\t),\r\n\t\t)\r\n\t);\r\n\r\n\t// Add other metaboxes as needed\r\n\r\n\treturn $meta_boxes;\r\n}\r\n\r\nadd_action( 'init', 'cmb_initialize_cmb_meta_boxes', 9999 );\r\n/**\r\n * Initialize the metabox class.\r\n */\r\nfunction cmb_initialize_cmb_meta_boxes() {\r\n\r\n\tif ( ! class_exists( 'cmb_Meta_Box' ) )\r\n\t\trequire_once 'init.php';\r\n\r\n}\r\n"
        },
        {
          "name": "helpers",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "init.php",
          "type": "blob",
          "size": 35.2548828125,
          "content": "<?php\n/*\nScript Name:  Custom Metaboxes and Fields\nContributors: WebDevStudios (@webdevstudios / webdevstudios.com)\n              Justin Sternberg (@jtsternberg / dsgnwrks.pro)\n              Jared Atchison (@jaredatch / jaredatchison.com)\n              Bill Erickson (@billerickson / billerickson.net)\n              Andrew Norcross (@norcross / andrewnorcross.com)\nDescription:  This will create metaboxes with custom fields that will blow your mind.\nVersion:      1.2.0\n*/\n\n/**\n * Released under the GPL license\n * http://www.opensource.org/licenses/gpl-license.php\n *\n * This is an add-on for WordPress\n * http://wordpress.org/\n *\n * **********************************************************************\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * **********************************************************************\n */\n\n/************************************************************************\n\t\tYou should not edit the code below or things might explode!\n*************************************************************************/\n\n// Autoload helper classes\nspl_autoload_register('cmb_Meta_Box::autoload_helpers');\n\n$meta_boxes = array();\n$meta_boxes = apply_filters( 'cmb_meta_boxes', $meta_boxes );\nforeach ( $meta_boxes as $meta_box ) {\n\t$my_box = new cmb_Meta_Box( $meta_box );\n}\n\ndefine( 'CMB_META_BOX_URL', cmb_Meta_Box::get_meta_box_url() );\n\n/**\n * Create meta boxes\n */\nclass cmb_Meta_Box {\n\n\t/**\n\t * Current version number\n\t * @var   string\n\t * @since 1.0.0\n\t */\n\tconst CMB_VERSION = '1.2.0';\n\n\t/**\n\t * Metabox Config array\n\t * @var   array\n\t * @since 0.9.0\n\t */\n\tprotected $_meta_box;\n\n\t/**\n\t * Metabox Defaults\n\t * @var   array\n\t * @since 1.0.1\n\t */\n\tprotected static $mb_defaults = array(\n\t\t'id'         => '',\n\t\t'title'      => '',\n\t\t'type'       => '',\n\t\t'pages'      => array(), // Post type\n\t\t'context'    => 'normal',\n\t\t'priority'   => 'high',\n\t\t'show_names' => true, // Show field names on the left\n\t\t'show_on'    => array( 'key' => false, 'value' => false ), // Specific post IDs or page templates to display this metabox\n\t\t'cmb_styles' => true, // Include cmb bundled stylesheet\n\t\t'fields'     => array(),\n\t);\n\n\t/**\n\t * Metabox Form ID\n\t * @var   string\n\t * @since 0.9.4\n\t */\n\tprotected $form_id = 'post';\n\n\t/**\n\t * Current field config array\n\t * @var   array\n\t * @since 1.0.0\n\t */\n\tpublic static $field = array();\n\n\t/**\n\t * Object ID for metabox meta retrieving/saving\n\t * @var   int\n\t * @since 1.0.0\n\t */\n\tprotected static $object_id = 0;\n\n\t/**\n\t * Type of object being saved. (e.g., post, user, or comment)\n\t * @var   string\n\t * @since 1.0.0\n\t */\n\tprotected static $object_type = '';\n\n\t/**\n\t * Whether scripts/styles have been enqueued yet\n\t * @var   bool\n\t * @since 1.0.0\n\t */\n\tprotected static $is_enqueued = false;\n\n\t/**\n\t * Whether CMB nonce has been added to the page. (oly add once)\n\t * @var   bool\n\t * @since 1.2.0\n\t */\n\tprotected static $nonce_added = false;\n\n\t/**\n\t * Type of object specified by the metabox Config\n\t * @var   string\n\t * @since 1.0.0\n\t */\n\tprotected static $mb_object_type = 'post';\n\n\t/**\n\t * Array of all options from manage-options metaboxes\n\t * @var   array\n\t * @since 1.0.0\n\t */\n\tprotected static $options = array();\n\n\t/**\n\t * List of fields that are changed/updated on save\n\t * @var   array\n\t * @since 1.1.0\n\t */\n\tprotected static $updated = array();\n\n\t/**\n\t * Get started\n\t */\n\tfunction __construct( $meta_box ) {\n\n\t\t$meta_box = self::set_mb_defaults( $meta_box );\n\n\t\t$allow_frontend = apply_filters( 'cmb_allow_frontend', true, $meta_box );\n\n\t\tif ( ! is_admin() && ! $allow_frontend )\n\t\t\treturn;\n\n\t\t$this->_meta_box = $meta_box;\n\n\t\tself::set_mb_type( $meta_box );\n\n\t\t$types = wp_list_pluck( $meta_box['fields'], 'type' );\n\t\t$upload = in_array( 'file', $types ) || in_array( 'file_list', $types );\n\n\t\tglobal $pagenow;\n\n\t\t$show_filters = 'cmb_Meta_Box_Show_Filters';\n\t\tforeach ( get_class_methods( $show_filters ) as $filter ) {\n\t\t\tadd_filter( 'cmb_show_on', array( $show_filters, $filter ), 10, 2 );\n\t\t}\n\n\t\t// register our scripts and styles for cmb\n\t\tadd_action( 'admin_enqueue_scripts', array( $this, 'register_scripts' ), 8 );\n\n\t\tif ( self::get_object_type() == 'post' ) {\n\t\t\tadd_action( 'admin_menu', array( $this, 'add_metaboxes' ) );\n\t\t\tadd_action( 'add_attachment', array( $this, 'save_post' ) );\n\t\t\tadd_action( 'edit_attachment', array( $this, 'save_post' ) );\n\t\t\tadd_action( 'save_post', array( $this, 'save_post' ), 10, 2 );\n\t\t\tadd_action( 'admin_enqueue_scripts', array( $this, 'do_scripts' ) );\n\n\t\t\tif ( $upload && in_array( $pagenow, array( 'page.php', 'page-new.php', 'post.php', 'post-new.php' ) ) ) {\n\t\t\t\tadd_action( 'admin_head', array( $this, 'add_post_enctype' ) );\n\t\t\t}\n\n\t\t}\n\t\tif ( self::get_object_type() == 'user' ) {\n\n\t\t\t$priority = 10;\n\t\t\tif ( isset( $meta_box['priority'] ) ) {\n\t\t\t\tif ( is_numeric( $meta_box['priority'] ) )\n\t\t\t\t\t$priority = $meta_box['priority'];\n\t\t\t\telseif ( $meta_box['priority'] == 'high' )\n\t\t\t\t\t$priority = 5;\n\t\t\t\telseif ( $meta_box['priority'] == 'low' )\n\t\t\t\t\t$priority = 20;\n\t\t\t}\n\t\t\tadd_action( 'show_user_profile', array( $this, 'user_metabox' ), $priority );\n\t\t\tadd_action( 'edit_user_profile', array( $this, 'user_metabox' ), $priority );\n\n\t\t\tadd_action( 'personal_options_update', array( $this, 'save_user' ) );\n\t\t\tadd_action( 'edit_user_profile_update', array( $this, 'save_user' ) );\n\t\t\tif ( $upload && in_array( $pagenow, array( 'profile.php', 'user-edit.php' ) ) ) {\n\t\t\t\t$this->form_id = 'your-profile';\n\t\t\t\tadd_action( 'admin_head', array( $this, 'add_post_enctype' ) );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Autoloads files with classes when needed\n\t * @since  1.0.0\n\t * @param  string $class_name Name of the class being requested\n\t */\n\tpublic static function autoload_helpers( $class_name ) {\n\t\tif ( class_exists( $class_name, false ) )\n\t\t\treturn;\n\n\t\t// for PHP versions < 5.3\n\t\t$dir = dirname( __FILE__ );\n\n\t\t$file = \"$dir/helpers/$class_name.php\";\n\t\tif ( file_exists( $file ) )\n\t\t\t@include( $file );\n\t}\n\n\t/**\n\t * Registers scripts and styles for CMB\n\t * @since  1.0.0\n\t */\n\tpublic function register_scripts() {\n\n\t\t// Should only be run once\n\t\tif ( self::$is_enqueued )\n\t\t\treturn;\n\n\t\tglobal $wp_version;\n\t\t// Only use minified files if SCRIPT_DEBUG is off\n\t\t$min = defined('SCRIPT_DEBUG') && SCRIPT_DEBUG ? '' : '.min';\n\n\t\t// scripts required for cmb\n\t\t$scripts = array( 'jquery', 'jquery-ui-core', 'cmb-datepicker', /*'media-upload', */'cmb-timepicker' );\n\t\t// styles required for cmb\n\t\t$styles = array();\n\n\t\t// if we're 3.5 or later, user wp-color-picker\n\t\tif ( 3.5 <= $wp_version ) {\n\t\t\t$scripts[] = 'wp-color-picker';\n\t\t\t$styles[] = 'wp-color-picker';\n\t\t\tif ( ! is_admin() ) {\n\t\t\t\t// we need to register colorpicker on the front-end\n\t\t\t   wp_register_script( 'iris', admin_url( 'js/iris.min.js' ), array( 'jquery-ui-draggable', 'jquery-ui-slider', 'jquery-touch-punch' ), self::CMB_VERSION );\n\t\t   \twp_register_script( 'wp-color-picker', admin_url( 'js/color-picker.min.js' ), array( 'iris' ), self::CMB_VERSION );\n\t\t\t\twp_localize_script( 'wp-color-picker', 'wpColorPickerL10n', array(\n\t\t\t\t\t'clear'         => __( 'Clear' ),\n\t\t\t\t\t'defaultString' => __( 'Default' ),\n\t\t\t\t\t'pick'          => __( 'Select Color' ),\n\t\t\t\t\t'current'       => __( 'Current Color' ),\n\t\t\t\t) );\n\t\t\t}\n\t\t} else {\n\t\t\t// otherwise use the older 'farbtastic'\n\t\t\t$scripts[] = 'farbtastic';\n\t\t\t$styles[] = 'farbtastic';\n\t\t}\n\t\twp_register_script( 'cmb-datepicker', CMB_META_BOX_URL . 'js/jquery.datePicker.min.js' );\n\t\twp_register_script( 'cmb-timepicker', CMB_META_BOX_URL . 'js/jquery.timePicker.min.js' );\n\t\twp_register_script( 'cmb-scripts', CMB_META_BOX_URL .'js/cmb'. $min .'.js', $scripts, self::CMB_VERSION );\n\n\t\twp_enqueue_media();\n\n\t\twp_localize_script( 'cmb-scripts', 'cmb_l10', apply_filters( 'cmb_localized_data', array(\n\t\t\t'ajax_nonce'      => wp_create_nonce( 'ajax_nonce' ),\n\t\t\t'script_debug'    => defined('SCRIPT_DEBUG') && SCRIPT_DEBUG,\n\t\t\t'new_admin_style' => version_compare( $wp_version, '3.7', '>' ),\n\t\t\t'object_type'     => self::get_object_type(),\n\t\t\t'upload_file'     => 'Use this file',\n\t\t\t'remove_image'    => 'Remove Image',\n\t\t\t'remove_file'     => 'Remove',\n\t\t\t'file'            => 'File:',\n\t\t\t'download'        => 'Download',\n\t\t\t'ajaxurl'         => admin_url( '/admin-ajax.php' ),\n\t\t\t'up_arrow'        => '[ ↑ ]&nbsp;',\n\t\t\t'down_arrow'      => '&nbsp;[ ↓ ]',\n\t\t\t'check_toggle'    => __( 'Select / Deselect All', 'cmb' ),\n\t\t) ) );\n\n\t\twp_register_style( 'cmb-styles', CMB_META_BOX_URL . 'style'. $min .'.css', $styles );\n\n\t\t// Ok, we've enqueued our scripts/styles\n\t\tself::$is_enqueued = true;\n\t}\n\n\t/**\n\t * Enqueues scripts and styles for CMB\n\t * @since  1.0.0\n\t */\n\tpublic function do_scripts( $hook ) {\n\t\t// only enqueue our scripts/styles on the proper pages\n\t\tif ( $hook == 'post.php' || $hook == 'post-new.php' || $hook == 'page-new.php' || $hook == 'page.php' ) {\n\t\t\twp_enqueue_script( 'cmb-scripts' );\n\n\t\t\t// default is to show cmb styles on post pages\n\t\t\tif ( $this->_meta_box['cmb_styles'] )\n\t\t\t\twp_enqueue_style( 'cmb-styles' );\n\t\t}\n\t}\n\n\t/**\n\t * Add encoding attribute\n\t */\n\tpublic function add_post_enctype() {\n\t\techo '\n\t\t<script type=\"text/javascript\">\n\t\tjQuery(document).ready(function(){\n\t\t\tjQuery(\"#'. $this->form_id .'\").attr(\"enctype\", \"multipart/form-data\");\n\t\t\tjQuery(\"#'. $this->form_id .'\").attr(\"encoding\", \"multipart/form-data\");\n\t\t});\n\t\t</script>';\n\t}\n\n\t/**\n\t * Add metaboxes (to 'post' object type)\n\t */\n\tpublic function add_metaboxes() {\n\n\t\tforeach ( $this->_meta_box['pages'] as $page ) {\n\t\t\tif ( apply_filters( 'cmb_show_on', true, $this->_meta_box ) )\n\t\t\t\tadd_meta_box( $this->_meta_box['id'], $this->_meta_box['title'], array( $this, 'post_metabox' ), $page, $this->_meta_box['context'], $this->_meta_box['priority']) ;\n\t\t}\n\t}\n\n\t/**\n\t * Display metaboxes for a post object\n\t * @since  1.0.0\n\t */\n\tpublic function post_metabox() {\n\t\tif ( ! $this->_meta_box )\n\t\t\treturn;\n\n\t\tself::show_form( $this->_meta_box, get_the_ID(), 'post' );\n\n\t}\n\n\t/**\n\t * Display metaboxes for a user object\n\t * @since  1.0.0\n\t */\n\tpublic function user_metabox() {\n\t\tif ( ! $this->_meta_box )\n\t\t\treturn;\n\n\t\tif ( 'user' != self::set_mb_type( $this->_meta_box ) )\n\t\t\treturn;\n\n\t\tif ( ! apply_filters( 'cmb_show_on', true, $this->_meta_box ) )\n\t\t\treturn;\n\n\t\twp_enqueue_script( 'cmb-scripts' );\n\n\t\t// default is to NOT show cmb styles on user profile page\n\t\tif ( $this->_meta_box['cmb_styles'] != false )\n\t\t\twp_enqueue_style( 'cmb-styles' );\n\n\t\tself::show_form( $this->_meta_box );\n\n\t}\n\n\t/**\n\t * Loops through and displays fields\n\t * @since  1.0.0\n\t * @param  array  $meta_box    Metabox config array\n\t * @param  int    $object_id   Object ID\n\t * @param  string $object_type Type of object being saved. (e.g., post, user, or comment)\n\t */\n\tpublic static function show_form( $meta_box, $object_id = 0, $object_type = '' ) {\n\t\t$meta_box = self::set_mb_defaults( $meta_box );\n\t\t// Set/get type\n\t\t$object_type = self::set_object_type( $object_type ? $object_type : self::set_mb_type( $meta_box ) );\n\t\t// Set/get ID\n\t\t$object_id = self::set_object_id( $object_id ? $object_id : self::get_object_id() );\n\n\t\t// Add nonce only once per page.\n\t\tif ( ! self::$nonce_added ) {\n\t\t\twp_nonce_field( self::nonce(), 'wp_meta_box_nonce', false, true );\n\t\t\tself::$nonce_added = true;\n\t\t}\n\n\t\t// Use nonce for verification\n\t\techo \"\\n<!-- Begin CMB Fields -->\\n\";\n\t\tdo_action( 'cmb_before_table', $meta_box, $object_id, $object_type );\n\t\techo '<table class=\"form-table cmb_metabox\">';\n\n\t\tforeach ( $meta_box['fields'] as $field_args ) {\n\n\t\t\t$field_args['context'] = $meta_box['context'];\n\n\t\t\tif ( 'group' == $field_args['type'] ) {\n\n\t\t\t\tif ( ! isset( $field_args['show_names'] ) ) {\n\t\t\t\t\t$field_args['show_names'] = $meta_box['show_names'];\n\t\t\t\t}\n\t\t\t\tself::render_group( $field_args );\n\t\t\t} else {\n\n\t\t\t\t$field_args['show_names'] = $meta_box['show_names'];\n\t\t\t\t// Render default fields\n\t\t\t\t$field = new cmb_Meta_Box_field( $field_args );\n\t\t\t\t$field->render_field();\n\t\t\t}\n\t\t}\n\t\techo '</table>';\n\t\tdo_action( 'cmb_after_table', $meta_box, $object_id, $object_type );\n\t\techo \"\\n<!-- End CMB Fields -->\\n\";\n\n\t}\n\n\t/**\n\t * Render a repeatable group\n\t */\n\tpublic static function render_group( $args ) {\n\t\tif ( ! isset( $args['id'], $args['fields'] ) || ! is_array( $args['fields'] ) )\n\t\t\treturn;\n\n\t\t$args['count']   = 0;\n\t\t$field_group     = new cmb_Meta_Box_field( $args );\n\t\t$desc            = $field_group->args( 'description' );\n\t\t$label           = $field_group->args( 'name' );\n\t\t$sortable        = $field_group->options( 'sortable' ) ? ' sortable' : '';\n\t\t$group_val       = (array) $field_group->value();\n\t\t$nrows           = count( $group_val );\n\t\t$remove_disabled = $nrows <= 1 ? 'disabled=\"disabled\" ' : '';\n\n\t\techo '<tr><td colspan=\"2\"><table id=\"', $field_group->id(), '_repeat\" class=\"repeatable-group'. $sortable .'\" style=\"width:100%;\">';\n\t\tif ( $desc || $label ) {\n\t\t\techo '<tr><th>';\n\t\t\t\tif ( $label )\n\t\t\t\t\techo '<h2 class=\"cmb-group-name\">'. $label .'</h2>';\n\t\t\t\tif ( $desc )\n\t\t\t\t\techo '<p class=\"cmb_metabox_description\">'. $desc .'</p>';\n\t\t\techo '</th></tr>';\n\t\t}\n\n\t\tif ( ! empty( $group_val ) ) {\n\n\t\t\tforeach ( $group_val as $iterator => $field_id ) {\n\t\t\t\tself::render_group_row( $field_group, $remove_disabled );\n\t\t\t}\n\t\t} else {\n\t\t\tself::render_group_row( $field_group, $remove_disabled );\n\t\t}\n\n\t\techo '<tr><td><p class=\"add-row\"><button data-selector=\"', $field_group->id() ,'_repeat\" data-grouptitle=\"', $field_group->options( 'group_title' ) ,'\" class=\"add-group-row button\">'. $field_group->options( 'add_button' ) .'</button></p></td></tr>';\n\n\t\techo '</table></td></tr>';\n\n\t}\n\n\tpublic static function render_group_row( $field_group, $remove_disabled ) {\n\n\t\techo '\n\t\t<tr class=\"repeatable-grouping\" data-iterator=\"'. $field_group->count() .'\">\n\t\t\t<td>\n\t\t\t\t<table class=\"cmb-nested-table\" style=\"width: 100%;\">';\n\t\t\t\tif ( $field_group->options( 'group_title' ) ) {\n\t\t\t\t\techo '\n\t\t\t\t\t<tr class=\"cmb-group-title\">\n\t\t\t\t\t\t<th colspan=\"2\">\n\t\t\t\t\t\t\t', sprintf( '<h4>%1$s</h4>', $field_group->replace_hash( $field_group->options( 'group_title' ) ) ), '\n\t\t\t\t\t\t<th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t';\n\t\t\t\t}\n\t\t\t\t// Render repeatable group fields\n\t\t\t\tforeach ( array_values( $field_group->args( 'fields' ) ) as $field_args ) {\n\t\t\t\t\t$field_args['show_names'] = $field_group->args( 'show_names' );\n\t\t\t\t\t$field_args['context'] = $field_group->args( 'context' );\n\t\t\t\t\t$field = new cmb_Meta_Box_field( $field_args, $field_group );\n\t\t\t\t\t$field->render_field();\n\t\t\t\t}\n\t\t\t\techo '\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"remove-row\" colspan=\"2\">\n\t\t\t\t\t\t\t<button '. $remove_disabled .'data-selector=\"'. $field_group->id() .'_repeat\" class=\"button remove-group-row alignright\">'. $field_group->options( 'remove_button' ) .'</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t\t';\n\n\t\t$field_group->args['count']++;\n\t}\n\n\t/**\n\t * Save data from metabox\n\t */\n\tpublic function save_post( $post_id, $post = false ) {\n\n\t\t$post_type = $post ? $post->post_type : get_post_type( $post_id );\n\n\t\t// check permissions\n\t\tif (\n\t\t\t// check nonce\n\t\t\t! isset( $_POST['wp_meta_box_nonce'] )\n\t\t\t|| ! wp_verify_nonce( $_POST['wp_meta_box_nonce'], self::nonce() )\n\t\t\t// check if autosave\n\t\t\t|| defined('DOING_AUTOSAVE' ) && DOING_AUTOSAVE\n\t\t\t// check user editing permissions\n\t\t\t|| ( 'page' == $_POST['post_type'] && ! current_user_can( 'edit_page', $post_id ) )\n\t\t\t|| ! current_user_can( 'edit_post', $post_id )\n\t\t\t// get the metabox post_types & compare it to this post_type\n\t\t\t|| ! in_array( $post_type, $this->_meta_box['pages'] )\n\t\t)\n\t\t\treturn $post_id;\n\n\t\tself::save_fields( $this->_meta_box, $post_id, 'post' );\n\t}\n\n\t/**\n\t * Save data from metabox\n\t */\n\tpublic function save_user( $user_id )  {\n\n\t\t// check permissions\n\t\t// @todo more hardening?\n\t\tif (\n\t\t\t// check nonce\n\t\t\t! isset( $_POST['wp_meta_box_nonce'] )\n\t\t\t|| ! wp_verify_nonce( $_POST['wp_meta_box_nonce'], self::nonce() )\n\t\t)\n\t\t\treturn $user_id;\n\n\t\tself::save_fields( $this->_meta_box, $user_id, 'user' );\n\t}\n\n\t/**\n\t * Loops through and saves field data\n\t * @since  1.0.0\n\t * @param array   $meta_box    Metabox config array\n\t * @param  int    $object_id   Object ID\n\t * @param  string $object_type Type of object being saved. (e.g., post, user, or comment)\n\t */\n\tpublic static function save_fields( $meta_box, $object_id, $object_type = '' ) {\n\t\t$meta_box = self::set_mb_defaults( $meta_box );\n\n\t\t$meta_box['show_on'] = empty( $meta_box['show_on'] ) ? array( 'key' => false, 'value' => false ) : $meta_box['show_on'];\n\n\t\tself::set_object_id( $object_id );\n\t\t// Set/get type\n\t\t$object_type = self::set_object_type( $object_type ? $object_type\t: self::set_mb_type( $meta_box ) );\n\n\t\tif ( ! apply_filters( 'cmb_show_on', true, $meta_box ) )\n\t\t\treturn;\n\n\t\t// save field ids of those that are updated\n\t\tself::$updated = array();\n\n\t\tforeach ( $meta_box['fields'] as $field_args ) {\n\n\t\t\tif ( 'group' == $field_args['type'] ) {\n\t\t\t\tself::save_group( $field_args );\n\t\t\t} else {\n\t\t\t\t// Save default fields\n\t\t\t\t$field = new cmb_Meta_Box_field( $field_args );\n\t\t\t\tself::save_field( self::sanitize_field( $field ), $field );\n\t\t\t}\n\n\t\t}\n\n\t\t// If options page, save the updated options\n\t\tif ( $object_type == 'options-page' )\n\t\t\tself::save_option( $object_id );\n\n\t\tdo_action( \"cmb_save_{$object_type}_fields\", $object_id, $meta_box['id'], self::$updated, $meta_box );\n\n\t}\n\n\t/**\n\t * Save a repeatable group\n\t */\n\tpublic static function save_group( $args ) {\n\t\tif ( ! isset( $args['id'], $args['fields'], $_POST[ $args['id'] ] ) || ! is_array( $args['fields'] ) )\n\t\t\treturn;\n\n\t\t$field_group        = new cmb_Meta_Box_field( $args );\n\t\t$base_id            = $field_group->id();\n\t\t$old                = $field_group->get_data();\n\t\t$group_vals         = $_POST[ $base_id ];\n\t\t$saved              = array();\n\t\t$is_updated         = false;\n\t\t$field_group->index = 0;\n\n\t\t// $group_vals[0]['color'] = '333';\n\t\tforeach ( array_values( $field_group->fields() ) as $field_args ) {\n\t\t\t$field = new cmb_Meta_Box_field( $field_args, $field_group );\n\t\t\t$sub_id = $field->id( true );\n\n\t\t\tforeach ( (array) $group_vals as $field_group->index => $post_vals ) {\n\n\t\t\t\t// Get value\n\t\t\t\t$new_val = isset( $group_vals[ $field_group->index ][ $sub_id ] )\n\t\t\t\t\t? $group_vals[ $field_group->index ][ $sub_id ]\n\t\t\t\t\t: false;\n\n\t\t\t\t// Sanitize\n\t\t\t\t$new_val = self::sanitize_field( $field, $new_val, $field_group->index );\n\n\t\t\t\tif ( 'file' == $field->type() && is_array( $new_val ) ) {\n\t\t\t\t\t// Add image ID to the array stack\n\t\t\t\t\t$saved[ $field_group->index ][ $new_val['field_id'] ] = $new_val['attach_id'];\n\t\t\t\t\t// Reset var to url string\n\t\t\t\t\t$new_val = $new_val['url'];\n\t\t\t\t}\n\n\t\t\t\t// Get old value\n\t\t\t\t$old_val = is_array( $old ) && isset( $old[ $field_group->index ][ $sub_id ] )\n\t\t\t\t\t? $old[ $field_group->index ][ $sub_id ]\n\t\t\t\t\t: false;\n\n\t\t\t\t$is_updated = ( ! empty( $new_val ) && $new_val != $old_val );\n\t\t\t\t$is_removed = ( empty( $new_val ) && ! empty( $old_val ) );\n\t\t\t\t// Compare values and add to `$updated` array\n\t\t\t\tif ( $is_updated || $is_removed )\n\t\t\t\t\tself::$updated[] = $base_id .'::'. $field_group->index .'::'. $sub_id;\n\n\t\t\t\t// Add to `$saved` array\n\t\t\t\t$saved[ $field_group->index ][ $sub_id ] = $new_val;\n\n\t\t\t}\n\t\t\t$saved[ $field_group->index ] = array_filter( $saved[ $field_group->index ] );\n\t\t}\n\t\t$saved = array_filter( $saved );\n\n\t\t$field_group->update_data( $saved, true );\n\t}\n\n\tpublic static function sanitize_field( $field, $new_value = null ) {\n\n\t\t$new_value = null !== $new_value\n\t\t\t? $new_value\n\t\t\t: ( isset( $_POST[ $field->id( true ) ] ) ? $_POST[ $field->id( true ) ] : null );\n\n\t\tif ( $field->args( 'repeatable' ) && is_array( $new_value ) ) {\n\t\t\t// Remove empties\n\t\t\t$new_value = array_filter( $new_value );\n\t\t}\n\n\t\t// Check if this metabox field has a registered validation callback, or perform default sanitization\n\t\treturn $field->sanitization_cb( $new_value );\n\t}\n\n\tpublic static function save_field( $new_value, $field ) {\n\t\t$name = $field->id();\n\t\t$old  = $field->get_data();\n\n\t\t// if ( $field->args( 'multiple' ) && ! $field->args( 'repeatable' ) && ! $field->group ) {\n\t\t// \t$field->remove_data();\n\t\t// \tif ( ! empty( $new_value ) ) {\n\t\t// \t\tforeach ( $new_value as $add_new ) {\n\t\t// \t\t\tself::$updated[] = $name;\n\t\t// \t\t\t$field->update_data( $add_new, $name, false );\n\t\t// \t\t}\n\t\t// \t}\n\t\t// } else\n\t\tif ( ! empty( $new_value ) && $new_value != $old  ) {\n\t\t\tself::$updated[] = $name;\n\t\t\treturn $field->update_data( $new_value );\n\t\t} elseif ( empty( $new_value ) ) {\n\t\t\tif ( ! empty( $old ) )\n\t\t\t\tself::$updated[] = $name;\n\t\t\treturn $field->remove_data();\n\t\t}\n\t}\n\n\t/**\n\t * Get object id from global space if no id is provided\n\t * @since  1.0.0\n\t * @param  integer $object_id Object ID\n\t * @return integer $object_id Object ID\n\t */\n\tpublic static function get_object_id( $object_id = 0 ) {\n\n\t\tif ( $object_id )\n\t\t\treturn $object_id;\n\n\t\tif ( self::$object_id )\n\t\t\treturn self::$object_id;\n\n\t\t// Try to get our object ID from the global space\n\t\tswitch ( self::get_object_type() ) {\n\t\t\tcase 'user':\n\t\t\t\t$object_id = isset( $GLOBALS['user_ID'] ) ? $GLOBALS['user_ID'] : $object_id;\n\t\t\t\t$object_id = isset( $_REQUEST['user_id'] ) ? $_REQUEST['user_id'] : $object_id;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t$object_id = isset( $GLOBALS['post']->ID ) ? $GLOBALS['post']->ID : $object_id;\n\t\t\t\t$object_id = isset( $_REQUEST['post'] ) ? $_REQUEST['post'] : $object_id;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// reset to id or 0\n\t\tself::set_object_id( $object_id ? $object_id : 0 );\n\n\t\treturn self::$object_id;\n\t}\n\n\t/**\n\t * Explicitly Set object id\n\t * @since  1.0.0\n\t * @param  integer $object_id Object ID\n\t * @return integer $object_id Object ID\n\t */\n\tpublic static function set_object_id( $object_id ) {\n\t\treturn self::$object_id = $object_id;\n\t}\n\n\t/**\n\t * Sets the $object_type based on metabox settings\n\t * @since  1.0.0\n\t * @param  array|string $meta_box Metabox config array or explicit setting\n\t * @return string       Object type\n\t */\n\tpublic static function set_mb_type( $meta_box ) {\n\n\t\tif ( is_string( $meta_box ) ) {\n\t\t\tself::$mb_object_type = $meta_box;\n\t\t\treturn self::get_mb_type();\n\t\t}\n\n\t\tif ( ! isset( $meta_box['pages'] ) )\n\t\t\treturn self::get_mb_type();\n\n\t\t$type = false;\n\t\t// check if 'pages' is a string\n\t\tif ( self::is_options_page_mb( $meta_box ) )\n\t\t\t$type = 'options-page';\n\t\t// check if 'pages' is a string\n\t\telseif ( is_string( $meta_box['pages'] ) )\n\t\t\t$type = $meta_box['pages'];\n\t\t// if it's an array of one, extract it\n\t\telseif ( is_array( $meta_box['pages'] ) && count( $meta_box['pages'] === 1 ) )\n\t\t\t$type = is_string( end( $meta_box['pages'] ) ) ? end( $meta_box['pages'] ) : false;\n\n\t\tif ( !$type )\n\t\t\treturn self::get_mb_type();\n\n\t\t// Get our object type\n\t\tif ( 'user' == $type )\n\t\t\tself::$mb_object_type = 'user';\n\t\telseif ( 'comment' == $type )\n\t\t\tself::$mb_object_type = 'comment';\n\t\telseif ( 'options-page' == $type )\n\t\t\tself::$mb_object_type = 'options-page';\n\t\telse\n\t\t\tself::$mb_object_type = 'post';\n\n\t\treturn self::get_mb_type();\n\t}\n\n\t/**\n\t * Determines if metabox is for an options page\n\t * @since  1.0.1\n\t * @param  array   $meta_box Metabox config array\n\t * @return boolean           True/False\n\t */\n\tpublic static function is_options_page_mb( $meta_box ) {\n\t\treturn ( isset( $meta_box['show_on']['key'] ) && 'options-page' === $meta_box['show_on']['key'] );\n\t}\n\n\t/**\n\t * Returns the object type\n\t * @since  1.0.0\n\t * @return string Object type\n\t */\n\tpublic static function get_object_type() {\n\t\tif ( self::$object_type )\n\t\t\treturn self::$object_type;\n\n\t\tglobal $pagenow;\n\n\t\tif (\n\t\t\t$pagenow == 'user-edit.php'\n\t\t\t|| $pagenow == 'profile.php'\n\t\t)\n\t\t\tself::set_object_type( 'user' );\n\n\t\telseif (\n\t\t\t$pagenow == 'edit-comments.php'\n\t\t\t|| $pagenow == 'comment.php'\n\t\t)\n\t\t\tself::set_object_type( 'comment' );\n\t\telse\n\t\t\tself::set_object_type( 'post' );\n\n\t\treturn self::$object_type;\n\t}\n\n\t/**\n\t * Sets the object type\n\t * @since  1.0.0\n\t * @return string Object type\n\t */\n\tpublic static function set_object_type( $object_type ) {\n\t\treturn self::$object_type = $object_type;\n\t}\n\n\t/**\n\t * Returns the object type\n\t * @since  1.0.0\n\t * @return string Object type\n\t */\n\tpublic static function get_mb_type() {\n\t\treturn self::$mb_object_type;\n\t}\n\n\t/**\n\t * Returns the nonce value for wp_meta_box_nonce\n\t * @since  1.0.0\n\t * @return string Nonce value\n\t */\n\tpublic static function nonce() {\n\t\treturn basename( __FILE__ );\n\t}\n\n\t/**\n\t * Defines the url which is used to load local resources.\n\t * This may need to be filtered for local Window installations.\n\t * If resources do not load, please check the wiki for details.\n\t * @since  1.0.1\n\t * @return string URL to CMB resources\n\t */\n\tpublic static function get_meta_box_url() {\n\n\t\tif ( strtoupper( substr( PHP_OS, 0, 3 ) ) === 'WIN' ) {\n\t\t\t// Windows\n\t\t\t$content_dir = str_replace( '/', DIRECTORY_SEPARATOR, WP_CONTENT_DIR );\n\t\t\t$content_url = str_replace( $content_dir, WP_CONTENT_URL, dirname(__FILE__) );\n\t\t\t$cmb_url = str_replace( DIRECTORY_SEPARATOR, '/', $content_url );\n\n\t\t} else {\n\t\t  $cmb_url = str_replace(\n\t\t\t\tarray(WP_CONTENT_DIR, WP_PLUGIN_DIR),\n\t\t\t\tarray(WP_CONTENT_URL, WP_PLUGIN_URL),\n\t\t\t\tdirname( __FILE__ )\n\t\t\t);\n\t\t}\n\n\t\t$cmb_url = set_url_scheme( $cmb_url );\n\n\t\treturn trailingslashit( apply_filters('cmb_meta_box_url', $cmb_url ) );\n\t}\n\n\t/**\n\t * Fills in empty metabox parameters with defaults\n\t * @since  1.0.1\n\t * @param  array $meta_box Metabox config array\n\t * @return array           Modified Metabox config array\n\t */\n\tpublic static function set_mb_defaults( $meta_box ) {\n\t\treturn wp_parse_args( $meta_box, self::$mb_defaults );\n\t}\n\n\t/**\n\t * Removes an option from an option array\n\t * @since  1.0.1\n\t * @param  string  $option_key Option key\n\t * @param  string  $field_id   Option array field key\n\t * @return array               Modified options\n\t */\n\tpublic static function remove_option( $option_key, $field_id ) {\n\n\t\tself::$options[ $option_key ] = ! isset( self::$options[ $option_key ] ) || empty( self::$options[ $option_key ] ) ? self::_get_option( $option_key ) : self::$options[ $option_key ];\n\n\t\tif ( isset( self::$options[ $option_key ][ $field_id ] ) )\n\t\t\tunset( self::$options[ $option_key ][ $field_id ] );\n\n\t\treturn self::$options[ $option_key ];\n\t}\n\n\t/**\n\t * Retrieves an option from an option array\n\t * @since  1.0.1\n\t * @param  string  $option_key Option key\n\t * @param  string  $field_id   Option array field key\n\t * @return array               Options array or specific field\n\t */\n\tpublic static function get_option( $option_key, $field_id = '' ) {\n\n\t\tself::$options[ $option_key ] = ! isset( self::$options[ $option_key ] ) || empty( self::$options[ $option_key ] ) ? self::_get_option( $option_key ) : self::$options[ $option_key ];\n\n\t\tif ( $field_id ) {\n\t\t\treturn isset( self::$options[ $option_key ][ $field_id ] ) ? self::$options[ $option_key ][ $field_id ] : false;\n\t\t}\n\n\t\treturn self::$options[ $option_key ];\n\t}\n\n\t/**\n\t * Updates Option data\n\t * @since  1.0.1\n\t * @param  string  $option_key Option key\n\t * @param  string  $field_id   Option array field key\n\t * @param  mixed   $value      Value to update data with\n\t * @param  bool    $single     Whether data should be an array\n\t * @return array               Modified options\n\t */\n\tpublic static function update_option( $option_key, $field_id, $value, $single = true ) {\n\n\t\tif ( ! $single ) {\n\t\t\t// If multiple, add to array\n\t\t\tself::$options[ $option_key ][ $field_id ][] = $value;\n\t\t} else {\n\t\t\tself::$options[ $option_key ][ $field_id ] = $value;\n\t\t}\n\n\t\treturn self::$options[ $option_key ];\n\t}\n\n\t/**\n\t * Retrieve option value based on name of option.\n\t * @uses apply_filters() Calls 'cmb_override_option_get_$option_key' hook to allow\n\t * \toverwriting the option value to be retrieved.\n\t *\n\t * @since  1.0.1\n\t * @param  string $option  Name of option to retrieve. Expected to not be SQL-escaped.\n\t * @param  mixed  $default Optional. Default value to return if the option does not exist.\n\t * @return mixed           Value set for the option.\n\t */\n\tpublic static function _get_option( $option_key, $default = false ) {\n\n\t\t$test_get = apply_filters( \"cmb_override_option_get_$option_key\", 'cmb_no_override_option_get', $default );\n\n\t\tif ( $test_get !== 'cmb_no_override_option_get' )\n\t\t\treturn $test_get;\n\n\t\t// If no override, get the option\n\t\treturn get_option( $option_key, $default );\n\t}\n\n\t/**\n\t * Saves the option array\n\t * Needs to be run after finished using remove/update_option\n\t * @uses apply_filters() Calls 'cmb_override_option_save_$option_key' hook to allow\n\t * \toverwriting the option value to be stored.\n\t *\n\t * @since  1.0.1\n\t * @param  string  $option_key Option key\n\t * @return boolean             Success/Failure\n\t */\n\tpublic static function save_option( $option_key ) {\n\n\t\t$to_save = self::get_option( $option_key );\n\n\t\t$test_save = apply_filters( \"cmb_override_option_save_$option_key\", 'cmb_no_override_option_save', $to_save );\n\n\t\tif ( $test_save !== 'cmb_no_override_option_save' )\n\t\t\treturn $test_save;\n\n\t\t// If no override, update the option\n\t\treturn update_option( $option_key, $to_save );\n\t}\n\n\t/**\n\t * Utility method that returns a timezone string representing the default timezone for the site.\n\t *\n\t * Roughly copied from WordPress, as get_option('timezone_string') will return\n\t * and empty string if no value has beens set on the options page.\n\t * A timezone string is required by the wp_timezone_choice() used by the\n\t * select_timezone field.\n\t *\n\t * @since  1.0.0\n\t * @return string Timezone string\n\t */\n\tpublic static function timezone_string() {\n\t\t$current_offset = get_option( 'gmt_offset' );\n\t\t$tzstring       = get_option( 'timezone_string' );\n\n\t\tif ( empty( $tzstring ) ) { // Create a UTC+- zone if no timezone string exists\n\t\t\tif ( 0 == $current_offset )\n\t\t\t\t$tzstring = 'UTC+0';\n\t\t\telseif ( $current_offset < 0 )\n\t\t\t\t$tzstring = 'UTC' . $current_offset;\n\t\t\telse\n\t\t\t\t$tzstring = 'UTC+' . $current_offset;\n\t\t}\n\n\t\treturn $tzstring;\n\t}\n\n\t/**\n\t * Utility method that returns time string offset by timezone\n\t * @since  1.0.0\n\t * @param  string $tzstring Time string\n\t * @return string           Offset time string\n\t */\n\tpublic static function timezone_offset( $tzstring ) {\n\t\tif ( ! empty( $tzstring ) && is_string( $tzstring ) ) {\n\t\t\tif ( substr( $tzstring, 0, 3 ) === 'UTC' ) {\n\t\t\t\t$tzstring = str_replace( array( ':15',':30',':45' ), array( '.25','.5','.75' ), $tzstring );\n\t\t\t\treturn intval( floatval( substr( $tzstring, 3 ) ) * HOUR_IN_SECONDS );\n\t\t\t}\n\n\t\t\t$date_time_zone_selected = new DateTimeZone( $tzstring );\n\t\t\t$tz_offset = timezone_offset_get( $date_time_zone_selected, date_create() );\n\n\t\t\treturn $tz_offset;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Utility method that attempts to get an attachment's ID by it's url\n\t * @since  1.0.0\n\t * @param  string  $img_url Attachment url\n\t * @return mixed            Attachment ID or false\n\t */\n\tpublic static function image_id_from_url( $img_url ) {\n\t\tglobal $wpdb;\n\n\t\t$img_url = esc_url_raw( $img_url );\n\t\t// Get just the file name\n\t\tif ( false !== strpos( $img_url, '/' ) ) {\n\t\t\t$explode = explode( '/', $img_url );\n\t\t\t$img_url = end( $explode );\n\t\t}\n\n\t\t// And search for a fuzzy match of the file name\n\t\t$attachment = $wpdb->get_col( $wpdb->prepare( \"SELECT ID FROM $wpdb->posts WHERE guid LIKE '%%%s%%' LIMIT 1;\", $img_url ) );\n\n\t\t// If we found an attachement ID, return it\n\t\tif ( !empty( $attachment ) && is_array( $attachment ) )\n\t\t\treturn $attachment[0];\n\n\t\t// No luck\n\t\treturn false;\n\t}\n\n}\n\n// Handle oembed Ajax\nadd_action( 'wp_ajax_cmb_oembed_handler', array( 'cmb_Meta_Box_ajax', 'oembed_handler' ) );\nadd_action( 'wp_ajax_nopriv_cmb_oembed_handler', array( 'cmb_Meta_Box_ajax', 'oembed_handler' ) );\n\n/**\n * A helper function to get an option from a CMB options array\n * @since  1.0.1\n * @param  string  $option_key Option key\n * @param  string  $field_id   Option array field key\n * @return array               Options array or specific field\n */\nfunction cmb_get_option( $option_key, $field_id = '' ) {\n\treturn cmb_Meta_Box::get_option( $option_key, $field_id );\n}\n\n/**\n * Get a CMB field object.\n * @since  1.1.0\n * @param  array  $field_args  Field arguments\n * @param  int    $object_id   Object ID\n * @param  string $object_type Type of object being saved. (e.g., post, user, or comment)\n * @return object              cmb_Meta_Box_field object\n */\nfunction cmb_get_field( $field_args, $object_id = 0, $object_type = 'post' ) {\n\t// Default to the loop post ID\n\t$object_id = $object_id ? $object_id : get_the_ID();\n\tcmb_Meta_Box::set_object_id( $object_id );\n\tcmb_Meta_Box::set_object_type( $object_type );\n\t// Send back field object\n\treturn new cmb_Meta_Box_field( $field_args );\n}\n\n/**\n * Get a field's value.\n * @since  1.1.0\n * @param  array  $field_args  Field arguments\n * @param  int    $object_id   Object ID\n * @param  string $object_type Type of object being saved. (e.g., post, user, comment, or options-page)\n * @return mixed               Maybe escaped value\n */\nfunction cmb_get_field_value( $field_args, $object_id = 0, $object_type = 'post' ) {\n\t$field = cmb_get_field( $field_args, $object_id, $object_type );\n\treturn $field->escaped_value();\n}\n\n/**\n * Loop and output multiple metaboxes\n * @since 1.0.0\n * @param array $meta_boxes Metaboxes config array\n * @param int   $object_id  Object ID\n */\nfunction cmb_print_metaboxes( $meta_boxes, $object_id ) {\n\tforeach ( (array) $meta_boxes as $meta_box ) {\n\t\tcmb_print_metabox( $meta_box, $object_id );\n\t}\n}\n\n/**\n * Output a metabox\n * @since 1.0.0\n * @param array $meta_box  Metabox config array\n * @param int   $object_id Object ID\n */\nfunction cmb_print_metabox( $meta_box, $object_id ) {\n\t$cmb = new cmb_Meta_Box( $meta_box );\n\tif ( $cmb ) {\n\n\t\tcmb_Meta_Box::set_object_id( $object_id );\n\n\t\tif ( ! wp_script_is( 'cmb-scripts', 'registered' ) )\n\t\t\t$cmb->register_scripts();\n\n\t\twp_enqueue_script( 'cmb-scripts' );\n\n\t\t// default is to show cmb styles\n\t\tif ( $meta_box['cmb_styles'] != false )\n\t\t\twp_enqueue_style( 'cmb-styles' );\n\n\t\tcmb_Meta_Box::show_form( $meta_box );\n\t}\n\n}\n\n/**\n * Saves a particular metabox's fields\n * @since 1.0.0\n * @param array $meta_box  Metabox config array\n * @param int   $object_id Object ID\n */\nfunction cmb_save_metabox_fields( $meta_box, $object_id ) {\n\tcmb_Meta_Box::save_fields( $meta_box, $object_id );\n}\n\n/**\n * Display a metabox form & save it on submission\n * @since  1.0.0\n * @param  array   $meta_box  Metabox config array\n * @param  int     $object_id Object ID\n * @param  boolean $return    Whether to return or echo form\n * @return string             CMB html form markup\n */\nfunction cmb_metabox_form( $meta_box, $object_id, $echo = true ) {\n\n\t$meta_box = cmb_Meta_Box::set_mb_defaults( $meta_box );\n\n\t// Make sure form should be shown\n\tif ( ! apply_filters( 'cmb_show_on', true, $meta_box ) )\n\t\treturn '';\n\n\t// Make sure that our object type is explicitly set by the metabox config\n\tcmb_Meta_Box::set_object_type( cmb_Meta_Box::set_mb_type( $meta_box ) );\n\n\t// Save the metabox if it's been submitted\n\t// check permissions\n\t// @todo more hardening?\n\tif (\n\t\t// check nonce\n\t\tisset( $_POST['submit-cmb'], $_POST['object_id'], $_POST['wp_meta_box_nonce'] )\n\t\t&& wp_verify_nonce( $_POST['wp_meta_box_nonce'], cmb_Meta_Box::nonce() )\n\t\t&& $_POST['object_id'] == $object_id\n\t)\n\t\tcmb_save_metabox_fields( $meta_box, $object_id );\n\n\t// Show specific metabox form\n\n\t// Get cmb form\n\tob_start();\n\tcmb_print_metabox( $meta_box, $object_id );\n\t$form = ob_get_contents();\n\tob_end_clean();\n\n\t$form_format = apply_filters( 'cmb_frontend_form_format', '<form class=\"cmb-form\" method=\"post\" id=\"%s\" enctype=\"multipart/form-data\" encoding=\"multipart/form-data\"><input type=\"hidden\" name=\"object_id\" value=\"%s\">%s<input type=\"submit\" name=\"submit-cmb\" value=\"%s\" class=\"button-primary\"></form>', $object_id, $meta_box, $form );\n\n\t$form = sprintf( $form_format, $meta_box['id'], $object_id, $form, __( 'Save' ) );\n\n\tif ( $echo )\n\t\techo $form;\n\n\treturn $form;\n}\n\n// End. That's it, folks! //\n"
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "original-readme.md",
          "type": "blob",
          "size": 23.4794921875,
          "content": "# Custom Metaboxes and Fields for WordPress\n\n**Note: all future development will continue on [CMB2](https://github.com/WebDevStudios/CMB2).**\n\n**Contributors**:\n\n* WebDevStudios ( [@webdevstudios](http://twitter.com/webdevstudios ) / [webdevstudios.com](http://webdevstudios.com) )\n* Justin Sternberg ( [@jtsternberg](http://twitter.com/jtsternberg ) / [webdevstudios.com](http://webdevstudios.com) )\n* Jared Atchison ( [@jaredatch](http://twitter.com/jaredatch ) / [jaredatchison.com](http://jaredatchison.com/) )\n* Bill Erickson ( [@billerickson](http://twitter.com/billerickson ) / [billerickson.net](http://billerickson.net/) )\n* Andrew Norcross ( [@norcross](http://twitter.com/norcross ) / [andrewnorcross.com](http://andrewnorcross.com/) )\n\n**Version**: 1.2.0 \n**Requires at least**: 3.5  \n**Tested up to**: 3.9  \n**License**: GPLv2  \n\n## Description\n\nCustom Metaboxes and Fields (CMB for short) will create metaboxes and forms with custom fields that will blow your mind.\n\n##### Features:\n\n* Create metaboxes to be used on post edit screens.\n* Create forms to be used on options pages.\n* Create forms to handle user meta and display them on user profile add/edit pages.\n* Flexible API that allows you to use CMB forms almost anywhere, even on the front-end.\n* Several field types are included and are [listed below](#field-types).\n* Custom API hook that allows you to create your own field types.\n* There are numerous hooks and filters, allowing you to modify many aspects of the library (without editing it directly).\n* Repeatable fields for most field types are supported, as well as repeatable field groups.\n\n##### Field Types:\n1. [`title`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#title) An arbitrary title field *\n1. [`text`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#text)\n1. [`text_small`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#text_small)\n1. [`text_medium`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#text_medium)\n1. [`text_email`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#text_email)\n1. [`text_url`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#text_url)\n1. [`text_money`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#text_money)\n1. [`textarea`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#textarea)\n1. [`textarea_small`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#textarea_small)\n1. [`textarea_code`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#textarea_code)\n1. [`text_date`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#text_date) Date Picker\n1. [`text_time`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#text_time) Time picker\n1. [`select_timezone`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#select_timezone) Time zone dropdown\n1. [`text_date_timestamp`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#text_date_timestamp) Date Picker (UNIX timestamp)\n1. [`text_datetime_timestamp`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#text_datetime_timestamp) Test Date/Time Picker Combo (UNIX timestamp)\n1. [`text_datetime_timestamp_timezone`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#text_datetime_timestamp_timezone) Test Date/Time Picker/Time zone Combo (serialized DateTime object)\n1. [`colorpicker`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#colorpicker) Color picker\n1. [`radio`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#radio) *\n1. [`radio_inline`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#radio_inline) *\n1. [`taxonomy_radio`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#taxonomy_radio) *\n1. [`taxonomy_radio_inline`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#taxonomy_radio_inline) *\n1. [`select`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#select)\n1. [`taxonomy_select`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#taxonomy_select) *\n1. [`checkbox`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#checkbox) *\n1. [`multicheck`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#multicheck)\n1. [`taxonomy_multicheck`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#taxonomy_multicheck) *\n1. [`taxonomy_multicheck_inline`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#taxonomy_multicheck_inline)\n1. [`wysiwyg`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#wysiwyg) (TinyMCE) *\n1. [`file`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#file) Image/File upload *†\n1. [`file_list`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#file_list) Image/File list upload\n1. [`oembed`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#oembed) Converts oembed urls (instagram, twitter, youtube, etc. [oEmbed in the Codex](https://codex.wordpress.org/Embeds))\n1. [`group`](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#group) Hybrid field that supports adding other fields as a repeatable group. *\n1. [Create your own custom field type](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#Custom)\n\n\\* Not available as a repeatable field  \n† Use `file_list` for repeatable  \n\n[More on field types (GitHub wiki)](https://github.com/webdevstudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types)\n\n##### 3rd Party Resources\n* [CMB Attached Posts Field](https://github.com/coreymcollins/cmb-attached-posts) from [coreymcollins](https://github.com/coreymcollins): Custom field type for attaching posts to a page.\n* [CMB Field Type: Google Maps](https://github.com/mustardBees/cmb_field_map) from [mustardBees](https://github.com/mustardBees): Custom field type for Google Maps.\n\t> The `pw_map` field stores the latitude/longitude values which you can then use to display a map in your theme.\n* [CMB Field Type: Select2](https://github.com/mustardBees/cmb-field-select2) from [mustardBees](https://github.com/mustardBees): Custom field types which use the [Select2](http://ivaynberg.github.io/select2/) script:\n\n\t> 1. The `pw_select field` acts much like the default select field. However, it adds typeahead-style search allowing you to quickly make a selection from a large list\n\t> 2. The `pw_multiselect` field allows you to select multiple values with typeahead-style search. The values can be dragged and dropped to reorder\n* [Taxonomy_MetaData](https://github.com/jtsternberg/Taxonomy_MetaData#to-use-taxonomy_metadata-with-custom-metaboxes-and-fields): WordPress Helper Class for saving pseudo-metadata for taxonomy terms. Includes an extended class for using CMB to generate the actual form fields.\n\n##### Contribution\nAll contributions welcome. If you would like to submit a pull request, please check out the [trunk branch](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/tree/trunk) and pull request against it.\n\n##### Links\n* [Github project page](https://github.com/webdevstudios/Custom-Metaboxes-and-Fields-for-WordPress)\n* [Documentation (GitHub wiki)](https://github.com/webdevstudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki)\n\n\n## Installation\n\n1. Place the CMB directory inside of your theme or plugin.\n2. Copy (and rename if desired) `example-functions.php` into a folder *above* the CMB directory OR copy the entirety of its contents to your theme's `functions.php` file.\n2. Edit to only include the fields you need and rename the functions (CMB directory should be left unedited in order to easily update the library).\n4. Profit.\n\n## Changelog\n\n### 1.2.0\n\n**Enhancements**\n \n* Add support for custom date/time formats. Props [@Scrent](https://github.com/Scrent). ([#506](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/pull/506))\n* Simplify `wysiwyg` escaping and allow it to be overridden via the `escape_cb` parameter. ([#491](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/pull/491))\n* Add a 'Select/Deselect all' button for the `multicheck` field type.\n* Add title option for [repeatable groups](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#group). Title field takes an optional replacement hash, \"{#}\" that will be replaced by the row number.\n* New field parameter, `show_on_cb`, allows you to conditionally display a field via a callback. ([#47](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/issues/47))\n* Unit testing (the beginning). Props [@brichards](https://github.com/brichards) and [@camdensegal](https://github.com/camdensegal).\n\n**Bug Fixes**  \n\n* Fixed issue where remove file button wouldn't clear the url field. ([#514](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/issues/514))\n* `wysiwyg` fields now allow underscores. Fixes some wysiwyg display issues in WordPress 3.8. Props [@lswilson](https://github.com/lswilson). ([#491](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/issues/491))\n* Nonce field should only be added once per page. ([#521](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/issues/521))\n* Fix `in_array` issue when a post does not have any saved terms for a taxonomy multicheck. ([#527](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/issues/527))\n* Fixed error: 'Uninitialized string offset: 0 in cmb_Meta_Box_field.php...`. Props [@DevinWalker](https://github.com/DevinWalker). ([#539](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/issues/539), [#549](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/issues/549)))\n* Fix missing `file` field description. ([#543](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/issues/543), [#547](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/issues/547))\n\n\n\n### 1.1.3\n**Bug Fixes**  \n\n* Update `cmb_get_field_value` function as it was passing the parameters to `cmb_get_field` in the wrong order.\n* Fix repeating fields not working correctly if meta key or prefix contained an integer. ([#503](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/issues/503))\n\n### 1.1.2\n\n**Bug Fixes**  \n\n* Fix issue with `cmb_Meta_Box_types.php` calling a missing method, `image_id_from_url`. ([#502](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/pull/502))\n\n\n### 1.1.1\n\n**Bug Fixes**\n\n* Radio button values were not showing saved value. ([#500](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/issues/500))\n\n### 1.1.0\n\n**Enhancements**\n\n* [Repeatable groups](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#group)\n* Support for more fields to be repeatable, including oEmbed field, and date, time, and color picker fields, etc.\n* Codebase has been revamped to be more modular and object-oriented. \n* New filter, `\"cmb_{$element}_attributes\"\t` for modifying an element's attributes.\n* Every field now supports an `attributes` parameter that takes an array of attributes. [Read more](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Field-Types#attributes).\n* Removed `cmb_std_filter` in favor of `cmb_default_filter`. **THIS IS A BREAKING CHANGE**\n* Better handling of labels in sidebar. They are now placed on top of the input rather than adjacent.\n* Added i18n compatibility to text_money. props [@ArchCarrier](https://github.com/ArchCarrier), ([#485](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/pull/485))\n* New helper functions: `cmb_get_field` and `cmb_get_field_value` for getting access to CMB's field object and/or value.\n* New JavaScript events, `cmb_add_row` and `cmb_remove_row` for hooking in and manipulating the new row's data.\n* New filter, `cmb_localized_data`, for modifiying localized data passed to the CMB JS.\n\n**Bug Fixes**\n* Resolved occasional issue where only the first character of the label/value was diplayed. props [@mustardBees](https://github.com/mustardBees), ([#486](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/pull/486))\n\n\n### 1.0.2\n\n**Enhancements**\n\n* Change the way the `'cmb_validate_{$field['type']}'` filter works.\nIt is now passed a null value vs saved value. If null is returned, default sanitization will follow. **THIS IS A BREAKING CHANGE**. If you're already using this filter, take note.\n* All field types that take an option array have been simplified to take `key => value` pairs (vs `array( 'name' => 'value', 'value' => 'key', )`). This effects the 'select', 'radio', 'radio_inline' field types. The 'multicheck' field type was already using the `key => value` format. Backwards compatibility has been maintained for those using the older style.\n* Added default value option for `taxonomy_select` field type. props [@darlantc](https://github.com/darlantc), ([#473](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/pull/473))\n* Added `preview_size` parameter for `file_list` field type. props [@IgorCode](https://github.com/IgorCode), ([#471](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/pull/471))\n* Updated `file_list` images to be displayed horizontally instead of vertically. props [@IgorCode](https://github.com/IgorCode), ([#467](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/pull/467))\n* Use `get_the_terms` where possible since the data is cached.\n\n**Bug Fixes**\n\n* Fixed wysiwyg escaping slashes. props [@gregrickaby](https://github.com/gregrickaby), ([#465](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/pull/465))\n* Replaced `__DIR__`, as `dirname( __FILE__ )` is easier to maintain back-compatibility.\n* Fixed missing table styling on new posts. props [@mustardBees](https://github.com/mustardBees), ([#438](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/pull/438))\n* Fix undeclared JS variable. [@veelen](https://github.com/veelen), ([#451](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/pull/451))\n* Fix `file_list` errors when removing all files and saving.\n* Set correct `object_id` to be used later in `cmb_show_on` filter. [@lauravaq](https://github.com/lauravaq), ([#445](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/pull/445))\n* Fix sanitization recursion memeory issues.\n\n### 1.0.1\n\n**Enhancements**\n\n* Now works with option pages and site settings. ([view example in wiki](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/wiki/Using-CMB-to-create-an-Admin-Theme-Options-Page))\n* two filters to override the setting and getting of options, `cmb_override_option_get_$option_key` and `cmb_override_option_save_$option_key` respectively. Handy for using plugins like [WP Large Options](https://github.com/voceconnect/wp-large-options/) ([also here](http://vip.wordpress.com/plugins/wp-large-options/)).\n* Improved styling on taxonomy (\\*tease\\*) and options pages and for new 3.8 admin UI.\n* New sanitization class to sanitize data when saved.\n* New callback field parameter, `sanitization_cb`, for performing your own sanitization.\n* new `cmb_Meta_Box_types::esc()` method that handles escaping data for display.\n* New callback field parameter, `escape_cb`, for performing your own data escaping, as well as a new filter, `'cmb_types_esc_'. $field['type']`.\n\n**Bug Fixes**\n\n* Fixed wysiwyg editor button padding. props [@corvannoorloos](https://github.com/corvannoorloos), ([#391](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/pull/391))\n* A few php < 5.3 errors were addressed.\n* Fields with quotation marks no longer break the input/textarea fields.\n* metaboxes for Attachment pages now save correctly. Thanks [@nciske](https://github.com/nciske) for reporting. ([#412](https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/issues/412))\n* Occasionally fields wouldn't save because of the admin show_on filter.\n* Smaller images loaded to the file field type will no longer be blown up larger than their dimensions.\n\n### 1.0.0\n* Added `text_datetime_timestamp_timezone` type, a datetime combo field with an additional timezone drop down, props [@dessibelle](https://github.com/dessibelle)\n* Added `select_timezone` type, a standalone time zone select dropdown. The time zone select can be used with standalone `text_datetime_timestamp` if desired. Props [@dessibelle](https://github.com/dessibelle)\n* Added `text_url` type, a basic url field. Props [@dessibelle](https://github.com/dessibelle)\n* Added `text_email` type, a basic email field. Props [@dessibelle](https://github.com/dessibelle)\n* Added ability to display metabox fields in frontend. Default is true, but can be overriden using the `cmb_allow_frontend filter`. If set to true, an entire metabox form can be output with the `cmb_metabox_form( $meta_box, $object_id, $echo )` function. Props [@dessibelle](https://github.com/dessibelle), [@messenlehner](https://github.com/messenlehner) & [@jtsternberg](https://github.com/jtsternberg).\n* Added hook `cmb_after_table` after all metabox output. Props [@wpsmith](https://github.com/wpsmith)\n* `file_list` now works like a repeatable field. Add as many files as you want. Props [@coreymcollins](https://github.com/coreymcollins)\n* `text`, `text_small`, `text_medium`, `text_url`, `text_email`, & `text_money` fields now all have the option to be repeatable. Props [@jtsternberg](https://github.com/jtsternberg)\n* Custom metaboxes can now be added for user meta. Add them on the user add/edit screen, or in a custom user profile edit page on the front-end. Props [@tw2113](https://github.com/tw2113), [@jtsternberg](https://github.com/jtsternberg)\n\n### 0.9.4\n* Added field \"before\" and \"after\" options for each field. Solves issue with '$' not being the desired text_money monetary symbol, props [@GaryJones](https://github.com/GaryJones)\n* Added filter for 'std' default fallback value, props [@messenlehner](https://github.com/messenlehner)\n* Ensure oEmbed videos fit in their respective metaboxes, props [@jtsternberg](https://github.com/jtsternberg)\n* Fixed issue where an upload field with 'show_names' disabled wouldn't have the correct button label, props [@jtsternberg](https://github.com/jtsternberg)\n* Better file-extension check for images, props [@GhostToast](https://github.com/GhostToast)\n* New filter, `cmb_valid_img_types`, for whitelisted image file-extensions, props [@jtsternberg](https://github.com/jtsternberg)\n\n### 0.9.3\n* Added field type and field id classes to each cmb table row, props [@jtsternberg](https://github.com/jtsternberg)\n\n### 0.9.2\n* Added post type comparison to prevent storing null values for taxonomy selectors, props [@norcross](https://github.com/norcross)\n\n### 0.9.1\n* Added `oEmbed` field type with ajax display, props [@jtsternberg](https://github.com/jtsternberg)\n\n### 0.9\n* __Note: This release requires WordPress 3.3+__\n* Cleaned up scripts being queued, props [@jaredatch](https://github.com/jaredatch)\n* Cleaned up and reorganized jQuery, props [@GaryJones](https://github.com/GaryJones)\n* Use $pagenow instead of custom $current_page, props [@jaredatch](https://github.com/jaredatch)\n* Fixed CSS, removed inline styles, now all in style.css, props [@jaredatch](https://github.com/jaredatch)\n* Fixed multicheck issues (issue #48), props [@jaredatch](https://github.com/jaredatch)\n* Fixed jQuery UI datepicker CSS conflicting with WordPress UI elements, props [@jaredatch](https://github.com/jaredatch)\n* Fixed zeros not saving in fields, props [@GaryJones](https://github.com/GaryJones)\n* Fixed improper labels on radio and multicheck fields, props [@jaredatch](https://github.com/jaredatch)\n* Fixed fields not rendering properly when in sidebar, props [@jaredatch](https://github.com/jaredatch)\n* Fixed bug where datepicker triggers extra space after footer in Firefox (issue #14), props [@jaredatch](https://github.com/jaredatch)\n* Added jQuery UI datepicker packaged with 3.3 core, props [@jaredatch](https://github.com/jaredatch)\n* Added date time combo picker, props [@jaredatch](https://github.com/jaredatch)\n* Added color picker, props [@jaredatch](https://github.com/jaredatch)\n* Added readme.md markdown file, props [@jaredatch](https://github.com/jaredatch)\n\n### 0.8\n* Added jQuery timepicker, props [@norcross](https://github.com/norcross)\n* Added 'raw' textarea to convert special HTML entities back to characters, props [@norcross](https://github.com/norcross)\n* Added missing examples on example-functions.php, props [@norcross](https://github.com/norcross)\n\n### 0.7\n* Added the new wp_editor() function for the WYSIWYG dialog box, props [@jcpry](https://github.com/jcpry)\n* Created 'cmb_show_on' filter to define your own Show On Filters, props [@billerickson](https://github.com/billerickson)\n* Added page template show_on filter, props [@billerickson](https://github.com/billerickson)\n* Improvements to the 'file' field type, props [@randyhoyt](https://github.com/randyhoyt)\n* Allow for default values on 'radio' and 'radio_inline' field types, props [@billerickson](https://github.com/billerickson)\n\n### 0.6.1\n* Enabled the ability to define your own custom field types (issue #28). props [@randyhoyt](https://github.com/randyhoyt)\n\n### 0.6\n* Added the ability to limit metaboxes to certain posts by id. props [@billerickson](https://github.com/billerickson)\n\n### 0.5\n* Fixed define to prevent notices. props [@destos](https://github.com/destos)\n* Added text_date_timestap option. props [@andrewyno](https://github.com/andrewyno)\n* Fixed WYSIWYG paragraph breaking/spacing bug. props [@wpsmith](https://github.com/wpsmith)\n* Added taxonomy_radio and taxonomies_select options. props [@c3mdigital](https://github.com/c3mdigital)\n* Fixed script causing the dashboard widgets to not be collapsible.\n* Fixed various spacing and whitespace inconsistencies\n\n### 0.4\n* Think we have a release that is mostly working. We'll say the initial release :)\n\n## Known Issues\n\n* Problem inserting file url inside field for image with caption (issue #50) May be fixed, needs testing.\n* `CMB_META_BOX_URL` does not define properly in WAMP/XAMP (Windows) (issue #31) May be fixed, needs testing.\n* Metabox containing WYSIWYG editor cannot be moved (this is a TinyMCE issue)\n\n## To-do\n**Enhancements**\n\n* Fix known issues (above)\n* move timepicker and datepicker jQuery inline\n* support for multiple configurable timepickers/datepickers\n* add ability to save fields in a single custom field\n* add ability to mark fields as required\n* repeatable fields (halfway there)\n* look at possiblity of tabs\n* look at preserving taxonomy hierarchies\n* Add input attributes filter\n* Always load newest version of CMB\n* Helper function to easily get oembed from stored oEmbed field\n\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.857421875,
          "content": "{\n  \"name\": \"cmb\",\n  \"version\": \"1.1.3\",\n  \"description\": \"**Contributors**:\",\n  \"main\": \"Gruntfile.js\",\n  \"directories\": {\n    \"test\": \"tests\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress\"\n  },\n  \"author\": \"WebDevStudios\",\n  \"license\": \"GPLv2\",\n  \"bugs\": {\n    \"url\": \"https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress/issues\"\n  },\n  \"homepage\": \"https://github.com/WebDevStudios/Custom-Metaboxes-and-Fields-for-WordPress\",\n  \"devDependencies\": {\n    \"grunt-phpunit\": \"~0.3.3\",\n    \"grunt\": \"~0.4.4\",\n    \"grunt-githooks\": \"~0.3.1\",\n    \"grunt-contrib-jshint\": \"~0.10.0\",\n    \"grunt-contrib-uglify\": \"~0.4.0\",\n    \"grunt-contrib-cssmin\": \"~0.9.0\",\n    \"grunt-contrib-watch\": \"~0.6.1\"\n  }\n}\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.5791015625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit\n\tbootstrap                   = \"tests/phpunit/includes/bootstrap.php\"\n\tbackupGlobals               = \"false\"\n\tcolors                      = \"true\"\n\tconvertErrorsToExceptions   = \"true\"\n\tconvertNoticesToExceptions  = \"true\"\n\tconvertWarningsToExceptions = \"true\"\n\tsyntaxCheck                 = \"false\"\n\tverbose                     = \"true\"\n\t>\n\t<testsuites>\n\t\t<!-- Default test suite to run all tests -->\n\t\t<testsuite name=\"BadgeOS Test Suite\">\n\t\t\t<directory suffix=\".php\">./tests/phpunit/tests</directory>\n\t\t</testsuite>\n\t</testsuites>\n</phpunit>\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 0.4736328125,
          "content": "# *Custom Metaboxes and Fields for WordPress\n----\n\n## \\*This plugin is no longer supported or developed.\n\nAll future development will continue on [CMB2](https://github.com/WebDevStudios/CMB2).\n\nThis repo only exists for legacy reasons. This library should absolutely not be used for any new projects.\n\n<a href=\"https://webdevstudios.com/contact/\"><img src=\"https://webdevstudios.com/wp-content/uploads/2018/04/wds-github-banner.png\" alt=\"WebDevStudios. WordPress for big brands.\"></a>\n"
        },
        {
          "name": "style.css",
          "type": "blob",
          "size": 30.4365234375,
          "content": "/**\n * CMB Styling\n */\n\ntable.cmb_metabox {\n\tclear: both;\n}\n\ntable.cmb_metabox > tr:first-of-type > td,\ntable.cmb_metabox > tr:first-of-type > th,\ntable.cmb_metabox tbody > tr:first-of-type > td,\ntable.cmb_metabox tbody > tr:first-of-type > th,\n.post-php table.cmb_metabox .cmb-nested-table td,\n.post-new-php table.cmb_metabox .cmb-nested-table td,\n.post-php table.cmb_metabox .repeatable-group th,\n.post-new-php table.cmb_metabox .repeatable-group th,\n.post-php table.cmb_metabox .repeatable-group:first-of-type,\n.post-new-php table.cmb_metabox .repeatable-group:first-of-type {\n\tborder: 0;\n}\n\n.post-php table.cmb_metabox td,\n.post-new-php table.cmb_metabox td,\n.post-php table.cmb_metabox th,\n.post-new-php table.cmb_metabox th,\n.post-php table.cmb_metabox .repeatable-group,\n.post-new-php table.cmb_metabox .repeatable-group,\n.post-php table.cmb_metabox .repeatable-group,\n.post-new-php table.cmb_metabox .repeatable-group {\n\tborder-top: 1px solid #E9E9E9;\n}\n\n.repeatable-group th {\n\tpadding: 5px;\n}\n\n.repeatable-group .shift-rows {\n\ttext-decoration: none;\n\tmargin-right: 5px;\n\tfont-size: 1.2em;\n}\n\n.repeatable-group .cmb_upload_button {\n\tfloat: right;\n}\n\n#poststuff .repeatable-group h2 {\n\tmargin: 0;\n}\n\n.cmb-group-title h4 {\n\tfont-size: 1.2em;\n\tfont-weight: 500;\n\tborder-bottom: 1px solid #ddd;\n}\n\n.post-php table.cmb_metabox th, .post-new-php table.cmb_metabox th {\n\ttext-align: right;\n\tfont-weight:bold;\n}\n\n.post-php table.cmb_metabox table th, .post-new-php table.cmb_metabox table th {\n\ttext-align: left;\n}\n\ntable.cmb_metabox th label {\n\tmargin-top:5px;\n\tdisplay:block\n}\n\np.cmb_metabox_description {\n\tcolor: #AAA;\n\tfont-style: italic;\n\tmargin: 2px 0 !important\n}\n\nspan.cmb_metabox_description {\n\tcolor: #AAA;\n\tfont-style: italic\n}\n\ntable.cmb_metabox input, table.cmb_metabox textarea {\n\tfont-size:14px;\n\tpadding: 5px;\n}\n\ntable.cmb_metabox input[type=text], table.cmb_metabox textarea {\n\twidth: 97%;\n}\n\ntable.cmb_metabox textarea.cmb_textarea_code {\n\tfont-family: Consolas,Monaco,monospace;\n\tline-height: 16px;\n}\n\ntable.cmb_metabox input.cmb_text_small {\n\twidth: 100px;\n\tmargin-right: 15px\n}\n\ntable.cmb_metabox input.cmb_timepicker {\n\twidth: 100px;\n\tmargin-right: 15px\n}\n\ntable.cmb_metabox input.cmb_text_money {\n\twidth: 90px;\n\tmargin-right: 15px\n}\n\ntable.cmb_metabox input.cmb_text_medium {\n\twidth: 230px;\n\tmargin-right: 15px\n}\n\ntable.cmb_metabox input.cmb_upload_file {\n\twidth: 65%;\n}\n\ntable.cmb_metabox input.ed_button{\n\tpadding:2px 4px\n}\n\ntable.cmb_metabox li {\n\tfont-size:14px;\n\tmargin: 1px 0 5px 0;\n\tline-height: 16px;\n}\n\ntable.cmb_metabox ul {\n\tpadding-top:5px;\n\tmargin: 0;\n}\n\ntable.cmb_metabox select {\n\tfont-size:14px;\n\tmargin-top: 3px\n}\n\ntable.cmb_metabox input:focus, table.cmb_metabox textarea:focus {\n\tbackground: #fffff8\n}\n\n.cmb_metabox_title {\n\tmargin: 0 0 5px 0;\n\tpadding: 5px 0 0 0;\n}\n\n.edit-tags-php .cmb_metabox_title, .profile-php .cmb_metabox_title, .user-edit-php .cmb_metabox_title {\n\tmargin-left: -10px;\n}\n\n.cmb-inline ul {\n\tpadding: 4px 0 0 0\n}\n\n.cmb-inline li {display: inline-block;\n\tpadding-right: 18px\n}\n\ntable.cmb_metabox input[type=\"radio\"] {\n\tmargin: 0 5px 0 0;\n\tpadding: 0\n}\n\ntable.cmb_metabox input[type=\"checkbox\"] {\n\tmargin: 0 5px 0 0;\n\tpadding: 0\n}\n\ntable.cmb_metabox .mceLayout {\n\tborder:1px solid #DFDFDF !important\n}\n\ntable.cmb_metabox .mceIframeContainer {\n\tbackground:#FFF\n}\n\ntable.cmb_metabox .meta_mce {\n\twidth:97%\n}\n\ntable.cmb_metabox .meta_mce textarea {\n\twidth:100%\n}\n\ntable.cmb_metabox .cmb_media_status {\n margin: 10px 0 0 0\n}\n\ntable.cmb_metabox .cmb_media_status .img_status {\n\tclear: none;\n\tfloat: left;\n\tdisplay: inline-block;\n\tmargin-right: 10px;\n\twidth: auto;\n}\n\ntable.cmb_metabox .cmb-type-file_list .cmb_media_status .img_status {\n\tclear: none;\n\tfloat: left;\n\tmargin-right: 10px;\n\twidth: auto;\n}\n\ntable.cmb_metabox .cmb_media_status .img_status, table.cmb_metabox .cmb_media_status .embed_status {\n\tposition: relative;\n}\n\ntable.cmb_metabox .cmb_media_status .img_status img, table.cmb_metabox .cmb_media_status .embed_status {\n\tborder:1px solid #DFDFDF;\n\tbackground: #FAFAFA;\n\tmax-width:350px;\n\tpadding: 5px;\n\t-moz-border-radius: 2px;\n\tborder-radius: 2px\n}\n\ntable.cmb_metabox .cmb_media_status .embed_status {\n\tfloat: left;\n\tmax-width:800px\n}\n\ntable.cmb_metabox .cmb_media_status .img_status .cmb_remove_file_button, table.cmb_metabox .cmb_media_status .embed_status .cmb_remove_file_button {\n\ttext-indent: -9999px;\n\tbackground: url(images/ico-delete.png);\n\twidth: 16px;\n\theight: 16px;\n\tposition: absolute;\n\ttop: -5px;\n\tleft: -5px\n}\n\ntable.cmb_metabox .attach_list li {\n\tclear: both;\n\tdisplay: inline-block;\n\tmargin-bottom: 25px;\n\twidth: 100%;\n}\n\ntable.cmb_metabox .attach_list li img {\n\tfloat: left;\n\tmargin-right: 10px;\n}\n\n/**\n * Sidebar placement adjustments\n */\n.inner-sidebar table.cmb_metabox input[type=text],\n#side-sortables table.cmb_metabox input[type=text],\ntable.cmb_metabox textarea {\n\twidth: 95%;\n}\n\n.inner-sidebar table.cmb_metabox .cmb_media_status .img_status img,\n#side-sortables table.cmb_metabox .cmb_media_status .img_status img,\n.inner-sidebar table.cmb_metabox .cmb_media_status .embed_status img,\n#side-sortables table.cmb_metabox .cmb_media_status .embed_status img {\n\twidth: 90%;\n}\n\n.inner-sidebar table.cmb_metabox label,\n#side-sortables table.cmb_metabox label {\n\tdisplay: block;\n\tfont-weight: bold;\n\tpadding: 0 0 5px;\n}\n\n.inner-sidebar table.cmb_metabox .cmb_list label,\n#side-sortables table.cmb_metabox .cmb_list label {\n\tdisplay: inline;\n\tfont-weight: normal;\n}\n\n.inner-sidebar table.cmb_metabox .cmb_metabox_description,\n#side-sortables table.cmb_metabox .cmb_metabox_description {\n\tdisplay: block;\n\tpadding: 7px 0 0;\n}\n\n.inner-sidebar table.cmb_metabox .cmb_metabox_title,\n#side-sortables table.cmb_metabox .cmb_metabox_title {\n\tfont-size: 1.2em;\n\tfont-style: italic;\n}\n\n.postbox table.cmb_metabox .cmb-spinner {\n\tfloat: left;\n}\n\n/**\n * Color picker\n */\ntable.cmb_metabox .wp-color-result, table.cmb_metabox .wp-picker-input-wrap {\n\tvertical-align: middle;\n}\n\ntable.cmb_metabox .wp-color-result, table.cmb_metabox .wp-picker-container {\n\tmargin: 0 10px 0 0;\n}\n\n\n/**\n * Timepicker\n */\ndiv.time-picker {\n\tposition: absolute;\n\theight: 191px;\n\twidth:6em;\n\t/* needed for IE */overflow: auto;\n\tbackground: #fff;\n\tborder: 1px solid #aaa;\n\tz-index: 99;\n\tmargin: 0\n}\n\ndiv.time-picker-12hours {\n\twidth:8em; /* needed for IE */\n}\n\ndiv.time-picker ul {\n\tlist-style-type: none;\n\tmargin: 0;\n\tpadding: 0;\n}\n\ndiv.time-picker li {\n\tcursor: pointer;\n\theight: 10px;\n\tfont: 14px/1 Helvetica, Arial, sans-serif;\n\tpadding: 4px 3px;\n}\n\ndiv.time-picker li.selected {\n\tbackground: #0063CE;\n\tcolor: #fff;\n}\n\n/**\n * jQuery UI CSS Framework 1.8.16\n *\n * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http://jquery.org/license\n *\n * http://docs.jquery.com/UI/Theming/API\n */\n .cmb_element .ui-helper-hidden { display: none; }\n .cmb_element .ui-helper-hidden-accessible { position: absolute !important; clip: rect(1px 1px 1px 1px); clip: rect(1px,1px,1px,1px); }\n .cmb_element .ui-helper-reset { margin: 0; padding: 0; border: 0; outline: 0; line-height: 1.3; text-decoration: none; font-size: 100%; list-style: none; }\n .cmb_element .ui-helper-clearfix:after { content: \".\"; display: block; height: 0; clear: both; visibility: hidden; }\n .cmb_element .ui-helper-clearfix { display: inline-block; }\n * html .ui-helper-clearfix { height:1%; }\n .cmb_element .ui-helper-clearfix { display:block; }\n .cmb_element .ui-helper-zfix { width: 100%; height: 100%; top: 0; left: 0; position: absolute; opacity: 0; filter:Alpha(Opacity=0); }\n .cmb_element .ui-state-disabled { cursor: default !important; }\n .cmb_element .ui-icon { display: block; text-indent: -99999px; overflow: hidden; background-repeat: no-repeat; }\n .cmb_element .ui-widget-overlay { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }\n .cmb_element .ui-widget { font-family: Verdana,Arial,sans-serif; font-size: 1.1em; }\n .cmb_element .ui-widget .ui-widget { font-size: 1em; }\n .cmb_element .ui-widget input, .cmb_element .ui-widget select, .cmb_element .ui-widget textarea, .cmb_element .ui-widget button { font-family: Verdana,Arial,sans-serif; font-size: 1em; }\n .cmb_element .ui-widget-content { border: 1px solid #aaaaaa; background: #ffffff url(images/ui-bg_flat_75_ffffff_40x100.png) 50% 50% repeat-x; color: #222222; }\n .cmb_element .ui-widget-content a { color: #222222; }\n .cmb_element .ui-widget-header { border: 1px solid #aaaaaa; background: #cccccc url(images/ui-bg_highlight-soft_75_cccccc_1x100.png) 50% 50% repeat-x; color: #222222; font-weight: bold; }\n .cmb_element .ui-widget-header a { color: #222222; }\n .cmb_element .ui-state-default, .cmb_element .ui-widget-content .ui-state-default, .cmb_element .ui-widget-header .ui-state-default { border: 1px solid #d3d3d3; background: #e6e6e6 url(images/ui-bg_glass_75_e6e6e6_1x400.png) 50% 50% repeat-x; font-weight: normal; color: #555555; }\n .cmb_element .ui-state-default a, .cmb_element .ui-state-default a:link, .cmb_element .ui-state-default a:visited { color: #555555; text-decoration: none; }\n .cmb_element .ui-state-hover, .cmb_element .ui-widget-content .ui-state-hover, .cmb_element .ui-widget-header .ui-state-hover, .cmb_element .ui-state-focus, .cmb_element .ui-widget-content .ui-state-focus, .cmb_element .ui-widget-header .ui-state-focus { border: 1px solid #999999; background: #dadada url(images/ui-bg_glass_75_dadada_1x400.png) 50% 50% repeat-x; font-weight: normal; color: #212121; }\n .cmb_element .ui-state-hover a, .cmb_element .ui-state-hover a:hover { color: #212121; text-decoration: none; }\n .cmb_element .ui-state-active, .cmb_element .ui-widget-content .ui-state-active, .cmb_element .ui-widget-header .ui-state-active { border: 1px solid #aaaaaa; background: #ffffff url(images/ui-bg_glass_65_ffffff_1x400.png) 50% 50% repeat-x; font-weight: normal; color: #212121; }\n .cmb_element .ui-state-active a, .cmb_element .ui-state-active a:link, .cmb_element .ui-state-active a:visited { color: #212121; text-decoration: none; }\n .cmb_element .ui-widget :active { outline: none; }\n .cmb_element .ui-state-highlight, .cmb_element .ui-widget-content .ui-state-highlight, .cmb_element .ui-widget-header .ui-state-highlight  {border: 1px solid #fcefa1; background: #fbf9ee url(images/ui-bg_glass_55_fbf9ee_1x400.png) 50% 50% repeat-x; color: #363636; }\n .cmb_element .ui-state-highlight a, .cmb_element .ui-widget-content .ui-state-highlight a,.ui-widget-header .ui-state-highlight a { color: #363636; }\n .cmb_element .ui-state-error, .cmb_element .ui-widget-content .ui-state-error, .cmb_element .ui-widget-header .ui-state-error {border: 1px solid #cd0a0a; background: #fef1ec url(images/ui-bg_glass_95_fef1ec_1x400.png) 50% 50% repeat-x; color: #cd0a0a; }\n .cmb_element .ui-state-error a, .cmb_element .ui-widget-content .ui-state-error a, .cmb_element .ui-widget-header .ui-state-error a { color: #cd0a0a; }\n .cmb_element .ui-state-error-text, .cmb_element .ui-widget-content .ui-state-error-text, .cmb_element .ui-widget-header .ui-state-error-text { color: #cd0a0a; }\n .cmb_element .ui-priority-primary, .cmb_element .ui-widget-content .ui-priority-primary, .cmb_element .ui-widget-header .ui-priority-primary { font-weight: bold; }\n .cmb_element .ui-priority-secondary, .cmb_element .ui-widget-content .ui-priority-secondary,  .ui-widget-header .ui-priority-secondary { opacity: .7; filter:Alpha(Opacity=70); font-weight: normal; }\n .cmb_element .ui-state-disabled, .cmb_element .ui-widget-content .ui-state-disabled, .cmb_element .ui-widget-header .ui-state-disabled { opacity: .35; filter:Alpha(Opacity=35); background-image: none; }\n .cmb_element .ui-icon { width: 16px; height: 16px; background-image: url(images/ui-icons_222222_256x240.png); }\n .cmb_element .ui-widget-content .ui-icon {background-image: url(images/ui-icons_222222_256x240.png); }\n .cmb_element .ui-widget-header .ui-icon {background-image: url(images/ui-icons_222222_256x240.png); }\n .cmb_element .ui-state-default .ui-icon { background-image: url(images/ui-icons_888888_256x240.png); }\n .cmb_element .ui-state-hover .ui-icon, .cmb_element .ui-state-focus .ui-icon {background-image: url(images/ui-icons_454545_256x240.png); }\n .cmb_element .ui-state-active .ui-icon {background-image: url(images/ui-icons_454545_256x240.png); }\n .cmb_element .ui-state-highlight .ui-icon {background-image: url(images/ui-icons_2e83ff_256x240.png); }\n .cmb_element .ui-state-error .ui-icon, .cmb_element .ui-state-error-text .ui-icon {background-image: url(images/ui-icons_cd0a0a_256x240.png); }\n .cmb_element .ui-icon-carat-1-n { background-position: 0 0; }\n .cmb_element .ui-icon-carat-1-ne { background-position: -16px 0; }\n .cmb_element .ui-icon-carat-1-e { background-position: -32px 0; }\n .cmb_element .ui-icon-carat-1-se { background-position: -48px 0; }\n .cmb_element .ui-icon-carat-1-s { background-position: -64px 0; }\n .cmb_element .ui-icon-carat-1-sw { background-position: -80px 0; }\n .cmb_element .ui-icon-carat-1-w { background-position: -96px 0; }\n .cmb_element .ui-icon-carat-1-nw { background-position: -112px 0; }\n .cmb_element .ui-icon-carat-2-n-s { background-position: -128px 0; }\n .cmb_element .ui-icon-carat-2-e-w { background-position: -144px 0; }\n .cmb_element .ui-icon-triangle-1-n { background-position: 0 -16px; }\n .cmb_element .ui-icon-triangle-1-ne { background-position: -16px -16px; }\n .cmb_element .ui-icon-triangle-1-e { background-position: -32px -16px; }\n .cmb_element .ui-icon-triangle-1-se { background-position: -48px -16px; }\n .cmb_element .ui-icon-triangle-1-s { background-position: -64px -16px; }\n .cmb_element .ui-icon-triangle-1-sw { background-position: -80px -16px; }\n .cmb_element .ui-icon-triangle-1-w { background-position: -96px -16px; }\n .cmb_element .ui-icon-triangle-1-nw { background-position: -112px -16px; }\n .cmb_element .ui-icon-triangle-2-n-s { background-position: -128px -16px; }\n .cmb_element .ui-icon-triangle-2-e-w { background-position: -144px -16px; }\n .cmb_element .ui-icon-arrow-1-n { background-position: 0 -32px; }\n .cmb_element .ui-icon-arrow-1-ne { background-position: -16px -32px; }\n .cmb_element .ui-icon-arrow-1-e { background-position: -32px -32px; }\n .cmb_element .ui-icon-arrow-1-se { background-position: -48px -32px; }\n .cmb_element .ui-icon-arrow-1-s { background-position: -64px -32px; }\n .cmb_element .ui-icon-arrow-1-sw { background-position: -80px -32px; }\n .cmb_element .ui-icon-arrow-1-w { background-position: -96px -32px; }\n .cmb_element .ui-icon-arrow-1-nw { background-position: -112px -32px; }\n .cmb_element .ui-icon-arrow-2-n-s { background-position: -128px -32px; }\n .cmb_element .ui-icon-arrow-2-ne-sw { background-position: -144px -32px; }\n .cmb_element .ui-icon-arrow-2-e-w { background-position: -160px -32px; }\n .cmb_element .ui-icon-arrow-2-se-nw { background-position: -176px -32px; }\n .cmb_element .ui-icon-arrowstop-1-n { background-position: -192px -32px; }\n .cmb_element .ui-icon-arrowstop-1-e { background-position: -208px -32px; }\n .cmb_element .ui-icon-arrowstop-1-s { background-position: -224px -32px; }\n .cmb_element .ui-icon-arrowstop-1-w { background-position: -240px -32px; }\n .cmb_element .ui-icon-arrowthick-1-n { background-position: 0 -48px; }\n .cmb_element .ui-icon-arrowthick-1-ne { background-position: -16px -48px; }\n .cmb_element .ui-icon-arrowthick-1-e { background-position: -32px -48px; }\n .cmb_element .ui-icon-arrowthick-1-se { background-position: -48px -48px; }\n .cmb_element .ui-icon-arrowthick-1-s { background-position: -64px -48px; }\n .cmb_element .ui-icon-arrowthick-1-sw { background-position: -80px -48px; }\n .cmb_element .ui-icon-arrowthick-1-w { background-position: -96px -48px; }\n .cmb_element .ui-icon-arrowthick-1-nw { background-position: -112px -48px; }\n .cmb_element .ui-icon-arrowthick-2-n-s { background-position: -128px -48px; }\n .cmb_element .ui-icon-arrowthick-2-ne-sw { background-position: -144px -48px; }\n .cmb_element .ui-icon-arrowthick-2-e-w { background-position: -160px -48px; }\n .cmb_element .ui-icon-arrowthick-2-se-nw { background-position: -176px -48px; }\n .cmb_element .ui-icon-arrowthickstop-1-n { background-position: -192px -48px; }\n .cmb_element .ui-icon-arrowthickstop-1-e { background-position: -208px -48px; }\n .cmb_element .ui-icon-arrowthickstop-1-s { background-position: -224px -48px; }\n .cmb_element .ui-icon-arrowthickstop-1-w { background-position: -240px -48px; }\n .cmb_element .ui-icon-arrowreturnthick-1-w { background-position: 0 -64px; }\n .cmb_element .ui-icon-arrowreturnthick-1-n { background-position: -16px -64px; }\n .cmb_element .ui-icon-arrowreturnthick-1-e { background-position: -32px -64px; }\n .cmb_element .ui-icon-arrowreturnthick-1-s { background-position: -48px -64px; }\n .cmb_element .ui-icon-arrowreturn-1-w { background-position: -64px -64px; }\n .cmb_element .ui-icon-arrowreturn-1-n { background-position: -80px -64px; }\n .cmb_element .ui-icon-arrowreturn-1-e { background-position: -96px -64px; }\n .cmb_element .ui-icon-arrowreturn-1-s { background-position: -112px -64px; }\n .cmb_element .ui-icon-arrowrefresh-1-w { background-position: -128px -64px; }\n .cmb_element .ui-icon-arrowrefresh-1-n { background-position: -144px -64px; }\n .cmb_element .ui-icon-arrowrefresh-1-e { background-position: -160px -64px; }\n .cmb_element .ui-icon-arrowrefresh-1-s { background-position: -176px -64px; }\n .cmb_element .ui-icon-arrow-4 { background-position: 0 -80px; }\n .cmb_element .ui-icon-arrow-4-diag { background-position: -16px -80px; }\n .cmb_element .ui-icon-extlink { background-position: -32px -80px; }\n .cmb_element .ui-icon-newwin { background-position: -48px -80px; }\n .cmb_element .ui-icon-refresh { background-position: -64px -80px; }\n .cmb_element .ui-icon-shuffle { background-position: -80px -80px; }\n .cmb_element .ui-icon-transfer-e-w { background-position: -96px -80px; }\n .cmb_element .ui-icon-transferthick-e-w { background-position: -112px -80px; }\n .cmb_element .ui-icon-folder-collapsed { background-position: 0 -96px; }\n .cmb_element .ui-icon-folder-open { background-position: -16px -96px; }\n .cmb_element .ui-icon-document { background-position: -32px -96px; }\n .cmb_element .ui-icon-document-b { background-position: -48px -96px; }\n .cmb_element .ui-icon-note { background-position: -64px -96px; }\n .cmb_element .ui-icon-mail-closed { background-position: -80px -96px; }\n .cmb_element .ui-icon-mail-open { background-position: -96px -96px; }\n .cmb_element .ui-icon-suitcase { background-position: -112px -96px; }\n .cmb_element .ui-icon-comment { background-position: -128px -96px; }\n .cmb_element .ui-icon-person { background-position: -144px -96px; }\n .cmb_element .ui-icon-print { background-position: -160px -96px; }\n .cmb_element .ui-icon-trash { background-position: -176px -96px; }\n .cmb_element .ui-icon-locked { background-position: -192px -96px; }\n .cmb_element .ui-icon-unlocked { background-position: -208px -96px; }\n .cmb_element .ui-icon-bookmark { background-position: -224px -96px; }\n .cmb_element .ui-icon-tag { background-position: -240px -96px; }\n .cmb_element .ui-icon-home { background-position: 0 -112px; }\n .cmb_element .ui-icon-flag { background-position: -16px -112px; }\n .cmb_element .ui-icon-calendar { background-position: -32px -112px; }\n .cmb_element .ui-icon-cart { background-position: -48px -112px; }\n .cmb_element .ui-icon-pencil { background-position: -64px -112px; }\n .cmb_element .ui-icon-clock { background-position: -80px -112px; }\n .cmb_element .ui-icon-disk { background-position: -96px -112px; }\n .cmb_element .ui-icon-calculator { background-position: -112px -112px; }\n .cmb_element .ui-icon-zoomin { background-position: -128px -112px; }\n .cmb_element .ui-icon-zoomout { background-position: -144px -112px; }\n .cmb_element .ui-icon-search { background-position: -160px -112px; }\n .cmb_element .ui-icon-wrench { background-position: -176px -112px; }\n .cmb_element .ui-icon-gear { background-position: -192px -112px; }\n .cmb_element .ui-icon-heart { background-position: -208px -112px; }\n .cmb_element .ui-icon-star { background-position: -224px -112px; }\n .cmb_element .ui-icon-link { background-position: -240px -112px; }\n .cmb_element .ui-icon-cancel { background-position: 0 -128px; }\n .cmb_element .ui-icon-plus { background-position: -16px -128px; }\n .cmb_element .ui-icon-plusthick { background-position: -32px -128px; }\n .cmb_element .ui-icon-minus { background-position: -48px -128px; }\n .cmb_element .ui-icon-minusthick { background-position: -64px -128px; }\n .cmb_element .ui-icon-close { background-position: -80px -128px; }\n .cmb_element .ui-icon-closethick { background-position: -96px -128px; }\n .cmb_element .ui-icon-key { background-position: -112px -128px; }\n .cmb_element .ui-icon-lightbulb { background-position: -128px -128px; }\n .cmb_element .ui-icon-scissors { background-position: -144px -128px; }\n .cmb_element .ui-icon-clipboard { background-position: -160px -128px; }\n .cmb_element .ui-icon-copy { background-position: -176px -128px; }\n .cmb_element .ui-icon-contact { background-position: -192px -128px; }\n .cmb_element .ui-icon-image { background-position: -208px -128px; }\n .cmb_element .ui-icon-video { background-position: -224px -128px; }\n .cmb_element .ui-icon-script { background-position: -240px -128px; }\n .cmb_element .ui-icon-alert { background-position: 0 -144px; }\n .cmb_element .ui-icon-info { background-position: -16px -144px; }\n .cmb_element .ui-icon-notice { background-position: -32px -144px; }\n .cmb_element .ui-icon-help { background-position: -48px -144px; }\n .cmb_element .ui-icon-check { background-position: -64px -144px; }\n .cmb_element .ui-icon-bullet { background-position: -80px -144px; }\n .cmb_element .ui-icon-radio-off { background-position: -96px -144px; }\n .cmb_element .ui-icon-radio-on { background-position: -112px -144px; }\n .cmb_element .ui-icon-pin-w { background-position: -128px -144px; }\n .cmb_element .ui-icon-pin-s { background-position: -144px -144px; }\n .cmb_element .ui-icon-play { background-position: 0 -160px; }\n .cmb_element .ui-icon-pause { background-position: -16px -160px; }\n .cmb_element .ui-icon-seek-next { background-position: -32px -160px; }\n .cmb_element .ui-icon-seek-prev { background-position: -48px -160px; }\n .cmb_element .ui-icon-seek-end { background-position: -64px -160px; }\n .cmb_element .ui-icon-seek-start { background-position: -80px -160px; }\n .cmb_element .ui-icon-seek-first { background-position: -80px -160px; }\n .cmb_element .ui-icon-stop { background-position: -96px -160px; }\n .cmb_element .ui-icon-eject { background-position: -112px -160px; }\n .cmb_element .ui-icon-volume-off { background-position: -128px -160px; }\n .cmb_element .ui-icon-volume-on { background-position: -144px -160px; }\n .cmb_element .ui-icon-power { background-position: 0 -176px; }\n .cmb_element .ui-icon-signal-diag { background-position: -16px -176px; }\n .cmb_element .ui-icon-signal { background-position: -32px -176px; }\n .cmb_element .ui-icon-battery-0 { background-position: -48px -176px; }\n .cmb_element .ui-icon-battery-1 { background-position: -64px -176px; }\n .cmb_element .ui-icon-battery-2 { background-position: -80px -176px; }\n .cmb_element .ui-icon-battery-3 { background-position: -96px -176px; }\n .cmb_element .ui-icon-circle-plus { background-position: 0 -192px; }\n .cmb_element .ui-icon-circle-minus { background-position: -16px -192px; }\n .cmb_element .ui-icon-circle-close { background-position: -32px -192px; }\n .cmb_element .ui-icon-circle-triangle-e { background-position: -48px -192px; }\n .cmb_element .ui-icon-circle-triangle-s { background-position: -64px -192px; }\n .cmb_element .ui-icon-circle-triangle-w { background-position: -80px -192px; }\n .cmb_element .ui-icon-circle-triangle-n { background-position: -96px -192px; }\n .cmb_element .ui-icon-circle-arrow-e { background-position: -112px -192px; }\n .cmb_element .ui-icon-circle-arrow-s { background-position: -128px -192px; }\n .cmb_element .ui-icon-circle-arrow-w { background-position: -144px -192px; }\n .cmb_element .ui-icon-circle-arrow-n { background-position: -160px -192px; }\n .cmb_element .ui-icon-circle-zoomin { background-position: -176px -192px; }\n .cmb_element .ui-icon-circle-zoomout { background-position: -192px -192px; }\n .cmb_element .ui-icon-circle-check { background-position: -208px -192px; }\n .cmb_element .ui-icon-circlesmall-plus { background-position: 0 -208px; }\n .cmb_element .ui-icon-circlesmall-minus { background-position: -16px -208px; }\n .cmb_element .ui-icon-circlesmall-close { background-position: -32px -208px; }\n .cmb_element .ui-icon-squaresmall-plus { background-position: -48px -208px; }\n .cmb_element .ui-icon-squaresmall-minus { background-position: -64px -208px; }\n .cmb_element .ui-icon-squaresmall-close { background-position: -80px -208px; }\n .cmb_element .ui-icon-grip-dotted-vertical { background-position: 0 -224px; }\n .cmb_element .ui-icon-grip-dotted-horizontal { background-position: -16px -224px; }\n .cmb_element .ui-icon-grip-solid-vertical { background-position: -32px -224px; }\n .cmb_element .ui-icon-grip-solid-horizontal { background-position: -48px -224px; }\n .cmb_element .ui-icon-gripsmall-diagonal-se { background-position: -64px -224px; }\n .cmb_element .ui-icon-grip-diagonal-se { background-position: -80px -224px; }\n .cmb_element .ui-corner-all, .cmb_element .ui-corner-top, .cmb_element .ui-corner-left, .cmb_element .ui-corner-tl { -moz-border-radius-topleft: 4px; -webkit-border-top-left-radius: 4px; -khtml-border-top-left-radius: 4px; border-top-left-radius: 4px; }\n .cmb_element .ui-corner-all, .cmb_element .ui-corner-top, .cmb_element .ui-corner-right, .cmb_element .ui-corner-tr { -moz-border-radius-topright: 4px; -webkit-border-top-right-radius: 4px; -khtml-border-top-right-radius: 4px; border-top-right-radius: 4px; }\n .cmb_element .ui-corner-all, .cmb_element .ui-corner-bottom, .cmb_element .ui-corner-left, .cmb_element .ui-corner-bl { -moz-border-radius-bottomleft: 4px; -webkit-border-bottom-left-radius: 4px; -khtml-border-bottom-left-radius: 4px; border-bottom-left-radius: 4px; }\n .cmb_element .ui-corner-all, .cmb_element .ui-corner-bottom, .cmb_element .ui-corner-right, .cmb_element .ui-corner-br { -moz-border-radius-bottomright: 4px; -webkit-border-bottom-right-radius: 4px; -khtml-border-bottom-right-radius: 4px; border-bottom-right-radius: 4px; }\n .cmb_element .ui-widget-overlay { background: #aaaaaa url(images/ui-bg_flat_0_aaaaaa_40x100.png) 50% 50% repeat-x; opacity: .30;filter:Alpha(Opacity=30); }\n .cmb_element .ui-widget-shadow { margin: -8px 0 0 -8px; padding: 8px; background: #aaaaaa url(images/ui-bg_flat_0_aaaaaa_40x100.png) 50% 50% repeat-x; opacity: .30;filter:Alpha(Opacity=30); -moz-border-radius: 8px; -khtml-border-radius: 8px; -webkit-border-radius: 8px; border-radius: 8px; }\n .cmb_element .ui-datepicker { width: 17em; padding: .2em .2em 0; display: none; }\n .cmb_element .ui-datepicker .ui-datepicker-header { position:relative; padding:.2em 0; }\n .cmb_element .ui-datepicker .ui-datepicker-prev, .cmb_element .ui-datepicker .ui-datepicker-next { position:absolute; top: 2px; width: 1.8em; height: 1.8em; }\n .cmb_element .ui-datepicker .ui-datepicker-prev-hover, .cmb_element .ui-datepicker .ui-datepicker-next-hover { top: 1px; }\n .cmb_element .ui-datepicker .ui-datepicker-prev { left:2px; }\n .cmb_element .ui-datepicker .ui-datepicker-next { right:2px; }\n .cmb_element .ui-datepicker .ui-datepicker-prev-hover { left:1px; }\n .cmb_element .ui-datepicker .ui-datepicker-next-hover { right:1px; }\n .cmb_element .ui-datepicker .ui-datepicker-prev span, .cmb_element .ui-datepicker .ui-datepicker-next span { display: block; position: absolute; left: 50%; margin-left: -8px; top: 50%; margin-top: -8px;  }\n .cmb_element .ui-datepicker .ui-datepicker-title { margin: 0 2.3em; line-height: 1.8em; text-align: center; }\n .cmb_element .ui-datepicker .ui-datepicker-title select { font-size:1em; margin:1px 0; }\n .cmb_element .ui-datepicker select.ui-datepicker-month-year {width: 100%;}\n .cmb_element .ui-datepicker select.ui-datepicker-month,\n .cmb_element .ui-datepicker select.ui-datepicker-year { width: 49%;}\n .cmb_element .ui-datepicker table {width: 100%; font-size: .9em; border-collapse: collapse; margin:0 0 .4em; }\n .cmb_element .ui-datepicker th { padding: .7em .3em; text-align: center; font-weight: bold; border: 0;  }\n .cmb_element .ui-datepicker td { border: 0; padding: 1px; }\n .cmb_element .ui-datepicker td span, .cmb_element .ui-datepicker td a { display: block; padding: .2em; text-align: right; text-decoration: none; }\n .cmb_element .ui-datepicker .ui-datepicker-buttonpane { background-image: none; margin: .7em 0 0 0; padding:0 .2em; border-left: 0; border-right: 0; border-bottom: 0; }\n .cmb_element .ui-datepicker .ui-datepicker-buttonpane button { float: right; margin: .5em .2em .4em; cursor: pointer; padding: .2em .6em .3em .6em; width:auto; overflow:visible; }\n .cmb_element .ui-datepicker .ui-datepicker-buttonpane button.ui-datepicker-current { float:left; }\n .cmb_element .ui-datepicker.ui-datepicker-multi { width:auto; }\n .cmb_element .ui-datepicker-multi .ui-datepicker-group { float:left; }\n .cmb_element .ui-datepicker-multi .ui-datepicker-group table { width:95%; margin:0 auto .4em; }\n .cmb_element .ui-datepicker-multi-2 .ui-datepicker-group { width:50%; }\n .cmb_element .ui-datepicker-multi-3 .ui-datepicker-group { width:33.3%; }\n .cmb_element .ui-datepicker-multi-4 .ui-datepicker-group { width:25%; }\n .cmb_element .ui-datepicker-multi .ui-datepicker-group-last .ui-datepicker-header { border-left-width:0; }\n .cmb_element .ui-datepicker-multi .ui-datepicker-group-middle .ui-datepicker-header { border-left-width:0; }\n .cmb_element .ui-datepicker-multi .ui-datepicker-buttonpane { clear:left; }\n .cmb_element .ui-datepicker-row-break { clear:both; width:100%; font-size:0em; }\n .cmb_element .ui-datepicker-rtl { direction: rtl; }\n .cmb_element .ui-datepicker-rtl .ui-datepicker-prev { right: 2px; left: auto; }\n .cmb_element .ui-datepicker-rtl .ui-datepicker-next { left: 2px; right: auto; }\n .cmb_element .ui-datepicker-rtl .ui-datepicker-prev:hover { right: 1px; left: auto; }\n .cmb_element .ui-datepicker-rtl .ui-datepicker-next:hover { left: 1px; right: auto; }\n .cmb_element .ui-datepicker-rtl .ui-datepicker-buttonpane { clear:right; }\n .cmb_element .ui-datepicker-rtl .ui-datepicker-buttonpane button { float: left; }\n .cmb_element .ui-datepicker-rtl .ui-datepicker-buttonpane button.ui-datepicker-current { float:right; }\n .cmb_element .ui-datepicker-rtl .ui-datepicker-group { float:right; }\n .cmb_element .ui-datepicker-rtl .ui-datepicker-group-last .ui-datepicker-header { border-right-width:0; border-left-width:1px; }\n .cmb_element .ui-datepicker-rtl .ui-datepicker-group-middle .ui-datepicker-header { border-right-width:0; border-left-width:1px; }\n .cmb_element .ui-datepicker-cover {\n     display: none; /*sorry for IE5*/\n     display/**/: block; /*sorry for IE5*/\n     position: absolute; /*must have*/\n     z-index: -1; /*must have*/\n     filter: mask(); /*must have*/\n     top: -4px; /*must have*/\n     left: -4px; /*must have*/\n     width: 200px; /*must have*/\n     height: 200px; /*must have*/\n }\n"
        },
        {
          "name": "style.min.css",
          "type": "blob",
          "size": 26.6435546875,
          "content": "table.cmb_metabox{clear:both}.post-new-php table.cmb_metabox .cmb-nested-table td,.post-new-php table.cmb_metabox .repeatable-group th,.post-new-php table.cmb_metabox .repeatable-group:first-of-type,.post-php table.cmb_metabox .cmb-nested-table td,.post-php table.cmb_metabox .repeatable-group th,.post-php table.cmb_metabox .repeatable-group:first-of-type,table.cmb_metabox tbody>tr:first-of-type>td,table.cmb_metabox tbody>tr:first-of-type>th,table.cmb_metabox>tr:first-of-type>td,table.cmb_metabox>tr:first-of-type>th{border:0}.post-new-php table.cmb_metabox .repeatable-group,.post-new-php table.cmb_metabox td,.post-new-php table.cmb_metabox th,.post-php table.cmb_metabox .repeatable-group,.post-php table.cmb_metabox td,.post-php table.cmb_metabox th{border-top:1px solid #E9E9E9}.repeatable-group th{padding:5px}.repeatable-group .shift-rows{text-decoration:none;margin-right:5px;font-size:1.2em}.repeatable-group .cmb_upload_button{float:right}#poststuff .repeatable-group h2{margin:0}.cmb-group-title h4{font-size:1.2em;font-weight:500;border-bottom:1px solid #ddd}.post-new-php table.cmb_metabox th,.post-php table.cmb_metabox th{text-align:right;font-weight:700}.post-new-php table.cmb_metabox table th,.post-php table.cmb_metabox table th{text-align:left}table.cmb_metabox th label{margin-top:5px;display:block}p.cmb_metabox_description{color:#AAA;font-style:italic;margin:2px 0!important}span.cmb_metabox_description{color:#AAA;font-style:italic}table.cmb_metabox input,table.cmb_metabox textarea{font-size:14px;padding:5px}table.cmb_metabox input[type=text],table.cmb_metabox textarea{width:97%}table.cmb_metabox textarea.cmb_textarea_code{font-family:Consolas,Monaco,monospace;line-height:16px}table.cmb_metabox input.cmb_text_small,table.cmb_metabox input.cmb_timepicker{width:100px;margin-right:15px}table.cmb_metabox input.cmb_text_money{width:90px;margin-right:15px}table.cmb_metabox input.cmb_text_medium{width:230px;margin-right:15px}table.cmb_metabox input.cmb_upload_file{width:65%}table.cmb_metabox input.ed_button{padding:2px 4px}table.cmb_metabox li{font-size:14px;margin:1px 0 5px;line-height:16px}table.cmb_metabox ul{padding-top:5px;margin:0}table.cmb_metabox select{font-size:14px;margin-top:3px}table.cmb_metabox input:focus,table.cmb_metabox textarea:focus{background:#fffff8}.cmb_metabox_title{margin:0 0 5px;padding:5px 0 0}.edit-tags-php .cmb_metabox_title,.profile-php .cmb_metabox_title,.user-edit-php .cmb_metabox_title{margin-left:-10px}.cmb-inline ul{padding:4px 0 0}.cmb-inline li{display:inline-block;padding-right:18px}table.cmb_metabox input[type=checkbox],table.cmb_metabox input[type=radio]{margin:0 5px 0 0;padding:0}table.cmb_metabox .mceLayout{border:1px solid #DFDFDF!important}table.cmb_metabox .mceIframeContainer{background:#FFF}table.cmb_metabox .meta_mce{width:97%}table.cmb_metabox .meta_mce textarea{width:100%}table.cmb_metabox .cmb_media_status{margin:10px 0 0}table.cmb_metabox .cmb_media_status .img_status{clear:none;float:left;display:inline-block;margin-right:10px;width:auto}table.cmb_metabox .cmb-type-file_list .cmb_media_status .img_status{clear:none;float:left;margin-right:10px;width:auto}table.cmb_metabox .cmb_media_status .embed_status,table.cmb_metabox .cmb_media_status .img_status{position:relative}table.cmb_metabox .cmb_media_status .embed_status,table.cmb_metabox .cmb_media_status .img_status img{border:1px solid #DFDFDF;background:#FAFAFA;max-width:350px;padding:5px;-moz-border-radius:2px;border-radius:2px}table.cmb_metabox .cmb_media_status .embed_status{float:left;max-width:800px}table.cmb_metabox .cmb_media_status .embed_status .cmb_remove_file_button,table.cmb_metabox .cmb_media_status .img_status .cmb_remove_file_button{text-indent:-9999px;background:url(images/ico-delete.png);width:16px;height:16px;position:absolute;top:-5px;left:-5px}table.cmb_metabox .attach_list li{clear:both;display:inline-block;margin-bottom:25px;width:100%}table.cmb_metabox .attach_list li img{float:left;margin-right:10px}#side-sortables table.cmb_metabox input[type=text],.inner-sidebar table.cmb_metabox input[type=text],table.cmb_metabox textarea{width:95%}#side-sortables table.cmb_metabox .cmb_media_status .embed_status img,#side-sortables table.cmb_metabox .cmb_media_status .img_status img,.inner-sidebar table.cmb_metabox .cmb_media_status .embed_status img,.inner-sidebar table.cmb_metabox .cmb_media_status .img_status img{width:90%}#side-sortables table.cmb_metabox label,.inner-sidebar table.cmb_metabox label{display:block;font-weight:700;padding:0 0 5px}#side-sortables table.cmb_metabox .cmb_list label,.inner-sidebar table.cmb_metabox .cmb_list label{display:inline;font-weight:400}#side-sortables table.cmb_metabox .cmb_metabox_description,.inner-sidebar table.cmb_metabox .cmb_metabox_description{display:block;padding:7px 0 0}#side-sortables table.cmb_metabox .cmb_metabox_title,.inner-sidebar table.cmb_metabox .cmb_metabox_title{font-size:1.2em;font-style:italic}.postbox table.cmb_metabox .cmb-spinner{float:left}table.cmb_metabox .wp-color-result,table.cmb_metabox .wp-picker-input-wrap{vertical-align:middle}table.cmb_metabox .wp-color-result,table.cmb_metabox .wp-picker-container{margin:0 10px 0 0}div.time-picker{position:absolute;height:191px;width:6em;overflow:auto;background:#fff;border:1px solid #aaa;z-index:99;margin:0}div.time-picker-12hours{width:8em}div.time-picker ul{list-style-type:none;margin:0;padding:0}div.time-picker li{cursor:pointer;height:10px;font:14px/1 Helvetica,Arial,sans-serif;padding:4px 3px}div.time-picker li.selected{background:#0063CE;color:#fff}.cmb_element .ui-helper-hidden{display:none}.cmb_element .ui-helper-hidden-accessible{position:absolute!important;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px)}.cmb_element .ui-helper-reset{margin:0;padding:0;border:0;outline:0;line-height:1.3;text-decoration:none;font-size:100%;list-style:none}.cmb_element .ui-helper-clearfix:after{content:\".\";display:block;height:0;clear:both;visibility:hidden}* html .ui-helper-clearfix{height:1%}.cmb_element .ui-helper-clearfix{display:block}.cmb_element .ui-helper-zfix{width:100%;height:100%;top:0;left:0;position:absolute;opacity:0;filter:Alpha(Opacity=0)}.cmb_element .ui-state-disabled{cursor:default!important}.cmb_element .ui-icon{display:block;text-indent:-99999px;overflow:hidden;background-repeat:no-repeat}.cmb_element .ui-widget-overlay{position:absolute;top:0;left:0;width:100%;height:100%}.cmb_element .ui-widget{font-family:Verdana,Arial,sans-serif;font-size:1.1em}.cmb_element .ui-widget .ui-widget{font-size:1em}.cmb_element .ui-widget button,.cmb_element .ui-widget input,.cmb_element .ui-widget select,.cmb_element .ui-widget textarea{font-family:Verdana,Arial,sans-serif;font-size:1em}.cmb_element .ui-widget-content{border:1px solid #aaa;background:#fff url(images/ui-bg_flat_75_ffffff_40x100.png) 50% 50% repeat-x;color:#222}.cmb_element .ui-widget-content a{color:#222}.cmb_element .ui-widget-header{border:1px solid #aaa;background:#ccc url(images/ui-bg_highlight-soft_75_cccccc_1x100.png) 50% 50% repeat-x;color:#222;font-weight:700}.cmb_element .ui-widget-header a{color:#222}.cmb_element .ui-state-default,.cmb_element .ui-widget-content .ui-state-default,.cmb_element .ui-widget-header .ui-state-default{border:1px solid #d3d3d3;background:#e6e6e6 url(images/ui-bg_glass_75_e6e6e6_1x400.png) 50% 50% repeat-x;font-weight:400;color:#555}.cmb_element .ui-state-default a,.cmb_element .ui-state-default a:link,.cmb_element .ui-state-default a:visited{color:#555;text-decoration:none}.cmb_element .ui-state-focus,.cmb_element .ui-state-hover,.cmb_element .ui-widget-content .ui-state-focus,.cmb_element .ui-widget-content .ui-state-hover,.cmb_element .ui-widget-header .ui-state-focus,.cmb_element .ui-widget-header .ui-state-hover{border:1px solid #999;background:#dadada url(images/ui-bg_glass_75_dadada_1x400.png) 50% 50% repeat-x;font-weight:400;color:#212121}.cmb_element .ui-state-hover a,.cmb_element .ui-state-hover a:hover{color:#212121;text-decoration:none}.cmb_element .ui-state-active,.cmb_element .ui-widget-content .ui-state-active,.cmb_element .ui-widget-header .ui-state-active{border:1px solid #aaa;background:#fff url(images/ui-bg_glass_65_ffffff_1x400.png) 50% 50% repeat-x;font-weight:400;color:#212121}.cmb_element .ui-state-active a,.cmb_element .ui-state-active a:link,.cmb_element .ui-state-active a:visited{color:#212121;text-decoration:none}.cmb_element .ui-widget :active{outline:0}.cmb_element .ui-state-highlight,.cmb_element .ui-widget-content .ui-state-highlight,.cmb_element .ui-widget-header .ui-state-highlight{border:1px solid #fcefa1;background:#fbf9ee url(images/ui-bg_glass_55_fbf9ee_1x400.png) 50% 50% repeat-x;color:#363636}.cmb_element .ui-state-highlight a,.cmb_element .ui-widget-content .ui-state-highlight a,.ui-widget-header .ui-state-highlight a{color:#363636}.cmb_element .ui-state-error,.cmb_element .ui-widget-content .ui-state-error,.cmb_element .ui-widget-header .ui-state-error{border:1px solid #cd0a0a;background:#fef1ec url(images/ui-bg_glass_95_fef1ec_1x400.png) 50% 50% repeat-x;color:#cd0a0a}.cmb_element .ui-state-error a,.cmb_element .ui-state-error-text,.cmb_element .ui-widget-content .ui-state-error a,.cmb_element .ui-widget-content .ui-state-error-text,.cmb_element .ui-widget-header .ui-state-error a,.cmb_element .ui-widget-header .ui-state-error-text{color:#cd0a0a}.cmb_element .ui-priority-primary,.cmb_element .ui-widget-content .ui-priority-primary,.cmb_element .ui-widget-header .ui-priority-primary{font-weight:700}.cmb_element .ui-priority-secondary,.cmb_element .ui-widget-content .ui-priority-secondary,.ui-widget-header .ui-priority-secondary{opacity:.7;filter:Alpha(Opacity=70);font-weight:400}.cmb_element .ui-state-disabled,.cmb_element .ui-widget-content .ui-state-disabled,.cmb_element .ui-widget-header .ui-state-disabled{opacity:.35;filter:Alpha(Opacity=35);background-image:none}.cmb_element .ui-icon{width:16px;height:16px;background-image:url(images/ui-icons_222222_256x240.png)}.cmb_element .ui-widget-content .ui-icon,.cmb_element .ui-widget-header .ui-icon{background-image:url(images/ui-icons_222222_256x240.png)}.cmb_element .ui-state-default .ui-icon{background-image:url(images/ui-icons_888888_256x240.png)}.cmb_element .ui-state-active .ui-icon,.cmb_element .ui-state-focus .ui-icon,.cmb_element .ui-state-hover .ui-icon{background-image:url(images/ui-icons_454545_256x240.png)}.cmb_element .ui-state-highlight .ui-icon{background-image:url(images/ui-icons_2e83ff_256x240.png)}.cmb_element .ui-state-error .ui-icon,.cmb_element .ui-state-error-text .ui-icon{background-image:url(images/ui-icons_cd0a0a_256x240.png)}.cmb_element .ui-icon-carat-1-n{background-position:0 0}.cmb_element .ui-icon-carat-1-ne{background-position:-16px 0}.cmb_element .ui-icon-carat-1-e{background-position:-32px 0}.cmb_element .ui-icon-carat-1-se{background-position:-48px 0}.cmb_element .ui-icon-carat-1-s{background-position:-64px 0}.cmb_element .ui-icon-carat-1-sw{background-position:-80px 0}.cmb_element .ui-icon-carat-1-w{background-position:-96px 0}.cmb_element .ui-icon-carat-1-nw{background-position:-112px 0}.cmb_element .ui-icon-carat-2-n-s{background-position:-128px 0}.cmb_element .ui-icon-carat-2-e-w{background-position:-144px 0}.cmb_element .ui-icon-triangle-1-n{background-position:0 -16px}.cmb_element .ui-icon-triangle-1-ne{background-position:-16px -16px}.cmb_element .ui-icon-triangle-1-e{background-position:-32px -16px}.cmb_element .ui-icon-triangle-1-se{background-position:-48px -16px}.cmb_element .ui-icon-triangle-1-s{background-position:-64px -16px}.cmb_element .ui-icon-triangle-1-sw{background-position:-80px -16px}.cmb_element .ui-icon-triangle-1-w{background-position:-96px -16px}.cmb_element .ui-icon-triangle-1-nw{background-position:-112px -16px}.cmb_element .ui-icon-triangle-2-n-s{background-position:-128px -16px}.cmb_element .ui-icon-triangle-2-e-w{background-position:-144px -16px}.cmb_element .ui-icon-arrow-1-n{background-position:0 -32px}.cmb_element .ui-icon-arrow-1-ne{background-position:-16px -32px}.cmb_element .ui-icon-arrow-1-e{background-position:-32px -32px}.cmb_element .ui-icon-arrow-1-se{background-position:-48px -32px}.cmb_element .ui-icon-arrow-1-s{background-position:-64px -32px}.cmb_element .ui-icon-arrow-1-sw{background-position:-80px -32px}.cmb_element .ui-icon-arrow-1-w{background-position:-96px -32px}.cmb_element .ui-icon-arrow-1-nw{background-position:-112px -32px}.cmb_element .ui-icon-arrow-2-n-s{background-position:-128px -32px}.cmb_element .ui-icon-arrow-2-ne-sw{background-position:-144px -32px}.cmb_element .ui-icon-arrow-2-e-w{background-position:-160px -32px}.cmb_element .ui-icon-arrow-2-se-nw{background-position:-176px -32px}.cmb_element .ui-icon-arrowstop-1-n{background-position:-192px -32px}.cmb_element .ui-icon-arrowstop-1-e{background-position:-208px -32px}.cmb_element .ui-icon-arrowstop-1-s{background-position:-224px -32px}.cmb_element .ui-icon-arrowstop-1-w{background-position:-240px -32px}.cmb_element .ui-icon-arrowthick-1-n{background-position:0 -48px}.cmb_element .ui-icon-arrowthick-1-ne{background-position:-16px -48px}.cmb_element .ui-icon-arrowthick-1-e{background-position:-32px -48px}.cmb_element .ui-icon-arrowthick-1-se{background-position:-48px -48px}.cmb_element .ui-icon-arrowthick-1-s{background-position:-64px -48px}.cmb_element .ui-icon-arrowthick-1-sw{background-position:-80px -48px}.cmb_element .ui-icon-arrowthick-1-w{background-position:-96px -48px}.cmb_element .ui-icon-arrowthick-1-nw{background-position:-112px -48px}.cmb_element .ui-icon-arrowthick-2-n-s{background-position:-128px -48px}.cmb_element .ui-icon-arrowthick-2-ne-sw{background-position:-144px -48px}.cmb_element .ui-icon-arrowthick-2-e-w{background-position:-160px -48px}.cmb_element .ui-icon-arrowthick-2-se-nw{background-position:-176px -48px}.cmb_element .ui-icon-arrowthickstop-1-n{background-position:-192px -48px}.cmb_element .ui-icon-arrowthickstop-1-e{background-position:-208px -48px}.cmb_element .ui-icon-arrowthickstop-1-s{background-position:-224px -48px}.cmb_element .ui-icon-arrowthickstop-1-w{background-position:-240px -48px}.cmb_element .ui-icon-arrowreturnthick-1-w{background-position:0 -64px}.cmb_element .ui-icon-arrowreturnthick-1-n{background-position:-16px -64px}.cmb_element .ui-icon-arrowreturnthick-1-e{background-position:-32px -64px}.cmb_element .ui-icon-arrowreturnthick-1-s{background-position:-48px -64px}.cmb_element .ui-icon-arrowreturn-1-w{background-position:-64px -64px}.cmb_element .ui-icon-arrowreturn-1-n{background-position:-80px -64px}.cmb_element .ui-icon-arrowreturn-1-e{background-position:-96px -64px}.cmb_element .ui-icon-arrowreturn-1-s{background-position:-112px -64px}.cmb_element .ui-icon-arrowrefresh-1-w{background-position:-128px -64px}.cmb_element .ui-icon-arrowrefresh-1-n{background-position:-144px -64px}.cmb_element .ui-icon-arrowrefresh-1-e{background-position:-160px -64px}.cmb_element .ui-icon-arrowrefresh-1-s{background-position:-176px -64px}.cmb_element .ui-icon-arrow-4{background-position:0 -80px}.cmb_element .ui-icon-arrow-4-diag{background-position:-16px -80px}.cmb_element .ui-icon-extlink{background-position:-32px -80px}.cmb_element .ui-icon-newwin{background-position:-48px -80px}.cmb_element .ui-icon-refresh{background-position:-64px -80px}.cmb_element .ui-icon-shuffle{background-position:-80px -80px}.cmb_element .ui-icon-transfer-e-w{background-position:-96px -80px}.cmb_element .ui-icon-transferthick-e-w{background-position:-112px -80px}.cmb_element .ui-icon-folder-collapsed{background-position:0 -96px}.cmb_element .ui-icon-folder-open{background-position:-16px -96px}.cmb_element .ui-icon-document{background-position:-32px -96px}.cmb_element .ui-icon-document-b{background-position:-48px -96px}.cmb_element .ui-icon-note{background-position:-64px -96px}.cmb_element .ui-icon-mail-closed{background-position:-80px -96px}.cmb_element .ui-icon-mail-open{background-position:-96px -96px}.cmb_element .ui-icon-suitcase{background-position:-112px -96px}.cmb_element .ui-icon-comment{background-position:-128px -96px}.cmb_element .ui-icon-person{background-position:-144px -96px}.cmb_element .ui-icon-print{background-position:-160px -96px}.cmb_element .ui-icon-trash{background-position:-176px -96px}.cmb_element .ui-icon-locked{background-position:-192px -96px}.cmb_element .ui-icon-unlocked{background-position:-208px -96px}.cmb_element .ui-icon-bookmark{background-position:-224px -96px}.cmb_element .ui-icon-tag{background-position:-240px -96px}.cmb_element .ui-icon-home{background-position:0 -112px}.cmb_element .ui-icon-flag{background-position:-16px -112px}.cmb_element .ui-icon-calendar{background-position:-32px -112px}.cmb_element .ui-icon-cart{background-position:-48px -112px}.cmb_element .ui-icon-pencil{background-position:-64px -112px}.cmb_element .ui-icon-clock{background-position:-80px -112px}.cmb_element .ui-icon-disk{background-position:-96px -112px}.cmb_element .ui-icon-calculator{background-position:-112px -112px}.cmb_element .ui-icon-zoomin{background-position:-128px -112px}.cmb_element .ui-icon-zoomout{background-position:-144px -112px}.cmb_element .ui-icon-search{background-position:-160px -112px}.cmb_element .ui-icon-wrench{background-position:-176px -112px}.cmb_element .ui-icon-gear{background-position:-192px -112px}.cmb_element .ui-icon-heart{background-position:-208px -112px}.cmb_element .ui-icon-star{background-position:-224px -112px}.cmb_element .ui-icon-link{background-position:-240px -112px}.cmb_element .ui-icon-cancel{background-position:0 -128px}.cmb_element .ui-icon-plus{background-position:-16px -128px}.cmb_element .ui-icon-plusthick{background-position:-32px -128px}.cmb_element .ui-icon-minus{background-position:-48px -128px}.cmb_element .ui-icon-minusthick{background-position:-64px -128px}.cmb_element .ui-icon-close{background-position:-80px -128px}.cmb_element .ui-icon-closethick{background-position:-96px -128px}.cmb_element .ui-icon-key{background-position:-112px -128px}.cmb_element .ui-icon-lightbulb{background-position:-128px -128px}.cmb_element .ui-icon-scissors{background-position:-144px -128px}.cmb_element .ui-icon-clipboard{background-position:-160px -128px}.cmb_element .ui-icon-copy{background-position:-176px -128px}.cmb_element .ui-icon-contact{background-position:-192px -128px}.cmb_element .ui-icon-image{background-position:-208px -128px}.cmb_element .ui-icon-video{background-position:-224px -128px}.cmb_element .ui-icon-script{background-position:-240px -128px}.cmb_element .ui-icon-alert{background-position:0 -144px}.cmb_element .ui-icon-info{background-position:-16px -144px}.cmb_element .ui-icon-notice{background-position:-32px -144px}.cmb_element .ui-icon-help{background-position:-48px -144px}.cmb_element .ui-icon-check{background-position:-64px -144px}.cmb_element .ui-icon-bullet{background-position:-80px -144px}.cmb_element .ui-icon-radio-off{background-position:-96px -144px}.cmb_element .ui-icon-radio-on{background-position:-112px -144px}.cmb_element .ui-icon-pin-w{background-position:-128px -144px}.cmb_element .ui-icon-pin-s{background-position:-144px -144px}.cmb_element .ui-icon-play{background-position:0 -160px}.cmb_element .ui-icon-pause{background-position:-16px -160px}.cmb_element .ui-icon-seek-next{background-position:-32px -160px}.cmb_element .ui-icon-seek-prev{background-position:-48px -160px}.cmb_element .ui-icon-seek-end{background-position:-64px -160px}.cmb_element .ui-icon-seek-first,.cmb_element .ui-icon-seek-start{background-position:-80px -160px}.cmb_element .ui-icon-stop{background-position:-96px -160px}.cmb_element .ui-icon-eject{background-position:-112px -160px}.cmb_element .ui-icon-volume-off{background-position:-128px -160px}.cmb_element .ui-icon-volume-on{background-position:-144px -160px}.cmb_element .ui-icon-power{background-position:0 -176px}.cmb_element .ui-icon-signal-diag{background-position:-16px -176px}.cmb_element .ui-icon-signal{background-position:-32px -176px}.cmb_element .ui-icon-battery-0{background-position:-48px -176px}.cmb_element .ui-icon-battery-1{background-position:-64px -176px}.cmb_element .ui-icon-battery-2{background-position:-80px -176px}.cmb_element .ui-icon-battery-3{background-position:-96px -176px}.cmb_element .ui-icon-circle-plus{background-position:0 -192px}.cmb_element .ui-icon-circle-minus{background-position:-16px -192px}.cmb_element .ui-icon-circle-close{background-position:-32px -192px}.cmb_element .ui-icon-circle-triangle-e{background-position:-48px -192px}.cmb_element .ui-icon-circle-triangle-s{background-position:-64px -192px}.cmb_element .ui-icon-circle-triangle-w{background-position:-80px -192px}.cmb_element .ui-icon-circle-triangle-n{background-position:-96px -192px}.cmb_element .ui-icon-circle-arrow-e{background-position:-112px -192px}.cmb_element .ui-icon-circle-arrow-s{background-position:-128px -192px}.cmb_element .ui-icon-circle-arrow-w{background-position:-144px -192px}.cmb_element .ui-icon-circle-arrow-n{background-position:-160px -192px}.cmb_element .ui-icon-circle-zoomin{background-position:-176px -192px}.cmb_element .ui-icon-circle-zoomout{background-position:-192px -192px}.cmb_element .ui-icon-circle-check{background-position:-208px -192px}.cmb_element .ui-icon-circlesmall-plus{background-position:0 -208px}.cmb_element .ui-icon-circlesmall-minus{background-position:-16px -208px}.cmb_element .ui-icon-circlesmall-close{background-position:-32px -208px}.cmb_element .ui-icon-squaresmall-plus{background-position:-48px -208px}.cmb_element .ui-icon-squaresmall-minus{background-position:-64px -208px}.cmb_element .ui-icon-squaresmall-close{background-position:-80px -208px}.cmb_element .ui-icon-grip-dotted-vertical{background-position:0 -224px}.cmb_element .ui-icon-grip-dotted-horizontal{background-position:-16px -224px}.cmb_element .ui-icon-grip-solid-vertical{background-position:-32px -224px}.cmb_element .ui-icon-grip-solid-horizontal{background-position:-48px -224px}.cmb_element .ui-icon-gripsmall-diagonal-se{background-position:-64px -224px}.cmb_element .ui-icon-grip-diagonal-se{background-position:-80px -224px}.cmb_element .ui-corner-all,.cmb_element .ui-corner-left,.cmb_element .ui-corner-tl,.cmb_element .ui-corner-top{-moz-border-radius-topleft:4px;-webkit-border-top-left-radius:4px;-khtml-border-top-left-radius:4px;border-top-left-radius:4px}.cmb_element .ui-corner-all,.cmb_element .ui-corner-right,.cmb_element .ui-corner-top,.cmb_element .ui-corner-tr{-moz-border-radius-topright:4px;-webkit-border-top-right-radius:4px;-khtml-border-top-right-radius:4px;border-top-right-radius:4px}.cmb_element .ui-corner-all,.cmb_element .ui-corner-bl,.cmb_element .ui-corner-bottom,.cmb_element .ui-corner-left{-moz-border-radius-bottomleft:4px;-webkit-border-bottom-left-radius:4px;-khtml-border-bottom-left-radius:4px;border-bottom-left-radius:4px}.cmb_element .ui-corner-all,.cmb_element .ui-corner-bottom,.cmb_element .ui-corner-br,.cmb_element .ui-corner-right{-moz-border-radius-bottomright:4px;-webkit-border-bottom-right-radius:4px;-khtml-border-bottom-right-radius:4px;border-bottom-right-radius:4px}.cmb_element .ui-widget-overlay{background:#aaa url(images/ui-bg_flat_0_aaaaaa_40x100.png) 50% 50% repeat-x;opacity:.3;filter:Alpha(Opacity=30)}.cmb_element .ui-widget-shadow{margin:-8px 0 0 -8px;padding:8px;background:#aaa url(images/ui-bg_flat_0_aaaaaa_40x100.png) 50% 50% repeat-x;opacity:.3;filter:Alpha(Opacity=30);-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}.cmb_element .ui-datepicker{width:17em;padding:.2em .2em 0;display:none}.cmb_element .ui-datepicker .ui-datepicker-header{position:relative;padding:.2em 0}.cmb_element .ui-datepicker .ui-datepicker-next,.cmb_element .ui-datepicker .ui-datepicker-prev{position:absolute;top:2px;width:1.8em;height:1.8em}.cmb_element .ui-datepicker .ui-datepicker-next-hover,.cmb_element .ui-datepicker .ui-datepicker-prev-hover{top:1px}.cmb_element .ui-datepicker .ui-datepicker-prev{left:2px}.cmb_element .ui-datepicker .ui-datepicker-next{right:2px}.cmb_element .ui-datepicker .ui-datepicker-prev-hover{left:1px}.cmb_element .ui-datepicker .ui-datepicker-next-hover{right:1px}.cmb_element .ui-datepicker .ui-datepicker-next span,.cmb_element .ui-datepicker .ui-datepicker-prev span{display:block;position:absolute;left:50%;margin-left:-8px;top:50%;margin-top:-8px}.cmb_element .ui-datepicker .ui-datepicker-title{margin:0 2.3em;line-height:1.8em;text-align:center}.cmb_element .ui-datepicker .ui-datepicker-title select{font-size:1em;margin:1px 0}.cmb_element .ui-datepicker select.ui-datepicker-month-year{width:100%}.cmb_element .ui-datepicker select.ui-datepicker-month,.cmb_element .ui-datepicker select.ui-datepicker-year{width:49%}.cmb_element .ui-datepicker table{width:100%;font-size:.9em;border-collapse:collapse;margin:0 0 .4em}.cmb_element .ui-datepicker th{padding:.7em .3em;text-align:center;font-weight:700;border:0}.cmb_element .ui-datepicker td{border:0;padding:1px}.cmb_element .ui-datepicker td a,.cmb_element .ui-datepicker td span{display:block;padding:.2em;text-align:right;text-decoration:none}.cmb_element .ui-datepicker .ui-datepicker-buttonpane{background-image:none;margin:.7em 0 0;padding:0 .2em;border-left:0;border-right:0;border-bottom:0}.cmb_element .ui-datepicker .ui-datepicker-buttonpane button{float:right;margin:.5em .2em .4em;cursor:pointer;padding:.2em .6em .3em;width:auto;overflow:visible}.cmb_element .ui-datepicker .ui-datepicker-buttonpane button.ui-datepicker-current{float:left}.cmb_element .ui-datepicker.ui-datepicker-multi{width:auto}.cmb_element .ui-datepicker-multi .ui-datepicker-group{float:left}.cmb_element .ui-datepicker-multi .ui-datepicker-group table{width:95%;margin:0 auto .4em}.cmb_element .ui-datepicker-multi-2 .ui-datepicker-group{width:50%}.cmb_element .ui-datepicker-multi-3 .ui-datepicker-group{width:33.3%}.cmb_element .ui-datepicker-multi-4 .ui-datepicker-group{width:25%}.cmb_element .ui-datepicker-multi .ui-datepicker-group-last .ui-datepicker-header,.cmb_element .ui-datepicker-multi .ui-datepicker-group-middle .ui-datepicker-header{border-left-width:0}.cmb_element .ui-datepicker-multi .ui-datepicker-buttonpane{clear:left}.cmb_element .ui-datepicker-row-break{clear:both;width:100%;font-size:0}.cmb_element .ui-datepicker-rtl{direction:rtl}.cmb_element .ui-datepicker-rtl .ui-datepicker-prev{right:2px;left:auto}.cmb_element .ui-datepicker-rtl .ui-datepicker-next{left:2px;right:auto}.cmb_element .ui-datepicker-rtl .ui-datepicker-prev:hover{right:1px;left:auto}.cmb_element .ui-datepicker-rtl .ui-datepicker-next:hover{left:1px;right:auto}.cmb_element .ui-datepicker-rtl .ui-datepicker-buttonpane{clear:right}.cmb_element .ui-datepicker-rtl .ui-datepicker-buttonpane button{float:left}.cmb_element .ui-datepicker-rtl .ui-datepicker-buttonpane button.ui-datepicker-current,.cmb_element .ui-datepicker-rtl .ui-datepicker-group{float:right}.cmb_element .ui-datepicker-rtl .ui-datepicker-group-last .ui-datepicker-header,.cmb_element .ui-datepicker-rtl .ui-datepicker-group-middle .ui-datepicker-header{border-right-width:0;border-left-width:1px}.cmb_element .ui-datepicker-cover{display:none;display:block;position:absolute;z-index:-1;filter:mask();top:-4px;left:-4px;width:200px;height:200px}"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}