{
  "metadata": {
    "timestamp": 1736711764743,
    "page": 13,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kuaifan/dootask",
      "stars": 4812,
      "defaultBranch": "pro",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.21484375,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".env.docker",
          "type": "blob",
          "size": 0.9921875,
          "content": "TIMEZONE=PRC\n\nAPP_NAME=DooTask\nAPP_ENV=local\nAPP_KEY=\nAPP_DEBUG=false\nAPP_SCHEME=auto\nAPP_URL=http://localhost\n\nAPP_ID=\nAPP_IPPR=\nAPP_PORT=2222\nAPP_SSL_PORT=\nAPP_DEV_PORT=\n\nLOG_CHANNEL=stack\nLOG_LEVEL=debug\n\nDB_CONNECTION=mysql\nDB_HOST=\"${APP_IPPR}.5\"\nDB_PORT=3306\nDB_DATABASE=dootask\nDB_USERNAME=dootask\nDB_PASSWORD=123456\n\nDB_ROOT_PASSWORD=\nDB_PREFIX=pre_\n\nBROADCAST_DRIVER=log\nCACHE_DRIVER=redis\nQUEUE_CONNECTION=redis\nSESSION_DRIVER=redis\nSESSION_LIFETIME=120\n\nMEMCACHED_HOST=127.0.0.1\n\nREDIS_HOST=\"${APP_IPPR}.4\"\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n\nMAIL_MAILER=smtp\nMAIL_HOST=mailhog\nMAIL_PORT=1025\nMAIL_USERNAME=null\nMAIL_PASSWORD=null\nMAIL_ENCRYPTION=null\nMAIL_FROM_ADDRESS=null\nMAIL_FROM_NAME=\"${APP_NAME}\"\n\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\nAWS_DEFAULT_REGION=us-east-1\nAWS_BUCKET=\n\nPUSHER_APP_ID=\nPUSHER_APP_KEY=\nPUSHER_APP_SECRET=\nPUSHER_APP_CLUSTER=mt1\n\nMIX_PUSHER_APP_KEY=\"${PUSHER_APP_KEY}\"\nMIX_PUSHER_APP_CLUSTER=\"${PUSHER_APP_CLUSTER}\"\n\nLARAVELS_LISTEN_IP=0.0.0.0\nLARAVELS_LISTEN_PORT=20000\n"
        },
        {
          "name": ".env.example",
          "type": "blob",
          "size": 0.8359375,
          "content": "TIMEZONE=PRC\n\nAPP_NAME=Laravel\nAPP_ENV=local\nAPP_KEY=\nAPP_DEBUG=true\nAPP_SCHEME=auto\nAPP_URL=http://localhost\n\nAPP_PORT=2222\n\nLOG_CHANNEL=stack\nLOG_LEVEL=debug\n\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=laravel\nDB_USERNAME=root\nDB_PASSWORD=\n\nBROADCAST_DRIVER=log\nCACHE_DRIVER=file\nQUEUE_CONNECTION=sync\nSESSION_DRIVER=file\nSESSION_LIFETIME=120\n\nMEMCACHED_HOST=127.0.0.1\n\nREDIS_HOST=127.0.0.1\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n\nMAIL_MAILER=smtp\nMAIL_HOST=mailhog\nMAIL_PORT=1025\nMAIL_USERNAME=null\nMAIL_PASSWORD=null\nMAIL_ENCRYPTION=null\nMAIL_FROM_ADDRESS=null\nMAIL_FROM_NAME=\"${APP_NAME}\"\n\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\nAWS_DEFAULT_REGION=us-east-1\nAWS_BUCKET=\n\nPUSHER_APP_ID=\nPUSHER_APP_KEY=\nPUSHER_APP_SECRET=\nPUSHER_APP_CLUSTER=mt1\n\nMIX_PUSHER_APP_KEY=\"${PUSHER_APP_KEY}\"\nMIX_PUSHER_APP_CLUSTER=\"${PUSHER_APP_CLUSTER}\"\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1083984375,
          "content": "* text=auto\n*.css linguist-vendored\n*.scss linguist-vendored\n*.js linguist-vendored\nCHANGELOG.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3798828125,
          "content": "/node_modules\n/public/hot\n/public/tmp\n/public/summary\n/public/uploads/*\n/public/.well-known\n/public/.user.ini\n/storage/*.key\n/config/LICENSE\n/vendor\n/build\n/tmp\n._*\n.env\n.idea\n.vscode\n.vagrant\n.phpunit.result.cache\nHomestead.json\nHomestead.yaml\nnpm-debug.log\nyarn-error.log\ntest.*\npackage-lock.json\nlaravels-timer-process.pid\n.DS_Store\nvars.yaml\nlaravels.conf\nlaravels.pid\nREADME_LOCAL.md\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.201171875,
          "content": "[submodule \"resources/drawio\"]\n\tpath = resources/drawio\n\turl = https://github.com/jgraph/drawio.git\n[submodule \"resources/mobile\"]\n\tpath = resources/mobile\n\turl = https://github.com/kuaifan/dootask-app.git\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.37109375,
          "content": "# This configuration file was automatically generated by Gitpod.\n# Please adjust to your needs (see https://www.gitpod.io/docs/config-gitpod-file)\n# and commit this file to your remote git repository to share the goodness with others.\n\ntasks:\n  - init: sudo ./cmd install\n    command: ./cmd dev\n\nports:\n  - port: 2222\n    visibility: public\n  - port: 22222\n    visibility: public\n"
        },
        {
          "name": ".prefetch",
          "type": "blob",
          "size": 5.548828125,
          "content": "office/web-apps/apps/api/documents/api.js?hash={version}\n\noffice/{path}/fonts/000\noffice/{path}/fonts/001\noffice/{path}/fonts/002\noffice/{path}/fonts/020\noffice/{path}/fonts/022\noffice/{path}/fonts/023\noffice/{path}/fonts/024\noffice/{path}/fonts/027\noffice/{path}/fonts/028\noffice/{path}/fonts/029\noffice/{path}/fonts/030\noffice/{path}/fonts/036\noffice/{path}/fonts/037\noffice/{path}/fonts/038\noffice/{path}/fonts/039\noffice/{path}/fonts/050\noffice/{path}/fonts/051\noffice/{path}/fonts/052\noffice/{path}/fonts/053\noffice/{path}/fonts/058\noffice/{path}/fonts/059\noffice/{path}/fonts/060\noffice/{path}/fonts/061\noffice/{path}/fonts/062\noffice/{path}/fonts/063\noffice/{path}/fonts/064\noffice/{path}/fonts/065\noffice/{path}/fonts/066\noffice/{path}/fonts/067\noffice/{path}/fonts/068\noffice/{path}/fonts/069\noffice/{path}/fonts/070\noffice/{path}/fonts/071\noffice/{path}/fonts/072\noffice/{path}/fonts/073\noffice/{path}/fonts/074\noffice/{path}/fonts/075\noffice/{path}/fonts/076\noffice/{path}/fonts/077\noffice/{path}/fonts/078\noffice/{path}/fonts/079\noffice/{path}/fonts/080\noffice/{path}/fonts/081\noffice/{path}/fonts/086\noffice/{path}/fonts/091\noffice/{path}/fonts/092\noffice/{path}/fonts/093\noffice/{path}/fonts/094\noffice/{path}/fonts/095\noffice/{path}/fonts/096\noffice/{path}/fonts/097\noffice/{path}/fonts/098\noffice/{path}/fonts/099\noffice/{path}/fonts/100\noffice/{path}/fonts/101\noffice/{path}/fonts/102\noffice/{path}/fonts/103\noffice/{path}/fonts/131\noffice/{path}/fonts/132\noffice/{path}/fonts/133\noffice/{path}/fonts/134\noffice/{path}/fonts/135\noffice/{path}/fonts/136\noffice/{path}/fonts/137\noffice/{path}/fonts/138\noffice/{path}/fonts/139\noffice/{path}/fonts/140\noffice/{path}/fonts/141\noffice/{path}/fonts/142\noffice/{path}/fonts/143\noffice/{path}/fonts/145\noffice/{path}/fonts/147\noffice/{path}/fonts/152\noffice/{path}/fonts/154\noffice/{path}/fonts/177\noffice/{path}/fonts/178\noffice/{path}/fonts/179\noffice/{path}/fonts/180\noffice/{path}/fonts/181\noffice/{path}/fonts/182\noffice/{path}/fonts/183\noffice/{path}/fonts/184\noffice/{path}/fonts/185\noffice/{path}/fonts/186\noffice/{path}/fonts/187\noffice/{path}/fonts/188\noffice/{path}/fonts/189\noffice/{path}/fonts/190\noffice/{path}/fonts/191\noffice/{path}/fonts/192\noffice/{path}/fonts/193\noffice/{path}/fonts/198\noffice/{path}/fonts/199\noffice/{path}/fonts/200\noffice/{path}/fonts/201\noffice/{path}/fonts/202\noffice/{path}/fonts/203\noffice/{path}/fonts/204\noffice/{path}/fonts/205\noffice/{path}/fonts/206\noffice/{path}/fonts/207\noffice/{path}/fonts/208\noffice/{path}/fonts/209\noffice/{path}/fonts/210\noffice/{path}/fonts/211\noffice/{path}/fonts/212\noffice/{path}/fonts/214\noffice/{path}/fonts/215\noffice/{path}/fonts/216\noffice/{path}/fonts/217\noffice/{path}/sdkjs/cell/sdk-all-min.js\noffice/{path}/sdkjs/cell/sdk-all.js\noffice/{path}/sdkjs/common/AllFonts.js\noffice/{path}/sdkjs/common/AllFonts.js\noffice/{path}/sdkjs/common/AllFonts.js\noffice/{path}/sdkjs/common/Charts/ChartStyles.js\noffice/{path}/sdkjs/common/Charts/ChartStyles.js\noffice/{path}/sdkjs/common/Charts/ChartStyles.js\noffice/{path}/sdkjs/common/Images/fonts_thumbnail_ea@2x.png.bin\noffice/{path}/sdkjs/common/Images/fonts_thumbnail_ea@2x.png.bin\noffice/{path}/sdkjs/common/Images/fonts_thumbnail_ea@2x.png.bin\noffice/{path}/sdkjs/common/libfont/engine/fonts.js\noffice/{path}/sdkjs/common/libfont/engine/fonts.js\noffice/{path}/sdkjs/common/libfont/engine/fonts.js\noffice/{path}/sdkjs/common/libfont/engine/fonts.wasm\noffice/{path}/sdkjs/common/libfont/engine/fonts.wasm\noffice/{path}/sdkjs/common/libfont/engine/fonts.wasm\noffice/{path}/sdkjs/slide/sdk-all-min.js\noffice/{path}/sdkjs/slide/sdk-all.js\noffice/{path}/sdkjs/word/sdk-all-min.js\noffice/{path}/sdkjs/word/sdk-all.js\noffice/{path}/web-apps/apps/documenteditor/main/app.js\noffice/{path}/web-apps/apps/documenteditor/main/code.js\noffice/{path}/web-apps/apps/documenteditor/main/locale/zh.json\noffice/{path}/web-apps/apps/documenteditor/main/resources/css/app.css\noffice/{path}/web-apps/apps/documenteditor/main/resources/img/iconssmall@2.5x.svg\noffice/{path}/web-apps/apps/presentationeditor/main/app.js\noffice/{path}/web-apps/apps/presentationeditor/main/code.js\noffice/{path}/web-apps/apps/presentationeditor/main/locale/zh.json\noffice/{path}/web-apps/apps/presentationeditor/main/resources/css/app.css\noffice/{path}/web-apps/apps/presentationeditor/main/resources/img/iconsbig@2.5x.svg\noffice/{path}/web-apps/apps/presentationeditor/main/resources/img/iconsbig@2x.png\noffice/{path}/web-apps/apps/presentationeditor/main/resources/img/iconssmall@2.5x.svg\noffice/{path}/web-apps/apps/spreadsheeteditor/main/app.js\noffice/{path}/web-apps/apps/spreadsheeteditor/main/code.js\noffice/{path}/web-apps/apps/spreadsheeteditor/main/locale/zh.json\noffice/{path}/web-apps/apps/spreadsheeteditor/main/resources/css/app.css\noffice/{path}/web-apps/apps/spreadsheeteditor/main/resources/formula-lang/zh_desc.json\noffice/{path}/web-apps/apps/spreadsheeteditor/main/resources/img/iconssmall@2.5x.svg\noffice/{path}/web-apps/apps/spreadsheeteditor/main/resources/img/iconssmall@2x.png\noffice/{path}/web-apps/vendor/xregexp/xregexp-all-min.js\noffice/{path}/web-apps/vendor/xregexp/xregexp-all-min.js\noffice/{path}/web-apps/vendor/xregexp/xregexp-all-min.js\n\ndrawio/webapp/js/app.min.js\ndrawio/webapp/js/extensions.min.js\ndrawio/webapp/js/shapes-14-6-5.min.js\ndrawio/webapp/js/stencils.min.js\ndrawio/webapp/math/es5/core.js\ndrawio/webapp/math/es5/input/asciimath.js\ndrawio/webapp/math/es5/input/tex.js\ndrawio/webapp/math/es5/output/svg.js\ndrawio/webapp/math/es5/output/svg/fonts/tex.js\ndrawio/webapp/styles/grapheditor.css\n\nminder/css/chunk-vendors.fe9c56c6.css\nminder/js/app.aa385de3.js\nminder/js/chunk-vendors.cc7455b8.js\n"
        },
        {
          "name": ".styleci.yml",
          "type": "blob",
          "size": 0.1767578125,
          "content": "php:\n  preset: laravel\n  disabled:\n    - no_unused_imports\n  finder:\n    not-name:\n      - index.php\n      - server.php\njs:\n  finder:\n    not-name:\n      - webpack.mix.js\ncss: true\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 73.2607421875,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n## [0.42.37]\n\n### Bug Fixes\n\n- 部分电脑无法复制的问题\n- 修复任务可见性 - 任务重覆获取, 子任务负责人看不到任务问题\n\n### Performance\n\n- 更新小海豚表情包\n- 优化任务时间冲突提示\n- 优化消息\n- 群聊总人数排除机器人\n\n## [0.42.26]\n\n### Bug Fixes\n\n- 移交账号后工作流的负责人没有更新\n- 全屏预览时深色皮肤反色的情况\n\n### Features\n\n- 替换网页的资源为本地资源\n\n### Performance\n\n- 优化任务面板\n- 优化子任务的可见性\n- 优化客户端\n- 优化会议\n- 优化会员搜索\n- 优化打开会话\n- 优化项目面板任务加载\n- 优化客户端加载\n\n## [0.42.3]\n\n### Performance\n\n- 优化对话阅读状况\n- 优化表情回复\n\n## [0.42.0]\n\n### Bug Fixes\n\n- 桌面端查看表情图片缩略图显示错误\n- 项目面板任务不显示的情况\n- 修复移动任务子任务不跟随的情况\n\n### Performance\n\n- 优化桌面端数据处理\n- 优化资源\n- 优化数据流\n\n## [0.41.93]\n\n### Bug Fixes\n\n- 复制文件权限判断\n\n### Performance\n\n- AI创建任务确认\n- 优化项目面板\n\n## [0.41.84]\n\n### Bug Fixes\n\n- @在线状态不正确\n\n### Performance\n\n- 优化子任务上下文\n- 优化子任务时间调整\n- 优化超长文本信息\n- 记录版本信息\n- 支持更多办公文件格式\n- 请假或外出时取消打卡提醒\n- 图片容错处理\n- 优化全局监听事件\n- 优化数据流消息\n\n## [0.41.64]\n\n### Bug Fixes\n\n- 修复使用AI创建任务顺序错误的问题\n\n## [0.41.55]\n\n### Performance\n\n- 优化媒体播放\n- 优化临时会话的消息推送\n- 优化任务时间显示\n\n## [0.41.45]\n\n### Bug Fixes\n\n- 修复官网-帮助中心图片替换\n- 可见非共享文件夹的情况\n- 审批导致图片显示错误\n- Win子窗口无法激活的情况\n\n### Performance\n\n- Upgrade office\n- 添加项目任务标签功能\n- Upgrade drawio\n- 优化AI创建任务\n- 优化已读数据\n- 优化AI群聊\n- 支持AI在项目群里创建任务\n- 优化AI上下文\n- 优化客户端会议打开速度\n- 支持通过接口发送通知和模板消息\n- 优化仪表盘任务避免重复统计\n- 支持自定义AI个人提示词\n- 优化客户端媒体浏览器\n- 支持自定义上传图片压缩质量\n- 优化与离职账号聊天\n- 优化邮件通知\n- 优化未设置优先级的显示\n- 添加任务模板\n- 项目可自定义任务归档时间\n- 优化快速添加任务\n- 支持通过职位名称搜索成员\n- 会话页面支持查看头像\n- 优化文件列表\n- 更新桌面客户端框架\n- 优化主题变化逻辑\n- 更新 AI 支持更多模型和支持提示词\n\n## [0.40.78]\n\n### Bug Fixes\n\n- 修复退出群组不完全的问题\n- 修复退出还能收到推送的情况\n- 修复账号被禁用之后还能收到推送和邮件\n- 任务首次聊天发表情失败的情况\n- AI聊天缺少最后一句话的情况\n- 文件打包下载\n\n### Performance\n\n- 优化会话成员列表查询\n- 重复添加任务的情况\n- 重复添加任务列表的情况\n- 优化消息样式\n- 优化表情滚动条\n- 优化websocket消息\n- 优化快捷选择\n- 延期任务支持快选时间\n- 优化消息阅读机制\n- 新增文件打包下载权限设置\n- 升级electron框架\n- 优化深色主题\n- 优化深色主题下调整浏览器窗口显示白边的情况\n- 优化表情包资源\n- 优化客户端子窗口\n- 优化项目列表\n- 优化录制语音消息\n- 优化任务内容\n- 优化任务提交添加继续\n- 移动端审批窗口点击人员头像直接进入会话\n- 新增系统别名设置\n\n## [0.40.40]\n\n### Bug Fixes\n\n- 任务内容保存后图片消失的情况\n- 修复上传超大尺寸图片\n\n### Performance\n\n- 优化窗口加载速度\n- 优化国际化\n- 优化图片上传\n- 优化用户在线状态\n- 优化小屏幕登录页\n- 优化本地资源\n- 优化iOS上传图片颠倒的问题\n- 优化桌面端通知图标\n- 优化资源预取\n- 优化emoji表情回复的判断\n- 更新office组件\n- 优化审批功能\n- 优化客户端升级\n- 优化客户端\n- 优化签到错误提示\n- 优化图片选择器\n- 优化邮件通知\n- 修复iOS下载中文名乱码的问题\n\n## [0.39.97]\n\n### Bug Fixes\n\n- IOS16-无法打开定位签到的问题\n\n### Performance\n\n- 优化初始化数据\n- 优化一处定位签到的问题\n- 升级海豚表情包\n- 优化新窗口链接打开逻辑\n- 添加会议机器人快捷菜单\n\n## [0.39.88]\n\n### Bug Fixes\n\n- 翻译聊天内容参数错误\n\n### Performance\n\n- 优化使用默认浏览器打开链接\n- 添加定位签到\n- 优化打开会议\n- 优化打开会话逻辑\n\n## [0.39.73]\n\n### Bug Fixes\n\n- 无法打开项目的情况\n- 搜索特殊字符报错的情况\n\n### Features\n\n- 添加定位签到\n\n### Performance\n\n- 优化从审批点击头像发起会话\n\n## [0.39.66]\n\n### Bug Fixes\n\n- 修复会话内加载待办为空的情况\n\n### Performance\n\n- 图片浏览\n- 优化会话搜索\n- 优化国际化语言\n- 优化消息已读逻辑\n- 优化app新版本提示\n- 优化文字头像\n- 优化修改任务load\n\n## [0.39.52]\n\n### Bug Fixes\n\n- 无法清理数据缓存的情况\n\n### Performance\n\n- 优化预览消息\n- 优化移动端输入法换行\n- 审批消息预览图片\n- 删除冗余字段\n- 优化索引\n- 优化国际化语言\n- 优化会话查询\n\n## [0.39.39]\n\n### Bug Fixes\n\n- 目录拼错的情况\n- 设置子任务时间主任务出现1970的情况\n- 消息溢出的情况\n\n### Features\n\n- 消息翻译支持切换语言\n\n### Performance\n\n- 优化国际化语言\n- 审批支持点击头像进入私聊\n- 优化删除临时文件\n- 优化缩略图\n\n## [0.39.21]\n\n### Bug Fixes\n\n- 无法设置修改子任务时间的情况\n- 判断广告页逻辑错误\n- 下载页控制台报错处理\n\n### Performance\n\n- 优化长按消息菜单显示逻辑\n- 优化会话全屏输入功能菜单固定下方\n- 优化聊天输入时页面乱滚动的情况\n- 优化导出统计国际化\n- 支持会员选择窗标题省略号点击查看全标题\n- 任务内容加载太久显示load\n- 任务日志显示子任务关联\n- 审批评论图片浏览可滑动连续查看\n- 审批评论优化显示缩略图\n- 任务变化通知加上任务标题\n- 新任务提醒区分协助还是负责\n- 优化审批通知标题\n- 优化推送预览\n- 优化md标题样式\n- 新增查看更新日志\n\n### Styling\n\n- 推广页样式调整\n\n## [0.38.94]\n\n### Performance\n\n- 优化国际化、优化显示\n\n## [0.38.91]\n\n### Bug Fixes\n\n- 周报默认内容已完成工作负责人不显示的情况\n- 无法清除计划时间\n- 选择时间起始不正确的问题\n- 修复iOS日历无法正常显示的情况\n- 签到信息预览错误\n\n### Performance\n\n- 优化人脸签到设置\n- 优化消息搜索速度\n- 优化显示\n- 优化图片压缩\n- 优化cmd命令\n\n## [0.38.73]\n\n### Performance\n\n- 优化显示效果\n\n## [0.38.70]\n\n### Bug Fixes\n\n- 推送失败的情况\n- 导出签到数据快速选择时间\n- 搜索区域无法回车搜索的问题\n- 未领任务提醒机器人无须加入项目\n- 日历中总是显示时间相差一个月\n\n### Documentation\n\n- 更新docker-compose\n\n### Features\n\n- 支持人脸打卡设备\n\n### Performance\n\n- 升级onlyoffice\n- 优化人脸签到功能\n- 优化加载通讯录数量\n- 优化继续添加任务数据处理\n- 优化翻译\n- 更新gpt的一些模型\n- 优化消息组件\n- 优化后端翻译\n- 优化创建任务提示时间冲突的逻辑\n- 人脸打卡配置\n- 签到设置保存\n- 签到设备显示\n- 打卡标签页\n\n## [0.38.27]\n\n### Bug Fixes\n\n- 修复表情回应一处报错\n- 任务到期时间不变颜色\n- 聊天提及内容错位的情况\n- 首次修改任务时间不提示时间冲突的问题\n- 添加任务时不设置时间无须提示任务冲突\n- 负责人修改后不显示在仪表盘的情况\n- 添加任务选择今天时间无效的情况\n- 修复url-token登录异常问题\n\n### Features\n\n- 官网侧边导航按钮新增谷歌分析事件追踪\n\n### Performance\n\n- 优化翻译\n- 优化时间组件\n- 优化日历样式\n- 手机端消息菜单居中\n- 优化数据库外部访问方式\n- 优化消息选择文本\n- 优化表情搜索\n- 任务描述再次点击隐藏菜单\n- 优化工作包括模板\n- 仪表盘任务列表支持折叠\n- 新增修改任务时间权限\n- 优化子任务读取失败\n\n## [0.37.98]\n\n### Bug Fixes\n\n- 修复任务可见性为非项目人员时项目负责人不可见的bug\n- 修改谷歌分析以及谷歌推广文件命名\n- 修改谷歌分析代码\n- 删除打印\n- 修改关于我们页面公司介绍文案\n\n### Features\n\n- 网页右下角导航改为点击显示以及手机端点击拨打电话直接拨号\n- 更改审批版本\n- 官网新增谷歌分析代码\n- 页面新增谷歌分析\n\n### Performance\n\n- 1.优化审批流程-审批人审核过后自动通过  2. 优化审批评论图片可以左右滑动查看\n\n## [0.37.76]\n\n### Bug Fixes\n\n- 无法下载大文件\n- 修改关于我们页面公司介绍文案\n\n### Performance\n\n- 优化聊天视频预览\n- 优化打包下载\n- 支持上传mov、webm视频\n\n## [0.37.71]\n\n### Bug Fixes\n\n- 切换对话之后无法通过右键@\n\n### Performance\n\n- 通讯录菜单添加会议\n- 优化文件里预览图片\n- 优化消息描述\n\n## [0.37.65]\n\n### Features\n\n- 操作人员离职对okr的移交处理\n\n## [0.37.62]\n\n### Bug Fixes\n\n- 如果项目没有流程，无法选择移动后的状态，也没办法确定移动\n\n### Performance\n\n- 优化视频播放\n- 新增通讯录菜单\n- 优化快捷创建群组\n- 优化回复消息自动@逻辑\n- 甘特图兼容移动端\n\n## [0.37.50]\n\n### Bug Fixes\n\n- 更新可见性后仍存在对话会话列表\n- 消息输入框回复冲突\n\n### Features\n\n- 更新approve容器\n- 添加智谱清言机器人\n\n### Performance\n\n- 团队管理选择离职时根据离职时间排序\n- 移动端支持快速编辑描述选择\n- 优化离职数据移交\n- 优化举报功能\n- 优化网络重连后会话数据逻辑\n- 优化甘特图移动端交互\n- 优化md编辑器\n\n## [0.37.32]\n\n### Performance\n\n- 优化查看任务附件菜单\n- 独立窗口未激活阅读逻辑\n- 新消息在会话列表时间与消息里不一致\n- 优化Android点击发送按钮效果\n- 支持修改消息待办\n- 延期任务时间支持按天\n- 优化待办消息样式\n- 优化移动端子任务列表显示\n- 语音消息转文字\n- 更新语音消息插件\n- 优化设置样式\n\n## [0.37.17]\n\n### Bug Fixes\n\n- 修复官网帮助中心英文页面头部导航缺失问题\n- 安装系统部分情况没有数据\n- 修复举报样式错乱\n\n### Features\n\n- 语音消息未阅读红点提示\n- 修复移动任务中选完成进行移动没有设置完成时间的bug\n- 新增右侧底部导航\n- 添加举报功能\n\n### Performance\n\n- 优化转发消息数据显示\n- Ipad 发送消息后出现页面跳动的情况\n- 仪表盘隐藏未到开始时间的任务\n- 优化查看任务修改历史\n- 优化聊天工具栏样式\n- 优化更新聊天中的待办\n- 优化图标功能提示\n- 审批和任务通知优化\n- 优化按钮没有对应类型，控制台报错\n\n## [0.36.97]\n\n### Bug Fixes\n\n- 任务描述保存图片失败\n\n### Performance\n\n- 转发消息至群聊时支持@留言\n- 自动发布Android\n\n## [0.36.91]\n\n### Bug Fixes\n\n- 上一版本导致的无法@\n\n### Performance\n\n- 优化代码\n- 优化查看文件历史\n- 支持查看任务描述修改历史\n- 任务描述支持清单\n\n## [0.36.84]\n\n### Bug Fixes\n\n- 修复关闭侧边回复窗口导致会话不正常的情况\n\n### Performance\n\n- 消息内容支持待办列表\n- 优化自动识别发送消息类型\n- 聊天输入框粘贴格式优化\n- 优化网络错误提示\n\n## [0.36.78]\n\n### Bug Fixes\n\n- 解决 Unable to preventDefault inside passive event listener 报错\n- 截图粘贴出现两张图的情况\n- 聊天输入中文过程跟placeholder内容叠加的问题\n\n## [0.36.75]\n\n### Bug Fixes\n\n- Added non-passive event listener to a scroll-blocking 'touchstart' event\n\n### Performance\n\n- 下载pdf使用自带浏览器\n- 优化消息加载中效果\n- 审批内容禁止转发\n- 滑动快捷表情选择\n- 优化聊天输入框\n- Update chat editor\n- 优化机器人回复\n- 优化android体验\n\n## [0.36.60]\n\n### Performance\n\n- 优化使用默认浏览器打开规则\n- 优化聊天图片上传\n- 临时帐号别名\n- Tab icon load error\n- 优化会议\n- 创建会议不需要加入机器人\n- 暗黑模式下窗口背景色兼容问题\n- 优化网络检查\n- 客户端会议优化\n\n## [0.36.49]\n\n### Performance\n\n- 优化会议室\n\n## [0.36.44]\n\n### Bug Fixes\n\n- 部分情况出现注册失败\n- 最小化阅读窗口新建窗口不自动激活\n- 独立窗口不更新消息\n\n### Performance\n\n- 优化数据读取机制\n- 优化缓存规则\n- 优化完成待办数据推送\n- 评论审批图片和投票深色按钮\n\n## [0.36.36]\n\n### Bug Fixes\n\n- 修改回复、转发消息后引用的部分消失\n\n### Performance\n\n- 优化任务日志内容\n- 查看版本免请求接口\n- 添加任务时选择任务位置内容溢出\n- 消息支持style\n- 回复消息列表隐藏顶部loading\n- 支持FCM推送\n- 设置华为推送自分类\n- 优化添加任务可见性点击效果\n\n## [0.36.26]\n\n### Bug Fixes\n\n- 关闭文件后无法再次打开\n\n### Performance\n\n- 优化数据结构\n- 接龙优化为清空内容默认删除\n- 支持取消发送中的消息\n- 1. 强化接龙接口本地时间戳问题   2. 接龙消息点展开按钮后做缓存处理\n\n## [0.36.15]\n\n### Bug Fixes\n\n- 消息太长导致菜单无法正常显示\n- 项目数量不正确的情况\n- 部分未读和待办信息不显示的情况\n- 审批中心修复loadIng效果\n\n### Performance\n\n- 自动识别md格式发送\n- 优化回复、转发消息数据结构\n- 优化iOS端数据读取失败的情况\n- 回复消息时自动@提及\n- 优化会话数据结构\n\n## [0.35.90]\n\n### Bug Fixes\n\n- 子窗口出现重新登录的情况\n\n### Performance\n\n- 聊天文件发送进度\n- 拨打电话确认提示\n- 优化预加载文件\n\n## [0.35.84]\n\n### Bug Fixes\n\n- 回复消息点击到原文无效\n\n### Performance\n\n- 优化接口时间\n- 优化审批对话按钮配色\n\n## [0.35.76]\n\n### Bug Fixes\n\n- 客户端无法打开excel文件\n- 修复投票实名逻辑\n\n### Features\n\n- 升级okr\n\n### Performance\n\n- 优化文件功能按钮\n- 文件上传支持覆盖上传\n- 优化app等比显示\n- 优化发送文件预览\n- 消息发送中禁止右键菜单\n- 部分搜索框图标抖动\n- 优化复制功能\n- 优化pdf文件预览\n- 优化投票接口，加上事务锁\n- 优化接龙接口，加上事务锁\n- 优化转发消息样式\n- 接龙接口-强化排序\n- 审批按钮色微调\n- 统一审批中心的按钮色\n- 转发会议亮色皮肤问题，转发文件宽度铺满\n- 优化app数据交互\n\n### Styling\n\n- 调整代码格式\n\n## [0.35.48]\n\n### Bug Fixes\n\n- 修复搜索偶尔无效的情况\n\n### Features\n\n- 升级okr\n\n### Performance\n\n- 优化文件预览\n- 滑动列表自动隐藏键盘\n- 优化时间格式\n- 适配nodejs 20\n\n## [0.35.40]\n\n### Bug Fixes\n\n- 部分手机出现非正常滚动到底部的情况\n- Dootask官网标题\n- Dootask官网调整\n- 修复导出任务统计没有按创建时间来的bug\n\n### Features\n\n- 新增不显示会话功能\n- 升级okr\n\n### Performance\n\n- 修改消息换行优化\n- 优化预加载资源\n- 优化pdf文件预览\n- 优化签到消息\n- 优化登录\n- 优化安装脚本\n- 优化消息时间格式\n- 优化app功能\n\n## [0.35.20]\n\n### Features\n\n- 发起投票功能添加缓存记录选中效果\n- 导出的签到数据和审批数据换成xlsx，因老版本的xls会出现兼容性问题\n\n### Performance\n\n- 默认映射443端口\n- 优化子窗口\n- 优化发布接口 删除目录的逻辑\n\n## [0.35.10]\n\n### Bug Fixes\n\n- 修改消息导致最后消息改变\n- 显示无关系的子任务、指定成员可见消息推送\n- 调整gemini机器人设置参数\n\n### Performance\n\n- 更新说明文档\n- 优化客户端\n- 默认关闭端到端加密传输\n\n## [0.34.95]\n\n### Bug Fixes\n\n- 调整发送参数逻辑\n- 推送标题存在换行时不显示\n- 修复下载文件大小为0时报错\n- 更改其他版本的链接\n- 修复价格页面样式\n- 发布接口，调整缓存时间为两小时\n- 修复okr定时处理信息不发送\n- 项目已归档，任务面板也没有这三个任务，但是每次新增报告，都会弹任务出来\n- 修改下载页面按钮布局样式\n\n### Features\n\n- 升级okr\n- 优化内置浏览器\n- Gemini机器人添加代理参数\n- 发布接口只保留最近两个版本\n- 官网添加其他版本的按钮\n- 统一表为utf8mb4_unicode_ci\n\n### Performance\n\n- 优化ai机器人\n- Okr和审批优化\n- 优化pdf在线预览\n- 优化客户端打开服务器链接\n- 签到设置，有些客户服务器安全体系会拦截 curl -sSL 关键字，优化为cmd不传值\n- 签到设置，有些客户服务器安全体系会拦截 curl -sSL 关键字，优化为base64返回\n\n## [0.34.66]\n\n### Performance\n\n- 升级okr容器\n- 新增禁止私聊、群聊功能\n- 更换笑话和鸡汤接口\n\n## [0.34.59]\n\n### Bug Fixes\n\n- 部分机型首次打开聊天窗口不显示聊天记录的问题\n\n### Performance\n\n- 修复一些问题\n- IOS打开键盘时看不见通知的情况\n- 优化系统参数\n- 优化菜单显示位置\n- 优化获取最近消息\n- 优化请求时间\n- 优化触摸长按和右键菜单共存\n\n## [0.34.46]\n\n### Bug Fixes\n\n- 重复通知\n- 修复投票进度的算法\n\n### Performance\n\n- 优化发送消息接口\n- 优化搜索提示\n- 优化消息列表\n- 优化消息保存覆盖\n- 优化快捷表情发送消息时关闭延迟的问题\n- 升级okr\n\n## [0.34.28]\n\n### Features\n\n- 更新okr\n- 添加年度报告接口\n\n### Performance\n\n- 年度报告接口\t - 查询条件优化\n- 升级okr, ai\n- 年度汇报接口返回用户头像\n- 年度报告接口\t - 增加用户信息字段返回\n- 去掉未使用的引用\n- 优化滑动返回动画效果\n- 消息置顶滚动恢复\n- 优化消息Load效果\n\n## [0.33.98]\n\n### Bug Fixes\n\n- 消息阅读回馈\n\n### Performance\n\n- 消息首次加载数据优化\n- 优化打包下载\n\n## [0.33.91]\n\n### Bug Fixes\n\n- 修复置顶人员\n- 修复高危bug\n- 1.修复可见效数据取值，2.修复设置可见效指定人员不成功\n\n### Performance\n\n- 优化打包下载\n- 去掉无用引用\n- 优化报告未读接口\n- 优化图片显示\n- 优化代码\n- 代码整理\n- 优化待审批流程数量接口\n- 代码优化\n- 优化未读消息提示\n- 优化预览消息\n- 优化缓存数据\n- 任务可见性用户 - 分表优化\n- 代码命名优化\n- 移动任务后，对应项目路径也要更改显示\n- 升级okr容器\n- 导出任务统计 - 下载地址换成按钮\n\n## [0.33.58]\n\n### Bug Fixes\n\n- 修复已知问题\n\n### Performance\n\n- 优化会话列表\n\n## [0.33.54]\n\n### Bug Fixes\n\n- 撤回消息不删除消息的情况\n\n### Performance\n\n- 优化录音load效果\n- 优化消息列表\n- 优化应用图标\n- 升级okr容器\n- 优化用户选择器\n- 优化对话列表接口数据\n- 优化未读消息提示动画\n- 优化消息更新机制\n- 优化缓存\n\n## [0.33.41]\n\n### Bug Fixes\n\n- 更新导致的小问题\n\n### Performance\n\n- 优化任务修改\n\n## [0.33.37]\n\n### Bug Fixes\n\n- 更新导致的小问题\n\n## [0.33.34]\n\n### Bug Fixes\n\n- 版本验证有问题，先干掉\n- Android 无法回删输入框内的@(mention)内容\n- Android 长按重复事件\n- 合并修复\n\n### Features\n\n- 消息置顶功能 - 50%\n\n### Performance\n\n- 优化发送消息时闪现2条一样的情况\n- 优化消息首页加载效果\n- 优化Android长按事件\n- 优化输入框自动高度\n- 点击消息页面会发生跳动的问题\n- 优化待办列表\n- 调整任务过多提示范围\n- 优化消息阅读规则\n- Okr版本升级\n- 1.数据库迁移文件修复  2.转发样式优化\n- 兼容okr1.1版本\n- 整体数据库索引和字段类型优化\n- 项目列表数据库查询优化\n\n## [0.32.65]\n\n### Bug Fixes\n\n- 修复头像出现D的情况\n\n### Documentation\n\n- 更新文档\n\n### Performance\n\n- 优化任务列表查询速度\n- 优化消息输入框内选择文本\n- 移动端修改任务详情确认提示\n- 优化发送录音消息抖动\n- 优化录音效果\n- 优化快捷键设置\n\n## [0.32.55]\n\n### Bug Fixes\n\n- 聊天输入框内容为空时仍可以长安发送显示发送菜单\n- 文件页移动端滑动返回失败情况\n- 会员头像显示错乱\n\n### Performance\n\n- 优化输入空换行时的兼容问题\n- 优化设置页面\n- 优化应用中心菜单排序\n- 更新录音插件\n- 更换移动任务图标\n- 优化设置返回跟滑动返回冲突\n- 优化键盘设置\n- 优化清除缓存数据\n- 优化阅读消息列表机制\n- 优化项目页面任务加载速度\n- 代码优化\n\n## [0.32.35]\n\n### Bug Fixes\n\n- 修复重复SSE请求的问题\n- 部分pad设备横版和竖屏反过来\n- 用户选择组件，单选时不需要显示项目\n- 文件主题修复\n- 修复客户端版本更新按钮的显示问题\n- 标注取值bug修复\n- 项目权限 - 100%\n- 修复安装项目报错\n\n### Features\n\n- 新增以下为新消息提示\n- Okr结果分析 - 部门负责人也可以看\n- Okr1.1 兼容开发\n- 未读消息优化\n- 翻译\n- 添加投票功能 - 100%\n- 样式调优\n- 添加投票功能 30%\n- 接龙功能 - 100%\n- 添加接龙\n- 1.任务移动功能优化，2.导航样式优化\n- 新增压缩下载完成后系统机器人提醒\n- 添加一个 @我的 消息标签\n- 转发消息 - 添加单选模式\n- 转发消息 - 添加来源显示\n- 首页改版 - 100%\n- 新增项目任务创建权限功能 - 90%\n- 更换calendar\n- 首页改版\n\n### Performance\n\n- 优化消息阅读逻辑\n- 微应用优化\n- 优化未读消息机制\n- 优化重连时消息列表跳回第一页的情况\n- 优化消息更新太快导致不更新数据的情况\n- 机器人添加清空上下文菜单\n- 优化翻译\n- 发送消息失败时再次编辑改为重新发送\n- 优化通过消息设置待办功能\n- 优化扫一扫登录功能\n- 优化头像\n- 兼容okr1.1版本\n- 接龙和投票的样式优化\n- 逻辑强化\n- 搜索消息时按esc取消搜索\n- 接龙优化\n- 移动设备优化消息输入框菜单\n- 优化消息输入框@所有人暗黑样式\n- 优化@人名换行的情况\n- 样式优化\n- 优化导出任务统计\n- 客户端下载按钮，仪表盘不显示\n- 细节优化\n\n## [0.32.17]\n\n### Bug Fixes\n\n- 修复打包下载问题\n- 1. 修复 windows端  右键发送 是直接发送了，没有出现使用md格式发送  2.其他bug修复\n- 修复统一打包下载命名\n\n### Features\n\n- 添加项目权限功能 - 30%\n\n### Performance\n\n- 审批版本更新\n- Okr 和 审批中心弄一些演示数据\n- 项目邀请页 - 安卓用opne方式打开\n\n## [0.32.9]\n\n### Bug Fixes\n\n- 移动打开分享链接时先关闭聊天窗口\n- 修复未登录时，进入邀请项目的链接会弹出多次登录框的情况\n- 修复进度完成后再次完成\n- 华为手机弹出键盘时出现空白区域的问题\n- 修复错误提示\n- 栏目被删除的时候，已归档任务不受影响\n- 直接拖文件会发送两次的bug修复\n\n### Features\n\n- 邀请加入项目的链接客户端直接打开\n- 新增临时压缩下载文件24小时自动清理\n- 任务加时功能  (模仿可见性的交互，任务延期和修改时间) - 100%\n- 任务加时功能  (模仿可见性的交互，任务延期和修改时间) - 70%\n- 添加功能 - 每天发出本项目未领取任务\n- 添加转移任务到别的项目功能\n- 键盘设置里面，支持设置回车发送还是按键发送\n- 上传文件大小限制\n- 任务标题有换行时聊天引用会失败\n- 文件共享只读禁止下载文件\n- 保存任务详情至文件的方法 添加失败日志\n- 翻译\n- 新增实现文件夹下载以及多文件压缩下载功能\n- 任务可以筛选未设置时间的\n- 临时账号可以主动跟机器人聊天\n\n### Performance\n\n- Office只读模式，隐藏下载按钮\n- 优化实现文件夹下载以及多文件压缩下载功能\n- 机器人设置页面，点点点看不到内容，需要给弹窗看详细内容\n- 文件选中后，移动端页面宽度放不下对应内容\n- 文件选中后，移动端页面宽度放不下对应内容，没有滚动条\n- 压缩下载改名打包下载\n- 复制链接去除主题语言参数\n\n## [0.31.75]\n\n### Bug Fixes\n\n- 思维导图缩放后无法触发手指移动\n\n### Performance\n\n- 新增文心一言模型\n- 补充优化\n- Update documentserver\n- Openid supports gpt-4 model\n\n## [0.31.65]\n\n### Bug Fixes\n\n- 手机下载文件名出现html的情况\n- 桌面客户端内聊天复制图片模糊的情况\n- 桌面客户端截图功能\n\n### Performance\n\n- 标记已读/未读等待效果\n- App内转发没有等待效果\n\n## [0.31.54]\n\n### Performance\n\n- 优化审批信息推送内容（时间、事由）\n\n## [0.31.37]\n\n### Bug Fixes\n\n- Ai return error\n- 修复审批数据导出时间以请假时间为准\n- 修复服务价格页面文字\n\n### Features\n\n- 新增用户审批状态显示\n- 1 新增用户审批状态接口 2 新增审批用户查询条件\n\n## [0.31.5]\n\n### Bug Fixes\n\n- OKR组新增/删除人员传输格式兼容\n- 任务列表更新数量不正确的情况\n\n### Performance\n\n- 优化滚动条导致页面抖动的情况\n\n## [0.30.13]\n\n### Bug Fixes\n\n- 消息列表过大导致无法查看图片\n- 桌面端drawio版本错误\n- 无法在任务新窗口打开引用的任务\n- 在任务新窗口使用显示文件窗口错误的情况\n- 部分iOS系统按录音时页面闪烁的情况\n- 修改cookie协议页面的标题及点击cookie协议链接跳转新页面\n- Claude 机器人返回内容错误的情况\n- 在文件页面编辑文本时选择已传图片缩列图不显示的情况\n- 桌面客户端提示request错误\n- 客户端无法保存网络文件的情况\n- 可以发送空白md消息的情况\n- 桌面客户端缺失文件\n- 打开工作流设置后无法关闭桌面客户端的问题\n- 打不开已归档任务的情况\n\n### Features\n\n- 新增适用OKR评论不在成员列表内也能显示聊天记录\n- 新增适用默认部门下第1级负责人才能添加部门OKR\n- 新增OKR图标和task图标对等显示\n\n### Performance\n\n- 优化菜单颜色选择\n- 升级客户端框架\n- 优化工作汇报提交表单\n- 优化确认框按钮样式\n- 优化时间冲突提示框\n- 文件页面弹出菜单时误操作优化\n- 优化任务描述编辑器\n- 优化表情快捷提示框\n- 优化移动端编辑任务详情\n- 优化桌面端邮件图片菜单\n- 优化表情关键词匹配\n- 工作流支持关联任务列表自动移动\n- 支持手动打卡\n- 优化数据流推送消息页面滚动\n- 优化再次点击消息定位到未读、待办、灰色未读\n- 优化复制链接\n- 优化可见消息列表\n- 优化动画样式\n- 优化菜单显示、选择复制\n- Ai聊天小概率出现重复推流的情况\n- 适配arm64\n\n## [0.29.21]\n\n### Performance\n\n- 会话消息没有接收人时已读进度优化\n- 优化拖拽文件夹上传提示\n- 深色模式硬件加速\n- 优化Android弹出键盘后聊天内容被覆盖的问题\n\n## [0.29.11]\n\n### Bug Fixes\n\n- 修复用户列表默认排序\n- 1.  审批通知模版 - 按钮白色修复 2.  审批详情样式相等 3.  审批评论 - 0分钟换成刚刚 4.  没有加入部门也能发起 审批申请  5.  审批流程设置页 - 样式调整\n\n### Features\n\n- 新增多部门用户查询\n\n### Performance\n\n- 管理员可以修改系统机器人基本资料\n- 优化深色模式\n- 添加ChatGPT、Claude智能机器人\n- 机器人群聊消息被@到时发送到webhook\n\n## [0.28.91]\n\n### Bug Fixes\n\n- 修复无法从任务消息对话中打开任务详情的情况\n- 去掉test信息\n- 按照dootask启动原始尺寸截取使用说明的图\n- 修改边栏目录滚动效果\n- 官网使用说明的图重新截取更换\n- 优化官网布局与样式\n- 修复下载英文页面跳转\n\n### Features\n\n- 新增创建聊天关联id\n- Okr信息面板新增\"打开OKR\"按钮\n- 新增OKR信息推送\n- 增加获取更新日志接口，更改前端页面默认请求地址\n- 使用说明提交\n\n### Performance\n\n- 优化审批机器人模板消息样式\n- 优化添加任务样式\n- 优化任务默认时间\n- 优化深色模式\n- 任务详情发送文件时防止按esc关闭发送窗口\n- 深色模式下无法扫描登录二维码的情况\n- 优化iOS深色模式\n- Safari支持暗黑模式\n- 优化任务时间冲突提示\n- IOS部分点击事件存在阻塞的情况\n\n## [0.28.36]\n\n### Bug Fixes\n\n- 修改英文页面\n- 导航按钮英文修改\n- 修复导航按钮\n- 前端取消会议屏幕常亮\n\n### Features\n\n- 修改英文的下载单次手写字母大写\n- 链接调整和价格页面调整\n- 立即体验按钮、价格页面等样式调整\n\n### Performance\n\n- 整理官网页面\n- 任务详情页可见性选项默认不显示\n- 避免删除后不关闭任务窗口\n- 添加任务支持自定义协助人\n\n## [0.28.6]\n\n### Bug Fixes\n\n- 全员群禁言仅管理员可发言无效的问题\n- 发送消息失败再次编辑格式丢失的问题\n- 1.修复审核导出缺少 2.修复审核导出小时计算误差\n- 请假表格导出sheeft里名称显示人名\n- 修正初始化可见性人员异常问题\n- 修复审批通过人员姓名显示不正确\n\n### Features\n\n- 官网页面首版提交\n- 优化子任务可见性\n- 负责人、协助人更改可见性推送收回\n- 新增任务可见性操作模块、任务详情子任务样式优化\n\n### Performance\n\n- 审批中心图片压缩优化\n- 修改可见性推送优化\n- 代码优化\n- 冗余代码去除\n- 调整\n\n## [0.27.46]\n\n### Bug Fixes\n\n- 会议窗口恢复不显示的情况\n- 修复已知bug\n- 打开会话面板报错\n- 子任务通知无法打开\n- 修复审批的图片无法查看\n\n### Performance\n\n- 优化移动端任务详情编辑\n- 聊天输入框iOS输入第一个字母出现抖动的情况\n- 优化iOS出现连续加载消息列表的情况\n- 移动端键盘发送\n- 优化会员选择器\n- 优化图片压缩\n- 回复图片显示图片搜略图\n- 会员选择下拉框提示\n\n## [0.27.26]\n\n### Bug Fixes\n\n- 更换图片为png\n- 打开任务出现空白错误的概率\n- 去除没应用的导入\n- 更该文件类型都为 children\n- 分享接口修改\n- 修改分享逻辑\n- Safari 消息输入框焦点溢出的情况\n- 已知bug\n\n### Performance\n\n- 优化富文本输入框\n- 修改开发依赖\n- 网络异常自动重试\n- 触屏设备实体键盘回车发送\n- 消息输入框支持全屏输入\n- 优化大屏移动端长按菜单\n\n## [0.27.1]\n\n### Bug Fixes\n\n- 修复获取聊天列表的接口\n- 添加密码账号长度限制\n- Dootask对接系统分享 - 添加头像返回\n- 兼容加密bug问题处理\n- Dootask对接系统分享\n- 更改默认审核的图片\n\n### Performance\n\n- Scrollbar\n\n## [0.26.86]\n\n### Bug Fixes\n\n- 打开审批设置页面 -  路由修改\n- 更改审批流数据表名\n- 调整统一命名\n- 添加评论功能 - 100%\n- 翻译\n- 调整样式\n\n## [0.26.8]\n\n### Bug Fixes\n\n- IOS16.4之前版本无法进入的问题\n\n## [0.26.6]\n\n### Bug Fixes\n\n- 移动端无法长按录音的问题\n- 终端用户数提示错误\n\n### Features\n\n- 工作流 - 前端bug修复，节点不显示提及名称\n\n### Performance\n\n- Windows 10 以下不支持加密\n- 优化图形验证码方式\n- 兼容iPad键盘\n- 优化移动端兼容\n- 优化iPad Pro页面布局\n\n## [0.25.95]\n\n### Bug Fixes\n\n- 审批流程静态页\n\n### Performance\n\n- 优化移动端部门管理\n- 移动端显示工作报告\n- 导出数据支持搜索离职会员\n- 优化md消息图片预览\n\n## [0.25.84]\n\n### Bug Fixes\n\n- 修改个人头像缓存不更新的情况\n- 无法查看已归档任务\n\n### Performance\n\n- 对webp文件的支持\n- 右键或长按消息发送按钮可选无声发送、Markdown格式发送\n- 系统设置新增图片优化、是否保存网络图片功能\n\n## [0.25.74]\n\n### Performance\n\n- 消息api支持markdown\n- 优化图片消息\n\n## [0.25.68]\n\n### Bug Fixes\n\n- 会议回音\n\n### Performance\n\n- 优化动态加载静态资源\n- 消息接口支持MARKDOWN\n\n## [0.25.60]\n\n### Bug Fixes\n\n- 文件搜索不到根目录的共享\n- 清除缓存导致获取不到数据的问题\n\n### Performance\n\n- 优化会话搜索\n- 通过页面修改机器人资料\n\n## [0.25.52]\n\n### Performance\n\n- WebSocket 数据传输加密\n\n## [0.25.48]\n\n### Bug Fixes\n\n- 无法查看已归档任务\n\n### Features\n\n- 实现非对称加密关键接口\n\n### Performance\n\n- 自动清空文件回收站\n\n## [0.25.42]\n\n### Performance\n\n- 优化任务接口数据逻辑\n\n## [0.25.39]\n\n### Bug Fixes\n\n- 无法浏览表情图片\n\n### Features\n\n- 更多emoji表情回复\n\n### Performance\n\n- 优化录音效果\n- 优化缓存\n- 优化语音播放\n\n## [0.25.11]\n\n### Performance\n\n- 优化输入草稿\n- 搜索会员默认机器人排在最后\n\n## [0.25.7]\n\n### Bug Fixes\n\n- 操作菜单导致的页面错位\n\n## [0.25.0]\n\n### Bug Fixes\n\n- 列表模式下重命名文件名称导致其他文件重命名的情况\n- 桌面端开启子窗口消息数倍数增长的问题\n\n### Performance\n\n- 优化emoji表情分类\n- Android表情输入框跟键盘同时出现的情况\n- 检测文件名称包含特殊字符\n- 通过#发送任务显示项目内已完成任务\n- 优化通讯录数量\n- 优化token到期时间\n- 管理员通讯录显示新帐号\n- 管理员可以移除全员群人员\n- 优化图片浏览\n\n## [0.24.85]\n\n### Bug Fixes\n\n- 安装时机器人也进入全员群\n- 移出任务后还在项目里但看不到任务\n\n### Performance\n\n- 网络不好时发送消息顺序问题\n- 移动端搜索消息支持滑动取消搜索\n- 优化 doo 模块\n- 新增doo模块\n- 新增doo模块\n- 新增doo模块\n- 优化数据删除\n\n## [0.24.58]\n\n### Bug Fixes\n\n- 客户端无法关闭窗口的情况\n- 仅显示我的文件时无法创建文件\n- 重命名别人共享的文件后不见了\n\n### Features\n\n- 搜索会话消息\n\n### Performance\n\n- 新增管理机器人菜单\n- 整理请求外部接口\n- 可以通过ID搜索任务\n- 会员选择框支持搜索拼音\n- 文件消息新增显示文件菜单\n- 优化链接识别\n- 隐藏共享文件改为仅显示我的\n- 文件名称显示两行\n- 子任务允许多个负责人\n- 优化搜索\n- 搜索消息禁止右键\n- 重写项目和会话接口数据\n- 重写更新和删除方法\n- 优化数据同步\n\n## [0.24.30]\n\n### Bug Fixes\n\n- 思维导图快捷键保存\n\n### Features\n\n- 支持发送匿名消息\n\n### Performance\n\n- 优化表情回复\n- 消息快捷发送菜单\n- 优化消息类型分类\n- 文件列表支持隐藏共享文件\n- 群组支持修改头像\n- 优化阅读消息\n- 点击会话消息头像@\n- 通讯录显示部门负责人\n- 加载更多消息safari兼容性\n- 优化签到数据\n- 点击头像进入对话\n- 优化开发执行脚本\n- 网络恢复后重新标记已读失败的信息\n- Dialog loading\n- 优化再次点击抖动\n- 优化ipad表单显示\n- 工作包括周报模板添加下周拟定计划项\n\n## [0.23.86]\n\n### Bug Fixes\n\n- App cross domain\n- 桌面端已知bug\n- 从任务窗口发送聊天输入缓存的问题\n- 桌面端新窗口打开任务无法发起聊天的问题\n- Ldap一处报错\n\n### Performance\n\n- 优化文件分享链接\n- 非工作日不推送签到提醒\n- 设置免打扰后被@也推送通知\n- 任务完成通知流程状态\n- 优化会话列表数据加载\n\n## [0.23.62]\n\n### Bug Fixes\n\n- 没有后缀名无法下载文件的问题\n- 打卡提醒失效\n- 移动端在任务提醒打开任务无法聊天的问题\n\n### Performance\n\n- 优化ws连接机制\n- Office、图表、文本国际化\n- 优化移动端设置\n- 再次点击消息图标闪动未读对话\n- 优化已读标记\n- 移动端优化\n- 消息接口支持@邮箱\n- 支持gitpod\n\n## [0.23.46]\n\n### Bug Fixes\n\n- 编辑消息@丢失的问题\n- 修复已知bug\n\n### Features\n\n- 新增临时帐号功能\n\n### Performance\n\n- 兼容ipad app样式\n- 添加上班签到提醒消息\n- 完善临时帐号权限\n- 设待办快速选择人员\n- 优化消息数量显示\n- 优化阅读消息\n- 对话顶部提示\n- 样式兼容\n- 优化api国际化\n- 优化国际化\n- 优化ws重连规则\n- 优化翻译\n- 优化更新日志生成\n- 优化首页\n\n## [0.22.99]\n\n### Bug Fixes\n\n- 移动端应用内通知标题溢出的问题\n\n### Performance\n\n- 机器人支持webhook\n- 优化输入框功能提示\n- 优化任务修改时间通知\n- 导出所有超期任务\n\n## [0.22.88]\n\n### Bug Fixes\n\n- LDAP Exception\n\n### Features\n\n- 二维码登录\n\n### Performance\n\n- 优化删除数据\n\n## [0.22.84]\n\n### Bug Fixes\n\n- 栏目内添加任务应该直接归属此栏目\n\n### Features\n\n- 新增ldap帐号\n\n### Performance\n\n- 优化会话删除\n- 优化表情输入\n- 优化根据会员筛选任务\n- Drawio文件支持导出pdf文件\n- 优化任务提醒\n- 优化state数据结构\n- 聊天设置待办时可快速选择\n- 完善LDAP\n- 优化移动端（pad）\n- 优化消息列表数据\n\n## [0.22.66]\n\n### Bug Fixes\n\n- 任务首次发消息消失的情况\n\n### Features\n\n- 项目面板支持根据成员筛选任务\n\n### Performance\n\n- 优化消息对话框loading\n- 优化未读消息提示\n- 优化移动端打开会话\n- 回复/引用机器人消息图标移位的问题\n- 会话顶部提示剩余未读消息\n- 角标最大显示999\n\n## [0.22.56]\n\n### Bug Fixes\n\n- 导出签到最多只导出20个的问题\n- 截图快捷键的报错\n- 跨月签到记录不显示的问题\n\n### Features\n\n- 上班打开每日开心/下班打卡心灵鸡汤\n- 上班打卡新增每日开心\n\n### Performance\n\n- 导出签到/任务统计名字新增序号\n- 解决桌面端跨域cookie无法携带的问题\n\n## [0.22.46]\n\n### Bug Fixes\n\n- 跨日/周写工作报告导致的覆盖问题\n\n### Performance\n\n- 优化查看汇报详情loading\n- 我的工作汇报列表显示汇报对象\n- 工作汇报可留空汇报对象\n- 优化签到打卡提醒\n- 升级office套件\n\n## [0.22.40]\n\n### Bug Fixes\n\n- 时间快选\n\n### Performance\n\n- 优化签到通知\n- 任务时间修改提醒\n- 优化导出快速选择\n- 优化修改员工mac地址备注\n- 工作报告模板新增项目名称\n- 优化修改文件名称相同的情况\n- 优化任务APP/邮件提醒\n- 优化主题跟随系统\n- 优化对话列表加载速度\n\n## [0.22.22]\n\n### Bug Fixes\n\n- 聊天页面出现滚动溢出的问题\n- 会话置顶失效\n- 标记已读失败\n- 因机器人首次安装失败\n\n### Features\n\n- 免打扰会话取消邮件通知\n- 免打扰导致推送角标数量不对\n- 消息会话支持免打扰\n\n### Performance\n\n- 签到成功通知\n- 优化引用机器人消息看不到机器人图标的问题\n- 导出签到/任务统计会员数增加到最多可选100个\n- 会员选择支持全选列表\n- 个人签到设置显示最近签到数据\n- 定时清理异步任务记录\n- 聊天消息长大超过5000转文件发送\n\n## [0.22.0]\n\n### Bug Fixes\n\n- 下载文件出现文件损坏的情况\n- 清空已完成上传列表\n\n### Features\n\n- 新增机器人\n\n### Performance\n\n- 机器人支持静默推送\n- 优化签到数据\n\n## [0.21.96]\n\n### Performance\n\n- 优化签到数据结构\n\n## [0.21.90]\n\n### Features\n\n- 签到功能\n\n### Performance\n\n- Mac地址已存在检查\n- 限制截图快捷键\n- 查看我自己的签到数据\n- 优化导出签到\n- Update office manifest\n- 优化打开个人会话速度\n- 优化任务超时提醒文案\n- 优化导出统计\n- 完善签到功能\n- 完善签到功能\n- 优化缓存\n- 优化缓存\n- 缓存迁移\n- 优化本地数据\n\n## [0.21.68]\n\n### Bug Fixes\n\n- 客户端打开出现报错\n- 客户端提交截图空格报错的问题\n- 上传文件没有读取权限\n\n### Features\n\n- 添加考勤接口\n\n### Performance\n\n- 文件右键菜单直接发送至会话\n- 优化删除或归档项目后数量更新\n- 消息搜索支持会员结果\n- 优化设置菜单\n- 取消universal版本编译\n- 优化客户端通知，Mac支持快速回复\n- 群聊天点击头像进入个人对话\n- 优化会话保留\n- 修改搜索成员文案\n- 聊天和文件模块不限制上传类型\n- 消息列表进行搜索时，条件过长，显示的无结果文案无法完全显示\n- 优化全局表格滚动条\n\n## [0.21.42]\n\n### Performance\n\n- 优化滚动条\n- 优化消息数量\n- 优化网络错误提示框\n- 网络错误不清空仪表盘数据\n\n## [0.21.32]\n\n### Performance\n\n- 优化消息&amp;符号\n- 优化移动端网络错误提示\n\n## [0.21.26]\n\n### Bug Fixes\n\n- 回复数量增长错误的问题\n\n### Performance\n\n- 客户端新增截图快捷键\n- 截图dev\n- 优化国际化提升访问速度\n\n## [0.21.15]\n\n### Bug Fixes\n\n- Safari浏览器兼容性\n- 对话窗口js报错\n\n### Performance\n\n- 添加小兔子工作中表情\n\n## [0.21.7]\n\n### Bug Fixes\n\n- 链接消息处理问题\n\n### Performance\n\n- 头像标签部门过长显示优化\n- 聊天使用~符号分享文件\n- 修改任务时间添加备注\n\n## [0.21.0]\n\n### Bug Fixes\n\n- 转让群主后窗口不关闭的问题\n- 通知消息显示UserAvatar\n\n### Performance\n\n- @结果相同时避免刷新\n- 离职移交部门\n- 离职后退出所有群\n- 升级onlyoffice\n\n## [0.20.90]\n\n### Features\n\n- 新增部门功能\n\n### Performance\n\n- 个人群支持转让群主\n- 头像显示部门\n- 支持选择已有群为创建部门群\n- 优化表情发送后搜索关键词逻辑\n- 优化搜索表情\n- 支持搜索在线表情\n- 完善部门群组功能\n- 选择器的优化\n- Task进程添加执行记录\n\n## [0.20.71]\n\n### Bug Fixes\n\n- 未聊天过的任务无法发送聊天表情\n- 离职仍受到推送的问题\n- 任务详情无法右键的问题\n\n### Features\n\n- 聊天支持联想表情\n\n### Performance\n\n- 优化编辑器对象销毁的问题\n\n## [0.20.65]\n\n### Bug Fixes\n\n- Android进入会议没有声音的问题\n- IOS点击发送图片表情偶尔不显示的情况\n\n### Performance\n\n- 优化会议聊天\n- Win通知标题\n- 主窗口可以单独关闭到后台\n- 会议支持最小化窗口\n- 优化录音、优化会议\n\n## [0.20.51]\n\n### Bug Fixes\n\n- 搜索文件选择在上层文件夹中显示时如果已经当前文件夹时没有反应的问题\n- 离职员工仍可以接收到邮件的问题\n- 首次聊天因网络问题聊天记录清空的情况\n- 编译已发送的消息中含有任务信息时的未定义问题\n- 新安装出现无法打开其他人员会话的问题\n\n### Features\n\n- 新增任务过期app推送提醒\n\n### Performance\n\n- 优化客户端图片浏览器\n- 聊天内容图片支持下载\n- 优化隐私政策弹窗\n- 自己可以转为任务协助人员\n- 升级element/view-design\n- 优化任务队列\n\n## [0.20.35]\n\n### Bug Fixes\n\n- Umeng mi push\n\n### Performance\n\n- 升级election框架\n\n## [0.20.23]\n\n### Performance\n\n- 搜索排序\n\n## [0.20.20]\n\n### Features\n\n- 工作报告支持批量标记已读\n\n### Performance\n\n- 操作离职隐藏退出群通知\n- 调整文件表格列表重命名输入框尺寸\n- 群内鼠标悬停成员头像显示聊天按钮\n- 优化消息已读\n- 文件分享链接显示文件名称\n\n## [0.20.12]\n\n### Performance\n\n- 优化通知\n\n## [0.20.5]\n\n### Performance\n\n- 优化聊天页面cpu占用\n\n## [0.20.3]\n\n### Bug Fixes\n\n- 聊天、任务中的md文件预览无法滚动\n- 修改工作报告弹出多次成功提示的问题\n- 安装数据库初始化失败\n- 消息已读\n\n### Features\n\n- Window客户端任务栏闪烁\n\n### Performance\n\n- 升级框架内核\n- 优化消息发送失败\n\n## [0.19.95]\n\n### Bug Fixes\n\n- 无法添加任务的问题\n\n### Features\n\n- 消息粘贴excel内容自动转成图片\n\n### Performance\n\n- 优化发送图片出现空白的情况\n- 消息发送失败支持再次编辑\n- 对话支持拼音搜索\n- 新增注册自动进入全员群开关\n- 移动客户端群消息通知加上群名称\n- 消息菜单新增复制图片、链接功能\n\n## [0.19.75]\n\n### Bug Fixes\n\n- 无法下载转发文件的问题\n- 无法操作离职的问题\n- 编辑@消息的问题\n- 删除账号-提示文案修改\n- 删除账号-提示文案修改\n- 修改邮箱-”发送验证码“倒计时未结束修改\n- 删除账户必填加星号；邮箱验证码可以多发送\n- 修改/删除账号接口无权限问题修改；根据env文件'SYSTEM_SETTING'变量判断是否能修改/删除账号\n\n### Performance\n\n- 按录音时停止正在播放的\n- 优化消息列表\n- 优化移除群成员与打开成员对话冲突的情况\n- 优化国际化\n- 优化删除成员\n- 优化编辑带有图片的消息\n- 支持搜索共享文件\n- 优化发消息时有时候出现空白需要滚动才出现内容的情况\n\n## [0.19.40]\n\n### Bug Fixes\n\n- 音频/视频都不选时无法进入会议的情况\n- 修改邮箱-校验邮箱去掉前后空格\n\n### Features\n\n- 新增删除账户功能\n- 新增修改邮箱功能\n\n## [0.19.26]\n\n### Bug Fixes\n\n- 待办数量与实际的数量不一致\n\n### Performance\n\n- 角标提示待办跟@一起\n- 移动端任务打开聊天按钮优化\n- 支持转发给最近聊天\n- 可以通过群成员点击打开对话\n- 展示消息回应详情\n- 优化通知类消息字符长度\n- 去除通知里的&nbsp;\n\n## [0.19.10]\n\n### Bug Fixes\n\n- 任务列表无法修改优先级的问题\n\n### Performance\n\n- 客户端窗口激活自动获取聊天焦点\n- 个人对话窗口支持拨打电话\n- 新增联系电话\n- [notice|tag|todo]类型的消息静默推送\n- 只给一个月内登录App的帐号推送\n- 显示待办消息数量\n- 待办消息支持指定成员\n- 支持查看待办完成情况\n\n## [0.18.80]\n\n### Bug Fixes\n\n- 任务详情不出现聊天的情况\n\n### Features\n\n- 新增待办消息功能\n\n### Performance\n\n- 优化抖动提示\n- 消息新增#我协助的任务\n\n## [0.18.71]\n\n### Bug Fixes\n\n- 移动文件夹内文件所有者不变的问题\n- 通知消息一直未读的情况\n\n### Performance\n\n- 回复或修改消息发送时立即隐藏引用显示\n- 搜索对话可以搜索远程的对话\n\n## [0.18.58]\n\n### Bug Fixes\n\n- 移动文件所有者错误\n- 无法通过项目点击聊天的情况\n\n### Features\n\n- 新增全员群组\n- 支持编辑已发送的消息\n\n### Performance\n\n- 所有项目列表支持筛选个人项目\n- 调整消息标签位置\n- 添加邮件忽略功能\n\n## [0.18.44]\n\n### Bug Fixes\n\n- 任务聊天出现空白的情况\n- 新建文件不显示的问题\n\n### Features\n\n- 新增消息类型筛选\n- 新增标注消息功能\n\n### Performance\n\n- 优化协助任务的更新\n- 管理员新增修改成员邮箱功能\n\n## [0.18.22]\n\n### Bug Fixes\n\n- 输入框粘贴后出错的问题\n- 任务重复周期\n\n### Performance\n\n- 支持查看回复列表\n- 优化消息分页加载\n- 添加消息回复量\n\n## [0.18.1]\n\n### Features\n\n- 新增任务重复周期\n\n### Performance\n\n- 仪表盘列表新增显示协助的任务\n\n## [0.17.98]\n\n### Bug Fixes\n\n- 任务成员应该禁止退出任务群聊\n- 撤回消息导致未读数错误的问题\n- 部分长按菜单移位的问题\n- 无法点击图片预览的问题\n\n### Features\n\n- 支持通过拼音搜索联系人\n\n### Performance\n\n- 优化@其他成员在线状态\n- 仅(群聊)且(是群主或没有群主)才可以@成员以外的人\n- 优化pdf浏览方式\n- 支持@群聊以外成员\n- 项目群、任务群可添加成员\n\n## [0.17.75]\n\n### Features\n\n- 支持搜索历史消息\n\n### Performance\n\n- 优化文件操作菜单样式\n- 文件浏览支持滑动返回上一个文件夹\n- 桌面客户端出现无法关闭窗口的情况\n- 优化触发回复页面滚动\n- 优化对话详情页\n\n## [0.17.53]\n\n### Features\n\n- 新增回复消息功能\n\n### Performance\n\n- 取消置顶标签\n- 优化移动客户端滚动穿透\n- 优化消息列表\n\n## [0.17.30]\n\n### Performance\n\n- 默认使用文字头像\n- 使用系统浏览器打开新窗口链接\n\n## [0.17.20]\n\n### Bug Fixes\n\n- 员工删除后对话还存在的问题\n\n### Performance\n\n- 优化通讯录刷新机制\n- 通知自动关闭\n- 优化excel菜单\n\n## [0.17.7]\n\n### Performance\n\n- 优化文件重名的问题\n- 优化图片预览缩放\n- 优化预览文件\n- 优化同时加载同个任务\n\n## [0.16.85]\n\n### Bug Fixes\n\n- Win客户端升级签名报错的问题\n- 文件md、text互转时文件格式没有变的问题\n- 移动客户端访问本站链接出现需要登录的情况\n- 不是任务负责人不能通过小窗口发送任务消息的问题\n- 桌面客户端任务独立窗口无法操作任务状态的问题\n\n### Performance\n\n- 优化键盘关闭\n- 优化office右上角菜单按钮重叠的问题\n- 优化录音效果\n- 移动端只读文件\n- 优化任务窗口输入框草稿\n- 头像显示已离职效果\n- 文件文本编辑支持command+s保存\n- 长文本消息的处理\n- 客户端新窗口皮肤不统一的问题\n- 流程图支持搜索远程图标\n\n## [0.16.62]\n\n### Performance\n\n- 升级office插件\n\n## [0.16.60]\n\n### Bug Fixes\n\n- 修复任务窗口无法发送表情的问题\n\n### Performance\n\n- 优化消息已读未读\n- 预览图片尺寸的优化\n- 新窗口打开任务时保持日志显示状态\n- 优化首页加载失败的情况\n- 文字发送太长转成文件发送\n- 任务详情窗口尺寸\n- 优化全局任务操作菜单\n\n## [0.16.22]\n\n### Features\n\n- 新增消息回复表情功能\n\n## [0.15.83]\n\n### Features\n\n- 添加会议功能\n\n### Performance\n\n- 优化移动端图片预览\n- 移动端长按菜单\n\n## [0.15.60]\n\n### Bug Fixes\n\n- 文件共享人数太多内容溢出\n- 聊天内容加载中刷新导致无法再继续加载的情况\n- 对话列表点击任务状态标签无法打开对话\n- 任务弹窗无法发送语音\n- 焦点会超出输入框的情况\n- 获取首字母失败的情况\n\n### Features\n\n- 支持发送录音\n- 对话窗口新增会员最后在线时间\n\n### Performance\n\n- 触摸返回中禁止滚动消息列表\n- 撤回语音消息时停止正在播放\n- 保留粘贴的a标签\n- 支持会话自己\n- 聊天内容链接可点击\n- 优化搜索加载提示\n- 项目-任务状态的数量，实时更新数据\n- 优化聊天窗口样式\n- 移动端聊天窗口返回按钮显示未读信息数\n- 优化加载状态\n- 客户端本地通知\n- 聊天输入框草稿\n- Ws重连后重新获取会员基本信息\n- 聊天窗口样式\n- 优化信息邮件格式\n- 优化移交个人项目\n\n## [0.14.94]\n\n### Bug Fixes\n\n- 邮件通知消息未读对象可能会出错的情况\n\n### Performance\n\n- 优化适配ipad\n- 优化客户端生命周期重连ws机制\n- 优化更新对话列表机制\n- 7天内显示时间m-d H:i\n- 消息也推送给在其它地方登录的自己\n\n## [0.14.72]\n\n### Performance\n\n- 聊天输入框支持粘贴文件\n- 优化UserAvatar组件\n- 上传或发送图片太大时压缩显示\n- 仪表盘任务数量、最近打开的任务\n- 优化消息移动端打开动画效果\n\n## [0.14.62]\n\n### Bug Fixes\n\n- 未读消息邮件头像不显示的问题\n- 修复手机客户端无法预览文件的问题\n- 客户端选择sso登录输入相同地址时提交无反应的问题\n- 推送收到的群组名称为空的情况\n- 任务开始邮件提醒错误的问题\n- Ios键盘遮挡输入框的问题\n\n### Performance\n\n- 未读消息邮件提醒，提醒时把所有未读消息都加上，而不是只提示指定时间的\n- 优化modal内滚动会传播给其他组件的问题\n- 优化任务过多加载卡的情况\n- 点击聊天输入框窗口跳动\n- 支持上传plist格式文件\n- DrawerOverlay 使用 Model\n- 手机客户端登录页优化sso登录样式\n- 优化手机客户端登录页切换主题提示\n- 优化消息列表\n- 优化移动端\n\n## [0.14.8]\n\n### Features\n\n- 邮件通知未读消息\n\n### Performance\n\n- 优化聊天输入框计算样式\n- 优化正则表达式\n\n## [0.13.98]\n\n### Bug Fixes\n\n- 修复共享文件移动到共享文件夹内共享属性错乱的问题\n\n### Performance\n\n- 移交项目和任务时记录被移交对象\n- 共享的文件禁止移动到另一个共享文件夹内\n- 优化自定义sso登录\n\n## [0.13.88]\n\n### Bug Fixes\n\n- 同时删除多个任务负责人或协助人员任务动态显示错误的问题\n- 修复 ETooltip 组件 disabled 取消后错位的问题\n- 添加任务窗口选择其他项目无效的问题\n\n### Performance\n\n- 优化文件历史查看\n- 查看文件修改历史时文本编辑器、图表点击编辑历史窗口不隐藏\n\n## [0.13.78]\n\n### Bug Fixes\n\n- 修复上传文件夹不立即显示的问题\n\n### Performance\n\n- 优化任务详情右键预览图片\n\n## [0.13.74]\n\n### Bug Fixes\n\n- 修复已打开文件需刷新网页才显示最新内容的情况\n\n### Features\n\n- 新增查看文件历史版本\n\n### Performance\n\n- 文件打开保存机制\n- 客户端升级日志\n\n## [0.13.63]\n\n### Bug Fixes\n\n- 修复打开pdf因为文件名内容出错的问题\n\n### Features\n\n- 新增聊天选择内容粗体、斜体、删除线、序号等工具\n\n### Performance\n\n- 发送消息未设置昵称的优化\n- 优化共享文件夹图标\n- 优化重复共享提示\n- 优化聊天窗口群聊已读列表\n- 优化任务窗口\n\n## [0.13.48]\n\n### Performance\n\n- 优化暗黑模式\n- 客户端填写周报后保存关闭窗口\n- 文件浏览保存排序\n\n## [0.13.0]\n\n### Performance\n\n- 指定mariadb:10.7.3解决部分出现初始化数据库失败的情况\n- 上传限制改为1G\n\n## [0.12.95]\n\n### Bug Fixes\n\n- 工作包括编辑内容不正确的问题\n- 会员选择框偶尔出现默认值错误的情况\n- 部分客户端登录页面报错的问题\n- 退出登录仍出现未读数的情况\n\n### Performance\n\n- 搜索后支持快速取消筛选\n- 优化工作汇报的搜索\n- 新增邮件发送测试\n- 优化用户邮箱验证\n- 优化任务到期前后邮件提醒\n- 消息已完成图标布局优化\n- 优化websocket连接机制\n\n## [0.12.77]\n\n### Features\n\n- 客户端新增系统托盘图标\n\n### Performance\n\n- 文件权限提示点击确定返回主目录\n\n## [0.12.66]\n\n### Bug Fixes\n\n- 已完成任务还可以拖动排序的问题\n- 移动端不显示甘特图的问题\n\n### Performance\n\n- 优化聊天窗口显示头像\n- 优化聊天窗口滚动\n- 取消任务群聊发送图片同步到任务附件\n- 优化项目页面聊天窗口\n- 优化网络重连聊天机制\n- 文件查看图片直接弹窗浏览\n- 文件共享成员支持分享链接\n\n## [0.12.40]\n\n### Bug Fixes\n\n- 设置分页10条每页无效的问题\n\n### Performance\n\n- 优化提示此文件夹内已有共享文件夹\n- 支持上传golang文件\n- 文件新增pids（上级ID递归）字段\n\n## [0.12.23]\n\n### Bug Fixes\n\n- 客户端打开不自动登录的问题\n\n### Performance\n\n- 优化一些前端\n\n## [0.12.19]\n\n### Bug Fixes\n\n- 修复新增项目成员无法通过邮箱搜索的问题\n- Public客户端打开空白的情况\n- 所有可搜索列表在非第1页搜索时不返回第1页的问题\n- 查看已发送的工作汇报，汇报对象需横向显示\n\n### Performance\n\n- 优化工作量配色\n- 优化路由重复提示的报错\n\n## [0.12.8]\n\n### Performance\n\n- 任务详细描述右键新增预览图片\n- 优化图片预览，优化与弹窗esc按键冲突的问题\n\n## [0.11.96]\n\n### Bug Fixes\n\n- 项目-任务列表tab优化\n- 项目-任务列表tab修改，甘特图数据优化\n- 项目--任务列表删除主任务后，子任务仍显示问题\n- 项目任务甘特图图标及优化移动逻辑\n- 项目任务列表甘特图鼠标悬停图标或文案时样式变为手指\n- 项目任务列表甘特图去掉'已完成'任务及样式优化\n- 项目--删除任务详情删除前有聊天记录显示异常修改\n- 修改项目任务列表甘特图时长及颜色显示不对问题\n- 官网首页修改\n- 修改图片\n- 首页重写\n\n### Features\n\n- 项目任务新增一个甘特图展示选项\n- 客户端登录，新增工作报告、修改工作报告、查看工作报告，全部直接在新窗口打开\n\n### Performance\n\n- 图片预览使用当前页组件，支持多图\n- 优化工作报告前端\n- 优化甘特图\n- 优化任务列表切换显示\n- 更新icon图标库\n- 已删除任务详情任务描述改为只读\n- 已删除任务操作文案及显示优化\n- 项目--删除任务查看详情页功能\n- 首页兼容暗黑模式及文案和查询优化\n- 优化消息标记已读/未读\n\n## [0.10.30]\n\n### Bug Fixes\n\n- 优化验证邮箱页面文案\n- 修正验证邮箱页面文案\n- 修复自定义SSO自动升级版本出错的问题\n- 添加任务时开始时间和结束时间为同一天可能发生报错\n- 拖动任务列表排序后会自动还原的情况\n- 任务第二次邮件提醒判断错误修改\n- '最近打开任务'数据没有根据用户区分问题修改\n- 去掉调试信息\n\n### Features\n\n- 在项目设置里新增一个“已删除任务”菜单\n- 优化表格分页样式\n- 优化TableAction组件\n- 头像加载失败时显示名称首字\n- 消息右键对话新增：标记已读、标记未读\n- 添加“最近打开的任务”\n\n### Performance\n\n- 修改验证邮件有效期改回24小时\n- 优化邮件设置页面样式\n- 修改验证邮件有效期为10分钟方便测试(验证完后改为24小时)\n- 【邮箱验证】链接过期的提示文案为：链接已失效，请重新登录/注册\n- 任务修改计划时间需要重置任务邮件提醒日志\n- 任务附件过多时仅显示最新50个\n- 消息已读/未读人员优化\n- 消息添加'未读标记'字段\n- 添加任务默认选中自己，如果不选则添加无负责人任务\n- 优化消息未读数\n- 优化置顶后数据请求\n- 优化未读信息数\n- 优化首页仪表盘样式\n- 优化关闭任务独立窗口点击取消后没有自动获取焦点\n- 邮箱验证优化流程提示\n- 任务提醒缩短邮件通知时间区间\n\n## [0.10.21]\n\n### Bug Fixes\n\n- 清空子任务的时间报错闪现的问题\n- 任务提醒时间格式错误修改\n- 任务统计导出完成时间为空时，不应出现实际完成用时\n- 客户端任务独立窗口修改详情后没有同步到主窗口的问题\n- 客户端任务独立窗口无法按command+s保存任务的问题\n- 任务提醒时间区间错误修改\n- 任务列表缺少参数报错修改\n- 导出任务统计修改\n- 登录账号密码错误时提示修改\n\n### Features\n\n- 任务到期提醒开启邮件通知\n\n### Performance\n\n- 项目、消息对话置顶后要滚动到可以看到它的位置\n- 再次点击滚动到未读条目\n- 优化新窗口打开的任务保存机制\n- 优化新消息等列表滚动\n- 完成任务时任务暂时继续显示，直到路由发生改变\n- 优化仪表盘使用sticky方式\n- 邮箱发送失败提示优化\n- 任务提醒时间区间放大，防止定时器出现意外发送不到问题\n- 网络不好连续按回车导致重复添加子任务\n- 优化任务详情数据结构\n- 补全系统设置中的未翻译地方\n- 修改导出报表文案\n\n## [0.10.5]\n\n### Bug Fixes\n\n- Md编辑器出现toc混乱的情况\n- 邮箱验证模板页'你'改为'您'\n- 邮箱设置异常报错修改\n- 报表导出任务没有流程日志判断优化\n- 修复登录页设置下拉显示不全的情况\n- 处理回滚后异常代码\n- 【系统设置】邮件设置提前小时数双向绑定无效问题修改\n\n### Features\n\n- 完成邮箱验证\n- 邮箱验证部分\n- 管理员系统设置新增：新增邮件设置\n\n### Performance\n\n- 优化仪表盘角标数\n- 优化客户端任务详情按command+s保存\n- 优化文件重命名，支持按esc取消编辑\n- 任务详情打开操作菜单时按esc任务窗口隐藏了但是菜单还看见\n- 上传文件名称过程显示错位的问题\n- 退出登录返回登录页而不是注册页\n- 报表导出列及剩余天数优化\n- 网络异常的情况下需提示网络异常而不是系统出错\n- 任务详情当任务倒计时结束时显示\"超期未完成\"标签\n- 优化脚本，支持部分服务器是docker compose命令\n- 优化已读回执\n- 补全任务'测试'状态样式\n- 导出报表调整\n- 倒计时刚到到达0时会显示自定义才继续显示计时，且未显示超时标签\n- 鼠标滑动至仪表盘中的待完成任务卡片时，卡片周围未显示光晕，且未显示为手指样式\n- 优化任务详细描述显示\n- 仪表盘当前激活的卡片不明显优化\n- 置顶样式优化\n\n## [0.9.83]\n\n### Bug Fixes\n\n- 修复无法预览pdf文件\n- 首页360浏览器图片函数摆错修改\n- 无法浏览聊天图片的问题\n- 回滚代码后功能完善\n- 项目列表处于置顶选中状态显示选中样式\n\n### Features\n\n- 导出任务功能\n- 文件支持拖动到列表上传\n\n### Performance\n\n- 记录任务工作流变化\n- 优化修改工作流的过程\n- 优化任务排序\n- 支持nodejs16+\n- 首页判断是否登录优先于判断是否需要启动首页\n- 优化首页判断时间一闪而过问题\n- 添加首页文字翻译\n\n## [0.9.68]\n\n### Bug Fixes\n\n- 登录页重复填写sso地址无法保存的问题\n- 无法移动共享文件夹内创建的文件\n- 客户端无法编辑office文件\n- 客户端无法下载文件\n- 合并异常代码修改\n- 项目、消息置顶样式修改\n- 修复客户端任务新窗口无法修改任务等级\n- 修复邮箱大写报错的问题\n- 项目列表滚动'置顶'框隐藏\n- 【文件】右键多选所有文件复选框显示，取消所有选中消失\n- 消息：列表滚动隐藏'置顶'文案\n- 文件：列表模式右键后已选内容会错乱修复\n- 消息：列表滚动右键Y轴值判断错误修复\n- 消息：列表滚动在任意位置右键菜单错位问题修复\n- 为引入组件报错\n- 【文件】流程图只读接入新组件及删除旧组件引入代码\n\n### Features\n\n- 首页启动设置\n- 项目列表添加置顶功能\n- 支持文本、图表、思维导图下载上传\n\n### Performance\n\n- 文件、聊天文件、任务文件预览优化（支持预览drawio、mind等）\n- 调整消息置顶标识位置\n- 消息列表详情增加'置顶'标识\n- 项目列表置顶优化\n- 【文件】剪切后加'取消剪切'按钮\n- 消息会话右键时隐藏滚动条\n- 页面高度足够时只滚动项目部分\n- 客户端版本更新提示关闭\n- 除了任务状态，任务创建人和协助人权限与负责人的保持一致\n- 议仪表盘添加'待完成任务'选项\n- 创建者及协助人可以修改任务但不能修改任务状态\n- 优化点击右键时选中框缺少右侧线条\n- 客户端修改文件未保存关闭窗口前提示\n- 修改项目及消息置顶样式\n- 任务创建人和协助人可修改任务内容和详情，但不可修改任务状态\n- 修改任务时间日志\n- 任务聊天中发送图片时，回车可确定发送\n- 更新流程图表\n- 【文件】多个选择剪切功能与右键剪切重复，数据处理应该合拼；方格列表默认不显示复选框，右键菜单新增一个多选菜单\n- 优化注册提示\n- 消息列表需支持多个置顶\n\n## [0.8.22]\n\n### Bug Fixes\n\n- 修复复制文件内容为空的问题\n- 流程图预览暗黑模式下看不见文字的问题\n- 【消息】置顶会话在子类tab中排序错误修改\n\n### Features\n\n- 【消息】列表增加点击右键置顶该聊天功能\n\n### Performance\n\n- 没有时间还显示时间倒计时的问题\n- 优化修改任务时间记录\n- 优化文件重命名\n- 主任务归档时同步子任务归档\n- 【注册】校验参数是否合法顺序优化\n- 【消息】列表置顶会话加背景颜色\n- 【消息】列表取消置顶\n\n## [0.8.14]\n\n### Bug Fixes\n\n- 取消（完成状态）变为待测试（改变状态），如果有状态负责人应该把状态负责人加上\n- 【文件】流程图新组件添加缺失图片\n- 【文件】流程图新组件复选框在360浏览器中显示异常修改\n- 已完成子任务还出现时间跳动的情况\n- 【文件】流程图去掉ctr+s提示框\n- 【文件】新版流程图右侧及底部被隐藏问题修改\n\n### Performance\n\n- 会员选择输入框不刷新的情况\n- 未完成状态禁止归档\n- 【文件】流程图新组件添加切换皮肤主题功能\n- 优化iPad兼容\n- 优化右下角、登录页主题设置\n\n## [0.8.2]\n\n### Bug Fixes\n\n- 修复聊天mp4文件无法预览的问题\n\n### Features\n\n- 更新流程图组件\n\n### Performance\n\n- 单条消息最长2000个字符，超过自动分割发送，总最长20000\n- 去掉刷新提示及前端报错\n- 下载、查看任务文件权限改为所有项目成员\n- 任务详细描述取消文件上传\n- 优化任务详情拖动发送文件\n- 优化通知\n\n## [0.7.94]\n\n### Bug Fixes\n\n- 修复文件上传一直出现loading的情况\n- 已存在的任务新添加负责人不出现在任务群聊里\n- 初次安装失败的情况\n- 客户端偶尔出现无法打开文件的情况\n\n### Features\n\n- 添加项目支持默认工作流\n- 新增自定义添加项目时的项目模板\n\n### Performance\n\n- 兼容iPad端\n- 手动切换账号提示“项目不存在或不在成员列表内”的情况\n- 任务详情\n- 该文件版本已经改变了。该页面将被重新加载\n- 点击切换语言一级菜单出现的兼容问题\n- 上传文件夹\n- 团队管理新增身份筛选项\n- 任务文件支持更多格式上传\n\n## [0.7.73]\n\n### Bug Fixes\n\n- 客户端编辑文件不显示协助成员\n- 添加任务时选择任务组无效\n- 工作报告弹窗被遮挡的问题\n- 客户端任务窗口首次聊天失败的问题\n- 文件右键打开失效\n- 修复工作汇报正文被图片撑开页面的问题\n\n### Features\n\n- 文件支持批量移动\n\n### Performance\n\n- 优化项目筛选工作流\n- 优化撤回消息\n- 优化修改工作流未保存关闭提示\n- 查看工作报告图片显示不全的问题\n- 优化UserInput组件\n- 开放文件夹移动功能\n- 优化文件模块用户体验\n- 文件增加取消选择按钮\n\n## [0.7.27]\n\n### Bug Fixes\n\n- 移动端无法上传任务文件的问题\n- 任务中没有聊天记录时，发送图片无法成功\n- 修复消息撤回文字提示在第一条时会被顶部遮住的问题\n- 修复个人对话为空时无法重复打开该对话的问题\n- MacOS客户端首次不加载角标的问题\n- 工作流列表接口用作筛选时不用传多余参数\n\n### Documentation\n\n- 补充消息撤回功能API文档\n\n### Features\n\n- 工作流程负责人新增剔除模式（改变任务负责人并保留操作状态的人员）\n- 文件网格模式支持批量删除文件\n- 文件表格支持批量删除文件\n\n### Performance\n\n- 聊天消息附件支持预览\n- 仪表盘鼠标滑过时间显示完整时间\n- 聊天页面图片尺寸缩小至180px\n- 头像上传图片浏览组件增加空提醒\n- MacOS角标首次不显示的问题\n- 添加任务时如果自己不是任务负责人可选择加入协助人员列表\n- 文件列表模式右键重命名无效\n\n## [0.7.13]\n\n### Bug Fixes\n\n- 主任务负责人无法修改子任务负责人的问题\n- 设置主任务时间跟子任务没有交集时子任务时间改为跟主任务一致\n- 搜索后，点击查看已归档的任务，仍然显示这个搜索框\n- 修复归档任务无法查看日志的问题\n- 动态中点击重置按钮后流程的字体颜色和背景颜色并未正确显示\n- 修复任务负责人选择弹窗不随页面滚动的问题\n- 客户端无法下载聊天文件的问题\n- 修复添加任务变更栏目后无效果的问题\n\n### Features\n\n- 新增文本文件编辑功能\n- 支持文件下载\n- 加入【项目管理】任务列表流程筛选被回滚功能\n- 聊天消息撤回-后端实现\n- 聊天消息撤回-前端实现\n\n### Performance\n\n- 任务群聊中拖拽文件或者照片时并未有确认窗口\n- 待处理时进入动态中点击重置，重置提示中的参数为空，点击确定后，提示流程不存在或者删除\n- 添加子任务时输入框为空，回车时提示的图标错误\n- 上传文件夹应该保持目录结构\n- 支持xmind,rp格式文件上传\n- 注册页面增加密码格式提醒\n- 消息撤回后直接删除消息\n\n## [0.6.97]\n\n### Bug Fixes\n\n- 修改主任务时间时未设置时间的子任务没有同步修改\n- Flow文件路径引用错误导致无法编译的问题\n- 修复工作汇报选择接收人组件在调整窗体大小时发生位移的问题\n- 修复周报点击编辑关闭后再点击\"新建汇报\"按钮导致用户列表无法重新加载的问题\n- 【工作汇报】修复新增今天的周报，提示要覆盖昨天日报的问题\n- 【工作汇报】收到的汇报中，未读时发送人删除掉汇报对象，汇报对象的未读数量仍然未减少\n\n### Features\n\n- 聊天粘贴发送文件、图片时预览确认\n\n### Performance\n\n- 任务详情窗口截止时间24小时倒计时\n- 修改任务或修改项目后同步对话信息\n- 支持查看已归档任务详情\n- 消息列表显示任务基本状态\n- 优化消息对话排序\n- 隐藏无聊天内容的对话\n- 消息页再次点击类型定位到未读消息\n- 调整周报签名的生成方法\n\n## [0.6.80]\n\n### Performance\n\n- 仅客户端或Chrome浏览器支持主题功能\n\n## [0.6.79]\n\n### Bug Fixes\n\n- 【工作报告】新增报告初始化数据不导入已有时间点数据\n- 【工作报告】详情页面前端报错修改\n- 【工作报告】填写内容--汇报类型切换提交提示错误问题\n- 发送图片显示错误\n- 项目负责人还原已经回档的自己不是任务负责人的任务时，无法还原，且会提示错误\n\n### Performance\n\n- 工作报告优化\n- 规范代码\n- 共享文件删除、移动改为仅限所有者或创建者操作\n\n## [0.6.38]\n\n### Bug Fixes\n\n- 无法读取 /www/.env：没有那个文件或目录\n- 最大只能上传64M的问题\n\n### Features\n\n- 添加暗黑模式\n\n### Performance\n\n- 优化安装脚本\n\n## [0.6.31]\n\n### Performance\n\n- 新增工作流初始化数据\n- 优化客户端自动更新\n\n## [0.6.26]\n\n### Bug Fixes\n\n- Websocket获取链接失败\n- 【工作报告】填写'提交'按钮位置被挤压修改\n\n### Features\n\n- 【工作报告】功能\n\n### Performance\n\n- 工作汇报样式\n\n## [0.6.20]\n\n### Bug Fixes\n\n- 查看日历页面部分任务会不见\n\n## [0.6.13]\n\n### Bug Fixes\n\n- 任务流转会出错\n\n### Performance\n\n- 客户端更新提示\n\n## [0.6.6]\n\n### Bug Fixes\n\n- 修复客户端旧版本更新任务出现已完成列表中有状态为“进行中”的情况\n\n### Features\n\n- 工作流程状态支持仅限状态负责人修改\n\n### Performance\n\n- 发送文件ws返回错误地址\n- 优化任务日志的显示\n- 项目页面点击搜索按钮再点击弹出的搜索框窗会隐藏\n\n## [0.5.94]\n\n### Features\n\n- 任务流转自动负责人支持转让模式\n\n### Performance\n\n- 任务日志刷新\n- Action中错误提醒弱化\n- 手机版无法选择日期范围的问题\n- 手机版无法聊天，输入页面跳动\n\n## [0.5.84]\n\n### Features\n\n- 添加工作流\n\n### Performance\n\n- 个人设置显示版本号\n- 完成任务暂时继续显示在我的列表\n- 客户端自动下载新版本更新\n- 设置子任务时间时，如果主任务没有时间则自动设置\n- 任务操作菜单组件化\n- 调整仅项目负责人可以删除任务列表\n- 领取任务需要设置计划时间\n\n## [0.5.59]\n\n### Bug Fixes\n\n- 其他人员添加任务会临时出现在自己的列表中\n\n### Performance\n\n- 任务版本如果只有一个负责人时显示负责人的名字\n\n## [0.5.58]\n\n### Bug Fixes\n\n- 主任务被删除或归档时子任务应该也同步\n\n### Features\n\n- 创建任务窗口添加小时钟\n- 限制个人最多500个未完成任务\n- 限制项目最多100个人参与\n- 思维导图支持无极缩放\n- 自动归档已完成任务\n\n### Performance\n\n- 日历任务缓存\n- 日历选择时间添加任务\n- 归档任务可以搜索\n- 归档任务列表显示完成时间\n- 项目版面成员显示\n- 子任务默认起始时间与主任务一致\n- 禁用会员记录禁用时间\n- 安装项目时支持自定义端口\n- 任务详情窗口光标在任务描述可使用ctrl+s（command+s）保存\n- 文件快捷键保存\n\n## [0.5.17]\n\n### Bug Fixes\n\n- 任务有负责人后仅限项目或任务负责人修改\n\n### Performance\n\n- 未被领取的任务标记完成之前先领取\n- 快速添加任务0天的描述\n- 客户端标题优化\n\n## [0.5.8]\n\n### Performance\n\n- Office文件预览\n- 文件预览不能滚动的问题\n\n## [0.5.0]\n\n### Bug Fixes\n\n- 只读文件也能修改文件\n\n### Performance\n\n- 优化文件权限\n- 初始化数据\n\n## [0.4.99]\n\n### Bug Fixes\n\n- 修复首页内容部分间距问题\n- 修复英文版本登录按钮无法点击\n- 修复首页代码格式化\n\n### Features\n\n- 文件分享查看链接\n- 新增主动退出共享文件\n- 共享给所有人\n- 文件支持只读、读/写细化设置\n\n## [0.4.86]\n\n### Bug Fixes\n\n- 聊天窗口不自动滚动的问题\n\n### Features\n\n- 客户端子窗口数据同步到主窗口\n- 任务新窗口打开\n\n### Performance\n\n- Windows客户端无法关闭的情况\n- 任务等级支持设置0天表示默认不限时\n- 客户端子窗口\n- 任务窗口\n\n## [0.4.78]\n\n### Bug Fixes\n\n- 清除缓存导致自定义服务器失败的问题\n- Office无法修改的问题\n- 邀请加入项目数据库迁移文件\n- 系统设置保存后邀请码消失\n\n### Features\n\n- 客户端支持自定义服务器\n\n### Performance\n\n- 链接说明\n- 发布窗口小屏幕不支持右键(隐藏右键提示)\n\n### Styling\n\n- 任务描述溢出的问题\n- 优化客户端更新窗口滚动\n- 发布任务出口小屏幕下方按钮不居中\n\n## [0.4.63]\n\n### Bug Fixes\n\n- 任务详情窗口不显示子任务\n\n### Features\n\n- 注册邀请码模式\n- 通过链接邀请加入项目\n- 文件上传进度\n\n## [0.4.58]\n\n### Bug Fixes\n\n- 全局loading\n- 图片媒体文件无法预览\n\n### Features\n\n- 新注册自动创建个人项目\n\n### Performance\n\n- 安装composer install失败时尝试使用国内源再试一次\n- 优化office加载提示\n- 按需加载富文本静态资源\n\n### Styling\n\n- 登录成功加载效果\n\n## [0.4.50]\n\n### Bug Fixes\n\n- 客户端新窗口\n- Window客户端弹出错误\n- 任务窗口详情描述内容溢出\n- 任务聊天窗口领取任务按钮错位\n- 任务级别设置等级描述\n- 手机版隐藏客户端下载按钮\n\n### Documentation\n\n- Docker Compose v2.0+\n\n### Features\n\n- 客户端新窗口打开文件\n- 任务创建窗口自动选择上次添加的项目\n\n### Performance\n\n- 客户端窗口标题\n- 领取任务流程\n- 到期时间格式化\n- 小屏幕弹窗底部按钮铺全\n- 仪表盘完成任务\n- 添加任务窗口\n- 添加任务弹窗\n\n### Styling\n\n- 客户端文件窗口样式\n- Iview\n- 排序箭头颜色\n\n## [0.4.28]\n\n### Bug Fixes\n\n- 按到期时间排序没有时间应该排到最后\n- 分页 #31\n- 任务负责人无法修改子任务的问题\n\n### Documentation\n\n- 添加QQ群号\n\n### Features\n\n- Mac客户端角标提示加上仪表盘内的任务数\n- 客户端快捷键关闭侧滑窗\n- 客户端快捷键关闭窗口先关网页内的弹窗\n- 项目任务支持优先级、到期时间排序\n- 仪表盘徽标数\n- 协助的任务\n- 记住最后登录账号\n\n### Performance\n\n- 客户端关闭\n- 客户端在项目页面支持快捷键添加任务\n- 已完成任务的显示\n- 任务详细描述、添加任务\n- 仪表盘\n- 时间范围任务\n- 今天任务、我的任务\n- 日历日、周视图选择添加任务会进入all day\n- 清除缓存\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.7109375,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.3564453125,
          "content": "# Install (Docker)\n\nEnglish | **[中文文档](./README_CN.md)**\n\n- [Screenshot preview](./README_PREVIEW.md)\n- [Demo site](http://www.dootask.com/)\n\n**QQ Group**\n\nGroup No.: `546574618`\n\n## Setup\n\n- `Docker v20.10+` & `Docker Compose v2.0+` must be installed\n- System: `Centos/Debian/Ubuntu/macOS/Windows`\n- Hardware suggestion: 2 cores and above 4G memory\n- Special note: Windows users please use `git bash` or `cmder` to run the command\n\n### Deployment (Pro Edition)\n\n```bash\n# 1、Clone the repository\n\n# Clone projects on github\ngit clone -b pro --depth=1 https://github.com/kuaifan/dootask.git\n# Or you can use gitee\ngit clone -b pro --depth=1 https://gitee.com/aipaw/dootask.git\n\n# 2、Enter directory\ncd dootask\n\n# 3、Installation（Custom port installation, as: ./cmd install --port 80）\n./cmd install\n```\n\n### Reset password\n\n```bash\n# Reset default account password\n./cmd repassword\n```\n\n### Change port\n\n```bash\n# This method only replaces the HTTP port. To replace the HTTPS port, please read the SSL configuration below\n./cmd port 80\n```\n\n### Stop server\n\n```bash\n./cmd stop\n\n# P.S: Once application is set up, whenever you want to start the server (if it is stopped) run below command\n./cmd start\n```\n\n### Development compilation\n\n- `NodeJs 20+` must be installed\n\n```bash\n# Development\n./cmd dev\n   \n# Production (This is web client. For App/PC/Mac clients, Please read README-CLIENT.md)\n./cmd prod  \n```\n\n### Shortcuts for running command\n\n```bash\n# You can do this using the following command\n./cmd artisan \"your command\"          # To run a artisan command\n./cmd php \"your command\"              # To run a php command\n./cmd nginx \"your command\"            # To run a nginx command\n./cmd redis \"your command\"            # To run a redis command\n./cmd composer \"your command\"         # To run a composer command\n./cmd supervisorctl \"your command\"    # To run a supervisorctl command\n./cmd mysql \"your command\"            # To run a mysql command (backup: Backup database, recovery: Restore database, open: Open database external port access, close: Close database external port access)\n```\n\n### SSL configuration\n\n#### Method 1: Automatic configuration\n\n```bash \n# Running commands in a project\n./cmd https\n```\n\n#### Or Method 2: Nginx Agent Configuration\n\n```bash \n# 1、Nginx config add\nproxy_set_header X-Forwarded-Host $http_host;\nproxy_set_header X-Forwarded-Proto $scheme;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n# 2、Running commands in a project (If you unconfigure the NGINX agent, run: ./cmd https close)\n./cmd https agent\n```\n\n## Upgrade\n\n**Note: Please back up your data before upgrading!**\n\n```bash\n# Method 1: Running commands in a project\n./cmd update\n\n# Or method 2: use this method if method 1 fails\ngit pull\n./cmd mysql backup\n./cmd uninstall\n./cmd install\n./cmd mysql recovery\n```\n\n* Please try again if the upgrade fails across a large version.\n* If 502 after the upgrade please run `./cmd restart` restart the service.\n\n## Transfer\n\nFollow these steps to complete the project migration after the new project is installed:\n\n1. Backup original database\n\n```bash\n# Run command under old project\n./cmd mysql backup\n```\n\n2. Copy `database backup file` and `public/uploads` directory to the new project.\n\n3. Restore database to new project\n```bash\n# Run command under new project\n./cmd mysql recovery\n```\n\n## Uninstall\n\n```bash\n# Running commands in a project\n./cmd uninstall\n```\n"
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 3.29296875,
          "content": "# Install (Docker)\n\n**[English](./README.md)** | 中文文档\n\n- [截图预览](./README_PREVIEW.md)\n- [演示站点](http://www.dootask.com/)\n\n**QQ交流群**\n\n- QQ群号: `546574618`\n\n## 安装程序\n\n- 必须安装：`Docker v20.10+` 和 `Docker Compose v2.0+`\n- 支持环境：`Centos/Debian/Ubuntu/macOS/Windows`\n- 硬件建议：2核4G以上\n- 特别说明：Windows 用户请使用 `git bash` 或者 `cmder` 运行命令\n\n### 部署项目（Pro版）\n\n```bash\n# 1、克隆项目到您的本地或服务器\n\n# 通过github克隆项目\ngit clone -b pro --depth=1 https://github.com/kuaifan/dootask.git\n# 或者你也可以使用gitee\ngit clone -b pro --depth=1 https://gitee.com/aipaw/dootask.git\n\n# 2、进入目录\ncd dootask\n\n# 3、一键安装项目（自定义端口安装，如：./cmd install --port 80）\n./cmd install\n```\n\n### 重置密码\n\n```bash\n# 重置默认管理员密码\n./cmd repassword\n```\n\n### 更换端口\n\n```bash\n# 此方法仅更换http端口，更换https端口请阅读下面SSL配置\n./cmd port 80\n```\n\n### 停止服务\n\n```bash\n./cmd stop\n\n# 一旦应用程序被设置，无论何时你想要启动服务器(如果它被停止)运行以下命令\n./cmd start\n```\n\n### 开发编译\n\n- 请确保你已经安装了 `NodeJs 20+`\n\n```bash\n# 开发模式\n./cmd dev\n   \n# 编译项目（这是网页端的，App/Pc/Mac客户端请查看 README_CLIENT.md）\n./cmd prod  \n```\n\n\n### 运行命令的快捷方式\n\n```bash\n# 你可以使用以下命令来执行\n./cmd artisan \"your command\"          # 运行 artisan 命令\n./cmd php \"your command\"              # 运行 php 命令\n./cmd nginx \"your command\"            # 运行 nginx 命令\n./cmd redis \"your command\"            # 运行 redis 命令\n./cmd composer \"your command\"         # 运行 composer 命令\n./cmd supervisorctl \"your command\"    # 运行 supervisorctl 命令\n./cmd mysql \"your command\"            # 运行 mysql 命令 (backup: 备份数据库，recovery: 还原数据库，open: 开启数据库外部端口访问，close: 关闭数据库外部端口访问)\n```\n\n### SSL 配置\n\n#### 方法1：自动配置\n\n```bash \n# 在项目下运行命令，根据提示执行即可\n./cmd https\n```\n\n#### （或者）方法2：Nginx 代理配置\n\n```bash \n# 1、Nginx 代理配置添加\nproxy_set_header X-Forwarded-Host $http_host;\nproxy_set_header X-Forwarded-Proto $scheme;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n# 2、在项目下运行命令（如果取消 Nginx 代理配置请运行：./cmd https close）\n./cmd https agent\n```\n\n## 升级更新\n\n**注意：在升级之前请备份好你的数据！**\n\n```bash\n# 方法1：在项目下运行命令\n./cmd update\n\n# （或者）方法2：如果方法1失败请使用此方法\ngit pull\n./cmd mysql backup\n./cmd uninstall\n./cmd install\n./cmd mysql recovery\n```\n\n* 跨越大版本升级失败时请重试执行一次。\n* 如果升级后出现502请运行 `./cmd restart` 重启服务即可。\n\n## 迁移项目\n\n在新项目安装好之后按照以下步骤完成项目迁移：\n\n1、备份原数据库\n\n```bash\n# 在旧的项目下运行命令\n./cmd mysql backup\n```\n\n2、将`数据库备份文件`及`public/uploads`目录拷贝至新项目\n\n3、还原数据库至新项目\n```bash\n# 在新的项目下运行命令\n./cmd mysql recovery\n```\n\n## 卸载项目\n\n```bash\n# 在项目下运行命令\n./cmd uninstall\n```\n"
        },
        {
          "name": "README_PREVIEW.md",
          "type": "blob",
          "size": 0.77734375,
          "content": "# Screenshot Preview\n\n![](resources/assets/statics/screenshot/1.png)\n\n![](resources/assets/statics/screenshot/2.png)\n\n![](resources/assets/statics/screenshot/3.png)\n\n![](resources/assets/statics/screenshot/4.png)\n\n![](resources/assets/statics/screenshot/5.png)\n\n![](resources/assets/statics/screenshot/6.png)\n\n![](resources/assets/statics/screenshot/7.png)\n\n![](resources/assets/statics/screenshot/8.png)\n\n![](resources/assets/statics/screenshot/9.png)\n\n![](resources/assets/statics/screenshot/10.png)\n\n![](resources/assets/statics/screenshot/11.png)\n\n![](resources/assets/statics/screenshot/12.png)\n\n![](resources/assets/statics/screenshot/13.png)\n\n![](resources/assets/statics/screenshot/14.png)\n\n![](resources/assets/statics/screenshot/15.png)\n\n![](resources/assets/statics/screenshot/16.png)\n"
        },
        {
          "name": "README_PUBLISH.md",
          "type": "blob",
          "size": 0.986328125,
          "content": "# 发布\n\n## 准备工作\n\n1. 添加环境变量 `APPLEID`、`APPLEIDPASS` 用于公证\n2. 添加环境变量 `CSC_LINK`、`CSC_KEY_PASSWORD` 用于签名\n3. 添加环境变量 `GITHUB_TOKEN`、`GITHUB_REPOSITORY` 用于发布到GitHub（GitHub Actions 发布不需要）\n4. 添加环境变量 `PUBLISH_KEY` 用于发布到私有服务器\n\n## 发布版本\n\n```shell\nnpm run translate   # 翻译（可选）\nnpm run version     # 生成版本\nnpm run build       # 编译前端\n```\n\n说明：\n\n- 执行 `npm run build` 作用是生成网页端；\n- 客户端 (Windows、Mac、Android) 会通过 GitHub Actions 自动生成并发布；所以，如果要自动发布只需要提交git并推送即可；\n- 如果想手动生成客户端执行 `./cmd electron` 根据提示选择操作。\n\n\n## 编译 App\n\n```shell\n./cmd appbuild publish  # 编译生成App需要的资源\n```\n\n编译完后进入 `resources/mobile` EEUI框架目录内打包 Android 或 iOS 应用（Android 以实现 GitHub Actions 自动发布）\n"
        },
        {
          "name": "_ide_helper.php",
          "type": "blob",
          "size": 757.7255859375,
          "content": "<?php\n// @formatter:off\n// phpcs:ignoreFile\n\n/**\n * A helper file for Laravel, to provide autocomplete information to your IDE\n * Generated for Laravel 8.83.27.\n *\n * This file should not be included in your code, only analyzed by your IDE!\n *\n * @author Barry vd. Heuvel <barryvdh@gmail.com>\n * @see https://github.com/barryvdh/laravel-ide-helper\n */\n\n    namespace Illuminate\\Support\\Facades { \n            /**\n     * \n     *\n     * @see \\Illuminate\\Contracts\\Foundation\\Application\n     */ \n        class App {\n                    /**\n         * Get the version number of the application.\n         *\n         * @return string \n         * @static \n         */ \n        public static function version()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->version();\n        }\n                    /**\n         * Run the given array of bootstrap classes.\n         *\n         * @param string[] $bootstrappers\n         * @return void \n         * @static \n         */ \n        public static function bootstrapWith($bootstrappers)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->bootstrapWith($bootstrappers);\n        }\n                    /**\n         * Register a callback to run after loading the environment.\n         *\n         * @param \\Closure $callback\n         * @return void \n         * @static \n         */ \n        public static function afterLoadingEnvironment($callback)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->afterLoadingEnvironment($callback);\n        }\n                    /**\n         * Register a callback to run before a bootstrapper.\n         *\n         * @param string $bootstrapper\n         * @param \\Closure $callback\n         * @return void \n         * @static \n         */ \n        public static function beforeBootstrapping($bootstrapper, $callback)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->beforeBootstrapping($bootstrapper, $callback);\n        }\n                    /**\n         * Register a callback to run after a bootstrapper.\n         *\n         * @param string $bootstrapper\n         * @param \\Closure $callback\n         * @return void \n         * @static \n         */ \n        public static function afterBootstrapping($bootstrapper, $callback)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->afterBootstrapping($bootstrapper, $callback);\n        }\n                    /**\n         * Determine if the application has been bootstrapped before.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function hasBeenBootstrapped()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->hasBeenBootstrapped();\n        }\n                    /**\n         * Set the base path for the application.\n         *\n         * @param string $basePath\n         * @return \\Illuminate\\Foundation\\Application \n         * @static \n         */ \n        public static function setBasePath($basePath)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->setBasePath($basePath);\n        }\n                    /**\n         * Get the path to the application \"app\" directory.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function path($path = '')\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->path($path);\n        }\n                    /**\n         * Set the application directory.\n         *\n         * @param string $path\n         * @return \\Illuminate\\Foundation\\Application \n         * @static \n         */ \n        public static function useAppPath($path)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->useAppPath($path);\n        }\n                    /**\n         * Get the base path of the Laravel installation.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function basePath($path = '')\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->basePath($path);\n        }\n                    /**\n         * Get the path to the bootstrap directory.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function bootstrapPath($path = '')\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->bootstrapPath($path);\n        }\n                    /**\n         * Get the path to the application configuration files.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function configPath($path = '')\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->configPath($path);\n        }\n                    /**\n         * Get the path to the database directory.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function databasePath($path = '')\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->databasePath($path);\n        }\n                    /**\n         * Set the database directory.\n         *\n         * @param string $path\n         * @return \\Illuminate\\Foundation\\Application \n         * @static \n         */ \n        public static function useDatabasePath($path)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->useDatabasePath($path);\n        }\n                    /**\n         * Get the path to the language files.\n         *\n         * @return string \n         * @static \n         */ \n        public static function langPath()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->langPath();\n        }\n                    /**\n         * Set the language file directory.\n         *\n         * @param string $path\n         * @return \\Illuminate\\Foundation\\Application \n         * @static \n         */ \n        public static function useLangPath($path)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->useLangPath($path);\n        }\n                    /**\n         * Get the path to the public / web directory.\n         *\n         * @return string \n         * @static \n         */ \n        public static function publicPath()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->publicPath();\n        }\n                    /**\n         * Get the path to the storage directory.\n         *\n         * @return string \n         * @static \n         */ \n        public static function storagePath()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->storagePath();\n        }\n                    /**\n         * Set the storage directory.\n         *\n         * @param string $path\n         * @return \\Illuminate\\Foundation\\Application \n         * @static \n         */ \n        public static function useStoragePath($path)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->useStoragePath($path);\n        }\n                    /**\n         * Get the path to the resources directory.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function resourcePath($path = '')\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->resourcePath($path);\n        }\n                    /**\n         * Get the path to the views directory.\n         * \n         * This method returns the first configured path in the array of view paths.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function viewPath($path = '')\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->viewPath($path);\n        }\n                    /**\n         * Get the path to the environment file directory.\n         *\n         * @return string \n         * @static \n         */ \n        public static function environmentPath()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->environmentPath();\n        }\n                    /**\n         * Set the directory for the environment file.\n         *\n         * @param string $path\n         * @return \\Illuminate\\Foundation\\Application \n         * @static \n         */ \n        public static function useEnvironmentPath($path)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->useEnvironmentPath($path);\n        }\n                    /**\n         * Set the environment file to be loaded during bootstrapping.\n         *\n         * @param string $file\n         * @return \\Illuminate\\Foundation\\Application \n         * @static \n         */ \n        public static function loadEnvironmentFrom($file)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->loadEnvironmentFrom($file);\n        }\n                    /**\n         * Get the environment file the application is using.\n         *\n         * @return string \n         * @static \n         */ \n        public static function environmentFile()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->environmentFile();\n        }\n                    /**\n         * Get the fully qualified path to the environment file.\n         *\n         * @return string \n         * @static \n         */ \n        public static function environmentFilePath()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->environmentFilePath();\n        }\n                    /**\n         * Get or check the current application environment.\n         *\n         * @param string|array $environments\n         * @return string|bool \n         * @static \n         */ \n        public static function environment(...$environments)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->environment(...$environments);\n        }\n                    /**\n         * Determine if the application is in the local environment.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function isLocal()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->isLocal();\n        }\n                    /**\n         * Determine if the application is in the production environment.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function isProduction()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->isProduction();\n        }\n                    /**\n         * Detect the application's current environment.\n         *\n         * @param \\Closure $callback\n         * @return string \n         * @static \n         */ \n        public static function detectEnvironment($callback)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->detectEnvironment($callback);\n        }\n                    /**\n         * Determine if the application is running in the console.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function runningInConsole()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->runningInConsole();\n        }\n                    /**\n         * Determine if the application is running unit tests.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function runningUnitTests()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->runningUnitTests();\n        }\n                    /**\n         * Determine if the application is running with debug mode enabled.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function hasDebugModeEnabled()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->hasDebugModeEnabled();\n        }\n                    /**\n         * Register all of the configured providers.\n         *\n         * @return void \n         * @static \n         */ \n        public static function registerConfiguredProviders()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->registerConfiguredProviders();\n        }\n                    /**\n         * Register a service provider with the application.\n         *\n         * @param \\Illuminate\\Support\\ServiceProvider|string $provider\n         * @param bool $force\n         * @return \\Illuminate\\Support\\ServiceProvider \n         * @static \n         */ \n        public static function register($provider, $force = false)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->register($provider, $force);\n        }\n                    /**\n         * Get the registered service provider instance if it exists.\n         *\n         * @param \\Illuminate\\Support\\ServiceProvider|string $provider\n         * @return \\Illuminate\\Support\\ServiceProvider|null \n         * @static \n         */ \n        public static function getProvider($provider)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->getProvider($provider);\n        }\n                    /**\n         * Get the registered service provider instances if any exist.\n         *\n         * @param \\Illuminate\\Support\\ServiceProvider|string $provider\n         * @return array \n         * @static \n         */ \n        public static function getProviders($provider)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->getProviders($provider);\n        }\n                    /**\n         * Resolve a service provider instance from the class name.\n         *\n         * @param string $provider\n         * @return \\Illuminate\\Support\\ServiceProvider \n         * @static \n         */ \n        public static function resolveProvider($provider)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->resolveProvider($provider);\n        }\n                    /**\n         * Load and boot all of the remaining deferred providers.\n         *\n         * @return void \n         * @static \n         */ \n        public static function loadDeferredProviders()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->loadDeferredProviders();\n        }\n                    /**\n         * Load the provider for a deferred service.\n         *\n         * @param string $service\n         * @return void \n         * @static \n         */ \n        public static function loadDeferredProvider($service)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->loadDeferredProvider($service);\n        }\n                    /**\n         * Register a deferred provider and service.\n         *\n         * @param string $provider\n         * @param string|null $service\n         * @return void \n         * @static \n         */ \n        public static function registerDeferredProvider($provider, $service = null)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->registerDeferredProvider($provider, $service);\n        }\n                    /**\n         * Resolve the given type from the container.\n         *\n         * @param string $abstract\n         * @param array $parameters\n         * @return mixed \n         * @static \n         */ \n        public static function make($abstract, $parameters = [])\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->make($abstract, $parameters);\n        }\n                    /**\n         * Determine if the given abstract type has been bound.\n         *\n         * @param string $abstract\n         * @return bool \n         * @static \n         */ \n        public static function bound($abstract)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->bound($abstract);\n        }\n                    /**\n         * Determine if the application has booted.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function isBooted()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->isBooted();\n        }\n                    /**\n         * Boot the application's service providers.\n         *\n         * @return void \n         * @static \n         */ \n        public static function boot()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->boot();\n        }\n                    /**\n         * Register a new boot listener.\n         *\n         * @param callable $callback\n         * @return void \n         * @static \n         */ \n        public static function booting($callback)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->booting($callback);\n        }\n                    /**\n         * Register a new \"booted\" listener.\n         *\n         * @param callable $callback\n         * @return void \n         * @static \n         */ \n        public static function booted($callback)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->booted($callback);\n        }\n                    /**\n         * {@inheritdoc}\n         *\n         * @return \\Symfony\\Component\\HttpFoundation\\Response \n         * @static \n         */ \n        public static function handle($request, $type = 1, $catch = true)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->handle($request, $type, $catch);\n        }\n                    /**\n         * Determine if middleware has been disabled for the application.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function shouldSkipMiddleware()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->shouldSkipMiddleware();\n        }\n                    /**\n         * Get the path to the cached services.php file.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getCachedServicesPath()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->getCachedServicesPath();\n        }\n                    /**\n         * Get the path to the cached packages.php file.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getCachedPackagesPath()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->getCachedPackagesPath();\n        }\n                    /**\n         * Determine if the application configuration is cached.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function configurationIsCached()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->configurationIsCached();\n        }\n                    /**\n         * Get the path to the configuration cache file.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getCachedConfigPath()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->getCachedConfigPath();\n        }\n                    /**\n         * Determine if the application routes are cached.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function routesAreCached()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->routesAreCached();\n        }\n                    /**\n         * Get the path to the routes cache file.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getCachedRoutesPath()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->getCachedRoutesPath();\n        }\n                    /**\n         * Determine if the application events are cached.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function eventsAreCached()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->eventsAreCached();\n        }\n                    /**\n         * Get the path to the events cache file.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getCachedEventsPath()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->getCachedEventsPath();\n        }\n                    /**\n         * Add new prefix to list of absolute path prefixes.\n         *\n         * @param string $prefix\n         * @return \\Illuminate\\Foundation\\Application \n         * @static \n         */ \n        public static function addAbsoluteCachePathPrefix($prefix)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->addAbsoluteCachePathPrefix($prefix);\n        }\n                    /**\n         * Determine if the application is currently down for maintenance.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function isDownForMaintenance()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->isDownForMaintenance();\n        }\n                    /**\n         * Throw an HttpException with the given data.\n         *\n         * @param int $code\n         * @param string $message\n         * @param array $headers\n         * @return \\Illuminate\\Foundation\\never \n         * @throws \\Symfony\\Component\\HttpKernel\\Exception\\HttpException\n         * @throws \\Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException\n         * @static \n         */ \n        public static function abort($code, $message = '', $headers = [])\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->abort($code, $message, $headers);\n        }\n                    /**\n         * Register a terminating callback with the application.\n         *\n         * @param callable|string $callback\n         * @return \\Illuminate\\Foundation\\Application \n         * @static \n         */ \n        public static function terminating($callback)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->terminating($callback);\n        }\n                    /**\n         * Terminate the application.\n         *\n         * @return void \n         * @static \n         */ \n        public static function terminate()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->terminate();\n        }\n                    /**\n         * Get the service providers that have been loaded.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getLoadedProviders()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->getLoadedProviders();\n        }\n                    /**\n         * Determine if the given service provider is loaded.\n         *\n         * @param string $provider\n         * @return bool \n         * @static \n         */ \n        public static function providerIsLoaded($provider)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->providerIsLoaded($provider);\n        }\n                    /**\n         * Get the application's deferred services.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getDeferredServices()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->getDeferredServices();\n        }\n                    /**\n         * Set the application's deferred services.\n         *\n         * @param array $services\n         * @return void \n         * @static \n         */ \n        public static function setDeferredServices($services)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->setDeferredServices($services);\n        }\n                    /**\n         * Add an array of services to the application's deferred services.\n         *\n         * @param array $services\n         * @return void \n         * @static \n         */ \n        public static function addDeferredServices($services)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->addDeferredServices($services);\n        }\n                    /**\n         * Determine if the given service is a deferred service.\n         *\n         * @param string $service\n         * @return bool \n         * @static \n         */ \n        public static function isDeferredService($service)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->isDeferredService($service);\n        }\n                    /**\n         * Configure the real-time facade namespace.\n         *\n         * @param string $namespace\n         * @return void \n         * @static \n         */ \n        public static function provideFacades($namespace)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->provideFacades($namespace);\n        }\n                    /**\n         * Get the current application locale.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getLocale()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->getLocale();\n        }\n                    /**\n         * Get the current application locale.\n         *\n         * @return string \n         * @static \n         */ \n        public static function currentLocale()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->currentLocale();\n        }\n                    /**\n         * Get the current application fallback locale.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getFallbackLocale()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->getFallbackLocale();\n        }\n                    /**\n         * Set the current application locale.\n         *\n         * @param string $locale\n         * @return void \n         * @static \n         */ \n        public static function setLocale($locale)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->setLocale($locale);\n        }\n                    /**\n         * Set the current application fallback locale.\n         *\n         * @param string $fallbackLocale\n         * @return void \n         * @static \n         */ \n        public static function setFallbackLocale($fallbackLocale)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->setFallbackLocale($fallbackLocale);\n        }\n                    /**\n         * Determine if the application locale is the given locale.\n         *\n         * @param string $locale\n         * @return bool \n         * @static \n         */ \n        public static function isLocale($locale)\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->isLocale($locale);\n        }\n                    /**\n         * Register the core class aliases in the container.\n         *\n         * @return void \n         * @static \n         */ \n        public static function registerCoreContainerAliases()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->registerCoreContainerAliases();\n        }\n                    /**\n         * Flush the container of all bindings and resolved instances.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flush()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->flush();\n        }\n                    /**\n         * Get the application namespace.\n         *\n         * @return string \n         * @throws \\RuntimeException\n         * @static \n         */ \n        public static function getNamespace()\n        {\n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->getNamespace();\n        }\n                    /**\n         * Define a contextual binding.\n         *\n         * @param array|string $concrete\n         * @return \\Illuminate\\Contracts\\Container\\ContextualBindingBuilder \n         * @static \n         */ \n        public static function when($concrete)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->when($concrete);\n        }\n                    /**\n         * Returns true if the container can return an entry for the given identifier.\n         * \n         * Returns false otherwise.\n         * \n         * `has($id)` returning true does not mean that `get($id)` will not throw an exception.\n         * It does however mean that `get($id)` will not throw a `NotFoundExceptionInterface`.\n         *\n         * @return bool \n         * @param string $id Identifier of the entry to look for.\n         * @return bool \n         * @static \n         */ \n        public static function has($id)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->has($id);\n        }\n                    /**\n         * Determine if the given abstract type has been resolved.\n         *\n         * @param string $abstract\n         * @return bool \n         * @static \n         */ \n        public static function resolved($abstract)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->resolved($abstract);\n        }\n                    /**\n         * Determine if a given type is shared.\n         *\n         * @param string $abstract\n         * @return bool \n         * @static \n         */ \n        public static function isShared($abstract)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->isShared($abstract);\n        }\n                    /**\n         * Determine if a given string is an alias.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function isAlias($name)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->isAlias($name);\n        }\n                    /**\n         * Register a binding with the container.\n         *\n         * @param string $abstract\n         * @param \\Closure|string|null $concrete\n         * @param bool $shared\n         * @return void \n         * @throws \\TypeError\n         * @static \n         */ \n        public static function bind($abstract, $concrete = null, $shared = false)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->bind($abstract, $concrete, $shared);\n        }\n                    /**\n         * Determine if the container has a method binding.\n         *\n         * @param string $method\n         * @return bool \n         * @static \n         */ \n        public static function hasMethodBinding($method)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->hasMethodBinding($method);\n        }\n                    /**\n         * Bind a callback to resolve with Container::call.\n         *\n         * @param array|string $method\n         * @param \\Closure $callback\n         * @return void \n         * @static \n         */ \n        public static function bindMethod($method, $callback)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->bindMethod($method, $callback);\n        }\n                    /**\n         * Get the method binding for the given method.\n         *\n         * @param string $method\n         * @param mixed $instance\n         * @return mixed \n         * @static \n         */ \n        public static function callMethodBinding($method, $instance)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->callMethodBinding($method, $instance);\n        }\n                    /**\n         * Add a contextual binding to the container.\n         *\n         * @param string $concrete\n         * @param string $abstract\n         * @param \\Closure|string $implementation\n         * @return void \n         * @static \n         */ \n        public static function addContextualBinding($concrete, $abstract, $implementation)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->addContextualBinding($concrete, $abstract, $implementation);\n        }\n                    /**\n         * Register a binding if it hasn't already been registered.\n         *\n         * @param string $abstract\n         * @param \\Closure|string|null $concrete\n         * @param bool $shared\n         * @return void \n         * @static \n         */ \n        public static function bindIf($abstract, $concrete = null, $shared = false)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->bindIf($abstract, $concrete, $shared);\n        }\n                    /**\n         * Register a shared binding in the container.\n         *\n         * @param string $abstract\n         * @param \\Closure|string|null $concrete\n         * @return void \n         * @static \n         */ \n        public static function singleton($abstract, $concrete = null)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->singleton($abstract, $concrete);\n        }\n                    /**\n         * Register a shared binding if it hasn't already been registered.\n         *\n         * @param string $abstract\n         * @param \\Closure|string|null $concrete\n         * @return void \n         * @static \n         */ \n        public static function singletonIf($abstract, $concrete = null)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->singletonIf($abstract, $concrete);\n        }\n                    /**\n         * Register a scoped binding in the container.\n         *\n         * @param string $abstract\n         * @param \\Closure|string|null $concrete\n         * @return void \n         * @static \n         */ \n        public static function scoped($abstract, $concrete = null)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->scoped($abstract, $concrete);\n        }\n                    /**\n         * Register a scoped binding if it hasn't already been registered.\n         *\n         * @param string $abstract\n         * @param \\Closure|string|null $concrete\n         * @return void \n         * @static \n         */ \n        public static function scopedIf($abstract, $concrete = null)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->scopedIf($abstract, $concrete);\n        }\n                    /**\n         * \"Extend\" an abstract type in the container.\n         *\n         * @param string $abstract\n         * @param \\Closure $closure\n         * @return void \n         * @throws \\InvalidArgumentException\n         * @static \n         */ \n        public static function extend($abstract, $closure)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->extend($abstract, $closure);\n        }\n                    /**\n         * Register an existing instance as shared in the container.\n         *\n         * @param string $abstract\n         * @param mixed $instance\n         * @return mixed \n         * @static \n         */ \n        public static function instance($abstract, $instance)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->instance($abstract, $instance);\n        }\n                    /**\n         * Assign a set of tags to a given binding.\n         *\n         * @param array|string $abstracts\n         * @param array|mixed $tags\n         * @return void \n         * @static \n         */ \n        public static function tag($abstracts, $tags)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->tag($abstracts, $tags);\n        }\n                    /**\n         * Resolve all of the bindings for a given tag.\n         *\n         * @param string $tag\n         * @return \\Illuminate\\Container\\iterable \n         * @static \n         */ \n        public static function tagged($tag)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->tagged($tag);\n        }\n                    /**\n         * Alias a type to a different name.\n         *\n         * @param string $abstract\n         * @param string $alias\n         * @return void \n         * @throws \\LogicException\n         * @static \n         */ \n        public static function alias($abstract, $alias)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->alias($abstract, $alias);\n        }\n                    /**\n         * Bind a new callback to an abstract's rebind event.\n         *\n         * @param string $abstract\n         * @param \\Closure $callback\n         * @return mixed \n         * @static \n         */ \n        public static function rebinding($abstract, $callback)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->rebinding($abstract, $callback);\n        }\n                    /**\n         * Refresh an instance on the given target and method.\n         *\n         * @param string $abstract\n         * @param mixed $target\n         * @param string $method\n         * @return mixed \n         * @static \n         */ \n        public static function refresh($abstract, $target, $method)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->refresh($abstract, $target, $method);\n        }\n                    /**\n         * Wrap the given closure such that its dependencies will be injected when executed.\n         *\n         * @param \\Closure $callback\n         * @param array $parameters\n         * @return \\Closure \n         * @static \n         */ \n        public static function wrap($callback, $parameters = [])\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->wrap($callback, $parameters);\n        }\n                    /**\n         * Call the given Closure / class@method and inject its dependencies.\n         *\n         * @param callable|string $callback\n         * @param array<string, mixed> $parameters\n         * @param string|null $defaultMethod\n         * @return mixed \n         * @throws \\InvalidArgumentException\n         * @static \n         */ \n        public static function call($callback, $parameters = [], $defaultMethod = null)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->call($callback, $parameters, $defaultMethod);\n        }\n                    /**\n         * Get a closure to resolve the given type from the container.\n         *\n         * @param string $abstract\n         * @return \\Closure \n         * @static \n         */ \n        public static function factory($abstract)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->factory($abstract);\n        }\n                    /**\n         * An alias function name for make().\n         *\n         * @param string|callable $abstract\n         * @param array $parameters\n         * @return mixed \n         * @throws \\Illuminate\\Contracts\\Container\\BindingResolutionException\n         * @static \n         */ \n        public static function makeWith($abstract, $parameters = [])\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->makeWith($abstract, $parameters);\n        }\n                    /**\n         * Finds an entry of the container by its identifier and returns it.\n         *\n         * @return mixed \n         * @param string $id Identifier of the entry to look for.\n         * @throws NotFoundExceptionInterface  No entry was found for **this** identifier.\n         * @throws ContainerExceptionInterface Error while retrieving the entry.\n         * @return mixed Entry.\n         * @static \n         */ \n        public static function get($id)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->get($id);\n        }\n                    /**\n         * Instantiate a concrete instance of the given type.\n         *\n         * @param \\Closure|string $concrete\n         * @return mixed \n         * @throws \\Illuminate\\Contracts\\Container\\BindingResolutionException\n         * @throws \\Illuminate\\Contracts\\Container\\CircularDependencyException\n         * @static \n         */ \n        public static function build($concrete)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->build($concrete);\n        }\n                    /**\n         * Register a new before resolving callback for all types.\n         *\n         * @param \\Closure|string $abstract\n         * @param \\Closure|null $callback\n         * @return void \n         * @static \n         */ \n        public static function beforeResolving($abstract, $callback = null)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->beforeResolving($abstract, $callback);\n        }\n                    /**\n         * Register a new resolving callback.\n         *\n         * @param \\Closure|string $abstract\n         * @param \\Closure|null $callback\n         * @return void \n         * @static \n         */ \n        public static function resolving($abstract, $callback = null)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->resolving($abstract, $callback);\n        }\n                    /**\n         * Register a new after resolving callback for all types.\n         *\n         * @param \\Closure|string $abstract\n         * @param \\Closure|null $callback\n         * @return void \n         * @static \n         */ \n        public static function afterResolving($abstract, $callback = null)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->afterResolving($abstract, $callback);\n        }\n                    /**\n         * Get the container's bindings.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getBindings()\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->getBindings();\n        }\n                    /**\n         * Get the alias for an abstract if available.\n         *\n         * @param string $abstract\n         * @return string \n         * @static \n         */ \n        public static function getAlias($abstract)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->getAlias($abstract);\n        }\n                    /**\n         * Remove all of the extender callbacks for a given type.\n         *\n         * @param string $abstract\n         * @return void \n         * @static \n         */ \n        public static function forgetExtenders($abstract)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->forgetExtenders($abstract);\n        }\n                    /**\n         * Remove a resolved instance from the instance cache.\n         *\n         * @param string $abstract\n         * @return void \n         * @static \n         */ \n        public static function forgetInstance($abstract)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->forgetInstance($abstract);\n        }\n                    /**\n         * Clear all of the instances from the container.\n         *\n         * @return void \n         * @static \n         */ \n        public static function forgetInstances()\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->forgetInstances();\n        }\n                    /**\n         * Clear all of the scoped instances from the container.\n         *\n         * @return void \n         * @static \n         */ \n        public static function forgetScopedInstances()\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->forgetScopedInstances();\n        }\n                    /**\n         * Get the globally available instance of the container.\n         *\n         * @return static \n         * @static \n         */ \n        public static function getInstance()\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        return \\Illuminate\\Foundation\\Application::getInstance();\n        }\n                    /**\n         * Set the shared instance of the container.\n         *\n         * @param \\Illuminate\\Contracts\\Container\\Container|null $container\n         * @return \\Illuminate\\Contracts\\Container\\Container|static \n         * @static \n         */ \n        public static function setInstance($container = null)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        return \\Illuminate\\Foundation\\Application::setInstance($container);\n        }\n                    /**\n         * Determine if a given offset exists.\n         *\n         * @param string $key\n         * @return bool \n         * @static \n         */ \n        public static function offsetExists($key)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->offsetExists($key);\n        }\n                    /**\n         * Get the value at a given offset.\n         *\n         * @param string $key\n         * @return mixed \n         * @static \n         */ \n        public static function offsetGet($key)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        return $instance->offsetGet($key);\n        }\n                    /**\n         * Set the value at a given offset.\n         *\n         * @param string $key\n         * @param mixed $value\n         * @return void \n         * @static \n         */ \n        public static function offsetSet($key, $value)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->offsetSet($key, $value);\n        }\n                    /**\n         * Unset the value at a given offset.\n         *\n         * @param string $key\n         * @return void \n         * @static \n         */ \n        public static function offsetUnset($key)\n        {            //Method inherited from \\Illuminate\\Container\\Container         \n                        /** @var \\Illuminate\\Foundation\\Application $instance */\n                        $instance->offsetUnset($key);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Contracts\\Console\\Kernel\n     */ \n        class Artisan {\n                    /**\n         * Run the console application.\n         *\n         * @param \\Symfony\\Component\\Console\\Input\\InputInterface $input\n         * @param \\Symfony\\Component\\Console\\Output\\OutputInterface|null $output\n         * @return int \n         * @static \n         */ \n        public static function handle($input, $output = null)\n        {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel         \n                        /** @var \\App\\Console\\Kernel $instance */\n                        return $instance->handle($input, $output);\n        }\n                    /**\n         * Terminate the application.\n         *\n         * @param \\Symfony\\Component\\Console\\Input\\InputInterface $input\n         * @param int $status\n         * @return void \n         * @static \n         */ \n        public static function terminate($input, $status)\n        {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel         \n                        /** @var \\App\\Console\\Kernel $instance */\n                        $instance->terminate($input, $status);\n        }\n                    /**\n         * Register a Closure based command with the application.\n         *\n         * @param string $signature\n         * @param \\Closure $callback\n         * @return \\Illuminate\\Foundation\\Console\\ClosureCommand \n         * @static \n         */ \n        public static function command($signature, $callback)\n        {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel         \n                        /** @var \\App\\Console\\Kernel $instance */\n                        return $instance->command($signature, $callback);\n        }\n                    /**\n         * Register the given command with the console application.\n         *\n         * @param \\Symfony\\Component\\Console\\Command\\Command $command\n         * @return void \n         * @static \n         */ \n        public static function registerCommand($command)\n        {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel         \n                        /** @var \\App\\Console\\Kernel $instance */\n                        $instance->registerCommand($command);\n        }\n                    /**\n         * Run an Artisan console command by name.\n         *\n         * @param string $command\n         * @param array $parameters\n         * @param \\Symfony\\Component\\Console\\Output\\OutputInterface|null $outputBuffer\n         * @return int \n         * @throws \\Symfony\\Component\\Console\\Exception\\CommandNotFoundException\n         * @static \n         */ \n        public static function call($command, $parameters = [], $outputBuffer = null)\n        {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel         \n                        /** @var \\App\\Console\\Kernel $instance */\n                        return $instance->call($command, $parameters, $outputBuffer);\n        }\n                    /**\n         * Queue the given console command.\n         *\n         * @param string $command\n         * @param array $parameters\n         * @return \\Illuminate\\Foundation\\Bus\\PendingDispatch \n         * @static \n         */ \n        public static function queue($command, $parameters = [])\n        {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel         \n                        /** @var \\App\\Console\\Kernel $instance */\n                        return $instance->queue($command, $parameters);\n        }\n                    /**\n         * Get all of the commands registered with the console.\n         *\n         * @return array \n         * @static \n         */ \n        public static function all()\n        {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel         \n                        /** @var \\App\\Console\\Kernel $instance */\n                        return $instance->all();\n        }\n                    /**\n         * Get the output for the last run command.\n         *\n         * @return string \n         * @static \n         */ \n        public static function output()\n        {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel         \n                        /** @var \\App\\Console\\Kernel $instance */\n                        return $instance->output();\n        }\n                    /**\n         * Bootstrap the application for artisan commands.\n         *\n         * @return void \n         * @static \n         */ \n        public static function bootstrap()\n        {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel         \n                        /** @var \\App\\Console\\Kernel $instance */\n                        $instance->bootstrap();\n        }\n                    /**\n         * Set the Artisan application instance.\n         *\n         * @param \\Illuminate\\Console\\Application $artisan\n         * @return void \n         * @static \n         */ \n        public static function setArtisan($artisan)\n        {            //Method inherited from \\Illuminate\\Foundation\\Console\\Kernel         \n                        /** @var \\App\\Console\\Kernel $instance */\n                        $instance->setArtisan($artisan);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Auth\\AuthManager\n     * @see \\Illuminate\\Contracts\\Auth\\Factory\n     * @see \\Illuminate\\Contracts\\Auth\\Guard\n     * @see \\Illuminate\\Contracts\\Auth\\StatefulGuard\n     */ \n        class Auth {\n                    /**\n         * Attempt to get the guard from the local cache.\n         *\n         * @param string|null $name\n         * @return \\Illuminate\\Contracts\\Auth\\Guard|\\Illuminate\\Contracts\\Auth\\StatefulGuard \n         * @static \n         */ \n        public static function guard($name = null)\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        return $instance->guard($name);\n        }\n                    /**\n         * Create a session based authentication guard.\n         *\n         * @param string $name\n         * @param array $config\n         * @return \\Illuminate\\Auth\\SessionGuard \n         * @static \n         */ \n        public static function createSessionDriver($name, $config)\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        return $instance->createSessionDriver($name, $config);\n        }\n                    /**\n         * Create a token based authentication guard.\n         *\n         * @param string $name\n         * @param array $config\n         * @return \\Illuminate\\Auth\\TokenGuard \n         * @static \n         */ \n        public static function createTokenDriver($name, $config)\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        return $instance->createTokenDriver($name, $config);\n        }\n                    /**\n         * Get the default authentication driver name.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDefaultDriver()\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        return $instance->getDefaultDriver();\n        }\n                    /**\n         * Set the default guard driver the factory should serve.\n         *\n         * @param string $name\n         * @return void \n         * @static \n         */ \n        public static function shouldUse($name)\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        $instance->shouldUse($name);\n        }\n                    /**\n         * Set the default authentication driver name.\n         *\n         * @param string $name\n         * @return void \n         * @static \n         */ \n        public static function setDefaultDriver($name)\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        $instance->setDefaultDriver($name);\n        }\n                    /**\n         * Register a new callback based request guard.\n         *\n         * @param string $driver\n         * @param callable $callback\n         * @return \\Illuminate\\Auth\\AuthManager \n         * @static \n         */ \n        public static function viaRequest($driver, $callback)\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        return $instance->viaRequest($driver, $callback);\n        }\n                    /**\n         * Get the user resolver callback.\n         *\n         * @return \\Closure \n         * @static \n         */ \n        public static function userResolver()\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        return $instance->userResolver();\n        }\n                    /**\n         * Set the callback to be used to resolve users.\n         *\n         * @param \\Closure $userResolver\n         * @return \\Illuminate\\Auth\\AuthManager \n         * @static \n         */ \n        public static function resolveUsersUsing($userResolver)\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        return $instance->resolveUsersUsing($userResolver);\n        }\n                    /**\n         * Register a custom driver creator Closure.\n         *\n         * @param string $driver\n         * @param \\Closure $callback\n         * @return \\Illuminate\\Auth\\AuthManager \n         * @static \n         */ \n        public static function extend($driver, $callback)\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        return $instance->extend($driver, $callback);\n        }\n                    /**\n         * Register a custom provider creator Closure.\n         *\n         * @param string $name\n         * @param \\Closure $callback\n         * @return \\Illuminate\\Auth\\AuthManager \n         * @static \n         */ \n        public static function provider($name, $callback)\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        return $instance->provider($name, $callback);\n        }\n                    /**\n         * Determines if any guards have already been resolved.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function hasResolvedGuards()\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        return $instance->hasResolvedGuards();\n        }\n                    /**\n         * Forget all of the resolved guard instances.\n         *\n         * @return \\Illuminate\\Auth\\AuthManager \n         * @static \n         */ \n        public static function forgetGuards()\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        return $instance->forgetGuards();\n        }\n                    /**\n         * Set the application instance used by the manager.\n         *\n         * @param \\Illuminate\\Contracts\\Foundation\\Application $app\n         * @return \\Illuminate\\Auth\\AuthManager \n         * @static \n         */ \n        public static function setApplication($app)\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        return $instance->setApplication($app);\n        }\n                    /**\n         * Create the user provider implementation for the driver.\n         *\n         * @param string|null $provider\n         * @return \\Illuminate\\Contracts\\Auth\\UserProvider|null \n         * @throws \\InvalidArgumentException\n         * @static \n         */ \n        public static function createUserProvider($provider = null)\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        return $instance->createUserProvider($provider);\n        }\n                    /**\n         * Get the default user provider name.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDefaultUserProvider()\n        {\n                        /** @var \\Illuminate\\Auth\\AuthManager $instance */\n                        return $instance->getDefaultUserProvider();\n        }\n                    /**\n         * Get the currently authenticated user.\n         *\n         * @return \\App\\Models\\User|null \n         * @static \n         */ \n        public static function user()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->user();\n        }\n                    /**\n         * Get the ID for the currently authenticated user.\n         *\n         * @return int|string|null \n         * @static \n         */ \n        public static function id()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->id();\n        }\n                    /**\n         * Log a user into the application without sessions or cookies.\n         *\n         * @param array $credentials\n         * @return bool \n         * @static \n         */ \n        public static function once($credentials = [])\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->once($credentials);\n        }\n                    /**\n         * Log the given user ID into the application without sessions or cookies.\n         *\n         * @param mixed $id\n         * @return \\App\\Models\\User|false \n         * @static \n         */ \n        public static function onceUsingId($id)\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->onceUsingId($id);\n        }\n                    /**\n         * Validate a user's credentials.\n         *\n         * @param array $credentials\n         * @return bool \n         * @static \n         */ \n        public static function validate($credentials = [])\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->validate($credentials);\n        }\n                    /**\n         * Attempt to authenticate using HTTP Basic Auth.\n         *\n         * @param string $field\n         * @param array $extraConditions\n         * @return \\Symfony\\Component\\HttpFoundation\\Response|null \n         * @static \n         */ \n        public static function basic($field = 'email', $extraConditions = [])\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->basic($field, $extraConditions);\n        }\n                    /**\n         * Perform a stateless HTTP Basic login attempt.\n         *\n         * @param string $field\n         * @param array $extraConditions\n         * @return \\Symfony\\Component\\HttpFoundation\\Response|null \n         * @static \n         */ \n        public static function onceBasic($field = 'email', $extraConditions = [])\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->onceBasic($field, $extraConditions);\n        }\n                    /**\n         * Attempt to authenticate a user using the given credentials.\n         *\n         * @param array $credentials\n         * @param bool $remember\n         * @return bool \n         * @static \n         */ \n        public static function attempt($credentials = [], $remember = false)\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->attempt($credentials, $remember);\n        }\n                    /**\n         * Attempt to authenticate a user with credentials and additional callbacks.\n         *\n         * @param array $credentials\n         * @param array|callable $callbacks\n         * @param false $remember\n         * @return bool \n         * @static \n         */ \n        public static function attemptWhen($credentials = [], $callbacks = null, $remember = false)\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->attemptWhen($credentials, $callbacks, $remember);\n        }\n                    /**\n         * Log the given user ID into the application.\n         *\n         * @param mixed $id\n         * @param bool $remember\n         * @return \\App\\Models\\User|false \n         * @static \n         */ \n        public static function loginUsingId($id, $remember = false)\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->loginUsingId($id, $remember);\n        }\n                    /**\n         * Log a user into the application.\n         *\n         * @param \\Illuminate\\Contracts\\Auth\\Authenticatable $user\n         * @param bool $remember\n         * @return void \n         * @static \n         */ \n        public static function login($user, $remember = false)\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        $instance->login($user, $remember);\n        }\n                    /**\n         * Log the user out of the application.\n         *\n         * @return void \n         * @static \n         */ \n        public static function logout()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        $instance->logout();\n        }\n                    /**\n         * Log the user out of the application on their current device only.\n         * \n         * This method does not cycle the \"remember\" token.\n         *\n         * @return void \n         * @static \n         */ \n        public static function logoutCurrentDevice()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        $instance->logoutCurrentDevice();\n        }\n                    /**\n         * Invalidate other sessions for the current user.\n         * \n         * The application must be using the AuthenticateSession middleware.\n         *\n         * @param string $password\n         * @param string $attribute\n         * @return \\App\\Models\\User|null \n         * @throws \\Illuminate\\Auth\\AuthenticationException\n         * @static \n         */ \n        public static function logoutOtherDevices($password, $attribute = 'password')\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->logoutOtherDevices($password, $attribute);\n        }\n                    /**\n         * Register an authentication attempt event listener.\n         *\n         * @param mixed $callback\n         * @return void \n         * @static \n         */ \n        public static function attempting($callback)\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        $instance->attempting($callback);\n        }\n                    /**\n         * Get the last user we attempted to authenticate.\n         *\n         * @return \\App\\Models\\User \n         * @static \n         */ \n        public static function getLastAttempted()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->getLastAttempted();\n        }\n                    /**\n         * Get a unique identifier for the auth session value.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getName()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->getName();\n        }\n                    /**\n         * Get the name of the cookie used to store the \"recaller\".\n         *\n         * @return string \n         * @static \n         */ \n        public static function getRecallerName()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->getRecallerName();\n        }\n                    /**\n         * Determine if the user was authenticated via \"remember me\" cookie.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function viaRemember()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->viaRemember();\n        }\n                    /**\n         * Set the number of minutes the remember me cookie should be valid for.\n         *\n         * @param int $minutes\n         * @return \\Illuminate\\Auth\\SessionGuard \n         * @static \n         */ \n        public static function setRememberDuration($minutes)\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->setRememberDuration($minutes);\n        }\n                    /**\n         * Get the cookie creator instance used by the guard.\n         *\n         * @return \\Illuminate\\Contracts\\Cookie\\QueueingFactory \n         * @throws \\RuntimeException\n         * @static \n         */ \n        public static function getCookieJar()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->getCookieJar();\n        }\n                    /**\n         * Set the cookie creator instance used by the guard.\n         *\n         * @param \\Illuminate\\Contracts\\Cookie\\QueueingFactory $cookie\n         * @return void \n         * @static \n         */ \n        public static function setCookieJar($cookie)\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        $instance->setCookieJar($cookie);\n        }\n                    /**\n         * Get the event dispatcher instance.\n         *\n         * @return \\Illuminate\\Contracts\\Events\\Dispatcher \n         * @static \n         */ \n        public static function getDispatcher()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->getDispatcher();\n        }\n                    /**\n         * Set the event dispatcher instance.\n         *\n         * @param \\Illuminate\\Contracts\\Events\\Dispatcher $events\n         * @return void \n         * @static \n         */ \n        public static function setDispatcher($events)\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        $instance->setDispatcher($events);\n        }\n                    /**\n         * Get the session store used by the guard.\n         *\n         * @return \\Illuminate\\Contracts\\Session\\Session \n         * @static \n         */ \n        public static function getSession()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->getSession();\n        }\n                    /**\n         * Return the currently cached user.\n         *\n         * @return \\App\\Models\\User|null \n         * @static \n         */ \n        public static function getUser()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->getUser();\n        }\n                    /**\n         * Set the current user.\n         *\n         * @param \\Illuminate\\Contracts\\Auth\\Authenticatable $user\n         * @return \\Illuminate\\Auth\\SessionGuard \n         * @static \n         */ \n        public static function setUser($user)\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->setUser($user);\n        }\n                    /**\n         * Get the current request instance.\n         *\n         * @return \\Symfony\\Component\\HttpFoundation\\Request \n         * @static \n         */ \n        public static function getRequest()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->getRequest();\n        }\n                    /**\n         * Set the current request instance.\n         *\n         * @param \\Symfony\\Component\\HttpFoundation\\Request $request\n         * @return \\Illuminate\\Auth\\SessionGuard \n         * @static \n         */ \n        public static function setRequest($request)\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->setRequest($request);\n        }\n                    /**\n         * Get the timebox instance used by the guard.\n         *\n         * @return \\Illuminate\\Support\\Timebox \n         * @static \n         */ \n        public static function getTimebox()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->getTimebox();\n        }\n                    /**\n         * Determine if the current user is authenticated. If not, throw an exception.\n         *\n         * @return \\App\\Models\\User \n         * @throws \\Illuminate\\Auth\\AuthenticationException\n         * @static \n         */ \n        public static function authenticate()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->authenticate();\n        }\n                    /**\n         * Determine if the guard has a user instance.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function hasUser()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->hasUser();\n        }\n                    /**\n         * Determine if the current user is authenticated.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function check()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->check();\n        }\n                    /**\n         * Determine if the current user is a guest.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function guest()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->guest();\n        }\n                    /**\n         * Get the user provider used by the guard.\n         *\n         * @return \\Illuminate\\Contracts\\Auth\\UserProvider \n         * @static \n         */ \n        public static function getProvider()\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        return $instance->getProvider();\n        }\n                    /**\n         * Set the user provider used by the guard.\n         *\n         * @param \\Illuminate\\Contracts\\Auth\\UserProvider $provider\n         * @return void \n         * @static \n         */ \n        public static function setProvider($provider)\n        {\n                        /** @var \\Illuminate\\Auth\\SessionGuard $instance */\n                        $instance->setProvider($provider);\n        }\n                    /**\n         * Register a custom macro.\n         *\n         * @param string $name\n         * @param object|callable $macro\n         * @return void \n         * @static \n         */ \n        public static function macro($name, $macro)\n        {\n                        \\Illuminate\\Auth\\SessionGuard::macro($name, $macro);\n        }\n                    /**\n         * Mix another object into the class.\n         *\n         * @param object $mixin\n         * @param bool $replace\n         * @return void \n         * @throws \\ReflectionException\n         * @static \n         */ \n        public static function mixin($mixin, $replace = true)\n        {\n                        \\Illuminate\\Auth\\SessionGuard::mixin($mixin, $replace);\n        }\n                    /**\n         * Checks if macro is registered.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function hasMacro($name)\n        {\n                        return \\Illuminate\\Auth\\SessionGuard::hasMacro($name);\n        }\n                    /**\n         * Flush the existing macros.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flushMacros()\n        {\n                        \\Illuminate\\Auth\\SessionGuard::flushMacros();\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\View\\Compilers\\BladeCompiler\n     */ \n        class Blade {\n                    /**\n         * Compile the view at the given path.\n         *\n         * @param string|null $path\n         * @return void \n         * @static \n         */ \n        public static function compile($path = null)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->compile($path);\n        }\n                    /**\n         * Get the path currently being compiled.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getPath()\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        return $instance->getPath();\n        }\n                    /**\n         * Set the path currently being compiled.\n         *\n         * @param string $path\n         * @return void \n         * @static \n         */ \n        public static function setPath($path)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->setPath($path);\n        }\n                    /**\n         * Compile the given Blade template contents.\n         *\n         * @param string $value\n         * @return string \n         * @static \n         */ \n        public static function compileString($value)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        return $instance->compileString($value);\n        }\n                    /**\n         * Evaluate and render a Blade string to HTML.\n         *\n         * @param string $string\n         * @param array $data\n         * @param bool $deleteCachedView\n         * @return string \n         * @static \n         */ \n        public static function render($string, $data = [], $deleteCachedView = false)\n        {\n                        return \\Illuminate\\View\\Compilers\\BladeCompiler::render($string, $data, $deleteCachedView);\n        }\n                    /**\n         * Render a component instance to HTML.\n         *\n         * @param \\Illuminate\\View\\Component $component\n         * @return string \n         * @static \n         */ \n        public static function renderComponent($component)\n        {\n                        return \\Illuminate\\View\\Compilers\\BladeCompiler::renderComponent($component);\n        }\n                    /**\n         * Strip the parentheses from the given expression.\n         *\n         * @param string $expression\n         * @return string \n         * @static \n         */ \n        public static function stripParentheses($expression)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        return $instance->stripParentheses($expression);\n        }\n                    /**\n         * Register a custom Blade compiler.\n         *\n         * @param callable $compiler\n         * @return void \n         * @static \n         */ \n        public static function extend($compiler)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->extend($compiler);\n        }\n                    /**\n         * Get the extensions used by the compiler.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getExtensions()\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        return $instance->getExtensions();\n        }\n                    /**\n         * Register an \"if\" statement directive.\n         *\n         * @param string $name\n         * @param callable $callback\n         * @return void \n         * @static \n         */ \n        public static function if($name, $callback)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->if($name, $callback);\n        }\n                    /**\n         * Check the result of a condition.\n         *\n         * @param string $name\n         * @param array $parameters\n         * @return bool \n         * @static \n         */ \n        public static function check($name, ...$parameters)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        return $instance->check($name, ...$parameters);\n        }\n                    /**\n         * Register a class-based component alias directive.\n         *\n         * @param string $class\n         * @param string|null $alias\n         * @param string $prefix\n         * @return void \n         * @static \n         */ \n        public static function component($class, $alias = null, $prefix = '')\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->component($class, $alias, $prefix);\n        }\n                    /**\n         * Register an array of class-based components.\n         *\n         * @param array $components\n         * @param string $prefix\n         * @return void \n         * @static \n         */ \n        public static function components($components, $prefix = '')\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->components($components, $prefix);\n        }\n                    /**\n         * Get the registered class component aliases.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getClassComponentAliases()\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        return $instance->getClassComponentAliases();\n        }\n                    /**\n         * Register a class-based component namespace.\n         *\n         * @param string $namespace\n         * @param string $prefix\n         * @return void \n         * @static \n         */ \n        public static function componentNamespace($namespace, $prefix)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->componentNamespace($namespace, $prefix);\n        }\n                    /**\n         * Get the registered class component namespaces.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getClassComponentNamespaces()\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        return $instance->getClassComponentNamespaces();\n        }\n                    /**\n         * Register a component alias directive.\n         *\n         * @param string $path\n         * @param string|null $alias\n         * @return void \n         * @static \n         */ \n        public static function aliasComponent($path, $alias = null)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->aliasComponent($path, $alias);\n        }\n                    /**\n         * Register an include alias directive.\n         *\n         * @param string $path\n         * @param string|null $alias\n         * @return void \n         * @static \n         */ \n        public static function include($path, $alias = null)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->include($path, $alias);\n        }\n                    /**\n         * Register an include alias directive.\n         *\n         * @param string $path\n         * @param string|null $alias\n         * @return void \n         * @static \n         */ \n        public static function aliasInclude($path, $alias = null)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->aliasInclude($path, $alias);\n        }\n                    /**\n         * Register a handler for custom directives.\n         *\n         * @param string $name\n         * @param callable $handler\n         * @return void \n         * @throws \\InvalidArgumentException\n         * @static \n         */ \n        public static function directive($name, $handler)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->directive($name, $handler);\n        }\n                    /**\n         * Get the list of custom directives.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getCustomDirectives()\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        return $instance->getCustomDirectives();\n        }\n                    /**\n         * Register a new precompiler.\n         *\n         * @param callable $precompiler\n         * @return void \n         * @static \n         */ \n        public static function precompiler($precompiler)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->precompiler($precompiler);\n        }\n                    /**\n         * Set the echo format to be used by the compiler.\n         *\n         * @param string $format\n         * @return void \n         * @static \n         */ \n        public static function setEchoFormat($format)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->setEchoFormat($format);\n        }\n                    /**\n         * Set the \"echo\" format to double encode entities.\n         *\n         * @return void \n         * @static \n         */ \n        public static function withDoubleEncoding()\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->withDoubleEncoding();\n        }\n                    /**\n         * Set the \"echo\" format to not double encode entities.\n         *\n         * @return void \n         * @static \n         */ \n        public static function withoutDoubleEncoding()\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->withoutDoubleEncoding();\n        }\n                    /**\n         * Indicate that component tags should not be compiled.\n         *\n         * @return void \n         * @static \n         */ \n        public static function withoutComponentTags()\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->withoutComponentTags();\n        }\n                    /**\n         * Get the path to the compiled version of a view.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function getCompiledPath($path)\n        {            //Method inherited from \\Illuminate\\View\\Compilers\\Compiler         \n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        return $instance->getCompiledPath($path);\n        }\n                    /**\n         * Determine if the view at the given path is expired.\n         *\n         * @param string $path\n         * @return bool \n         * @static \n         */ \n        public static function isExpired($path)\n        {            //Method inherited from \\Illuminate\\View\\Compilers\\Compiler         \n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        return $instance->isExpired($path);\n        }\n                    /**\n         * Get a new component hash for a component name.\n         *\n         * @param string $component\n         * @return string \n         * @static \n         */ \n        public static function newComponentHash($component)\n        {\n                        return \\Illuminate\\View\\Compilers\\BladeCompiler::newComponentHash($component);\n        }\n                    /**\n         * Compile a class component opening.\n         *\n         * @param string $component\n         * @param string $alias\n         * @param string $data\n         * @param string $hash\n         * @return string \n         * @static \n         */ \n        public static function compileClassComponentOpening($component, $alias, $data, $hash)\n        {\n                        return \\Illuminate\\View\\Compilers\\BladeCompiler::compileClassComponentOpening($component, $alias, $data, $hash);\n        }\n                    /**\n         * Compile the end-component statements into valid PHP.\n         *\n         * @return string \n         * @static \n         */ \n        public static function compileEndComponentClass()\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        return $instance->compileEndComponentClass();\n        }\n                    /**\n         * Sanitize the given component attribute value.\n         *\n         * @param mixed $value\n         * @return mixed \n         * @static \n         */ \n        public static function sanitizeComponentAttribute($value)\n        {\n                        return \\Illuminate\\View\\Compilers\\BladeCompiler::sanitizeComponentAttribute($value);\n        }\n                    /**\n         * Compile an end-once block into valid PHP.\n         *\n         * @return string \n         * @static \n         */ \n        public static function compileEndOnce()\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        return $instance->compileEndOnce();\n        }\n                    /**\n         * Add a handler to be executed before echoing a given class.\n         *\n         * @param string|callable $class\n         * @param callable|null $handler\n         * @return void \n         * @static \n         */ \n        public static function stringable($class, $handler = null)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        $instance->stringable($class, $handler);\n        }\n                    /**\n         * Compile Blade echos into valid PHP.\n         *\n         * @param string $value\n         * @return string \n         * @static \n         */ \n        public static function compileEchos($value)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        return $instance->compileEchos($value);\n        }\n                    /**\n         * Apply the echo handler for the value if it exists.\n         *\n         * @param string $value\n         * @return string \n         * @static \n         */ \n        public static function applyEchoHandler($value)\n        {\n                        /** @var \\Illuminate\\View\\Compilers\\BladeCompiler $instance */\n                        return $instance->applyEchoHandler($value);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @method static \\Illuminate\\Broadcasting\\Broadcasters\\Broadcaster channel(string $channel, callable|string  $callback, array $options = [])\n     * @method static mixed auth(\\Illuminate\\Http\\Request $request)\n     * @see \\Illuminate\\Contracts\\Broadcasting\\Factory\n     */ \n        class Broadcast {\n                    /**\n         * Register the routes for handling broadcast authentication and sockets.\n         *\n         * @param array|null $attributes\n         * @return void \n         * @static \n         */ \n        public static function routes($attributes = null)\n        {\n                        /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                        $instance->routes($attributes);\n        }\n                    /**\n         * Get the socket ID for the given request.\n         *\n         * @param \\Illuminate\\Http\\Request|null $request\n         * @return string|null \n         * @static \n         */ \n        public static function socket($request = null)\n        {\n                        /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                        return $instance->socket($request);\n        }\n                    /**\n         * Begin broadcasting an event.\n         *\n         * @param mixed|null $event\n         * @return \\Illuminate\\Broadcasting\\PendingBroadcast \n         * @static \n         */ \n        public static function event($event = null)\n        {\n                        /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                        return $instance->event($event);\n        }\n                    /**\n         * Queue the given event for broadcast.\n         *\n         * @param mixed $event\n         * @return void \n         * @static \n         */ \n        public static function queue($event)\n        {\n                        /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                        $instance->queue($event);\n        }\n                    /**\n         * Get a driver instance.\n         *\n         * @param string|null $driver\n         * @return mixed \n         * @static \n         */ \n        public static function connection($driver = null)\n        {\n                        /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                        return $instance->connection($driver);\n        }\n                    /**\n         * Get a driver instance.\n         *\n         * @param string|null $name\n         * @return mixed \n         * @static \n         */ \n        public static function driver($name = null)\n        {\n                        /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                        return $instance->driver($name);\n        }\n                    /**\n         * Get the default driver name.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDefaultDriver()\n        {\n                        /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                        return $instance->getDefaultDriver();\n        }\n                    /**\n         * Set the default driver name.\n         *\n         * @param string $name\n         * @return void \n         * @static \n         */ \n        public static function setDefaultDriver($name)\n        {\n                        /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                        $instance->setDefaultDriver($name);\n        }\n                    /**\n         * Disconnect the given disk and remove from local cache.\n         *\n         * @param string|null $name\n         * @return void \n         * @static \n         */ \n        public static function purge($name = null)\n        {\n                        /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                        $instance->purge($name);\n        }\n                    /**\n         * Register a custom driver creator Closure.\n         *\n         * @param string $driver\n         * @param \\Closure $callback\n         * @return \\Illuminate\\Broadcasting\\BroadcastManager \n         * @static \n         */ \n        public static function extend($driver, $callback)\n        {\n                        /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                        return $instance->extend($driver, $callback);\n        }\n                    /**\n         * Get the application instance used by the manager.\n         *\n         * @return \\Illuminate\\Contracts\\Foundation\\Application \n         * @static \n         */ \n        public static function getApplication()\n        {\n                        /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                        return $instance->getApplication();\n        }\n                    /**\n         * Set the application instance used by the manager.\n         *\n         * @param \\Illuminate\\Contracts\\Foundation\\Application $app\n         * @return \\Illuminate\\Broadcasting\\BroadcastManager \n         * @static \n         */ \n        public static function setApplication($app)\n        {\n                        /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                        return $instance->setApplication($app);\n        }\n                    /**\n         * Forget all of the resolved driver instances.\n         *\n         * @return \\Illuminate\\Broadcasting\\BroadcastManager \n         * @static \n         */ \n        public static function forgetDrivers()\n        {\n                        /** @var \\Illuminate\\Broadcasting\\BroadcastManager $instance */\n                        return $instance->forgetDrivers();\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Contracts\\Bus\\Dispatcher\n     */ \n        class Bus {\n                    /**\n         * Dispatch a command to its appropriate handler.\n         *\n         * @param mixed $command\n         * @return mixed \n         * @static \n         */ \n        public static function dispatch($command)\n        {\n                        /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                        return $instance->dispatch($command);\n        }\n                    /**\n         * Dispatch a command to its appropriate handler in the current process.\n         * \n         * Queueable jobs will be dispatched to the \"sync\" queue.\n         *\n         * @param mixed $command\n         * @param mixed $handler\n         * @return mixed \n         * @static \n         */ \n        public static function dispatchSync($command, $handler = null)\n        {\n                        /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                        return $instance->dispatchSync($command, $handler);\n        }\n                    /**\n         * Dispatch a command to its appropriate handler in the current process without using the synchronous queue.\n         *\n         * @param mixed $command\n         * @param mixed $handler\n         * @return mixed \n         * @static \n         */ \n        public static function dispatchNow($command, $handler = null)\n        {\n                        /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                        return $instance->dispatchNow($command, $handler);\n        }\n                    /**\n         * Attempt to find the batch with the given ID.\n         *\n         * @param string $batchId\n         * @return \\Illuminate\\Bus\\Batch|null \n         * @static \n         */ \n        public static function findBatch($batchId)\n        {\n                        /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                        return $instance->findBatch($batchId);\n        }\n                    /**\n         * Create a new batch of queueable jobs.\n         *\n         * @param \\Illuminate\\Support\\Collection|array|mixed $jobs\n         * @return \\Illuminate\\Bus\\PendingBatch \n         * @static \n         */ \n        public static function batch($jobs)\n        {\n                        /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                        return $instance->batch($jobs);\n        }\n                    /**\n         * Create a new chain of queueable jobs.\n         *\n         * @param \\Illuminate\\Support\\Collection|array $jobs\n         * @return \\Illuminate\\Foundation\\Bus\\PendingChain \n         * @static \n         */ \n        public static function chain($jobs)\n        {\n                        /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                        return $instance->chain($jobs);\n        }\n                    /**\n         * Determine if the given command has a handler.\n         *\n         * @param mixed $command\n         * @return bool \n         * @static \n         */ \n        public static function hasCommandHandler($command)\n        {\n                        /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                        return $instance->hasCommandHandler($command);\n        }\n                    /**\n         * Retrieve the handler for a command.\n         *\n         * @param mixed $command\n         * @return bool|mixed \n         * @static \n         */ \n        public static function getCommandHandler($command)\n        {\n                        /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                        return $instance->getCommandHandler($command);\n        }\n                    /**\n         * Dispatch a command to its appropriate handler behind a queue.\n         *\n         * @param mixed $command\n         * @return mixed \n         * @throws \\RuntimeException\n         * @static \n         */ \n        public static function dispatchToQueue($command)\n        {\n                        /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                        return $instance->dispatchToQueue($command);\n        }\n                    /**\n         * Dispatch a command to its appropriate handler after the current process.\n         *\n         * @param mixed $command\n         * @param mixed $handler\n         * @return void \n         * @static \n         */ \n        public static function dispatchAfterResponse($command, $handler = null)\n        {\n                        /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                        $instance->dispatchAfterResponse($command, $handler);\n        }\n                    /**\n         * Set the pipes through which commands should be piped before dispatching.\n         *\n         * @param array $pipes\n         * @return \\Illuminate\\Bus\\Dispatcher \n         * @static \n         */ \n        public static function pipeThrough($pipes)\n        {\n                        /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                        return $instance->pipeThrough($pipes);\n        }\n                    /**\n         * Map a command to a handler.\n         *\n         * @param array $map\n         * @return \\Illuminate\\Bus\\Dispatcher \n         * @static \n         */ \n        public static function map($map)\n        {\n                        /** @var \\Illuminate\\Bus\\Dispatcher $instance */\n                        return $instance->map($map);\n        }\n                    /**\n         * Assert if a job was dispatched based on a truth-test callback.\n         *\n         * @param string|\\Closure $command\n         * @param callable|int|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertDispatched($command, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        $instance->assertDispatched($command, $callback);\n        }\n                    /**\n         * Assert if a job was pushed a number of times.\n         *\n         * @param string $command\n         * @param int $times\n         * @return void \n         * @static \n         */ \n        public static function assertDispatchedTimes($command, $times = 1)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        $instance->assertDispatchedTimes($command, $times);\n        }\n                    /**\n         * Determine if a job was dispatched based on a truth-test callback.\n         *\n         * @param string|\\Closure $command\n         * @param callable|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertNotDispatched($command, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        $instance->assertNotDispatched($command, $callback);\n        }\n                    /**\n         * Assert that no jobs were dispatched.\n         *\n         * @return void \n         * @static \n         */ \n        public static function assertNothingDispatched()\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        $instance->assertNothingDispatched();\n        }\n                    /**\n         * Assert if a job was explicitly dispatched synchronously based on a truth-test callback.\n         *\n         * @param string|\\Closure $command\n         * @param callable|int|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertDispatchedSync($command, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        $instance->assertDispatchedSync($command, $callback);\n        }\n                    /**\n         * Assert if a job was pushed synchronously a number of times.\n         *\n         * @param string $command\n         * @param int $times\n         * @return void \n         * @static \n         */ \n        public static function assertDispatchedSyncTimes($command, $times = 1)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        $instance->assertDispatchedSyncTimes($command, $times);\n        }\n                    /**\n         * Determine if a job was dispatched based on a truth-test callback.\n         *\n         * @param string|\\Closure $command\n         * @param callable|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertNotDispatchedSync($command, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        $instance->assertNotDispatchedSync($command, $callback);\n        }\n                    /**\n         * Assert if a job was dispatched after the response was sent based on a truth-test callback.\n         *\n         * @param string|\\Closure $command\n         * @param callable|int|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertDispatchedAfterResponse($command, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        $instance->assertDispatchedAfterResponse($command, $callback);\n        }\n                    /**\n         * Assert if a job was pushed after the response was sent a number of times.\n         *\n         * @param string $command\n         * @param int $times\n         * @return void \n         * @static \n         */ \n        public static function assertDispatchedAfterResponseTimes($command, $times = 1)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        $instance->assertDispatchedAfterResponseTimes($command, $times);\n        }\n                    /**\n         * Determine if a job was dispatched based on a truth-test callback.\n         *\n         * @param string|\\Closure $command\n         * @param callable|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertNotDispatchedAfterResponse($command, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        $instance->assertNotDispatchedAfterResponse($command, $callback);\n        }\n                    /**\n         * Assert if a chain of jobs was dispatched.\n         *\n         * @param array $expectedChain\n         * @return void \n         * @static \n         */ \n        public static function assertChained($expectedChain)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        $instance->assertChained($expectedChain);\n        }\n                    /**\n         * Assert if a job was dispatched with an empty chain based on a truth-test callback.\n         *\n         * @param string|\\Closure $command\n         * @param callable|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertDispatchedWithoutChain($command, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        $instance->assertDispatchedWithoutChain($command, $callback);\n        }\n                    /**\n         * Assert if a batch was dispatched based on a truth-test callback.\n         *\n         * @param callable $callback\n         * @return void \n         * @static \n         */ \n        public static function assertBatched($callback)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        $instance->assertBatched($callback);\n        }\n                    /**\n         * Assert the number of batches that have been dispatched.\n         *\n         * @param int $count\n         * @return void \n         * @static \n         */ \n        public static function assertBatchCount($count)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        $instance->assertBatchCount($count);\n        }\n                    /**\n         * Get all of the jobs matching a truth-test callback.\n         *\n         * @param string $command\n         * @param callable|null $callback\n         * @return \\Illuminate\\Support\\Collection \n         * @static \n         */ \n        public static function dispatched($command, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        return $instance->dispatched($command, $callback);\n        }\n                    /**\n         * Get all of the jobs dispatched synchronously matching a truth-test callback.\n         *\n         * @param string $command\n         * @param callable|null $callback\n         * @return \\Illuminate\\Support\\Collection \n         * @static \n         */ \n        public static function dispatchedSync($command, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        return $instance->dispatchedSync($command, $callback);\n        }\n                    /**\n         * Get all of the jobs dispatched after the response was sent matching a truth-test callback.\n         *\n         * @param string $command\n         * @param callable|null $callback\n         * @return \\Illuminate\\Support\\Collection \n         * @static \n         */ \n        public static function dispatchedAfterResponse($command, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        return $instance->dispatchedAfterResponse($command, $callback);\n        }\n                    /**\n         * Get all of the pending batches matching a truth-test callback.\n         *\n         * @param callable $callback\n         * @return \\Illuminate\\Support\\Collection \n         * @static \n         */ \n        public static function batched($callback)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        return $instance->batched($callback);\n        }\n                    /**\n         * Determine if there are any stored commands for a given class.\n         *\n         * @param string $command\n         * @return bool \n         * @static \n         */ \n        public static function hasDispatched($command)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        return $instance->hasDispatched($command);\n        }\n                    /**\n         * Determine if there are any stored commands for a given class.\n         *\n         * @param string $command\n         * @return bool \n         * @static \n         */ \n        public static function hasDispatchedSync($command)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        return $instance->hasDispatchedSync($command);\n        }\n                    /**\n         * Determine if there are any stored commands for a given class.\n         *\n         * @param string $command\n         * @return bool \n         * @static \n         */ \n        public static function hasDispatchedAfterResponse($command)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        return $instance->hasDispatchedAfterResponse($command);\n        }\n                    /**\n         * Record the fake pending batch dispatch.\n         *\n         * @param \\Illuminate\\Bus\\PendingBatch $pendingBatch\n         * @return \\Illuminate\\Bus\\Batch \n         * @static \n         */ \n        public static function recordPendingBatch($pendingBatch)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\BusFake $instance */\n                        return $instance->recordPendingBatch($pendingBatch);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Cache\\CacheManager\n     * @see \\Illuminate\\Cache\\Repository\n     */ \n        class Cache {\n                    /**\n         * Get a cache store instance by name, wrapped in a repository.\n         *\n         * @param string|null $name\n         * @return \\Illuminate\\Contracts\\Cache\\Repository \n         * @static \n         */ \n        public static function store($name = null)\n        {\n                        /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                        return $instance->store($name);\n        }\n                    /**\n         * Get a cache driver instance.\n         *\n         * @param string|null $driver\n         * @return \\Illuminate\\Contracts\\Cache\\Repository \n         * @static \n         */ \n        public static function driver($driver = null)\n        {\n                        /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                        return $instance->driver($driver);\n        }\n                    /**\n         * Create a new cache repository with the given implementation.\n         *\n         * @param \\Illuminate\\Contracts\\Cache\\Store $store\n         * @return \\Illuminate\\Cache\\Repository \n         * @static \n         */ \n        public static function repository($store)\n        {\n                        /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                        return $instance->repository($store);\n        }\n                    /**\n         * Re-set the event dispatcher on all resolved cache repositories.\n         *\n         * @return void \n         * @static \n         */ \n        public static function refreshEventDispatcher()\n        {\n                        /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                        $instance->refreshEventDispatcher();\n        }\n                    /**\n         * Get the default cache driver name.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDefaultDriver()\n        {\n                        /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                        return $instance->getDefaultDriver();\n        }\n                    /**\n         * Set the default cache driver name.\n         *\n         * @param string $name\n         * @return void \n         * @static \n         */ \n        public static function setDefaultDriver($name)\n        {\n                        /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                        $instance->setDefaultDriver($name);\n        }\n                    /**\n         * Unset the given driver instances.\n         *\n         * @param array|string|null $name\n         * @return \\Illuminate\\Cache\\CacheManager \n         * @static \n         */ \n        public static function forgetDriver($name = null)\n        {\n                        /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                        return $instance->forgetDriver($name);\n        }\n                    /**\n         * Disconnect the given driver and remove from local cache.\n         *\n         * @param string|null $name\n         * @return void \n         * @static \n         */ \n        public static function purge($name = null)\n        {\n                        /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                        $instance->purge($name);\n        }\n                    /**\n         * Register a custom driver creator Closure.\n         *\n         * @param string $driver\n         * @param \\Closure $callback\n         * @return \\Illuminate\\Cache\\CacheManager \n         * @static \n         */ \n        public static function extend($driver, $callback)\n        {\n                        /** @var \\Illuminate\\Cache\\CacheManager $instance */\n                        return $instance->extend($driver, $callback);\n        }\n                    /**\n         * Determine if an item exists in the cache.\n         *\n         * @param string $key\n         * @return bool \n         * @static \n         */ \n        public static function has($key)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->has($key);\n        }\n                    /**\n         * Determine if an item doesn't exist in the cache.\n         *\n         * @param string $key\n         * @return bool \n         * @static \n         */ \n        public static function missing($key)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->missing($key);\n        }\n                    /**\n         * Retrieve an item from the cache by key.\n         *\n         * @param string $key\n         * @param mixed $default\n         * @return mixed \n         * @static \n         */ \n        public static function get($key, $default = null)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->get($key, $default);\n        }\n                    /**\n         * Retrieve multiple items from the cache by key.\n         * \n         * Items not found in the cache will have a null value.\n         *\n         * @param array $keys\n         * @return array \n         * @static \n         */ \n        public static function many($keys)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->many($keys);\n        }\n                    /**\n         * Obtains multiple cache items by their unique keys.\n         *\n         * @return \\Illuminate\\Cache\\iterable \n         * @param \\Psr\\SimpleCache\\iterable $keys A list of keys that can obtained in a single operation.\n         * @param mixed $default Default value to return for keys that do not exist.\n         * @return \\Psr\\SimpleCache\\iterable A list of key => value pairs. Cache keys that do not exist or are stale will have $default as value.\n         * @throws \\Psr\\SimpleCache\\InvalidArgumentException\n         *   MUST be thrown if $keys is neither an array nor a Traversable,\n         *   or if any of the $keys are not a legal value.\n         * @static \n         */ \n        public static function getMultiple($keys, $default = null)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->getMultiple($keys, $default);\n        }\n                    /**\n         * Retrieve an item from the cache and delete it.\n         *\n         * @param string $key\n         * @param mixed $default\n         * @return mixed \n         * @static \n         */ \n        public static function pull($key, $default = null)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->pull($key, $default);\n        }\n                    /**\n         * Store an item in the cache.\n         *\n         * @param string $key\n         * @param mixed $value\n         * @param \\DateTimeInterface|\\DateInterval|int|null $ttl\n         * @return bool \n         * @static \n         */ \n        public static function put($key, $value, $ttl = null)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->put($key, $value, $ttl);\n        }\n                    /**\n         * Persists data in the cache, uniquely referenced by a key with an optional expiration TTL time.\n         *\n         * @return bool \n         * @param string $key The key of the item to store.\n         * @param mixed $value The value of the item to store, must be serializable.\n         * @param null|int|\\DateInterval $ttl Optional. The TTL value of this item. If no value is sent and\n         *                                      the driver supports TTL then the library may set a default value\n         *                                      for it or let the driver take care of that.\n         * @return bool True on success and false on failure.\n         * @throws \\Psr\\SimpleCache\\InvalidArgumentException\n         *   MUST be thrown if the $key string is not a legal value.\n         * @static \n         */ \n        public static function set($key, $value, $ttl = null)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->set($key, $value, $ttl);\n        }\n                    /**\n         * Store multiple items in the cache for a given number of seconds.\n         *\n         * @param array $values\n         * @param \\DateTimeInterface|\\DateInterval|int|null $ttl\n         * @return bool \n         * @static \n         */ \n        public static function putMany($values, $ttl = null)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->putMany($values, $ttl);\n        }\n                    /**\n         * Persists a set of key => value pairs in the cache, with an optional TTL.\n         *\n         * @return bool \n         * @param \\Psr\\SimpleCache\\iterable $values A list of key => value pairs for a multiple-set operation.\n         * @param null|int|\\DateInterval $ttl Optional. The TTL value of this item. If no value is sent and\n         *                                       the driver supports TTL then the library may set a default value\n         *                                       for it or let the driver take care of that.\n         * @return bool True on success and false on failure.\n         * @throws \\Psr\\SimpleCache\\InvalidArgumentException\n         *   MUST be thrown if $values is neither an array nor a Traversable,\n         *   or if any of the $values are not a legal value.\n         * @static \n         */ \n        public static function setMultiple($values, $ttl = null)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->setMultiple($values, $ttl);\n        }\n                    /**\n         * Store an item in the cache if the key does not exist.\n         *\n         * @param string $key\n         * @param mixed $value\n         * @param \\DateTimeInterface|\\DateInterval|int|null $ttl\n         * @return bool \n         * @static \n         */ \n        public static function add($key, $value, $ttl = null)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->add($key, $value, $ttl);\n        }\n                    /**\n         * Increment the value of an item in the cache.\n         *\n         * @param string $key\n         * @param mixed $value\n         * @return int|bool \n         * @static \n         */ \n        public static function increment($key, $value = 1)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->increment($key, $value);\n        }\n                    /**\n         * Decrement the value of an item in the cache.\n         *\n         * @param string $key\n         * @param mixed $value\n         * @return int|bool \n         * @static \n         */ \n        public static function decrement($key, $value = 1)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->decrement($key, $value);\n        }\n                    /**\n         * Store an item in the cache indefinitely.\n         *\n         * @param string $key\n         * @param mixed $value\n         * @return bool \n         * @static \n         */ \n        public static function forever($key, $value)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->forever($key, $value);\n        }\n                    /**\n         * Get an item from the cache, or execute the given Closure and store the result.\n         *\n         * @param string $key\n         * @param \\Closure|\\DateTimeInterface|\\DateInterval|int|null $ttl\n         * @param \\Closure $callback\n         * @return mixed \n         * @static \n         */ \n        public static function remember($key, $ttl, $callback)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->remember($key, $ttl, $callback);\n        }\n                    /**\n         * Get an item from the cache, or execute the given Closure and store the result forever.\n         *\n         * @param string $key\n         * @param \\Closure $callback\n         * @return mixed \n         * @static \n         */ \n        public static function sear($key, $callback)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->sear($key, $callback);\n        }\n                    /**\n         * Get an item from the cache, or execute the given Closure and store the result forever.\n         *\n         * @param string $key\n         * @param \\Closure $callback\n         * @return mixed \n         * @static \n         */ \n        public static function rememberForever($key, $callback)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->rememberForever($key, $callback);\n        }\n                    /**\n         * Remove an item from the cache.\n         *\n         * @param string $key\n         * @return bool \n         * @static \n         */ \n        public static function forget($key)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->forget($key);\n        }\n                    /**\n         * Delete an item from the cache by its unique key.\n         *\n         * @return bool \n         * @param string $key The unique cache key of the item to delete.\n         * @return bool True if the item was successfully removed. False if there was an error.\n         * @throws \\Psr\\SimpleCache\\InvalidArgumentException\n         *   MUST be thrown if the $key string is not a legal value.\n         * @static \n         */ \n        public static function delete($key)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->delete($key);\n        }\n                    /**\n         * Deletes multiple cache items in a single operation.\n         *\n         * @return bool \n         * @param \\Psr\\SimpleCache\\iterable $keys A list of string-based keys to be deleted.\n         * @return bool True if the items were successfully removed. False if there was an error.\n         * @throws \\Psr\\SimpleCache\\InvalidArgumentException\n         *   MUST be thrown if $keys is neither an array nor a Traversable,\n         *   or if any of the $keys are not a legal value.\n         * @static \n         */ \n        public static function deleteMultiple($keys)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->deleteMultiple($keys);\n        }\n                    /**\n         * Wipes clean the entire cache's keys.\n         *\n         * @return bool \n         * @return bool True on success and false on failure.\n         * @static \n         */ \n        public static function clear()\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->clear();\n        }\n                    /**\n         * Begin executing a new tags operation if the store supports it.\n         *\n         * @param array|mixed $names\n         * @return \\Illuminate\\Cache\\TaggedCache \n         * @throws \\BadMethodCallException\n         * @static \n         */ \n        public static function tags($names)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->tags($names);\n        }\n                    /**\n         * Determine if the current store supports tags.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function supportsTags()\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->supportsTags();\n        }\n                    /**\n         * Get the default cache time.\n         *\n         * @return int|null \n         * @static \n         */ \n        public static function getDefaultCacheTime()\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->getDefaultCacheTime();\n        }\n                    /**\n         * Set the default cache time in seconds.\n         *\n         * @param int|null $seconds\n         * @return \\Illuminate\\Cache\\Repository \n         * @static \n         */ \n        public static function setDefaultCacheTime($seconds)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->setDefaultCacheTime($seconds);\n        }\n                    /**\n         * Get the cache store implementation.\n         *\n         * @return \\Illuminate\\Contracts\\Cache\\Store \n         * @static \n         */ \n        public static function getStore()\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->getStore();\n        }\n                    /**\n         * Get the event dispatcher instance.\n         *\n         * @return \\Illuminate\\Contracts\\Events\\Dispatcher \n         * @static \n         */ \n        public static function getEventDispatcher()\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->getEventDispatcher();\n        }\n                    /**\n         * Set the event dispatcher instance.\n         *\n         * @param \\Illuminate\\Contracts\\Events\\Dispatcher $events\n         * @return void \n         * @static \n         */ \n        public static function setEventDispatcher($events)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        $instance->setEventDispatcher($events);\n        }\n                    /**\n         * Determine if a cached value exists.\n         *\n         * @param string $key\n         * @return bool \n         * @static \n         */ \n        public static function offsetExists($key)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->offsetExists($key);\n        }\n                    /**\n         * Retrieve an item from the cache by key.\n         *\n         * @param string $key\n         * @return mixed \n         * @static \n         */ \n        public static function offsetGet($key)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->offsetGet($key);\n        }\n                    /**\n         * Store an item in the cache for the default time.\n         *\n         * @param string $key\n         * @param mixed $value\n         * @return void \n         * @static \n         */ \n        public static function offsetSet($key, $value)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        $instance->offsetSet($key, $value);\n        }\n                    /**\n         * Remove an item from the cache.\n         *\n         * @param string $key\n         * @return void \n         * @static \n         */ \n        public static function offsetUnset($key)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        $instance->offsetUnset($key);\n        }\n                    /**\n         * Register a custom macro.\n         *\n         * @param string $name\n         * @param object|callable $macro\n         * @return void \n         * @static \n         */ \n        public static function macro($name, $macro)\n        {\n                        \\Illuminate\\Cache\\Repository::macro($name, $macro);\n        }\n                    /**\n         * Mix another object into the class.\n         *\n         * @param object $mixin\n         * @param bool $replace\n         * @return void \n         * @throws \\ReflectionException\n         * @static \n         */ \n        public static function mixin($mixin, $replace = true)\n        {\n                        \\Illuminate\\Cache\\Repository::mixin($mixin, $replace);\n        }\n                    /**\n         * Checks if macro is registered.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function hasMacro($name)\n        {\n                        return \\Illuminate\\Cache\\Repository::hasMacro($name);\n        }\n                    /**\n         * Flush the existing macros.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flushMacros()\n        {\n                        \\Illuminate\\Cache\\Repository::flushMacros();\n        }\n                    /**\n         * Dynamically handle calls to the class.\n         *\n         * @param string $method\n         * @param array $parameters\n         * @return mixed \n         * @throws \\BadMethodCallException\n         * @static \n         */ \n        public static function macroCall($method, $parameters)\n        {\n                        /** @var \\Illuminate\\Cache\\Repository $instance */\n                        return $instance->macroCall($method, $parameters);\n        }\n                    /**\n         * Get a lock instance.\n         *\n         * @param string $name\n         * @param int $seconds\n         * @param string|null $owner\n         * @return \\Illuminate\\Contracts\\Cache\\Lock \n         * @static \n         */ \n        public static function lock($name, $seconds = 0, $owner = null)\n        {\n                        /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                        return $instance->lock($name, $seconds, $owner);\n        }\n                    /**\n         * Restore a lock instance using the owner identifier.\n         *\n         * @param string $name\n         * @param string $owner\n         * @return \\Illuminate\\Contracts\\Cache\\Lock \n         * @static \n         */ \n        public static function restoreLock($name, $owner)\n        {\n                        /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                        return $instance->restoreLock($name, $owner);\n        }\n                    /**\n         * Remove all items from the cache.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function flush()\n        {\n                        /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                        return $instance->flush();\n        }\n                    /**\n         * Get the Redis connection instance.\n         *\n         * @return \\Illuminate\\Redis\\Connections\\Connection \n         * @static \n         */ \n        public static function connection()\n        {\n                        /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                        return $instance->connection();\n        }\n                    /**\n         * Get the Redis connection instance that should be used to manage locks.\n         *\n         * @return \\Illuminate\\Redis\\Connections\\Connection \n         * @static \n         */ \n        public static function lockConnection()\n        {\n                        /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                        return $instance->lockConnection();\n        }\n                    /**\n         * Specify the name of the connection that should be used to store data.\n         *\n         * @param string $connection\n         * @return void \n         * @static \n         */ \n        public static function setConnection($connection)\n        {\n                        /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                        $instance->setConnection($connection);\n        }\n                    /**\n         * Specify the name of the connection that should be used to manage locks.\n         *\n         * @param string $connection\n         * @return \\Illuminate\\Cache\\RedisStore \n         * @static \n         */ \n        public static function setLockConnection($connection)\n        {\n                        /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                        return $instance->setLockConnection($connection);\n        }\n                    /**\n         * Get the Redis database instance.\n         *\n         * @return \\Illuminate\\Contracts\\Redis\\Factory \n         * @static \n         */ \n        public static function getRedis()\n        {\n                        /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                        return $instance->getRedis();\n        }\n                    /**\n         * Get the cache key prefix.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getPrefix()\n        {\n                        /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                        return $instance->getPrefix();\n        }\n                    /**\n         * Set the cache key prefix.\n         *\n         * @param string $prefix\n         * @return void \n         * @static \n         */ \n        public static function setPrefix($prefix)\n        {\n                        /** @var \\Illuminate\\Cache\\RedisStore $instance */\n                        $instance->setPrefix($prefix);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Config\\Repository\n     */ \n        class Config {\n                    /**\n         * Determine if the given configuration value exists.\n         *\n         * @param string $key\n         * @return bool \n         * @static \n         */ \n        public static function has($key)\n        {\n                        /** @var \\Illuminate\\Config\\Repository $instance */\n                        return $instance->has($key);\n        }\n                    /**\n         * Get the specified configuration value.\n         *\n         * @param array|string $key\n         * @param mixed $default\n         * @return mixed \n         * @static \n         */ \n        public static function get($key, $default = null)\n        {\n                        /** @var \\Illuminate\\Config\\Repository $instance */\n                        return $instance->get($key, $default);\n        }\n                    /**\n         * Get many configuration values.\n         *\n         * @param array $keys\n         * @return array \n         * @static \n         */ \n        public static function getMany($keys)\n        {\n                        /** @var \\Illuminate\\Config\\Repository $instance */\n                        return $instance->getMany($keys);\n        }\n                    /**\n         * Set a given configuration value.\n         *\n         * @param array|string $key\n         * @param mixed $value\n         * @return void \n         * @static \n         */ \n        public static function set($key, $value = null)\n        {\n                        /** @var \\Illuminate\\Config\\Repository $instance */\n                        $instance->set($key, $value);\n        }\n                    /**\n         * Prepend a value onto an array configuration value.\n         *\n         * @param string $key\n         * @param mixed $value\n         * @return void \n         * @static \n         */ \n        public static function prepend($key, $value)\n        {\n                        /** @var \\Illuminate\\Config\\Repository $instance */\n                        $instance->prepend($key, $value);\n        }\n                    /**\n         * Push a value onto an array configuration value.\n         *\n         * @param string $key\n         * @param mixed $value\n         * @return void \n         * @static \n         */ \n        public static function push($key, $value)\n        {\n                        /** @var \\Illuminate\\Config\\Repository $instance */\n                        $instance->push($key, $value);\n        }\n                    /**\n         * Get all of the configuration items for the application.\n         *\n         * @return array \n         * @static \n         */ \n        public static function all()\n        {\n                        /** @var \\Illuminate\\Config\\Repository $instance */\n                        return $instance->all();\n        }\n                    /**\n         * Determine if the given configuration option exists.\n         *\n         * @param string $key\n         * @return bool \n         * @static \n         */ \n        public static function offsetExists($key)\n        {\n                        /** @var \\Illuminate\\Config\\Repository $instance */\n                        return $instance->offsetExists($key);\n        }\n                    /**\n         * Get a configuration option.\n         *\n         * @param string $key\n         * @return mixed \n         * @static \n         */ \n        public static function offsetGet($key)\n        {\n                        /** @var \\Illuminate\\Config\\Repository $instance */\n                        return $instance->offsetGet($key);\n        }\n                    /**\n         * Set a configuration option.\n         *\n         * @param string $key\n         * @param mixed $value\n         * @return void \n         * @static \n         */ \n        public static function offsetSet($key, $value)\n        {\n                        /** @var \\Illuminate\\Config\\Repository $instance */\n                        $instance->offsetSet($key, $value);\n        }\n                    /**\n         * Unset a configuration option.\n         *\n         * @param string $key\n         * @return void \n         * @static \n         */ \n        public static function offsetUnset($key)\n        {\n                        /** @var \\Illuminate\\Config\\Repository $instance */\n                        $instance->offsetUnset($key);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Cookie\\CookieJar\n     */ \n        class Cookie {\n                    /**\n         * Create a new cookie instance.\n         *\n         * @param string $name\n         * @param string $value\n         * @param int $minutes\n         * @param string|null $path\n         * @param string|null $domain\n         * @param bool|null $secure\n         * @param bool $httpOnly\n         * @param bool $raw\n         * @param string|null $sameSite\n         * @return \\Symfony\\Component\\HttpFoundation\\Cookie \n         * @static \n         */ \n        public static function make($name, $value, $minutes = 0, $path = null, $domain = null, $secure = null, $httpOnly = true, $raw = false, $sameSite = null)\n        {\n                        /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                        return $instance->make($name, $value, $minutes, $path, $domain, $secure, $httpOnly, $raw, $sameSite);\n        }\n                    /**\n         * Create a cookie that lasts \"forever\" (five years).\n         *\n         * @param string $name\n         * @param string $value\n         * @param string|null $path\n         * @param string|null $domain\n         * @param bool|null $secure\n         * @param bool $httpOnly\n         * @param bool $raw\n         * @param string|null $sameSite\n         * @return \\Symfony\\Component\\HttpFoundation\\Cookie \n         * @static \n         */ \n        public static function forever($name, $value, $path = null, $domain = null, $secure = null, $httpOnly = true, $raw = false, $sameSite = null)\n        {\n                        /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                        return $instance->forever($name, $value, $path, $domain, $secure, $httpOnly, $raw, $sameSite);\n        }\n                    /**\n         * Expire the given cookie.\n         *\n         * @param string $name\n         * @param string|null $path\n         * @param string|null $domain\n         * @return \\Symfony\\Component\\HttpFoundation\\Cookie \n         * @static \n         */ \n        public static function forget($name, $path = null, $domain = null)\n        {\n                        /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                        return $instance->forget($name, $path, $domain);\n        }\n                    /**\n         * Determine if a cookie has been queued.\n         *\n         * @param string $key\n         * @param string|null $path\n         * @return bool \n         * @static \n         */ \n        public static function hasQueued($key, $path = null)\n        {\n                        /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                        return $instance->hasQueued($key, $path);\n        }\n                    /**\n         * Get a queued cookie instance.\n         *\n         * @param string $key\n         * @param mixed $default\n         * @param string|null $path\n         * @return \\Symfony\\Component\\HttpFoundation\\Cookie|null \n         * @static \n         */ \n        public static function queued($key, $default = null, $path = null)\n        {\n                        /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                        return $instance->queued($key, $default, $path);\n        }\n                    /**\n         * Queue a cookie to send with the next response.\n         *\n         * @param array $parameters\n         * @return void \n         * @static \n         */ \n        public static function queue(...$parameters)\n        {\n                        /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                        $instance->queue(...$parameters);\n        }\n                    /**\n         * Queue a cookie to expire with the next response.\n         *\n         * @param string $name\n         * @param string|null $path\n         * @param string|null $domain\n         * @return void \n         * @static \n         */ \n        public static function expire($name, $path = null, $domain = null)\n        {\n                        /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                        $instance->expire($name, $path, $domain);\n        }\n                    /**\n         * Remove a cookie from the queue.\n         *\n         * @param string $name\n         * @param string|null $path\n         * @return void \n         * @static \n         */ \n        public static function unqueue($name, $path = null)\n        {\n                        /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                        $instance->unqueue($name, $path);\n        }\n                    /**\n         * Set the default path and domain for the jar.\n         *\n         * @param string $path\n         * @param string $domain\n         * @param bool $secure\n         * @param string|null $sameSite\n         * @return \\Illuminate\\Cookie\\CookieJar \n         * @static \n         */ \n        public static function setDefaultPathAndDomain($path, $domain, $secure = false, $sameSite = null)\n        {\n                        /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                        return $instance->setDefaultPathAndDomain($path, $domain, $secure, $sameSite);\n        }\n                    /**\n         * Get the cookies which have been queued for the next request.\n         *\n         * @return \\Symfony\\Component\\HttpFoundation\\Cookie[] \n         * @static \n         */ \n        public static function getQueuedCookies()\n        {\n                        /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                        return $instance->getQueuedCookies();\n        }\n                    /**\n         * Flush the cookies which have been queued for the next request.\n         *\n         * @return \\Illuminate\\Cookie\\CookieJar \n         * @static \n         */ \n        public static function flushQueuedCookies()\n        {\n                        /** @var \\Illuminate\\Cookie\\CookieJar $instance */\n                        return $instance->flushQueuedCookies();\n        }\n                    /**\n         * Register a custom macro.\n         *\n         * @param string $name\n         * @param object|callable $macro\n         * @return void \n         * @static \n         */ \n        public static function macro($name, $macro)\n        {\n                        \\Illuminate\\Cookie\\CookieJar::macro($name, $macro);\n        }\n                    /**\n         * Mix another object into the class.\n         *\n         * @param object $mixin\n         * @param bool $replace\n         * @return void \n         * @throws \\ReflectionException\n         * @static \n         */ \n        public static function mixin($mixin, $replace = true)\n        {\n                        \\Illuminate\\Cookie\\CookieJar::mixin($mixin, $replace);\n        }\n                    /**\n         * Checks if macro is registered.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function hasMacro($name)\n        {\n                        return \\Illuminate\\Cookie\\CookieJar::hasMacro($name);\n        }\n                    /**\n         * Flush the existing macros.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flushMacros()\n        {\n                        \\Illuminate\\Cookie\\CookieJar::flushMacros();\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Encryption\\Encrypter\n     */ \n        class Crypt {\n                    /**\n         * Determine if the given key and cipher combination is valid.\n         *\n         * @param string $key\n         * @param string $cipher\n         * @return bool \n         * @static \n         */ \n        public static function supported($key, $cipher)\n        {\n                        return \\Illuminate\\Encryption\\Encrypter::supported($key, $cipher);\n        }\n                    /**\n         * Create a new encryption key for the given cipher.\n         *\n         * @param string $cipher\n         * @return string \n         * @static \n         */ \n        public static function generateKey($cipher)\n        {\n                        return \\Illuminate\\Encryption\\Encrypter::generateKey($cipher);\n        }\n                    /**\n         * Encrypt the given value.\n         *\n         * @param mixed $value\n         * @param bool $serialize\n         * @return string \n         * @throws \\Illuminate\\Contracts\\Encryption\\EncryptException\n         * @static \n         */ \n        public static function encrypt($value, $serialize = true)\n        {\n                        /** @var \\Illuminate\\Encryption\\Encrypter $instance */\n                        return $instance->encrypt($value, $serialize);\n        }\n                    /**\n         * Encrypt a string without serialization.\n         *\n         * @param string $value\n         * @return string \n         * @throws \\Illuminate\\Contracts\\Encryption\\EncryptException\n         * @static \n         */ \n        public static function encryptString($value)\n        {\n                        /** @var \\Illuminate\\Encryption\\Encrypter $instance */\n                        return $instance->encryptString($value);\n        }\n                    /**\n         * Decrypt the given value.\n         *\n         * @param string $payload\n         * @param bool $unserialize\n         * @return mixed \n         * @throws \\Illuminate\\Contracts\\Encryption\\DecryptException\n         * @static \n         */ \n        public static function decrypt($payload, $unserialize = true)\n        {\n                        /** @var \\Illuminate\\Encryption\\Encrypter $instance */\n                        return $instance->decrypt($payload, $unserialize);\n        }\n                    /**\n         * Decrypt the given string without unserialization.\n         *\n         * @param string $payload\n         * @return string \n         * @throws \\Illuminate\\Contracts\\Encryption\\DecryptException\n         * @static \n         */ \n        public static function decryptString($payload)\n        {\n                        /** @var \\Illuminate\\Encryption\\Encrypter $instance */\n                        return $instance->decryptString($payload);\n        }\n                    /**\n         * Get the encryption key.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getKey()\n        {\n                        /** @var \\Illuminate\\Encryption\\Encrypter $instance */\n                        return $instance->getKey();\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see https://carbon.nesbot.com/docs/\n     * @see https://github.com/briannesbitt/Carbon/blob/master/src/Carbon/Factory.php\n     * @method static \\Illuminate\\Support\\Carbon create($year = 0, $month = 1, $day = 1, $hour = 0, $minute = 0, $second = 0, $tz = null)\n     * @method static \\Illuminate\\Support\\Carbon createFromDate($year = null, $month = null, $day = null, $tz = null)\n     * @method static \\Illuminate\\Support\\Carbon createFromTime($hour = 0, $minute = 0, $second = 0, $tz = null)\n     * @method static \\Illuminate\\Support\\Carbon createFromTimeString($time, $tz = null)\n     * @method static \\Illuminate\\Support\\Carbon createFromTimestamp($timestamp, $tz = null)\n     * @method static \\Illuminate\\Support\\Carbon createFromTimestampMs($timestamp, $tz = null)\n     * @method static \\Illuminate\\Support\\Carbon createFromTimestampUTC($timestamp)\n     * @method static \\Illuminate\\Support\\Carbon createMidnightDate($year = null, $month = null, $day = null, $tz = null)\n     * @method static \\Illuminate\\Support\\Carbon disableHumanDiffOption($humanDiffOption)\n     * @method static \\Illuminate\\Support\\Carbon enableHumanDiffOption($humanDiffOption)\n     * @method static \\Illuminate\\Support\\Carbon fromSerialized($value)\n     * @method static \\Illuminate\\Support\\Carbon getLastErrors()\n     * @method static \\Illuminate\\Support\\Carbon getTestNow()\n     * @method static \\Illuminate\\Support\\Carbon instance($date)\n     * @method static \\Illuminate\\Support\\Carbon isMutable()\n     * @method static \\Illuminate\\Support\\Carbon maxValue()\n     * @method static \\Illuminate\\Support\\Carbon minValue()\n     * @method static \\Illuminate\\Support\\Carbon now($tz = null)\n     * @method static \\Illuminate\\Support\\Carbon parse($time = null, $tz = null)\n     * @method static \\Illuminate\\Support\\Carbon setHumanDiffOptions($humanDiffOptions)\n     * @method static void setTestNow($testNow = null)\n     * @method static \\Illuminate\\Support\\Carbon setUtf8($utf8)\n     * @method static \\Illuminate\\Support\\Carbon today($tz = null)\n     * @method static \\Illuminate\\Support\\Carbon tomorrow($tz = null)\n     * @method static \\Illuminate\\Support\\Carbon useStrictMode($strictModeEnabled = true)\n     * @method static \\Illuminate\\Support\\Carbon yesterday($tz = null)\n     * @method static \\Illuminate\\Support\\Carbon|false createFromFormat($format, $time, $tz = null)\n     * @method static \\Illuminate\\Support\\Carbon|false createSafe($year = null, $month = null, $day = null, $hour = null, $minute = null, $second = null, $tz = null)\n     * @method static \\Illuminate\\Support\\Carbon|null make($var)\n     * @method static \\Symfony\\Component\\Translation\\TranslatorInterface getTranslator()\n     * @method static array getAvailableLocales()\n     * @method static array getDays()\n     * @method static array getIsoUnits()\n     * @method static array getWeekendDays()\n     * @method static bool hasFormat($date, $format)\n     * @method static bool hasMacro($name)\n     * @method static bool hasRelativeKeywords($time)\n     * @method static bool hasTestNow()\n     * @method static bool isImmutable()\n     * @method static bool isModifiableUnit($unit)\n     * @method static bool isStrictModeEnabled()\n     * @method static bool localeHasDiffOneDayWords($locale)\n     * @method static bool localeHasDiffSyntax($locale)\n     * @method static bool localeHasDiffTwoDayWords($locale)\n     * @method static bool localeHasPeriodSyntax($locale)\n     * @method static bool localeHasShortUnits($locale)\n     * @method static bool setLocale($locale)\n     * @method static bool shouldOverflowMonths()\n     * @method static bool shouldOverflowYears()\n     * @method static int getHumanDiffOptions()\n     * @method static int getMidDayAt()\n     * @method static int getWeekEndsAt()\n     * @method static int getWeekStartsAt()\n     * @method static mixed executeWithLocale($locale, $func)\n     * @method static string getLocale()\n     * @method static string pluralUnit(string $unit)\n     * @method static string singularUnit(string $unit)\n     * @method static void macro($name, $macro)\n     * @method static void mixin($mixin)\n     * @method static void resetMonthsOverflow()\n     * @method static void resetToStringFormat()\n     * @method static void resetYearsOverflow()\n     * @method static void serializeUsing($callback)\n     * @method static void setMidDayAt($hour)\n     * @method static void setToStringFormat($format)\n     * @method static void setTranslator(\\Symfony\\Component\\Translation\\TranslatorInterface $translator)\n     * @method static void setWeekEndsAt($day)\n     * @method static void setWeekStartsAt($day)\n     * @method static void setWeekendDays($days)\n     * @method static void useMonthsOverflow($monthsOverflow = true)\n     * @method static void useYearsOverflow($yearsOverflow = true)\n     */ \n        class Date {\n                    /**\n         * Use the given handler when generating dates (class name, callable, or factory).\n         *\n         * @param mixed $handler\n         * @return mixed \n         * @throws \\InvalidArgumentException\n         * @static \n         */ \n        public static function use($handler)\n        {\n                        return \\Illuminate\\Support\\DateFactory::use($handler);\n        }\n                    /**\n         * Use the default date class when generating dates.\n         *\n         * @return void \n         * @static \n         */ \n        public static function useDefault()\n        {\n                        \\Illuminate\\Support\\DateFactory::useDefault();\n        }\n                    /**\n         * Execute the given callable on each date creation.\n         *\n         * @param callable $callable\n         * @return void \n         * @static \n         */ \n        public static function useCallable($callable)\n        {\n                        \\Illuminate\\Support\\DateFactory::useCallable($callable);\n        }\n                    /**\n         * Use the given date type (class) when generating dates.\n         *\n         * @param string $dateClass\n         * @return void \n         * @static \n         */ \n        public static function useClass($dateClass)\n        {\n                        \\Illuminate\\Support\\DateFactory::useClass($dateClass);\n        }\n                    /**\n         * Use the given Carbon factory when generating dates.\n         *\n         * @param object $factory\n         * @return void \n         * @static \n         */ \n        public static function useFactory($factory)\n        {\n                        \\Illuminate\\Support\\DateFactory::useFactory($factory);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Database\\DatabaseManager\n     * @see \\Illuminate\\Database\\Connection\n     */ \n        class DB {\n                    /**\n         * Get a database connection instance.\n         *\n         * @param string|null $name\n         * @return \\Illuminate\\Database\\Connection \n         * @static \n         */ \n        public static function connection($name = null)\n        {\n                        /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                        return $instance->connection($name);\n        }\n                    /**\n         * Register a custom Doctrine type.\n         *\n         * @param string $class\n         * @param string $name\n         * @param string $type\n         * @return void \n         * @throws \\Doctrine\\DBAL\\DBALException\n         * @throws \\RuntimeException\n         * @static \n         */ \n        public static function registerDoctrineType($class, $name, $type)\n        {\n                        /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                        $instance->registerDoctrineType($class, $name, $type);\n        }\n                    /**\n         * Disconnect from the given database and remove from local cache.\n         *\n         * @param string|null $name\n         * @return void \n         * @static \n         */ \n        public static function purge($name = null)\n        {\n                        /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                        $instance->purge($name);\n        }\n                    /**\n         * Disconnect from the given database.\n         *\n         * @param string|null $name\n         * @return void \n         * @static \n         */ \n        public static function disconnect($name = null)\n        {\n                        /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                        $instance->disconnect($name);\n        }\n                    /**\n         * Reconnect to the given database.\n         *\n         * @param string|null $name\n         * @return \\Illuminate\\Database\\Connection \n         * @static \n         */ \n        public static function reconnect($name = null)\n        {\n                        /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                        return $instance->reconnect($name);\n        }\n                    /**\n         * Set the default database connection for the callback execution.\n         *\n         * @param string $name\n         * @param callable $callback\n         * @return mixed \n         * @static \n         */ \n        public static function usingConnection($name, $callback)\n        {\n                        /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                        return $instance->usingConnection($name, $callback);\n        }\n                    /**\n         * Get the default connection name.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDefaultConnection()\n        {\n                        /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                        return $instance->getDefaultConnection();\n        }\n                    /**\n         * Set the default connection name.\n         *\n         * @param string $name\n         * @return void \n         * @static \n         */ \n        public static function setDefaultConnection($name)\n        {\n                        /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                        $instance->setDefaultConnection($name);\n        }\n                    /**\n         * Get all of the support drivers.\n         *\n         * @return array \n         * @static \n         */ \n        public static function supportedDrivers()\n        {\n                        /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                        return $instance->supportedDrivers();\n        }\n                    /**\n         * Get all of the drivers that are actually available.\n         *\n         * @return array \n         * @static \n         */ \n        public static function availableDrivers()\n        {\n                        /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                        return $instance->availableDrivers();\n        }\n                    /**\n         * Register an extension connection resolver.\n         *\n         * @param string $name\n         * @param callable $resolver\n         * @return void \n         * @static \n         */ \n        public static function extend($name, $resolver)\n        {\n                        /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                        $instance->extend($name, $resolver);\n        }\n                    /**\n         * Return all of the created connections.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getConnections()\n        {\n                        /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                        return $instance->getConnections();\n        }\n                    /**\n         * Set the database reconnector callback.\n         *\n         * @param callable $reconnector\n         * @return void \n         * @static \n         */ \n        public static function setReconnector($reconnector)\n        {\n                        /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                        $instance->setReconnector($reconnector);\n        }\n                    /**\n         * Set the application instance used by the manager.\n         *\n         * @param \\Illuminate\\Contracts\\Foundation\\Application $app\n         * @return \\Illuminate\\Database\\DatabaseManager \n         * @static \n         */ \n        public static function setApplication($app)\n        {\n                        /** @var \\Illuminate\\Database\\DatabaseManager $instance */\n                        return $instance->setApplication($app);\n        }\n                    /**\n         * Determine if the connected database is a MariaDB database.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function isMaria()\n        {\n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->isMaria();\n        }\n                    /**\n         * Get a schema builder instance for the connection.\n         *\n         * @return \\Illuminate\\Database\\Schema\\MySqlBuilder \n         * @static \n         */ \n        public static function getSchemaBuilder()\n        {\n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getSchemaBuilder();\n        }\n                    /**\n         * Get the schema state for the connection.\n         *\n         * @param \\Illuminate\\Filesystem\\Filesystem|null $files\n         * @param callable|null $processFactory\n         * @return \\Illuminate\\Database\\Schema\\MySqlSchemaState \n         * @static \n         */ \n        public static function getSchemaState($files = null, $processFactory = null)\n        {\n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getSchemaState($files, $processFactory);\n        }\n                    /**\n         * Set the query grammar to the default implementation.\n         *\n         * @return void \n         * @static \n         */ \n        public static function useDefaultQueryGrammar()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->useDefaultQueryGrammar();\n        }\n                    /**\n         * Set the schema grammar to the default implementation.\n         *\n         * @return void \n         * @static \n         */ \n        public static function useDefaultSchemaGrammar()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->useDefaultSchemaGrammar();\n        }\n                    /**\n         * Set the query post processor to the default implementation.\n         *\n         * @return void \n         * @static \n         */ \n        public static function useDefaultPostProcessor()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->useDefaultPostProcessor();\n        }\n                    /**\n         * Begin a fluent query against a database table.\n         *\n         * @param \\Closure|\\Illuminate\\Database\\Query\\Builder|string $table\n         * @param string|null $as\n         * @return \\Illuminate\\Database\\Query\\Builder \n         * @static \n         */ \n        public static function table($table, $as = null)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->table($table, $as);\n        }\n                    /**\n         * Get a new query builder instance.\n         *\n         * @return \\Illuminate\\Database\\Query\\Builder \n         * @static \n         */ \n        public static function query()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->query();\n        }\n                    /**\n         * Run a select statement and return a single result.\n         *\n         * @param string $query\n         * @param array $bindings\n         * @param bool $useReadPdo\n         * @return mixed \n         * @static \n         */ \n        public static function selectOne($query, $bindings = [], $useReadPdo = true)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->selectOne($query, $bindings, $useReadPdo);\n        }\n                    /**\n         * Run a select statement against the database.\n         *\n         * @param string $query\n         * @param array $bindings\n         * @return array \n         * @static \n         */ \n        public static function selectFromWriteConnection($query, $bindings = [])\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->selectFromWriteConnection($query, $bindings);\n        }\n                    /**\n         * Run a select statement against the database.\n         *\n         * @param string $query\n         * @param array $bindings\n         * @param bool $useReadPdo\n         * @return array \n         * @static \n         */ \n        public static function select($query, $bindings = [], $useReadPdo = true)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->select($query, $bindings, $useReadPdo);\n        }\n                    /**\n         * Run a select statement against the database and returns a generator.\n         *\n         * @param string $query\n         * @param array $bindings\n         * @param bool $useReadPdo\n         * @return \\Generator \n         * @static \n         */ \n        public static function cursor($query, $bindings = [], $useReadPdo = true)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->cursor($query, $bindings, $useReadPdo);\n        }\n                    /**\n         * Run an insert statement against the database.\n         *\n         * @param string $query\n         * @param array $bindings\n         * @return bool \n         * @static \n         */ \n        public static function insert($query, $bindings = [])\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->insert($query, $bindings);\n        }\n                    /**\n         * Run an update statement against the database.\n         *\n         * @param string $query\n         * @param array $bindings\n         * @return int \n         * @static \n         */ \n        public static function update($query, $bindings = [])\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->update($query, $bindings);\n        }\n                    /**\n         * Run a delete statement against the database.\n         *\n         * @param string $query\n         * @param array $bindings\n         * @return int \n         * @static \n         */ \n        public static function delete($query, $bindings = [])\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->delete($query, $bindings);\n        }\n                    /**\n         * Execute an SQL statement and return the boolean result.\n         *\n         * @param string $query\n         * @param array $bindings\n         * @return bool \n         * @static \n         */ \n        public static function statement($query, $bindings = [])\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->statement($query, $bindings);\n        }\n                    /**\n         * Run an SQL statement and get the number of rows affected.\n         *\n         * @param string $query\n         * @param array $bindings\n         * @return int \n         * @static \n         */ \n        public static function affectingStatement($query, $bindings = [])\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->affectingStatement($query, $bindings);\n        }\n                    /**\n         * Run a raw, unprepared query against the PDO connection.\n         *\n         * @param string $query\n         * @return bool \n         * @static \n         */ \n        public static function unprepared($query)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->unprepared($query);\n        }\n                    /**\n         * Execute the given callback in \"dry run\" mode.\n         *\n         * @param \\Closure $callback\n         * @return array \n         * @static \n         */ \n        public static function pretend($callback)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->pretend($callback);\n        }\n                    /**\n         * Bind values to their parameters in the given statement.\n         *\n         * @param \\PDOStatement $statement\n         * @param array $bindings\n         * @return void \n         * @static \n         */ \n        public static function bindValues($statement, $bindings)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->bindValues($statement, $bindings);\n        }\n                    /**\n         * Prepare the query bindings for execution.\n         *\n         * @param array $bindings\n         * @return array \n         * @static \n         */ \n        public static function prepareBindings($bindings)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->prepareBindings($bindings);\n        }\n                    /**\n         * Log a query in the connection's query log.\n         *\n         * @param string $query\n         * @param array $bindings\n         * @param float|null $time\n         * @return void \n         * @static \n         */ \n        public static function logQuery($query, $bindings, $time = null)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->logQuery($query, $bindings, $time);\n        }\n                    /**\n         * Register a hook to be run just before a database query is executed.\n         *\n         * @param \\Closure $callback\n         * @return \\Illuminate\\Database\\MySqlConnection \n         * @static \n         */ \n        public static function beforeExecuting($callback)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->beforeExecuting($callback);\n        }\n                    /**\n         * Register a database query listener with the connection.\n         *\n         * @param \\Closure $callback\n         * @return void \n         * @static \n         */ \n        public static function listen($callback)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->listen($callback);\n        }\n                    /**\n         * Get a new raw query expression.\n         *\n         * @param mixed $value\n         * @return \\Illuminate\\Database\\Query\\Expression \n         * @static \n         */ \n        public static function raw($value)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->raw($value);\n        }\n                    /**\n         * Determine if the database connection has modified any database records.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function hasModifiedRecords()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->hasModifiedRecords();\n        }\n                    /**\n         * Indicate if any records have been modified.\n         *\n         * @param bool $value\n         * @return void \n         * @static \n         */ \n        public static function recordsHaveBeenModified($value = true)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->recordsHaveBeenModified($value);\n        }\n                    /**\n         * Set the record modification state.\n         *\n         * @param bool $value\n         * @return \\Illuminate\\Database\\MySqlConnection \n         * @static \n         */ \n        public static function setRecordModificationState($value)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->setRecordModificationState($value);\n        }\n                    /**\n         * Reset the record modification state.\n         *\n         * @return void \n         * @static \n         */ \n        public static function forgetRecordModificationState()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->forgetRecordModificationState();\n        }\n                    /**\n         * Indicate that the connection should use the write PDO connection for reads.\n         *\n         * @param bool $value\n         * @return \\Illuminate\\Database\\MySqlConnection \n         * @static \n         */ \n        public static function useWriteConnectionWhenReading($value = true)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->useWriteConnectionWhenReading($value);\n        }\n                    /**\n         * Is Doctrine available?\n         *\n         * @return bool \n         * @static \n         */ \n        public static function isDoctrineAvailable()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->isDoctrineAvailable();\n        }\n                    /**\n         * Get a Doctrine Schema Column instance.\n         *\n         * @param string $table\n         * @param string $column\n         * @return \\Doctrine\\DBAL\\Schema\\Column \n         * @static \n         */ \n        public static function getDoctrineColumn($table, $column)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getDoctrineColumn($table, $column);\n        }\n                    /**\n         * Get the Doctrine DBAL schema manager for the connection.\n         *\n         * @return \\Doctrine\\DBAL\\Schema\\AbstractSchemaManager \n         * @static \n         */ \n        public static function getDoctrineSchemaManager()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getDoctrineSchemaManager();\n        }\n                    /**\n         * Get the Doctrine DBAL database connection instance.\n         *\n         * @return \\Doctrine\\DBAL\\Connection \n         * @static \n         */ \n        public static function getDoctrineConnection()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getDoctrineConnection();\n        }\n                    /**\n         * Get the current PDO connection.\n         *\n         * @return \\PDO \n         * @static \n         */ \n        public static function getPdo()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getPdo();\n        }\n                    /**\n         * Get the current PDO connection parameter without executing any reconnect logic.\n         *\n         * @return \\PDO|\\Closure|null \n         * @static \n         */ \n        public static function getRawPdo()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getRawPdo();\n        }\n                    /**\n         * Get the current PDO connection used for reading.\n         *\n         * @return \\PDO \n         * @static \n         */ \n        public static function getReadPdo()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getReadPdo();\n        }\n                    /**\n         * Get the current read PDO connection parameter without executing any reconnect logic.\n         *\n         * @return \\PDO|\\Closure|null \n         * @static \n         */ \n        public static function getRawReadPdo()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getRawReadPdo();\n        }\n                    /**\n         * Set the PDO connection.\n         *\n         * @param \\PDO|\\Closure|null $pdo\n         * @return \\Illuminate\\Database\\MySqlConnection \n         * @static \n         */ \n        public static function setPdo($pdo)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->setPdo($pdo);\n        }\n                    /**\n         * Set the PDO connection used for reading.\n         *\n         * @param \\PDO|\\Closure|null $pdo\n         * @return \\Illuminate\\Database\\MySqlConnection \n         * @static \n         */ \n        public static function setReadPdo($pdo)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->setReadPdo($pdo);\n        }\n                    /**\n         * Get the database connection name.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function getName()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getName();\n        }\n                    /**\n         * Get the database connection full name.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function getNameWithReadWriteType()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getNameWithReadWriteType();\n        }\n                    /**\n         * Get an option from the configuration options.\n         *\n         * @param string|null $option\n         * @return mixed \n         * @static \n         */ \n        public static function getConfig($option = null)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getConfig($option);\n        }\n                    /**\n         * Get the PDO driver name.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDriverName()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getDriverName();\n        }\n                    /**\n         * Get the query grammar used by the connection.\n         *\n         * @return \\Illuminate\\Database\\Query\\Grammars\\Grammar \n         * @static \n         */ \n        public static function getQueryGrammar()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getQueryGrammar();\n        }\n                    /**\n         * Set the query grammar used by the connection.\n         *\n         * @param \\Illuminate\\Database\\Query\\Grammars\\Grammar $grammar\n         * @return \\Illuminate\\Database\\MySqlConnection \n         * @static \n         */ \n        public static function setQueryGrammar($grammar)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->setQueryGrammar($grammar);\n        }\n                    /**\n         * Get the schema grammar used by the connection.\n         *\n         * @return \\Illuminate\\Database\\Schema\\Grammars\\Grammar \n         * @static \n         */ \n        public static function getSchemaGrammar()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getSchemaGrammar();\n        }\n                    /**\n         * Set the schema grammar used by the connection.\n         *\n         * @param \\Illuminate\\Database\\Schema\\Grammars\\Grammar $grammar\n         * @return \\Illuminate\\Database\\MySqlConnection \n         * @static \n         */ \n        public static function setSchemaGrammar($grammar)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->setSchemaGrammar($grammar);\n        }\n                    /**\n         * Get the query post processor used by the connection.\n         *\n         * @return \\Illuminate\\Database\\Query\\Processors\\Processor \n         * @static \n         */ \n        public static function getPostProcessor()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getPostProcessor();\n        }\n                    /**\n         * Set the query post processor used by the connection.\n         *\n         * @param \\Illuminate\\Database\\Query\\Processors\\Processor $processor\n         * @return \\Illuminate\\Database\\MySqlConnection \n         * @static \n         */ \n        public static function setPostProcessor($processor)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->setPostProcessor($processor);\n        }\n                    /**\n         * Get the event dispatcher used by the connection.\n         *\n         * @return \\Illuminate\\Contracts\\Events\\Dispatcher \n         * @static \n         */ \n        public static function getEventDispatcher()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getEventDispatcher();\n        }\n                    /**\n         * Set the event dispatcher instance on the connection.\n         *\n         * @param \\Illuminate\\Contracts\\Events\\Dispatcher $events\n         * @return \\Illuminate\\Database\\MySqlConnection \n         * @static \n         */ \n        public static function setEventDispatcher($events)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->setEventDispatcher($events);\n        }\n                    /**\n         * Unset the event dispatcher for this connection.\n         *\n         * @return void \n         * @static \n         */ \n        public static function unsetEventDispatcher()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->unsetEventDispatcher();\n        }\n                    /**\n         * Set the transaction manager instance on the connection.\n         *\n         * @param \\Illuminate\\Database\\DatabaseTransactionsManager $manager\n         * @return \\Illuminate\\Database\\MySqlConnection \n         * @static \n         */ \n        public static function setTransactionManager($manager)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->setTransactionManager($manager);\n        }\n                    /**\n         * Unset the transaction manager for this connection.\n         *\n         * @return void \n         * @static \n         */ \n        public static function unsetTransactionManager()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->unsetTransactionManager();\n        }\n                    /**\n         * Determine if the connection is in a \"dry run\".\n         *\n         * @return bool \n         * @static \n         */ \n        public static function pretending()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->pretending();\n        }\n                    /**\n         * Get the connection query log.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getQueryLog()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getQueryLog();\n        }\n                    /**\n         * Clear the query log.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flushQueryLog()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->flushQueryLog();\n        }\n                    /**\n         * Enable the query log on the connection.\n         *\n         * @return void \n         * @static \n         */ \n        public static function enableQueryLog()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->enableQueryLog();\n        }\n                    /**\n         * Disable the query log on the connection.\n         *\n         * @return void \n         * @static \n         */ \n        public static function disableQueryLog()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->disableQueryLog();\n        }\n                    /**\n         * Determine whether we're logging queries.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function logging()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->logging();\n        }\n                    /**\n         * Get the name of the connected database.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDatabaseName()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getDatabaseName();\n        }\n                    /**\n         * Set the name of the connected database.\n         *\n         * @param string $database\n         * @return \\Illuminate\\Database\\MySqlConnection \n         * @static \n         */ \n        public static function setDatabaseName($database)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->setDatabaseName($database);\n        }\n                    /**\n         * Set the read / write type of the connection.\n         *\n         * @param string|null $readWriteType\n         * @return \\Illuminate\\Database\\MySqlConnection \n         * @static \n         */ \n        public static function setReadWriteType($readWriteType)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->setReadWriteType($readWriteType);\n        }\n                    /**\n         * Get the table prefix for the connection.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getTablePrefix()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->getTablePrefix();\n        }\n                    /**\n         * Set the table prefix in use by the connection.\n         *\n         * @param string $prefix\n         * @return \\Illuminate\\Database\\MySqlConnection \n         * @static \n         */ \n        public static function setTablePrefix($prefix)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->setTablePrefix($prefix);\n        }\n                    /**\n         * Set the table prefix and return the grammar.\n         *\n         * @param \\Illuminate\\Database\\Grammar $grammar\n         * @return \\Illuminate\\Database\\Grammar \n         * @static \n         */ \n        public static function withTablePrefix($grammar)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->withTablePrefix($grammar);\n        }\n                    /**\n         * Register a connection resolver.\n         *\n         * @param string $driver\n         * @param \\Closure $callback\n         * @return void \n         * @static \n         */ \n        public static function resolverFor($driver, $callback)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        \\Illuminate\\Database\\MySqlConnection::resolverFor($driver, $callback);\n        }\n                    /**\n         * Get the connection resolver for the given driver.\n         *\n         * @param string $driver\n         * @return mixed \n         * @static \n         */ \n        public static function getResolver($driver)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        return \\Illuminate\\Database\\MySqlConnection::getResolver($driver);\n        }\n                    /**\n         * Execute a Closure within a transaction.\n         *\n         * @param \\Closure $callback\n         * @param int $attempts\n         * @return mixed \n         * @throws \\Throwable\n         * @static \n         */ \n        public static function transaction($callback, $attempts = 1)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->transaction($callback, $attempts);\n        }\n                    /**\n         * Start a new database transaction.\n         *\n         * @return void \n         * @throws \\Throwable\n         * @static \n         */ \n        public static function beginTransaction()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->beginTransaction();\n        }\n                    /**\n         * Commit the active database transaction.\n         *\n         * @return void \n         * @throws \\Throwable\n         * @static \n         */ \n        public static function commit()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->commit();\n        }\n                    /**\n         * Rollback the active database transaction.\n         *\n         * @param int|null $toLevel\n         * @return void \n         * @throws \\Throwable\n         * @static \n         */ \n        public static function rollBack($toLevel = null)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->rollBack($toLevel);\n        }\n                    /**\n         * Get the number of active transactions.\n         *\n         * @return int \n         * @static \n         */ \n        public static function transactionLevel()\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        return $instance->transactionLevel();\n        }\n                    /**\n         * Execute the callback after a transaction commits.\n         *\n         * @param callable $callback\n         * @return void \n         * @throws \\RuntimeException\n         * @static \n         */ \n        public static function afterCommit($callback)\n        {            //Method inherited from \\Illuminate\\Database\\Connection         \n                        /** @var \\Illuminate\\Database\\MySqlConnection $instance */\n                        $instance->afterCommit($callback);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Events\\Dispatcher\n     */ \n        class Event {\n                    /**\n         * Register an event listener with the dispatcher.\n         *\n         * @param \\Closure|string|array $events\n         * @param \\Closure|string|array|null $listener\n         * @return void \n         * @static \n         */ \n        public static function listen($events, $listener = null)\n        {\n                        /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                        $instance->listen($events, $listener);\n        }\n                    /**\n         * Determine if a given event has listeners.\n         *\n         * @param string $eventName\n         * @return bool \n         * @static \n         */ \n        public static function hasListeners($eventName)\n        {\n                        /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                        return $instance->hasListeners($eventName);\n        }\n                    /**\n         * Determine if the given event has any wildcard listeners.\n         *\n         * @param string $eventName\n         * @return bool \n         * @static \n         */ \n        public static function hasWildcardListeners($eventName)\n        {\n                        /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                        return $instance->hasWildcardListeners($eventName);\n        }\n                    /**\n         * Register an event and payload to be fired later.\n         *\n         * @param string $event\n         * @param array $payload\n         * @return void \n         * @static \n         */ \n        public static function push($event, $payload = [])\n        {\n                        /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                        $instance->push($event, $payload);\n        }\n                    /**\n         * Flush a set of pushed events.\n         *\n         * @param string $event\n         * @return void \n         * @static \n         */ \n        public static function flush($event)\n        {\n                        /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                        $instance->flush($event);\n        }\n                    /**\n         * Register an event subscriber with the dispatcher.\n         *\n         * @param object|string $subscriber\n         * @return void \n         * @static \n         */ \n        public static function subscribe($subscriber)\n        {\n                        /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                        $instance->subscribe($subscriber);\n        }\n                    /**\n         * Fire an event until the first non-null response is returned.\n         *\n         * @param string|object $event\n         * @param mixed $payload\n         * @return array|null \n         * @static \n         */ \n        public static function until($event, $payload = [])\n        {\n                        /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                        return $instance->until($event, $payload);\n        }\n                    /**\n         * Fire an event and call the listeners.\n         *\n         * @param string|object $event\n         * @param mixed $payload\n         * @param bool $halt\n         * @return array|null \n         * @static \n         */ \n        public static function dispatch($event, $payload = [], $halt = false)\n        {\n                        /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                        return $instance->dispatch($event, $payload, $halt);\n        }\n                    /**\n         * Get all of the listeners for a given event name.\n         *\n         * @param string $eventName\n         * @return array \n         * @static \n         */ \n        public static function getListeners($eventName)\n        {\n                        /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                        return $instance->getListeners($eventName);\n        }\n                    /**\n         * Register an event listener with the dispatcher.\n         *\n         * @param \\Closure|string|array $listener\n         * @param bool $wildcard\n         * @return \\Closure \n         * @static \n         */ \n        public static function makeListener($listener, $wildcard = false)\n        {\n                        /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                        return $instance->makeListener($listener, $wildcard);\n        }\n                    /**\n         * Create a class based listener using the IoC container.\n         *\n         * @param string $listener\n         * @param bool $wildcard\n         * @return \\Closure \n         * @static \n         */ \n        public static function createClassListener($listener, $wildcard = false)\n        {\n                        /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                        return $instance->createClassListener($listener, $wildcard);\n        }\n                    /**\n         * Remove a set of listeners from the dispatcher.\n         *\n         * @param string $event\n         * @return void \n         * @static \n         */ \n        public static function forget($event)\n        {\n                        /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                        $instance->forget($event);\n        }\n                    /**\n         * Forget all of the pushed listeners.\n         *\n         * @return void \n         * @static \n         */ \n        public static function forgetPushed()\n        {\n                        /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                        $instance->forgetPushed();\n        }\n                    /**\n         * Set the queue resolver implementation.\n         *\n         * @param callable $resolver\n         * @return \\Illuminate\\Events\\Dispatcher \n         * @static \n         */ \n        public static function setQueueResolver($resolver)\n        {\n                        /** @var \\Illuminate\\Events\\Dispatcher $instance */\n                        return $instance->setQueueResolver($resolver);\n        }\n                    /**\n         * Register a custom macro.\n         *\n         * @param string $name\n         * @param object|callable $macro\n         * @return void \n         * @static \n         */ \n        public static function macro($name, $macro)\n        {\n                        \\Illuminate\\Events\\Dispatcher::macro($name, $macro);\n        }\n                    /**\n         * Mix another object into the class.\n         *\n         * @param object $mixin\n         * @param bool $replace\n         * @return void \n         * @throws \\ReflectionException\n         * @static \n         */ \n        public static function mixin($mixin, $replace = true)\n        {\n                        \\Illuminate\\Events\\Dispatcher::mixin($mixin, $replace);\n        }\n                    /**\n         * Checks if macro is registered.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function hasMacro($name)\n        {\n                        return \\Illuminate\\Events\\Dispatcher::hasMacro($name);\n        }\n                    /**\n         * Flush the existing macros.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flushMacros()\n        {\n                        \\Illuminate\\Events\\Dispatcher::flushMacros();\n        }\n                    /**\n         * Assert if an event has a listener attached to it.\n         *\n         * @param string $expectedEvent\n         * @param string $expectedListener\n         * @return void \n         * @static \n         */ \n        public static function assertListening($expectedEvent, $expectedListener)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\EventFake $instance */\n                        $instance->assertListening($expectedEvent, $expectedListener);\n        }\n                    /**\n         * Assert if an event was dispatched based on a truth-test callback.\n         *\n         * @param string|\\Closure $event\n         * @param callable|int|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertDispatched($event, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\EventFake $instance */\n                        $instance->assertDispatched($event, $callback);\n        }\n                    /**\n         * Assert if an event was dispatched a number of times.\n         *\n         * @param string $event\n         * @param int $times\n         * @return void \n         * @static \n         */ \n        public static function assertDispatchedTimes($event, $times = 1)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\EventFake $instance */\n                        $instance->assertDispatchedTimes($event, $times);\n        }\n                    /**\n         * Determine if an event was dispatched based on a truth-test callback.\n         *\n         * @param string|\\Closure $event\n         * @param callable|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertNotDispatched($event, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\EventFake $instance */\n                        $instance->assertNotDispatched($event, $callback);\n        }\n                    /**\n         * Assert that no events were dispatched.\n         *\n         * @return void \n         * @static \n         */ \n        public static function assertNothingDispatched()\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\EventFake $instance */\n                        $instance->assertNothingDispatched();\n        }\n                    /**\n         * Get all of the events matching a truth-test callback.\n         *\n         * @param string $event\n         * @param callable|null $callback\n         * @return \\Illuminate\\Support\\Collection \n         * @static \n         */ \n        public static function dispatched($event, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\EventFake $instance */\n                        return $instance->dispatched($event, $callback);\n        }\n                    /**\n         * Determine if the given event has been dispatched.\n         *\n         * @param string $event\n         * @return bool \n         * @static \n         */ \n        public static function hasDispatched($event)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\EventFake $instance */\n                        return $instance->hasDispatched($event);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Filesystem\\Filesystem\n     */ \n        class File {\n                    /**\n         * Determine if a file or directory exists.\n         *\n         * @param string $path\n         * @return bool \n         * @static \n         */ \n        public static function exists($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->exists($path);\n        }\n                    /**\n         * Determine if a file or directory is missing.\n         *\n         * @param string $path\n         * @return bool \n         * @static \n         */ \n        public static function missing($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->missing($path);\n        }\n                    /**\n         * Get the contents of a file.\n         *\n         * @param string $path\n         * @param bool $lock\n         * @return string \n         * @throws \\Illuminate\\Contracts\\Filesystem\\FileNotFoundException\n         * @static \n         */ \n        public static function get($path, $lock = false)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->get($path, $lock);\n        }\n                    /**\n         * Get contents of a file with shared access.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function sharedGet($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->sharedGet($path);\n        }\n                    /**\n         * Get the returned value of a file.\n         *\n         * @param string $path\n         * @param array $data\n         * @return mixed \n         * @throws \\Illuminate\\Contracts\\Filesystem\\FileNotFoundException\n         * @static \n         */ \n        public static function getRequire($path, $data = [])\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->getRequire($path, $data);\n        }\n                    /**\n         * Require the given file once.\n         *\n         * @param string $path\n         * @param array $data\n         * @return mixed \n         * @throws \\Illuminate\\Contracts\\Filesystem\\FileNotFoundException\n         * @static \n         */ \n        public static function requireOnce($path, $data = [])\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->requireOnce($path, $data);\n        }\n                    /**\n         * Get the contents of a file one line at a time.\n         *\n         * @param string $path\n         * @return \\Illuminate\\Support\\LazyCollection \n         * @throws \\Illuminate\\Contracts\\Filesystem\\FileNotFoundException\n         * @static \n         */ \n        public static function lines($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->lines($path);\n        }\n                    /**\n         * Get the MD5 hash of the file at the given path.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function hash($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->hash($path);\n        }\n                    /**\n         * Write the contents of a file.\n         *\n         * @param string $path\n         * @param string $contents\n         * @param bool $lock\n         * @return int|bool \n         * @static \n         */ \n        public static function put($path, $contents, $lock = false)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->put($path, $contents, $lock);\n        }\n                    /**\n         * Write the contents of a file, replacing it atomically if it already exists.\n         *\n         * @param string $path\n         * @param string $content\n         * @return void \n         * @static \n         */ \n        public static function replace($path, $content)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        $instance->replace($path, $content);\n        }\n                    /**\n         * Replace a given string within a given file.\n         *\n         * @param array|string $search\n         * @param array|string $replace\n         * @param string $path\n         * @return void \n         * @static \n         */ \n        public static function replaceInFile($search, $replace, $path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        $instance->replaceInFile($search, $replace, $path);\n        }\n                    /**\n         * Prepend to a file.\n         *\n         * @param string $path\n         * @param string $data\n         * @return int \n         * @static \n         */ \n        public static function prepend($path, $data)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->prepend($path, $data);\n        }\n                    /**\n         * Append to a file.\n         *\n         * @param string $path\n         * @param string $data\n         * @return int \n         * @static \n         */ \n        public static function append($path, $data)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->append($path, $data);\n        }\n                    /**\n         * Get or set UNIX mode of a file or directory.\n         *\n         * @param string $path\n         * @param int|null $mode\n         * @return mixed \n         * @static \n         */ \n        public static function chmod($path, $mode = null)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->chmod($path, $mode);\n        }\n                    /**\n         * Delete the file at a given path.\n         *\n         * @param string|array $paths\n         * @return bool \n         * @static \n         */ \n        public static function delete($paths)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->delete($paths);\n        }\n                    /**\n         * Move a file to a new location.\n         *\n         * @param string $path\n         * @param string $target\n         * @return bool \n         * @static \n         */ \n        public static function move($path, $target)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->move($path, $target);\n        }\n                    /**\n         * Copy a file to a new location.\n         *\n         * @param string $path\n         * @param string $target\n         * @return bool \n         * @static \n         */ \n        public static function copy($path, $target)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->copy($path, $target);\n        }\n                    /**\n         * Create a symlink to the target file or directory. On Windows, a hard link is created if the target is a file.\n         *\n         * @param string $target\n         * @param string $link\n         * @return void \n         * @static \n         */ \n        public static function link($target, $link)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        $instance->link($target, $link);\n        }\n                    /**\n         * Create a relative symlink to the target file or directory.\n         *\n         * @param string $target\n         * @param string $link\n         * @return void \n         * @throws \\RuntimeException\n         * @static \n         */ \n        public static function relativeLink($target, $link)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        $instance->relativeLink($target, $link);\n        }\n                    /**\n         * Extract the file name from a file path.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function name($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->name($path);\n        }\n                    /**\n         * Extract the trailing name component from a file path.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function basename($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->basename($path);\n        }\n                    /**\n         * Extract the parent directory from a file path.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function dirname($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->dirname($path);\n        }\n                    /**\n         * Extract the file extension from a file path.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function extension($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->extension($path);\n        }\n                    /**\n         * Guess the file extension from the mime-type of a given file.\n         *\n         * @param string $path\n         * @return string|null \n         * @throws \\RuntimeException\n         * @static \n         */ \n        public static function guessExtension($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->guessExtension($path);\n        }\n                    /**\n         * Get the file type of a given file.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function type($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->type($path);\n        }\n                    /**\n         * Get the mime-type of a given file.\n         *\n         * @param string $path\n         * @return string|false \n         * @static \n         */ \n        public static function mimeType($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->mimeType($path);\n        }\n                    /**\n         * Get the file size of a given file.\n         *\n         * @param string $path\n         * @return int \n         * @static \n         */ \n        public static function size($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->size($path);\n        }\n                    /**\n         * Get the file's last modification time.\n         *\n         * @param string $path\n         * @return int \n         * @static \n         */ \n        public static function lastModified($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->lastModified($path);\n        }\n                    /**\n         * Determine if the given path is a directory.\n         *\n         * @param string $directory\n         * @return bool \n         * @static \n         */ \n        public static function isDirectory($directory)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->isDirectory($directory);\n        }\n                    /**\n         * Determine if the given path is readable.\n         *\n         * @param string $path\n         * @return bool \n         * @static \n         */ \n        public static function isReadable($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->isReadable($path);\n        }\n                    /**\n         * Determine if the given path is writable.\n         *\n         * @param string $path\n         * @return bool \n         * @static \n         */ \n        public static function isWritable($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->isWritable($path);\n        }\n                    /**\n         * Determine if the given path is a file.\n         *\n         * @param string $file\n         * @return bool \n         * @static \n         */ \n        public static function isFile($file)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->isFile($file);\n        }\n                    /**\n         * Find path names matching a given pattern.\n         *\n         * @param string $pattern\n         * @param int $flags\n         * @return array \n         * @static \n         */ \n        public static function glob($pattern, $flags = 0)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->glob($pattern, $flags);\n        }\n                    /**\n         * Get an array of all files in a directory.\n         *\n         * @param string $directory\n         * @param bool $hidden\n         * @return \\Symfony\\Component\\Finder\\SplFileInfo[] \n         * @static \n         */ \n        public static function files($directory, $hidden = false)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->files($directory, $hidden);\n        }\n                    /**\n         * Get all of the files from the given directory (recursive).\n         *\n         * @param string $directory\n         * @param bool $hidden\n         * @return \\Symfony\\Component\\Finder\\SplFileInfo[] \n         * @static \n         */ \n        public static function allFiles($directory, $hidden = false)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->allFiles($directory, $hidden);\n        }\n                    /**\n         * Get all of the directories within a given directory.\n         *\n         * @param string $directory\n         * @return array \n         * @static \n         */ \n        public static function directories($directory)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->directories($directory);\n        }\n                    /**\n         * Ensure a directory exists.\n         *\n         * @param string $path\n         * @param int $mode\n         * @param bool $recursive\n         * @return void \n         * @static \n         */ \n        public static function ensureDirectoryExists($path, $mode = 493, $recursive = true)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        $instance->ensureDirectoryExists($path, $mode, $recursive);\n        }\n                    /**\n         * Create a directory.\n         *\n         * @param string $path\n         * @param int $mode\n         * @param bool $recursive\n         * @param bool $force\n         * @return bool \n         * @static \n         */ \n        public static function makeDirectory($path, $mode = 493, $recursive = false, $force = false)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->makeDirectory($path, $mode, $recursive, $force);\n        }\n                    /**\n         * Move a directory.\n         *\n         * @param string $from\n         * @param string $to\n         * @param bool $overwrite\n         * @return bool \n         * @static \n         */ \n        public static function moveDirectory($from, $to, $overwrite = false)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->moveDirectory($from, $to, $overwrite);\n        }\n                    /**\n         * Copy a directory from one location to another.\n         *\n         * @param string $directory\n         * @param string $destination\n         * @param int|null $options\n         * @return bool \n         * @static \n         */ \n        public static function copyDirectory($directory, $destination, $options = null)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->copyDirectory($directory, $destination, $options);\n        }\n                    /**\n         * Recursively delete a directory.\n         * \n         * The directory itself may be optionally preserved.\n         *\n         * @param string $directory\n         * @param bool $preserve\n         * @return bool \n         * @static \n         */ \n        public static function deleteDirectory($directory, $preserve = false)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->deleteDirectory($directory, $preserve);\n        }\n                    /**\n         * Remove all of the directories within a given directory.\n         *\n         * @param string $directory\n         * @return bool \n         * @static \n         */ \n        public static function deleteDirectories($directory)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->deleteDirectories($directory);\n        }\n                    /**\n         * Empty the specified directory of all files and folders.\n         *\n         * @param string $directory\n         * @return bool \n         * @static \n         */ \n        public static function cleanDirectory($directory)\n        {\n                        /** @var \\Illuminate\\Filesystem\\Filesystem $instance */\n                        return $instance->cleanDirectory($directory);\n        }\n                    /**\n         * Register a custom macro.\n         *\n         * @param string $name\n         * @param object|callable $macro\n         * @return void \n         * @static \n         */ \n        public static function macro($name, $macro)\n        {\n                        \\Illuminate\\Filesystem\\Filesystem::macro($name, $macro);\n        }\n                    /**\n         * Mix another object into the class.\n         *\n         * @param object $mixin\n         * @param bool $replace\n         * @return void \n         * @throws \\ReflectionException\n         * @static \n         */ \n        public static function mixin($mixin, $replace = true)\n        {\n                        \\Illuminate\\Filesystem\\Filesystem::mixin($mixin, $replace);\n        }\n                    /**\n         * Checks if macro is registered.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function hasMacro($name)\n        {\n                        return \\Illuminate\\Filesystem\\Filesystem::hasMacro($name);\n        }\n                    /**\n         * Flush the existing macros.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flushMacros()\n        {\n                        \\Illuminate\\Filesystem\\Filesystem::flushMacros();\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Contracts\\Auth\\Access\\Gate\n     */ \n        class Gate {\n                    /**\n         * Determine if a given ability has been defined.\n         *\n         * @param string|array $ability\n         * @return bool \n         * @static \n         */ \n        public static function has($ability)\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->has($ability);\n        }\n                    /**\n         * Perform an on-demand authorization check. Throw an authorization exception if the condition or callback is false.\n         *\n         * @param \\Illuminate\\Auth\\Access\\Response|\\Closure|bool $condition\n         * @param string|null $message\n         * @param string|null $code\n         * @return \\Illuminate\\Auth\\Access\\Response \n         * @throws \\Illuminate\\Auth\\Access\\AuthorizationException\n         * @static \n         */ \n        public static function allowIf($condition, $message = null, $code = null)\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->allowIf($condition, $message, $code);\n        }\n                    /**\n         * Perform an on-demand authorization check. Throw an authorization exception if the condition or callback is true.\n         *\n         * @param \\Illuminate\\Auth\\Access\\Response|\\Closure|bool $condition\n         * @param string|null $message\n         * @param string|null $code\n         * @return \\Illuminate\\Auth\\Access\\Response \n         * @throws \\Illuminate\\Auth\\Access\\AuthorizationException\n         * @static \n         */ \n        public static function denyIf($condition, $message = null, $code = null)\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->denyIf($condition, $message, $code);\n        }\n                    /**\n         * Define a new ability.\n         *\n         * @param string $ability\n         * @param callable|string $callback\n         * @return \\Illuminate\\Auth\\Access\\Gate \n         * @throws \\InvalidArgumentException\n         * @static \n         */ \n        public static function define($ability, $callback)\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->define($ability, $callback);\n        }\n                    /**\n         * Define abilities for a resource.\n         *\n         * @param string $name\n         * @param string $class\n         * @param array|null $abilities\n         * @return \\Illuminate\\Auth\\Access\\Gate \n         * @static \n         */ \n        public static function resource($name, $class, $abilities = null)\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->resource($name, $class, $abilities);\n        }\n                    /**\n         * Define a policy class for a given class type.\n         *\n         * @param string $class\n         * @param string $policy\n         * @return \\Illuminate\\Auth\\Access\\Gate \n         * @static \n         */ \n        public static function policy($class, $policy)\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->policy($class, $policy);\n        }\n                    /**\n         * Register a callback to run before all Gate checks.\n         *\n         * @param callable $callback\n         * @return \\Illuminate\\Auth\\Access\\Gate \n         * @static \n         */ \n        public static function before($callback)\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->before($callback);\n        }\n                    /**\n         * Register a callback to run after all Gate checks.\n         *\n         * @param callable $callback\n         * @return \\Illuminate\\Auth\\Access\\Gate \n         * @static \n         */ \n        public static function after($callback)\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->after($callback);\n        }\n                    /**\n         * Determine if the given ability should be granted for the current user.\n         *\n         * @param string $ability\n         * @param array|mixed $arguments\n         * @return bool \n         * @static \n         */ \n        public static function allows($ability, $arguments = [])\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->allows($ability, $arguments);\n        }\n                    /**\n         * Determine if the given ability should be denied for the current user.\n         *\n         * @param string $ability\n         * @param array|mixed $arguments\n         * @return bool \n         * @static \n         */ \n        public static function denies($ability, $arguments = [])\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->denies($ability, $arguments);\n        }\n                    /**\n         * Determine if all of the given abilities should be granted for the current user.\n         *\n         * @param \\Illuminate\\Auth\\Access\\iterable|string $abilities\n         * @param array|mixed $arguments\n         * @return bool \n         * @static \n         */ \n        public static function check($abilities, $arguments = [])\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->check($abilities, $arguments);\n        }\n                    /**\n         * Determine if any one of the given abilities should be granted for the current user.\n         *\n         * @param \\Illuminate\\Auth\\Access\\iterable|string $abilities\n         * @param array|mixed $arguments\n         * @return bool \n         * @static \n         */ \n        public static function any($abilities, $arguments = [])\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->any($abilities, $arguments);\n        }\n                    /**\n         * Determine if all of the given abilities should be denied for the current user.\n         *\n         * @param \\Illuminate\\Auth\\Access\\iterable|string $abilities\n         * @param array|mixed $arguments\n         * @return bool \n         * @static \n         */ \n        public static function none($abilities, $arguments = [])\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->none($abilities, $arguments);\n        }\n                    /**\n         * Determine if the given ability should be granted for the current user.\n         *\n         * @param string $ability\n         * @param array|mixed $arguments\n         * @return \\Illuminate\\Auth\\Access\\Response \n         * @throws \\Illuminate\\Auth\\Access\\AuthorizationException\n         * @static \n         */ \n        public static function authorize($ability, $arguments = [])\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->authorize($ability, $arguments);\n        }\n                    /**\n         * Inspect the user for the given ability.\n         *\n         * @param string $ability\n         * @param array|mixed $arguments\n         * @return \\Illuminate\\Auth\\Access\\Response \n         * @static \n         */ \n        public static function inspect($ability, $arguments = [])\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->inspect($ability, $arguments);\n        }\n                    /**\n         * Get the raw result from the authorization callback.\n         *\n         * @param string $ability\n         * @param array|mixed $arguments\n         * @return mixed \n         * @throws \\Illuminate\\Auth\\Access\\AuthorizationException\n         * @static \n         */ \n        public static function raw($ability, $arguments = [])\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->raw($ability, $arguments);\n        }\n                    /**\n         * Get a policy instance for a given class.\n         *\n         * @param object|string $class\n         * @return mixed \n         * @static \n         */ \n        public static function getPolicyFor($class)\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->getPolicyFor($class);\n        }\n                    /**\n         * Specify a callback to be used to guess policy names.\n         *\n         * @param callable $callback\n         * @return \\Illuminate\\Auth\\Access\\Gate \n         * @static \n         */ \n        public static function guessPolicyNamesUsing($callback)\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->guessPolicyNamesUsing($callback);\n        }\n                    /**\n         * Build a policy class instance of the given type.\n         *\n         * @param object|string $class\n         * @return mixed \n         * @throws \\Illuminate\\Contracts\\Container\\BindingResolutionException\n         * @static \n         */ \n        public static function resolvePolicy($class)\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->resolvePolicy($class);\n        }\n                    /**\n         * Get a gate instance for the given user.\n         *\n         * @param \\Illuminate\\Contracts\\Auth\\Authenticatable|mixed $user\n         * @return static \n         * @static \n         */ \n        public static function forUser($user)\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->forUser($user);\n        }\n                    /**\n         * Get all of the defined abilities.\n         *\n         * @return array \n         * @static \n         */ \n        public static function abilities()\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->abilities();\n        }\n                    /**\n         * Get all of the defined policies.\n         *\n         * @return array \n         * @static \n         */ \n        public static function policies()\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->policies();\n        }\n                    /**\n         * Set the container instance used by the gate.\n         *\n         * @param \\Illuminate\\Contracts\\Container\\Container $container\n         * @return \\Illuminate\\Auth\\Access\\Gate \n         * @static \n         */ \n        public static function setContainer($container)\n        {\n                        /** @var \\Illuminate\\Auth\\Access\\Gate $instance */\n                        return $instance->setContainer($container);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Hashing\\HashManager\n     */ \n        class Hash {\n                    /**\n         * Create an instance of the Bcrypt hash Driver.\n         *\n         * @return \\Illuminate\\Hashing\\BcryptHasher \n         * @static \n         */ \n        public static function createBcryptDriver()\n        {\n                        /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                        return $instance->createBcryptDriver();\n        }\n                    /**\n         * Create an instance of the Argon2i hash Driver.\n         *\n         * @return \\Illuminate\\Hashing\\ArgonHasher \n         * @static \n         */ \n        public static function createArgonDriver()\n        {\n                        /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                        return $instance->createArgonDriver();\n        }\n                    /**\n         * Create an instance of the Argon2id hash Driver.\n         *\n         * @return \\Illuminate\\Hashing\\Argon2IdHasher \n         * @static \n         */ \n        public static function createArgon2idDriver()\n        {\n                        /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                        return $instance->createArgon2idDriver();\n        }\n                    /**\n         * Get information about the given hashed value.\n         *\n         * @param string $hashedValue\n         * @return array \n         * @static \n         */ \n        public static function info($hashedValue)\n        {\n                        /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                        return $instance->info($hashedValue);\n        }\n                    /**\n         * Hash the given value.\n         *\n         * @param string $value\n         * @param array $options\n         * @return string \n         * @static \n         */ \n        public static function make($value, $options = [])\n        {\n                        /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                        return $instance->make($value, $options);\n        }\n                    /**\n         * Check the given plain value against a hash.\n         *\n         * @param string $value\n         * @param string $hashedValue\n         * @param array $options\n         * @return bool \n         * @static \n         */ \n        public static function check($value, $hashedValue, $options = [])\n        {\n                        /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                        return $instance->check($value, $hashedValue, $options);\n        }\n                    /**\n         * Check if the given hash has been hashed using the given options.\n         *\n         * @param string $hashedValue\n         * @param array $options\n         * @return bool \n         * @static \n         */ \n        public static function needsRehash($hashedValue, $options = [])\n        {\n                        /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                        return $instance->needsRehash($hashedValue, $options);\n        }\n                    /**\n         * Get the default driver name.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDefaultDriver()\n        {\n                        /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                        return $instance->getDefaultDriver();\n        }\n                    /**\n         * Get a driver instance.\n         *\n         * @param string|null $driver\n         * @return mixed \n         * @throws \\InvalidArgumentException\n         * @static \n         */ \n        public static function driver($driver = null)\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                        return $instance->driver($driver);\n        }\n                    /**\n         * Register a custom driver creator Closure.\n         *\n         * @param string $driver\n         * @param \\Closure $callback\n         * @return \\Illuminate\\Hashing\\HashManager \n         * @static \n         */ \n        public static function extend($driver, $callback)\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                        return $instance->extend($driver, $callback);\n        }\n                    /**\n         * Get all of the created \"drivers\".\n         *\n         * @return array \n         * @static \n         */ \n        public static function getDrivers()\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                        return $instance->getDrivers();\n        }\n                    /**\n         * Get the container instance used by the manager.\n         *\n         * @return \\Illuminate\\Contracts\\Container\\Container \n         * @static \n         */ \n        public static function getContainer()\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                        return $instance->getContainer();\n        }\n                    /**\n         * Set the container instance used by the manager.\n         *\n         * @param \\Illuminate\\Contracts\\Container\\Container $container\n         * @return \\Illuminate\\Hashing\\HashManager \n         * @static \n         */ \n        public static function setContainer($container)\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                        return $instance->setContainer($container);\n        }\n                    /**\n         * Forget all of the resolved driver instances.\n         *\n         * @return \\Illuminate\\Hashing\\HashManager \n         * @static \n         */ \n        public static function forgetDrivers()\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Hashing\\HashManager $instance */\n                        return $instance->forgetDrivers();\n        }\n         \n    }\n            /**\n     * \n     *\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest accept(string $contentType)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest acceptJson()\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest asForm()\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest asJson()\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest asMultipart()\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest async()\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest attach(string|array $name, string $contents = '', string|null $filename = null, array $headers = [])\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest baseUrl(string $url)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest beforeSending(callable $callback)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest bodyFormat(string $format)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest contentType(string $contentType)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest dd()\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest dump()\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest retry(int $times, int $sleep = 0, ?callable $when = null)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest sink(string|resource $to)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest stub(callable $callback)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest timeout(int $seconds)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest withBasicAuth(string $username, string $password)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest withBody(resource|string $content, string $contentType)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest withCookies(array $cookies, string $domain)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest withDigestAuth(string $username, string $password)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest withHeaders(array $headers)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest withMiddleware(callable $middleware)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest withOptions(array $options)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest withToken(string $token, string $type = 'Bearer')\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest withUserAgent(string $userAgent)\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest withoutRedirecting()\n     * @method static \\Illuminate\\Http\\Client\\PendingRequest withoutVerifying()\n     * @method static array pool(callable $callback)\n     * @method static \\Illuminate\\Http\\Client\\Response delete(string $url, array $data = [])\n     * @method static \\Illuminate\\Http\\Client\\Response get(string $url, array|string|null $query = null)\n     * @method static \\Illuminate\\Http\\Client\\Response head(string $url, array|string|null $query = null)\n     * @method static \\Illuminate\\Http\\Client\\Response patch(string $url, array $data = [])\n     * @method static \\Illuminate\\Http\\Client\\Response post(string $url, array $data = [])\n     * @method static \\Illuminate\\Http\\Client\\Response put(string $url, array $data = [])\n     * @method static \\Illuminate\\Http\\Client\\Response send(string $method, string $url, array $options = [])\n     * @see \\Illuminate\\Http\\Client\\Factory\n     */ \n        class Http {\n                    /**\n         * Create a new response instance for use during stubbing.\n         *\n         * @param array|string $body\n         * @param int $status\n         * @param array $headers\n         * @return \\GuzzleHttp\\Promise\\PromiseInterface \n         * @static \n         */ \n        public static function response($body = null, $status = 200, $headers = [])\n        {\n                        return \\Illuminate\\Http\\Client\\Factory::response($body, $status, $headers);\n        }\n                    /**\n         * Get an invokable object that returns a sequence of responses in order for use during stubbing.\n         *\n         * @param array $responses\n         * @return \\Illuminate\\Http\\Client\\ResponseSequence \n         * @static \n         */ \n        public static function sequence($responses = [])\n        {\n                        /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                        return $instance->sequence($responses);\n        }\n                    /**\n         * Register a stub callable that will intercept requests and be able to return stub responses.\n         *\n         * @param callable|array $callback\n         * @return \\Illuminate\\Http\\Client\\Factory \n         * @static \n         */ \n        public static function fake($callback = null)\n        {\n                        /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                        return $instance->fake($callback);\n        }\n                    /**\n         * Register a response sequence for the given URL pattern.\n         *\n         * @param string $url\n         * @return \\Illuminate\\Http\\Client\\ResponseSequence \n         * @static \n         */ \n        public static function fakeSequence($url = '*')\n        {\n                        /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                        return $instance->fakeSequence($url);\n        }\n                    /**\n         * Stub the given URL using the given callback.\n         *\n         * @param string $url\n         * @param \\Illuminate\\Http\\Client\\Response|\\GuzzleHttp\\Promise\\PromiseInterface|callable $callback\n         * @return \\Illuminate\\Http\\Client\\Factory \n         * @static \n         */ \n        public static function stubUrl($url, $callback)\n        {\n                        /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                        return $instance->stubUrl($url, $callback);\n        }\n                    /**\n         * Record a request response pair.\n         *\n         * @param \\Illuminate\\Http\\Client\\Request $request\n         * @param \\Illuminate\\Http\\Client\\Response $response\n         * @return void \n         * @static \n         */ \n        public static function recordRequestResponsePair($request, $response)\n        {\n                        /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                        $instance->recordRequestResponsePair($request, $response);\n        }\n                    /**\n         * Assert that a request / response pair was recorded matching a given truth test.\n         *\n         * @param callable $callback\n         * @return void \n         * @static \n         */ \n        public static function assertSent($callback)\n        {\n                        /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                        $instance->assertSent($callback);\n        }\n                    /**\n         * Assert that the given request was sent in the given order.\n         *\n         * @param array $callbacks\n         * @return void \n         * @static \n         */ \n        public static function assertSentInOrder($callbacks)\n        {\n                        /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                        $instance->assertSentInOrder($callbacks);\n        }\n                    /**\n         * Assert that a request / response pair was not recorded matching a given truth test.\n         *\n         * @param callable $callback\n         * @return void \n         * @static \n         */ \n        public static function assertNotSent($callback)\n        {\n                        /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                        $instance->assertNotSent($callback);\n        }\n                    /**\n         * Assert that no request / response pair was recorded.\n         *\n         * @return void \n         * @static \n         */ \n        public static function assertNothingSent()\n        {\n                        /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                        $instance->assertNothingSent();\n        }\n                    /**\n         * Assert how many requests have been recorded.\n         *\n         * @param int $count\n         * @return void \n         * @static \n         */ \n        public static function assertSentCount($count)\n        {\n                        /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                        $instance->assertSentCount($count);\n        }\n                    /**\n         * Assert that every created response sequence is empty.\n         *\n         * @return void \n         * @static \n         */ \n        public static function assertSequencesAreEmpty()\n        {\n                        /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                        $instance->assertSequencesAreEmpty();\n        }\n                    /**\n         * Get a collection of the request / response pairs matching the given truth test.\n         *\n         * @param callable $callback\n         * @return \\Illuminate\\Support\\Collection \n         * @static \n         */ \n        public static function recorded($callback = null)\n        {\n                        /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                        return $instance->recorded($callback);\n        }\n                    /**\n         * Get the current event dispatcher implementation.\n         *\n         * @return \\Illuminate\\Contracts\\Events\\Dispatcher|null \n         * @static \n         */ \n        public static function getDispatcher()\n        {\n                        /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                        return $instance->getDispatcher();\n        }\n                    /**\n         * Register a custom macro.\n         *\n         * @param string $name\n         * @param object|callable $macro\n         * @return void \n         * @static \n         */ \n        public static function macro($name, $macro)\n        {\n                        \\Illuminate\\Http\\Client\\Factory::macro($name, $macro);\n        }\n                    /**\n         * Mix another object into the class.\n         *\n         * @param object $mixin\n         * @param bool $replace\n         * @return void \n         * @throws \\ReflectionException\n         * @static \n         */ \n        public static function mixin($mixin, $replace = true)\n        {\n                        \\Illuminate\\Http\\Client\\Factory::mixin($mixin, $replace);\n        }\n                    /**\n         * Checks if macro is registered.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function hasMacro($name)\n        {\n                        return \\Illuminate\\Http\\Client\\Factory::hasMacro($name);\n        }\n                    /**\n         * Flush the existing macros.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flushMacros()\n        {\n                        \\Illuminate\\Http\\Client\\Factory::flushMacros();\n        }\n                    /**\n         * Dynamically handle calls to the class.\n         *\n         * @param string $method\n         * @param array $parameters\n         * @return mixed \n         * @throws \\BadMethodCallException\n         * @static \n         */ \n        public static function macroCall($method, $parameters)\n        {\n                        /** @var \\Illuminate\\Http\\Client\\Factory $instance */\n                        return $instance->macroCall($method, $parameters);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Translation\\Translator\n     */ \n        class Lang {\n                    /**\n         * Determine if a translation exists for a given locale.\n         *\n         * @param string $key\n         * @param string|null $locale\n         * @return bool \n         * @static \n         */ \n        public static function hasForLocale($key, $locale = null)\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        return $instance->hasForLocale($key, $locale);\n        }\n                    /**\n         * Determine if a translation exists.\n         *\n         * @param string $key\n         * @param string|null $locale\n         * @param bool $fallback\n         * @return bool \n         * @static \n         */ \n        public static function has($key, $locale = null, $fallback = true)\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        return $instance->has($key, $locale, $fallback);\n        }\n                    /**\n         * Get the translation for the given key.\n         *\n         * @param string $key\n         * @param array $replace\n         * @param string|null $locale\n         * @param bool $fallback\n         * @return string|array \n         * @static \n         */ \n        public static function get($key, $replace = [], $locale = null, $fallback = true)\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        return $instance->get($key, $replace, $locale, $fallback);\n        }\n                    /**\n         * Get a translation according to an integer value.\n         *\n         * @param string $key\n         * @param \\Countable|int|array $number\n         * @param array $replace\n         * @param string|null $locale\n         * @return string \n         * @static \n         */ \n        public static function choice($key, $number, $replace = [], $locale = null)\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        return $instance->choice($key, $number, $replace, $locale);\n        }\n                    /**\n         * Add translation lines to the given locale.\n         *\n         * @param array $lines\n         * @param string $locale\n         * @param string $namespace\n         * @return void \n         * @static \n         */ \n        public static function addLines($lines, $locale, $namespace = '*')\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        $instance->addLines($lines, $locale, $namespace);\n        }\n                    /**\n         * Load the specified language group.\n         *\n         * @param string $namespace\n         * @param string $group\n         * @param string $locale\n         * @return void \n         * @static \n         */ \n        public static function load($namespace, $group, $locale)\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        $instance->load($namespace, $group, $locale);\n        }\n                    /**\n         * Add a new namespace to the loader.\n         *\n         * @param string $namespace\n         * @param string $hint\n         * @return void \n         * @static \n         */ \n        public static function addNamespace($namespace, $hint)\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        $instance->addNamespace($namespace, $hint);\n        }\n                    /**\n         * Add a new JSON path to the loader.\n         *\n         * @param string $path\n         * @return void \n         * @static \n         */ \n        public static function addJsonPath($path)\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        $instance->addJsonPath($path);\n        }\n                    /**\n         * Parse a key into namespace, group, and item.\n         *\n         * @param string $key\n         * @return array \n         * @static \n         */ \n        public static function parseKey($key)\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        return $instance->parseKey($key);\n        }\n                    /**\n         * Get the message selector instance.\n         *\n         * @return \\Illuminate\\Translation\\MessageSelector \n         * @static \n         */ \n        public static function getSelector()\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        return $instance->getSelector();\n        }\n                    /**\n         * Set the message selector instance.\n         *\n         * @param \\Illuminate\\Translation\\MessageSelector $selector\n         * @return void \n         * @static \n         */ \n        public static function setSelector($selector)\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        $instance->setSelector($selector);\n        }\n                    /**\n         * Get the language line loader implementation.\n         *\n         * @return \\Illuminate\\Contracts\\Translation\\Loader \n         * @static \n         */ \n        public static function getLoader()\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        return $instance->getLoader();\n        }\n                    /**\n         * Get the default locale being used.\n         *\n         * @return string \n         * @static \n         */ \n        public static function locale()\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        return $instance->locale();\n        }\n                    /**\n         * Get the default locale being used.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getLocale()\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        return $instance->getLocale();\n        }\n                    /**\n         * Set the default locale.\n         *\n         * @param string $locale\n         * @return void \n         * @throws \\InvalidArgumentException\n         * @static \n         */ \n        public static function setLocale($locale)\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        $instance->setLocale($locale);\n        }\n                    /**\n         * Get the fallback locale being used.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getFallback()\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        return $instance->getFallback();\n        }\n                    /**\n         * Set the fallback locale being used.\n         *\n         * @param string $fallback\n         * @return void \n         * @static \n         */ \n        public static function setFallback($fallback)\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        $instance->setFallback($fallback);\n        }\n                    /**\n         * Set the loaded translation groups.\n         *\n         * @param array $loaded\n         * @return void \n         * @static \n         */ \n        public static function setLoaded($loaded)\n        {\n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        $instance->setLoaded($loaded);\n        }\n                    /**\n         * Set the parsed value of a key.\n         *\n         * @param string $key\n         * @param array $parsed\n         * @return void \n         * @static \n         */ \n        public static function setParsedKey($key, $parsed)\n        {            //Method inherited from \\Illuminate\\Support\\NamespacedItemResolver         \n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        $instance->setParsedKey($key, $parsed);\n        }\n                    /**\n         * Flush the cache of parsed keys.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flushParsedKeys()\n        {            //Method inherited from \\Illuminate\\Support\\NamespacedItemResolver         \n                        /** @var \\Illuminate\\Translation\\Translator $instance */\n                        $instance->flushParsedKeys();\n        }\n                    /**\n         * Register a custom macro.\n         *\n         * @param string $name\n         * @param object|callable $macro\n         * @return void \n         * @static \n         */ \n        public static function macro($name, $macro)\n        {\n                        \\Illuminate\\Translation\\Translator::macro($name, $macro);\n        }\n                    /**\n         * Mix another object into the class.\n         *\n         * @param object $mixin\n         * @param bool $replace\n         * @return void \n         * @throws \\ReflectionException\n         * @static \n         */ \n        public static function mixin($mixin, $replace = true)\n        {\n                        \\Illuminate\\Translation\\Translator::mixin($mixin, $replace);\n        }\n                    /**\n         * Checks if macro is registered.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function hasMacro($name)\n        {\n                        return \\Illuminate\\Translation\\Translator::hasMacro($name);\n        }\n                    /**\n         * Flush the existing macros.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flushMacros()\n        {\n                        \\Illuminate\\Translation\\Translator::flushMacros();\n        }\n         \n    }\n            /**\n     * \n     *\n     * @method static \\Illuminate\\Log\\Logger withContext(array $context = [])\n     * @method static \\Illuminate\\Log\\Logger withoutContext()\n     * @method static void write(string $level, string $message, array $context = [])\n     * @method static void listen(\\Closure $callback)\n     * @see \\Illuminate\\Log\\Logger\n     */ \n        class Log {\n                    /**\n         * Build an on-demand log channel.\n         *\n         * @param array $config\n         * @return \\Psr\\Log\\LoggerInterface \n         * @static \n         */ \n        public static function build($config)\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        return $instance->build($config);\n        }\n                    /**\n         * Create a new, on-demand aggregate logger instance.\n         *\n         * @param array $channels\n         * @param string|null $channel\n         * @return \\Psr\\Log\\LoggerInterface \n         * @static \n         */ \n        public static function stack($channels, $channel = null)\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        return $instance->stack($channels, $channel);\n        }\n                    /**\n         * Get a log channel instance.\n         *\n         * @param string|null $channel\n         * @return \\Psr\\Log\\LoggerInterface \n         * @static \n         */ \n        public static function channel($channel = null)\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        return $instance->channel($channel);\n        }\n                    /**\n         * Get a log driver instance.\n         *\n         * @param string|null $driver\n         * @return \\Psr\\Log\\LoggerInterface \n         * @static \n         */ \n        public static function driver($driver = null)\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        return $instance->driver($driver);\n        }\n                    /**\n         * Get the default log driver name.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function getDefaultDriver()\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        return $instance->getDefaultDriver();\n        }\n                    /**\n         * Set the default log driver name.\n         *\n         * @param string $name\n         * @return void \n         * @static \n         */ \n        public static function setDefaultDriver($name)\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        $instance->setDefaultDriver($name);\n        }\n                    /**\n         * Register a custom driver creator Closure.\n         *\n         * @param string $driver\n         * @param \\Closure $callback\n         * @return \\Illuminate\\Log\\LogManager \n         * @static \n         */ \n        public static function extend($driver, $callback)\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        return $instance->extend($driver, $callback);\n        }\n                    /**\n         * Unset the given channel instance.\n         *\n         * @param string|null $driver\n         * @return \\Illuminate\\Log\\LogManager \n         * @static \n         */ \n        public static function forgetChannel($driver = null)\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        return $instance->forgetChannel($driver);\n        }\n                    /**\n         * Get all of the resolved log channels.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getChannels()\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        return $instance->getChannels();\n        }\n                    /**\n         * System is unusable.\n         *\n         * @param string $message\n         * @param array $context\n         * @return void \n         * @static \n         */ \n        public static function emergency($message, $context = [])\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        $instance->emergency($message, $context);\n        }\n                    /**\n         * Action must be taken immediately.\n         * \n         * Example: Entire website down, database unavailable, etc. This should\n         * trigger the SMS alerts and wake you up.\n         *\n         * @param string $message\n         * @param array $context\n         * @return void \n         * @static \n         */ \n        public static function alert($message, $context = [])\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        $instance->alert($message, $context);\n        }\n                    /**\n         * Critical conditions.\n         * \n         * Example: Application component unavailable, unexpected exception.\n         *\n         * @param string $message\n         * @param array $context\n         * @return void \n         * @static \n         */ \n        public static function critical($message, $context = [])\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        $instance->critical($message, $context);\n        }\n                    /**\n         * Runtime errors that do not require immediate action but should typically\n         * be logged and monitored.\n         *\n         * @param string $message\n         * @param array $context\n         * @return void \n         * @static \n         */ \n        public static function error($message, $context = [])\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        $instance->error($message, $context);\n        }\n                    /**\n         * Exceptional occurrences that are not errors.\n         * \n         * Example: Use of deprecated APIs, poor use of an API, undesirable things\n         * that are not necessarily wrong.\n         *\n         * @param string $message\n         * @param array $context\n         * @return void \n         * @static \n         */ \n        public static function warning($message, $context = [])\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        $instance->warning($message, $context);\n        }\n                    /**\n         * Normal but significant events.\n         *\n         * @param string $message\n         * @param array $context\n         * @return void \n         * @static \n         */ \n        public static function notice($message, $context = [])\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        $instance->notice($message, $context);\n        }\n                    /**\n         * Interesting events.\n         * \n         * Example: User logs in, SQL logs.\n         *\n         * @param string $message\n         * @param array $context\n         * @return void \n         * @static \n         */ \n        public static function info($message, $context = [])\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        $instance->info($message, $context);\n        }\n                    /**\n         * Detailed debug information.\n         *\n         * @param string $message\n         * @param array $context\n         * @return void \n         * @static \n         */ \n        public static function debug($message, $context = [])\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        $instance->debug($message, $context);\n        }\n                    /**\n         * Logs with an arbitrary level.\n         *\n         * @param mixed $level\n         * @param string $message\n         * @param array $context\n         * @return void \n         * @static \n         */ \n        public static function log($level, $message, $context = [])\n        {\n                        /** @var \\Illuminate\\Log\\LogManager $instance */\n                        $instance->log($level, $message, $context);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @method static void alwaysFrom(string $address, string|null $name = null)\n     * @method static void alwaysReplyTo(string $address, string|null $name = null)\n     * @method static void alwaysReturnPath(string $address)\n     * @method static void alwaysTo(string $address, string|null $name = null)\n     * @method static mixed laterOn(string $queue, \\DateTimeInterface|\\DateInterval|int $delay, \\Illuminate\\Contracts\\Mail\\Mailable|string|array $view)\n     * @method static mixed queueOn(string $queue, \\Illuminate\\Contracts\\Mail\\Mailable|string|array $view)\n     * @method static void plain(string $view, array $data, $callback)\n     * @method static void html(string $html, $callback)\n     * @see \\Illuminate\\Mail\\Mailer\n     * @see \\Illuminate\\Support\\Testing\\Fakes\\MailFake\n     */ \n        class Mail {\n                    /**\n         * Get a mailer instance by name.\n         *\n         * @param string|null $name\n         * @return \\Illuminate\\Contracts\\Mail\\Mailer \n         * @static \n         */ \n        public static function mailer($name = null)\n        {\n                        /** @var \\Illuminate\\Mail\\MailManager $instance */\n                        return $instance->mailer($name);\n        }\n                    /**\n         * Get a mailer driver instance.\n         *\n         * @param string|null $driver\n         * @return \\Illuminate\\Mail\\Mailer \n         * @static \n         */ \n        public static function driver($driver = null)\n        {\n                        /** @var \\Illuminate\\Mail\\MailManager $instance */\n                        return $instance->driver($driver);\n        }\n                    /**\n         * Create a new transport instance.\n         *\n         * @param array $config\n         * @return \\Swift_Transport \n         * @throws \\InvalidArgumentException\n         * @static \n         */ \n        public static function createTransport($config)\n        {\n                        /** @var \\Illuminate\\Mail\\MailManager $instance */\n                        return $instance->createTransport($config);\n        }\n                    /**\n         * Get the default mail driver name.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDefaultDriver()\n        {\n                        /** @var \\Illuminate\\Mail\\MailManager $instance */\n                        return $instance->getDefaultDriver();\n        }\n                    /**\n         * Set the default mail driver name.\n         *\n         * @param string $name\n         * @return void \n         * @static \n         */ \n        public static function setDefaultDriver($name)\n        {\n                        /** @var \\Illuminate\\Mail\\MailManager $instance */\n                        $instance->setDefaultDriver($name);\n        }\n                    /**\n         * Disconnect the given mailer and remove from local cache.\n         *\n         * @param string|null $name\n         * @return void \n         * @static \n         */ \n        public static function purge($name = null)\n        {\n                        /** @var \\Illuminate\\Mail\\MailManager $instance */\n                        $instance->purge($name);\n        }\n                    /**\n         * Register a custom transport creator Closure.\n         *\n         * @param string $driver\n         * @param \\Closure $callback\n         * @return \\Illuminate\\Mail\\MailManager \n         * @static \n         */ \n        public static function extend($driver, $callback)\n        {\n                        /** @var \\Illuminate\\Mail\\MailManager $instance */\n                        return $instance->extend($driver, $callback);\n        }\n                    /**\n         * Get the application instance used by the manager.\n         *\n         * @return \\Illuminate\\Contracts\\Foundation\\Application \n         * @static \n         */ \n        public static function getApplication()\n        {\n                        /** @var \\Illuminate\\Mail\\MailManager $instance */\n                        return $instance->getApplication();\n        }\n                    /**\n         * Set the application instance used by the manager.\n         *\n         * @param \\Illuminate\\Contracts\\Foundation\\Application $app\n         * @return \\Illuminate\\Mail\\MailManager \n         * @static \n         */ \n        public static function setApplication($app)\n        {\n                        /** @var \\Illuminate\\Mail\\MailManager $instance */\n                        return $instance->setApplication($app);\n        }\n                    /**\n         * Forget all of the resolved mailer instances.\n         *\n         * @return \\Illuminate\\Mail\\MailManager \n         * @static \n         */ \n        public static function forgetMailers()\n        {\n                        /** @var \\Illuminate\\Mail\\MailManager $instance */\n                        return $instance->forgetMailers();\n        }\n                    /**\n         * Assert if a mailable was sent based on a truth-test callback.\n         *\n         * @param string|\\Closure $mailable\n         * @param callable|int|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertSent($mailable, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        $instance->assertSent($mailable, $callback);\n        }\n                    /**\n         * Determine if a mailable was not sent or queued to be sent based on a truth-test callback.\n         *\n         * @param string|\\Closure $mailable\n         * @param callable|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertNotOutgoing($mailable, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        $instance->assertNotOutgoing($mailable, $callback);\n        }\n                    /**\n         * Determine if a mailable was not sent based on a truth-test callback.\n         *\n         * @param string|\\Closure $mailable\n         * @param callable|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertNotSent($mailable, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        $instance->assertNotSent($mailable, $callback);\n        }\n                    /**\n         * Assert that no mailables were sent or queued to be sent.\n         *\n         * @return void \n         * @static \n         */ \n        public static function assertNothingOutgoing()\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        $instance->assertNothingOutgoing();\n        }\n                    /**\n         * Assert that no mailables were sent.\n         *\n         * @return void \n         * @static \n         */ \n        public static function assertNothingSent()\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        $instance->assertNothingSent();\n        }\n                    /**\n         * Assert if a mailable was queued based on a truth-test callback.\n         *\n         * @param string|\\Closure $mailable\n         * @param callable|int|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertQueued($mailable, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        $instance->assertQueued($mailable, $callback);\n        }\n                    /**\n         * Determine if a mailable was not queued based on a truth-test callback.\n         *\n         * @param string|\\Closure $mailable\n         * @param callable|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertNotQueued($mailable, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        $instance->assertNotQueued($mailable, $callback);\n        }\n                    /**\n         * Assert that no mailables were queued.\n         *\n         * @return void \n         * @static \n         */ \n        public static function assertNothingQueued()\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        $instance->assertNothingQueued();\n        }\n                    /**\n         * Get all of the mailables matching a truth-test callback.\n         *\n         * @param string|\\Closure $mailable\n         * @param callable|null $callback\n         * @return \\Illuminate\\Support\\Collection \n         * @static \n         */ \n        public static function sent($mailable, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        return $instance->sent($mailable, $callback);\n        }\n                    /**\n         * Determine if the given mailable has been sent.\n         *\n         * @param string $mailable\n         * @return bool \n         * @static \n         */ \n        public static function hasSent($mailable)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        return $instance->hasSent($mailable);\n        }\n                    /**\n         * Get all of the queued mailables matching a truth-test callback.\n         *\n         * @param string|\\Closure $mailable\n         * @param callable|null $callback\n         * @return \\Illuminate\\Support\\Collection \n         * @static \n         */ \n        public static function queued($mailable, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        return $instance->queued($mailable, $callback);\n        }\n                    /**\n         * Determine if the given mailable has been queued.\n         *\n         * @param string $mailable\n         * @return bool \n         * @static \n         */ \n        public static function hasQueued($mailable)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        return $instance->hasQueued($mailable);\n        }\n                    /**\n         * Begin the process of mailing a mailable class instance.\n         *\n         * @param mixed $users\n         * @return \\Illuminate\\Mail\\PendingMail \n         * @static \n         */ \n        public static function to($users)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        return $instance->to($users);\n        }\n                    /**\n         * Begin the process of mailing a mailable class instance.\n         *\n         * @param mixed $users\n         * @return \\Illuminate\\Mail\\PendingMail \n         * @static \n         */ \n        public static function bcc($users)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        return $instance->bcc($users);\n        }\n                    /**\n         * Send a new message with only a raw text part.\n         *\n         * @param string $text\n         * @param \\Closure|string $callback\n         * @return void \n         * @static \n         */ \n        public static function raw($text, $callback)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        $instance->raw($text, $callback);\n        }\n                    /**\n         * Send a new message using a view.\n         *\n         * @param \\Illuminate\\Contracts\\Mail\\Mailable|string|array $view\n         * @param array $data\n         * @param \\Closure|string|null $callback\n         * @return void \n         * @static \n         */ \n        public static function send($view, $data = [], $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        $instance->send($view, $data, $callback);\n        }\n                    /**\n         * Queue a new e-mail message for sending.\n         *\n         * @param \\Illuminate\\Contracts\\Mail\\Mailable|string|array $view\n         * @param string|null $queue\n         * @return mixed \n         * @static \n         */ \n        public static function queue($view, $queue = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        return $instance->queue($view, $queue);\n        }\n                    /**\n         * Queue a new e-mail message for sending after (n) seconds.\n         *\n         * @param \\DateTimeInterface|\\DateInterval|int $delay\n         * @param \\Illuminate\\Contracts\\Mail\\Mailable|string|array $view\n         * @param string|null $queue\n         * @return mixed \n         * @static \n         */ \n        public static function later($delay, $view, $queue = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        return $instance->later($delay, $view, $queue);\n        }\n                    /**\n         * Get the array of failed recipients.\n         *\n         * @return array \n         * @static \n         */ \n        public static function failures()\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\MailFake $instance */\n                        return $instance->failures();\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Notifications\\ChannelManager\n     */ \n        class Notification {\n                    /**\n         * Send the given notification to the given notifiable entities.\n         *\n         * @param \\Illuminate\\Support\\Collection|array|mixed $notifiables\n         * @param mixed $notification\n         * @return void \n         * @static \n         */ \n        public static function send($notifiables, $notification)\n        {\n                        /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                        $instance->send($notifiables, $notification);\n        }\n                    /**\n         * Send the given notification immediately.\n         *\n         * @param \\Illuminate\\Support\\Collection|array|mixed $notifiables\n         * @param mixed $notification\n         * @param array|null $channels\n         * @return void \n         * @static \n         */ \n        public static function sendNow($notifiables, $notification, $channels = null)\n        {\n                        /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                        $instance->sendNow($notifiables, $notification, $channels);\n        }\n                    /**\n         * Get a channel instance.\n         *\n         * @param string|null $name\n         * @return mixed \n         * @static \n         */ \n        public static function channel($name = null)\n        {\n                        /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                        return $instance->channel($name);\n        }\n                    /**\n         * Get the default channel driver name.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDefaultDriver()\n        {\n                        /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                        return $instance->getDefaultDriver();\n        }\n                    /**\n         * Get the default channel driver name.\n         *\n         * @return string \n         * @static \n         */ \n        public static function deliversVia()\n        {\n                        /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                        return $instance->deliversVia();\n        }\n                    /**\n         * Set the default channel driver name.\n         *\n         * @param string $channel\n         * @return void \n         * @static \n         */ \n        public static function deliverVia($channel)\n        {\n                        /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                        $instance->deliverVia($channel);\n        }\n                    /**\n         * Set the locale of notifications.\n         *\n         * @param string $locale\n         * @return \\Illuminate\\Notifications\\ChannelManager \n         * @static \n         */ \n        public static function locale($locale)\n        {\n                        /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                        return $instance->locale($locale);\n        }\n                    /**\n         * Get a driver instance.\n         *\n         * @param string|null $driver\n         * @return mixed \n         * @throws \\InvalidArgumentException\n         * @static \n         */ \n        public static function driver($driver = null)\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                        return $instance->driver($driver);\n        }\n                    /**\n         * Register a custom driver creator Closure.\n         *\n         * @param string $driver\n         * @param \\Closure $callback\n         * @return \\Illuminate\\Notifications\\ChannelManager \n         * @static \n         */ \n        public static function extend($driver, $callback)\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                        return $instance->extend($driver, $callback);\n        }\n                    /**\n         * Get all of the created \"drivers\".\n         *\n         * @return array \n         * @static \n         */ \n        public static function getDrivers()\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                        return $instance->getDrivers();\n        }\n                    /**\n         * Get the container instance used by the manager.\n         *\n         * @return \\Illuminate\\Contracts\\Container\\Container \n         * @static \n         */ \n        public static function getContainer()\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                        return $instance->getContainer();\n        }\n                    /**\n         * Set the container instance used by the manager.\n         *\n         * @param \\Illuminate\\Contracts\\Container\\Container $container\n         * @return \\Illuminate\\Notifications\\ChannelManager \n         * @static \n         */ \n        public static function setContainer($container)\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                        return $instance->setContainer($container);\n        }\n                    /**\n         * Forget all of the resolved driver instances.\n         *\n         * @return \\Illuminate\\Notifications\\ChannelManager \n         * @static \n         */ \n        public static function forgetDrivers()\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Notifications\\ChannelManager $instance */\n                        return $instance->forgetDrivers();\n        }\n                    /**\n         * Assert if a notification was sent on-demand based on a truth-test callback.\n         *\n         * @param string|\\Closure $notification\n         * @param callable|null $callback\n         * @return void \n         * @throws \\Exception\n         * @static \n         */ \n        public static function assertSentOnDemand($notification, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                        $instance->assertSentOnDemand($notification, $callback);\n        }\n                    /**\n         * Assert if a notification was sent based on a truth-test callback.\n         *\n         * @param mixed $notifiable\n         * @param string|\\Closure $notification\n         * @param callable|null $callback\n         * @return void \n         * @throws \\Exception\n         * @static \n         */ \n        public static function assertSentTo($notifiable, $notification, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                        $instance->assertSentTo($notifiable, $notification, $callback);\n        }\n                    /**\n         * Assert if a notification was sent on-demand a number of times.\n         *\n         * @param string $notification\n         * @param int $times\n         * @return void \n         * @static \n         */ \n        public static function assertSentOnDemandTimes($notification, $times = 1)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                        $instance->assertSentOnDemandTimes($notification, $times);\n        }\n                    /**\n         * Assert if a notification was sent a number of times.\n         *\n         * @param mixed $notifiable\n         * @param string $notification\n         * @param int $times\n         * @return void \n         * @static \n         */ \n        public static function assertSentToTimes($notifiable, $notification, $times = 1)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                        $instance->assertSentToTimes($notifiable, $notification, $times);\n        }\n                    /**\n         * Determine if a notification was sent based on a truth-test callback.\n         *\n         * @param mixed $notifiable\n         * @param string|\\Closure $notification\n         * @param callable|null $callback\n         * @return void \n         * @throws \\Exception\n         * @static \n         */ \n        public static function assertNotSentTo($notifiable, $notification, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                        $instance->assertNotSentTo($notifiable, $notification, $callback);\n        }\n                    /**\n         * Assert that no notifications were sent.\n         *\n         * @return void \n         * @static \n         */ \n        public static function assertNothingSent()\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                        $instance->assertNothingSent();\n        }\n                    /**\n         * Assert the total amount of times a notification was sent.\n         *\n         * @param string $notification\n         * @param int $expectedCount\n         * @return void \n         * @static \n         */ \n        public static function assertSentTimes($notification, $expectedCount)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                        $instance->assertSentTimes($notification, $expectedCount);\n        }\n                    /**\n         * Assert the total amount of times a notification was sent.\n         *\n         * @param int $expectedCount\n         * @param string $notification\n         * @return void \n         * @deprecated Use the assertSentTimes method instead\n         * @static \n         */ \n        public static function assertTimesSent($expectedCount, $notification)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                        $instance->assertTimesSent($expectedCount, $notification);\n        }\n                    /**\n         * Get all of the notifications matching a truth-test callback.\n         *\n         * @param mixed $notifiable\n         * @param string $notification\n         * @param callable|null $callback\n         * @return \\Illuminate\\Support\\Collection \n         * @static \n         */ \n        public static function sent($notifiable, $notification, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                        return $instance->sent($notifiable, $notification, $callback);\n        }\n                    /**\n         * Determine if there are more notifications left to inspect.\n         *\n         * @param mixed $notifiable\n         * @param string $notification\n         * @return bool \n         * @static \n         */ \n        public static function hasSent($notifiable, $notification)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake $instance */\n                        return $instance->hasSent($notifiable, $notification);\n        }\n                    /**\n         * Register a custom macro.\n         *\n         * @param string $name\n         * @param object|callable $macro\n         * @return void \n         * @static \n         */ \n        public static function macro($name, $macro)\n        {\n                        \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake::macro($name, $macro);\n        }\n                    /**\n         * Mix another object into the class.\n         *\n         * @param object $mixin\n         * @param bool $replace\n         * @return void \n         * @throws \\ReflectionException\n         * @static \n         */ \n        public static function mixin($mixin, $replace = true)\n        {\n                        \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake::mixin($mixin, $replace);\n        }\n                    /**\n         * Checks if macro is registered.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function hasMacro($name)\n        {\n                        return \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake::hasMacro($name);\n        }\n                    /**\n         * Flush the existing macros.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flushMacros()\n        {\n                        \\Illuminate\\Support\\Testing\\Fakes\\NotificationFake::flushMacros();\n        }\n         \n    }\n            /**\n     * \n     *\n     * @method static mixed reset(array $credentials, \\Closure $callback)\n     * @method static string sendResetLink(array $credentials, \\Closure $callback = null)\n     * @method static \\Illuminate\\Contracts\\Auth\\CanResetPassword getUser(array $credentials)\n     * @method static string createToken(\\Illuminate\\Contracts\\Auth\\CanResetPassword $user)\n     * @method static void deleteToken(\\Illuminate\\Contracts\\Auth\\CanResetPassword $user)\n     * @method static bool tokenExists(\\Illuminate\\Contracts\\Auth\\CanResetPassword $user, string $token)\n     * @method static \\Illuminate\\Auth\\Passwords\\TokenRepositoryInterface getRepository()\n     * @see \\Illuminate\\Auth\\Passwords\\PasswordBroker\n     */ \n        class Password {\n                    /**\n         * Attempt to get the broker from the local cache.\n         *\n         * @param string|null $name\n         * @return \\Illuminate\\Contracts\\Auth\\PasswordBroker \n         * @static \n         */ \n        public static function broker($name = null)\n        {\n                        /** @var \\Illuminate\\Auth\\Passwords\\PasswordBrokerManager $instance */\n                        return $instance->broker($name);\n        }\n                    /**\n         * Get the default password broker name.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDefaultDriver()\n        {\n                        /** @var \\Illuminate\\Auth\\Passwords\\PasswordBrokerManager $instance */\n                        return $instance->getDefaultDriver();\n        }\n                    /**\n         * Set the default password broker name.\n         *\n         * @param string $name\n         * @return void \n         * @static \n         */ \n        public static function setDefaultDriver($name)\n        {\n                        /** @var \\Illuminate\\Auth\\Passwords\\PasswordBrokerManager $instance */\n                        $instance->setDefaultDriver($name);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Queue\\QueueManager\n     * @see \\Illuminate\\Queue\\Queue\n     */ \n        class Queue {\n                    /**\n         * Register an event listener for the before job event.\n         *\n         * @param mixed $callback\n         * @return void \n         * @static \n         */ \n        public static function before($callback)\n        {\n                        /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                        $instance->before($callback);\n        }\n                    /**\n         * Register an event listener for the after job event.\n         *\n         * @param mixed $callback\n         * @return void \n         * @static \n         */ \n        public static function after($callback)\n        {\n                        /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                        $instance->after($callback);\n        }\n                    /**\n         * Register an event listener for the exception occurred job event.\n         *\n         * @param mixed $callback\n         * @return void \n         * @static \n         */ \n        public static function exceptionOccurred($callback)\n        {\n                        /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                        $instance->exceptionOccurred($callback);\n        }\n                    /**\n         * Register an event listener for the daemon queue loop.\n         *\n         * @param mixed $callback\n         * @return void \n         * @static \n         */ \n        public static function looping($callback)\n        {\n                        /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                        $instance->looping($callback);\n        }\n                    /**\n         * Register an event listener for the failed job event.\n         *\n         * @param mixed $callback\n         * @return void \n         * @static \n         */ \n        public static function failing($callback)\n        {\n                        /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                        $instance->failing($callback);\n        }\n                    /**\n         * Register an event listener for the daemon queue stopping.\n         *\n         * @param mixed $callback\n         * @return void \n         * @static \n         */ \n        public static function stopping($callback)\n        {\n                        /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                        $instance->stopping($callback);\n        }\n                    /**\n         * Determine if the driver is connected.\n         *\n         * @param string|null $name\n         * @return bool \n         * @static \n         */ \n        public static function connected($name = null)\n        {\n                        /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                        return $instance->connected($name);\n        }\n                    /**\n         * Resolve a queue connection instance.\n         *\n         * @param string|null $name\n         * @return \\Illuminate\\Contracts\\Queue\\Queue \n         * @static \n         */ \n        public static function connection($name = null)\n        {\n                        /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                        return $instance->connection($name);\n        }\n                    /**\n         * Add a queue connection resolver.\n         *\n         * @param string $driver\n         * @param \\Closure $resolver\n         * @return void \n         * @static \n         */ \n        public static function extend($driver, $resolver)\n        {\n                        /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                        $instance->extend($driver, $resolver);\n        }\n                    /**\n         * Add a queue connection resolver.\n         *\n         * @param string $driver\n         * @param \\Closure $resolver\n         * @return void \n         * @static \n         */ \n        public static function addConnector($driver, $resolver)\n        {\n                        /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                        $instance->addConnector($driver, $resolver);\n        }\n                    /**\n         * Get the name of the default queue connection.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDefaultDriver()\n        {\n                        /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                        return $instance->getDefaultDriver();\n        }\n                    /**\n         * Set the name of the default queue connection.\n         *\n         * @param string $name\n         * @return void \n         * @static \n         */ \n        public static function setDefaultDriver($name)\n        {\n                        /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                        $instance->setDefaultDriver($name);\n        }\n                    /**\n         * Get the full name for the given connection.\n         *\n         * @param string|null $connection\n         * @return string \n         * @static \n         */ \n        public static function getName($connection = null)\n        {\n                        /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                        return $instance->getName($connection);\n        }\n                    /**\n         * Get the application instance used by the manager.\n         *\n         * @return \\Illuminate\\Contracts\\Foundation\\Application \n         * @static \n         */ \n        public static function getApplication()\n        {\n                        /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                        return $instance->getApplication();\n        }\n                    /**\n         * Set the application instance used by the manager.\n         *\n         * @param \\Illuminate\\Contracts\\Foundation\\Application $app\n         * @return \\Illuminate\\Queue\\QueueManager \n         * @static \n         */ \n        public static function setApplication($app)\n        {\n                        /** @var \\Illuminate\\Queue\\QueueManager $instance */\n                        return $instance->setApplication($app);\n        }\n                    /**\n         * Assert if a job was pushed based on a truth-test callback.\n         *\n         * @param string|\\Closure $job\n         * @param callable|int|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertPushed($job, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        $instance->assertPushed($job, $callback);\n        }\n                    /**\n         * Assert if a job was pushed based on a truth-test callback.\n         *\n         * @param string $queue\n         * @param string|\\Closure $job\n         * @param callable|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertPushedOn($queue, $job, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        $instance->assertPushedOn($queue, $job, $callback);\n        }\n                    /**\n         * Assert if a job was pushed with chained jobs based on a truth-test callback.\n         *\n         * @param string $job\n         * @param array $expectedChain\n         * @param callable|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertPushedWithChain($job, $expectedChain = [], $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        $instance->assertPushedWithChain($job, $expectedChain, $callback);\n        }\n                    /**\n         * Assert if a job was pushed with an empty chain based on a truth-test callback.\n         *\n         * @param string $job\n         * @param callable|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertPushedWithoutChain($job, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        $instance->assertPushedWithoutChain($job, $callback);\n        }\n                    /**\n         * Determine if a job was pushed based on a truth-test callback.\n         *\n         * @param string|\\Closure $job\n         * @param callable|null $callback\n         * @return void \n         * @static \n         */ \n        public static function assertNotPushed($job, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        $instance->assertNotPushed($job, $callback);\n        }\n                    /**\n         * Assert that no jobs were pushed.\n         *\n         * @return void \n         * @static \n         */ \n        public static function assertNothingPushed()\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        $instance->assertNothingPushed();\n        }\n                    /**\n         * Get all of the jobs matching a truth-test callback.\n         *\n         * @param string $job\n         * @param callable|null $callback\n         * @return \\Illuminate\\Support\\Collection \n         * @static \n         */ \n        public static function pushed($job, $callback = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        return $instance->pushed($job, $callback);\n        }\n                    /**\n         * Determine if there are any stored jobs for a given class.\n         *\n         * @param string $job\n         * @return bool \n         * @static \n         */ \n        public static function hasPushed($job)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        return $instance->hasPushed($job);\n        }\n                    /**\n         * Get the size of the queue.\n         *\n         * @param string|null $queue\n         * @return int \n         * @static \n         */ \n        public static function size($queue = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        return $instance->size($queue);\n        }\n                    /**\n         * Push a new job onto the queue.\n         *\n         * @param string|object $job\n         * @param mixed $data\n         * @param string|null $queue\n         * @return mixed \n         * @static \n         */ \n        public static function push($job, $data = '', $queue = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        return $instance->push($job, $data, $queue);\n        }\n                    /**\n         * Push a raw payload onto the queue.\n         *\n         * @param string $payload\n         * @param string|null $queue\n         * @param array $options\n         * @return mixed \n         * @static \n         */ \n        public static function pushRaw($payload, $queue = null, $options = [])\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        return $instance->pushRaw($payload, $queue, $options);\n        }\n                    /**\n         * Push a new job onto the queue after a delay.\n         *\n         * @param \\DateTimeInterface|\\DateInterval|int $delay\n         * @param string|object $job\n         * @param mixed $data\n         * @param string|null $queue\n         * @return mixed \n         * @static \n         */ \n        public static function later($delay, $job, $data = '', $queue = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        return $instance->later($delay, $job, $data, $queue);\n        }\n                    /**\n         * Push a new job onto the queue.\n         *\n         * @param string $queue\n         * @param string|object $job\n         * @param mixed $data\n         * @return mixed \n         * @static \n         */ \n        public static function pushOn($queue, $job, $data = '')\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        return $instance->pushOn($queue, $job, $data);\n        }\n                    /**\n         * Push a new job onto the queue after a delay.\n         *\n         * @param string $queue\n         * @param \\DateTimeInterface|\\DateInterval|int $delay\n         * @param string|object $job\n         * @param mixed $data\n         * @return mixed \n         * @static \n         */ \n        public static function laterOn($queue, $delay, $job, $data = '')\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        return $instance->laterOn($queue, $delay, $job, $data);\n        }\n                    /**\n         * Pop the next job off of the queue.\n         *\n         * @param string|null $queue\n         * @return \\Illuminate\\Contracts\\Queue\\Job|null \n         * @static \n         */ \n        public static function pop($queue = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        return $instance->pop($queue);\n        }\n                    /**\n         * Push an array of jobs onto the queue.\n         *\n         * @param array $jobs\n         * @param mixed $data\n         * @param string|null $queue\n         * @return mixed \n         * @static \n         */ \n        public static function bulk($jobs, $data = '', $queue = null)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        return $instance->bulk($jobs, $data, $queue);\n        }\n                    /**\n         * Get the jobs that have been pushed.\n         *\n         * @return array \n         * @static \n         */ \n        public static function pushedJobs()\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        return $instance->pushedJobs();\n        }\n                    /**\n         * Get the connection name for the queue.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getConnectionName()\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        return $instance->getConnectionName();\n        }\n                    /**\n         * Set the connection name for the queue.\n         *\n         * @param string $name\n         * @return \\Illuminate\\Support\\Testing\\Fakes\\QueueFake \n         * @static \n         */ \n        public static function setConnectionName($name)\n        {\n                        /** @var \\Illuminate\\Support\\Testing\\Fakes\\QueueFake $instance */\n                        return $instance->setConnectionName($name);\n        }\n                    /**\n         * Migrate the delayed jobs that are ready to the regular queue.\n         *\n         * @param string $from\n         * @param string $to\n         * @return array \n         * @static \n         */ \n        public static function migrateExpiredJobs($from, $to)\n        {\n                        /** @var \\Illuminate\\Queue\\RedisQueue $instance */\n                        return $instance->migrateExpiredJobs($from, $to);\n        }\n                    /**\n         * Delete a reserved job from the queue.\n         *\n         * @param string $queue\n         * @param \\Illuminate\\Queue\\Jobs\\RedisJob $job\n         * @return void \n         * @static \n         */ \n        public static function deleteReserved($queue, $job)\n        {\n                        /** @var \\Illuminate\\Queue\\RedisQueue $instance */\n                        $instance->deleteReserved($queue, $job);\n        }\n                    /**\n         * Delete a reserved job from the reserved queue and release it.\n         *\n         * @param string $queue\n         * @param \\Illuminate\\Queue\\Jobs\\RedisJob $job\n         * @param int $delay\n         * @return void \n         * @static \n         */ \n        public static function deleteAndRelease($queue, $job, $delay)\n        {\n                        /** @var \\Illuminate\\Queue\\RedisQueue $instance */\n                        $instance->deleteAndRelease($queue, $job, $delay);\n        }\n                    /**\n         * Delete all of the jobs from the queue.\n         *\n         * @param string $queue\n         * @return int \n         * @static \n         */ \n        public static function clear($queue)\n        {\n                        /** @var \\Illuminate\\Queue\\RedisQueue $instance */\n                        return $instance->clear($queue);\n        }\n                    /**\n         * Get the queue or return the default.\n         *\n         * @param string|null $queue\n         * @return string \n         * @static \n         */ \n        public static function getQueue($queue)\n        {\n                        /** @var \\Illuminate\\Queue\\RedisQueue $instance */\n                        return $instance->getQueue($queue);\n        }\n                    /**\n         * Get the connection for the queue.\n         *\n         * @return \\Illuminate\\Redis\\Connections\\Connection \n         * @static \n         */ \n        public static function getConnection()\n        {\n                        /** @var \\Illuminate\\Queue\\RedisQueue $instance */\n                        return $instance->getConnection();\n        }\n                    /**\n         * Get the underlying Redis instance.\n         *\n         * @return \\Illuminate\\Contracts\\Redis\\Factory \n         * @static \n         */ \n        public static function getRedis()\n        {\n                        /** @var \\Illuminate\\Queue\\RedisQueue $instance */\n                        return $instance->getRedis();\n        }\n                    /**\n         * Get the backoff for an object-based queue handler.\n         *\n         * @param mixed $job\n         * @return mixed \n         * @static \n         */ \n        public static function getJobBackoff($job)\n        {            //Method inherited from \\Illuminate\\Queue\\Queue         \n                        /** @var \\Illuminate\\Queue\\RedisQueue $instance */\n                        return $instance->getJobBackoff($job);\n        }\n                    /**\n         * Get the expiration timestamp for an object-based queue handler.\n         *\n         * @param mixed $job\n         * @return mixed \n         * @static \n         */ \n        public static function getJobExpiration($job)\n        {            //Method inherited from \\Illuminate\\Queue\\Queue         \n                        /** @var \\Illuminate\\Queue\\RedisQueue $instance */\n                        return $instance->getJobExpiration($job);\n        }\n                    /**\n         * Register a callback to be executed when creating job payloads.\n         *\n         * @param callable|null $callback\n         * @return void \n         * @static \n         */ \n        public static function createPayloadUsing($callback)\n        {            //Method inherited from \\Illuminate\\Queue\\Queue         \n                        \\Illuminate\\Queue\\RedisQueue::createPayloadUsing($callback);\n        }\n                    /**\n         * Get the container instance being used by the connection.\n         *\n         * @return \\Illuminate\\Container\\Container \n         * @static \n         */ \n        public static function getContainer()\n        {            //Method inherited from \\Illuminate\\Queue\\Queue         \n                        /** @var \\Illuminate\\Queue\\RedisQueue $instance */\n                        return $instance->getContainer();\n        }\n                    /**\n         * Set the IoC container instance.\n         *\n         * @param \\Illuminate\\Container\\Container $container\n         * @return void \n         * @static \n         */ \n        public static function setContainer($container)\n        {            //Method inherited from \\Illuminate\\Queue\\Queue         \n                        /** @var \\Illuminate\\Queue\\RedisQueue $instance */\n                        $instance->setContainer($container);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Routing\\Redirector\n     */ \n        class Redirect {\n                    /**\n         * Create a new redirect response to the \"home\" route.\n         *\n         * @param int $status\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function home($status = 302)\n        {\n                        /** @var \\Illuminate\\Routing\\Redirector $instance */\n                        return $instance->home($status);\n        }\n                    /**\n         * Create a new redirect response to the previous location.\n         *\n         * @param int $status\n         * @param array $headers\n         * @param mixed $fallback\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function back($status = 302, $headers = [], $fallback = false)\n        {\n                        /** @var \\Illuminate\\Routing\\Redirector $instance */\n                        return $instance->back($status, $headers, $fallback);\n        }\n                    /**\n         * Create a new redirect response to the current URI.\n         *\n         * @param int $status\n         * @param array $headers\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function refresh($status = 302, $headers = [])\n        {\n                        /** @var \\Illuminate\\Routing\\Redirector $instance */\n                        return $instance->refresh($status, $headers);\n        }\n                    /**\n         * Create a new redirect response, while putting the current URL in the session.\n         *\n         * @param string $path\n         * @param int $status\n         * @param array $headers\n         * @param bool|null $secure\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function guest($path, $status = 302, $headers = [], $secure = null)\n        {\n                        /** @var \\Illuminate\\Routing\\Redirector $instance */\n                        return $instance->guest($path, $status, $headers, $secure);\n        }\n                    /**\n         * Create a new redirect response to the previously intended location.\n         *\n         * @param string $default\n         * @param int $status\n         * @param array $headers\n         * @param bool|null $secure\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function intended($default = '/', $status = 302, $headers = [], $secure = null)\n        {\n                        /** @var \\Illuminate\\Routing\\Redirector $instance */\n                        return $instance->intended($default, $status, $headers, $secure);\n        }\n                    /**\n         * Set the intended url.\n         *\n         * @param string $url\n         * @return void \n         * @static \n         */ \n        public static function setIntendedUrl($url)\n        {\n                        /** @var \\Illuminate\\Routing\\Redirector $instance */\n                        $instance->setIntendedUrl($url);\n        }\n                    /**\n         * Create a new redirect response to the given path.\n         *\n         * @param string $path\n         * @param int $status\n         * @param array $headers\n         * @param bool|null $secure\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function to($path, $status = 302, $headers = [], $secure = null)\n        {\n                        /** @var \\Illuminate\\Routing\\Redirector $instance */\n                        return $instance->to($path, $status, $headers, $secure);\n        }\n                    /**\n         * Create a new redirect response to an external URL (no validation).\n         *\n         * @param string $path\n         * @param int $status\n         * @param array $headers\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function away($path, $status = 302, $headers = [])\n        {\n                        /** @var \\Illuminate\\Routing\\Redirector $instance */\n                        return $instance->away($path, $status, $headers);\n        }\n                    /**\n         * Create a new redirect response to the given HTTPS path.\n         *\n         * @param string $path\n         * @param int $status\n         * @param array $headers\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function secure($path, $status = 302, $headers = [])\n        {\n                        /** @var \\Illuminate\\Routing\\Redirector $instance */\n                        return $instance->secure($path, $status, $headers);\n        }\n                    /**\n         * Create a new redirect response to a named route.\n         *\n         * @param string $route\n         * @param mixed $parameters\n         * @param int $status\n         * @param array $headers\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function route($route, $parameters = [], $status = 302, $headers = [])\n        {\n                        /** @var \\Illuminate\\Routing\\Redirector $instance */\n                        return $instance->route($route, $parameters, $status, $headers);\n        }\n                    /**\n         * Create a new redirect response to a signed named route.\n         *\n         * @param string $route\n         * @param mixed $parameters\n         * @param \\DateTimeInterface|\\DateInterval|int|null $expiration\n         * @param int $status\n         * @param array $headers\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function signedRoute($route, $parameters = [], $expiration = null, $status = 302, $headers = [])\n        {\n                        /** @var \\Illuminate\\Routing\\Redirector $instance */\n                        return $instance->signedRoute($route, $parameters, $expiration, $status, $headers);\n        }\n                    /**\n         * Create a new redirect response to a signed named route.\n         *\n         * @param string $route\n         * @param \\DateTimeInterface|\\DateInterval|int|null $expiration\n         * @param mixed $parameters\n         * @param int $status\n         * @param array $headers\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function temporarySignedRoute($route, $expiration, $parameters = [], $status = 302, $headers = [])\n        {\n                        /** @var \\Illuminate\\Routing\\Redirector $instance */\n                        return $instance->temporarySignedRoute($route, $expiration, $parameters, $status, $headers);\n        }\n                    /**\n         * Create a new redirect response to a controller action.\n         *\n         * @param string|array $action\n         * @param mixed $parameters\n         * @param int $status\n         * @param array $headers\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function action($action, $parameters = [], $status = 302, $headers = [])\n        {\n                        /** @var \\Illuminate\\Routing\\Redirector $instance */\n                        return $instance->action($action, $parameters, $status, $headers);\n        }\n                    /**\n         * Get the URL generator instance.\n         *\n         * @return \\Illuminate\\Routing\\UrlGenerator \n         * @static \n         */ \n        public static function getUrlGenerator()\n        {\n                        /** @var \\Illuminate\\Routing\\Redirector $instance */\n                        return $instance->getUrlGenerator();\n        }\n                    /**\n         * Set the active session store.\n         *\n         * @param \\Illuminate\\Session\\Store $session\n         * @return void \n         * @static \n         */ \n        public static function setSession($session)\n        {\n                        /** @var \\Illuminate\\Routing\\Redirector $instance */\n                        $instance->setSession($session);\n        }\n                    /**\n         * Register a custom macro.\n         *\n         * @param string $name\n         * @param object|callable $macro\n         * @return void \n         * @static \n         */ \n        public static function macro($name, $macro)\n        {\n                        \\Illuminate\\Routing\\Redirector::macro($name, $macro);\n        }\n                    /**\n         * Mix another object into the class.\n         *\n         * @param object $mixin\n         * @param bool $replace\n         * @return void \n         * @throws \\ReflectionException\n         * @static \n         */ \n        public static function mixin($mixin, $replace = true)\n        {\n                        \\Illuminate\\Routing\\Redirector::mixin($mixin, $replace);\n        }\n                    /**\n         * Checks if macro is registered.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function hasMacro($name)\n        {\n                        return \\Illuminate\\Routing\\Redirector::hasMacro($name);\n        }\n                    /**\n         * Flush the existing macros.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flushMacros()\n        {\n                        \\Illuminate\\Routing\\Redirector::flushMacros();\n        }\n         \n    }\n            /**\n     * \n     *\n     * @method static mixed filterFiles(mixed $files)\n     * @see \\Illuminate\\Http\\Request\n     */ \n        class Request {\n                    /**\n         * Create a new Illuminate HTTP request from server variables.\n         *\n         * @return static \n         * @static \n         */ \n        public static function capture()\n        {\n                        return \\Illuminate\\Http\\Request::capture();\n        }\n                    /**\n         * Return the Request instance.\n         *\n         * @return \\Illuminate\\Http\\Request \n         * @static \n         */ \n        public static function instance()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->instance();\n        }\n                    /**\n         * Get the request method.\n         *\n         * @return string \n         * @static \n         */ \n        public static function method()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->method();\n        }\n                    /**\n         * Get the root URL for the application.\n         *\n         * @return string \n         * @static \n         */ \n        public static function root()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->root();\n        }\n                    /**\n         * Get the URL (no query string) for the request.\n         *\n         * @return string \n         * @static \n         */ \n        public static function url()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->url();\n        }\n                    /**\n         * Get the full URL for the request.\n         *\n         * @return string \n         * @static \n         */ \n        public static function fullUrl()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->fullUrl();\n        }\n                    /**\n         * Get the full URL for the request with the added query string parameters.\n         *\n         * @param array $query\n         * @return string \n         * @static \n         */ \n        public static function fullUrlWithQuery($query)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->fullUrlWithQuery($query);\n        }\n                    /**\n         * Get the full URL for the request without the given query string parameters.\n         *\n         * @param array|string $query\n         * @return string \n         * @static \n         */ \n        public static function fullUrlWithoutQuery($keys)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->fullUrlWithoutQuery($keys);\n        }\n                    /**\n         * Get the current path info for the request.\n         *\n         * @return string \n         * @static \n         */ \n        public static function path()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->path();\n        }\n                    /**\n         * Get the current decoded path info for the request.\n         *\n         * @return string \n         * @static \n         */ \n        public static function decodedPath()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->decodedPath();\n        }\n                    /**\n         * Get a segment from the URI (1 based index).\n         *\n         * @param int $index\n         * @param string|null $default\n         * @return string|null \n         * @static \n         */ \n        public static function segment($index, $default = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->segment($index, $default);\n        }\n                    /**\n         * Get all of the segments for the request path.\n         *\n         * @return array \n         * @static \n         */ \n        public static function segments()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->segments();\n        }\n                    /**\n         * Determine if the current request URI matches a pattern.\n         *\n         * @param mixed $patterns\n         * @return bool \n         * @static \n         */ \n        public static function is(...$patterns)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->is(...$patterns);\n        }\n                    /**\n         * Determine if the route name matches a given pattern.\n         *\n         * @param mixed $patterns\n         * @return bool \n         * @static \n         */ \n        public static function routeIs(...$patterns)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->routeIs(...$patterns);\n        }\n                    /**\n         * Determine if the current request URL and query string match a pattern.\n         *\n         * @param mixed $patterns\n         * @return bool \n         * @static \n         */ \n        public static function fullUrlIs(...$patterns)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->fullUrlIs(...$patterns);\n        }\n                    /**\n         * Determine if the request is the result of an AJAX call.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function ajax()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->ajax();\n        }\n                    /**\n         * Determine if the request is the result of a PJAX call.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function pjax()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->pjax();\n        }\n                    /**\n         * Determine if the request is the result of a prefetch call.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function prefetch()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->prefetch();\n        }\n                    /**\n         * Determine if the request is over HTTPS.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function secure()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->secure();\n        }\n                    /**\n         * Get the client IP address.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function ip()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->ip();\n        }\n                    /**\n         * Get the client IP addresses.\n         *\n         * @return array \n         * @static \n         */ \n        public static function ips()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->ips();\n        }\n                    /**\n         * Get the client user agent.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function userAgent()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->userAgent();\n        }\n                    /**\n         * Merge new input into the current request's input array.\n         *\n         * @param array $input\n         * @return \\Illuminate\\Http\\Request \n         * @static \n         */ \n        public static function merge($input)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->merge($input);\n        }\n                    /**\n         * Merge new input into the request's input, but only when that key is missing from the request.\n         *\n         * @param array $input\n         * @return \\Illuminate\\Http\\Request \n         * @static \n         */ \n        public static function mergeIfMissing($input)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->mergeIfMissing($input);\n        }\n                    /**\n         * Replace the input for the current request.\n         *\n         * @param array $input\n         * @return \\Illuminate\\Http\\Request \n         * @static \n         */ \n        public static function replace($input)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->replace($input);\n        }\n                    /**\n         * This method belongs to Symfony HttpFoundation and is not usually needed when using Laravel.\n         * \n         * Instead, you may use the \"input\" method.\n         *\n         * @param string $key\n         * @param mixed $default\n         * @return mixed \n         * @static \n         */ \n        public static function get($key, $default = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->get($key, $default);\n        }\n                    /**\n         * Get the JSON payload for the request.\n         *\n         * @param string|null $key\n         * @param mixed $default\n         * @return \\Symfony\\Component\\HttpFoundation\\ParameterBag|mixed \n         * @static \n         */ \n        public static function json($key = null, $default = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->json($key, $default);\n        }\n                    /**\n         * Create a new request instance from the given Laravel request.\n         *\n         * @param \\Illuminate\\Http\\Request $from\n         * @param \\Illuminate\\Http\\Request|null $to\n         * @return static \n         * @static \n         */ \n        public static function createFrom($from, $to = null)\n        {\n                        return \\Illuminate\\Http\\Request::createFrom($from, $to);\n        }\n                    /**\n         * Create an Illuminate request from a Symfony instance.\n         *\n         * @param \\Symfony\\Component\\HttpFoundation\\Request $request\n         * @return static \n         * @static \n         */ \n        public static function createFromBase($request)\n        {\n                        return \\Illuminate\\Http\\Request::createFromBase($request);\n        }\n                    /**\n         * Clones a request and overrides some of its parameters.\n         *\n         * @return static \n         * @param array|null $query The GET parameters\n         * @param array|null $request The POST parameters\n         * @param array|null $attributes The request attributes (parameters parsed from the PATH_INFO, ...)\n         * @param array|null $cookies The COOKIE parameters\n         * @param array|null $files The FILES parameters\n         * @param array|null $server The SERVER parameters\n         * @return static \n         * @static \n         */ \n        public static function duplicate($query = null, $request = null, $attributes = null, $cookies = null, $files = null, $server = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->duplicate($query, $request, $attributes, $cookies, $files, $server);\n        }\n                    /**\n         * Get the session associated with the request.\n         *\n         * @return \\Illuminate\\Session\\Store \n         * @throws \\RuntimeException\n         * @static \n         */ \n        public static function session()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->session();\n        }\n                    /**\n         * Get the session associated with the request.\n         *\n         * @return \\Illuminate\\Session\\Store|null \n         * @static \n         */ \n        public static function getSession()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getSession();\n        }\n                    /**\n         * Set the session instance on the request.\n         *\n         * @param \\Illuminate\\Contracts\\Session\\Session $session\n         * @return void \n         * @static \n         */ \n        public static function setLaravelSession($session)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        $instance->setLaravelSession($session);\n        }\n                    /**\n         * Get the user making the request.\n         *\n         * @param string|null $guard\n         * @return mixed \n         * @static \n         */ \n        public static function user($guard = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->user($guard);\n        }\n                    /**\n         * Get the route handling the request.\n         *\n         * @param string|null $param\n         * @param mixed $default\n         * @return \\Illuminate\\Routing\\Route|object|string|null \n         * @static \n         */ \n        public static function route($param = null, $default = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->route($param, $default);\n        }\n                    /**\n         * Get a unique fingerprint for the request / route / IP address.\n         *\n         * @return string \n         * @throws \\RuntimeException\n         * @static \n         */ \n        public static function fingerprint()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->fingerprint();\n        }\n                    /**\n         * Set the JSON payload for the request.\n         *\n         * @param \\Symfony\\Component\\HttpFoundation\\ParameterBag $json\n         * @return \\Illuminate\\Http\\Request \n         * @static \n         */ \n        public static function setJson($json)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->setJson($json);\n        }\n                    /**\n         * Get the user resolver callback.\n         *\n         * @return \\Closure \n         * @static \n         */ \n        public static function getUserResolver()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getUserResolver();\n        }\n                    /**\n         * Set the user resolver callback.\n         *\n         * @param \\Closure $callback\n         * @return \\Illuminate\\Http\\Request \n         * @static \n         */ \n        public static function setUserResolver($callback)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->setUserResolver($callback);\n        }\n                    /**\n         * Get the route resolver callback.\n         *\n         * @return \\Closure \n         * @static \n         */ \n        public static function getRouteResolver()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getRouteResolver();\n        }\n                    /**\n         * Set the route resolver callback.\n         *\n         * @param \\Closure $callback\n         * @return \\Illuminate\\Http\\Request \n         * @static \n         */ \n        public static function setRouteResolver($callback)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->setRouteResolver($callback);\n        }\n                    /**\n         * Get all of the input and files for the request.\n         *\n         * @return array \n         * @static \n         */ \n        public static function toArray()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->toArray();\n        }\n                    /**\n         * Determine if the given offset exists.\n         *\n         * @param string $offset\n         * @return bool \n         * @static \n         */ \n        public static function offsetExists($offset)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->offsetExists($offset);\n        }\n                    /**\n         * Get the value at the given offset.\n         *\n         * @param string $offset\n         * @return mixed \n         * @static \n         */ \n        public static function offsetGet($offset)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->offsetGet($offset);\n        }\n                    /**\n         * Set the value at the given offset.\n         *\n         * @param string $offset\n         * @param mixed $value\n         * @return void \n         * @static \n         */ \n        public static function offsetSet($offset, $value)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        $instance->offsetSet($offset, $value);\n        }\n                    /**\n         * Remove the value at the given offset.\n         *\n         * @param string $offset\n         * @return void \n         * @static \n         */ \n        public static function offsetUnset($offset)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        $instance->offsetUnset($offset);\n        }\n                    /**\n         * Sets the parameters for this request.\n         * \n         * This method also re-initializes all properties.\n         *\n         * @param array $query The GET parameters\n         * @param array $request The POST parameters\n         * @param array $attributes The request attributes (parameters parsed from the PATH_INFO, ...)\n         * @param array $cookies The COOKIE parameters\n         * @param array $files The FILES parameters\n         * @param array $server The SERVER parameters\n         * @param string|resource|null $content The raw body data\n         * @static \n         */ \n        public static function initialize($query = [], $request = [], $attributes = [], $cookies = [], $files = [], $server = [], $content = null)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->initialize($query, $request, $attributes, $cookies, $files, $server, $content);\n        }\n                    /**\n         * Creates a new request with values from PHP's super globals.\n         *\n         * @return static \n         * @static \n         */ \n        public static function createFromGlobals()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        return \\Illuminate\\Http\\Request::createFromGlobals();\n        }\n                    /**\n         * Creates a Request based on a given URI and configuration.\n         * \n         * The information contained in the URI always take precedence\n         * over the other information (server and parameters).\n         *\n         * @param string $uri The URI\n         * @param string $method The HTTP method\n         * @param array $parameters The query (GET) or request (POST) parameters\n         * @param array $cookies The request cookies ($_COOKIE)\n         * @param array $files The request files ($_FILES)\n         * @param array $server The server parameters ($_SERVER)\n         * @param string|resource|null $content The raw body data\n         * @return static \n         * @static \n         */ \n        public static function create($uri, $method = 'GET', $parameters = [], $cookies = [], $files = [], $server = [], $content = null)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        return \\Illuminate\\Http\\Request::create($uri, $method, $parameters, $cookies, $files, $server, $content);\n        }\n                    /**\n         * Sets a callable able to create a Request instance.\n         * \n         * This is mainly useful when you need to override the Request class\n         * to keep BC with an existing system. It should not be used for any\n         * other purpose.\n         *\n         * @static \n         */ \n        public static function setFactory($callable)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        return \\Illuminate\\Http\\Request::setFactory($callable);\n        }\n                    /**\n         * Overrides the PHP global variables according to this request instance.\n         * \n         * It overrides $_GET, $_POST, $_REQUEST, $_SERVER, $_COOKIE.\n         * $_FILES is never overridden, see rfc1867\n         *\n         * @static \n         */ \n        public static function overrideGlobals()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->overrideGlobals();\n        }\n                    /**\n         * Sets a list of trusted proxies.\n         * \n         * You should only list the reverse proxies that you manage directly.\n         *\n         * @param array $proxies A list of trusted proxies, the string 'REMOTE_ADDR' will be replaced with $_SERVER['REMOTE_ADDR']\n         * @param int $trustedHeaderSet A bit field of Request::HEADER_*, to set which headers to trust from your proxies\n         * @static \n         */ \n        public static function setTrustedProxies($proxies, $trustedHeaderSet)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        return \\Illuminate\\Http\\Request::setTrustedProxies($proxies, $trustedHeaderSet);\n        }\n                    /**\n         * Gets the list of trusted proxies.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getTrustedProxies()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        return \\Illuminate\\Http\\Request::getTrustedProxies();\n        }\n                    /**\n         * Gets the set of trusted headers from trusted proxies.\n         *\n         * @return int A bit field of Request::HEADER_* that defines which headers are trusted from your proxies\n         * @static \n         */ \n        public static function getTrustedHeaderSet()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        return \\Illuminate\\Http\\Request::getTrustedHeaderSet();\n        }\n                    /**\n         * Sets a list of trusted host patterns.\n         * \n         * You should only list the hosts you manage using regexs.\n         *\n         * @param array $hostPatterns A list of trusted host patterns\n         * @static \n         */ \n        public static function setTrustedHosts($hostPatterns)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        return \\Illuminate\\Http\\Request::setTrustedHosts($hostPatterns);\n        }\n                    /**\n         * Gets the list of trusted host patterns.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getTrustedHosts()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        return \\Illuminate\\Http\\Request::getTrustedHosts();\n        }\n                    /**\n         * Normalizes a query string.\n         * \n         * It builds a normalized query string, where keys/value pairs are alphabetized,\n         * have consistent escaping and unneeded delimiters are removed.\n         *\n         * @return string \n         * @static \n         */ \n        public static function normalizeQueryString($qs)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        return \\Illuminate\\Http\\Request::normalizeQueryString($qs);\n        }\n                    /**\n         * Enables support for the _method request parameter to determine the intended HTTP method.\n         * \n         * Be warned that enabling this feature might lead to CSRF issues in your code.\n         * Check that you are using CSRF tokens when required.\n         * If the HTTP method parameter override is enabled, an html-form with method \"POST\" can be altered\n         * and used to send a \"PUT\" or \"DELETE\" request via the _method request parameter.\n         * If these methods are not protected against CSRF, this presents a possible vulnerability.\n         * \n         * The HTTP method can only be overridden when the real HTTP method is POST.\n         *\n         * @static \n         */ \n        public static function enableHttpMethodParameterOverride()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        return \\Illuminate\\Http\\Request::enableHttpMethodParameterOverride();\n        }\n                    /**\n         * Checks whether support for the _method request parameter is enabled.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function getHttpMethodParameterOverride()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        return \\Illuminate\\Http\\Request::getHttpMethodParameterOverride();\n        }\n                    /**\n         * Whether the request contains a Session which was started in one of the\n         * previous requests.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function hasPreviousSession()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->hasPreviousSession();\n        }\n                    /**\n         * Whether the request contains a Session object.\n         * \n         * This method does not give any information about the state of the session object,\n         * like whether the session is started or not. It is just a way to check if this Request\n         * is associated with a Session instance.\n         *\n         * @param bool $skipIfUninitialized When true, ignores factories injected by `setSessionFactory`\n         * @return bool \n         * @static \n         */ \n        public static function hasSession()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->hasSession();\n        }\n                    /**\n         * \n         *\n         * @static \n         */ \n        public static function setSession($session)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->setSession($session);\n        }\n                    /**\n         * \n         *\n         * @internal \n         * @param \\Symfony\\Component\\HttpFoundation\\callable():  SessionInterface $factory\n         * @static \n         */ \n        public static function setSessionFactory($factory)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->setSessionFactory($factory);\n        }\n                    /**\n         * Returns the client IP addresses.\n         * \n         * In the returned array the most trusted IP address is first, and the\n         * least trusted one last. The \"real\" client IP address is the last one,\n         * but this is also the least trusted one. Trusted proxies are stripped.\n         * \n         * Use this method carefully; you should use getClientIp() instead.\n         *\n         * @return array \n         * @see getClientIp()\n         * @static \n         */ \n        public static function getClientIps()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getClientIps();\n        }\n                    /**\n         * Returns the client IP address.\n         * \n         * This method can read the client IP address from the \"X-Forwarded-For\" header\n         * when trusted proxies were set via \"setTrustedProxies()\". The \"X-Forwarded-For\"\n         * header value is a comma+space separated list of IP addresses, the left-most\n         * being the original client, and each successive proxy that passed the request\n         * adding the IP address where it received the request from.\n         * \n         * If your reverse proxy uses a different header name than \"X-Forwarded-For\",\n         * (\"Client-Ip\" for instance), configure it via the $trustedHeaderSet\n         * argument of the Request::setTrustedProxies() method instead.\n         *\n         * @return string|null \n         * @see getClientIps()\n         * @see https://wikipedia.org/wiki/X-Forwarded-For\n         * @static \n         */ \n        public static function getClientIp()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getClientIp();\n        }\n                    /**\n         * Returns current script name.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getScriptName()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getScriptName();\n        }\n                    /**\n         * Returns the path being requested relative to the executed script.\n         * \n         * The path info always starts with a /.\n         * \n         * Suppose this request is instantiated from /mysite on localhost:\n         * \n         *  * http://localhost/mysite              returns an empty string\n         *  * http://localhost/mysite/about        returns '/about'\n         *  * http://localhost/mysite/enco%20ded   returns '/enco%20ded'\n         *  * http://localhost/mysite/about?var=1  returns '/about'\n         *\n         * @return string The raw path (i.e. not urldecoded)\n         * @static \n         */ \n        public static function getPathInfo()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getPathInfo();\n        }\n                    /**\n         * Returns the root path from which this request is executed.\n         * \n         * Suppose that an index.php file instantiates this request object:\n         * \n         *  * http://localhost/index.php         returns an empty string\n         *  * http://localhost/index.php/page    returns an empty string\n         *  * http://localhost/web/index.php     returns '/web'\n         *  * http://localhost/we%20b/index.php  returns '/we%20b'\n         *\n         * @return string The raw path (i.e. not urldecoded)\n         * @static \n         */ \n        public static function getBasePath()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getBasePath();\n        }\n                    /**\n         * Returns the root URL from which this request is executed.\n         * \n         * The base URL never ends with a /.\n         * \n         * This is similar to getBasePath(), except that it also includes the\n         * script filename (e.g. index.php) if one exists.\n         *\n         * @return string The raw URL (i.e. not urldecoded)\n         * @static \n         */ \n        public static function getBaseUrl()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getBaseUrl();\n        }\n                    /**\n         * Gets the request's scheme.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getScheme()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getScheme();\n        }\n                    /**\n         * Returns the port on which the request is made.\n         * \n         * This method can read the client port from the \"X-Forwarded-Port\" header\n         * when trusted proxies were set via \"setTrustedProxies()\".\n         * \n         * The \"X-Forwarded-Port\" header must contain the client port.\n         *\n         * @return int|string|null Can be a string if fetched from the server bag\n         * @static \n         */ \n        public static function getPort()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getPort();\n        }\n                    /**\n         * Returns the user.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function getUser()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getUser();\n        }\n                    /**\n         * Returns the password.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function getPassword()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getPassword();\n        }\n                    /**\n         * Gets the user info.\n         *\n         * @return string|null A user name if any and, optionally, scheme-specific information about how to gain authorization to access the server\n         * @static \n         */ \n        public static function getUserInfo()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getUserInfo();\n        }\n                    /**\n         * Returns the HTTP host being requested.\n         * \n         * The port name will be appended to the host if it's non-standard.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getHttpHost()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getHttpHost();\n        }\n                    /**\n         * Returns the requested URI (path and query string).\n         *\n         * @return string The raw URI (i.e. not URI decoded)\n         * @static \n         */ \n        public static function getRequestUri()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getRequestUri();\n        }\n                    /**\n         * Gets the scheme and HTTP host.\n         * \n         * If the URL was called with basic authentication, the user\n         * and the password are not added to the generated string.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getSchemeAndHttpHost()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getSchemeAndHttpHost();\n        }\n                    /**\n         * Generates a normalized URI (URL) for the Request.\n         *\n         * @return string \n         * @see getQueryString()\n         * @static \n         */ \n        public static function getUri()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getUri();\n        }\n                    /**\n         * Generates a normalized URI for the given path.\n         *\n         * @param string $path A path to use instead of the current one\n         * @return string \n         * @static \n         */ \n        public static function getUriForPath($path)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getUriForPath($path);\n        }\n                    /**\n         * Returns the path as relative reference from the current Request path.\n         * \n         * Only the URIs path component (no schema, host etc.) is relevant and must be given.\n         * Both paths must be absolute and not contain relative parts.\n         * Relative URLs from one resource to another are useful when generating self-contained downloadable document archives.\n         * Furthermore, they can be used to reduce the link size in documents.\n         * \n         * Example target paths, given a base path of \"/a/b/c/d\":\n         * - \"/a/b/c/d\"     -> \"\"\n         * - \"/a/b/c/\"      -> \"./\"\n         * - \"/a/b/\"        -> \"../\"\n         * - \"/a/b/c/other\" -> \"other\"\n         * - \"/a/x/y\"       -> \"../../x/y\"\n         *\n         * @return string \n         * @static \n         */ \n        public static function getRelativeUriForPath($path)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getRelativeUriForPath($path);\n        }\n                    /**\n         * Generates the normalized query string for the Request.\n         * \n         * It builds a normalized query string, where keys/value pairs are alphabetized\n         * and have consistent escaping.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function getQueryString()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getQueryString();\n        }\n                    /**\n         * Checks whether the request is secure or not.\n         * \n         * This method can read the client protocol from the \"X-Forwarded-Proto\" header\n         * when trusted proxies were set via \"setTrustedProxies()\".\n         * \n         * The \"X-Forwarded-Proto\" header must contain the protocol: \"https\" or \"http\".\n         *\n         * @return bool \n         * @static \n         */ \n        public static function isSecure()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->isSecure();\n        }\n                    /**\n         * Returns the host name.\n         * \n         * This method can read the client host name from the \"X-Forwarded-Host\" header\n         * when trusted proxies were set via \"setTrustedProxies()\".\n         * \n         * The \"X-Forwarded-Host\" header must contain the client host name.\n         *\n         * @return string \n         * @throws SuspiciousOperationException when the host name is invalid or not trusted\n         * @static \n         */ \n        public static function getHost()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getHost();\n        }\n                    /**\n         * Sets the request method.\n         *\n         * @static \n         */ \n        public static function setMethod($method)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->setMethod($method);\n        }\n                    /**\n         * Gets the request \"intended\" method.\n         * \n         * If the X-HTTP-Method-Override header is set, and if the method is a POST,\n         * then it is used to determine the \"real\" intended HTTP method.\n         * \n         * The _method request parameter can also be used to determine the HTTP method,\n         * but only if enableHttpMethodParameterOverride() has been called.\n         * \n         * The method is always an uppercased string.\n         *\n         * @return string \n         * @see getRealMethod()\n         * @static \n         */ \n        public static function getMethod()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getMethod();\n        }\n                    /**\n         * Gets the \"real\" request method.\n         *\n         * @return string \n         * @see getMethod()\n         * @static \n         */ \n        public static function getRealMethod()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getRealMethod();\n        }\n                    /**\n         * Gets the mime type associated with the format.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function getMimeType($format)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getMimeType($format);\n        }\n                    /**\n         * Gets the mime types associated with the format.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getMimeTypes($format)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        return \\Illuminate\\Http\\Request::getMimeTypes($format);\n        }\n                    /**\n         * Gets the format associated with the mime type.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function getFormat($mimeType)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getFormat($mimeType);\n        }\n                    /**\n         * Associates a format with mime types.\n         *\n         * @param string|array $mimeTypes The associated mime types (the preferred one must be the first as it will be used as the content type)\n         * @static \n         */ \n        public static function setFormat($format, $mimeTypes)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->setFormat($format, $mimeTypes);\n        }\n                    /**\n         * Gets the request format.\n         * \n         * Here is the process to determine the format:\n         * \n         *  * format defined by the user (with setRequestFormat())\n         *  * _format request attribute\n         *  * $default\n         *\n         * @see getPreferredFormat\n         * @return string|null \n         * @static \n         */ \n        public static function getRequestFormat($default = 'html')\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getRequestFormat($default);\n        }\n                    /**\n         * Sets the request format.\n         *\n         * @static \n         */ \n        public static function setRequestFormat($format)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->setRequestFormat($format);\n        }\n                    /**\n         * Gets the format associated with the request.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function getContentType()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getContentType();\n        }\n                    /**\n         * Sets the default locale.\n         *\n         * @static \n         */ \n        public static function setDefaultLocale($locale)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->setDefaultLocale($locale);\n        }\n                    /**\n         * Get the default locale.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDefaultLocale()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getDefaultLocale();\n        }\n                    /**\n         * Sets the locale.\n         *\n         * @static \n         */ \n        public static function setLocale($locale)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->setLocale($locale);\n        }\n                    /**\n         * Get the locale.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getLocale()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getLocale();\n        }\n                    /**\n         * Checks if the request method is of specified type.\n         *\n         * @param string $method Uppercase request method (GET, POST etc)\n         * @return bool \n         * @static \n         */ \n        public static function isMethod($method)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->isMethod($method);\n        }\n                    /**\n         * Checks whether or not the method is safe.\n         *\n         * @see https://tools.ietf.org/html/rfc7231#section-4.2.1\n         * @return bool \n         * @static \n         */ \n        public static function isMethodSafe()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->isMethodSafe();\n        }\n                    /**\n         * Checks whether or not the method is idempotent.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function isMethodIdempotent()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->isMethodIdempotent();\n        }\n                    /**\n         * Checks whether the method is cacheable or not.\n         *\n         * @see https://tools.ietf.org/html/rfc7231#section-4.2.3\n         * @return bool \n         * @static \n         */ \n        public static function isMethodCacheable()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->isMethodCacheable();\n        }\n                    /**\n         * Returns the protocol version.\n         * \n         * If the application is behind a proxy, the protocol version used in the\n         * requests between the client and the proxy and between the proxy and the\n         * server might be different. This returns the former (from the \"Via\" header)\n         * if the proxy is trusted (see \"setTrustedProxies()\"), otherwise it returns\n         * the latter (from the \"SERVER_PROTOCOL\" server parameter).\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function getProtocolVersion()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getProtocolVersion();\n        }\n                    /**\n         * Returns the request body content.\n         *\n         * @param bool $asResource If true, a resource will be returned\n         * @return string|resource \n         * @static \n         */ \n        public static function getContent($asResource = false)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getContent($asResource);\n        }\n                    /**\n         * Gets the Etags.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getETags()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getETags();\n        }\n                    /**\n         * \n         *\n         * @return bool \n         * @static \n         */ \n        public static function isNoCache()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->isNoCache();\n        }\n                    /**\n         * Gets the preferred format for the response by inspecting, in the following order:\n         *   * the request format set using setRequestFormat;\n         *   * the values of the Accept HTTP header.\n         * \n         * Note that if you use this method, you should send the \"Vary: Accept\" header\n         * in the response to prevent any issues with intermediary HTTP caches.\n         *\n         * @static \n         */ \n        public static function getPreferredFormat($default = 'html')\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getPreferredFormat($default);\n        }\n                    /**\n         * Returns the preferred language.\n         *\n         * @param string[] $locales An array of ordered available locales\n         * @return string|null \n         * @static \n         */ \n        public static function getPreferredLanguage($locales = null)\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getPreferredLanguage($locales);\n        }\n                    /**\n         * Gets a list of languages acceptable by the client browser ordered in the user browser preferences.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getLanguages()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getLanguages();\n        }\n                    /**\n         * Gets a list of charsets acceptable by the client browser in preferable order.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getCharsets()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getCharsets();\n        }\n                    /**\n         * Gets a list of encodings acceptable by the client browser in preferable order.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getEncodings()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getEncodings();\n        }\n                    /**\n         * Gets a list of content types acceptable by the client browser in preferable order.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getAcceptableContentTypes()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->getAcceptableContentTypes();\n        }\n                    /**\n         * Returns true if the request is an XMLHttpRequest.\n         * \n         * It works if your JavaScript library sets an X-Requested-With HTTP header.\n         * It is known to work with common JavaScript frameworks:\n         *\n         * @see https://wikipedia.org/wiki/List_of_Ajax_frameworks#JavaScript\n         * @return bool \n         * @static \n         */ \n        public static function isXmlHttpRequest()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->isXmlHttpRequest();\n        }\n                    /**\n         * Checks whether the client browser prefers safe content or not according to RFC8674.\n         *\n         * @see https://tools.ietf.org/html/rfc8674\n         * @static \n         */ \n        public static function preferSafeContent()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->preferSafeContent();\n        }\n                    /**\n         * Indicates whether this request originated from a trusted proxy.\n         * \n         * This can be useful to determine whether or not to trust the\n         * contents of a proxy-specific header.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function isFromTrustedProxy()\n        {            //Method inherited from \\Symfony\\Component\\HttpFoundation\\Request         \n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->isFromTrustedProxy();\n        }\n                    /**\n         * Determine if the request is sending JSON.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function isJson()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->isJson();\n        }\n                    /**\n         * Determine if the current request probably expects a JSON response.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function expectsJson()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->expectsJson();\n        }\n                    /**\n         * Determine if the current request is asking for JSON.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function wantsJson()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->wantsJson();\n        }\n                    /**\n         * Determines whether the current requests accepts a given content type.\n         *\n         * @param string|array $contentTypes\n         * @return bool \n         * @static \n         */ \n        public static function accepts($contentTypes)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->accepts($contentTypes);\n        }\n                    /**\n         * Return the most suitable content type from the given array based on content negotiation.\n         *\n         * @param string|array $contentTypes\n         * @return string|null \n         * @static \n         */ \n        public static function prefers($contentTypes)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->prefers($contentTypes);\n        }\n                    /**\n         * Determine if the current request accepts any content type.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function acceptsAnyContentType()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->acceptsAnyContentType();\n        }\n                    /**\n         * Determines whether a request accepts JSON.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function acceptsJson()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->acceptsJson();\n        }\n                    /**\n         * Determines whether a request accepts HTML.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function acceptsHtml()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->acceptsHtml();\n        }\n                    /**\n         * Determine if the given content types match.\n         *\n         * @param string $actual\n         * @param string $type\n         * @return bool \n         * @static \n         */ \n        public static function matchesType($actual, $type)\n        {\n                        return \\Illuminate\\Http\\Request::matchesType($actual, $type);\n        }\n                    /**\n         * Get the data format expected in the response.\n         *\n         * @param string $default\n         * @return string \n         * @static \n         */ \n        public static function format($default = 'html')\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->format($default);\n        }\n                    /**\n         * Retrieve an old input item.\n         *\n         * @param string|null $key\n         * @param string|array|null $default\n         * @return string|array|null \n         * @static \n         */ \n        public static function old($key = null, $default = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->old($key, $default);\n        }\n                    /**\n         * Flash the input for the current request to the session.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flash()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        $instance->flash();\n        }\n                    /**\n         * Flash only some of the input to the session.\n         *\n         * @param array|mixed $keys\n         * @return void \n         * @static \n         */ \n        public static function flashOnly($keys)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        $instance->flashOnly($keys);\n        }\n                    /**\n         * Flash only some of the input to the session.\n         *\n         * @param array|mixed $keys\n         * @return void \n         * @static \n         */ \n        public static function flashExcept($keys)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        $instance->flashExcept($keys);\n        }\n                    /**\n         * Flush all of the old input from the session.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flush()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        $instance->flush();\n        }\n                    /**\n         * Retrieve a server variable from the request.\n         *\n         * @param string|null $key\n         * @param string|array|null $default\n         * @return string|array|null \n         * @static \n         */ \n        public static function server($key = null, $default = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->server($key, $default);\n        }\n                    /**\n         * Determine if a header is set on the request.\n         *\n         * @param string $key\n         * @return bool \n         * @static \n         */ \n        public static function hasHeader($key)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->hasHeader($key);\n        }\n                    /**\n         * Retrieve a header from the request.\n         *\n         * @param string|null $key\n         * @param string|array|null $default\n         * @return string|array|null \n         * @static \n         */ \n        public static function header($key = null, $default = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->header($key, $default);\n        }\n                    /**\n         * Get the bearer token from the request headers.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function bearerToken()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->bearerToken();\n        }\n                    /**\n         * Determine if the request contains a given input item key.\n         *\n         * @param string|array $key\n         * @return bool \n         * @static \n         */ \n        public static function exists($key)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->exists($key);\n        }\n                    /**\n         * Determine if the request contains a given input item key.\n         *\n         * @param string|array $key\n         * @return bool \n         * @static \n         */ \n        public static function has($key)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->has($key);\n        }\n                    /**\n         * Determine if the request contains any of the given inputs.\n         *\n         * @param string|array $keys\n         * @return bool \n         * @static \n         */ \n        public static function hasAny($keys)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->hasAny($keys);\n        }\n                    /**\n         * Apply the callback if the request contains the given input item key.\n         *\n         * @param string $key\n         * @param callable $callback\n         * @param callable|null $default\n         * @return $this|mixed \n         * @static \n         */ \n        public static function whenHas($key, $callback, $default = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->whenHas($key, $callback, $default);\n        }\n                    /**\n         * Determine if the request contains a non-empty value for an input item.\n         *\n         * @param string|array $key\n         * @return bool \n         * @static \n         */ \n        public static function filled($key)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->filled($key);\n        }\n                    /**\n         * Determine if the request contains an empty value for an input item.\n         *\n         * @param string|array $key\n         * @return bool \n         * @static \n         */ \n        public static function isNotFilled($key)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->isNotFilled($key);\n        }\n                    /**\n         * Determine if the request contains a non-empty value for any of the given inputs.\n         *\n         * @param string|array $keys\n         * @return bool \n         * @static \n         */ \n        public static function anyFilled($keys)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->anyFilled($keys);\n        }\n                    /**\n         * Apply the callback if the request contains a non-empty value for the given input item key.\n         *\n         * @param string $key\n         * @param callable $callback\n         * @param callable|null $default\n         * @return $this|mixed \n         * @static \n         */ \n        public static function whenFilled($key, $callback, $default = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->whenFilled($key, $callback, $default);\n        }\n                    /**\n         * Determine if the request is missing a given input item key.\n         *\n         * @param string|array $key\n         * @return bool \n         * @static \n         */ \n        public static function missing($key)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->missing($key);\n        }\n                    /**\n         * Get the keys for all of the input and files.\n         *\n         * @return array \n         * @static \n         */ \n        public static function keys()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->keys();\n        }\n                    /**\n         * Get all of the input and files for the request.\n         *\n         * @param array|mixed|null $keys\n         * @return array \n         * @static \n         */ \n        public static function all($keys = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->all($keys);\n        }\n                    /**\n         * Retrieve an input item from the request.\n         *\n         * @param string|null $key\n         * @param mixed $default\n         * @return mixed \n         * @static \n         */ \n        public static function input($key = null, $default = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->input($key, $default);\n        }\n                    /**\n         * Retrieve input as a boolean value.\n         * \n         * Returns true when value is \"1\", \"true\", \"on\", and \"yes\". Otherwise, returns false.\n         *\n         * @param string|null $key\n         * @param bool $default\n         * @return bool \n         * @static \n         */ \n        public static function boolean($key = null, $default = false)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->boolean($key, $default);\n        }\n                    /**\n         * Retrieve input from the request as a Carbon instance.\n         *\n         * @param string $key\n         * @param string|null $format\n         * @param string|null $tz\n         * @return \\Illuminate\\Support\\Carbon|null \n         * @static \n         */ \n        public static function date($key, $format = null, $tz = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->date($key, $format, $tz);\n        }\n                    /**\n         * Retrieve input from the request as a collection.\n         *\n         * @param array|string|null $key\n         * @return \\Illuminate\\Support\\Collection \n         * @static \n         */ \n        public static function collect($key = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->collect($key);\n        }\n                    /**\n         * Get a subset containing the provided keys with values from the input data.\n         *\n         * @param array|mixed $keys\n         * @return array \n         * @static \n         */ \n        public static function only($keys)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->only($keys);\n        }\n                    /**\n         * Get all of the input except for a specified array of items.\n         *\n         * @param array|mixed $keys\n         * @return array \n         * @static \n         */ \n        public static function except($keys)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->except($keys);\n        }\n                    /**\n         * Retrieve a query string item from the request.\n         *\n         * @param string|null $key\n         * @param string|array|null $default\n         * @return string|array|null \n         * @static \n         */ \n        public static function query($key = null, $default = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->query($key, $default);\n        }\n                    /**\n         * Retrieve a request payload item from the request.\n         *\n         * @param string|null $key\n         * @param string|array|null $default\n         * @return string|array|null \n         * @static \n         */ \n        public static function post($key = null, $default = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->post($key, $default);\n        }\n                    /**\n         * Determine if a cookie is set on the request.\n         *\n         * @param string $key\n         * @return bool \n         * @static \n         */ \n        public static function hasCookie($key)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->hasCookie($key);\n        }\n                    /**\n         * Retrieve a cookie from the request.\n         *\n         * @param string|null $key\n         * @param string|array|null $default\n         * @return string|array|null \n         * @static \n         */ \n        public static function cookie($key = null, $default = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->cookie($key, $default);\n        }\n                    /**\n         * Get an array of all of the files on the request.\n         *\n         * @return array \n         * @static \n         */ \n        public static function allFiles()\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->allFiles();\n        }\n                    /**\n         * Determine if the uploaded data contains a file.\n         *\n         * @param string $key\n         * @return bool \n         * @static \n         */ \n        public static function hasFile($key)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->hasFile($key);\n        }\n                    /**\n         * Retrieve a file from the request.\n         *\n         * @param string|null $key\n         * @param mixed $default\n         * @return \\Illuminate\\Http\\UploadedFile|\\Illuminate\\Http\\UploadedFile[]|array|null \n         * @static \n         */ \n        public static function file($key = null, $default = null)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->file($key, $default);\n        }\n                    /**\n         * Dump the request items and end the script.\n         *\n         * @param mixed $keys\n         * @return void \n         * @static \n         */ \n        public static function dd(...$keys)\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        $instance->dd(...$keys);\n        }\n                    /**\n         * Dump the items.\n         *\n         * @param mixed $keys\n         * @return \\Illuminate\\Http\\Request \n         * @static \n         */ \n        public static function dump($keys = [])\n        {\n                        /** @var \\Illuminate\\Http\\Request $instance */\n                        return $instance->dump($keys);\n        }\n                    /**\n         * Register a custom macro.\n         *\n         * @param string $name\n         * @param object|callable $macro\n         * @return void \n         * @static \n         */ \n        public static function macro($name, $macro)\n        {\n                        \\Illuminate\\Http\\Request::macro($name, $macro);\n        }\n                    /**\n         * Mix another object into the class.\n         *\n         * @param object $mixin\n         * @param bool $replace\n         * @return void \n         * @throws \\ReflectionException\n         * @static \n         */ \n        public static function mixin($mixin, $replace = true)\n        {\n                        \\Illuminate\\Http\\Request::mixin($mixin, $replace);\n        }\n                    /**\n         * Checks if macro is registered.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function hasMacro($name)\n        {\n                        return \\Illuminate\\Http\\Request::hasMacro($name);\n        }\n                    /**\n         * Flush the existing macros.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flushMacros()\n        {\n                        \\Illuminate\\Http\\Request::flushMacros();\n        }\n                    /**\n         * \n         *\n         * @see \\Illuminate\\Foundation\\Providers\\FoundationServiceProvider::registerRequestValidation()\n         * @param array $rules\n         * @param mixed $params\n         * @static \n         */ \n        public static function validate($rules, ...$params)\n        {\n                        return \\Illuminate\\Http\\Request::validate($rules, ...$params);\n        }\n                    /**\n         * \n         *\n         * @see \\Illuminate\\Foundation\\Providers\\FoundationServiceProvider::registerRequestValidation()\n         * @param string $errorBag\n         * @param array $rules\n         * @param mixed $params\n         * @static \n         */ \n        public static function validateWithBag($errorBag, $rules, ...$params)\n        {\n                        return \\Illuminate\\Http\\Request::validateWithBag($errorBag, $rules, ...$params);\n        }\n                    /**\n         * \n         *\n         * @see \\Illuminate\\Foundation\\Providers\\FoundationServiceProvider::registerRequestSignatureValidation()\n         * @param mixed $absolute\n         * @static \n         */ \n        public static function hasValidSignature($absolute = true)\n        {\n                        return \\Illuminate\\Http\\Request::hasValidSignature($absolute);\n        }\n                    /**\n         * \n         *\n         * @see \\Illuminate\\Foundation\\Providers\\FoundationServiceProvider::registerRequestSignatureValidation()\n         * @static \n         */ \n        public static function hasValidRelativeSignature()\n        {\n                        return \\Illuminate\\Http\\Request::hasValidRelativeSignature();\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Contracts\\Routing\\ResponseFactory\n     */ \n        class Response {\n                    /**\n         * Create a new response instance.\n         *\n         * @param mixed $content\n         * @param int $status\n         * @param array $headers\n         * @return \\Illuminate\\Http\\Response \n         * @static \n         */ \n        public static function make($content = '', $status = 200, $headers = [])\n        {\n                        /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                        return $instance->make($content, $status, $headers);\n        }\n                    /**\n         * Create a new \"no content\" response.\n         *\n         * @param int $status\n         * @param array $headers\n         * @return \\Illuminate\\Http\\Response \n         * @static \n         */ \n        public static function noContent($status = 204, $headers = [])\n        {\n                        /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                        return $instance->noContent($status, $headers);\n        }\n                    /**\n         * Create a new response for a given view.\n         *\n         * @param string|array $view\n         * @param array $data\n         * @param int $status\n         * @param array $headers\n         * @return \\Illuminate\\Http\\Response \n         * @static \n         */ \n        public static function view($view, $data = [], $status = 200, $headers = [])\n        {\n                        /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                        return $instance->view($view, $data, $status, $headers);\n        }\n                    /**\n         * Create a new JSON response instance.\n         *\n         * @param mixed $data\n         * @param int $status\n         * @param array $headers\n         * @param int $options\n         * @return \\Illuminate\\Http\\JsonResponse \n         * @static \n         */ \n        public static function json($data = [], $status = 200, $headers = [], $options = 0)\n        {\n                        /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                        return $instance->json($data, $status, $headers, $options);\n        }\n                    /**\n         * Create a new JSONP response instance.\n         *\n         * @param string $callback\n         * @param mixed $data\n         * @param int $status\n         * @param array $headers\n         * @param int $options\n         * @return \\Illuminate\\Http\\JsonResponse \n         * @static \n         */ \n        public static function jsonp($callback, $data = [], $status = 200, $headers = [], $options = 0)\n        {\n                        /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                        return $instance->jsonp($callback, $data, $status, $headers, $options);\n        }\n                    /**\n         * Create a new streamed response instance.\n         *\n         * @param \\Closure $callback\n         * @param int $status\n         * @param array $headers\n         * @return \\Symfony\\Component\\HttpFoundation\\StreamedResponse \n         * @static \n         */ \n        public static function stream($callback, $status = 200, $headers = [])\n        {\n                        /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                        return $instance->stream($callback, $status, $headers);\n        }\n                    /**\n         * Create a new streamed response instance as a file download.\n         *\n         * @param \\Closure $callback\n         * @param string|null $name\n         * @param array $headers\n         * @param string|null $disposition\n         * @return \\Symfony\\Component\\HttpFoundation\\StreamedResponse \n         * @static \n         */ \n        public static function streamDownload($callback, $name = null, $headers = [], $disposition = 'attachment')\n        {\n                        /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                        return $instance->streamDownload($callback, $name, $headers, $disposition);\n        }\n                    /**\n         * Create a new file download response.\n         *\n         * @param \\SplFileInfo|string $file\n         * @param string|null $name\n         * @param array $headers\n         * @param string|null $disposition\n         * @return \\Symfony\\Component\\HttpFoundation\\BinaryFileResponse \n         * @static \n         */ \n        public static function download($file, $name = null, $headers = [], $disposition = 'attachment')\n        {\n                        /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                        return $instance->download($file, $name, $headers, $disposition);\n        }\n                    /**\n         * Return the raw contents of a binary file.\n         *\n         * @param \\SplFileInfo|string $file\n         * @param array $headers\n         * @return \\Symfony\\Component\\HttpFoundation\\BinaryFileResponse \n         * @static \n         */ \n        public static function file($file, $headers = [])\n        {\n                        /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                        return $instance->file($file, $headers);\n        }\n                    /**\n         * Create a new redirect response to the given path.\n         *\n         * @param string $path\n         * @param int $status\n         * @param array $headers\n         * @param bool|null $secure\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function redirectTo($path, $status = 302, $headers = [], $secure = null)\n        {\n                        /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                        return $instance->redirectTo($path, $status, $headers, $secure);\n        }\n                    /**\n         * Create a new redirect response to a named route.\n         *\n         * @param string $route\n         * @param mixed $parameters\n         * @param int $status\n         * @param array $headers\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function redirectToRoute($route, $parameters = [], $status = 302, $headers = [])\n        {\n                        /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                        return $instance->redirectToRoute($route, $parameters, $status, $headers);\n        }\n                    /**\n         * Create a new redirect response to a controller action.\n         *\n         * @param string $action\n         * @param mixed $parameters\n         * @param int $status\n         * @param array $headers\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function redirectToAction($action, $parameters = [], $status = 302, $headers = [])\n        {\n                        /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                        return $instance->redirectToAction($action, $parameters, $status, $headers);\n        }\n                    /**\n         * Create a new redirect response, while putting the current URL in the session.\n         *\n         * @param string $path\n         * @param int $status\n         * @param array $headers\n         * @param bool|null $secure\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function redirectGuest($path, $status = 302, $headers = [], $secure = null)\n        {\n                        /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                        return $instance->redirectGuest($path, $status, $headers, $secure);\n        }\n                    /**\n         * Create a new redirect response to the previously intended location.\n         *\n         * @param string $default\n         * @param int $status\n         * @param array $headers\n         * @param bool|null $secure\n         * @return \\Illuminate\\Http\\RedirectResponse \n         * @static \n         */ \n        public static function redirectToIntended($default = '/', $status = 302, $headers = [], $secure = null)\n        {\n                        /** @var \\Illuminate\\Routing\\ResponseFactory $instance */\n                        return $instance->redirectToIntended($default, $status, $headers, $secure);\n        }\n                    /**\n         * Register a custom macro.\n         *\n         * @param string $name\n         * @param object|callable $macro\n         * @return void \n         * @static \n         */ \n        public static function macro($name, $macro)\n        {\n                        \\Illuminate\\Routing\\ResponseFactory::macro($name, $macro);\n        }\n                    /**\n         * Mix another object into the class.\n         *\n         * @param object $mixin\n         * @param bool $replace\n         * @return void \n         * @throws \\ReflectionException\n         * @static \n         */ \n        public static function mixin($mixin, $replace = true)\n        {\n                        \\Illuminate\\Routing\\ResponseFactory::mixin($mixin, $replace);\n        }\n                    /**\n         * Checks if macro is registered.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function hasMacro($name)\n        {\n                        return \\Illuminate\\Routing\\ResponseFactory::hasMacro($name);\n        }\n                    /**\n         * Flush the existing macros.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flushMacros()\n        {\n                        \\Illuminate\\Routing\\ResponseFactory::flushMacros();\n        }\n         \n    }\n            /**\n     * \n     *\n     * @method static \\Illuminate\\Routing\\RouteRegistrar as(string $value)\n     * @method static \\Illuminate\\Routing\\RouteRegistrar controller(string $controller)\n     * @method static \\Illuminate\\Routing\\RouteRegistrar domain(string $value)\n     * @method static \\Illuminate\\Routing\\RouteRegistrar middleware(array|string|null $middleware)\n     * @method static \\Illuminate\\Routing\\RouteRegistrar name(string $value)\n     * @method static \\Illuminate\\Routing\\RouteRegistrar namespace(string|null $value)\n     * @method static \\Illuminate\\Routing\\RouteRegistrar prefix(string $prefix)\n     * @method static \\Illuminate\\Routing\\RouteRegistrar scopeBindings()\n     * @method static \\Illuminate\\Routing\\RouteRegistrar where(array $where)\n     * @method static \\Illuminate\\Routing\\RouteRegistrar withoutMiddleware(array|string $middleware)\n     * @see \\Illuminate\\Routing\\Router\n     */ \n        class Route {\n                    /**\n         * Register a new GET route with the router.\n         *\n         * @param string $uri\n         * @param array|string|callable|null $action\n         * @return \\Illuminate\\Routing\\Route \n         * @static \n         */ \n        public static function get($uri, $action = null)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->get($uri, $action);\n        }\n                    /**\n         * Register a new POST route with the router.\n         *\n         * @param string $uri\n         * @param array|string|callable|null $action\n         * @return \\Illuminate\\Routing\\Route \n         * @static \n         */ \n        public static function post($uri, $action = null)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->post($uri, $action);\n        }\n                    /**\n         * Register a new PUT route with the router.\n         *\n         * @param string $uri\n         * @param array|string|callable|null $action\n         * @return \\Illuminate\\Routing\\Route \n         * @static \n         */ \n        public static function put($uri, $action = null)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->put($uri, $action);\n        }\n                    /**\n         * Register a new PATCH route with the router.\n         *\n         * @param string $uri\n         * @param array|string|callable|null $action\n         * @return \\Illuminate\\Routing\\Route \n         * @static \n         */ \n        public static function patch($uri, $action = null)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->patch($uri, $action);\n        }\n                    /**\n         * Register a new DELETE route with the router.\n         *\n         * @param string $uri\n         * @param array|string|callable|null $action\n         * @return \\Illuminate\\Routing\\Route \n         * @static \n         */ \n        public static function delete($uri, $action = null)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->delete($uri, $action);\n        }\n                    /**\n         * Register a new OPTIONS route with the router.\n         *\n         * @param string $uri\n         * @param array|string|callable|null $action\n         * @return \\Illuminate\\Routing\\Route \n         * @static \n         */ \n        public static function options($uri, $action = null)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->options($uri, $action);\n        }\n                    /**\n         * Register a new route responding to all verbs.\n         *\n         * @param string $uri\n         * @param array|string|callable|null $action\n         * @return \\Illuminate\\Routing\\Route \n         * @static \n         */ \n        public static function any($uri, $action = null)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->any($uri, $action);\n        }\n                    /**\n         * Register a new Fallback route with the router.\n         *\n         * @param array|string|callable|null $action\n         * @return \\Illuminate\\Routing\\Route \n         * @static \n         */ \n        public static function fallback($action)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->fallback($action);\n        }\n                    /**\n         * Create a redirect from one URI to another.\n         *\n         * @param string $uri\n         * @param string $destination\n         * @param int $status\n         * @return \\Illuminate\\Routing\\Route \n         * @static \n         */ \n        public static function redirect($uri, $destination, $status = 302)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->redirect($uri, $destination, $status);\n        }\n                    /**\n         * Create a permanent redirect from one URI to another.\n         *\n         * @param string $uri\n         * @param string $destination\n         * @return \\Illuminate\\Routing\\Route \n         * @static \n         */ \n        public static function permanentRedirect($uri, $destination)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->permanentRedirect($uri, $destination);\n        }\n                    /**\n         * Register a new route that returns a view.\n         *\n         * @param string $uri\n         * @param string $view\n         * @param array $data\n         * @param int|array $status\n         * @param array $headers\n         * @return \\Illuminate\\Routing\\Route \n         * @static \n         */ \n        public static function view($uri, $view, $data = [], $status = 200, $headers = [])\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->view($uri, $view, $data, $status, $headers);\n        }\n                    /**\n         * Register a new route with the given verbs.\n         *\n         * @param array|string $methods\n         * @param string $uri\n         * @param array|string|callable|null $action\n         * @return \\Illuminate\\Routing\\Route \n         * @static \n         */ \n        public static function match($methods, $uri, $action = null)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->match($methods, $uri, $action);\n        }\n                    /**\n         * Register an array of resource controllers.\n         *\n         * @param array $resources\n         * @param array $options\n         * @return void \n         * @static \n         */ \n        public static function resources($resources, $options = [])\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        $instance->resources($resources, $options);\n        }\n                    /**\n         * Route a resource to a controller.\n         *\n         * @param string $name\n         * @param string $controller\n         * @param array $options\n         * @return \\Illuminate\\Routing\\PendingResourceRegistration \n         * @static \n         */ \n        public static function resource($name, $controller, $options = [])\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->resource($name, $controller, $options);\n        }\n                    /**\n         * Register an array of API resource controllers.\n         *\n         * @param array $resources\n         * @param array $options\n         * @return void \n         * @static \n         */ \n        public static function apiResources($resources, $options = [])\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        $instance->apiResources($resources, $options);\n        }\n                    /**\n         * Route an API resource to a controller.\n         *\n         * @param string $name\n         * @param string $controller\n         * @param array $options\n         * @return \\Illuminate\\Routing\\PendingResourceRegistration \n         * @static \n         */ \n        public static function apiResource($name, $controller, $options = [])\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->apiResource($name, $controller, $options);\n        }\n                    /**\n         * Create a route group with shared attributes.\n         *\n         * @param array $attributes\n         * @param \\Closure|string $routes\n         * @return void \n         * @static \n         */ \n        public static function group($attributes, $routes)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        $instance->group($attributes, $routes);\n        }\n                    /**\n         * Merge the given array with the last group stack.\n         *\n         * @param array $new\n         * @param bool $prependExistingPrefix\n         * @return array \n         * @static \n         */ \n        public static function mergeWithLastGroup($new, $prependExistingPrefix = true)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->mergeWithLastGroup($new, $prependExistingPrefix);\n        }\n                    /**\n         * Get the prefix from the last group on the stack.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getLastGroupPrefix()\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->getLastGroupPrefix();\n        }\n                    /**\n         * Add a route to the underlying route collection.\n         *\n         * @param array|string $methods\n         * @param string $uri\n         * @param array|string|callable|null $action\n         * @return \\Illuminate\\Routing\\Route \n         * @static \n         */ \n        public static function addRoute($methods, $uri, $action)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->addRoute($methods, $uri, $action);\n        }\n                    /**\n         * Create a new Route object.\n         *\n         * @param array|string $methods\n         * @param string $uri\n         * @param mixed $action\n         * @return \\Illuminate\\Routing\\Route \n         * @static \n         */ \n        public static function newRoute($methods, $uri, $action)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->newRoute($methods, $uri, $action);\n        }\n                    /**\n         * Return the response returned by the given route.\n         *\n         * @param string $name\n         * @return \\Symfony\\Component\\HttpFoundation\\Response \n         * @static \n         */ \n        public static function respondWithRoute($name)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->respondWithRoute($name);\n        }\n                    /**\n         * Dispatch the request to the application.\n         *\n         * @param \\Illuminate\\Http\\Request $request\n         * @return \\Symfony\\Component\\HttpFoundation\\Response \n         * @static \n         */ \n        public static function dispatch($request)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->dispatch($request);\n        }\n                    /**\n         * Dispatch the request to a route and return the response.\n         *\n         * @param \\Illuminate\\Http\\Request $request\n         * @return \\Symfony\\Component\\HttpFoundation\\Response \n         * @static \n         */ \n        public static function dispatchToRoute($request)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->dispatchToRoute($request);\n        }\n                    /**\n         * Gather the middleware for the given route with resolved class names.\n         *\n         * @param \\Illuminate\\Routing\\Route $route\n         * @return array \n         * @static \n         */ \n        public static function gatherRouteMiddleware($route)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->gatherRouteMiddleware($route);\n        }\n                    /**\n         * Create a response instance from the given value.\n         *\n         * @param \\Symfony\\Component\\HttpFoundation\\Request $request\n         * @param mixed $response\n         * @return \\Symfony\\Component\\HttpFoundation\\Response \n         * @static \n         */ \n        public static function prepareResponse($request, $response)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->prepareResponse($request, $response);\n        }\n                    /**\n         * Static version of prepareResponse.\n         *\n         * @param \\Symfony\\Component\\HttpFoundation\\Request $request\n         * @param mixed $response\n         * @return \\Symfony\\Component\\HttpFoundation\\Response \n         * @static \n         */ \n        public static function toResponse($request, $response)\n        {\n                        return \\Illuminate\\Routing\\Router::toResponse($request, $response);\n        }\n                    /**\n         * Substitute the route bindings onto the route.\n         *\n         * @param \\Illuminate\\Routing\\Route $route\n         * @return \\Illuminate\\Routing\\Route \n         * @throws \\Illuminate\\Database\\Eloquent\\ModelNotFoundException\n         * @static \n         */ \n        public static function substituteBindings($route)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->substituteBindings($route);\n        }\n                    /**\n         * Substitute the implicit Eloquent model bindings for the route.\n         *\n         * @param \\Illuminate\\Routing\\Route $route\n         * @return void \n         * @throws \\Illuminate\\Database\\Eloquent\\ModelNotFoundException\n         * @static \n         */ \n        public static function substituteImplicitBindings($route)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        $instance->substituteImplicitBindings($route);\n        }\n                    /**\n         * Register a route matched event listener.\n         *\n         * @param string|callable $callback\n         * @return void \n         * @static \n         */ \n        public static function matched($callback)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        $instance->matched($callback);\n        }\n                    /**\n         * Get all of the defined middleware short-hand names.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getMiddleware()\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->getMiddleware();\n        }\n                    /**\n         * Register a short-hand name for a middleware.\n         *\n         * @param string $name\n         * @param string $class\n         * @return \\Illuminate\\Routing\\Router \n         * @static \n         */ \n        public static function aliasMiddleware($name, $class)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->aliasMiddleware($name, $class);\n        }\n                    /**\n         * Check if a middlewareGroup with the given name exists.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function hasMiddlewareGroup($name)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->hasMiddlewareGroup($name);\n        }\n                    /**\n         * Get all of the defined middleware groups.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getMiddlewareGroups()\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->getMiddlewareGroups();\n        }\n                    /**\n         * Register a group of middleware.\n         *\n         * @param string $name\n         * @param array $middleware\n         * @return \\Illuminate\\Routing\\Router \n         * @static \n         */ \n        public static function middlewareGroup($name, $middleware)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->middlewareGroup($name, $middleware);\n        }\n                    /**\n         * Add a middleware to the beginning of a middleware group.\n         * \n         * If the middleware is already in the group, it will not be added again.\n         *\n         * @param string $group\n         * @param string $middleware\n         * @return \\Illuminate\\Routing\\Router \n         * @static \n         */ \n        public static function prependMiddlewareToGroup($group, $middleware)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->prependMiddlewareToGroup($group, $middleware);\n        }\n                    /**\n         * Add a middleware to the end of a middleware group.\n         * \n         * If the middleware is already in the group, it will not be added again.\n         *\n         * @param string $group\n         * @param string $middleware\n         * @return \\Illuminate\\Routing\\Router \n         * @static \n         */ \n        public static function pushMiddlewareToGroup($group, $middleware)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->pushMiddlewareToGroup($group, $middleware);\n        }\n                    /**\n         * Flush the router's middleware groups.\n         *\n         * @return \\Illuminate\\Routing\\Router \n         * @static \n         */ \n        public static function flushMiddlewareGroups()\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->flushMiddlewareGroups();\n        }\n                    /**\n         * Add a new route parameter binder.\n         *\n         * @param string $key\n         * @param string|callable $binder\n         * @return void \n         * @static \n         */ \n        public static function bind($key, $binder)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        $instance->bind($key, $binder);\n        }\n                    /**\n         * Register a model binder for a wildcard.\n         *\n         * @param string $key\n         * @param string $class\n         * @param \\Closure|null $callback\n         * @return void \n         * @static \n         */ \n        public static function model($key, $class, $callback = null)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        $instance->model($key, $class, $callback);\n        }\n                    /**\n         * Get the binding callback for a given binding.\n         *\n         * @param string $key\n         * @return \\Closure|null \n         * @static \n         */ \n        public static function getBindingCallback($key)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->getBindingCallback($key);\n        }\n                    /**\n         * Get the global \"where\" patterns.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getPatterns()\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->getPatterns();\n        }\n                    /**\n         * Set a global where pattern on all routes.\n         *\n         * @param string $key\n         * @param string $pattern\n         * @return void \n         * @static \n         */ \n        public static function pattern($key, $pattern)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        $instance->pattern($key, $pattern);\n        }\n                    /**\n         * Set a group of global where patterns on all routes.\n         *\n         * @param array $patterns\n         * @return void \n         * @static \n         */ \n        public static function patterns($patterns)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        $instance->patterns($patterns);\n        }\n                    /**\n         * Determine if the router currently has a group stack.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function hasGroupStack()\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->hasGroupStack();\n        }\n                    /**\n         * Get the current group stack for the router.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getGroupStack()\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->getGroupStack();\n        }\n                    /**\n         * Get a route parameter for the current route.\n         *\n         * @param string $key\n         * @param string|null $default\n         * @return mixed \n         * @static \n         */ \n        public static function input($key, $default = null)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->input($key, $default);\n        }\n                    /**\n         * Get the request currently being dispatched.\n         *\n         * @return \\Illuminate\\Http\\Request \n         * @static \n         */ \n        public static function getCurrentRequest()\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->getCurrentRequest();\n        }\n                    /**\n         * Get the currently dispatched route instance.\n         *\n         * @return \\Illuminate\\Routing\\Route|null \n         * @static \n         */ \n        public static function getCurrentRoute()\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->getCurrentRoute();\n        }\n                    /**\n         * Get the currently dispatched route instance.\n         *\n         * @return \\Illuminate\\Routing\\Route|null \n         * @static \n         */ \n        public static function current()\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->current();\n        }\n                    /**\n         * Check if a route with the given name exists.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function has($name)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->has($name);\n        }\n                    /**\n         * Get the current route name.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function currentRouteName()\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->currentRouteName();\n        }\n                    /**\n         * Alias for the \"currentRouteNamed\" method.\n         *\n         * @param mixed $patterns\n         * @return bool \n         * @static \n         */ \n        public static function is(...$patterns)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->is(...$patterns);\n        }\n                    /**\n         * Determine if the current route matches a pattern.\n         *\n         * @param mixed $patterns\n         * @return bool \n         * @static \n         */ \n        public static function currentRouteNamed(...$patterns)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->currentRouteNamed(...$patterns);\n        }\n                    /**\n         * Get the current route action.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function currentRouteAction()\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->currentRouteAction();\n        }\n                    /**\n         * Alias for the \"currentRouteUses\" method.\n         *\n         * @param array $patterns\n         * @return bool \n         * @static \n         */ \n        public static function uses(...$patterns)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->uses(...$patterns);\n        }\n                    /**\n         * Determine if the current route action matches a given action.\n         *\n         * @param string $action\n         * @return bool \n         * @static \n         */ \n        public static function currentRouteUses($action)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->currentRouteUses($action);\n        }\n                    /**\n         * Set the unmapped global resource parameters to singular.\n         *\n         * @param bool $singular\n         * @return void \n         * @static \n         */ \n        public static function singularResourceParameters($singular = true)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        $instance->singularResourceParameters($singular);\n        }\n                    /**\n         * Set the global resource parameter mapping.\n         *\n         * @param array $parameters\n         * @return void \n         * @static \n         */ \n        public static function resourceParameters($parameters = [])\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        $instance->resourceParameters($parameters);\n        }\n                    /**\n         * Get or set the verbs used in the resource URIs.\n         *\n         * @param array $verbs\n         * @return array|null \n         * @static \n         */ \n        public static function resourceVerbs($verbs = [])\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->resourceVerbs($verbs);\n        }\n                    /**\n         * Get the underlying route collection.\n         *\n         * @return \\Illuminate\\Routing\\RouteCollectionInterface \n         * @static \n         */ \n        public static function getRoutes()\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->getRoutes();\n        }\n                    /**\n         * Set the route collection instance.\n         *\n         * @param \\Illuminate\\Routing\\RouteCollection $routes\n         * @return void \n         * @static \n         */ \n        public static function setRoutes($routes)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        $instance->setRoutes($routes);\n        }\n                    /**\n         * Set the compiled route collection instance.\n         *\n         * @param array $routes\n         * @return void \n         * @static \n         */ \n        public static function setCompiledRoutes($routes)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        $instance->setCompiledRoutes($routes);\n        }\n                    /**\n         * Remove any duplicate middleware from the given array.\n         *\n         * @param array $middleware\n         * @return array \n         * @static \n         */ \n        public static function uniqueMiddleware($middleware)\n        {\n                        return \\Illuminate\\Routing\\Router::uniqueMiddleware($middleware);\n        }\n                    /**\n         * Set the container instance used by the router.\n         *\n         * @param \\Illuminate\\Container\\Container $container\n         * @return \\Illuminate\\Routing\\Router \n         * @static \n         */ \n        public static function setContainer($container)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->setContainer($container);\n        }\n                    /**\n         * Register a custom macro.\n         *\n         * @param string $name\n         * @param object|callable $macro\n         * @return void \n         * @static \n         */ \n        public static function macro($name, $macro)\n        {\n                        \\Illuminate\\Routing\\Router::macro($name, $macro);\n        }\n                    /**\n         * Mix another object into the class.\n         *\n         * @param object $mixin\n         * @param bool $replace\n         * @return void \n         * @throws \\ReflectionException\n         * @static \n         */ \n        public static function mixin($mixin, $replace = true)\n        {\n                        \\Illuminate\\Routing\\Router::mixin($mixin, $replace);\n        }\n                    /**\n         * Checks if macro is registered.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function hasMacro($name)\n        {\n                        return \\Illuminate\\Routing\\Router::hasMacro($name);\n        }\n                    /**\n         * Flush the existing macros.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flushMacros()\n        {\n                        \\Illuminate\\Routing\\Router::flushMacros();\n        }\n                    /**\n         * Dynamically handle calls to the class.\n         *\n         * @param string $method\n         * @param array $parameters\n         * @return mixed \n         * @throws \\BadMethodCallException\n         * @static \n         */ \n        public static function macroCall($method, $parameters)\n        {\n                        /** @var \\Illuminate\\Routing\\Router $instance */\n                        return $instance->macroCall($method, $parameters);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Database\\Schema\\Builder\n     */ \n        class Schema {\n                    /**\n         * Create a database in the schema.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function createDatabase($name)\n        {\n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        return $instance->createDatabase($name);\n        }\n                    /**\n         * Drop a database from the schema if the database exists.\n         *\n         * @param string $name\n         * @return bool \n         * @static \n         */ \n        public static function dropDatabaseIfExists($name)\n        {\n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        return $instance->dropDatabaseIfExists($name);\n        }\n                    /**\n         * Determine if the given table exists.\n         *\n         * @param string $table\n         * @return bool \n         * @static \n         */ \n        public static function hasTable($table)\n        {\n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        return $instance->hasTable($table);\n        }\n                    /**\n         * Get the column listing for a given table.\n         *\n         * @param string $table\n         * @return array \n         * @static \n         */ \n        public static function getColumnListing($table)\n        {\n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        return $instance->getColumnListing($table);\n        }\n                    /**\n         * Drop all tables from the database.\n         *\n         * @return void \n         * @static \n         */ \n        public static function dropAllTables()\n        {\n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        $instance->dropAllTables();\n        }\n                    /**\n         * Drop all views from the database.\n         *\n         * @return void \n         * @static \n         */ \n        public static function dropAllViews()\n        {\n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        $instance->dropAllViews();\n        }\n                    /**\n         * Get all of the table names for the database.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getAllTables()\n        {\n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        return $instance->getAllTables();\n        }\n                    /**\n         * Get all of the view names for the database.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getAllViews()\n        {\n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        return $instance->getAllViews();\n        }\n                    /**\n         * Set the default string length for migrations.\n         *\n         * @param int $length\n         * @return void \n         * @static \n         */ \n        public static function defaultStringLength($length)\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        \\Illuminate\\Database\\Schema\\MySqlBuilder::defaultStringLength($length);\n        }\n                    /**\n         * Set the default morph key type for migrations.\n         *\n         * @param string $type\n         * @return void \n         * @throws \\InvalidArgumentException\n         * @static \n         */ \n        public static function defaultMorphKeyType($type)\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        \\Illuminate\\Database\\Schema\\MySqlBuilder::defaultMorphKeyType($type);\n        }\n                    /**\n         * Set the default morph key type for migrations to UUIDs.\n         *\n         * @return void \n         * @static \n         */ \n        public static function morphUsingUuids()\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        \\Illuminate\\Database\\Schema\\MySqlBuilder::morphUsingUuids();\n        }\n                    /**\n         * Determine if the given table has a given column.\n         *\n         * @param string $table\n         * @param string $column\n         * @return bool \n         * @static \n         */ \n        public static function hasColumn($table, $column)\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        return $instance->hasColumn($table, $column);\n        }\n                    /**\n         * Determine if the given table has given columns.\n         *\n         * @param string $table\n         * @param array $columns\n         * @return bool \n         * @static \n         */ \n        public static function hasColumns($table, $columns)\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        return $instance->hasColumns($table, $columns);\n        }\n                    /**\n         * Get the data type for the given column name.\n         *\n         * @param string $table\n         * @param string $column\n         * @return string \n         * @static \n         */ \n        public static function getColumnType($table, $column)\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        return $instance->getColumnType($table, $column);\n        }\n                    /**\n         * Modify a table on the schema.\n         *\n         * @param string $table\n         * @param \\Closure $callback\n         * @return void \n         * @static \n         */ \n        public static function table($table, $callback)\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        $instance->table($table, $callback);\n        }\n                    /**\n         * Create a new table on the schema.\n         *\n         * @param string $table\n         * @param \\Closure $callback\n         * @return void \n         * @static \n         */ \n        public static function create($table, $callback)\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        $instance->create($table, $callback);\n        }\n                    /**\n         * Drop a table from the schema.\n         *\n         * @param string $table\n         * @return void \n         * @static \n         */ \n        public static function drop($table)\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        $instance->drop($table);\n        }\n                    /**\n         * Drop a table from the schema if it exists.\n         *\n         * @param string $table\n         * @return void \n         * @static \n         */ \n        public static function dropIfExists($table)\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        $instance->dropIfExists($table);\n        }\n                    /**\n         * Drop columns from a table schema.\n         *\n         * @param string $table\n         * @param string|array $columns\n         * @return void \n         * @static \n         */ \n        public static function dropColumns($table, $columns)\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        $instance->dropColumns($table, $columns);\n        }\n                    /**\n         * Drop all types from the database.\n         *\n         * @return void \n         * @throws \\LogicException\n         * @static \n         */ \n        public static function dropAllTypes()\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        $instance->dropAllTypes();\n        }\n                    /**\n         * Rename a table on the schema.\n         *\n         * @param string $from\n         * @param string $to\n         * @return void \n         * @static \n         */ \n        public static function rename($from, $to)\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        $instance->rename($from, $to);\n        }\n                    /**\n         * Enable foreign key constraints.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function enableForeignKeyConstraints()\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        return $instance->enableForeignKeyConstraints();\n        }\n                    /**\n         * Disable foreign key constraints.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function disableForeignKeyConstraints()\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        return $instance->disableForeignKeyConstraints();\n        }\n                    /**\n         * Register a custom Doctrine mapping type.\n         *\n         * @param string $class\n         * @param string $name\n         * @param string $type\n         * @return void \n         * @static \n         */ \n        public static function registerCustomDoctrineType($class, $name, $type)\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        $instance->registerCustomDoctrineType($class, $name, $type);\n        }\n                    /**\n         * Get the database connection instance.\n         *\n         * @return \\Illuminate\\Database\\Connection \n         * @static \n         */ \n        public static function getConnection()\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        return $instance->getConnection();\n        }\n                    /**\n         * Set the database connection instance.\n         *\n         * @param \\Illuminate\\Database\\Connection $connection\n         * @return \\Illuminate\\Database\\Schema\\MySqlBuilder \n         * @static \n         */ \n        public static function setConnection($connection)\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        return $instance->setConnection($connection);\n        }\n                    /**\n         * Set the Schema Blueprint resolver callback.\n         *\n         * @param \\Closure $resolver\n         * @return void \n         * @static \n         */ \n        public static function blueprintResolver($resolver)\n        {            //Method inherited from \\Illuminate\\Database\\Schema\\Builder         \n                        /** @var \\Illuminate\\Database\\Schema\\MySqlBuilder $instance */\n                        $instance->blueprintResolver($resolver);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Session\\SessionManager\n     * @see \\Illuminate\\Session\\Store\n     */ \n        class Session {\n                    /**\n         * Determine if requests for the same session should wait for each to finish before executing.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function shouldBlock()\n        {\n                        /** @var \\Illuminate\\Session\\SessionManager $instance */\n                        return $instance->shouldBlock();\n        }\n                    /**\n         * Get the name of the cache store / driver that should be used to acquire session locks.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function blockDriver()\n        {\n                        /** @var \\Illuminate\\Session\\SessionManager $instance */\n                        return $instance->blockDriver();\n        }\n                    /**\n         * Get the session configuration.\n         *\n         * @return array \n         * @static \n         */ \n        public static function getSessionConfig()\n        {\n                        /** @var \\Illuminate\\Session\\SessionManager $instance */\n                        return $instance->getSessionConfig();\n        }\n                    /**\n         * Get the default session driver name.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDefaultDriver()\n        {\n                        /** @var \\Illuminate\\Session\\SessionManager $instance */\n                        return $instance->getDefaultDriver();\n        }\n                    /**\n         * Set the default session driver name.\n         *\n         * @param string $name\n         * @return void \n         * @static \n         */ \n        public static function setDefaultDriver($name)\n        {\n                        /** @var \\Illuminate\\Session\\SessionManager $instance */\n                        $instance->setDefaultDriver($name);\n        }\n                    /**\n         * Get a driver instance.\n         *\n         * @param string|null $driver\n         * @return mixed \n         * @throws \\InvalidArgumentException\n         * @static \n         */ \n        public static function driver($driver = null)\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Session\\SessionManager $instance */\n                        return $instance->driver($driver);\n        }\n                    /**\n         * Register a custom driver creator Closure.\n         *\n         * @param string $driver\n         * @param \\Closure $callback\n         * @return \\Illuminate\\Session\\SessionManager \n         * @static \n         */ \n        public static function extend($driver, $callback)\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Session\\SessionManager $instance */\n                        return $instance->extend($driver, $callback);\n        }\n                    /**\n         * Get all of the created \"drivers\".\n         *\n         * @return array \n         * @static \n         */ \n        public static function getDrivers()\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Session\\SessionManager $instance */\n                        return $instance->getDrivers();\n        }\n                    /**\n         * Get the container instance used by the manager.\n         *\n         * @return \\Illuminate\\Contracts\\Container\\Container \n         * @static \n         */ \n        public static function getContainer()\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Session\\SessionManager $instance */\n                        return $instance->getContainer();\n        }\n                    /**\n         * Set the container instance used by the manager.\n         *\n         * @param \\Illuminate\\Contracts\\Container\\Container $container\n         * @return \\Illuminate\\Session\\SessionManager \n         * @static \n         */ \n        public static function setContainer($container)\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Session\\SessionManager $instance */\n                        return $instance->setContainer($container);\n        }\n                    /**\n         * Forget all of the resolved driver instances.\n         *\n         * @return \\Illuminate\\Session\\SessionManager \n         * @static \n         */ \n        public static function forgetDrivers()\n        {            //Method inherited from \\Illuminate\\Support\\Manager         \n                        /** @var \\Illuminate\\Session\\SessionManager $instance */\n                        return $instance->forgetDrivers();\n        }\n                    /**\n         * Start the session, reading the data from a handler.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function start()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->start();\n        }\n                    /**\n         * Save the session data to storage.\n         *\n         * @return void \n         * @static \n         */ \n        public static function save()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->save();\n        }\n                    /**\n         * Age the flash data for the session.\n         *\n         * @return void \n         * @static \n         */ \n        public static function ageFlashData()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->ageFlashData();\n        }\n                    /**\n         * Get all of the session data.\n         *\n         * @return array \n         * @static \n         */ \n        public static function all()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->all();\n        }\n                    /**\n         * Get a subset of the session data.\n         *\n         * @param array $keys\n         * @return array \n         * @static \n         */ \n        public static function only($keys)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->only($keys);\n        }\n                    /**\n         * Checks if a key exists.\n         *\n         * @param string|array $key\n         * @return bool \n         * @static \n         */ \n        public static function exists($key)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->exists($key);\n        }\n                    /**\n         * Determine if the given key is missing from the session data.\n         *\n         * @param string|array $key\n         * @return bool \n         * @static \n         */ \n        public static function missing($key)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->missing($key);\n        }\n                    /**\n         * Checks if a key is present and not null.\n         *\n         * @param string|array $key\n         * @return bool \n         * @static \n         */ \n        public static function has($key)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->has($key);\n        }\n                    /**\n         * Get an item from the session.\n         *\n         * @param string $key\n         * @param mixed $default\n         * @return mixed \n         * @static \n         */ \n        public static function get($key, $default = null)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->get($key, $default);\n        }\n                    /**\n         * Get the value of a given key and then forget it.\n         *\n         * @param string $key\n         * @param mixed $default\n         * @return mixed \n         * @static \n         */ \n        public static function pull($key, $default = null)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->pull($key, $default);\n        }\n                    /**\n         * Determine if the session contains old input.\n         *\n         * @param string|null $key\n         * @return bool \n         * @static \n         */ \n        public static function hasOldInput($key = null)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->hasOldInput($key);\n        }\n                    /**\n         * Get the requested item from the flashed input array.\n         *\n         * @param string|null $key\n         * @param mixed $default\n         * @return mixed \n         * @static \n         */ \n        public static function getOldInput($key = null, $default = null)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->getOldInput($key, $default);\n        }\n                    /**\n         * Replace the given session attributes entirely.\n         *\n         * @param array $attributes\n         * @return void \n         * @static \n         */ \n        public static function replace($attributes)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->replace($attributes);\n        }\n                    /**\n         * Put a key / value pair or array of key / value pairs in the session.\n         *\n         * @param string|array $key\n         * @param mixed $value\n         * @return void \n         * @static \n         */ \n        public static function put($key, $value = null)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->put($key, $value);\n        }\n                    /**\n         * Get an item from the session, or store the default value.\n         *\n         * @param string $key\n         * @param \\Closure $callback\n         * @return mixed \n         * @static \n         */ \n        public static function remember($key, $callback)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->remember($key, $callback);\n        }\n                    /**\n         * Push a value onto a session array.\n         *\n         * @param string $key\n         * @param mixed $value\n         * @return void \n         * @static \n         */ \n        public static function push($key, $value)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->push($key, $value);\n        }\n                    /**\n         * Increment the value of an item in the session.\n         *\n         * @param string $key\n         * @param int $amount\n         * @return mixed \n         * @static \n         */ \n        public static function increment($key, $amount = 1)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->increment($key, $amount);\n        }\n                    /**\n         * Decrement the value of an item in the session.\n         *\n         * @param string $key\n         * @param int $amount\n         * @return int \n         * @static \n         */ \n        public static function decrement($key, $amount = 1)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->decrement($key, $amount);\n        }\n                    /**\n         * Flash a key / value pair to the session.\n         *\n         * @param string $key\n         * @param mixed $value\n         * @return void \n         * @static \n         */ \n        public static function flash($key, $value = true)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->flash($key, $value);\n        }\n                    /**\n         * Flash a key / value pair to the session for immediate use.\n         *\n         * @param string $key\n         * @param mixed $value\n         * @return void \n         * @static \n         */ \n        public static function now($key, $value)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->now($key, $value);\n        }\n                    /**\n         * Reflash all of the session flash data.\n         *\n         * @return void \n         * @static \n         */ \n        public static function reflash()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->reflash();\n        }\n                    /**\n         * Reflash a subset of the current flash data.\n         *\n         * @param array|mixed $keys\n         * @return void \n         * @static \n         */ \n        public static function keep($keys = null)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->keep($keys);\n        }\n                    /**\n         * Flash an input array to the session.\n         *\n         * @param array $value\n         * @return void \n         * @static \n         */ \n        public static function flashInput($value)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->flashInput($value);\n        }\n                    /**\n         * Remove an item from the session, returning its value.\n         *\n         * @param string $key\n         * @return mixed \n         * @static \n         */ \n        public static function remove($key)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->remove($key);\n        }\n                    /**\n         * Remove one or many items from the session.\n         *\n         * @param string|array $keys\n         * @return void \n         * @static \n         */ \n        public static function forget($keys)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->forget($keys);\n        }\n                    /**\n         * Remove all of the items from the session.\n         *\n         * @return void \n         * @static \n         */ \n        public static function flush()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->flush();\n        }\n                    /**\n         * Flush the session data and regenerate the ID.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function invalidate()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->invalidate();\n        }\n                    /**\n         * Generate a new session identifier.\n         *\n         * @param bool $destroy\n         * @return bool \n         * @static \n         */ \n        public static function regenerate($destroy = false)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->regenerate($destroy);\n        }\n                    /**\n         * Generate a new session ID for the session.\n         *\n         * @param bool $destroy\n         * @return bool \n         * @static \n         */ \n        public static function migrate($destroy = false)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->migrate($destroy);\n        }\n                    /**\n         * Determine if the session has been started.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function isStarted()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->isStarted();\n        }\n                    /**\n         * Get the name of the session.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getName()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->getName();\n        }\n                    /**\n         * Set the name of the session.\n         *\n         * @param string $name\n         * @return void \n         * @static \n         */ \n        public static function setName($name)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->setName($name);\n        }\n                    /**\n         * Get the current session ID.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getId()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->getId();\n        }\n                    /**\n         * Set the session ID.\n         *\n         * @param string $id\n         * @return void \n         * @static \n         */ \n        public static function setId($id)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->setId($id);\n        }\n                    /**\n         * Determine if this is a valid session ID.\n         *\n         * @param string $id\n         * @return bool \n         * @static \n         */ \n        public static function isValidId($id)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->isValidId($id);\n        }\n                    /**\n         * Set the existence of the session on the handler if applicable.\n         *\n         * @param bool $value\n         * @return void \n         * @static \n         */ \n        public static function setExists($value)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->setExists($value);\n        }\n                    /**\n         * Get the CSRF token value.\n         *\n         * @return string \n         * @static \n         */ \n        public static function token()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->token();\n        }\n                    /**\n         * Regenerate the CSRF token value.\n         *\n         * @return void \n         * @static \n         */ \n        public static function regenerateToken()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->regenerateToken();\n        }\n                    /**\n         * Get the previous URL from the session.\n         *\n         * @return string|null \n         * @static \n         */ \n        public static function previousUrl()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->previousUrl();\n        }\n                    /**\n         * Set the \"previous\" URL in the session.\n         *\n         * @param string $url\n         * @return void \n         * @static \n         */ \n        public static function setPreviousUrl($url)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->setPreviousUrl($url);\n        }\n                    /**\n         * Specify that the user has confirmed their password.\n         *\n         * @return void \n         * @static \n         */ \n        public static function passwordConfirmed()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->passwordConfirmed();\n        }\n                    /**\n         * Get the underlying session handler implementation.\n         *\n         * @return \\SessionHandlerInterface \n         * @static \n         */ \n        public static function getHandler()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->getHandler();\n        }\n                    /**\n         * Determine if the session handler needs a request.\n         *\n         * @return bool \n         * @static \n         */ \n        public static function handlerNeedsRequest()\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        return $instance->handlerNeedsRequest();\n        }\n                    /**\n         * Set the request on the handler instance.\n         *\n         * @param \\Illuminate\\Http\\Request $request\n         * @return void \n         * @static \n         */ \n        public static function setRequestOnHandler($request)\n        {\n                        /** @var \\Illuminate\\Session\\Store $instance */\n                        $instance->setRequestOnHandler($request);\n        }\n         \n    }\n            /**\n     * \n     *\n     * @see \\Illuminate\\Filesystem\\FilesystemManager\n     */ \n        class Storage {\n                    /**\n         * Get a filesystem instance.\n         *\n         * @param string|null $name\n         * @return \\Illuminate\\Filesystem\\FilesystemAdapter \n         * @static \n         */ \n        public static function drive($name = null)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                        return $instance->drive($name);\n        }\n                    /**\n         * Get a filesystem instance.\n         *\n         * @param string|null $name\n         * @return \\Illuminate\\Filesystem\\FilesystemAdapter \n         * @static \n         */ \n        public static function disk($name = null)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                        return $instance->disk($name);\n        }\n                    /**\n         * Get a default cloud filesystem instance.\n         *\n         * @return \\Illuminate\\Filesystem\\FilesystemAdapter \n         * @static \n         */ \n        public static function cloud()\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                        return $instance->cloud();\n        }\n                    /**\n         * Build an on-demand disk.\n         *\n         * @param string|array $config\n         * @return \\Illuminate\\Filesystem\\FilesystemAdapter \n         * @static \n         */ \n        public static function build($config)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                        return $instance->build($config);\n        }\n                    /**\n         * Create an instance of the local driver.\n         *\n         * @param array $config\n         * @return \\Illuminate\\Filesystem\\FilesystemAdapter \n         * @static \n         */ \n        public static function createLocalDriver($config)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                        return $instance->createLocalDriver($config);\n        }\n                    /**\n         * Create an instance of the ftp driver.\n         *\n         * @param array $config\n         * @return \\Illuminate\\Filesystem\\FilesystemAdapter \n         * @static \n         */ \n        public static function createFtpDriver($config)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                        return $instance->createFtpDriver($config);\n        }\n                    /**\n         * Create an instance of the sftp driver.\n         *\n         * @param array $config\n         * @return \\Illuminate\\Filesystem\\FilesystemAdapter \n         * @static \n         */ \n        public static function createSftpDriver($config)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                        return $instance->createSftpDriver($config);\n        }\n                    /**\n         * Create an instance of the Amazon S3 driver.\n         *\n         * @param array $config\n         * @return \\Illuminate\\Contracts\\Filesystem\\Cloud \n         * @static \n         */ \n        public static function createS3Driver($config)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                        return $instance->createS3Driver($config);\n        }\n                    /**\n         * Set the given disk instance.\n         *\n         * @param string $name\n         * @param mixed $disk\n         * @return \\Illuminate\\Filesystem\\FilesystemManager \n         * @static \n         */ \n        public static function set($name, $disk)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                        return $instance->set($name, $disk);\n        }\n                    /**\n         * Get the default driver name.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDefaultDriver()\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                        return $instance->getDefaultDriver();\n        }\n                    /**\n         * Get the default cloud driver name.\n         *\n         * @return string \n         * @static \n         */ \n        public static function getDefaultCloudDriver()\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                        return $instance->getDefaultCloudDriver();\n        }\n                    /**\n         * Unset the given disk instances.\n         *\n         * @param array|string $disk\n         * @return \\Illuminate\\Filesystem\\FilesystemManager \n         * @static \n         */ \n        public static function forgetDisk($disk)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                        return $instance->forgetDisk($disk);\n        }\n                    /**\n         * Disconnect the given disk and remove from local cache.\n         *\n         * @param string|null $name\n         * @return void \n         * @static \n         */ \n        public static function purge($name = null)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                        $instance->purge($name);\n        }\n                    /**\n         * Register a custom driver creator Closure.\n         *\n         * @param string $driver\n         * @param \\Closure $callback\n         * @return \\Illuminate\\Filesystem\\FilesystemManager \n         * @static \n         */ \n        public static function extend($driver, $callback)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                        return $instance->extend($driver, $callback);\n        }\n                    /**\n         * Set the application instance used by the manager.\n         *\n         * @param \\Illuminate\\Contracts\\Foundation\\Application $app\n         * @return \\Illuminate\\Filesystem\\FilesystemManager \n         * @static \n         */ \n        public static function setApplication($app)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemManager $instance */\n                        return $instance->setApplication($app);\n        }\n                    /**\n         * Assert that the given file exists.\n         *\n         * @param string|array $path\n         * @param string|null $content\n         * @return \\Illuminate\\Filesystem\\FilesystemAdapter \n         * @static \n         */ \n        public static function assertExists($path, $content = null)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                        return $instance->assertExists($path, $content);\n        }\n                    /**\n         * Assert that the given file does not exist.\n         *\n         * @param string|array $path\n         * @return \\Illuminate\\Filesystem\\FilesystemAdapter \n         * @static \n         */ \n        public static function assertMissing($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                        return $instance->assertMissing($path);\n        }\n                    /**\n         * Determine if a file exists.\n         *\n         * @param string $path\n         * @return bool \n         * @static \n         */ \n        public static function exists($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                        return $instance->exists($path);\n        }\n                    /**\n         * Determine if a file or directory is missing.\n         *\n         * @param string $path\n         * @return bool \n         * @static \n         */ \n        public static function missing($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                        return $instance->missing($path);\n        }\n                    /**\n         * Get the full path for the file at the given \"short\" path.\n         *\n         * @param string $path\n         * @return string \n         * @static \n         */ \n        public static function path($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                        return $instance->path($path);\n        }\n                    /**\n         * Get the contents of a file.\n         *\n         * @param string $path\n         * @return string \n         * @throws \\Illuminate\\Contracts\\Filesystem\\FileNotFoundException\n         * @static \n         */ \n        public static function get($path)\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                        return $instance->get($path);\n        }\n                    /**\n         * Create a streamed response for a given file.\n         *\n         * @param string $path\n         * @param string|null $name\n         * @param array|null $headers\n         * @param string|null $disposition\n         * @return \\Symfony\\Component\\HttpFoundation\\StreamedResponse \n         * @static \n         */ \n        public static function response($path, $name = null, $headers = [], $disposition = 'inline')\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                        return $instance->response($path, $name, $headers, $disposition);\n        }\n                    /**\n         * Create a streamed download response for a given file.\n         *\n         * @param string $path\n         * @param string|null $name\n         * @param array|null $headers\n         * @return \\Symfony\\Component\\HttpFoundation\\StreamedResponse \n         * @static \n         */ \n        public static function download($path, $name = null, $headers = [])\n        {\n                        /** @var \\Illuminate\\Filesystem\\FilesystemAdapter $instance */\n                        return $instance->download($path, $name, $headers);\n        }\n                    /**\n         * Write the contents of a file.\n         *\n         * @param string $path\n         * @param \\Psr\\Http\\Message\\StreamInterface|\\Illuminate\\Http\\File|\\Illuminate\\Http\\UploadedFile|string|resource $contents\n         * @param "
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "artisan",
          "type": "blob",
          "size": 1.646484375,
          "content": "#!/usr/bin/env php\n<?php\n\ndefine('LARAVEL_START', microtime(true));\n\n/*\n|--------------------------------------------------------------------------\n| Register The Auto Loader\n|--------------------------------------------------------------------------\n|\n| Composer provides a convenient, automatically generated class loader\n| for our application. We just need to utilize it! We'll require it\n| into the script here so that we do not have to worry about the\n| loading of any of our classes manually. It's great to relax.\n|\n*/\n\nrequire __DIR__.'/vendor/autoload.php';\n\n$app = require_once __DIR__.'/bootstrap/app.php';\n\n/*\n|--------------------------------------------------------------------------\n| Run The Artisan Application\n|--------------------------------------------------------------------------\n|\n| When we run the console application, the current CLI command will be\n| executed in this console and the response sent back to a terminal\n| or another output device for the developers. Here goes nothing!\n|\n*/\n\n$kernel = $app->make(Illuminate\\Contracts\\Console\\Kernel::class);\n\n$status = $kernel->handle(\n    $input = new Symfony\\Component\\Console\\Input\\ArgvInput,\n    new Symfony\\Component\\Console\\Output\\ConsoleOutput\n);\n\n/*\n|--------------------------------------------------------------------------\n| Shutdown The Application\n|--------------------------------------------------------------------------\n|\n| Once Artisan has finished running, we will fire off the shutdown events\n| so that any final work may be done by the application before we shut\n| down the process. This is the last thing to happen to the request.\n|\n*/\n\n$kernel->terminate($input, $status);\n\nexit($status);\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstrap",
          "type": "tree",
          "content": null
        },
        {
          "name": "cliff.toml",
          "type": "blob",
          "size": 1.8857421875,
          "content": "# configuration file for git-cliff (0.1.0)\n\n[changelog]\n# changelog header\nheader = \"\"\"\n# Changelog\\n\nAll notable changes to this project will be documented in this file.\\n\n\"\"\"\n# template for the changelog body\n# https://tera.netlify.app/docs/#introduction\nbody = \"\"\"\n{% if version %}\\\n    ## [{{ version | trim_start_matches(pat=\"v\") }}]\n{% else %}\\\n    ## [Unreleased]\n{% endif %}\\\n{% for group, commits in commits | group_by(attribute=\"group\") %}\n    ### {{ group | upper_first }}\n    {% for commit in commits %}\n        - {% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message | upper_first }}\\\n    {% endfor %}\n{% endfor %}\\n\n\"\"\"\n# remove the leading and trailing whitespace from the template\ntrim = true\n# changelog footer\nfooter = \"\"\"\n\"\"\"\n\n[git]\n# parse the commits based on https://www.conventionalcommits.org\nconventional_commits = true\n# filter out the commits that are not conventional\nfilter_unconventional = true\n# regex for parsing and grouping commits\ncommit_parsers = [\n    { message = \"^feat\", group = \"Features\"},\n    { message = \"^fix\", group = \"Bug Fixes\"},\n    { message = \"^doc\", group = \"Documentation\"},\n    { message = \"^perf\", group = \"Performance\"},\n    { message = \"^pref\", group = \"Performance\"},\n    { message = \"^refactor\", group = \"Refactor\"},\n    { message = \"^style\", group = \"Styling\"},\n    { message = \"^test\", group = \"Testing\"},\n    { message = \"^chore\\\\(release\\\\): prepare for\", skip = true},\n    { message = \"^chore\", group = \"Miscellaneous Tasks\"},\n    { body = \".*security\", group = \"Security\"},\n]\n# filter out the commits that are not matched by commit parsers\nfilter_commits = true\n# glob pattern for matching git tags\ntag_pattern = \"v[0-9]*\"\n# regex for skipping tags\nskip_tags = \"v0.1.0-beta.1\"\n# regex for ignoring tags\nignore_tags = \"\"\n# sort the tags chronologically\ndate_order = false\n# sort the commits inside sections by oldest/newest order\nsort_commits = \"newest\"\n"
        },
        {
          "name": "cmd",
          "type": "blob",
          "size": 18.1767578125,
          "content": "#!/bin/bash\n\n#fonts color\nGreen=\"\\033[32m\"\nYellow=\"\\033[33m\"\nRed=\"\\033[31m\"\nGreenBG=\"\\033[42;37m\"\nYellowBG=\"\\033[43;37m\"\nRedBG=\"\\033[41;37m\"\nFont=\"\\033[0m\"\n\n#notification information\nOK=\"${Green}[OK]${Font}\"\nWarn=\"${Yellow}[警告]${Font}\"\nError=\"${Red}[错误]${Font}\"\n\ncur_path=\"$(pwd)\"\ncur_arg=$@\nCOMPOSE=\"docker-compose\"\n\njudge() {\n    if [[ 0 -eq $? ]]; then\n        success \"$1 完成\"\n        sleep 1\n    else\n        error \"$1 失败\"\n        exit 1\n    fi\n}\n\nsuccess() {\n    echo -e \"${OK} ${GreenBG}$1${Font}\"\n}\n\nwarning() {\n    echo -e \"${Warn} ${YellowBG}$1${Font}\"\n}\n\nerror() {\n    echo -e \"${Error} ${RedBG}$1${Font}\"\n}\n\ninfo() {\n    echo -e \"$1\"\n}\n\nrand() {\n    local min=$1\n    local max=$(($2-$min+1))\n    local num=$(($RANDOM+1000000000))\n    echo $(($num%$max+$min))\n}\n\nrand_string() {\n    local lan=$1\n    if [[ `uname` == 'Linux' ]]; then\n        echo \"$(date +%s%N | md5sum | cut -c 1-${lan})\"\n    else\n        echo \"$(docker run -it --rm alpine sh -c \"date +%s%N | md5sum | cut -c 1-${lan}\")\"\n    fi\n}\n\nrestart_php() {\n    local RES=`run_exec php \"supervisorctl update php\"`\n    if [ -z \"$RES\" ]; then\n        RES=`run_exec php \"supervisorctl restart php\"`\n    fi\n    local IN=`echo $RES | grep \"ERROR\"`\n    if [[ \"$IN\" != \"\" ]]; then\n        $COMPOSE stop php\n        $COMPOSE start php\n    else\n        info \"$RES\"\n    fi\n}\n\nswitch_debug() {\n    local debug=\"false\"\n    if [[ \"$1\" == \"true\" ]] || [[ \"$1\" == \"dev\" ]] || [[ \"$1\" == \"open\" ]]; then\n        debug=\"true\"\n    fi\n    if [[ \"$(env_get APP_DEBUG)\" != \"$debug\" ]]; then\n        env_set APP_DEBUG \"$debug\"\n        restart_php\n    fi\n}\n\ncheck_docker() {\n    docker --version &> /dev/null\n    if [ $? -ne  0 ]; then\n        error \"未安装 Docker！\"\n        exit 1\n    fi\n    docker-compose version &> /dev/null\n    if [ $? -ne  0 ]; then\n        docker compose version &> /dev/null\n        if [ $? -ne  0 ]; then\n            error \"未安装 Docker-compose！\"\n            exit 1\n        fi\n        COMPOSE=\"docker compose\"\n    fi\n    if [[ -n `$COMPOSE version | grep -E \"\\sv1\"` ]]; then\n        $COMPOSE version\n        error \"Docker-compose 版本过低，请升级至v2+！\"\n        exit 1\n    fi\n}\n\ncheck_node() {\n    npm --version &> /dev/null\n    if [ $? -ne  0 ]; then\n        error \"未安装 npm！\"\n        exit 1\n    fi\n    node --version &> /dev/null\n    if [ $? -ne  0 ]; then\n        error \"未安装 Node.js！\"\n        exit 1\n    fi\n    if [[ -n `node --version | grep -E \"v1\"` ]]; then\n        node --version\n        error \"Node.js 版本过低，请升级至v20+！\"\n        exit 1\n    fi\n}\n\ndocker_name() {\n    echo `$COMPOSE ps | awk '{print $1}' | grep \"\\-$1\\-\"`\n}\n\nrun_compile() {\n    local type=$1\n    check_node\n    if [ ! -d \"./node_modules\" ]; then\n        npm install\n    fi\n    if [ \"$type\" = \"dev\" ]; then\n        echo \"<script>window.location.href=window.location.href.replace(/:\\d+/, ':' + $(env_get APP_PORT))</script>\" > ./index.html\n        env_set APP_DEV_PORT $(rand 20001 30000)\n    fi\n    switch_debug \"$type\"\n    #\n    if [ \"$type\" = \"prod\" ]; then\n        rm -rf \"./public/js/build\"\n        npx vite build -- fromcmd\n    else\n        npx vite -- fromcmd\n    fi\n}\n\nrun_electron() {\n    local argv=$@\n    check_node\n    if [ ! -d \"./node_modules\" ]; then\n        npm install\n    fi\n    if [ ! -d \"./electron/node_modules\" ]; then\n        pushd electron\n        npm install\n        popd\n    fi\n    #\n    if [ -d \"./electron/dist\" ]; then\n        rm -rf \"./electron/dist\"\n    fi\n    if [ -d \"./electron/public\" ]; then\n        rm -rf \"./electron/public\"\n    fi\n    #\n    BUILD_FRONTEND=\"build\"\n    if [ \"$argv\" == \"dev\" ]; then\n        switch_debug \"$argv\"\n        BUILD_FRONTEND=\"dev\"\n    fi\n    env BUILD_FRONTEND=$BUILD_FRONTEND node ./electron/build.js $argv\n}\n\nrun_exec() {\n    local container=$1\n    local cmd=$2\n    local name=`docker_name $container`\n    if [ -z \"$name\" ]; then\n        error \"没有找到 $container 容器!\"\n        exit 1\n    fi\n    docker exec -it \"$name\" /bin/sh -c \"$cmd\"\n}\n\nrun_mysql() {\n    if [ \"$1\" = \"backup\" ]; then\n        database=$(env_get DB_DATABASE)\n        username=$(env_get DB_USERNAME)\n        password=$(env_get DB_PASSWORD)\n        # 备份数据库\n        mkdir -p ${cur_path}/docker/mysql/backup\n        filename=\"${cur_path}/docker/mysql/backup/${database}_$(date \"+%Y%m%d%H%M%S\").sql.gz\"\n        run_exec mariadb \"exec mysqldump --databases $database -u$username -p$password\" | gzip > $filename\n        judge \"备份数据库\"\n        [ -f \"$filename\" ] && info \"备份文件：$filename\"\n    elif [ \"$1\" = \"recovery\" ]; then\n        database=$(env_get DB_DATABASE)\n        username=$(env_get DB_USERNAME)\n        password=$(env_get DB_PASSWORD)\n        # 还原数据库\n        mkdir -p ${cur_path}/docker/mysql/backup\n        list=`ls -1 \"${cur_path}/docker/mysql/backup\" | grep \".sql.gz\"`\n        if [ -z \"$list\" ]; then\n            error \"没有备份文件！\"\n            exit 1\n        fi\n        echo \"$list\"\n        read -rp \"请输入备份文件名称还原：\" inputname\n        filename=\"${cur_path}/docker/mysql/backup/${inputname}\"\n        if [ ! -f \"$filename\" ]; then\n            error \"备份文件：${inputname} 不存在！\"\n            exit 1\n        fi\n        container_name=`docker_name mariadb`\n        if [ -z \"$container_name\" ]; then\n            error \"没有找到 mariadb 容器!\"\n            exit 1\n        fi\n        docker cp $filename $container_name:/\n        run_exec mariadb \"gunzip < /$inputname | mysql -u$username -p$password $database\"\n        run_exec php \"php artisan migrate\"\n        judge \"还原数据库\"\n    elif [ \"$1\" = \"open\" ]; then\n        container_name=`docker_name mariadb`\n        if [ -z \"$container_name\" ]; then\n            error \"没有找到 mariadb 容器!\"\n            exit 1\n        fi\n        mkdir -p ${cur_path}/docker/mysql/tmp\n        cat > ${cur_path}/docker/mysql/tmp/${container_name}.conf <<EOF\nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log notice;\npid /var/run/nginx.pid;\nevents {\n    worker_connections 1024;\n}\nstream {\n    upstream mysql {\n        server ${container_name}:3306 max_fails=1 fail_timeout=30s;\n    }\n    server {\n        listen 3306;\n        proxy_pass mysql;\n        proxy_connect_timeout 5s;\n    }\n}\nEOF\n        default_value=\"$(env_get DB_PORT_OPEN)\"\n        if [ -n \"$default_value\" ]; then\n            read_tip=\"请输入代理端口 (3300-65500, 默认: ${default_value}): \"\n        else\n            read_tip=\"请输入代理端口 (3300-65500): \"\n        fi\n        read -rp \"$read_tip\" inputport\n        inputport=${inputport:-$default_value}\n        if [ $inputport -lt 3300 ] || [ $inputport -gt 65500 ]; then\n            error \"端口范围不正确！\"\n            exit 1\n        fi\n        env_set DB_PORT_OPEN $inputport\n        run_mysql rm-port\n        docker run --name ${container_name}-port \\\n            --network dootask-networks-$(env_get APP_ID) \\\n            -p ${inputport}:3306 \\\n            -v ${cur_path}/docker/mysql/tmp/${container_name}.conf:/etc/nginx/nginx.conf \\\n            -d nginx:alpine > /dev/null\n        judge \"开启代理\"\n    elif [ \"$1\" = \"close\" ]; then\n        container_name=`docker_name mariadb`\n        if [ -z \"$container_name\" ]; then\n            error \"没有找到 mariadb 容器!\"\n            exit 1\n        fi\n        docker stop ${container_name}-port > /dev/null\n        docker rm ${container_name}-port > /dev/null\n        judge \"关闭代理\"\n    elif [ \"$1\" = \"rm-port\" ]; then\n        docker rm -f $(docker_name mariadb)-port &> /dev/null\n    fi\n}\n\nhttps_auto() {\n    restart_nginx=\"n\"\n    if [[ \"$(env_get APP_PORT)\" != \"80\" ]]; then\n        warning \"HTTP服务端口不是80，是否修改并继续操作？ [Y/n]\"\n        read -r continue_http\n        [[ -z ${continue_http} ]] && continue_http=\"Y\"\n        case $continue_http in\n        [yY][eE][sS] | [yY])\n            success \"继续操作\"\n            env_set \"APP_PORT\" \"80\"\n            restart_nginx=\"y\"\n            ;;\n        *)\n            error \"操作终止\"\n            exit 1\n            ;;\n        esac\n    fi\n    if [[ \"$(env_get APP_SSL_PORT)\" != \"443\" ]]; then\n        warning \"HTTPS服务端口不是443，是否修改并继续操作？ [Y/n]\"\n        read -r continue_https\n        [[ -z ${continue_https} ]] && continue_https=\"Y\"\n        case $continue_https in\n        [yY][eE][sS] | [yY])\n            success \"继续操作\"\n            env_set \"APP_SSL_PORT\" \"443\"\n            restart_nginx=\"y\"\n            ;;\n        *)\n            error \"操作终止\"\n            exit 1\n            ;;\n        esac\n    fi\n    if [[ \"$restart_nginx\" == \"y\" ]]; then\n        $COMPOSE up -d\n    fi\n    docker run -it --rm -v $(pwd):/work nginx:alpine sh \"/work/bin/https\"\n    if [[ 0 -eq $? ]]; then\n        run_exec nginx \"nginx -s reload\"\n    fi\n}\n\nenv_get() {\n    local key=$1\n    local value=`cat ${cur_path}/.env | grep \"^$key=\" | awk -F '=' '{print $2}' | tr -d '\\r\\n'`\n    echo \"$value\"\n}\n\nenv_set() {\n    local key=$1\n    local val=$2\n    local exist=`cat ${cur_path}/.env | grep \"^$key=\"`\n    if [ -z \"$exist\" ]; then\n        echo \"$key=$val\" >> $cur_path/.env\n    else\n        if [[ `uname` == 'Linux' ]]; then\n            sed -i \"/^${key}=/c\\\\${key}=${val}\" ${cur_path}/.env\n        else\n            docker run -it --rm -v ${cur_path}:/www alpine sh -c \"sed -i \"/^${key}=/c\\\\${key}=${val}\" /www/.env\"\n        fi\n        if [ $? -ne  0 ]; then\n            error \"设置env参数失败！\"\n            exit 1\n        fi\n    fi\n}\n\nenv_init() {\n    if [ ! -f \".env\" ]; then\n        cp .env.docker .env\n    fi\n    if [ -z \"$(env_get DB_ROOT_PASSWORD)\" ]; then\n        env_set DB_ROOT_PASSWORD \"$(rand_string 16)\"\n    fi\n    if [ -z \"$(env_get APP_ID)\" ]; then\n        env_set APP_ID \"$(rand_string 6)\"\n    fi\n    if [ -z \"$(env_get APP_IPPR)\" ]; then\n        env_set APP_IPPR \"10.$(rand 50 100).$(rand 100 200)\"\n    fi\n}\n\narg_get() {\n    local find=\"n\"\n    local value=\"\"\n    for var in $cur_arg; do\n        if [[ \"$find\" == \"y\" ]]; then\n            if [[ ! $var =~ \"--\" ]]; then\n                value=$var\n            fi\n            break\n        fi\n        if [[ \"--$1\" == \"$var\" ]] || [[ \"-$1\" == \"$var\" ]]; then\n            find=\"y\"\n            value=\"yes\"\n        fi\n    done\n    echo $value\n}\n\n####################################################################################\n####################################################################################\n####################################################################################\n\nif [[ \"$1\" != \"electron\" ]]; then\n    check_docker\n    env_init\nfi\n\nif [ $# -gt 0 ]; then\n    if [[ \"$1\" == \"init\" ]] || [[ \"$1\" == \"install\" ]]; then\n        shift 1\n        # 初始化文件\n        if [[ -n \"$(arg_get relock)\" ]]; then\n            rm -rf node_modules\n            rm -rf package-lock.json\n            rm -rf vendor\n            rm -rf composer.lock\n        fi\n        mkdir -p \"${cur_path}/docker/log/supervisor\"\n        mkdir -p \"${cur_path}/docker/mysql/data\"\n        chmod -R 775 \"${cur_path}/docker/log/supervisor\"\n        chmod -R 775 \"${cur_path}/docker/mysql/data\"\n        # 启动容器\n        [[ \"$(arg_get port)\" -gt 0 ]] && env_set APP_PORT \"$(arg_get port)\"\n        $COMPOSE up php -d\n        # 安装composer依赖\n        run_exec php \"composer install\"\n        if [ ! -f \"${cur_path}/vendor/autoload.php\" ]; then\n            run_exec php \"composer config repo.packagist composer https://packagist.phpcomposer.com\"\n            run_exec php \"composer install\"\n            run_exec php \"composer config --unset repos.packagist\"\n        fi\n        if [ ! -f \"${cur_path}/vendor/autoload.php\" ]; then\n            error \"composer install 失败，请重试！\"\n            exit 1\n        fi\n        [[ -z \"$(env_get APP_KEY)\" ]] && run_exec php \"php artisan key:generate\"\n        switch_debug \"false\"\n        # 检查数据库\n        remaining=20\n        while [ ! -f \"${cur_path}/docker/mysql/data/$(env_get DB_DATABASE)/db.opt\" ]; do\n            ((remaining=$remaining-1))\n            if [ $remaining -lt 0 ]; then\n                error \"数据库初始化失败!\"\n                exit 1\n            fi\n            sleep 3\n            chmod -R 775 \"${cur_path}/docker/mysql/data\"\n        done\n        # 数据库迁移\n        remaining=20\n        while [ ! -f \"${cur_path}/docker/mysql/data/$(env_get DB_DATABASE)/$(env_get DB_PREFIX)migrations.ibd\" ]; do\n            ((remaining=$remaining-1))\n            if [ $remaining -lt 0 ]; then\n                error \"数据库安装失败!\"\n                exit 1\n            fi\n            sleep 3\n            run_exec php \"php artisan migrate --seed\"\n        done\n        # 设置初始化密码\n        res=`run_exec mariadb \"sh /etc/mysql/repassword.sh\"`\n        $COMPOSE up -d\n        restart_php\n        success \"安装完成\"\n        info \"地址: http://${GreenBG}127.0.0.1:$(env_get APP_PORT)${Font}\"\n        info \"$res\"\n    elif [[ \"$1\" == \"update\" ]]; then\n        shift 1\n        if [[ \"$@\" != \"nobackup\" ]]; then\n            run_mysql backup\n        fi\n        if [[ -z \"$(arg_get local)\" ]]; then\n            git fetch --all\n            git reset --hard origin/$(git branch | sed -n -e 's/^\\* \\(.*\\)/\\1/p')\n            git pull\n            run_exec php \"composer update\"\n        fi\n        run_exec php \"php artisan migrate\"\n        run_exec nginx \"nginx -s reload\"\n        restart_php\n        $COMPOSE up -d\n    elif [[ \"$1\" == \"uninstall\" ]]; then\n        shift 1\n        read -rp \"确定要卸载（含：删除容器、数据库、日志）吗？(Y/n): \" uninstall\n        [[ -z ${uninstall} ]] && uninstall=\"Y\"\n        case $uninstall in\n        [yY][eE][sS] | [yY])\n            info \"${RedBG}开始卸载...${Font}\"\n            ;;\n        *)\n            info \"${GreenBG}终止卸载。${Font}\"\n            exit 2\n            ;;\n        esac\n        run_mysql rm-port\n        $COMPOSE down\n        env_set APP_DEBUG \"false\"\n        rm -rf \"./docker/mysql/data\"\n        rm -rf \"./docker/log/supervisor\"\n        find \"./storage/logs\" -name \"*.log\" | xargs rm -rf\n        success \"卸载完成\"\n    elif [[ \"$1\" == \"reinstall\" ]]; then\n        shift 1\n        ./cmd uninstall $@\n        sleep 3\n        ./cmd install $@\n    elif [[ \"$1\" == \"port\" ]]; then\n        shift 1\n        env_set APP_PORT \"$1\"\n        $COMPOSE up -d\n        success \"修改成功\"\n        info \"地址: http://${GreenBG}127.0.0.1:$(env_get APP_PORT)${Font}\"\n    elif [[ \"$1\" == \"url\" ]]; then\n        shift 1\n        env_set APP_URL \"$1\"\n        restart_php\n        success \"修改成功\"\n    elif [[ \"$1\" == \"env\" ]]; then\n        shift 1\n        if [ -n \"$1\" ]; then\n            env_set $1 \"$2\"\n        fi\n        restart_php\n        success \"修改成功\"\n    elif [[ \"$1\" == \"repassword\" ]]; then\n        shift 1\n        run_exec mariadb \"sh /etc/mysql/repassword.sh \\\"$@\\\"\"\n    elif [[ \"$1\" == \"serve\" ]] || [[ \"$1\" == \"dev\" ]] || [[ \"$1\" == \"development\" ]]; then\n        shift 1\n        run_compile dev\n    elif [[ \"$1\" == \"build\" ]] || [[ \"$1\" == \"prod\" ]] || [[ \"$1\" == \"production\" ]]; then\n        shift 1\n        run_compile prod\n    elif [[ \"$1\" == \"appbuild\" ]] || [[ \"$1\" == \"buildapp\" ]]; then\n        shift 1\n        run_electron app $@\n    elif [[ \"$1\" == \"electron\" ]]; then\n        shift 1\n        run_electron $@\n    elif [[ \"$1\" == \"eeui\" ]]; then\n        shift 1\n        cli=\"$@\"\n        por=\"\"\n        if [[ \"$cli\" == \"build\" ]]; then\n            cli=\"build --simple\"\n        elif [[ \"$cli\" == \"dev\" ]]; then\n            por=\"-p 8880:8880\"\n        fi\n        docker run -it --rm -v ${cur_path}/resources/mobile:/work -w /work ${por} kuaifan/eeui-cli:0.0.1 eeui ${cli}\n    elif [[ \"$1\" == \"npm\" ]]; then\n        shift 1\n        npm $@\n        cd electron\n        npm $@\n        cd ..\n        docker run --rm -it -v ${cur_path}/resources/mobile:/work -w /work --entrypoint=/bin/bash node:16 -c \"npm $@\"\n    elif [[ \"$1\" == \"doc\" ]]; then\n        shift 1\n        run_exec php \"php app/Http/Controllers/Api/apidoc.php\"\n        docker run -it --rm -v ${cur_path}:/home/node/apidoc kuaifan/apidoc -i app/Http/Controllers/Api -o public/docs\n    elif [[ \"$1\" == \"debug\" ]]; then\n        shift 1\n        switch_debug \"$@\"\n        info \"success\"\n    elif [[ \"$1\" == \"https\" ]]; then\n        shift 1\n        if [[ \"$1\" == \"agent\" ]] || [[ \"$1\" == \"true\" ]]; then\n            env_set APP_SCHEME \"true\"\n        elif [[ \"$1\" == \"close\" ]] || [[ \"$1\" == \"auto\" ]]; then\n            env_set APP_SCHEME \"auto\"\n        else\n            https_auto\n        fi\n        restart_php\n    elif [[ \"$1\" == \"artisan\" ]]; then\n        shift 1\n        e=\"php artisan $@\" && run_exec php \"$e\"\n    elif [[ \"$1\" == \"php\" ]]; then\n        shift 1\n        if [[ \"$1\" == \"restart\" ]] || [[ \"$1\" == \"reboot\" ]]; then\n            restart_php\n        else\n            e=\"php $@\" && run_exec php \"$e\"\n        fi\n    elif [[ \"$1\" == \"nginx\" ]]; then\n        shift 1\n        e=\"nginx $@\" && run_exec nginx \"$e\"\n    elif [[ \"$1\" == \"redis\" ]]; then\n        shift 1\n        e=\"redis $@\" && run_exec redis \"$e\"\n    elif [[ \"$1\" == \"mysql\" ]]; then\n        shift 1\n        if [[ \"$1\" == \"backup\" ]] || [[ \"$1\" == \"b\" ]]; then\n            run_mysql backup\n        elif [[ \"$1\" == \"recovery\" ]] || [[ \"$1\" == \"r\" ]]; then\n            run_mysql recovery\n        elif [[ \"$1\" == \"agent\" ]] || [[ \"$1\" == \"open\" ]]; then\n            run_mysql open\n        elif [[ \"$1\" == \"unagent\" ]] || [[ \"$1\" == \"close\" ]]; then\n            run_mysql close\n        else\n            e=\"mysql $@\" && run_exec mariadb \"$e\"\n        fi\n    elif [[ \"$1\" == \"composer\" ]]; then\n        shift 1\n        e=\"composer $@\" && run_exec php \"$e\"\n    elif [[ \"$1\" == \"service\" ]]; then\n        shift 1\n        e=\"service $@\" && run_exec php \"$e\"\n    elif [[ \"$1\" == \"super\" ]] || [[ \"$1\" == \"supervisorctl\" ]]; then\n        shift 1\n        e=\"supervisorctl $@\" && run_exec php \"$e\"\n    elif [[ \"$1\" == \"models\" ]]; then\n        shift 1\n        run_exec php \"php app/Models/clearHelper.php\"\n        run_exec php \"php artisan ide-helper:models -W\"\n    elif [[ \"$1\" == \"translate\" ]]; then\n        shift 1\n        run_exec php \"cd /var/www/language && php translate.php\"\n    elif [[ \"$1\" == \"test\" ]]; then\n        shift 1\n        e=\"./vendor/bin/phpunit $@\" && run_exec php \"$e\"\n    elif [[ \"$1\" == \"restart\" ]]; then\n        shift 1\n        $COMPOSE stop \"$@\"\n        $COMPOSE start \"$@\"\n    else\n        if [[ \"$1\" == \"down\" ]]; then\n            run_mysql rm-port\n        fi\n        $COMPOSE \"$@\"\n    fi\nelse\n    $COMPOSE ps\nfi\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.6142578125,
          "content": "{\n    \"name\": \"laravel/laravel\",\n    \"type\": \"project\",\n    \"description\": \"The Laravel Framework.\",\n    \"keywords\": [\n        \"framework\",\n        \"laravel\"\n    ],\n    \"license\": \"MIT\",\n    \"require\": {\n        \"php\": \"^8.0\",\n        \"ext-curl\": \"*\",\n        \"ext-dom\": \"*\",\n        \"ext-gd\": \"*\",\n        \"ext-imagick\": \"*\",\n        \"ext-json\": \"*\",\n        \"ext-libxml\": \"*\",\n        \"ext-openssl\": \"*\",\n        \"ext-simplexml\": \"*\",\n        \"ext-zip\": \"*\",\n        \"directorytree/ldaprecord-laravel\": \"^2.7\",\n        \"fideloper/proxy\": \"^4.4.1\",\n        \"firebase/php-jwt\": \"^6.9\",\n        \"fruitcake/laravel-cors\": \"^2.0.4\",\n        \"guanguans/notify\": \"^1.21.1\",\n        \"guzzlehttp/guzzle\": \"^7.3.0\",\n        \"hedeqiang/umeng\": \"^2.1\",\n        \"laravel/framework\": \"^v8.83.27\",\n        \"laravel/tinker\": \"^v2.6.1\",\n        \"laravolt/avatar\": \"^5.1\",\n        \"league/commonmark\": \"^2.5\",\n        \"league/html-to-markdown\": \"^5.1\",\n        \"maatwebsite/excel\": \"^3.1.31\",\n        \"madnest/madzipper\": \"^v1.1.0\",\n        \"mews/captcha\": \"^3.2.6\",\n        \"orangehill/iseed\": \"^3.0.1\",\n        \"overtrue/pinyin\": \"^4.0\",\n        \"predis/predis\": \"^1.1.7\",\n        \"symfony/mailer\": \"^6.0\"\n    },\n    \"require-dev\": {\n        \"barryvdh/laravel-ide-helper\": \"^v2.10.0\",\n        \"facade/ignition\": \"^2.10.2\",\n        \"fakerphp/faker\": \"^v1.14.1\",\n        \"hhxsv5/laravel-s\": \"^v3.7.19\",\n        \"kitloong/laravel-migrations-generator\": \"^4.4.2\",\n        \"laravel/sail\": \"^v1.8.1\",\n        \"mockery/mockery\": \"^1.4.3\",\n        \"nunomaduro/collision\": \"^v5.5.0\",\n        \"phpunit/phpunit\": \"^9.5.6\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"App\\\\\": \"app/\",\n            \"Database\\\\Factories\\\\\": \"database/factories/\",\n            \"Database\\\\Seeders\\\\\": \"database/seeders/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Tests\\\\\": \"tests/\"\n        },\n        \"files\" : [\n            \"app/Helpers/Function.php\"\n        ]\n    },\n    \"scripts\": {\n        \"post-autoload-dump\": [\n            \"Illuminate\\\\Foundation\\\\ComposerScripts::postAutoloadDump\",\n            \"@php artisan package:discover --ansi\"\n        ],\n        \"post-root-package-install\": [\n            \"@php -r \\\"file_exists('.env') || copy('.env.example', '.env');\\\"\"\n        ],\n        \"post-create-project-cmd\": [\n            \"@php artisan key:generate --ansi\"\n        ]\n    },\n    \"extra\": {\n        \"laravel\": {\n            \"dont-discover\": []\n        }\n    },\n    \"config\": {\n        \"optimize-autoloader\": true,\n        \"preferred-install\": \"dist\",\n        \"sort-packages\": true\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"repositories\": {\n    }\n}\n"
        },
        {
          "name": "composer.lock",
          "type": "blob",
          "size": 384.388671875,
          "content": "{\n    \"_readme\": [\n        \"This file locks the dependencies of your project to a known state\",\n        \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies\",\n        \"This file is @generated automatically\"\n    ],\n    \"content-hash\": \"4bfa166220b4b329f40e62394c6336a0\",\n    \"packages\": [\n        {\n            \"name\": \"asm89/stack-cors\",\n            \"version\": \"v2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/asm89/stack-cors.git\",\n                \"reference\": \"50f57105bad3d97a43ec4a485eb57daf347eafea\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/asm89/stack-cors/zipball/50f57105bad3d97a43ec4a485eb57daf347eafea\",\n                \"reference\": \"50f57105bad3d97a43ec4a485eb57daf347eafea\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3|^8.0\",\n                \"symfony/http-foundation\": \"^5.3|^6|^7\",\n                \"symfony/http-kernel\": \"^5.3|^6|^7\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9\",\n                \"squizlabs/php_codesniffer\": \"^3.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Asm89\\\\Stack\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Alexander\",\n                    \"email\": \"iam.asm89@gmail.com\"\n                }\n            ],\n            \"description\": \"Cross-origin resource sharing library and stack middleware\",\n            \"homepage\": \"https://github.com/asm89/stack-cors\",\n            \"keywords\": [\n                \"cors\",\n                \"stack\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/asm89/stack-cors/issues\",\n                \"source\": \"https://github.com/asm89/stack-cors/tree/v2.2.0\"\n            },\n            \"time\": \"2023-11-14T13:51:46+00:00\"\n        },\n        {\n            \"name\": \"brick/math\",\n            \"version\": \"0.11.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/brick/math.git\",\n                \"reference\": \"0ad82ce168c82ba30d1c01ec86116ab52f589478\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/brick/math/zipball/0ad82ce168c82ba30d1c01ec86116ab52f589478\",\n                \"reference\": \"0ad82ce168c82ba30d1c01ec86116ab52f589478\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^8.0\"\n            },\n            \"require-dev\": {\n                \"php-coveralls/php-coveralls\": \"^2.2\",\n                \"phpunit/phpunit\": \"^9.0\",\n                \"vimeo/psalm\": \"5.0.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Brick\\\\Math\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"Arbitrary-precision arithmetic library\",\n            \"keywords\": [\n                \"Arbitrary-precision\",\n                \"BigInteger\",\n                \"BigRational\",\n                \"arithmetic\",\n                \"bigdecimal\",\n                \"bignum\",\n                \"brick\",\n                \"math\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/brick/math/issues\",\n                \"source\": \"https://github.com/brick/math/tree/0.11.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/BenMorel\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-01-15T23:15:59+00:00\"\n        },\n        {\n            \"name\": \"carbonphp/carbon-doctrine-types\",\n            \"version\": \"2.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/CarbonPHP/carbon-doctrine-types.git\",\n                \"reference\": \"99f76ffa36cce3b70a4a6abce41dba15ca2e84cb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/CarbonPHP/carbon-doctrine-types/zipball/99f76ffa36cce3b70a4a6abce41dba15ca2e84cb\",\n                \"reference\": \"99f76ffa36cce3b70a4a6abce41dba15ca2e84cb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.4 || ^8.0\"\n            },\n            \"conflict\": {\n                \"doctrine/dbal\": \"<3.7.0 || >=4.0.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/dbal\": \"^3.7.0\",\n                \"nesbot/carbon\": \"^2.71.0 || ^3.0.0\",\n                \"phpunit/phpunit\": \"^10.3\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Carbon\\\\Doctrine\\\\\": \"src/Carbon/Doctrine/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"KyleKatarn\",\n                    \"email\": \"kylekatarnls@gmail.com\"\n                }\n            ],\n            \"description\": \"Types to use Carbon in Doctrine\",\n            \"keywords\": [\n                \"carbon\",\n                \"date\",\n                \"datetime\",\n                \"doctrine\",\n                \"time\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/CarbonPHP/carbon-doctrine-types/issues\",\n                \"source\": \"https://github.com/CarbonPHP/carbon-doctrine-types/tree/2.1.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/kylekatarnls\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://opencollective.com/Carbon\",\n                    \"type\": \"open_collective\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/nesbot/carbon\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-12-11T17:09:12+00:00\"\n        },\n        {\n            \"name\": \"composer/semver\",\n            \"version\": \"3.4.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/composer/semver.git\",\n                \"reference\": \"4313d26ada5e0c4edfbd1dc481a92ff7bff91f12\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/composer/semver/zipball/4313d26ada5e0c4edfbd1dc481a92ff7bff91f12\",\n                \"reference\": \"4313d26ada5e0c4edfbd1dc481a92ff7bff91f12\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.3.2 || ^7.0 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"phpstan/phpstan\": \"^1.11\",\n                \"symfony/phpunit-bridge\": \"^3 || ^7\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Composer\\\\Semver\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nils Adermann\",\n                    \"email\": \"naderman@naderman.de\",\n                    \"homepage\": \"http://www.naderman.de\"\n                },\n                {\n                    \"name\": \"Jordi Boggiano\",\n                    \"email\": \"j.boggiano@seld.be\",\n                    \"homepage\": \"http://seld.be\"\n                },\n                {\n                    \"name\": \"Rob Bast\",\n                    \"email\": \"rob.bast@gmail.com\",\n                    \"homepage\": \"http://robbast.nl\"\n                }\n            ],\n            \"description\": \"Semver library that offers utilities, version constraint parsing and validation.\",\n            \"keywords\": [\n                \"semantic\",\n                \"semver\",\n                \"validation\",\n                \"versioning\"\n            ],\n            \"support\": {\n                \"irc\": \"ircs://irc.libera.chat:6697/composer\",\n                \"issues\": \"https://github.com/composer/semver/issues\",\n                \"source\": \"https://github.com/composer/semver/tree/3.4.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://packagist.com\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/composer\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/composer/composer\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-19T14:15:21+00:00\"\n        },\n        {\n            \"name\": \"dflydev/dot-access-data\",\n            \"version\": \"v3.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/dflydev/dflydev-dot-access-data.git\",\n                \"reference\": \"a23a2bf4f31d3518f3ecb38660c95715dfead60f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/dflydev/dflydev-dot-access-data/zipball/a23a2bf4f31d3518f3ecb38660c95715dfead60f\",\n                \"reference\": \"a23a2bf4f31d3518f3ecb38660c95715dfead60f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"phpstan/phpstan\": \"^0.12.42\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.3\",\n                \"scrutinizer/ocular\": \"1.6.0\",\n                \"squizlabs/php_codesniffer\": \"^3.5\",\n                \"vimeo/psalm\": \"^4.0.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Dflydev\\\\DotAccessData\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Dragonfly Development Inc.\",\n                    \"email\": \"info@dflydev.com\",\n                    \"homepage\": \"http://dflydev.com\"\n                },\n                {\n                    \"name\": \"Beau Simensen\",\n                    \"email\": \"beau@dflydev.com\",\n                    \"homepage\": \"http://beausimensen.com\"\n                },\n                {\n                    \"name\": \"Carlos Frutos\",\n                    \"email\": \"carlos@kiwing.it\",\n                    \"homepage\": \"https://github.com/cfrutos\"\n                },\n                {\n                    \"name\": \"Colin O'Dell\",\n                    \"email\": \"colinodell@gmail.com\",\n                    \"homepage\": \"https://www.colinodell.com\"\n                }\n            ],\n            \"description\": \"Given a deep data structure, access data by dot notation.\",\n            \"homepage\": \"https://github.com/dflydev/dflydev-dot-access-data\",\n            \"keywords\": [\n                \"access\",\n                \"data\",\n                \"dot\",\n                \"notation\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/dflydev/dflydev-dot-access-data/issues\",\n                \"source\": \"https://github.com/dflydev/dflydev-dot-access-data/tree/v3.0.3\"\n            },\n            \"time\": \"2024-07-08T12:26:09+00:00\"\n        },\n        {\n            \"name\": \"directorytree/ldaprecord\",\n            \"version\": \"v2.20.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/DirectoryTree/LdapRecord.git\",\n                \"reference\": \"5bd0a5a9d257cf1049ae83055dbba4c3479ddf16\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/DirectoryTree/LdapRecord/zipball/5bd0a5a9d257cf1049ae83055dbba4c3479ddf16\",\n                \"reference\": \"5bd0a5a9d257cf1049ae83055dbba4c3479ddf16\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"ext-ldap\": \"*\",\n                \"illuminate/contracts\": \"^5.0|^6.0|^7.0|^8.0|^9.0|^10.0\",\n                \"nesbot/carbon\": \"^1.0|^2.0\",\n                \"php\": \">=7.3\",\n                \"psr/log\": \"^1.0|^2.0|^3.0\",\n                \"psr/simple-cache\": \"^1.0|^2.0\",\n                \"symfony/polyfill-php80\": \"^1.25\",\n                \"tightenco/collect\": \"^5.6|^6.0|^7.0|^8.0|^9.0\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"^1.0\",\n                \"phpunit/phpunit\": \"^9.0\",\n                \"spatie/ray\": \"^1.24\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"LdapRecord\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Steve Bauman\",\n                    \"email\": \"steven_bauman@outlook.com\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"A fully-featured LDAP ORM.\",\n            \"homepage\": \"https://www.ldaprecord.com\",\n            \"keywords\": [\n                \"active directory\",\n                \"ad\",\n                \"adLDAP\",\n                \"adldap2\",\n                \"directory\",\n                \"ldap\",\n                \"ldaprecord\",\n                \"orm\",\n                \"windows\"\n            ],\n            \"support\": {\n                \"docs\": \"https://ldaprecord.com\",\n                \"email\": \"steven_bauman@outlook.com\",\n                \"issues\": \"https://github.com/DirectoryTree/LdapRecord/issues\",\n                \"source\": \"https://github.com/DirectoryTree/LdapRecord\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/stevebauman\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-10-11T16:34:34+00:00\"\n        },\n        {\n            \"name\": \"directorytree/ldaprecord-laravel\",\n            \"version\": \"v2.7.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/DirectoryTree/LdapRecord-Laravel.git\",\n                \"reference\": \"5f36d4ba6edbf56d97211fb892188aa6f9aceabc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/DirectoryTree/LdapRecord-Laravel/zipball/5f36d4ba6edbf56d97211fb892188aa6f9aceabc\",\n                \"reference\": \"5f36d4ba6edbf56d97211fb892188aa6f9aceabc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"directorytree/ldaprecord\": \"^2.4.4\",\n                \"ext-json\": \"*\",\n                \"ext-ldap\": \"*\",\n                \"illuminate/support\": \"^5.6|^6.0|^7.0|^8.0|^9.0|^10.0\",\n                \"php\": \">=7.3\",\n                \"ramsey/uuid\": \"*\"\n            },\n            \"require-dev\": {\n                \"laravel/sanctum\": \"*\",\n                \"mockery/mockery\": \"^1.0\",\n                \"orchestra/testbench\": \"^3.7|^4.0|^5.0|^6.0|^7.0\",\n                \"phpunit/phpunit\": \"^7.0|^8.0|^9.0\",\n                \"spatie/ray\": \"^1.28\"\n            },\n            \"type\": \"project\",\n            \"extra\": {\n                \"laravel\": {\n                    \"providers\": [\n                        \"LdapRecord\\\\Laravel\\\\LdapServiceProvider\",\n                        \"LdapRecord\\\\Laravel\\\\LdapAuthServiceProvider\"\n                    ]\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"LdapRecord\\\\Laravel\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"LDAP Authentication & Management for Laravel.\",\n            \"keywords\": [\n                \"adldap2\",\n                \"laravel\",\n                \"ldap\",\n                \"ldaprecord\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/DirectoryTree/LdapRecord-Laravel/issues\",\n                \"source\": \"https://github.com/DirectoryTree/LdapRecord-Laravel/tree/v2.7.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/stevebauman\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-09T14:29:14+00:00\"\n        },\n        {\n            \"name\": \"doctrine/inflector\",\n            \"version\": \"2.0.10\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/inflector.git\",\n                \"reference\": \"5817d0659c5b50c9b950feb9af7b9668e2c436bc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/inflector/zipball/5817d0659c5b50c9b950feb9af7b9668e2c436bc\",\n                \"reference\": \"5817d0659c5b50c9b950feb9af7b9668e2c436bc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^11.0\",\n                \"phpstan/phpstan\": \"^1.8\",\n                \"phpstan/phpstan-phpunit\": \"^1.1\",\n                \"phpstan/phpstan-strict-rules\": \"^1.3\",\n                \"phpunit/phpunit\": \"^8.5 || ^9.5\",\n                \"vimeo/psalm\": \"^4.25 || ^5.4\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Inflector\\\\\": \"lib/Doctrine/Inflector\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                }\n            ],\n            \"description\": \"PHP Doctrine Inflector is a small library that can perform string manipulations with regard to upper/lowercase and singular/plural forms of words.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/inflector.html\",\n            \"keywords\": [\n                \"inflection\",\n                \"inflector\",\n                \"lowercase\",\n                \"manipulation\",\n                \"php\",\n                \"plural\",\n                \"singular\",\n                \"strings\",\n                \"uppercase\",\n                \"words\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/inflector/issues\",\n                \"source\": \"https://github.com/doctrine/inflector/tree/2.0.10\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Finflector\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-02-18T20:23:39+00:00\"\n        },\n        {\n            \"name\": \"doctrine/lexer\",\n            \"version\": \"1.2.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/lexer.git\",\n                \"reference\": \"c268e882d4dbdd85e36e4ad69e02dc284f89d229\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/lexer/zipball/c268e882d4dbdd85e36e4ad69e02dc284f89d229\",\n                \"reference\": \"c268e882d4dbdd85e36e4ad69e02dc284f89d229\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^9.0\",\n                \"phpstan/phpstan\": \"^1.3\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.5\",\n                \"vimeo/psalm\": \"^4.11\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\Lexer\\\\\": \"lib/Doctrine/Common/Lexer\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                }\n            ],\n            \"description\": \"PHP Doctrine Lexer parser library that can be used in Top-Down, Recursive Descent Parsers.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/lexer.html\",\n            \"keywords\": [\n                \"annotations\",\n                \"docblock\",\n                \"lexer\",\n                \"parser\",\n                \"php\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/lexer/issues\",\n                \"source\": \"https://github.com/doctrine/lexer/tree/1.2.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Flexer\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-02-28T11:07:21+00:00\"\n        },\n        {\n            \"name\": \"dragonmantank/cron-expression\",\n            \"version\": \"v3.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/dragonmantank/cron-expression.git\",\n                \"reference\": \"8c784d071debd117328803d86b2097615b457500\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/dragonmantank/cron-expression/zipball/8c784d071debd117328803d86b2097615b457500\",\n                \"reference\": \"8c784d071debd117328803d86b2097615b457500\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2|^8.0\",\n                \"webmozart/assert\": \"^1.0\"\n            },\n            \"replace\": {\n                \"mtdowling/cron-expression\": \"^1.0\"\n            },\n            \"require-dev\": {\n                \"phpstan/extension-installer\": \"^1.0\",\n                \"phpstan/phpstan\": \"^1.0\",\n                \"phpunit/phpunit\": \"^7.0|^8.0|^9.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Cron\\\\\": \"src/Cron/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Chris Tankersley\",\n                    \"email\": \"chris@ctankersley.com\",\n                    \"homepage\": \"https://github.com/dragonmantank\"\n                }\n            ],\n            \"description\": \"CRON for PHP: Calculate the next or previous run date and determine if a CRON expression is due\",\n            \"keywords\": [\n                \"cron\",\n                \"schedule\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/dragonmantank/cron-expression/issues\",\n                \"source\": \"https://github.com/dragonmantank/cron-expression/tree/v3.4.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/dragonmantank\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-10-09T13:47:03+00:00\"\n        },\n        {\n            \"name\": \"egulias/email-validator\",\n            \"version\": \"2.1.25\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/egulias/EmailValidator.git\",\n                \"reference\": \"0dbf5d78455d4d6a41d186da50adc1122ec066f4\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/egulias/EmailValidator/zipball/0dbf5d78455d4d6a41d186da50adc1122ec066f4\",\n                \"reference\": \"0dbf5d78455d4d6a41d186da50adc1122ec066f4\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/lexer\": \"^1.0.1\",\n                \"php\": \">=5.5\",\n                \"symfony/polyfill-intl-idn\": \"^1.10\"\n            },\n            \"require-dev\": {\n                \"dominicsayers/isemail\": \"^3.0.7\",\n                \"phpunit/phpunit\": \"^4.8.36|^7.5.15\",\n                \"satooshi/php-coveralls\": \"^1.0.1\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"PHP Internationalization Libraries are required to use the SpoofChecking validation\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Egulias\\\\EmailValidator\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Eduardo Gulias Davis\"\n                }\n            ],\n            \"description\": \"A library for validating emails against several RFCs\",\n            \"homepage\": \"https://github.com/egulias/EmailValidator\",\n            \"keywords\": [\n                \"email\",\n                \"emailvalidation\",\n                \"emailvalidator\",\n                \"validation\",\n                \"validator\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/egulias/EmailValidator/issues\",\n                \"source\": \"https://github.com/egulias/EmailValidator/tree/2.1.25\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/egulias\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-12-29T14:50:06+00:00\"\n        },\n        {\n            \"name\": \"ezyang/htmlpurifier\",\n            \"version\": \"v4.18.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ezyang/htmlpurifier.git\",\n                \"reference\": \"cb56001e54359df7ae76dc522d08845dc741621b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ezyang/htmlpurifier/zipball/cb56001e54359df7ae76dc522d08845dc741621b\",\n                \"reference\": \"cb56001e54359df7ae76dc522d08845dc741621b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"~5.6.0 || ~7.0.0 || ~7.1.0 || ~7.2.0 || ~7.3.0 || ~7.4.0 || ~8.0.0 || ~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n            },\n            \"require-dev\": {\n                \"cerdic/css-tidy\": \"^1.7 || ^2.0\",\n                \"simpletest/simpletest\": \"dev-master\"\n            },\n            \"suggest\": {\n                \"cerdic/css-tidy\": \"If you want to use the filter 'Filter.ExtractStyleBlocks'.\",\n                \"ext-bcmath\": \"Used for unit conversion and imagecrash protection\",\n                \"ext-iconv\": \"Converts text to and from non-UTF-8 encodings\",\n                \"ext-tidy\": \"Used for pretty-printing HTML\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"library/HTMLPurifier.composer.php\"\n                ],\n                \"psr-0\": {\n                    \"HTMLPurifier\": \"library/\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/library/HTMLPurifier/Language/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-2.1-or-later\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Edward Z. Yang\",\n                    \"email\": \"admin@htmlpurifier.org\",\n                    \"homepage\": \"http://ezyang.com\"\n                }\n            ],\n            \"description\": \"Standards compliant HTML filter written in PHP\",\n            \"homepage\": \"http://htmlpurifier.org/\",\n            \"keywords\": [\n                \"html\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/ezyang/htmlpurifier/issues\",\n                \"source\": \"https://github.com/ezyang/htmlpurifier/tree/v4.18.0\"\n            },\n            \"time\": \"2024-11-01T03:51:45+00:00\"\n        },\n        {\n            \"name\": \"fideloper/proxy\",\n            \"version\": \"4.4.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/fideloper/TrustedProxy.git\",\n                \"reference\": \"a751f2bc86dd8e6cfef12dc0cbdada82f5a18750\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/fideloper/TrustedProxy/zipball/a751f2bc86dd8e6cfef12dc0cbdada82f5a18750\",\n                \"reference\": \"a751f2bc86dd8e6cfef12dc0cbdada82f5a18750\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"illuminate/contracts\": \"^5.0|^6.0|^7.0|^8.0|^9.0\",\n                \"php\": \">=5.4.0\"\n            },\n            \"require-dev\": {\n                \"illuminate/http\": \"^5.0|^6.0|^7.0|^8.0|^9.0\",\n                \"mockery/mockery\": \"^1.0\",\n                \"phpunit/phpunit\": \"^8.5.8|^9.3.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laravel\": {\n                    \"providers\": [\n                        \"Fideloper\\\\Proxy\\\\TrustedProxyServiceProvider\"\n                    ]\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Fideloper\\\\Proxy\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Chris Fidao\",\n                    \"email\": \"fideloper@gmail.com\"\n                }\n            ],\n            \"description\": \"Set trusted proxies for Laravel\",\n            \"keywords\": [\n                \"load balancing\",\n                \"proxy\",\n                \"trusted proxy\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/fideloper/TrustedProxy/issues\",\n                \"source\": \"https://github.com/fideloper/TrustedProxy/tree/4.4.2\"\n            },\n            \"time\": \"2022-02-09T13:33:34+00:00\"\n        },\n        {\n            \"name\": \"firebase/php-jwt\",\n            \"version\": \"v6.10.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/firebase/php-jwt.git\",\n                \"reference\": \"30c19ed0f3264cb660ea496895cfb6ef7ee3653b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/firebase/php-jwt/zipball/30c19ed0f3264cb660ea496895cfb6ef7ee3653b\",\n                \"reference\": \"30c19ed0f3264cb660ea496895cfb6ef7ee3653b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^8.0\"\n            },\n            \"require-dev\": {\n                \"guzzlehttp/guzzle\": \"^7.4\",\n                \"phpspec/prophecy-phpunit\": \"^2.0\",\n                \"phpunit/phpunit\": \"^9.5\",\n                \"psr/cache\": \"^2.0||^3.0\",\n                \"psr/http-client\": \"^1.0\",\n                \"psr/http-factory\": \"^1.0\"\n            },\n            \"suggest\": {\n                \"ext-sodium\": \"Support EdDSA (Ed25519) signatures\",\n                \"paragonie/sodium_compat\": \"Support EdDSA (Ed25519) signatures when libsodium is not present\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Firebase\\\\JWT\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Neuman Vong\",\n                    \"email\": \"neuman+pear@twilio.com\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Anant Narayanan\",\n                    \"email\": \"anant@php.net\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"A simple library to encode and decode JSON Web Tokens (JWT) in PHP. Should conform to the current spec.\",\n            \"homepage\": \"https://github.com/firebase/php-jwt\",\n            \"keywords\": [\n                \"jwt\",\n                \"php\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/firebase/php-jwt/issues\",\n                \"source\": \"https://github.com/firebase/php-jwt/tree/v6.10.2\"\n            },\n            \"time\": \"2024-11-24T11:22:49+00:00\"\n        },\n        {\n            \"name\": \"fruitcake/laravel-cors\",\n            \"version\": \"v2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/fruitcake/laravel-cors.git\",\n                \"reference\": \"783a74f5e3431d7b9805be8afb60fd0a8f743534\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/fruitcake/laravel-cors/zipball/783a74f5e3431d7b9805be8afb60fd0a8f743534\",\n                \"reference\": \"783a74f5e3431d7b9805be8afb60fd0a8f743534\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"asm89/stack-cors\": \"^2.0.1\",\n                \"illuminate/contracts\": \"^6|^7|^8|^9\",\n                \"illuminate/support\": \"^6|^7|^8|^9\",\n                \"php\": \">=7.2\"\n            },\n            \"require-dev\": {\n                \"laravel/framework\": \"^6|^7.24|^8\",\n                \"orchestra/testbench-dusk\": \"^4|^5|^6|^7\",\n                \"phpunit/phpunit\": \"^6|^7|^8|^9\",\n                \"squizlabs/php_codesniffer\": \"^3.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.1-dev\"\n                },\n                \"laravel\": {\n                    \"providers\": [\n                        \"Fruitcake\\\\Cors\\\\CorsServiceProvider\"\n                    ]\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Fruitcake\\\\Cors\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fruitcake\",\n                    \"homepage\": \"https://fruitcake.nl\"\n                },\n                {\n                    \"name\": \"Barry vd. Heuvel\",\n                    \"email\": \"barryvdh@gmail.com\"\n                }\n            ],\n            \"description\": \"Adds CORS (Cross-Origin Resource Sharing) headers support in your Laravel application\",\n            \"keywords\": [\n                \"api\",\n                \"cors\",\n                \"crossdomain\",\n                \"laravel\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/fruitcake/laravel-cors/issues\",\n                \"source\": \"https://github.com/fruitcake/laravel-cors/tree/v2.2.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://fruitcake.nl\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/barryvdh\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2022-02-23T14:25:13+00:00\"\n        },\n        {\n            \"name\": \"graham-campbell/result-type\",\n            \"version\": \"v1.1.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/GrahamCampbell/Result-Type.git\",\n                \"reference\": \"3ba905c11371512af9d9bdd27d99b782216b6945\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/GrahamCampbell/Result-Type/zipball/3ba905c11371512af9d9bdd27d99b782216b6945\",\n                \"reference\": \"3ba905c11371512af9d9bdd27d99b782216b6945\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"phpoption/phpoption\": \"^1.9.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5.39 || ^9.6.20 || ^10.5.28\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GrahamCampbell\\\\ResultType\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                }\n            ],\n            \"description\": \"An Implementation Of The Result Type\",\n            \"keywords\": [\n                \"Graham Campbell\",\n                \"GrahamCampbell\",\n                \"Result Type\",\n                \"Result-Type\",\n                \"result\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/GrahamCampbell/Result-Type/issues\",\n                \"source\": \"https://github.com/GrahamCampbell/Result-Type/tree/v1.1.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/graham-campbell/result-type\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-07-20T21:45:45+00:00\"\n        },\n        {\n            \"name\": \"guanguans/notify\",\n            \"version\": \"1.28.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guanguans/notify.git\",\n                \"reference\": \"e2dac64cf99ba3e41abe7aefaf59ef5cd3acf161\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guanguans/notify/zipball/e2dac64cf99ba3e41abe7aefaf59ef5cd3acf161\",\n                \"reference\": \"e2dac64cf99ba3e41abe7aefaf59ef5cd3acf161\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"overtrue/http\": \"^1.2\",\n                \"php\": \">=7.2.5\",\n                \"psr/log\": \"^1.1 || ^2.0 || ^3.0\",\n                \"symfony/options-resolver\": \"^5.4 || ^6.0 || ^7.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8\",\n                \"brainmaestro/composer-git-hooks\": \"^2.8 || ^3.0\",\n                \"dms/phpunit-arraysubset-asserts\": \"^0.5\",\n                \"ergebnis/composer-normalize\": \"^2.19\",\n                \"friendsofphp/php-cs-fixer\": \"^3.4\",\n                \"mockery/mockery\": \"^1.3\",\n                \"php-mock/php-mock-phpunit\": \"^2.9\",\n                \"phpstan/extension-installer\": \"^1.3\",\n                \"phpstan/phpstan\": \"^1.10\",\n                \"phpstan/phpstan-deprecation-rules\": \"^1.1\",\n                \"phpunit/phpunit\": \"^8.5 || ^9.0\",\n                \"rector/rector\": \"^0.19\",\n                \"symfony/mailer\": \"^5.4 || ^6.0 || ^7.0\",\n                \"symfony/var-dumper\": \"^5.4 || ^6.0 || ^7.0\",\n                \"textalk/websocket\": \"^1.5\",\n                \"vimeo/psalm\": \"^4.30 || ^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/mailer\": \"Required to use the email.\",\n                \"textalk/websocket\": \"Required to use the QQ channel bot.\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"hooks\": {\n                    \"post-merge\": [\n                        \"composer checks\"\n                    ],\n                    \"pre-commit\": [\n                        \"composer checks\"\n                    ]\n                },\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": true,\n                    \"target-directory\": \"vendor-bin\"\n                },\n                \"branch-alias\": {\n                    \"dev-main\": \"1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/Support/helpers.php\"\n                ],\n                \"psr-4\": {\n                    \"Guanguans\\\\Notify\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"guanguans\",\n                    \"email\": \"ityaozm@gmail.com\",\n                    \"homepage\": \"https://www.guanguans.cn\",\n                    \"role\": \"developer\"\n                }\n            ],\n            \"description\": \"Push notification sdk(Bark、Chanify、DingTalk、Discord、Email、FeiShu、Gitter、Google Chat、iGot、Logger、Mattermost、Microsoft Teams、Now Push、Ntfy、PushBack、Push、PushDeer、Pushover、PushPlus、QQ Channel Bot、Rocket Chat、ServerChan、Showdoc Push、Slack、Telegram、Webhook、WeWork、XiZhi、YiFengChuanHua、Zulip).com\",\n            \"homepage\": \"https://github.com/guanguans/notify\",\n            \"keywords\": [\n                \"Bark\",\n                \"Feishu\",\n                \"Mattermost\",\n                \"Ntfy\",\n                \"PushDeer\",\n                \"QQ Bot\",\n                \"QQ 机器人\",\n                \"QQ 频道\",\n                \"QQ 频道机器人\",\n                \"Server酱\",\n                \"chanify\",\n                \"dingtalk\",\n                \"discord\",\n                \"email\",\n                \"gitter\",\n                \"googleChat\",\n                \"iGot\",\n                \"logger\",\n                \"microsoft teams\",\n                \"notification\",\n                \"notifier\",\n                \"notify\",\n                \"now push\",\n                \"push\",\n                \"pushBack\",\n                \"pushPlus\",\n                \"pushover\",\n                \"qq\",\n                \"rocketchat\",\n                \"sdk\",\n                \"serverChan\",\n                \"showdoc push\",\n                \"slack\",\n                \"telegram\",\n                \"webhook\",\n                \"wework\",\n                \"xiZhi\",\n                \"zulip\",\n                \"一封传话\",\n                \"企业微信\",\n                \"企业微信群机器人\",\n                \"微信\",\n                \"息知\",\n                \"机器人\",\n                \"邮件\",\n                \"钉钉\",\n                \"钉钉群\",\n                \"钉钉群机器人\",\n                \"飞书\",\n                \"飞书群机器人\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guanguans/notify/issues\",\n                \"source\": \"https://github.com/guanguans/notify\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.guanguans.cn/images/wechat.jpeg\",\n                    \"type\": \"wechat\"\n                }\n            ],\n            \"time\": \"2024-01-17T06:56:35+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/guzzle\",\n            \"version\": \"7.9.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/guzzle.git\",\n                \"reference\": \"d281ed313b989f213357e3be1a179f02196ac99b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/guzzle/zipball/d281ed313b989f213357e3be1a179f02196ac99b\",\n                \"reference\": \"d281ed313b989f213357e3be1a179f02196ac99b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"guzzlehttp/promises\": \"^1.5.3 || ^2.0.3\",\n                \"guzzlehttp/psr7\": \"^2.7.0\",\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"psr/http-client\": \"^1.0\",\n                \"symfony/deprecation-contracts\": \"^2.2 || ^3.0\"\n            },\n            \"provide\": {\n                \"psr/http-client-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"ext-curl\": \"*\",\n                \"guzzle/client-integration-tests\": \"3.0.2\",\n                \"php-http/message-factory\": \"^1.1\",\n                \"phpunit/phpunit\": \"^8.5.39 || ^9.6.20\",\n                \"psr/log\": \"^1.1 || ^2.0 || ^3.0\"\n            },\n            \"suggest\": {\n                \"ext-curl\": \"Required for CURL handler support\",\n                \"ext-intl\": \"Required for Internationalized Domain Name (IDN) support\",\n                \"psr/log\": \"Required for using the Log middleware\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/functions_include.php\"\n                ],\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"Jeremy Lindblom\",\n                    \"email\": \"jeremeamia@gmail.com\",\n                    \"homepage\": \"https://github.com/jeremeamia\"\n                },\n                {\n                    \"name\": \"George Mponos\",\n                    \"email\": \"gmponos@gmail.com\",\n                    \"homepage\": \"https://github.com/gmponos\"\n                },\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\",\n                    \"homepage\": \"https://github.com/Nyholm\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://github.com/sagikazarmark\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"email\": \"webmaster@tubo-world.de\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                }\n            ],\n            \"description\": \"Guzzle is a PHP HTTP client library\",\n            \"keywords\": [\n                \"client\",\n                \"curl\",\n                \"framework\",\n                \"http\",\n                \"http client\",\n                \"psr-18\",\n                \"psr-7\",\n                \"rest\",\n                \"web service\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guzzle/guzzle/issues\",\n                \"source\": \"https://github.com/guzzle/guzzle/tree/7.9.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/guzzlehttp/guzzle\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-07-24T11:22:20+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/promises\",\n            \"version\": \"2.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/promises.git\",\n                \"reference\": \"f9c436286ab2892c7db7be8c8da4ef61ccf7b455\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/promises/zipball/f9c436286ab2892c7db7be8c8da4ef61ccf7b455\",\n                \"reference\": \"f9c436286ab2892c7db7be8c8da4ef61ccf7b455\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2.5 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"phpunit/phpunit\": \"^8.5.39 || ^9.6.20\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\Promise\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\",\n                    \"homepage\": \"https://github.com/Nyholm\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"email\": \"webmaster@tubo-world.de\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                }\n            ],\n            \"description\": \"Guzzle promises library\",\n            \"keywords\": [\n                \"promise\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guzzle/promises/issues\",\n                \"source\": \"https://github.com/guzzle/promises/tree/2.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/guzzlehttp/promises\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-10-17T10:06:22+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/psr7\",\n            \"version\": \"2.7.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/psr7.git\",\n                \"reference\": \"a70f5c95fb43bc83f07c9c948baa0dc1829bf201\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/psr7/zipball/a70f5c95fb43bc83f07c9c948baa0dc1829bf201\",\n                \"reference\": \"a70f5c95fb43bc83f07c9c948baa0dc1829bf201\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"psr/http-factory\": \"^1.0\",\n                \"psr/http-message\": \"^1.1 || ^2.0\",\n                \"ralouphie/getallheaders\": \"^3.0\"\n            },\n            \"provide\": {\n                \"psr/http-factory-implementation\": \"1.0\",\n                \"psr/http-message-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"http-interop/http-factory-tests\": \"0.9.0\",\n                \"phpunit/phpunit\": \"^8.5.39 || ^9.6.20\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-httphandlerrunner\": \"Emit PSR-7 responses\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\Psr7\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"George Mponos\",\n                    \"email\": \"gmponos@gmail.com\",\n                    \"homepage\": \"https://github.com/gmponos\"\n                },\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\",\n                    \"homepage\": \"https://github.com/Nyholm\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://github.com/sagikazarmark\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"email\": \"webmaster@tubo-world.de\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://sagikazarmark.hu\"\n                }\n            ],\n            \"description\": \"PSR-7 message implementation that also provides common utility methods\",\n            \"keywords\": [\n                \"http\",\n                \"message\",\n                \"psr-7\",\n                \"request\",\n                \"response\",\n                \"stream\",\n                \"uri\",\n                \"url\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guzzle/psr7/issues\",\n                \"source\": \"https://github.com/guzzle/psr7/tree/2.7.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/guzzlehttp/psr7\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-07-18T11:15:46+00:00\"\n        },\n        {\n            \"name\": \"hedeqiang/umeng\",\n            \"version\": \"v2.1.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/hedeqiang/UMeng-Push.git\",\n                \"reference\": \"f7556dd390e94d908fae715ed2978c7265f5f957\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/hedeqiang/UMeng-Push/zipball/f7556dd390e94d908fae715ed2978c7265f5f957\",\n                \"reference\": \"f7556dd390e94d908fae715ed2978c7265f5f957\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"guzzlehttp/guzzle\": \"^6.3|^7.0\",\n                \"php\": \">=7.0\"\n            },\n            \"require-dev\": {\n                \"friendsofphp/php-cs-fixer\": \"^2.19|^3.8\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"hyperf\": {\n                    \"config\": \"Hedeqiang\\\\UMeng\\\\ConfigProvider\"\n                },\n                \"laravel\": {\n                    \"providers\": [\n                        \"Hedeqiang\\\\UMeng\\\\PushServiceProvider\"\n                    ]\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Hedeqiang\\\\UMeng\\\\\": \"./src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"hedeqiang\",\n                    \"email\": \"laravel_code@163.com\"\n                },\n                {\n                    \"name\": \"housemecn\",\n                    \"email\": \"houseme@outlook.com\"\n                }\n            ],\n            \"description\": \"友盟推送\",\n            \"keywords\": [\n                \"U-Push\",\n                \"php\",\n                \"sdk\",\n                \"umeng\",\n                \"友盟\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/hedeqiang/UMeng-Push/issues\",\n                \"source\": \"https://github.com/hedeqiang/UMeng-Push/tree/v2.1.6\"\n            },\n            \"time\": \"2022-09-28T08:52:46+00:00\"\n        },\n        {\n            \"name\": \"intervention/image\",\n            \"version\": \"2.7.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Intervention/image.git\",\n                \"reference\": \"04be355f8d6734c826045d02a1079ad658322dad\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Intervention/image/zipball/04be355f8d6734c826045d02a1079ad658322dad\",\n                \"reference\": \"04be355f8d6734c826045d02a1079ad658322dad\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-fileinfo\": \"*\",\n                \"guzzlehttp/psr7\": \"~1.1 || ^2.0\",\n                \"php\": \">=5.4.0\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"~0.9.2\",\n                \"phpunit/phpunit\": \"^4.8 || ^5.7 || ^7.5.15\"\n            },\n            \"suggest\": {\n                \"ext-gd\": \"to use GD library based image processing.\",\n                \"ext-imagick\": \"to use Imagick based image processing.\",\n                \"intervention/imagecache\": \"Caching extension for the Intervention Image library\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laravel\": {\n                    \"aliases\": {\n                        \"Image\": \"Intervention\\\\Image\\\\Facades\\\\Image\"\n                    },\n                    \"providers\": [\n                        \"Intervention\\\\Image\\\\ImageServiceProvider\"\n                    ]\n                },\n                \"branch-alias\": {\n                    \"dev-master\": \"2.4-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Intervention\\\\Image\\\\\": \"src/Intervention/Image\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Oliver Vogel\",\n                    \"email\": \"oliver@intervention.io\",\n                    \"homepage\": \"https://intervention.io/\"\n                }\n            ],\n            \"description\": \"Image handling and manipulation library with support for Laravel integration\",\n            \"homepage\": \"http://image.intervention.io/\",\n            \"keywords\": [\n                \"gd\",\n                \"image\",\n                \"imagick\",\n                \"laravel\",\n                \"thumbnail\",\n                \"watermark\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/Intervention/image/issues\",\n                \"source\": \"https://github.com/Intervention/image/tree/2.7.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://paypal.me/interventionio\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/Intervention\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2022-05-21T17:30:32+00:00\"\n        },\n        {\n            \"name\": \"laravel/framework\",\n            \"version\": \"v8.83.29\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laravel/framework.git\",\n                \"reference\": \"d841a226a50c715431952a10260ba4fac9e91cc4\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laravel/framework/zipball/d841a226a50c715431952a10260ba4fac9e91cc4\",\n                \"reference\": \"d841a226a50c715431952a10260ba4fac9e91cc4\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/inflector\": \"^1.4|^2.0\",\n                \"dragonmantank/cron-expression\": \"^3.0.2\",\n                \"egulias/email-validator\": \"^2.1.10\",\n                \"ext-json\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"ext-openssl\": \"*\",\n                \"laravel/serializable-closure\": \"^1.0\",\n                \"league/commonmark\": \"^1.3|^2.0.2\",\n                \"league/flysystem\": \"^1.1\",\n                \"monolog/monolog\": \"^2.0\",\n                \"nesbot/carbon\": \"^2.53.1\",\n                \"opis/closure\": \"^3.6\",\n                \"php\": \"^7.3|^8.0\",\n                \"psr/container\": \"^1.0\",\n                \"psr/log\": \"^1.0|^2.0\",\n                \"psr/simple-cache\": \"^1.0\",\n                \"ramsey/uuid\": \"^4.2.2\",\n                \"swiftmailer/swiftmailer\": \"^6.3\",\n                \"symfony/console\": \"^5.4\",\n                \"symfony/error-handler\": \"^5.4\",\n                \"symfony/finder\": \"^5.4\",\n                \"symfony/http-foundation\": \"^5.4\",\n                \"symfony/http-kernel\": \"^5.4\",\n                \"symfony/mime\": \"^5.4\",\n                \"symfony/process\": \"^5.4\",\n                \"symfony/routing\": \"^5.4\",\n                \"symfony/var-dumper\": \"^5.4\",\n                \"tijsverkoyen/css-to-inline-styles\": \"^2.2.2\",\n                \"vlucas/phpdotenv\": \"^5.4.1\",\n                \"voku/portable-ascii\": \"^1.6.1\"\n            },\n            \"conflict\": {\n                \"tightenco/collect\": \"<5.5.33\"\n            },\n            \"provide\": {\n                \"psr/container-implementation\": \"1.0\",\n                \"psr/simple-cache-implementation\": \"1.0\"\n            },\n            \"replace\": {\n                \"illuminate/auth\": \"self.version\",\n                \"illuminate/broadcasting\": \"self.version\",\n                \"illuminate/bus\": \"self.version\",\n                \"illuminate/cache\": \"self.version\",\n                \"illuminate/collections\": \"self.version\",\n                \"illuminate/config\": \"self.version\",\n                \"illuminate/console\": \"self.version\",\n                \"illuminate/container\": \"self.version\",\n                \"illuminate/contracts\": \"self.version\",\n                \"illuminate/cookie\": \"self.version\",\n                \"illuminate/database\": \"self.version\",\n                \"illuminate/encryption\": \"self.version\",\n                \"illuminate/events\": \"self.version\",\n                \"illuminate/filesystem\": \"self.version\",\n                \"illuminate/hashing\": \"self.version\",\n                \"illuminate/http\": \"self.version\",\n                \"illuminate/log\": \"self.version\",\n                \"illuminate/macroable\": \"self.version\",\n                \"illuminate/mail\": \"self.version\",\n                \"illuminate/notifications\": \"self.version\",\n                \"illuminate/pagination\": \"self.version\",\n                \"illuminate/pipeline\": \"self.version\",\n                \"illuminate/queue\": \"self.version\",\n                \"illuminate/redis\": \"self.version\",\n                \"illuminate/routing\": \"self.version\",\n                \"illuminate/session\": \"self.version\",\n                \"illuminate/support\": \"self.version\",\n                \"illuminate/testing\": \"self.version\",\n                \"illuminate/translation\": \"self.version\",\n                \"illuminate/validation\": \"self.version\",\n                \"illuminate/view\": \"self.version\"\n            },\n            \"require-dev\": {\n                \"aws/aws-sdk-php\": \"^3.198.1\",\n                \"doctrine/dbal\": \"^2.13.3|^3.1.4\",\n                \"filp/whoops\": \"^2.14.3\",\n                \"guzzlehttp/guzzle\": \"^6.5.5|^7.0.1\",\n                \"league/flysystem-cached-adapter\": \"^1.0\",\n                \"mockery/mockery\": \"^1.4.4\",\n                \"orchestra/testbench-core\": \"^6.27\",\n                \"pda/pheanstalk\": \"^4.0\",\n                \"phpunit/phpunit\": \"^8.5.19|^9.5.8\",\n                \"predis/predis\": \"^1.1.9\",\n                \"symfony/cache\": \"^5.4\"\n            },\n            \"suggest\": {\n                \"ably/ably-php\": \"Required to use the Ably broadcast driver (^1.0).\",\n                \"aws/aws-sdk-php\": \"Required to use the SQS queue driver, DynamoDb failed job storage and SES mail driver (^3.198.1).\",\n                \"brianium/paratest\": \"Required to run tests in parallel (^6.0).\",\n                \"doctrine/dbal\": \"Required to rename columns and drop SQLite columns (^2.13.3|^3.1.4).\",\n                \"ext-bcmath\": \"Required to use the multiple_of validation rule.\",\n                \"ext-ftp\": \"Required to use the Flysystem FTP driver.\",\n                \"ext-gd\": \"Required to use Illuminate\\\\Http\\\\Testing\\\\FileFactory::image().\",\n                \"ext-memcached\": \"Required to use the memcache cache driver.\",\n                \"ext-pcntl\": \"Required to use all features of the queue worker.\",\n                \"ext-posix\": \"Required to use all features of the queue worker.\",\n                \"ext-redis\": \"Required to use the Redis cache and queue drivers (^4.0|^5.0).\",\n                \"fakerphp/faker\": \"Required to use the eloquent factory builder (^1.9.1).\",\n                \"filp/whoops\": \"Required for friendly error pages in development (^2.14.3).\",\n                \"guzzlehttp/guzzle\": \"Required to use the HTTP Client, Mailgun mail driver and the ping methods on schedules (^6.5.5|^7.0.1).\",\n                \"laravel/tinker\": \"Required to use the tinker console command (^2.0).\",\n                \"league/flysystem-aws-s3-v3\": \"Required to use the Flysystem S3 driver (^1.0).\",\n                \"league/flysystem-cached-adapter\": \"Required to use the Flysystem cache (^1.0).\",\n                \"league/flysystem-sftp\": \"Required to use the Flysystem SFTP driver (^1.0).\",\n                \"mockery/mockery\": \"Required to use mocking (^1.4.4).\",\n                \"nyholm/psr7\": \"Required to use PSR-7 bridging features (^1.2).\",\n                \"pda/pheanstalk\": \"Required to use the beanstalk queue driver (^4.0).\",\n                \"phpunit/phpunit\": \"Required to use assertions and run tests (^8.5.19|^9.5.8).\",\n                \"predis/predis\": \"Required to use the predis connector (^1.1.9).\",\n                \"psr/http-message\": \"Required to allow Storage::put to accept a StreamInterface (^1.0).\",\n                \"pusher/pusher-php-server\": \"Required to use the Pusher broadcast driver (^4.0|^5.0|^6.0|^7.0).\",\n                \"symfony/cache\": \"Required to PSR-6 cache bridge (^5.4).\",\n                \"symfony/filesystem\": \"Required to enable support for relative symbolic links (^5.4).\",\n                \"symfony/psr-http-message-bridge\": \"Required to use PSR-7 bridging features (^2.0).\",\n                \"wildbit/swiftmailer-postmark\": \"Required to use Postmark mail driver (^3.0).\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"8.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/Illuminate/Collections/helpers.php\",\n                    \"src/Illuminate/Events/functions.php\",\n                    \"src/Illuminate/Foundation/helpers.php\",\n                    \"src/Illuminate/Support/helpers.php\"\n                ],\n                \"psr-4\": {\n                    \"Illuminate\\\\\": \"src/Illuminate/\",\n                    \"Illuminate\\\\Support\\\\\": [\n                        \"src/Illuminate/Macroable/\",\n                        \"src/Illuminate/Collections/\"\n                    ]\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Taylor Otwell\",\n                    \"email\": \"taylor@laravel.com\"\n                }\n            ],\n            \"description\": \"The Laravel Framework.\",\n            \"homepage\": \"https://laravel.com\",\n            \"keywords\": [\n                \"framework\",\n                \"laravel\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/laravel/framework/issues\",\n                \"source\": \"https://github.com/laravel/framework\"\n            },\n            \"time\": \"2024-11-20T15:55:41+00:00\"\n        },\n        {\n            \"name\": \"laravel/serializable-closure\",\n            \"version\": \"v1.3.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laravel/serializable-closure.git\",\n                \"reference\": \"4f48ade902b94323ca3be7646db16209ec76be3d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laravel/serializable-closure/zipball/4f48ade902b94323ca3be7646db16209ec76be3d\",\n                \"reference\": \"4f48ade902b94323ca3be7646db16209ec76be3d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3|^8.0\"\n            },\n            \"require-dev\": {\n                \"illuminate/support\": \"^8.0|^9.0|^10.0|^11.0\",\n                \"nesbot/carbon\": \"^2.61|^3.0\",\n                \"pestphp/pest\": \"^1.21.3\",\n                \"phpstan/phpstan\": \"^1.8.2\",\n                \"symfony/var-dumper\": \"^5.4.11|^6.2.0|^7.0.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laravel\\\\SerializableClosure\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Taylor Otwell\",\n                    \"email\": \"taylor@laravel.com\"\n                },\n                {\n                    \"name\": \"Nuno Maduro\",\n                    \"email\": \"nuno@laravel.com\"\n                }\n            ],\n            \"description\": \"Laravel Serializable Closure provides an easy and secure way to serialize closures in PHP.\",\n            \"keywords\": [\n                \"closure\",\n                \"laravel\",\n                \"serializable\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/laravel/serializable-closure/issues\",\n                \"source\": \"https://github.com/laravel/serializable-closure\"\n            },\n            \"time\": \"2024-11-14T18:34:49+00:00\"\n        },\n        {\n            \"name\": \"laravel/tinker\",\n            \"version\": \"v2.10.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laravel/tinker.git\",\n                \"reference\": \"ba4d51eb56de7711b3a37d63aa0643e99a339ae5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laravel/tinker/zipball/ba4d51eb56de7711b3a37d63aa0643e99a339ae5\",\n                \"reference\": \"ba4d51eb56de7711b3a37d63aa0643e99a339ae5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"illuminate/console\": \"^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n                \"illuminate/contracts\": \"^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n                \"illuminate/support\": \"^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n                \"php\": \"^7.2.5|^8.0\",\n                \"psy/psysh\": \"^0.11.1|^0.12.0\",\n                \"symfony/var-dumper\": \"^4.3.4|^5.0|^6.0|^7.0\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"~1.3.3|^1.4.2\",\n                \"phpstan/phpstan\": \"^1.10\",\n                \"phpunit/phpunit\": \"^8.5.8|^9.3.3\"\n            },\n            \"suggest\": {\n                \"illuminate/database\": \"The Illuminate Database package (^6.0|^7.0|^8.0|^9.0|^10.0|^11.0).\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laravel\": {\n                    \"providers\": [\n                        \"Laravel\\\\Tinker\\\\TinkerServiceProvider\"\n                    ]\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laravel\\\\Tinker\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Taylor Otwell\",\n                    \"email\": \"taylor@laravel.com\"\n                }\n            ],\n            \"description\": \"Powerful REPL for the Laravel framework.\",\n            \"keywords\": [\n                \"REPL\",\n                \"Tinker\",\n                \"laravel\",\n                \"psysh\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/laravel/tinker/issues\",\n                \"source\": \"https://github.com/laravel/tinker/tree/v2.10.0\"\n            },\n            \"time\": \"2024-09-23T13:32:56+00:00\"\n        },\n        {\n            \"name\": \"laravolt/avatar\",\n            \"version\": \"5.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laravolt/avatar.git\",\n                \"reference\": \"e01beadcd0a98a08cce10cb71e7acaf4e52062cd\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laravolt/avatar/zipball/e01beadcd0a98a08cce10cb71e7acaf4e52062cd\",\n                \"reference\": \"e01beadcd0a98a08cce10cb71e7acaf4e52062cd\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"illuminate/cache\": \"^8.0|^9.0|^10.0|^11.0\",\n                \"illuminate/support\": \"^8.0|^9.0|^10.0|^11.0\",\n                \"intervention/image\": \"^2.7\",\n                \"php\": \">=8.0\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"~1.3\",\n                \"php-coveralls/php-coveralls\": \"^2.1\",\n                \"phpunit/phpunit\": \"~9.0\",\n                \"roave/security-advisories\": \"dev-latest\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.0-dev\"\n                },\n                \"laravel\": {\n                    \"providers\": [\n                        \"Laravolt\\\\Avatar\\\\ServiceProvider\"\n                    ],\n                    \"aliases\": {\n                        \"Avatar\": \"Laravolt\\\\Avatar\\\\Facade\"\n                    }\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laravolt\\\\Avatar\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Bayu Hendra Winata\",\n                    \"email\": \"uyab.exe@gmail.com\",\n                    \"homepage\": \"https://laravolt.dev\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Turn name, email, and any other string into initial-based avatar or gravatar.\",\n            \"homepage\": \"https://github.com/laravolt/avatar\",\n            \"keywords\": [\n                \"avatar\",\n                \"gravatar\",\n                \"laravel\",\n                \"laravolt\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/laravolt/avatar/issues\",\n                \"source\": \"https://github.com/laravolt/avatar/tree/5.1.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://paypal.me/bayuhendra\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://ko-fi.com/bayuhendra\",\n                    \"type\": \"ko_fi\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/uyab\",\n                    \"type\": \"patreon\"\n                }\n            ],\n            \"time\": \"2024-04-05T02:43:25+00:00\"\n        },\n        {\n            \"name\": \"league/commonmark\",\n            \"version\": \"2.6.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/commonmark.git\",\n                \"reference\": \"d150f911e0079e90ae3c106734c93137c184f932\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/commonmark/zipball/d150f911e0079e90ae3c106734c93137c184f932\",\n                \"reference\": \"d150f911e0079e90ae3c106734c93137c184f932\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-mbstring\": \"*\",\n                \"league/config\": \"^1.1.1\",\n                \"php\": \"^7.4 || ^8.0\",\n                \"psr/event-dispatcher\": \"^1.0\",\n                \"symfony/deprecation-contracts\": \"^2.1 || ^3.0\",\n                \"symfony/polyfill-php80\": \"^1.16\"\n            },\n            \"require-dev\": {\n                \"cebe/markdown\": \"^1.0\",\n                \"commonmark/cmark\": \"0.31.1\",\n                \"commonmark/commonmark.js\": \"0.31.1\",\n                \"composer/package-versions-deprecated\": \"^1.8\",\n                \"embed/embed\": \"^4.4\",\n                \"erusev/parsedown\": \"^1.0\",\n                \"ext-json\": \"*\",\n                \"github/gfm\": \"0.29.0\",\n                \"michelf/php-markdown\": \"^1.4 || ^2.0\",\n                \"nyholm/psr7\": \"^1.5\",\n                \"phpstan/phpstan\": \"^1.8.2\",\n                \"phpunit/phpunit\": \"^9.5.21 || ^10.5.9 || ^11.0.0\",\n                \"scrutinizer/ocular\": \"^1.8.1\",\n                \"symfony/finder\": \"^5.3 | ^6.0 | ^7.0\",\n                \"symfony/process\": \"^5.4 | ^6.0 | ^7.0\",\n                \"symfony/yaml\": \"^2.3 | ^3.0 | ^4.0 | ^5.0 | ^6.0 | ^7.0\",\n                \"unleashedtech/php-coding-standard\": \"^3.1.1\",\n                \"vimeo/psalm\": \"^4.24.0 || ^5.0.0\"\n            },\n            \"suggest\": {\n                \"symfony/yaml\": \"v2.3+ required if using the Front Matter extension\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"2.7-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\CommonMark\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Colin O'Dell\",\n                    \"email\": \"colinodell@gmail.com\",\n                    \"homepage\": \"https://www.colinodell.com\",\n                    \"role\": \"Lead Developer\"\n                }\n            ],\n            \"description\": \"Highly-extensible PHP Markdown parser which fully supports the CommonMark spec and GitHub-Flavored Markdown (GFM)\",\n            \"homepage\": \"https://commonmark.thephpleague.com\",\n            \"keywords\": [\n                \"commonmark\",\n                \"flavored\",\n                \"gfm\",\n                \"github\",\n                \"github-flavored\",\n                \"markdown\",\n                \"md\",\n                \"parser\"\n            ],\n            \"support\": {\n                \"docs\": \"https://commonmark.thephpleague.com/\",\n                \"forum\": \"https://github.com/thephpleague/commonmark/discussions\",\n                \"issues\": \"https://github.com/thephpleague/commonmark/issues\",\n                \"rss\": \"https://github.com/thephpleague/commonmark/releases.atom\",\n                \"source\": \"https://github.com/thephpleague/commonmark\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.colinodell.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.paypal.me/colinpodell/10.00\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/colinodell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/league/commonmark\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-12-07T15:34:16+00:00\"\n        },\n        {\n            \"name\": \"league/config\",\n            \"version\": \"v1.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/config.git\",\n                \"reference\": \"754b3604fb2984c71f4af4a9cbe7b57f346ec1f3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/config/zipball/754b3604fb2984c71f4af4a9cbe7b57f346ec1f3\",\n                \"reference\": \"754b3604fb2984c71f4af4a9cbe7b57f346ec1f3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"dflydev/dot-access-data\": \"^3.0.1\",\n                \"nette/schema\": \"^1.2\",\n                \"php\": \"^7.4 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"phpstan/phpstan\": \"^1.8.2\",\n                \"phpunit/phpunit\": \"^9.5.5\",\n                \"scrutinizer/ocular\": \"^1.8.1\",\n                \"unleashedtech/php-coding-standard\": \"^3.1\",\n                \"vimeo/psalm\": \"^4.7.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\Config\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Colin O'Dell\",\n                    \"email\": \"colinodell@gmail.com\",\n                    \"homepage\": \"https://www.colinodell.com\",\n                    \"role\": \"Lead Developer\"\n                }\n            ],\n            \"description\": \"Define configuration arrays with strict schemas and access values with dot notation\",\n            \"homepage\": \"https://config.thephpleague.com\",\n            \"keywords\": [\n                \"array\",\n                \"config\",\n                \"configuration\",\n                \"dot\",\n                \"dot-access\",\n                \"nested\",\n                \"schema\"\n            ],\n            \"support\": {\n                \"docs\": \"https://config.thephpleague.com/\",\n                \"issues\": \"https://github.com/thephpleague/config/issues\",\n                \"rss\": \"https://github.com/thephpleague/config/releases.atom\",\n                \"source\": \"https://github.com/thephpleague/config\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.colinodell.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.paypal.me/colinpodell/10.00\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/colinodell\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2022-12-11T20:36:23+00:00\"\n        },\n        {\n            \"name\": \"league/flysystem\",\n            \"version\": \"1.1.10\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/flysystem.git\",\n                \"reference\": \"3239285c825c152bcc315fe0e87d6b55f5972ed1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/flysystem/zipball/3239285c825c152bcc315fe0e87d6b55f5972ed1\",\n                \"reference\": \"3239285c825c152bcc315fe0e87d6b55f5972ed1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-fileinfo\": \"*\",\n                \"league/mime-type-detection\": \"^1.3\",\n                \"php\": \"^7.2.5 || ^8.0\"\n            },\n            \"conflict\": {\n                \"league/flysystem-sftp\": \"<1.0.6\"\n            },\n            \"require-dev\": {\n                \"phpspec/prophecy\": \"^1.11.1\",\n                \"phpunit/phpunit\": \"^8.5.8\"\n            },\n            \"suggest\": {\n                \"ext-ftp\": \"Allows you to use FTP server storage\",\n                \"ext-openssl\": \"Allows you to use FTPS server storage\",\n                \"league/flysystem-aws-s3-v2\": \"Allows you to use S3 storage with AWS SDK v2\",\n                \"league/flysystem-aws-s3-v3\": \"Allows you to use S3 storage with AWS SDK v3\",\n                \"league/flysystem-azure\": \"Allows you to use Windows Azure Blob storage\",\n                \"league/flysystem-cached-adapter\": \"Flysystem adapter decorator for metadata caching\",\n                \"league/flysystem-eventable-filesystem\": \"Allows you to use EventableFilesystem\",\n                \"league/flysystem-rackspace\": \"Allows you to use Rackspace Cloud Files\",\n                \"league/flysystem-sftp\": \"Allows you to use SFTP server storage via phpseclib\",\n                \"league/flysystem-webdav\": \"Allows you to use WebDAV storage\",\n                \"league/flysystem-ziparchive\": \"Allows you to use ZipArchive adapter\",\n                \"spatie/flysystem-dropbox\": \"Allows you to use Dropbox storage\",\n                \"srmklive/flysystem-dropbox-v2\": \"Allows you to use Dropbox storage for PHP 5 applications\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\Flysystem\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Frank de Jonge\",\n                    \"email\": \"info@frenky.net\"\n                }\n            ],\n            \"description\": \"Filesystem abstraction: Many filesystems, one API.\",\n            \"keywords\": [\n                \"Cloud Files\",\n                \"WebDAV\",\n                \"abstraction\",\n                \"aws\",\n                \"cloud\",\n                \"copy.com\",\n                \"dropbox\",\n                \"file systems\",\n                \"files\",\n                \"filesystem\",\n                \"filesystems\",\n                \"ftp\",\n                \"rackspace\",\n                \"remote\",\n                \"s3\",\n                \"sftp\",\n                \"storage\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/thephpleague/flysystem/issues\",\n                \"source\": \"https://github.com/thephpleague/flysystem/tree/1.1.10\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://offset.earth/frankdejonge\",\n                    \"type\": \"other\"\n                }\n            ],\n            \"time\": \"2022-10-04T09:16:37+00:00\"\n        },\n        {\n            \"name\": \"league/html-to-markdown\",\n            \"version\": \"5.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/html-to-markdown.git\",\n                \"reference\": \"0b4066eede55c48f38bcee4fb8f0aa85654390fd\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/html-to-markdown/zipball/0b4066eede55c48f38bcee4fb8f0aa85654390fd\",\n                \"reference\": \"0b4066eede55c48f38bcee4fb8f0aa85654390fd\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-xml\": \"*\",\n                \"php\": \"^7.2.5 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"mikehaertl/php-shellcommand\": \"^1.1.0\",\n                \"phpstan/phpstan\": \"^1.8.8\",\n                \"phpunit/phpunit\": \"^8.5 || ^9.2\",\n                \"scrutinizer/ocular\": \"^1.6\",\n                \"unleashedtech/php-coding-standard\": \"^2.7 || ^3.0\",\n                \"vimeo/psalm\": \"^4.22 || ^5.0\"\n            },\n            \"bin\": [\n                \"bin/html-to-markdown\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\HTMLToMarkdown\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Colin O'Dell\",\n                    \"email\": \"colinodell@gmail.com\",\n                    \"homepage\": \"https://www.colinodell.com\",\n                    \"role\": \"Lead Developer\"\n                },\n                {\n                    \"name\": \"Nick Cernis\",\n                    \"email\": \"nick@cern.is\",\n                    \"homepage\": \"http://modernnerd.net\",\n                    \"role\": \"Original Author\"\n                }\n            ],\n            \"description\": \"An HTML-to-markdown conversion helper for PHP\",\n            \"homepage\": \"https://github.com/thephpleague/html-to-markdown\",\n            \"keywords\": [\n                \"html\",\n                \"markdown\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/thephpleague/html-to-markdown/issues\",\n                \"source\": \"https://github.com/thephpleague/html-to-markdown/tree/5.1.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.colinodell.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.paypal.me/colinpodell/10.00\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/colinodell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/league/html-to-markdown\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-07-12T21:21:09+00:00\"\n        },\n        {\n            \"name\": \"league/mime-type-detection\",\n            \"version\": \"1.16.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/mime-type-detection.git\",\n                \"reference\": \"2d6702ff215bf922936ccc1ad31007edc76451b9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/mime-type-detection/zipball/2d6702ff215bf922936ccc1ad31007edc76451b9\",\n                \"reference\": \"2d6702ff215bf922936ccc1ad31007edc76451b9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-fileinfo\": \"*\",\n                \"php\": \"^7.4 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"friendsofphp/php-cs-fixer\": \"^3.2\",\n                \"phpstan/phpstan\": \"^0.12.68\",\n                \"phpunit/phpunit\": \"^8.5.8 || ^9.3 || ^10.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\MimeTypeDetection\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Frank de Jonge\",\n                    \"email\": \"info@frankdejonge.nl\"\n                }\n            ],\n            \"description\": \"Mime-type detection for Flysystem\",\n            \"support\": {\n                \"issues\": \"https://github.com/thephpleague/mime-type-detection/issues\",\n                \"source\": \"https://github.com/thephpleague/mime-type-detection/tree/1.16.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/frankdejonge\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/league/flysystem\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-21T08:32:55+00:00\"\n        },\n        {\n            \"name\": \"maatwebsite/excel\",\n            \"version\": \"3.1.61\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/SpartnerNL/Laravel-Excel.git\",\n                \"reference\": \"62616317c5ec07e885c5d7f6b537f57a7239c2ff\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/SpartnerNL/Laravel-Excel/zipball/62616317c5ec07e885c5d7f6b537f57a7239c2ff\",\n                \"reference\": \"62616317c5ec07e885c5d7f6b537f57a7239c2ff\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"composer/semver\": \"^3.3\",\n                \"ext-json\": \"*\",\n                \"illuminate/support\": \"5.8.*||^6.0||^7.0||^8.0||^9.0||^10.0||^11.0\",\n                \"php\": \"^7.0||^8.0\",\n                \"phpoffice/phpspreadsheet\": \"^1.29.4\",\n                \"psr/simple-cache\": \"^1.0||^2.0||^3.0\"\n            },\n            \"require-dev\": {\n                \"laravel/scout\": \"^7.0||^8.0||^9.0||^10.0\",\n                \"orchestra/testbench\": \"^6.0||^7.0||^8.0||^9.0\",\n                \"predis/predis\": \"^1.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laravel\": {\n                    \"providers\": [\n                        \"Maatwebsite\\\\Excel\\\\ExcelServiceProvider\"\n                    ],\n                    \"aliases\": {\n                        \"Excel\": \"Maatwebsite\\\\Excel\\\\Facades\\\\Excel\"\n                    }\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Maatwebsite\\\\Excel\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Patrick Brouwers\",\n                    \"email\": \"patrick@spartner.nl\"\n                }\n            ],\n            \"description\": \"Supercharged Excel exports and imports in Laravel\",\n            \"keywords\": [\n                \"PHPExcel\",\n                \"batch\",\n                \"csv\",\n                \"excel\",\n                \"export\",\n                \"import\",\n                \"laravel\",\n                \"php\",\n                \"phpspreadsheet\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/SpartnerNL/Laravel-Excel/issues\",\n                \"source\": \"https://github.com/SpartnerNL/Laravel-Excel/tree/3.1.61\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://laravel-excel.com/commercial-support\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/patrickbrouwers\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-11-25T18:41:59+00:00\"\n        },\n        {\n            \"name\": \"madnest/madzipper\",\n            \"version\": \"v1.2.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/madnest/madzipper.git\",\n                \"reference\": \"cb3cc4c98d4f8434dc32f295876220311d4d4217\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/madnest/madzipper/zipball/cb3cc4c98d4f8434dc32f295876220311d4d4217\",\n                \"reference\": \"cb3cc4c98d4f8434dc32f295876220311d4d4217\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-zip\": \"*\",\n                \"illuminate/filesystem\": \"^8.0\",\n                \"illuminate/support\": \"^8.0\",\n                \"php\": \"^8.0\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"^1.4.4\",\n                \"nunomaduro/collision\": \"^5.0\",\n                \"orchestra/testbench\": \"^6.0\",\n                \"phpunit/phpunit\": \"^9.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laravel\": {\n                    \"aliases\": {\n                        \"Madzipper\": \"Madnest\\\\Madzipper\\\\Madzipper\"\n                    },\n                    \"providers\": [\n                        \"Madnest\\\\Madzipper\\\\MadzipperServiceProvider\"\n                    ]\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Madnest\\\\Madzipper\\\\\": \"src/Madnest/Madzipper\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jakub Theimer\",\n                    \"email\": \"theimer@madne.st\",\n                    \"homepage\": \"https://madne.st\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Wannabe successor of Chumper/Zipper package for Laravel\",\n            \"support\": {\n                \"issues\": \"https://github.com/madnest/madzipper/issues\",\n                \"source\": \"https://github.com/madnest/madzipper/tree/v1.2.2\"\n            },\n            \"time\": \"2024-04-05T15:43:20+00:00\"\n        },\n        {\n            \"name\": \"maennchen/zipstream-php\",\n            \"version\": \"2.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/maennchen/ZipStream-PHP.git\",\n                \"reference\": \"3fa72e4c71a43f9e9118752a5c90e476a8dc9eb3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/maennchen/ZipStream-PHP/zipball/3fa72e4c71a43f9e9118752a5c90e476a8dc9eb3\",\n                \"reference\": \"3fa72e4c71a43f9e9118752a5c90e476a8dc9eb3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-mbstring\": \"*\",\n                \"myclabs/php-enum\": \"^1.5\",\n                \"php\": \"^8.0\",\n                \"psr/http-message\": \"^1.0\"\n            },\n            \"require-dev\": {\n                \"ext-zip\": \"*\",\n                \"friendsofphp/php-cs-fixer\": \"^3.9\",\n                \"guzzlehttp/guzzle\": \"^6.5.3 || ^7.2.0\",\n                \"mikey179/vfsstream\": \"^1.6\",\n                \"php-coveralls/php-coveralls\": \"^2.4\",\n                \"phpunit/phpunit\": \"^8.5.8 || ^9.4.2\",\n                \"vimeo/psalm\": \"^5.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"ZipStream\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Paul Duncan\",\n                    \"email\": \"pabs@pablotron.org\"\n                },\n                {\n                    \"name\": \"Jonatan Männchen\",\n                    \"email\": \"jonatan@maennchen.ch\"\n                },\n                {\n                    \"name\": \"Jesse Donat\",\n                    \"email\": \"donatj@gmail.com\"\n                },\n                {\n                    \"name\": \"András Kolesár\",\n                    \"email\": \"kolesar@kolesar.hu\"\n                }\n            ],\n            \"description\": \"ZipStream is a library for dynamically streaming dynamic zip files from PHP without writing to the disk at all on the server.\",\n            \"keywords\": [\n                \"stream\",\n                \"zip\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/maennchen/ZipStream-PHP/issues\",\n                \"source\": \"https://github.com/maennchen/ZipStream-PHP/tree/2.4.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/maennchen\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://opencollective.com/zipstream\",\n                    \"type\": \"open_collective\"\n                }\n            ],\n            \"time\": \"2022-12-08T12:29:14+00:00\"\n        },\n        {\n            \"name\": \"markbaker/complex\",\n            \"version\": \"3.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/MarkBaker/PHPComplex.git\",\n                \"reference\": \"95c56caa1cf5c766ad6d65b6344b807c1e8405b9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/MarkBaker/PHPComplex/zipball/95c56caa1cf5c766ad6d65b6344b807c1e8405b9\",\n                \"reference\": \"95c56caa1cf5c766ad6d65b6344b807c1e8405b9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"dev-master\",\n                \"phpcompatibility/php-compatibility\": \"^9.3\",\n                \"phpunit/phpunit\": \"^7.0 || ^8.0 || ^9.0\",\n                \"squizlabs/php_codesniffer\": \"^3.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Complex\\\\\": \"classes/src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mark Baker\",\n                    \"email\": \"mark@lange.demon.co.uk\"\n                }\n            ],\n            \"description\": \"PHP Class for working with complex numbers\",\n            \"homepage\": \"https://github.com/MarkBaker/PHPComplex\",\n            \"keywords\": [\n                \"complex\",\n                \"mathematics\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/MarkBaker/PHPComplex/issues\",\n                \"source\": \"https://github.com/MarkBaker/PHPComplex/tree/3.0.2\"\n            },\n            \"time\": \"2022-12-06T16:21:08+00:00\"\n        },\n        {\n            \"name\": \"markbaker/matrix\",\n            \"version\": \"3.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/MarkBaker/PHPMatrix.git\",\n                \"reference\": \"728434227fe21be27ff6d86621a1b13107a2562c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/MarkBaker/PHPMatrix/zipball/728434227fe21be27ff6d86621a1b13107a2562c\",\n                \"reference\": \"728434227fe21be27ff6d86621a1b13107a2562c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"dev-master\",\n                \"phpcompatibility/php-compatibility\": \"^9.3\",\n                \"phpdocumentor/phpdocumentor\": \"2.*\",\n                \"phploc/phploc\": \"^4.0\",\n                \"phpmd/phpmd\": \"2.*\",\n                \"phpunit/phpunit\": \"^7.0 || ^8.0 || ^9.0\",\n                \"sebastian/phpcpd\": \"^4.0\",\n                \"squizlabs/php_codesniffer\": \"^3.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Matrix\\\\\": \"classes/src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mark Baker\",\n                    \"email\": \"mark@demon-angel.eu\"\n                }\n            ],\n            \"description\": \"PHP Class for working with matrices\",\n            \"homepage\": \"https://github.com/MarkBaker/PHPMatrix\",\n            \"keywords\": [\n                \"mathematics\",\n                \"matrix\",\n                \"vector\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/MarkBaker/PHPMatrix/issues\",\n                \"source\": \"https://github.com/MarkBaker/PHPMatrix/tree/3.0.1\"\n            },\n            \"time\": \"2022-12-02T22:17:43+00:00\"\n        },\n        {\n            \"name\": \"mews/captcha\",\n            \"version\": \"3.3.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/mewebstudio/captcha.git\",\n                \"reference\": \"8c439263d0ba42e6c05e4d1f3bee0a2b97e675d5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/mewebstudio/captcha/zipball/8c439263d0ba42e6c05e4d1f3bee0a2b97e675d5\",\n                \"reference\": \"8c439263d0ba42e6c05e4d1f3bee0a2b97e675d5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-gd\": \"*\",\n                \"illuminate/config\": \"~5|^6|^7|^8|^9|^10.0\",\n                \"illuminate/filesystem\": \"~5|^6|^7|^8|^9|^10.0\",\n                \"illuminate/hashing\": \"~5|^6|^7|^8|^9|^10.0\",\n                \"illuminate/session\": \"~5|^6|^7|^8|^9|^10.0\",\n                \"illuminate/support\": \"~5|^6|^7|^8|^9|^10.0\",\n                \"intervention/image\": \"~2.5\",\n                \"php\": \"^7.2|^8.0\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"^1.0\",\n                \"phpunit/phpunit\": \"^8.5|^9.0\"\n            },\n            \"type\": \"package\",\n            \"extra\": {\n                \"laravel\": {\n                    \"aliases\": {\n                        \"Captcha\": \"Mews\\\\Captcha\\\\Facades\\\\Captcha\"\n                    },\n                    \"providers\": [\n                        \"Mews\\\\Captcha\\\\CaptchaServiceProvider\"\n                    ]\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/helpers.php\"\n                ],\n                \"psr-4\": {\n                    \"Mews\\\\Captcha\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Muharrem ERİN\",\n                    \"email\": \"me@mewebstudio.com\",\n                    \"homepage\": \"https://github.com/mewebstudio\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Laravel 5 & 6 Captcha Package\",\n            \"homepage\": \"https://github.com/mewebstudio/captcha\",\n            \"keywords\": [\n                \"captcha\",\n                \"laravel5 Security\",\n                \"laravel6 Captcha\",\n                \"laravel6 Security\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/mewebstudio/captcha/issues\",\n                \"source\": \"https://github.com/mewebstudio/captcha/tree/3.3.0\"\n            },\n            \"time\": \"2023-03-14T08:30:02+00:00\"\n        },\n        {\n            \"name\": \"monolog/monolog\",\n            \"version\": \"2.10.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Seldaek/monolog.git\",\n                \"reference\": \"5cf826f2991858b54d5c3809bee745560a1042a7\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Seldaek/monolog/zipball/5cf826f2991858b54d5c3809bee745560a1042a7\",\n                \"reference\": \"5cf826f2991858b54d5c3809bee745560a1042a7\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\",\n                \"psr/log\": \"^1.0.1 || ^2.0 || ^3.0\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0.0 || 2.0.0 || 3.0.0\"\n            },\n            \"require-dev\": {\n                \"aws/aws-sdk-php\": \"^2.4.9 || ^3.0\",\n                \"doctrine/couchdb\": \"~1.0@dev\",\n                \"elasticsearch/elasticsearch\": \"^7 || ^8\",\n                \"ext-json\": \"*\",\n                \"graylog2/gelf-php\": \"^1.4.2 || ^2@dev\",\n                \"guzzlehttp/guzzle\": \"^7.4\",\n                \"guzzlehttp/psr7\": \"^2.2\",\n                \"mongodb/mongodb\": \"^1.8\",\n                \"php-amqplib/php-amqplib\": \"~2.4 || ^3\",\n                \"phpspec/prophecy\": \"^1.15\",\n                \"phpstan/phpstan\": \"^1.10\",\n                \"phpunit/phpunit\": \"^8.5.38 || ^9.6.19\",\n                \"predis/predis\": \"^1.1 || ^2.0\",\n                \"rollbar/rollbar\": \"^1.3 || ^2 || ^3\",\n                \"ruflin/elastica\": \"^7\",\n                \"swiftmailer/swiftmailer\": \"^5.3|^6.0\",\n                \"symfony/mailer\": \"^5.4 || ^6\",\n                \"symfony/mime\": \"^5.4 || ^6\"\n            },\n            \"suggest\": {\n                \"aws/aws-sdk-php\": \"Allow sending log messages to AWS services like DynamoDB\",\n                \"doctrine/couchdb\": \"Allow sending log messages to a CouchDB server\",\n                \"elasticsearch/elasticsearch\": \"Allow sending log messages to an Elasticsearch server via official client\",\n                \"ext-amqp\": \"Allow sending log messages to an AMQP server (1.0+ required)\",\n                \"ext-curl\": \"Required to send log messages using the IFTTTHandler, the LogglyHandler, the SendGridHandler, the SlackWebhookHandler or the TelegramBotHandler\",\n                \"ext-mbstring\": \"Allow to work properly with unicode symbols\",\n                \"ext-mongodb\": \"Allow sending log messages to a MongoDB server (via driver)\",\n                \"ext-openssl\": \"Required to send log messages using SSL\",\n                \"ext-sockets\": \"Allow sending log messages to a Syslog server (via UDP driver)\",\n                \"graylog2/gelf-php\": \"Allow sending log messages to a GrayLog2 server\",\n                \"mongodb/mongodb\": \"Allow sending log messages to a MongoDB server (via library)\",\n                \"php-amqplib/php-amqplib\": \"Allow sending log messages to an AMQP server using php-amqplib\",\n                \"rollbar/rollbar\": \"Allow sending log messages to Rollbar\",\n                \"ruflin/elastica\": \"Allow sending log messages to an Elastic Search server\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Monolog\\\\\": \"src/Monolog\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jordi Boggiano\",\n                    \"email\": \"j.boggiano@seld.be\",\n                    \"homepage\": \"https://seld.be\"\n                }\n            ],\n            \"description\": \"Sends your logs to files, sockets, inboxes, databases and various web services\",\n            \"homepage\": \"https://github.com/Seldaek/monolog\",\n            \"keywords\": [\n                \"log\",\n                \"logging\",\n                \"psr-3\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/Seldaek/monolog/issues\",\n                \"source\": \"https://github.com/Seldaek/monolog/tree/2.10.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Seldaek\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/monolog/monolog\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-12T12:43:37+00:00\"\n        },\n        {\n            \"name\": \"myclabs/php-enum\",\n            \"version\": \"1.8.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/myclabs/php-enum.git\",\n                \"reference\": \"a867478eae49c9f59ece437ae7f9506bfaa27483\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/myclabs/php-enum/zipball/a867478eae49c9f59ece437ae7f9506bfaa27483\",\n                \"reference\": \"a867478eae49c9f59ece437ae7f9506bfaa27483\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"php\": \"^7.3 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.5\",\n                \"squizlabs/php_codesniffer\": \"1.*\",\n                \"vimeo/psalm\": \"^4.6.2\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"MyCLabs\\\\Enum\\\\\": \"src/\"\n                },\n                \"classmap\": [\n                    \"stubs/Stringable.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP Enum contributors\",\n                    \"homepage\": \"https://github.com/myclabs/php-enum/graphs/contributors\"\n                }\n            ],\n            \"description\": \"PHP Enum implementation\",\n            \"homepage\": \"http://github.com/myclabs/php-enum\",\n            \"keywords\": [\n                \"enum\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/myclabs/php-enum/issues\",\n                \"source\": \"https://github.com/myclabs/php-enum/tree/1.8.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/mnapoli\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/myclabs/php-enum\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-08-04T09:53:51+00:00\"\n        },\n        {\n            \"name\": \"nesbot/carbon\",\n            \"version\": \"2.72.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/briannesbitt/Carbon.git\",\n                \"reference\": \"afd46589c216118ecd48ff2b95d77596af1e57ed\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/briannesbitt/Carbon/zipball/afd46589c216118ecd48ff2b95d77596af1e57ed\",\n                \"reference\": \"afd46589c216118ecd48ff2b95d77596af1e57ed\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"carbonphp/carbon-doctrine-types\": \"*\",\n                \"ext-json\": \"*\",\n                \"php\": \"^7.1.8 || ^8.0\",\n                \"psr/clock\": \"^1.0\",\n                \"symfony/polyfill-mbstring\": \"^1.0\",\n                \"symfony/polyfill-php80\": \"^1.16\",\n                \"symfony/translation\": \"^3.4 || ^4.0 || ^5.0 || ^6.0\"\n            },\n            \"provide\": {\n                \"psr/clock-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/dbal\": \"^2.0 || ^3.1.4 || ^4.0\",\n                \"doctrine/orm\": \"^2.7 || ^3.0\",\n                \"friendsofphp/php-cs-fixer\": \"^3.0\",\n                \"kylekatarnls/multi-tester\": \"^2.0\",\n                \"ondrejmirtes/better-reflection\": \"*\",\n                \"phpmd/phpmd\": \"^2.9\",\n                \"phpstan/extension-installer\": \"^1.0\",\n                \"phpstan/phpstan\": \"^0.12.99 || ^1.7.14\",\n                \"phpunit/php-file-iterator\": \"^2.0.5 || ^3.0.6\",\n                \"phpunit/phpunit\": \"^7.5.20 || ^8.5.26 || ^9.5.20\",\n                \"squizlabs/php_codesniffer\": \"^3.4\"\n            },\n            \"bin\": [\n                \"bin/carbon\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.x-dev\",\n                    \"dev-2.x\": \"2.x-dev\"\n                },\n                \"laravel\": {\n                    \"providers\": [\n                        \"Carbon\\\\Laravel\\\\ServiceProvider\"\n                    ]\n                },\n                \"phpstan\": {\n                    \"includes\": [\n                        \"extension.neon\"\n                    ]\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Carbon\\\\\": \"src/Carbon/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Brian Nesbitt\",\n                    \"email\": \"brian@nesbot.com\",\n                    \"homepage\": \"https://markido.com\"\n                },\n                {\n                    \"name\": \"kylekatarnls\",\n                    \"homepage\": \"https://github.com/kylekatarnls\"\n                }\n            ],\n            \"description\": \"An API extension for DateTime that supports 281 different languages.\",\n            \"homepage\": \"https://carbon.nesbot.com\",\n            \"keywords\": [\n                \"date\",\n                \"datetime\",\n                \"time\"\n            ],\n            \"support\": {\n                \"docs\": \"https://carbon.nesbot.com/docs\",\n                \"issues\": \"https://github.com/briannesbitt/Carbon/issues\",\n                \"source\": \"https://github.com/briannesbitt/Carbon\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sponsors/kylekatarnls\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://opencollective.com/Carbon#sponsor\",\n                    \"type\": \"opencollective\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/subscription/pkg/packagist-nesbot-carbon?utm_source=packagist-nesbot-carbon&utm_medium=referral&utm_campaign=readme\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-06-03T19:18:41+00:00\"\n        },\n        {\n            \"name\": \"nette/schema\",\n            \"version\": \"v1.2.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/nette/schema.git\",\n                \"reference\": \"0462f0166e823aad657c9224d0f849ecac1ba10a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/nette/schema/zipball/0462f0166e823aad657c9224d0f849ecac1ba10a\",\n                \"reference\": \"0462f0166e823aad657c9224d0f849ecac1ba10a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"nette/utils\": \"^2.5.7 || ^3.1.5 ||  ^4.0\",\n                \"php\": \"7.1 - 8.3\"\n            },\n            \"require-dev\": {\n                \"nette/tester\": \"^2.3 || ^2.4\",\n                \"phpstan/phpstan-nette\": \"^1.0\",\n                \"tracy/tracy\": \"^2.7\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\",\n                \"GPL-2.0-only\",\n                \"GPL-3.0-only\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"David Grudl\",\n                    \"homepage\": \"https://davidgrudl.com\"\n                },\n                {\n                    \"name\": \"Nette Community\",\n                    \"homepage\": \"https://nette.org/contributors\"\n                }\n            ],\n            \"description\": \"📐 Nette Schema: validating data structures against a given Schema.\",\n            \"homepage\": \"https://nette.org\",\n            \"keywords\": [\n                \"config\",\n                \"nette\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/nette/schema/issues\",\n                \"source\": \"https://github.com/nette/schema/tree/v1.2.5\"\n            },\n            \"time\": \"2023-10-05T20:37:59+00:00\"\n        },\n        {\n            \"name\": \"nette/utils\",\n            \"version\": \"v4.0.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/nette/utils.git\",\n                \"reference\": \"736c567e257dbe0fcf6ce81b4d6dbe05c6899f96\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/nette/utils/zipball/736c567e257dbe0fcf6ce81b4d6dbe05c6899f96\",\n                \"reference\": \"736c567e257dbe0fcf6ce81b4d6dbe05c6899f96\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"8.0 - 8.4\"\n            },\n            \"conflict\": {\n                \"nette/finder\": \"<3\",\n                \"nette/schema\": \"<1.2.2\"\n            },\n            \"require-dev\": {\n                \"jetbrains/phpstorm-attributes\": \"dev-master\",\n                \"nette/tester\": \"^2.5\",\n                \"phpstan/phpstan\": \"^1.0\",\n                \"tracy/tracy\": \"^2.9\"\n            },\n            \"suggest\": {\n                \"ext-gd\": \"to use Image\",\n                \"ext-iconv\": \"to use Strings::webalize(), toAscii(), chr() and reverse()\",\n                \"ext-intl\": \"to use Strings::webalize(), toAscii(), normalize() and compare()\",\n                \"ext-json\": \"to use Nette\\\\Utils\\\\Json\",\n                \"ext-mbstring\": \"to use Strings::lower() etc...\",\n                \"ext-tokenizer\": \"to use Nette\\\\Utils\\\\Reflection::getUseStatements()\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\",\n                \"GPL-2.0-only\",\n                \"GPL-3.0-only\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"David Grudl\",\n                    \"homepage\": \"https://davidgrudl.com\"\n                },\n                {\n                    \"name\": \"Nette Community\",\n                    \"homepage\": \"https://nette.org/contributors\"\n                }\n            ],\n            \"description\": \"🛠  Nette Utils: lightweight utilities for string & array manipulation, image handling, safe JSON encoding/decoding, validation, slug or strong password generating etc.\",\n            \"homepage\": \"https://nette.org\",\n            \"keywords\": [\n                \"array\",\n                \"core\",\n                \"datetime\",\n                \"images\",\n                \"json\",\n                \"nette\",\n                \"paginator\",\n                \"password\",\n                \"slugify\",\n                \"string\",\n                \"unicode\",\n                \"utf-8\",\n                \"utility\",\n                \"validation\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/nette/utils/issues\",\n                \"source\": \"https://github.com/nette/utils/tree/v4.0.5\"\n            },\n            \"time\": \"2024-08-07T15:39:19+00:00\"\n        },\n        {\n            \"name\": \"nikic/php-parser\",\n            \"version\": \"v5.3.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/nikic/PHP-Parser.git\",\n                \"reference\": \"8eea230464783aa9671db8eea6f8c6ac5285794b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/nikic/PHP-Parser/zipball/8eea230464783aa9671db8eea6f8c6ac5285794b\",\n                \"reference\": \"8eea230464783aa9671db8eea6f8c6ac5285794b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-tokenizer\": \"*\",\n                \"php\": \">=7.4\"\n            },\n            \"require-dev\": {\n                \"ircmaxell/php-yacc\": \"^0.0.7\",\n                \"phpunit/phpunit\": \"^9.0\"\n            },\n            \"bin\": [\n                \"bin/php-parse\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PhpParser\\\\\": \"lib/PhpParser\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nikita Popov\"\n                }\n            ],\n            \"description\": \"A PHP parser written in PHP\",\n            \"keywords\": [\n                \"parser\",\n                \"php\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/nikic/PHP-Parser/issues\",\n                \"source\": \"https://github.com/nikic/PHP-Parser/tree/v5.3.1\"\n            },\n            \"time\": \"2024-10-08T18:51:32+00:00\"\n        },\n        {\n            \"name\": \"opis/closure\",\n            \"version\": \"3.6.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/opis/closure.git\",\n                \"reference\": \"3d81e4309d2a927abbe66df935f4bb60082805ad\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/opis/closure/zipball/3d81e4309d2a927abbe66df935f4bb60082805ad\",\n                \"reference\": \"3d81e4309d2a927abbe66df935f4bb60082805ad\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.4 || ^7.0 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"jeremeamia/superclosure\": \"^2.0\",\n                \"phpunit/phpunit\": \"^4.0 || ^5.0 || ^6.0 || ^7.0 || ^8.0 || ^9.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.6.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"functions.php\"\n                ],\n                \"psr-4\": {\n                    \"Opis\\\\Closure\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marius Sarca\",\n                    \"email\": \"marius.sarca@gmail.com\"\n                },\n                {\n                    \"name\": \"Sorin Sarca\",\n                    \"email\": \"sarca_sorin@hotmail.com\"\n                }\n            ],\n            \"description\": \"A library that can be used to serialize closures (anonymous functions) and arbitrary objects.\",\n            \"homepage\": \"https://opis.io/closure\",\n            \"keywords\": [\n                \"anonymous functions\",\n                \"closure\",\n                \"function\",\n                \"serializable\",\n                \"serialization\",\n                \"serialize\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/opis/closure/issues\",\n                \"source\": \"https://github.com/opis/closure/tree/3.6.3\"\n            },\n            \"time\": \"2022-01-27T09:35:39+00:00\"\n        },\n        {\n            \"name\": \"orangehill/iseed\",\n            \"version\": \"v3.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/orangehill/iseed.git\",\n                \"reference\": \"403ea734f16da238bda7fcc10b8dc549751fa035\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/orangehill/iseed/zipball/403ea734f16da238bda7fcc10b8dc549751fa035\",\n                \"reference\": \"403ea734f16da238bda7fcc10b8dc549751fa035\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"illuminate/support\": \"~5.5.0|~5.6.0|~5.7.0|~5.8.0|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n                \"php\": \"^7.2|^8.0.2\"\n            },\n            \"require-dev\": {\n                \"illuminate/filesystem\": \"~5.5.0|~5.6.0|~5.7.0|~5.8.0|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n                \"laravel/framework\": \"~5.5.0|~5.6.0|~5.7.0|~5.8.0|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n                \"mockery/mockery\": \"^1.0.0\",\n                \"phpunit/phpunit\": \"^8.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laravel\": {\n                    \"providers\": [\n                        \"Orangehill\\\\Iseed\\\\IseedServiceProvider\"\n                    ]\n                }\n            },\n            \"autoload\": {\n                \"psr-0\": {\n                    \"Orangehill\\\\Iseed\": \"src/\"\n                },\n                \"classmap\": [\n                    \"src/Orangehill/Iseed/Exceptions.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-2-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Tihomir Opacic\",\n                    \"email\": \"tihomir.opacic@orangehilldev.com\"\n                }\n            ],\n            \"description\": \"Generate a new Laravel database seed file based on data from the existing database table.\",\n            \"keywords\": [\n                \"artisan\",\n                \"generators\",\n                \"laravel\",\n                \"seed\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/orangehill/iseed/issues\",\n                \"source\": \"https://github.com/orangehill/iseed/tree/v3.0.4\"\n            },\n            \"time\": \"2024-03-27T08:01:21+00:00\"\n        },\n        {\n            \"name\": \"overtrue/http\",\n            \"version\": \"1.2.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/overtrue/http.git\",\n                \"reference\": \"e6e4c2ff274b1050d681288495878ee8fd3f1209\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/overtrue/http/zipball/e6e4c2ff274b1050d681288495878ee8fd3f1209\",\n                \"reference\": \"e6e4c2ff274b1050d681288495878ee8fd3f1209\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-curl\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-simplexml\": \"*\",\n                \"guzzlehttp/guzzle\": \"^6.3 || ^7.0\",\n                \"php\": \">=7.0\"\n            },\n            \"require-dev\": {\n                \"brainmaestro/composer-git-hooks\": \"^2.7\",\n                \"friendsofphp/php-cs-fixer\": \"^2.15 || ^3.0\",\n                \"mockery/mockery\": \"^1.0\",\n                \"overtrue/phplint\": \"^1.1 || ^2.0 || ^3.0\",\n                \"phpunit/phpunit\": \"^6.5 || ^8.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Overtrue\\\\Http\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"overtrue\",\n                    \"email\": \"anzhengchao@gmail.com\"\n                }\n            ],\n            \"description\": \"A simple http client wrapper.\",\n            \"support\": {\n                \"issues\": \"https://github.com/overtrue/http/issues\",\n                \"source\": \"https://github.com/overtrue/http/tree/1.2.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/overtrue\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2022-03-14T06:24:13+00:00\"\n        },\n        {\n            \"name\": \"overtrue/pinyin\",\n            \"version\": \"4.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/overtrue/pinyin.git\",\n                \"reference\": \"4d0fb4f27f0c79e81c9489e0c0ae4a4f8837eae7\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/overtrue/pinyin/zipball/4d0fb4f27f0c79e81c9489e0c0ae4a4f8837eae7\",\n                \"reference\": \"4d0fb4f27f0c79e81c9489e0c0ae4a4f8837eae7\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"require-dev\": {\n                \"brainmaestro/composer-git-hooks\": \"^2.7\",\n                \"friendsofphp/php-cs-fixer\": \"^2.16\",\n                \"phpunit/phpunit\": \"~8.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"hooks\": {\n                    \"pre-push\": [\n                        \"composer test\",\n                        \"composer check-style\"\n                    ],\n                    \"pre-commit\": [\n                        \"composer test\",\n                        \"composer fix-style\"\n                    ]\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/const.php\"\n                ],\n                \"psr-4\": {\n                    \"Overtrue\\\\Pinyin\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"overtrue\",\n                    \"email\": \"anzhengchao@gmail.com\",\n                    \"homepage\": \"http://github.com/overtrue\"\n                }\n            ],\n            \"description\": \"Chinese to pinyin translator.\",\n            \"homepage\": \"https://github.com/overtrue/pinyin\",\n            \"keywords\": [\n                \"Chinese\",\n                \"Pinyin\",\n                \"cn2pinyin\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/overtrue/pinyin/issues\",\n                \"source\": \"https://github.com/overtrue/pinyin/tree/4.1.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/overtrue\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-04-27T10:17:12+00:00\"\n        },\n        {\n            \"name\": \"phpoffice/phpspreadsheet\",\n            \"version\": \"1.29.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHPOffice/PhpSpreadsheet.git\",\n                \"reference\": \"727cb704d5479fe4ddc291497ee471c4ec08f1b6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHPOffice/PhpSpreadsheet/zipball/727cb704d5479fe4ddc291497ee471c4ec08f1b6\",\n                \"reference\": \"727cb704d5479fe4ddc291497ee471c4ec08f1b6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"ext-dom\": \"*\",\n                \"ext-fileinfo\": \"*\",\n                \"ext-gd\": \"*\",\n                \"ext-iconv\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"ext-simplexml\": \"*\",\n                \"ext-xml\": \"*\",\n                \"ext-xmlreader\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"ext-zip\": \"*\",\n                \"ext-zlib\": \"*\",\n                \"ezyang/htmlpurifier\": \"^4.15\",\n                \"maennchen/zipstream-php\": \"^2.1 || ^3.0\",\n                \"markbaker/complex\": \"^3.0\",\n                \"markbaker/matrix\": \"^3.0\",\n                \"php\": \"^7.4 || ^8.0\",\n                \"psr/http-client\": \"^1.0\",\n                \"psr/http-factory\": \"^1.0\",\n                \"psr/simple-cache\": \"^1.0 || ^2.0 || ^3.0\"\n            },\n            \"require-dev\": {\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"dev-main\",\n                \"dompdf/dompdf\": \"^1.0 || ^2.0\",\n                \"friendsofphp/php-cs-fixer\": \"^3.2\",\n                \"mitoteam/jpgraph\": \"^10.3\",\n                \"mpdf/mpdf\": \"^8.1.1\",\n                \"phpcompatibility/php-compatibility\": \"^9.3\",\n                \"phpstan/phpstan\": \"^1.1\",\n                \"phpstan/phpstan-phpunit\": \"^1.0\",\n                \"phpunit/phpunit\": \"^8.5 || ^9.0\",\n                \"squizlabs/php_codesniffer\": \"^3.7\",\n                \"tecnickcom/tcpdf\": \"^6.5\"\n            },\n            \"suggest\": {\n                \"dompdf/dompdf\": \"Option for rendering PDF with PDF Writer\",\n                \"ext-intl\": \"PHP Internationalization Functions\",\n                \"mitoteam/jpgraph\": \"Option for rendering charts, or including charts with PDF or HTML Writers\",\n                \"mpdf/mpdf\": \"Option for rendering PDF with PDF Writer\",\n                \"tecnickcom/tcpdf\": \"Option for rendering PDF with PDF Writer\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PhpOffice\\\\PhpSpreadsheet\\\\\": \"src/PhpSpreadsheet\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Maarten Balliauw\",\n                    \"homepage\": \"https://blog.maartenballiauw.be\"\n                },\n                {\n                    \"name\": \"Mark Baker\",\n                    \"homepage\": \"https://markbakeruk.net\"\n                },\n                {\n                    \"name\": \"Franck Lefevre\",\n                    \"homepage\": \"https://rootslabs.net\"\n                },\n                {\n                    \"name\": \"Erik Tilt\"\n                },\n                {\n                    \"name\": \"Adrien Crivelli\"\n                }\n            ],\n            \"description\": \"PHPSpreadsheet - Read, Create and Write Spreadsheet documents in PHP - Spreadsheet engine\",\n            \"homepage\": \"https://github.com/PHPOffice/PhpSpreadsheet\",\n            \"keywords\": [\n                \"OpenXML\",\n                \"excel\",\n                \"gnumeric\",\n                \"ods\",\n                \"php\",\n                \"spreadsheet\",\n                \"xls\",\n                \"xlsx\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/PHPOffice/PhpSpreadsheet/issues\",\n                \"source\": \"https://github.com/PHPOffice/PhpSpreadsheet/tree/1.29.5\"\n            },\n            \"time\": \"2024-11-22T05:57:44+00:00\"\n        },\n        {\n            \"name\": \"phpoption/phpoption\",\n            \"version\": \"1.9.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/schmittjoh/php-option.git\",\n                \"reference\": \"e3fac8b24f56113f7cb96af14958c0dd16330f54\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/schmittjoh/php-option/zipball/e3fac8b24f56113f7cb96af14958c0dd16330f54\",\n                \"reference\": \"e3fac8b24f56113f7cb96af14958c0dd16330f54\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2.5 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"phpunit/phpunit\": \"^8.5.39 || ^9.6.20 || ^10.5.28\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                },\n                \"branch-alias\": {\n                    \"dev-master\": \"1.9-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PhpOption\\\\\": \"src/PhpOption/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"Apache-2.0\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Johannes M. Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\",\n                    \"homepage\": \"https://github.com/schmittjoh\"\n                },\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                }\n            ],\n            \"description\": \"Option Type for PHP\",\n            \"keywords\": [\n                \"language\",\n                \"option\",\n                \"php\",\n                \"type\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/schmittjoh/php-option/issues\",\n                \"source\": \"https://github.com/schmittjoh/php-option/tree/1.9.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/phpoption/phpoption\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-07-20T21:41:07+00:00\"\n        },\n        {\n            \"name\": \"predis/predis\",\n            \"version\": \"v1.1.10\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/predis/predis.git\",\n                \"reference\": \"a2fb02d738bedadcffdbb07efa3a5e7bd57f8d6e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/predis/predis/zipball/a2fb02d738bedadcffdbb07efa3a5e7bd57f8d6e\",\n                \"reference\": \"a2fb02d738bedadcffdbb07efa3a5e7bd57f8d6e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.9\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"~4.8\"\n            },\n            \"suggest\": {\n                \"ext-curl\": \"Allows access to Webdis when paired with phpiredis\",\n                \"ext-phpiredis\": \"Allows faster serialization and deserialization of the Redis protocol\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Predis\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Daniele Alessandri\",\n                    \"email\": \"suppakilla@gmail.com\",\n                    \"homepage\": \"http://clorophilla.net\",\n                    \"role\": \"Creator & Maintainer\"\n                },\n                {\n                    \"name\": \"Till Krüss\",\n                    \"homepage\": \"https://till.im\",\n                    \"role\": \"Maintainer\"\n                }\n            ],\n            \"description\": \"Flexible and feature-complete Redis client for PHP and HHVM\",\n            \"homepage\": \"http://github.com/predis/predis\",\n            \"keywords\": [\n                \"nosql\",\n                \"predis\",\n                \"redis\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/predis/predis/issues\",\n                \"source\": \"https://github.com/predis/predis/tree/v1.1.10\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sponsors/tillkruss\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2022-01-05T17:46:08+00:00\"\n        },\n        {\n            \"name\": \"psr/clock\",\n            \"version\": \"1.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/clock.git\",\n                \"reference\": \"e41a24703d4560fd0acb709162f73b8adfc3aa0d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/clock/zipball/e41a24703d4560fd0acb709162f73b8adfc3aa0d\",\n                \"reference\": \"e41a24703d4560fd0acb709162f73b8adfc3aa0d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.0 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Clock\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for reading the clock.\",\n            \"homepage\": \"https://github.com/php-fig/clock\",\n            \"keywords\": [\n                \"clock\",\n                \"now\",\n                \"psr\",\n                \"psr-20\",\n                \"time\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-fig/clock/issues\",\n                \"source\": \"https://github.com/php-fig/clock/tree/1.0.0\"\n            },\n            \"time\": \"2022-11-25T14:36:26+00:00\"\n        },\n        {\n            \"name\": \"psr/container\",\n            \"version\": \"1.1.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/container.git\",\n                \"reference\": \"513e0666f7216c7459170d56df27dfcefe1689ea\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/container/zipball/513e0666f7216c7459170d56df27dfcefe1689ea\",\n                \"reference\": \"513e0666f7216c7459170d56df27dfcefe1689ea\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.4.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Container\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common Container Interface (PHP FIG PSR-11)\",\n            \"homepage\": \"https://github.com/php-fig/container\",\n            \"keywords\": [\n                \"PSR-11\",\n                \"container\",\n                \"container-interface\",\n                \"container-interop\",\n                \"psr\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-fig/container/issues\",\n                \"source\": \"https://github.com/php-fig/container/tree/1.1.2\"\n            },\n            \"time\": \"2021-11-05T16:50:12+00:00\"\n        },\n        {\n            \"name\": \"psr/event-dispatcher\",\n            \"version\": \"1.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/event-dispatcher.git\",\n                \"reference\": \"dbefd12671e8a14ec7f180cab83036ed26714bb0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/event-dispatcher/zipball/dbefd12671e8a14ec7f180cab83036ed26714bb0\",\n                \"reference\": \"dbefd12671e8a14ec7f180cab83036ed26714bb0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\EventDispatcher\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Standard interfaces for event handling.\",\n            \"keywords\": [\n                \"events\",\n                \"psr\",\n                \"psr-14\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-fig/event-dispatcher/issues\",\n                \"source\": \"https://github.com/php-fig/event-dispatcher/tree/1.0.0\"\n            },\n            \"time\": \"2019-01-08T18:20:26+00:00\"\n        },\n        {\n            \"name\": \"psr/http-client\",\n            \"version\": \"1.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-client.git\",\n                \"reference\": \"bb5906edc1c324c9a05aa0873d40117941e5fa90\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-client/zipball/bb5906edc1c324c9a05aa0873d40117941e5fa90\",\n                \"reference\": \"bb5906edc1c324c9a05aa0873d40117941e5fa90\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.0 || ^8.0\",\n                \"psr/http-message\": \"^1.0 || ^2.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Client\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for HTTP clients\",\n            \"homepage\": \"https://github.com/php-fig/http-client\",\n            \"keywords\": [\n                \"http\",\n                \"http-client\",\n                \"psr\",\n                \"psr-18\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-client\"\n            },\n            \"time\": \"2023-09-23T14:17:50+00:00\"\n        },\n        {\n            \"name\": \"psr/http-factory\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-factory.git\",\n                \"reference\": \"2b4765fddfe3b508ac62f829e852b1501d3f6e8a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-factory/zipball/2b4765fddfe3b508ac62f829e852b1501d3f6e8a\",\n                \"reference\": \"2b4765fddfe3b508ac62f829e852b1501d3f6e8a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\",\n                \"psr/http-message\": \"^1.0 || ^2.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Message\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"PSR-17: Common interfaces for PSR-7 HTTP message factories\",\n            \"keywords\": [\n                \"factory\",\n                \"http\",\n                \"message\",\n                \"psr\",\n                \"psr-17\",\n                \"psr-7\",\n                \"request\",\n                \"response\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-factory\"\n            },\n            \"time\": \"2024-04-15T12:06:14+00:00\"\n        },\n        {\n            \"name\": \"psr/http-message\",\n            \"version\": \"1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-message.git\",\n                \"reference\": \"cb6ce4845ce34a8ad9e68117c10ee90a29919eba\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-message/zipball/cb6ce4845ce34a8ad9e68117c10ee90a29919eba\",\n                \"reference\": \"cb6ce4845ce34a8ad9e68117c10ee90a29919eba\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Message\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for HTTP messages\",\n            \"homepage\": \"https://github.com/php-fig/http-message\",\n            \"keywords\": [\n                \"http\",\n                \"http-message\",\n                \"psr\",\n                \"psr-7\",\n                \"request\",\n                \"response\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-message/tree/1.1\"\n            },\n            \"time\": \"2023-04-04T09:50:52+00:00\"\n        },\n        {\n            \"name\": \"psr/log\",\n            \"version\": \"2.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/log.git\",\n                \"reference\": \"ef29f6d262798707a9edd554e2b82517ef3a9376\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/log/zipball/ef29f6d262798707a9edd554e2b82517ef3a9376\",\n                \"reference\": \"ef29f6d262798707a9edd554e2b82517ef3a9376\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Log\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for logging libraries\",\n            \"homepage\": \"https://github.com/php-fig/log\",\n            \"keywords\": [\n                \"log\",\n                \"psr\",\n                \"psr-3\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/log/tree/2.0.0\"\n            },\n            \"time\": \"2021-07-14T16:41:46+00:00\"\n        },\n        {\n            \"name\": \"psr/simple-cache\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/simple-cache.git\",\n                \"reference\": \"408d5eafb83c57f6365a3ca330ff23aa4a5fa39b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/simple-cache/zipball/408d5eafb83c57f6365a3ca330ff23aa4a5fa39b\",\n                \"reference\": \"408d5eafb83c57f6365a3ca330ff23aa4a5fa39b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\SimpleCache\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interfaces for simple caching\",\n            \"keywords\": [\n                \"cache\",\n                \"caching\",\n                \"psr\",\n                \"psr-16\",\n                \"simple-cache\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/simple-cache/tree/master\"\n            },\n            \"time\": \"2017-10-23T01:57:42+00:00\"\n        },\n        {\n            \"name\": \"psy/psysh\",\n            \"version\": \"v0.12.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/bobthecow/psysh.git\",\n                \"reference\": \"3b5ea0efaa791cd1c65ecc493aec3e2aa55ff57c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/bobthecow/psysh/zipball/3b5ea0efaa791cd1c65ecc493aec3e2aa55ff57c\",\n                \"reference\": \"3b5ea0efaa791cd1c65ecc493aec3e2aa55ff57c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"ext-tokenizer\": \"*\",\n                \"nikic/php-parser\": \"^5.0 || ^4.0\",\n                \"php\": \"^8.0 || ^7.4\",\n                \"symfony/console\": \"^7.0 || ^6.0 || ^5.0 || ^4.0 || ^3.4\",\n                \"symfony/var-dumper\": \"^7.0 || ^6.0 || ^5.0 || ^4.0 || ^3.4\"\n            },\n            \"conflict\": {\n                \"symfony/console\": \"4.4.37 || 5.3.14 || 5.3.15 || 5.4.3 || 5.4.4 || 6.0.3 || 6.0.4\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.2\"\n            },\n            \"suggest\": {\n                \"ext-pcntl\": \"Enabling the PCNTL extension makes PsySH a lot happier :)\",\n                \"ext-pdo-sqlite\": \"The doc command requires SQLite to work.\",\n                \"ext-posix\": \"If you have PCNTL, you'll want the POSIX extension as well.\"\n            },\n            \"bin\": [\n                \"bin/psysh\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": false,\n                    \"forward-command\": false\n                },\n                \"branch-alias\": {\n                    \"dev-main\": \"0.12.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/functions.php\"\n                ],\n                \"psr-4\": {\n                    \"Psy\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Justin Hileman\",\n                    \"email\": \"justin@justinhileman.info\",\n                    \"homepage\": \"http://justinhileman.com\"\n                }\n            ],\n            \"description\": \"An interactive shell for modern PHP.\",\n            \"homepage\": \"http://psysh.org\",\n            \"keywords\": [\n                \"REPL\",\n                \"console\",\n                \"interactive\",\n                \"shell\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/bobthecow/psysh/issues\",\n                \"source\": \"https://github.com/bobthecow/psysh/tree/v0.12.6\"\n            },\n            \"time\": \"2024-12-07T20:08:52+00:00\"\n        },\n        {\n            \"name\": \"ralouphie/getallheaders\",\n            \"version\": \"3.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ralouphie/getallheaders.git\",\n                \"reference\": \"120b605dfeb996808c31b6477290a714d356e822\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ralouphie/getallheaders/zipball/120b605dfeb996808c31b6477290a714d356e822\",\n                \"reference\": \"120b605dfeb996808c31b6477290a714d356e822\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.6\"\n            },\n            \"require-dev\": {\n                \"php-coveralls/php-coveralls\": \"^2.1\",\n                \"phpunit/phpunit\": \"^5 || ^6.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/getallheaders.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ralph Khattar\",\n                    \"email\": \"ralph.khattar@gmail.com\"\n                }\n            ],\n            \"description\": \"A polyfill for getallheaders.\",\n            \"support\": {\n                \"issues\": \"https://github.com/ralouphie/getallheaders/issues\",\n                \"source\": \"https://github.com/ralouphie/getallheaders/tree/develop\"\n            },\n            \"time\": \"2019-03-08T08:55:37+00:00\"\n        },\n        {\n            \"name\": \"ramsey/collection\",\n            \"version\": \"1.3.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ramsey/collection.git\",\n                \"reference\": \"ad7475d1c9e70b190ecffc58f2d989416af339b4\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ramsey/collection/zipball/ad7475d1c9e70b190ecffc58f2d989416af339b4\",\n                \"reference\": \"ad7475d1c9e70b190ecffc58f2d989416af339b4\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.4 || ^8.0\",\n                \"symfony/polyfill-php81\": \"^1.23\"\n            },\n            \"require-dev\": {\n                \"captainhook/plugin-composer\": \"^5.3\",\n                \"ergebnis/composer-normalize\": \"^2.28.3\",\n                \"fakerphp/faker\": \"^1.21\",\n                \"hamcrest/hamcrest-php\": \"^2.0\",\n                \"jangregor/phpstan-prophecy\": \"^1.0\",\n                \"mockery/mockery\": \"^1.5\",\n                \"php-parallel-lint/php-console-highlighter\": \"^1.0\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.3\",\n                \"phpcsstandards/phpcsutils\": \"^1.0.0-rc1\",\n                \"phpspec/prophecy-phpunit\": \"^2.0\",\n                \"phpstan/extension-installer\": \"^1.2\",\n                \"phpstan/phpstan\": \"^1.9\",\n                \"phpstan/phpstan-mockery\": \"^1.1\",\n                \"phpstan/phpstan-phpunit\": \"^1.3\",\n                \"phpunit/phpunit\": \"^9.5\",\n                \"psalm/plugin-mockery\": \"^1.1\",\n                \"psalm/plugin-phpunit\": \"^0.18.4\",\n                \"ramsey/coding-standard\": \"^2.0.3\",\n                \"ramsey/conventional-commits\": \"^1.3\",\n                \"vimeo/psalm\": \"^5.4\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"captainhook\": {\n                    \"force-install\": true\n                },\n                \"ramsey/conventional-commits\": {\n                    \"configFile\": \"conventional-commits.json\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Ramsey\\\\Collection\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ben Ramsey\",\n                    \"email\": \"ben@benramsey.com\",\n                    \"homepage\": \"https://benramsey.com\"\n                }\n            ],\n            \"description\": \"A PHP library for representing and manipulating collections.\",\n            \"keywords\": [\n                \"array\",\n                \"collection\",\n                \"hash\",\n                \"map\",\n                \"queue\",\n                \"set\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/ramsey/collection/issues\",\n                \"source\": \"https://github.com/ramsey/collection/tree/1.3.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/ramsey\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/ramsey/collection\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-12-27T19:12:24+00:00\"\n        },\n        {\n            \"name\": \"ramsey/uuid\",\n            \"version\": \"4.7.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ramsey/uuid.git\",\n                \"reference\": \"91039bc1faa45ba123c4328958e620d382ec7088\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ramsey/uuid/zipball/91039bc1faa45ba123c4328958e620d382ec7088\",\n                \"reference\": \"91039bc1faa45ba123c4328958e620d382ec7088\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"brick/math\": \"^0.8.8 || ^0.9 || ^0.10 || ^0.11 || ^0.12\",\n                \"ext-json\": \"*\",\n                \"php\": \"^8.0\",\n                \"ramsey/collection\": \"^1.2 || ^2.0\"\n            },\n            \"replace\": {\n                \"rhumsaa/uuid\": \"self.version\"\n            },\n            \"require-dev\": {\n                \"captainhook/captainhook\": \"^5.10\",\n                \"captainhook/plugin-composer\": \"^5.3\",\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"^0.7.0\",\n                \"doctrine/annotations\": \"^1.8\",\n                \"ergebnis/composer-normalize\": \"^2.15\",\n                \"mockery/mockery\": \"^1.3\",\n                \"paragonie/random-lib\": \"^2\",\n                \"php-mock/php-mock\": \"^2.2\",\n                \"php-mock/php-mock-mockery\": \"^1.3\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.1\",\n                \"phpbench/phpbench\": \"^1.0\",\n                \"phpstan/extension-installer\": \"^1.1\",\n                \"phpstan/phpstan\": \"^1.8\",\n                \"phpstan/phpstan-mockery\": \"^1.1\",\n                \"phpstan/phpstan-phpunit\": \"^1.1\",\n                \"phpunit/phpunit\": \"^8.5 || ^9\",\n                \"ramsey/composer-repl\": \"^1.4\",\n                \"slevomat/coding-standard\": \"^8.4\",\n                \"squizlabs/php_codesniffer\": \"^3.5\",\n                \"vimeo/psalm\": \"^4.9\"\n            },\n            \"suggest\": {\n                \"ext-bcmath\": \"Enables faster math with arbitrary-precision integers using BCMath.\",\n                \"ext-gmp\": \"Enables faster math with arbitrary-precision integers using GMP.\",\n                \"ext-uuid\": \"Enables the use of PeclUuidTimeGenerator and PeclUuidRandomGenerator.\",\n                \"paragonie/random-lib\": \"Provides RandomLib for use with the RandomLibAdapter\",\n                \"ramsey/uuid-doctrine\": \"Allows the use of Ramsey\\\\Uuid\\\\Uuid as Doctrine field type.\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"captainhook\": {\n                    \"force-install\": true\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/functions.php\"\n                ],\n                \"psr-4\": {\n                    \"Ramsey\\\\Uuid\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"A PHP library for generating and working with universally unique identifiers (UUIDs).\",\n            \"keywords\": [\n                \"guid\",\n                \"identifier\",\n                \"uuid\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/ramsey/uuid/issues\",\n                \"source\": \"https://github.com/ramsey/uuid/tree/4.7.6\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/ramsey\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/ramsey/uuid\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-04-27T21:32:50+00:00\"\n        },\n        {\n            \"name\": \"swiftmailer/swiftmailer\",\n            \"version\": \"v6.3.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/swiftmailer/swiftmailer.git\",\n                \"reference\": \"8a5d5072dca8f48460fce2f4131fcc495eec654c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/swiftmailer/swiftmailer/zipball/8a5d5072dca8f48460fce2f4131fcc495eec654c\",\n                \"reference\": \"8a5d5072dca8f48460fce2f4131fcc495eec654c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"egulias/email-validator\": \"^2.0|^3.1\",\n                \"php\": \">=7.0.0\",\n                \"symfony/polyfill-iconv\": \"^1.0\",\n                \"symfony/polyfill-intl-idn\": \"^1.10\",\n                \"symfony/polyfill-mbstring\": \"^1.0\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"^1.0\",\n                \"symfony/phpunit-bridge\": \"^4.4|^5.4\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"Needed to support internationalized email addresses\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"6.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"lib/swift_required.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Chris Corbyn\"\n                },\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                }\n            ],\n            \"description\": \"Swiftmailer, free feature-rich PHP mailer\",\n            \"homepage\": \"https://swiftmailer.symfony.com\",\n            \"keywords\": [\n                \"email\",\n                \"mail\",\n                \"mailer\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/swiftmailer/swiftmailer/issues\",\n                \"source\": \"https://github.com/swiftmailer/swiftmailer/tree/v6.3.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/swiftmailer/swiftmailer\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"abandoned\": \"symfony/mailer\",\n            \"time\": \"2021-10-18T15:26:12+00:00\"\n        },\n        {\n            \"name\": \"symfony/console\",\n            \"version\": \"v5.4.47\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/console.git\",\n                \"reference\": \"c4ba980ca61a9eb18ee6bcc73f28e475852bb1ed\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/console/zipball/c4ba980ca61a9eb18ee6bcc73f28e475852bb1ed\",\n                \"reference\": \"c4ba980ca61a9eb18ee6bcc73f28e475852bb1ed\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1|^3\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php73\": \"^1.9\",\n                \"symfony/polyfill-php80\": \"^1.16\",\n                \"symfony/service-contracts\": \"^1.1|^2|^3\",\n                \"symfony/string\": \"^5.1|^6.0\"\n            },\n            \"conflict\": {\n                \"psr/log\": \">=3\",\n                \"symfony/dependency-injection\": \"<4.4\",\n                \"symfony/dotenv\": \"<5.1\",\n                \"symfony/event-dispatcher\": \"<4.4\",\n                \"symfony/lock\": \"<4.4\",\n                \"symfony/process\": \"<4.4\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0|2.0\"\n            },\n            \"require-dev\": {\n                \"psr/log\": \"^1|^2\",\n                \"symfony/config\": \"^4.4|^5.0|^6.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0|^6.0\",\n                \"symfony/event-dispatcher\": \"^4.4|^5.0|^6.0\",\n                \"symfony/lock\": \"^4.4|^5.0|^6.0\",\n                \"symfony/process\": \"^4.4|^5.0|^6.0\",\n                \"symfony/var-dumper\": \"^4.4|^5.0|^6.0\"\n            },\n            \"suggest\": {\n                \"psr/log\": \"For using the console logger\",\n                \"symfony/event-dispatcher\": \"\",\n                \"symfony/lock\": \"\",\n                \"symfony/process\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Console\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Eases the creation of beautiful and testable command line interfaces\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"cli\",\n                \"command-line\",\n                \"console\",\n                \"terminal\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/console/tree/v5.4.47\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-06T11:30:55+00:00\"\n        },\n        {\n            \"name\": \"symfony/css-selector\",\n            \"version\": \"v6.0.19\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/css-selector.git\",\n                \"reference\": \"f1d00bddb83a4cb2138564b2150001cb6ce272b1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/css-selector/zipball/f1d00bddb83a4cb2138564b2150001cb6ce272b1\",\n                \"reference\": \"f1d00bddb83a4cb2138564b2150001cb6ce272b1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.2\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\CssSelector\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Jean-François Simon\",\n                    \"email\": \"jeanfrancois.simon@sensiolabs.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Converts CSS selectors to XPath expressions\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/css-selector/tree/v6.0.19\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-01-01T08:36:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/deprecation-contracts\",\n            \"version\": \"v3.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/deprecation-contracts.git\",\n                \"reference\": \"26954b3d62a6c5fd0ea8a2a00c0353a14978d05c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/deprecation-contracts/zipball/26954b3d62a6c5fd0ea8a2a00c0353a14978d05c\",\n                \"reference\": \"26954b3d62a6c5fd0ea8a2a00c0353a14978d05c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.0-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"function.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"A generic function and convention to trigger deprecation notices\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/deprecation-contracts/tree/v3.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-01-02T09:55:41+00:00\"\n        },\n        {\n            \"name\": \"symfony/error-handler\",\n            \"version\": \"v5.4.46\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/error-handler.git\",\n                \"reference\": \"d19ede7a2cafb386be9486c580649d0f9e3d0363\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/error-handler/zipball/d19ede7a2cafb386be9486c580649d0f9e3d0363\",\n                \"reference\": \"d19ede7a2cafb386be9486c580649d0f9e3d0363\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/log\": \"^1|^2|^3\",\n                \"symfony/var-dumper\": \"^4.4|^5.0|^6.0\"\n            },\n            \"require-dev\": {\n                \"symfony/deprecation-contracts\": \"^2.1|^3\",\n                \"symfony/http-kernel\": \"^4.4|^5.0|^6.0\",\n                \"symfony/serializer\": \"^4.4|^5.0|^6.0\"\n            },\n            \"bin\": [\n                \"Resources/bin/patch-type-declarations\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\ErrorHandler\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides tools to manage errors and ease debugging PHP code\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/error-handler/tree/v5.4.46\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-05T14:17:06+00:00\"\n        },\n        {\n            \"name\": \"symfony/event-dispatcher\",\n            \"version\": \"v6.0.19\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/event-dispatcher.git\",\n                \"reference\": \"2eaf8e63bc5b8cefabd4a800157f0d0c094f677a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/event-dispatcher/zipball/2eaf8e63bc5b8cefabd4a800157f0d0c094f677a\",\n                \"reference\": \"2eaf8e63bc5b8cefabd4a800157f0d0c094f677a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.2\",\n                \"symfony/event-dispatcher-contracts\": \"^2|^3\"\n            },\n            \"conflict\": {\n                \"symfony/dependency-injection\": \"<5.4\"\n            },\n            \"provide\": {\n                \"psr/event-dispatcher-implementation\": \"1.0\",\n                \"symfony/event-dispatcher-implementation\": \"2.0|3.0\"\n            },\n            \"require-dev\": {\n                \"psr/log\": \"^1|^2|^3\",\n                \"symfony/config\": \"^5.4|^6.0\",\n                \"symfony/dependency-injection\": \"^5.4|^6.0\",\n                \"symfony/error-handler\": \"^5.4|^6.0\",\n                \"symfony/expression-language\": \"^5.4|^6.0\",\n                \"symfony/http-foundation\": \"^5.4|^6.0\",\n                \"symfony/service-contracts\": \"^1.1|^2|^3\",\n                \"symfony/stopwatch\": \"^5.4|^6.0\"\n            },\n            \"suggest\": {\n                \"symfony/dependency-injection\": \"\",\n                \"symfony/http-kernel\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\EventDispatcher\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides tools that allow your application components to communicate with each other by dispatching events and listening to them\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/event-dispatcher/tree/v6.0.19\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-01-01T08:36:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/event-dispatcher-contracts\",\n            \"version\": \"v3.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/event-dispatcher-contracts.git\",\n                \"reference\": \"7bc61cc2db649b4637d331240c5346dcc7708051\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/event-dispatcher-contracts/zipball/7bc61cc2db649b4637d331240c5346dcc7708051\",\n                \"reference\": \"7bc61cc2db649b4637d331240c5346dcc7708051\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.2\",\n                \"psr/event-dispatcher\": \"^1\"\n            },\n            \"suggest\": {\n                \"symfony/event-dispatcher-implementation\": \"\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.0-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Contracts\\\\EventDispatcher\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Generic abstractions related to dispatching event\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"abstractions\",\n                \"contracts\",\n                \"decoupling\",\n                \"interfaces\",\n                \"interoperability\",\n                \"standards\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/event-dispatcher-contracts/tree/v3.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-01-02T09:55:41+00:00\"\n        },\n        {\n            \"name\": \"symfony/finder\",\n            \"version\": \"v5.4.45\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/finder.git\",\n                \"reference\": \"63741784cd7b9967975eec610b256eed3ede022b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/finder/zipball/63741784cd7b9967975eec610b256eed3ede022b\",\n                \"reference\": \"63741784cd7b9967975eec610b256eed3ede022b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1|^3\",\n                \"symfony/polyfill-php80\": \"^1.16\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Finder\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Finds files and directories via an intuitive fluent interface\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/finder/tree/v5.4.45\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-28T13:32:08+00:00\"\n        },\n        {\n            \"name\": \"symfony/http-foundation\",\n            \"version\": \"v5.4.48\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/http-foundation.git\",\n                \"reference\": \"3f38b8af283b830e1363acd79e5bc3412d055341\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/http-foundation/zipball/3f38b8af283b830e1363acd79e5bc3412d055341\",\n                \"reference\": \"3f38b8af283b830e1363acd79e5bc3412d055341\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1|^3\",\n                \"symfony/polyfill-mbstring\": \"~1.1\",\n                \"symfony/polyfill-php80\": \"^1.16\"\n            },\n            \"require-dev\": {\n                \"predis/predis\": \"^1.0|^2.0\",\n                \"symfony/cache\": \"^4.4|^5.0|^6.0\",\n                \"symfony/dependency-injection\": \"^5.4|^6.0\",\n                \"symfony/expression-language\": \"^4.4|^5.0|^6.0\",\n                \"symfony/http-kernel\": \"^5.4.12|^6.0.12|^6.1.4\",\n                \"symfony/mime\": \"^4.4|^5.0|^6.0\",\n                \"symfony/rate-limiter\": \"^5.2|^6.0\"\n            },\n            \"suggest\": {\n                \"symfony/mime\": \"To use the file extension guesser\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\HttpFoundation\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Defines an object-oriented layer for the HTTP specification\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/http-foundation/tree/v5.4.48\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-13T18:58:02+00:00\"\n        },\n        {\n            \"name\": \"symfony/http-kernel\",\n            \"version\": \"v5.4.48\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/http-kernel.git\",\n                \"reference\": \"c2dbfc92b851404567160d1ecf3fb7d9b7bde9b0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/http-kernel/zipball/c2dbfc92b851404567160d1ecf3fb7d9b7bde9b0\",\n                \"reference\": \"c2dbfc92b851404567160d1ecf3fb7d9b7bde9b0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/log\": \"^1|^2\",\n                \"symfony/deprecation-contracts\": \"^2.1|^3\",\n                \"symfony/error-handler\": \"^4.4|^5.0|^6.0\",\n                \"symfony/event-dispatcher\": \"^5.0|^6.0\",\n                \"symfony/http-foundation\": \"^5.4.21|^6.2.7\",\n                \"symfony/polyfill-ctype\": \"^1.8\",\n                \"symfony/polyfill-php73\": \"^1.9\",\n                \"symfony/polyfill-php80\": \"^1.16\"\n            },\n            \"conflict\": {\n                \"symfony/browser-kit\": \"<5.4\",\n                \"symfony/cache\": \"<5.0\",\n                \"symfony/config\": \"<5.0\",\n                \"symfony/console\": \"<4.4\",\n                \"symfony/dependency-injection\": \"<5.3\",\n                \"symfony/doctrine-bridge\": \"<5.0\",\n                \"symfony/form\": \"<5.0\",\n                \"symfony/http-client\": \"<5.0\",\n                \"symfony/mailer\": \"<5.0\",\n                \"symfony/messenger\": \"<5.0\",\n                \"symfony/translation\": \"<5.0\",\n                \"symfony/twig-bridge\": \"<5.0\",\n                \"symfony/validator\": \"<5.0\",\n                \"twig/twig\": \"<2.13\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0|2.0\"\n            },\n            \"require-dev\": {\n                \"psr/cache\": \"^1.0|^2.0|^3.0\",\n                \"symfony/browser-kit\": \"^5.4|^6.0\",\n                \"symfony/config\": \"^5.0|^6.0\",\n                \"symfony/console\": \"^4.4|^5.0|^6.0\",\n                \"symfony/css-selector\": \"^4.4|^5.0|^6.0\",\n                \"symfony/dependency-injection\": \"^5.3|^6.0\",\n                \"symfony/dom-crawler\": \"^4.4|^5.0|^6.0\",\n                \"symfony/expression-language\": \"^4.4|^5.0|^6.0\",\n                \"symfony/finder\": \"^4.4|^5.0|^6.0\",\n                \"symfony/http-client-contracts\": \"^1.1|^2|^3\",\n                \"symfony/process\": \"^4.4|^5.0|^6.0\",\n                \"symfony/routing\": \"^4.4|^5.0|^6.0\",\n                \"symfony/stopwatch\": \"^4.4|^5.0|^6.0\",\n                \"symfony/translation\": \"^4.4|^5.0|^6.0\",\n                \"symfony/translation-contracts\": \"^1.1|^2|^3\",\n                \"symfony/var-dumper\": \"^4.4.31|^5.4\",\n                \"twig/twig\": \"^2.13|^3.0.4\"\n            },\n            \"suggest\": {\n                \"symfony/browser-kit\": \"\",\n                \"symfony/config\": \"\",\n                \"symfony/console\": \"\",\n                \"symfony/dependency-injection\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\HttpKernel\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides a structured process for converting a Request into a Response\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/http-kernel/tree/v5.4.48\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-27T12:43:17+00:00\"\n        },\n        {\n            \"name\": \"symfony/mailer\",\n            \"version\": \"v6.0.19\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/mailer.git\",\n                \"reference\": \"cd60799210c488f545ddde2444dc1aa548322872\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/mailer/zipball/cd60799210c488f545ddde2444dc1aa548322872\",\n                \"reference\": \"cd60799210c488f545ddde2444dc1aa548322872\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"egulias/email-validator\": \"^2.1.10|^3|^4\",\n                \"php\": \">=8.0.2\",\n                \"psr/event-dispatcher\": \"^1\",\n                \"psr/log\": \"^1|^2|^3\",\n                \"symfony/event-dispatcher\": \"^5.4|^6.0\",\n                \"symfony/mime\": \"^5.4|^6.0\",\n                \"symfony/service-contracts\": \"^1.1|^2|^3\"\n            },\n            \"conflict\": {\n                \"symfony/http-kernel\": \"<5.4\"\n            },\n            \"require-dev\": {\n                \"symfony/http-client-contracts\": \"^1.1|^2|^3\",\n                \"symfony/messenger\": \"^5.4|^6.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Mailer\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Helps sending emails\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/mailer/tree/v6.0.19\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-01-11T11:50:03+00:00\"\n        },\n        {\n            \"name\": \"symfony/mime\",\n            \"version\": \"v5.4.45\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/mime.git\",\n                \"reference\": \"8c1b9b3e5b52981551fc6044539af1d974e39064\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/mime/zipball/8c1b9b3e5b52981551fc6044539af1d974e39064\",\n                \"reference\": \"8c1b9b3e5b52981551fc6044539af1d974e39064\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1|^3\",\n                \"symfony/polyfill-intl-idn\": \"^1.10\",\n                \"symfony/polyfill-mbstring\": \"^1.0\",\n                \"symfony/polyfill-php80\": \"^1.16\"\n            },\n            \"conflict\": {\n                \"egulias/email-validator\": \"~3.0.0\",\n                \"phpdocumentor/reflection-docblock\": \"<3.2.2\",\n                \"phpdocumentor/type-resolver\": \"<1.4.0\",\n                \"symfony/mailer\": \"<4.4\",\n                \"symfony/serializer\": \"<5.4.35|>=6,<6.3.12|>=6.4,<6.4.3\"\n            },\n            \"require-dev\": {\n                \"egulias/email-validator\": \"^2.1.10|^3.1|^4\",\n                \"phpdocumentor/reflection-docblock\": \"^3.0|^4.0|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0|^6.0\",\n                \"symfony/process\": \"^5.4|^6.4\",\n                \"symfony/property-access\": \"^4.4|^5.1|^6.0\",\n                \"symfony/property-info\": \"^4.4|^5.1|^6.0\",\n                \"symfony/serializer\": \"^5.4.35|~6.3.12|^6.4.3\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Mime\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Allows manipulating MIME messages\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"mime\",\n                \"mime-type\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/mime/tree/v5.4.45\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-10-23T20:18:32+00:00\"\n        },\n        {\n            \"name\": \"symfony/options-resolver\",\n            \"version\": \"v6.0.19\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/options-resolver.git\",\n                \"reference\": \"6a180d1c45e0d9797470ca9eb46215692de00fa3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/options-resolver/zipball/6a180d1c45e0d9797470ca9eb46215692de00fa3\",\n                \"reference\": \"6a180d1c45e0d9797470ca9eb46215692de00fa3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.2\",\n                \"symfony/deprecation-contracts\": \"^2.1|^3\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\OptionsResolver\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides an improved replacement for the array_replace PHP function\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"config\",\n                \"configuration\",\n                \"options\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/options-resolver/tree/v6.0.19\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-01-01T08:36:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-ctype\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-ctype.git\",\n                \"reference\": \"a3cc8b044a6ea513310cbd48ef7333b384945638\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-ctype/zipball/a3cc8b044a6ea513310cbd48ef7333b384945638\",\n                \"reference\": \"a3cc8b044a6ea513310cbd48ef7333b384945638\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"provide\": {\n                \"ext-ctype\": \"*\"\n            },\n            \"suggest\": {\n                \"ext-ctype\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Ctype\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Gert de Pagter\",\n                    \"email\": \"BackEndTea@gmail.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for ctype functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"ctype\",\n                \"polyfill\",\n                \"portable\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-ctype/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-iconv\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-iconv.git\",\n                \"reference\": \"48becf00c920479ca2e910c22a5a39e5d47ca956\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-iconv/zipball/48becf00c920479ca2e910c22a5a39e5d47ca956\",\n                \"reference\": \"48becf00c920479ca2e910c22a5a39e5d47ca956\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"provide\": {\n                \"ext-iconv\": \"*\"\n            },\n            \"suggest\": {\n                \"ext-iconv\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Iconv\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for the Iconv extension\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"iconv\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-iconv/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-grapheme\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-grapheme.git\",\n                \"reference\": \"b9123926e3b7bc2f98c02ad54f6a4b02b91a8abe\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-grapheme/zipball/b9123926e3b7bc2f98c02ad54f6a4b02b91a8abe\",\n                \"reference\": \"b9123926e3b7bc2f98c02ad54f6a4b02b91a8abe\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Grapheme\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's grapheme_* functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"grapheme\",\n                \"intl\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-intl-grapheme/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-idn\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-idn.git\",\n                \"reference\": \"c36586dcf89a12315939e00ec9b4474adcb1d773\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-idn/zipball/c36586dcf89a12315939e00ec9b4474adcb1d773\",\n                \"reference\": \"c36586dcf89a12315939e00ec9b4474adcb1d773\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\",\n                \"symfony/polyfill-intl-normalizer\": \"^1.10\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Idn\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Laurent Bassin\",\n                    \"email\": \"laurent@bassin.info\"\n                },\n                {\n                    \"name\": \"Trevor Rowbotham\",\n                    \"email\": \"trevor.rowbotham@pm.me\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's idn_to_ascii and idn_to_utf8 functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"idn\",\n                \"intl\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-intl-idn/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-normalizer\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-normalizer.git\",\n                \"reference\": \"3833d7255cc303546435cb650316bff708a1c75c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-normalizer/zipball/3833d7255cc303546435cb650316bff708a1c75c\",\n                \"reference\": \"3833d7255cc303546435cb650316bff708a1c75c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Normalizer\\\\\": \"\"\n                },\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's Normalizer class and related functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"intl\",\n                \"normalizer\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-intl-normalizer/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-mbstring\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-mbstring.git\",\n                \"reference\": \"85181ba99b2345b0ef10ce42ecac37612d9fd341\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-mbstring/zipball/85181ba99b2345b0ef10ce42ecac37612d9fd341\",\n                \"reference\": \"85181ba99b2345b0ef10ce42ecac37612d9fd341\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"provide\": {\n                \"ext-mbstring\": \"*\"\n            },\n            \"suggest\": {\n                \"ext-mbstring\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Mbstring\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for the Mbstring extension\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"mbstring\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-mbstring/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php73\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php73.git\",\n                \"reference\": \"0f68c03565dcaaf25a890667542e8bd75fe7e5bb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php73/zipball/0f68c03565dcaaf25a890667542e8bd75fe7e5bb\",\n                \"reference\": \"0f68c03565dcaaf25a890667542e8bd75fe7e5bb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Php73\\\\\": \"\"\n                },\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 7.3+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-php73/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php80\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php80.git\",\n                \"reference\": \"60328e362d4c2c802a54fcbf04f9d3fb892b4cf8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php80/zipball/60328e362d4c2c802a54fcbf04f9d3fb892b4cf8\",\n                \"reference\": \"60328e362d4c2c802a54fcbf04f9d3fb892b4cf8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Php80\\\\\": \"\"\n                },\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ion Bazan\",\n                    \"email\": \"ion.bazan@gmail.com\"\n                },\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-php80/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php81\",\n            \"version\": \"v1.31.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php81.git\",\n                \"reference\": \"4a4cfc2d253c21a5ad0e53071df248ed48c6ce5c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php81/zipball/4a4cfc2d253c21a5ad0e53071df248ed48c6ce5c\",\n                \"reference\": \"4a4cfc2d253c21a5ad0e53071df248ed48c6ce5c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Php81\\\\\": \"\"\n                },\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 8.1+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-php81/tree/v1.31.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-09T11:45:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/process\",\n            \"version\": \"v5.4.47\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/process.git\",\n                \"reference\": \"5d1662fb32ebc94f17ddb8d635454a776066733d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/process/zipball/5d1662fb32ebc94f17ddb8d635454a776066733d\",\n                \"reference\": \"5d1662fb32ebc94f17ddb8d635454a776066733d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-php80\": \"^1.16\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Process\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Executes commands in sub-processes\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/process/tree/v5.4.47\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-06T11:36:42+00:00\"\n        },\n        {\n            \"name\": \"symfony/routing\",\n            \"version\": \"v5.4.48\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/routing.git\",\n                \"reference\": \"dd08c19879a9b37ff14fd30dcbdf99a4cf045db1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/routing/zipball/dd08c19879a9b37ff14fd30dcbdf99a4cf045db1\",\n                \"reference\": \"dd08c19879a9b37ff14fd30dcbdf99a4cf045db1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1|^3\",\n                \"symfony/polyfill-php80\": \"^1.16\"\n            },\n            \"conflict\": {\n                \"doctrine/annotations\": \"<1.12\",\n                \"symfony/config\": \"<5.3\",\n                \"symfony/dependency-injection\": \"<4.4\",\n                \"symfony/yaml\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"doctrine/annotations\": \"^1.12|^2\",\n                \"psr/log\": \"^1|^2|^3\",\n                \"symfony/config\": \"^5.3|^6.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0|^6.0\",\n                \"symfony/expression-language\": \"^4.4|^5.0|^6.0\",\n                \"symfony/http-foundation\": \"^4.4|^5.0|^6.0\",\n                \"symfony/yaml\": \"^4.4|^5.0|^6.0\"\n            },\n            \"suggest\": {\n                \"symfony/config\": \"For using the all-in-one router or any loader\",\n                \"symfony/expression-language\": \"For using expression matching\",\n                \"symfony/http-foundation\": \"For using a Symfony Request object\",\n                \"symfony/yaml\": \"For using the YAML loader\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Routing\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Maps an HTTP request to a set of configuration variables\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"router\",\n                \"routing\",\n                \"uri\",\n                \"url\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/routing/tree/v5.4.48\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-12T18:20:21+00:00\"\n        },\n        {\n            \"name\": \"symfony/service-contracts\",\n            \"version\": \"v2.5.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/service-contracts.git\",\n                \"reference\": \"f37b419f7aea2e9abf10abd261832cace12e3300\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/service-contracts/zipball/f37b419f7aea2e9abf10abd261832cace12e3300\",\n                \"reference\": \"f37b419f7aea2e9abf10abd261832cace12e3300\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/container\": \"^1.1\",\n                \"symfony/deprecation-contracts\": \"^2.1|^3\"\n            },\n            \"conflict\": {\n                \"ext-psr\": \"<1.1|>=2\"\n            },\n            \"suggest\": {\n                \"symfony/service-implementation\": \"\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"2.5-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Contracts\\\\Service\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Generic abstractions related to writing services\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"abstractions\",\n                \"contracts\",\n                \"decoupling\",\n                \"interfaces\",\n                \"interoperability\",\n                \"standards\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/service-contracts/tree/v2.5.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-25T14:11:13+00:00\"\n        },\n        {\n            \"name\": \"symfony/string\",\n            \"version\": \"v6.0.19\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/string.git\",\n                \"reference\": \"d9e72497367c23e08bf94176d2be45b00a9d232a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/string/zipball/d9e72497367c23e08bf94176d2be45b00a9d232a\",\n                \"reference\": \"d9e72497367c23e08bf94176d2be45b00a9d232a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.2\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-intl-grapheme\": \"~1.0\",\n                \"symfony/polyfill-intl-normalizer\": \"~1.0\",\n                \"symfony/polyfill-mbstring\": \"~1.0\"\n            },\n            \"conflict\": {\n                \"symfony/translation-contracts\": \"<2.0\"\n            },\n            \"require-dev\": {\n                \"symfony/error-handler\": \"^5.4|^6.0\",\n                \"symfony/http-client\": \"^5.4|^6.0\",\n                \"symfony/translation-contracts\": \"^2.0|^3.0\",\n                \"symfony/var-exporter\": \"^5.4|^6.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"Resources/functions.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\String\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides an object-oriented API to strings and deals with bytes, UTF-8 code points and grapheme clusters in a unified way\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"grapheme\",\n                \"i18n\",\n                \"string\",\n                \"unicode\",\n                \"utf-8\",\n                \"utf8\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/string/tree/v6.0.19\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-01-01T08:36:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/translation\",\n            \"version\": \"v6.0.19\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/translation.git\",\n                \"reference\": \"9c24b3fdbbe9fb2ef3a6afd8bbaadfd72dad681f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/translation/zipball/9c24b3fdbbe9fb2ef3a6afd8bbaadfd72dad681f\",\n                \"reference\": \"9c24b3fdbbe9fb2ef3a6afd8bbaadfd72dad681f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.2\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/translation-contracts\": \"^2.3|^3.0\"\n            },\n            \"conflict\": {\n                \"symfony/config\": \"<5.4\",\n                \"symfony/console\": \"<5.4\",\n                \"symfony/dependency-injection\": \"<5.4\",\n                \"symfony/http-kernel\": \"<5.4\",\n                \"symfony/twig-bundle\": \"<5.4\",\n                \"symfony/yaml\": \"<5.4\"\n            },\n            \"provide\": {\n                \"symfony/translation-implementation\": \"2.3|3.0\"\n            },\n            \"require-dev\": {\n                \"psr/log\": \"^1|^2|^3\",\n                \"symfony/config\": \"^5.4|^6.0\",\n                \"symfony/console\": \"^5.4|^6.0\",\n                \"symfony/dependency-injection\": \"^5.4|^6.0\",\n                \"symfony/finder\": \"^5.4|^6.0\",\n                \"symfony/http-client-contracts\": \"^1.1|^2.0|^3.0\",\n                \"symfony/http-kernel\": \"^5.4|^6.0\",\n                \"symfony/intl\": \"^5.4|^6.0\",\n                \"symfony/polyfill-intl-icu\": \"^1.21\",\n                \"symfony/service-contracts\": \"^1.1.2|^2|^3\",\n                \"symfony/yaml\": \"^5.4|^6.0\"\n            },\n            \"suggest\": {\n                \"psr/log-implementation\": \"To use logging capability in translator\",\n                \"symfony/config\": \"\",\n                \"symfony/yaml\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"Resources/functions.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Translation\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides tools to internationalize your application\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/translation/tree/v6.0.19\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-01-01T08:36:10+00:00\"\n        },\n        {\n            \"name\": \"symfony/translation-contracts\",\n            \"version\": \"v3.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/translation-contracts.git\",\n                \"reference\": \"acbfbb274e730e5a0236f619b6168d9dedb3e282\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/translation-contracts/zipball/acbfbb274e730e5a0236f619b6168d9dedb3e282\",\n                \"reference\": \"acbfbb274e730e5a0236f619b6168d9dedb3e282\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.2\"\n            },\n            \"suggest\": {\n                \"symfony/translation-implementation\": \"\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.0-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Contracts\\\\Translation\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Generic abstractions related to translation\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"abstractions\",\n                \"contracts\",\n                \"decoupling\",\n                \"interfaces\",\n                \"interoperability\",\n                \"standards\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/translation-contracts/tree/v3.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-06-27T17:10:44+00:00\"\n        },\n        {\n            \"name\": \"symfony/var-dumper\",\n            \"version\": \"v5.4.48\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/var-dumper.git\",\n                \"reference\": \"42f18f170aa86d612c3559cfb3bd11a375df32c8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/var-dumper/zipball/42f18f170aa86d612c3559cfb3bd11a375df32c8\",\n                \"reference\": \"42f18f170aa86d612c3559cfb3bd11a375df32c8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php80\": \"^1.16\"\n            },\n            \"conflict\": {\n                \"symfony/console\": \"<4.4\"\n            },\n            \"require-dev\": {\n                \"ext-iconv\": \"*\",\n                \"symfony/console\": \"^4.4|^5.0|^6.0\",\n                \"symfony/http-kernel\": \"^4.4|^5.0|^6.0\",\n                \"symfony/process\": \"^4.4|^5.0|^6.0\",\n                \"symfony/uid\": \"^5.1|^6.0\",\n                \"twig/twig\": \"^2.13|^3.0.4\"\n            },\n            \"suggest\": {\n                \"ext-iconv\": \"To convert non-UTF-8 strings to UTF-8 (or symfony/polyfill-iconv in case ext-iconv cannot be used).\",\n                \"ext-intl\": \"To show region name in time zone dump\",\n                \"symfony/console\": \"To use the ServerDumpCommand and/or the bin/var-dump-server script\"\n            },\n            \"bin\": [\n                \"Resources/bin/var-dump-server\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"Resources/functions/dump.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\VarDumper\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides mechanisms for walking through any arbitrary PHP variable\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"debug\",\n                \"dump\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/var-dumper/tree/v5.4.48\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-08T15:21:10+00:00\"\n        },\n        {\n            \"name\": \"tightenco/collect\",\n            \"version\": \"v9.52.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/tighten/collect.git\",\n                \"reference\": \"b15143cd11fe01a700fcc449df61adc64452fa6d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/tighten/collect/zipball/b15143cd11fe01a700fcc449df61adc64452fa6d\",\n                \"reference\": \"b15143cd11fe01a700fcc449df61adc64452fa6d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^8.0\",\n                \"symfony/var-dumper\": \"^3.4 || ^4.0 || ^5.0 || ^6.0\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"^1.0\",\n                \"nesbot/carbon\": \"^2.23.0\",\n                \"phpunit/phpunit\": \"^8.3\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/Collect/Support/helpers.php\",\n                    \"src/Collect/Support/alias.php\"\n                ],\n                \"psr-4\": {\n                    \"Tightenco\\\\Collect\\\\\": \"src/Collect\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Taylor Otwell\",\n                    \"email\": \"taylorotwell@gmail.com\"\n                }\n            ],\n            \"description\": \"Collect - Illuminate Collections as a separate package.\",\n            \"keywords\": [\n                \"collection\",\n                \"laravel\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/tighten/collect/issues\",\n                \"source\": \"https://github.com/tighten/collect/tree/v9.52.7\"\n            },\n            \"abandoned\": \"illuminate/collections\",\n            \"time\": \"2023-04-14T21:51:36+00:00\"\n        },\n        {\n            \"name\": \"tijsverkoyen/css-to-inline-styles\",\n            \"version\": \"v2.2.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/tijsverkoyen/CssToInlineStyles.git\",\n                \"reference\": \"83ee6f38df0a63106a9e4536e3060458b74ccedb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/tijsverkoyen/CssToInlineStyles/zipball/83ee6f38df0a63106a9e4536e3060458b74ccedb\",\n                \"reference\": \"83ee6f38df0a63106a9e4536e3060458b74ccedb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"php\": \"^5.5 || ^7.0 || ^8.0\",\n                \"symfony/css-selector\": \"^2.7 || ^3.0 || ^4.0 || ^5.0 || ^6.0 || ^7.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.8.35 || ^5.7 || ^6.0 || ^7.5 || ^8.5.21 || ^9.5.10\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"TijsVerkoyen\\\\CssToInlineStyles\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Tijs Verkoyen\",\n                    \"email\": \"css_to_inline_styles@verkoyen.eu\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"CssToInlineStyles is a class that enables you to convert HTML-pages/files into HTML-pages/files with inline styles. This is very useful when you're sending emails.\",\n            \"homepage\": \"https://github.com/tijsverkoyen/CssToInlineStyles\",\n            \"support\": {\n                \"issues\": \"https://github.com/tijsverkoyen/CssToInlineStyles/issues\",\n                \"source\": \"https://github.com/tijsverkoyen/CssToInlineStyles/tree/v2.2.7\"\n            },\n            \"time\": \"2023-12-08T13:03:43+00:00\"\n        },\n        {\n            \"name\": \"vlucas/phpdotenv\",\n            \"version\": \"v5.6.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/vlucas/phpdotenv.git\",\n                \"reference\": \"a59a13791077fe3d44f90e7133eb68e7d22eaff2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/vlucas/phpdotenv/zipball/a59a13791077fe3d44f90e7133eb68e7d22eaff2\",\n                \"reference\": \"a59a13791077fe3d44f90e7133eb68e7d22eaff2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-pcre\": \"*\",\n                \"graham-campbell/result-type\": \"^1.1.3\",\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"phpoption/phpoption\": \"^1.9.3\",\n                \"symfony/polyfill-ctype\": \"^1.24\",\n                \"symfony/polyfill-mbstring\": \"^1.24\",\n                \"symfony/polyfill-php80\": \"^1.24\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"ext-filter\": \"*\",\n                \"phpunit/phpunit\": \"^8.5.34 || ^9.6.13 || ^10.4.2\"\n            },\n            \"suggest\": {\n                \"ext-filter\": \"Required to use the boolean validator.\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                },\n                \"branch-alias\": {\n                    \"dev-master\": \"5.6-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Dotenv\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Vance Lucas\",\n                    \"email\": \"vance@vancelucas.com\",\n                    \"homepage\": \"https://github.com/vlucas\"\n                }\n            ],\n            \"description\": \"Loads environment variables from `.env` to `getenv()`, `$_ENV` and `$_SERVER` automagically.\",\n            \"keywords\": [\n                \"dotenv\",\n                \"env\",\n                \"environment\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/vlucas/phpdotenv/issues\",\n                \"source\": \"https://github.com/vlucas/phpdotenv/tree/v5.6.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/vlucas/phpdotenv\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-07-20T21:52:34+00:00\"\n        },\n        {\n            \"name\": \"voku/portable-ascii\",\n            \"version\": \"1.6.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/voku/portable-ascii.git\",\n                \"reference\": \"87337c91b9dfacee02452244ee14ab3c43bc485a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/voku/portable-ascii/zipball/87337c91b9dfacee02452244ee14ab3c43bc485a\",\n                \"reference\": \"87337c91b9dfacee02452244ee14ab3c43bc485a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.0.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"~6.0 || ~7.0 || ~9.0\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"Use Intl for transliterator_transliterate() support\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"voku\\\\\": \"src/voku/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Lars Moelleken\",\n                    \"homepage\": \"http://www.moelleken.org/\"\n                }\n            ],\n            \"description\": \"Portable ASCII library - performance optimized (ascii) string functions for php.\",\n            \"homepage\": \"https://github.com/voku/portable-ascii\",\n            \"keywords\": [\n                \"ascii\",\n                \"clean\",\n                \"php\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/voku/portable-ascii/issues\",\n                \"source\": \"https://github.com/voku/portable-ascii/tree/1.6.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.paypal.me/moelleken\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/voku\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://opencollective.com/portable-ascii\",\n                    \"type\": \"open_collective\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/voku\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/voku/portable-ascii\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-01-24T18:55:24+00:00\"\n        },\n        {\n            \"name\": \"webmozart/assert\",\n            \"version\": \"1.11.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/webmozarts/assert.git\",\n                \"reference\": \"11cb2199493b2f8a3b53e7f19068fc6aac760991\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/webmozarts/assert/zipball/11cb2199493b2f8a3b53e7f19068fc6aac760991\",\n                \"reference\": \"11cb2199493b2f8a3b53e7f19068fc6aac760991\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"conflict\": {\n                \"phpstan/phpstan\": \"<0.12.20\",\n                \"vimeo/psalm\": \"<4.6.1 || 4.6.2\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5.13\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.10-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Webmozart\\\\Assert\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@gmail.com\"\n                }\n            ],\n            \"description\": \"Assertions to validate method input/output with nice error messages.\",\n            \"keywords\": [\n                \"assert\",\n                \"check\",\n                \"validate\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/webmozarts/assert/issues\",\n                \"source\": \"https://github.com/webmozarts/assert/tree/1.11.0\"\n            },\n            \"time\": \"2022-06-03T18:03:27+00:00\"\n        }\n    ],\n    \"packages-dev\": [\n        {\n            \"name\": \"barryvdh/laravel-ide-helper\",\n            \"version\": \"v2.14.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/barryvdh/laravel-ide-helper.git\",\n                \"reference\": \"485c756f6cff408d6b273274c5e86112c3973d98\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/barryvdh/laravel-ide-helper/zipball/485c756f6cff408d6b273274c5e86112c3973d98\",\n                \"reference\": \"485c756f6cff408d6b273274c5e86112c3973d98\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"barryvdh/reflection-docblock\": \"^2.0.6\",\n                \"composer/class-map-generator\": \"^1.0\",\n                \"doctrine/dbal\": \"^2.6 || ^3\",\n                \"ext-json\": \"*\",\n                \"illuminate/console\": \"^8 || ^9 || ^10\",\n                \"illuminate/filesystem\": \"^8 || ^9 || ^10\",\n                \"illuminate/support\": \"^8 || ^9 || ^10\",\n                \"nikic/php-parser\": \"^4.18 || ^5\",\n                \"php\": \"^7.3 || ^8.0\",\n                \"phpdocumentor/type-resolver\": \"^1.1.0\"\n            },\n            \"require-dev\": {\n                \"ext-pdo_sqlite\": \"*\",\n                \"friendsofphp/php-cs-fixer\": \"^2\",\n                \"illuminate/config\": \"^8 || ^9 || ^10\",\n                \"illuminate/view\": \"^8 || ^9 || ^10\",\n                \"mockery/mockery\": \"^1.4\",\n                \"orchestra/testbench\": \"^6 || ^7 || ^8\",\n                \"phpunit/phpunit\": \"^8.5 || ^9\",\n                \"spatie/phpunit-snapshot-assertions\": \"^3 || ^4\",\n                \"vimeo/psalm\": \"^5.4\"\n            },\n            \"suggest\": {\n                \"illuminate/events\": \"Required for automatic helper generation (^6|^7|^8|^9|^10).\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.14-dev\"\n                },\n                \"laravel\": {\n                    \"providers\": [\n                        \"Barryvdh\\\\LaravelIdeHelper\\\\IdeHelperServiceProvider\"\n                    ]\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Barryvdh\\\\LaravelIdeHelper\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Barry vd. Heuvel\",\n                    \"email\": \"barryvdh@gmail.com\"\n                }\n            ],\n            \"description\": \"Laravel IDE Helper, generates correct PHPDocs for all Facade classes, to improve auto-completion.\",\n            \"keywords\": [\n                \"autocomplete\",\n                \"codeintel\",\n                \"helper\",\n                \"ide\",\n                \"laravel\",\n                \"netbeans\",\n                \"phpdoc\",\n                \"phpstorm\",\n                \"sublime\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/barryvdh/laravel-ide-helper/issues\",\n                \"source\": \"https://github.com/barryvdh/laravel-ide-helper/tree/v2.14.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://fruitcake.nl\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/barryvdh\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-02-05T08:16:36+00:00\"\n        },\n        {\n            \"name\": \"barryvdh/reflection-docblock\",\n            \"version\": \"v2.1.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/barryvdh/ReflectionDocBlock.git\",\n                \"reference\": \"c6fad15f7c878be21650c51e1f841bca7e49752e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/barryvdh/ReflectionDocBlock/zipball/c6fad15f7c878be21650c51e1f841bca7e49752e\",\n                \"reference\": \"c6fad15f7c878be21650c51e1f841bca7e49752e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5.14|^9\"\n            },\n            \"suggest\": {\n                \"dflydev/markdown\": \"~1.0\",\n                \"erusev/parsedown\": \"~1.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-0\": {\n                    \"Barryvdh\": [\n                        \"src/\"\n                    ]\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mike van Riel\",\n                    \"email\": \"mike.vanriel@naenius.com\"\n                }\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/barryvdh/ReflectionDocBlock/tree/v2.1.3\"\n            },\n            \"time\": \"2024-10-23T11:41:03+00:00\"\n        },\n        {\n            \"name\": \"composer/class-map-generator\",\n            \"version\": \"1.5.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/composer/class-map-generator.git\",\n                \"reference\": \"4b0a223cf5be7c9ee7e0ef1bc7db42b4a97c9915\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/composer/class-map-generator/zipball/4b0a223cf5be7c9ee7e0ef1bc7db42b4a97c9915\",\n                \"reference\": \"4b0a223cf5be7c9ee7e0ef1bc7db42b4a97c9915\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"composer/pcre\": \"^2.1 || ^3.1\",\n                \"php\": \"^7.2 || ^8.0\",\n                \"symfony/finder\": \"^4.4 || ^5.3 || ^6 || ^7\"\n            },\n            \"require-dev\": {\n                \"phpstan/phpstan\": \"^1.12 || ^2\",\n                \"phpstan/phpstan-deprecation-rules\": \"^1 || ^2\",\n                \"phpstan/phpstan-phpunit\": \"^1 || ^2\",\n                \"phpstan/phpstan-strict-rules\": \"^1.1 || ^2\",\n                \"phpunit/phpunit\": \"^8\",\n                \"symfony/filesystem\": \"^5.4 || ^6\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Composer\\\\ClassMapGenerator\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jordi Boggiano\",\n                    \"email\": \"j.boggiano@seld.be\",\n                    \"homepage\": \"https://seld.be\"\n                }\n            ],\n            \"description\": \"Utilities to scan PHP code and generate class maps.\",\n            \"keywords\": [\n                \"classmap\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/composer/class-map-generator/issues\",\n                \"source\": \"https://github.com/composer/class-map-generator/tree/1.5.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://packagist.com\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/composer\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/composer/composer\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-25T16:11:06+00:00\"\n        },\n        {\n            \"name\": \"composer/pcre\",\n            \"version\": \"3.3.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/composer/pcre.git\",\n                \"reference\": \"b2bed4734f0cc156ee1fe9c0da2550420d99a21e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/composer/pcre/zipball/b2bed4734f0cc156ee1fe9c0da2550420d99a21e\",\n                \"reference\": \"b2bed4734f0cc156ee1fe9c0da2550420d99a21e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.4 || ^8.0\"\n            },\n            \"conflict\": {\n                \"phpstan/phpstan\": \"<1.11.10\"\n            },\n            \"require-dev\": {\n                \"phpstan/phpstan\": \"^1.12 || ^2\",\n                \"phpstan/phpstan-strict-rules\": \"^1 || ^2\",\n                \"phpunit/phpunit\": \"^8 || ^9\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.x-dev\"\n                },\n                \"phpstan\": {\n                    \"includes\": [\n                        \"extension.neon\"\n                    ]\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Composer\\\\Pcre\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jordi Boggiano\",\n                    \"email\": \"j.boggiano@seld.be\",\n                    \"homepage\": \"http://seld.be\"\n                }\n            ],\n            \"description\": \"PCRE wrapping library that offers type-safe preg_* replacements.\",\n            \"keywords\": [\n                \"PCRE\",\n                \"preg\",\n                \"regex\",\n                \"regular expression\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/composer/pcre/issues\",\n                \"source\": \"https://github.com/composer/pcre/tree/3.3.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://packagist.com\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/composer\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/composer/composer\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-12T16:29:46+00:00\"\n        },\n        {\n            \"name\": \"doctrine/cache\",\n            \"version\": \"2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/cache.git\",\n                \"reference\": \"1ca8f21980e770095a31456042471a57bc4c68fb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/cache/zipball/1ca8f21980e770095a31456042471a57bc4c68fb\",\n                \"reference\": \"1ca8f21980e770095a31456042471a57bc4c68fb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"~7.1 || ^8.0\"\n            },\n            \"conflict\": {\n                \"doctrine/common\": \">2.2,<2.4\"\n            },\n            \"require-dev\": {\n                \"cache/integration-tests\": \"dev-master\",\n                \"doctrine/coding-standard\": \"^9\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.5\",\n                \"psr/cache\": \"^1.0 || ^2.0 || ^3.0\",\n                \"symfony/cache\": \"^4.4 || ^5.4 || ^6\",\n                \"symfony/var-exporter\": \"^4.4 || ^5.4 || ^6\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\Cache\\\\\": \"lib/Doctrine/Common/Cache\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                }\n            ],\n            \"description\": \"PHP Doctrine Cache library is a popular cache implementation that supports many different drivers such as redis, memcache, apc, mongodb and others.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/cache.html\",\n            \"keywords\": [\n                \"abstraction\",\n                \"apcu\",\n                \"cache\",\n                \"caching\",\n                \"couchdb\",\n                \"memcached\",\n                \"php\",\n                \"redis\",\n                \"xcache\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/cache/issues\",\n                \"source\": \"https://github.com/doctrine/cache/tree/2.2.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fcache\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-05-20T20:07:39+00:00\"\n        },\n        {\n            \"name\": \"doctrine/dbal\",\n            \"version\": \"3.9.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/dbal.git\",\n                \"reference\": \"61446f07fcb522414d6cfd8b1c3e5f9e18c579ba\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/dbal/zipball/61446f07fcb522414d6cfd8b1c3e5f9e18c579ba\",\n                \"reference\": \"61446f07fcb522414d6cfd8b1c3e5f9e18c579ba\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"composer-runtime-api\": \"^2\",\n                \"doctrine/cache\": \"^1.11|^2.0\",\n                \"doctrine/deprecations\": \"^0.5.3|^1\",\n                \"doctrine/event-manager\": \"^1|^2\",\n                \"php\": \"^7.4 || ^8.0\",\n                \"psr/cache\": \"^1|^2|^3\",\n                \"psr/log\": \"^1|^2|^3\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"12.0.0\",\n                \"fig/log-test\": \"^1\",\n                \"jetbrains/phpstorm-stubs\": \"2023.1\",\n                \"phpstan/phpstan\": \"1.12.6\",\n                \"phpstan/phpstan-strict-rules\": \"^1.6\",\n                \"phpunit/phpunit\": \"9.6.20\",\n                \"psalm/plugin-phpunit\": \"0.18.4\",\n                \"slevomat/coding-standard\": \"8.13.1\",\n                \"squizlabs/php_codesniffer\": \"3.10.2\",\n                \"symfony/cache\": \"^5.4|^6.0|^7.0\",\n                \"symfony/console\": \"^4.4|^5.4|^6.0|^7.0\",\n                \"vimeo/psalm\": \"4.30.0\"\n            },\n            \"suggest\": {\n                \"symfony/console\": \"For helpful console commands such as SQL execution and import of files.\"\n            },\n            \"bin\": [\n                \"bin/doctrine-dbal\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\DBAL\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                }\n            ],\n            \"description\": \"Powerful PHP database abstraction layer (DBAL) with many features for database schema introspection and management.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/dbal.html\",\n            \"keywords\": [\n                \"abstraction\",\n                \"database\",\n                \"db2\",\n                \"dbal\",\n                \"mariadb\",\n                \"mssql\",\n                \"mysql\",\n                \"oci8\",\n                \"oracle\",\n                \"pdo\",\n                \"pgsql\",\n                \"postgresql\",\n                \"queryobject\",\n                \"sasql\",\n                \"sql\",\n                \"sqlite\",\n                \"sqlserver\",\n                \"sqlsrv\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/dbal/issues\",\n                \"source\": \"https://github.com/doctrine/dbal/tree/3.9.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fdbal\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-10-10T17:56:43+00:00\"\n        },\n        {\n            \"name\": \"doctrine/deprecations\",\n            \"version\": \"1.1.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/deprecations.git\",\n                \"reference\": \"31610dbb31faa98e6b5447b62340826f54fbc4e9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/deprecations/zipball/31610dbb31faa98e6b5447b62340826f54fbc4e9\",\n                \"reference\": \"31610dbb31faa98e6b5447b62340826f54fbc4e9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^9 || ^12\",\n                \"phpstan/phpstan\": \"1.4.10 || 2.0.3\",\n                \"phpstan/phpstan-phpunit\": \"^1.0 || ^2\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.5\",\n                \"psr/log\": \"^1 || ^2 || ^3\"\n            },\n            \"suggest\": {\n                \"psr/log\": \"Allows logging deprecations via PSR-3 logger implementation\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Deprecations\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"A small layer on top of trigger_error(E_USER_DEPRECATED) or PSR-3 logging with options to disable all deprecations or selectively for packages.\",\n            \"homepage\": \"https://www.doctrine-project.org/\",\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/deprecations/issues\",\n                \"source\": \"https://github.com/doctrine/deprecations/tree/1.1.4\"\n            },\n            \"time\": \"2024-12-07T21:18:45+00:00\"\n        },\n        {\n            \"name\": \"doctrine/event-manager\",\n            \"version\": \"1.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/event-manager.git\",\n                \"reference\": \"95aa4cb529f1e96576f3fda9f5705ada4056a520\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/event-manager/zipball/95aa4cb529f1e96576f3fda9f5705ada4056a520\",\n                \"reference\": \"95aa4cb529f1e96576f3fda9f5705ada4056a520\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/deprecations\": \"^0.5.3 || ^1\",\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"conflict\": {\n                \"doctrine/common\": \"<2.9\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^9 || ^10\",\n                \"phpstan/phpstan\": \"~1.4.10 || ^1.8.8\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.5\",\n                \"vimeo/psalm\": \"^4.24\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                },\n                {\n                    \"name\": \"Marco Pivetta\",\n                    \"email\": \"ocramius@gmail.com\"\n                }\n            ],\n            \"description\": \"The Doctrine Event Manager is a simple PHP event system that was built to be used with the various Doctrine projects.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/event-manager.html\",\n            \"keywords\": [\n                \"event\",\n                \"event dispatcher\",\n                \"event manager\",\n                \"event system\",\n                \"events\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/event-manager/issues\",\n                \"source\": \"https://github.com/doctrine/event-manager/tree/1.2.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Fevent-manager\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-10-12T20:51:15+00:00\"\n        },\n        {\n            \"name\": \"doctrine/instantiator\",\n            \"version\": \"1.5.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/instantiator.git\",\n                \"reference\": \"0a0fa9780f5d4e507415a065172d26a98d02047b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/instantiator/zipball/0a0fa9780f5d4e507415a065172d26a98d02047b\",\n                \"reference\": \"0a0fa9780f5d4e507415a065172d26a98d02047b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^9 || ^11\",\n                \"ext-pdo\": \"*\",\n                \"ext-phar\": \"*\",\n                \"phpbench/phpbench\": \"^0.16 || ^1\",\n                \"phpstan/phpstan\": \"^1.4\",\n                \"phpstan/phpstan-phpunit\": \"^1\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.5\",\n                \"vimeo/psalm\": \"^4.30 || ^5.4\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Instantiator\\\\\": \"src/Doctrine/Instantiator/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marco Pivetta\",\n                    \"email\": \"ocramius@gmail.com\",\n                    \"homepage\": \"https://ocramius.github.io/\"\n                }\n            ],\n            \"description\": \"A small, lightweight utility to instantiate objects in PHP without invoking their constructors\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/instantiator.html\",\n            \"keywords\": [\n                \"constructor\",\n                \"instantiate\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/instantiator/issues\",\n                \"source\": \"https://github.com/doctrine/instantiator/tree/1.5.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Finstantiator\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-12-30T00:15:36+00:00\"\n        },\n        {\n            \"name\": \"facade/flare-client-php\",\n            \"version\": \"1.10.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/facade/flare-client-php.git\",\n                \"reference\": \"213fa2c69e120bca4c51ba3e82ed1834ef3f41b8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/facade/flare-client-php/zipball/213fa2c69e120bca4c51ba3e82ed1834ef3f41b8\",\n                \"reference\": \"213fa2c69e120bca4c51ba3e82ed1834ef3f41b8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"facade/ignition-contracts\": \"~1.0\",\n                \"illuminate/pipeline\": \"^5.5|^6.0|^7.0|^8.0\",\n                \"php\": \"^7.1|^8.0\",\n                \"symfony/http-foundation\": \"^3.3|^4.1|^5.0\",\n                \"symfony/mime\": \"^3.4|^4.0|^5.1\",\n                \"symfony/var-dumper\": \"^3.4|^4.0|^5.0\"\n            },\n            \"require-dev\": {\n                \"friendsofphp/php-cs-fixer\": \"^2.14\",\n                \"phpunit/phpunit\": \"^7.5\",\n                \"spatie/phpunit-snapshot-assertions\": \"^2.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/helpers.php\"\n                ],\n                \"psr-4\": {\n                    \"Facade\\\\FlareClient\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"Send PHP errors to Flare\",\n            \"homepage\": \"https://github.com/facade/flare-client-php\",\n            \"keywords\": [\n                \"exception\",\n                \"facade\",\n                \"flare\",\n                \"reporting\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/facade/flare-client-php/issues\",\n                \"source\": \"https://github.com/facade/flare-client-php/tree/1.10.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/spatie\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2022-08-09T11:23:57+00:00\"\n        },\n        {\n            \"name\": \"facade/ignition\",\n            \"version\": \"2.17.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/facade/ignition.git\",\n                \"reference\": \"b4f5955825bb4b74cba0f94001761c46335c33e9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/facade/ignition/zipball/b4f5955825bb4b74cba0f94001761c46335c33e9\",\n                \"reference\": \"b4f5955825bb4b74cba0f94001761c46335c33e9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-curl\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"facade/flare-client-php\": \"^1.9.1\",\n                \"facade/ignition-contracts\": \"^1.0.2\",\n                \"illuminate/support\": \"^7.0|^8.0\",\n                \"monolog/monolog\": \"^2.0\",\n                \"php\": \"^7.2.5|^8.0\",\n                \"symfony/console\": \"^5.0\",\n                \"symfony/var-dumper\": \"^5.0\"\n            },\n            \"require-dev\": {\n                \"friendsofphp/php-cs-fixer\": \"^2.14\",\n                \"livewire/livewire\": \"^2.4\",\n                \"mockery/mockery\": \"^1.3\",\n                \"orchestra/testbench\": \"^5.0|^6.0\",\n                \"psalm/plugin-laravel\": \"^1.2\"\n            },\n            \"suggest\": {\n                \"laravel/telescope\": \"^3.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.x-dev\"\n                },\n                \"laravel\": {\n                    \"providers\": [\n                        \"Facade\\\\Ignition\\\\IgnitionServiceProvider\"\n                    ],\n                    \"aliases\": {\n                        \"Flare\": \"Facade\\\\Ignition\\\\Facades\\\\Flare\"\n                    }\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/helpers.php\"\n                ],\n                \"psr-4\": {\n                    \"Facade\\\\Ignition\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"A beautiful error page for Laravel applications.\",\n            \"homepage\": \"https://github.com/facade/ignition\",\n            \"keywords\": [\n                \"error\",\n                \"flare\",\n                \"laravel\",\n                \"page\"\n            ],\n            \"support\": {\n                \"docs\": \"https://flareapp.io/docs/ignition-for-laravel/introduction\",\n                \"forum\": \"https://twitter.com/flareappio\",\n                \"issues\": \"https://github.com/facade/ignition/issues\",\n                \"source\": \"https://github.com/facade/ignition\"\n            },\n            \"time\": \"2023-01-26T12:34:59+00:00\"\n        },\n        {\n            \"name\": \"facade/ignition-contracts\",\n            \"version\": \"1.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/facade/ignition-contracts.git\",\n                \"reference\": \"3c921a1cdba35b68a7f0ccffc6dffc1995b18267\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/facade/ignition-contracts/zipball/3c921a1cdba35b68a7f0ccffc6dffc1995b18267\",\n                \"reference\": \"3c921a1cdba35b68a7f0ccffc6dffc1995b18267\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3|^8.0\"\n            },\n            \"require-dev\": {\n                \"friendsofphp/php-cs-fixer\": \"^v2.15.8\",\n                \"phpunit/phpunit\": \"^9.3.11\",\n                \"vimeo/psalm\": \"^3.17.1\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Facade\\\\IgnitionContracts\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Freek Van der Herten\",\n                    \"email\": \"freek@spatie.be\",\n                    \"homepage\": \"https://flareapp.io\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Solution contracts for Ignition\",\n            \"homepage\": \"https://github.com/facade/ignition-contracts\",\n            \"keywords\": [\n                \"contracts\",\n                \"flare\",\n                \"ignition\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/facade/ignition-contracts/issues\",\n                \"source\": \"https://github.com/facade/ignition-contracts/tree/1.0.2\"\n            },\n            \"time\": \"2020-10-16T08:27:54+00:00\"\n        },\n        {\n            \"name\": \"fakerphp/faker\",\n            \"version\": \"v1.24.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/FakerPHP/Faker.git\",\n                \"reference\": \"e0ee18eb1e6dc3cda3ce9fd97e5a0689a88a64b5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/FakerPHP/Faker/zipball/e0ee18eb1e6dc3cda3ce9fd97e5a0689a88a64b5\",\n                \"reference\": \"e0ee18eb1e6dc3cda3ce9fd97e5a0689a88a64b5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.4 || ^8.0\",\n                \"psr/container\": \"^1.0 || ^2.0\",\n                \"symfony/deprecation-contracts\": \"^2.2 || ^3.0\"\n            },\n            \"conflict\": {\n                \"fzaninotto/faker\": \"*\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.4.1\",\n                \"doctrine/persistence\": \"^1.3 || ^2.0\",\n                \"ext-intl\": \"*\",\n                \"phpunit/phpunit\": \"^9.5.26\",\n                \"symfony/phpunit-bridge\": \"^5.4.16\"\n            },\n            \"suggest\": {\n                \"doctrine/orm\": \"Required to use Faker\\\\ORM\\\\Doctrine\",\n                \"ext-curl\": \"Required by Faker\\\\Provider\\\\Image to download images.\",\n                \"ext-dom\": \"Required by Faker\\\\Provider\\\\HtmlLorem for generating random HTML.\",\n                \"ext-iconv\": \"Required by Faker\\\\Provider\\\\ru_RU\\\\Text::realText() for generating real Russian text.\",\n                \"ext-mbstring\": \"Required for multibyte Unicode string functionality.\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Faker\\\\\": \"src/Faker/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"François Zaninotto\"\n                }\n            ],\n            \"description\": \"Faker is a PHP library that generates fake data for you.\",\n            \"keywords\": [\n                \"data\",\n                \"faker\",\n                \"fixtures\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/FakerPHP/Faker/issues\",\n                \"source\": \"https://github.com/FakerPHP/Faker/tree/v1.24.1\"\n            },\n            \"time\": \"2024-11-21T13:46:39+00:00\"\n        },\n        {\n            \"name\": \"filp/whoops\",\n            \"version\": \"2.16.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/filp/whoops.git\",\n                \"reference\": \"befcdc0e5dce67252aa6322d82424be928214fa2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/filp/whoops/zipball/befcdc0e5dce67252aa6322d82424be928214fa2\",\n                \"reference\": \"befcdc0e5dce67252aa6322d82424be928214fa2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\",\n                \"psr/log\": \"^1.0.1 || ^2.0 || ^3.0\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"^1.0\",\n                \"phpunit/phpunit\": \"^7.5.20 || ^8.5.8 || ^9.3.3\",\n                \"symfony/var-dumper\": \"^4.0 || ^5.0\"\n            },\n            \"suggest\": {\n                \"symfony/var-dumper\": \"Pretty print complex values better with var-dumper available\",\n                \"whoops/soap\": \"Formats errors as SOAP responses\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.7-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Whoops\\\\\": \"src/Whoops/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Filipe Dobreira\",\n                    \"homepage\": \"https://github.com/filp\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"php error handling for cool kids\",\n            \"homepage\": \"https://filp.github.io/whoops/\",\n            \"keywords\": [\n                \"error\",\n                \"exception\",\n                \"handling\",\n                \"library\",\n                \"throwable\",\n                \"whoops\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/filp/whoops/issues\",\n                \"source\": \"https://github.com/filp/whoops/tree/2.16.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/denis-sokolov\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-09-25T12:00:00+00:00\"\n        },\n        {\n            \"name\": \"hamcrest/hamcrest-php\",\n            \"version\": \"v2.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/hamcrest/hamcrest-php.git\",\n                \"reference\": \"8c3d0a3f6af734494ad8f6fbbee0ba92422859f3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/hamcrest/hamcrest-php/zipball/8c3d0a3f6af734494ad8f6fbbee0ba92422859f3\",\n                \"reference\": \"8c3d0a3f6af734494ad8f6fbbee0ba92422859f3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.3|^7.0|^8.0\"\n            },\n            \"replace\": {\n                \"cordoval/hamcrest-php\": \"*\",\n                \"davedevelopment/hamcrest-php\": \"*\",\n                \"kodova/hamcrest-php\": \"*\"\n            },\n            \"require-dev\": {\n                \"phpunit/php-file-iterator\": \"^1.4 || ^2.0\",\n                \"phpunit/phpunit\": \"^4.8.36 || ^5.7 || ^6.5 || ^7.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"hamcrest\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"This is the PHP port of Hamcrest Matchers\",\n            \"keywords\": [\n                \"test\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/hamcrest/hamcrest-php/issues\",\n                \"source\": \"https://github.com/hamcrest/hamcrest-php/tree/v2.0.1\"\n            },\n            \"time\": \"2020-07-09T08:09:16+00:00\"\n        },\n        {\n            \"name\": \"hhxsv5/laravel-s\",\n            \"version\": \"v3.7.39\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/hhxsv5/laravel-s.git\",\n                \"reference\": \"0aaec369921a776483382b6ef4c0930ab85d7660\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/hhxsv5/laravel-s/zipball/0aaec369921a776483382b6ef4c0930ab85d7660\",\n                \"reference\": \"0aaec369921a776483382b6ef4c0930ab85d7660\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-curl\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-pcntl\": \"*\",\n                \"php\": \">=5.5.9\",\n                \"swoole/ide-helper\": \"@dev\",\n                \"symfony/console\": \">=2.7.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \">=4.8.36\"\n            },\n            \"suggest\": {\n                \"ext-inotify\": \"Inotify, used to real-time reload.\",\n                \"ext-swoole\": \"Coroutine-based concurrency library for PHP, require >= 1.7.19.\"\n            },\n            \"bin\": [\n                \"bin/fswatch\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"laravel\": {\n                    \"providers\": [\n                        \"Hhxsv5\\\\LaravelS\\\\Illuminate\\\\LaravelSServiceProvider\"\n                    ]\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Hhxsv5\\\\LaravelS\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Xie Biao\",\n                    \"email\": \"hhxsv5@sina.com\"\n                }\n            ],\n            \"description\": \"🚀 LaravelS is an out-of-the-box adapter between Laravel/Lumen and Swoole.\",\n            \"homepage\": \"https://github.com/hhxsv5/laravel-s\",\n            \"keywords\": [\n                \"LaravelS\",\n                \"async\",\n                \"coroutine\",\n                \"http\",\n                \"inotify\",\n                \"laravel\",\n                \"laravel-s\",\n                \"lumen\",\n                \"performance\",\n                \"process\",\n                \"server\",\n                \"swoole\",\n                \"task\",\n                \"tcp\",\n                \"timer\",\n                \"udp\",\n                \"websocket\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/hhxsv5/laravel-s/issues\",\n                \"source\": \"https://github.com/hhxsv5/laravel-s\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://gitee.com/hhxsv5/laravel-s?donate=true\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.blockchain.com/btc/address/367HnAzVTAEk8offesDhcsCQswnugsE54u\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.paypal.me/hhxsv5\",\n                    \"type\": \"custom\"\n                }\n            ],\n            \"time\": \"2024-09-12T14:51:07+00:00\"\n        },\n        {\n            \"name\": \"kitloong/laravel-migrations-generator\",\n            \"version\": \"v4.5.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/kitloong/laravel-migrations-generator.git\",\n                \"reference\": \"65a6a2f6b9811f343da1092be75c450b51293e7c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/kitloong/laravel-migrations-generator/zipball/65a6a2f6b9811f343da1092be75c450b51293e7c\",\n                \"reference\": \"65a6a2f6b9811f343da1092be75c450b51293e7c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/dbal\": \"~2.4|^3.0\",\n                \"illuminate/support\": \"^5.6|^6.0|^7.0|^8.0\",\n                \"php\": \">=7.1.3\"\n            },\n            \"require-dev\": {\n                \"ext-pdo\": \"*\",\n                \"mockery/mockery\": \"^1.0\",\n                \"orchestra/testbench\": \"^3.6|^4.0|^5.0|^6.0\",\n                \"squizlabs/php_codesniffer\": \"^3.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laravel\": {\n                    \"providers\": [\n                        \"KitLoong\\\\MigrationsGenerator\\\\MigrationsGeneratorServiceProvider\"\n                    ]\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Way\\\\Generators\\\\\": \"src/Way/Generators\",\n                    \"Xethron\\\\MigrationsGenerator\\\\\": \"src/Xethron/MigrationsGenerator\",\n                    \"KitLoong\\\\MigrationsGenerator\\\\\": \"src/KitLoong/MigrationsGenerator\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Kit Loong\",\n                    \"email\": \"kitloong1008@gmail.com\"\n                }\n            ],\n            \"description\": \"Generates Laravel Migrations from an existing database\",\n            \"keywords\": [\n                \"artisan\",\n                \"generator\",\n                \"laravel\",\n                \"lumen\",\n                \"migration\",\n                \"migrations\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/kitloong/laravel-migrations-generator/issues\",\n                \"source\": \"https://github.com/kitloong/laravel-migrations-generator/tree/v4.5.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.buymeacoffee.com/kitloong\",\n                    \"type\": \"custom\"\n                }\n            ],\n            \"time\": \"2021-08-31T13:55:56+00:00\"\n        },\n        {\n            \"name\": \"laravel/sail\",\n            \"version\": \"v1.25.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laravel/sail.git\",\n                \"reference\": \"e81a7bd7ac1a745ccb25572830fecf74a89bb48a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laravel/sail/zipball/e81a7bd7ac1a745ccb25572830fecf74a89bb48a\",\n                \"reference\": \"e81a7bd7ac1a745ccb25572830fecf74a89bb48a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"illuminate/console\": \"^8.0|^9.0|^10.0\",\n                \"illuminate/contracts\": \"^8.0|^9.0|^10.0\",\n                \"illuminate/support\": \"^8.0|^9.0|^10.0\",\n                \"php\": \"^8.0\",\n                \"symfony/yaml\": \"^6.0\"\n            },\n            \"require-dev\": {\n                \"orchestra/testbench\": \"^6.0|^7.0|^8.0\",\n                \"phpstan/phpstan\": \"^1.10\"\n            },\n            \"bin\": [\n                \"bin/sail\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"laravel\": {\n                    \"providers\": [\n                        \"Laravel\\\\Sail\\\\SailServiceProvider\"\n                    ]\n                },\n                \"branch-alias\": {\n                    \"dev-master\": \"1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laravel\\\\Sail\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Taylor Otwell\",\n                    \"email\": \"taylor@laravel.com\"\n                }\n            ],\n            \"description\": \"Docker files for running a basic Laravel application.\",\n            \"keywords\": [\n                \"docker\",\n                \"laravel\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/laravel/sail/issues\",\n                \"source\": \"https://github.com/laravel/sail\"\n            },\n            \"time\": \"2023-09-11T17:37:09+00:00\"\n        },\n        {\n            \"name\": \"mockery/mockery\",\n            \"version\": \"1.6.12\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/mockery/mockery.git\",\n                \"reference\": \"1f4efdd7d3beafe9807b08156dfcb176d18f1699\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/mockery/mockery/zipball/1f4efdd7d3beafe9807b08156dfcb176d18f1699\",\n                \"reference\": \"1f4efdd7d3beafe9807b08156dfcb176d18f1699\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"hamcrest/hamcrest-php\": \"^2.0.1\",\n                \"lib-pcre\": \">=7.0\",\n                \"php\": \">=7.3\"\n            },\n            \"conflict\": {\n                \"phpunit/phpunit\": \"<8.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5 || ^9.6.17\",\n                \"symplify/easy-coding-standard\": \"^12.1.14\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"library/helpers.php\",\n                    \"library/Mockery.php\"\n                ],\n                \"psr-4\": {\n                    \"Mockery\\\\\": \"library/Mockery\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Pádraic Brady\",\n                    \"email\": \"padraic.brady@gmail.com\",\n                    \"homepage\": \"https://github.com/padraic\",\n                    \"role\": \"Author\"\n                },\n                {\n                    \"name\": \"Dave Marshall\",\n                    \"email\": \"dave.marshall@atstsolutions.co.uk\",\n                    \"homepage\": \"https://davedevelopment.co.uk\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Nathanael Esayeas\",\n                    \"email\": \"nathanael.esayeas@protonmail.com\",\n                    \"homepage\": \"https://github.com/ghostwriter\",\n                    \"role\": \"Lead Developer\"\n                }\n            ],\n            \"description\": \"Mockery is a simple yet flexible PHP mock object framework\",\n            \"homepage\": \"https://github.com/mockery/mockery\",\n            \"keywords\": [\n                \"BDD\",\n                \"TDD\",\n                \"library\",\n                \"mock\",\n                \"mock objects\",\n                \"mockery\",\n                \"stub\",\n                \"test\",\n                \"test double\",\n                \"testing\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.mockery.io/\",\n                \"issues\": \"https://github.com/mockery/mockery/issues\",\n                \"rss\": \"https://github.com/mockery/mockery/releases.atom\",\n                \"security\": \"https://github.com/mockery/mockery/security/advisories\",\n                \"source\": \"https://github.com/mockery/mockery\"\n            },\n            \"time\": \"2024-05-16T03:13:13+00:00\"\n        },\n        {\n            \"name\": \"myclabs/deep-copy\",\n            \"version\": \"1.12.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/myclabs/DeepCopy.git\",\n                \"reference\": \"123267b2c49fbf30d78a7b2d333f6be754b94845\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/myclabs/DeepCopy/zipball/123267b2c49fbf30d78a7b2d333f6be754b94845\",\n                \"reference\": \"123267b2c49fbf30d78a7b2d333f6be754b94845\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"conflict\": {\n                \"doctrine/collections\": \"<1.6.8\",\n                \"doctrine/common\": \"<2.13.3 || >=3 <3.2.2\"\n            },\n            \"require-dev\": {\n                \"doctrine/collections\": \"^1.6.8\",\n                \"doctrine/common\": \"^2.13.3 || ^3.2.2\",\n                \"phpspec/prophecy\": \"^1.10\",\n                \"phpunit/phpunit\": \"^7.5.20 || ^8.5.23 || ^9.5.13\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/DeepCopy/deep_copy.php\"\n                ],\n                \"psr-4\": {\n                    \"DeepCopy\\\\\": \"src/DeepCopy/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"Create deep copies (clones) of your objects\",\n            \"keywords\": [\n                \"clone\",\n                \"copy\",\n                \"duplicate\",\n                \"object\",\n                \"object graph\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/myclabs/DeepCopy/issues\",\n                \"source\": \"https://github.com/myclabs/DeepCopy/tree/1.12.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/myclabs/deep-copy\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-11-08T17:47:46+00:00\"\n        },\n        {\n            \"name\": \"nunomaduro/collision\",\n            \"version\": \"v5.11.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/nunomaduro/collision.git\",\n                \"reference\": \"8b610eef8582ccdc05d8f2ab23305e2d37049461\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/nunomaduro/collision/zipball/8b610eef8582ccdc05d8f2ab23305e2d37049461\",\n                \"reference\": \"8b610eef8582ccdc05d8f2ab23305e2d37049461\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"facade/ignition-contracts\": \"^1.0\",\n                \"filp/whoops\": \"^2.14.3\",\n                \"php\": \"^7.3 || ^8.0\",\n                \"symfony/console\": \"^5.0\"\n            },\n            \"require-dev\": {\n                \"brianium/paratest\": \"^6.1\",\n                \"fideloper/proxy\": \"^4.4.1\",\n                \"fruitcake/laravel-cors\": \"^2.0.3\",\n                \"laravel/framework\": \"8.x-dev\",\n                \"nunomaduro/larastan\": \"^0.6.2\",\n                \"nunomaduro/mock-final-classes\": \"^1.0\",\n                \"orchestra/testbench\": \"^6.0\",\n                \"phpstan/phpstan\": \"^0.12.64\",\n                \"phpunit/phpunit\": \"^9.5.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laravel\": {\n                    \"providers\": [\n                        \"NunoMaduro\\\\Collision\\\\Adapters\\\\Laravel\\\\CollisionServiceProvider\"\n                    ]\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"NunoMaduro\\\\Collision\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nuno Maduro\",\n                    \"email\": \"enunomaduro@gmail.com\"\n                }\n            ],\n            \"description\": \"Cli error handling for console/command-line PHP applications.\",\n            \"keywords\": [\n                \"artisan\",\n                \"cli\",\n                \"command-line\",\n                \"console\",\n                \"error\",\n                \"handling\",\n                \"laravel\",\n                \"laravel-zero\",\n                \"php\",\n                \"symfony\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/nunomaduro/collision/issues\",\n                \"source\": \"https://github.com/nunomaduro/collision\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.paypal.com/paypalme/enunomaduro\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/nunomaduro\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/nunomaduro\",\n                    \"type\": \"patreon\"\n                }\n            ],\n            \"time\": \"2022-01-10T16:22:52+00:00\"\n        },\n        {\n            \"name\": \"phar-io/manifest\",\n            \"version\": \"2.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phar-io/manifest.git\",\n                \"reference\": \"54750ef60c58e43759730615a392c31c80e23176\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phar-io/manifest/zipball/54750ef60c58e43759730615a392c31c80e23176\",\n                \"reference\": \"54750ef60c58e43759730615a392c31c80e23176\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-phar\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"phar-io/version\": \"^3.0.1\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Heuer\",\n                    \"email\": \"sebastian@phpeople.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Component for reading phar.io manifest information from a PHP Archive (PHAR)\",\n            \"support\": {\n                \"issues\": \"https://github.com/phar-io/manifest/issues\",\n                \"source\": \"https://github.com/phar-io/manifest/tree/2.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/theseer\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-03T12:33:53+00:00\"\n        },\n        {\n            \"name\": \"phar-io/version\",\n            \"version\": \"3.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phar-io/version.git\",\n                \"reference\": \"4f7fd7836c6f332bb2933569e566a0d6c4cbed74\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phar-io/version/zipball/4f7fd7836c6f332bb2933569e566a0d6c4cbed74\",\n                \"reference\": \"4f7fd7836c6f332bb2933569e566a0d6c4cbed74\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Heuer\",\n                    \"email\": \"sebastian@phpeople.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Library for handling version information and constraints\",\n            \"support\": {\n                \"issues\": \"https://github.com/phar-io/version/issues\",\n                \"source\": \"https://github.com/phar-io/version/tree/3.2.1\"\n            },\n            \"time\": \"2022-02-21T01:04:05+00:00\"\n        },\n        {\n            \"name\": \"phpdocumentor/reflection-common\",\n            \"version\": \"2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpDocumentor/ReflectionCommon.git\",\n                \"reference\": \"1d01c49d4ed62f25aa84a747ad35d5a16924662b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpDocumentor/ReflectionCommon/zipball/1d01c49d4ed62f25aa84a747ad35d5a16924662b\",\n                \"reference\": \"1d01c49d4ed62f25aa84a747ad35d5a16924662b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-2.x\": \"2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"phpDocumentor\\\\Reflection\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jaap van Otterdijk\",\n                    \"email\": \"opensource@ijaap.nl\"\n                }\n            ],\n            \"description\": \"Common reflection classes used by phpdocumentor to reflect the code structure\",\n            \"homepage\": \"http://www.phpdoc.org\",\n            \"keywords\": [\n                \"FQSEN\",\n                \"phpDocumentor\",\n                \"phpdoc\",\n                \"reflection\",\n                \"static analysis\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/phpDocumentor/ReflectionCommon/issues\",\n                \"source\": \"https://github.com/phpDocumentor/ReflectionCommon/tree/2.x\"\n            },\n            \"time\": \"2020-06-27T09:03:43+00:00\"\n        },\n        {\n            \"name\": \"phpdocumentor/type-resolver\",\n            \"version\": \"1.10.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpDocumentor/TypeResolver.git\",\n                \"reference\": \"679e3ce485b99e84c775d28e2e96fade9a7fb50a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpDocumentor/TypeResolver/zipball/679e3ce485b99e84c775d28e2e96fade9a7fb50a\",\n                \"reference\": \"679e3ce485b99e84c775d28e2e96fade9a7fb50a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/deprecations\": \"^1.0\",\n                \"php\": \"^7.3 || ^8.0\",\n                \"phpdocumentor/reflection-common\": \"^2.0\",\n                \"phpstan/phpdoc-parser\": \"^1.18|^2.0\"\n            },\n            \"require-dev\": {\n                \"ext-tokenizer\": \"*\",\n                \"phpbench/phpbench\": \"^1.2\",\n                \"phpstan/extension-installer\": \"^1.1\",\n                \"phpstan/phpstan\": \"^1.8\",\n                \"phpstan/phpstan-phpunit\": \"^1.1\",\n                \"phpunit/phpunit\": \"^9.5\",\n                \"rector/rector\": \"^0.13.9\",\n                \"vimeo/psalm\": \"^4.25\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-1.x\": \"1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"phpDocumentor\\\\Reflection\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mike van Riel\",\n                    \"email\": \"me@mikevanriel.com\"\n                }\n            ],\n            \"description\": \"A PSR-5 based resolver of Class names, Types and Structural Element Names\",\n            \"support\": {\n                \"issues\": \"https://github.com/phpDocumentor/TypeResolver/issues\",\n                \"source\": \"https://github.com/phpDocumentor/TypeResolver/tree/1.10.0\"\n            },\n            \"time\": \"2024-11-09T15:12:26+00:00\"\n        },\n        {\n            \"name\": \"phpstan/phpdoc-parser\",\n            \"version\": \"2.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpstan/phpdoc-parser.git\",\n                \"reference\": \"c00d78fb6b29658347f9d37ebe104bffadf36299\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpstan/phpdoc-parser/zipball/c00d78fb6b29658347f9d37ebe104bffadf36299\",\n                \"reference\": \"c00d78fb6b29658347f9d37ebe104bffadf36299\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.4 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/annotations\": \"^2.0\",\n                \"nikic/php-parser\": \"^5.3.0\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.2\",\n                \"phpstan/extension-installer\": \"^1.0\",\n                \"phpstan/phpstan\": \"^2.0\",\n                \"phpstan/phpstan-phpunit\": \"^2.0\",\n                \"phpstan/phpstan-strict-rules\": \"^2.0\",\n                \"phpunit/phpunit\": \"^9.6\",\n                \"symfony/process\": \"^5.2\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PHPStan\\\\PhpDocParser\\\\\": [\n                        \"src/\"\n                    ]\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"PHPDoc parser with support for nullable, intersection and generic types\",\n            \"support\": {\n                \"issues\": \"https://github.com/phpstan/phpdoc-parser/issues\",\n                \"source\": \"https://github.com/phpstan/phpdoc-parser/tree/2.0.0\"\n            },\n            \"time\": \"2024-10-13T11:29:49+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-code-coverage\",\n            \"version\": \"9.2.32\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-code-coverage.git\",\n                \"reference\": \"85402a822d1ecf1db1096959413d35e1c37cf1a5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/85402a822d1ecf1db1096959413d35e1c37cf1a5\",\n                \"reference\": \"85402a822d1ecf1db1096959413d35e1c37cf1a5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"nikic/php-parser\": \"^4.19.1 || ^5.1.0\",\n                \"php\": \">=7.3\",\n                \"phpunit/php-file-iterator\": \"^3.0.6\",\n                \"phpunit/php-text-template\": \"^2.0.4\",\n                \"sebastian/code-unit-reverse-lookup\": \"^2.0.3\",\n                \"sebastian/complexity\": \"^2.0.3\",\n                \"sebastian/environment\": \"^5.1.5\",\n                \"sebastian/lines-of-code\": \"^1.0.4\",\n                \"sebastian/version\": \"^3.0.2\",\n                \"theseer/tokenizer\": \"^1.2.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.6\"\n            },\n            \"suggest\": {\n                \"ext-pcov\": \"PHP extension that provides line coverage\",\n                \"ext-xdebug\": \"PHP extension that provides line coverage as well as branch and path coverage\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"9.2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library that provides collection, processing, and rendering functionality for PHP code coverage information.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-code-coverage\",\n            \"keywords\": [\n                \"coverage\",\n                \"testing\",\n                \"xunit\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-code-coverage/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/php-code-coverage/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/php-code-coverage/tree/9.2.32\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-08-22T04:23:01+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-file-iterator\",\n            \"version\": \"3.0.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-file-iterator.git\",\n                \"reference\": \"cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-file-iterator/zipball/cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf\",\n                \"reference\": \"cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"FilterIterator implementation that filters files based on a list of suffixes.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-file-iterator/\",\n            \"keywords\": [\n                \"filesystem\",\n                \"iterator\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-file-iterator/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-file-iterator/tree/3.0.6\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2021-12-02T12:48:52+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-invoker\",\n            \"version\": \"3.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-invoker.git\",\n                \"reference\": \"5a10147d0aaf65b58940a0b72f71c9ac0423cc67\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-invoker/zipball/5a10147d0aaf65b58940a0b72f71c9ac0423cc67\",\n                \"reference\": \"5a10147d0aaf65b58940a0b72f71c9ac0423cc67\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"ext-pcntl\": \"*\",\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"suggest\": {\n                \"ext-pcntl\": \"*\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Invoke callables with a timeout\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-invoker/\",\n            \"keywords\": [\n                \"process\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-invoker/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-invoker/tree/3.1.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-09-28T05:58:55+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-text-template\",\n            \"version\": \"2.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-text-template.git\",\n                \"reference\": \"5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-text-template/zipball/5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28\",\n                \"reference\": \"5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Simple template engine.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-text-template/\",\n            \"keywords\": [\n                \"template\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-text-template/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-text-template/tree/2.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-26T05:33:50+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-timer\",\n            \"version\": \"5.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-timer.git\",\n                \"reference\": \"5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-timer/zipball/5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2\",\n                \"reference\": \"5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Utility class for timing\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-timer/\",\n            \"keywords\": [\n                \"timer\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-timer/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-timer/tree/5.0.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-26T13:16:10+00:00\"\n        },\n        {\n            \"name\": \"phpunit/phpunit\",\n            \"version\": \"9.6.22\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/phpunit.git\",\n                \"reference\": \"f80235cb4d3caa59ae09be3adf1ded27521d1a9c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/phpunit/zipball/f80235cb4d3caa59ae09be3adf1ded27521d1a9c\",\n                \"reference\": \"f80235cb4d3caa59ae09be3adf1ded27521d1a9c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/instantiator\": \"^1.5.0 || ^2\",\n                \"ext-dom\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"ext-xml\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"myclabs/deep-copy\": \"^1.12.1\",\n                \"phar-io/manifest\": \"^2.0.4\",\n                \"phar-io/version\": \"^3.2.1\",\n                \"php\": \">=7.3\",\n                \"phpunit/php-code-coverage\": \"^9.2.32\",\n                \"phpunit/php-file-iterator\": \"^3.0.6\",\n                \"phpunit/php-invoker\": \"^3.1.1\",\n                \"phpunit/php-text-template\": \"^2.0.4\",\n                \"phpunit/php-timer\": \"^5.0.3\",\n                \"sebastian/cli-parser\": \"^1.0.2\",\n                \"sebastian/code-unit\": \"^1.0.8\",\n                \"sebastian/comparator\": \"^4.0.8\",\n                \"sebastian/diff\": \"^4.0.6\",\n                \"sebastian/environment\": \"^5.1.5\",\n                \"sebastian/exporter\": \"^4.0.6\",\n                \"sebastian/global-state\": \"^5.0.7\",\n                \"sebastian/object-enumerator\": \"^4.0.4\",\n                \"sebastian/resource-operations\": \"^3.0.4\",\n                \"sebastian/type\": \"^3.2.1\",\n                \"sebastian/version\": \"^3.0.2\"\n            },\n            \"suggest\": {\n                \"ext-soap\": \"To be able to generate mocks based on WSDL files\",\n                \"ext-xdebug\": \"PHP extension that provides line coverage as well as branch and path coverage\"\n            },\n            \"bin\": [\n                \"phpunit\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"9.6-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/Framework/Assert/Functions.php\"\n                ],\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"The PHP Unit Testing framework.\",\n            \"homepage\": \"https://phpunit.de/\",\n            \"keywords\": [\n                \"phpunit\",\n                \"testing\",\n                \"xunit\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/phpunit/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/phpunit/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/phpunit/tree/9.6.22\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://phpunit.de/sponsors.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/phpunit/phpunit\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-12-05T13:48:26+00:00\"\n        },\n        {\n            \"name\": \"psr/cache\",\n            \"version\": \"3.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/cache.git\",\n                \"reference\": \"aa5030cfa5405eccfdcb1083ce040c2cb8d253bf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/cache/zipball/aa5030cfa5405eccfdcb1083ce040c2cb8d253bf\",\n                \"reference\": \"aa5030cfa5405eccfdcb1083ce040c2cb8d253bf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Cache\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for caching libraries\",\n            \"keywords\": [\n                \"cache\",\n                \"psr\",\n                \"psr-6\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/cache/tree/3.0.0\"\n            },\n            \"time\": \"2021-02-03T23:26:27+00:00\"\n        },\n        {\n            \"name\": \"sebastian/cli-parser\",\n            \"version\": \"1.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/cli-parser.git\",\n                \"reference\": \"2b56bea83a09de3ac06bb18b92f068e60cc6f50b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/cli-parser/zipball/2b56bea83a09de3ac06bb18b92f068e60cc6f50b\",\n                \"reference\": \"2b56bea83a09de3ac06bb18b92f068e60cc6f50b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library for parsing CLI options\",\n            \"homepage\": \"https://github.com/sebastianbergmann/cli-parser\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/cli-parser/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/cli-parser/tree/1.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T06:27:43+00:00\"\n        },\n        {\n            \"name\": \"sebastian/code-unit\",\n            \"version\": \"1.0.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/code-unit.git\",\n                \"reference\": \"1fc9f64c0927627ef78ba436c9b17d967e68e120\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/code-unit/zipball/1fc9f64c0927627ef78ba436c9b17d967e68e120\",\n                \"reference\": \"1fc9f64c0927627ef78ba436c9b17d967e68e120\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Collection of value objects that represent the PHP code units\",\n            \"homepage\": \"https://github.com/sebastianbergmann/code-unit\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/code-unit/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/code-unit/tree/1.0.8\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-26T13:08:54+00:00\"\n        },\n        {\n            \"name\": \"sebastian/code-unit-reverse-lookup\",\n            \"version\": \"2.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup.git\",\n                \"reference\": \"ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/code-unit-reverse-lookup/zipball/ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5\",\n                \"reference\": \"ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Looks up which function or method a line of code belongs to\",\n            \"homepage\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup/\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup/tree/2.0.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-09-28T05:30:19+00:00\"\n        },\n        {\n            \"name\": \"sebastian/comparator\",\n            \"version\": \"4.0.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/comparator.git\",\n                \"reference\": \"fa0f136dd2334583309d32b62544682ee972b51a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/comparator/zipball/fa0f136dd2334583309d32b62544682ee972b51a\",\n                \"reference\": \"fa0f136dd2334583309d32b62544682ee972b51a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\",\n                \"sebastian/diff\": \"^4.0\",\n                \"sebastian/exporter\": \"^4.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Jeff Welch\",\n                    \"email\": \"whatthejeff@gmail.com\"\n                },\n                {\n                    \"name\": \"Volker Dusch\",\n                    \"email\": \"github@wallbash.com\"\n                },\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@2bepublished.at\"\n                }\n            ],\n            \"description\": \"Provides the functionality to compare PHP values for equality\",\n            \"homepage\": \"https://github.com/sebastianbergmann/comparator\",\n            \"keywords\": [\n                \"comparator\",\n                \"compare\",\n                \"equality\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/comparator/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/comparator/tree/4.0.8\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2022-09-14T12:41:17+00:00\"\n        },\n        {\n            \"name\": \"sebastian/complexity\",\n            \"version\": \"2.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/complexity.git\",\n                \"reference\": \"25f207c40d62b8b7aa32f5ab026c53561964053a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/complexity/zipball/25f207c40d62b8b7aa32f5ab026c53561964053a\",\n                \"reference\": \"25f207c40d62b8b7aa32f5ab026c53561964053a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"nikic/php-parser\": \"^4.18 || ^5.0\",\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library for calculating the complexity of PHP code units\",\n            \"homepage\": \"https://github.com/sebastianbergmann/complexity\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/complexity/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/complexity/tree/2.0.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-12-22T06:19:30+00:00\"\n        },\n        {\n            \"name\": \"sebastian/diff\",\n            \"version\": \"4.0.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/diff.git\",\n                \"reference\": \"ba01945089c3a293b01ba9badc29ad55b106b0bc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/diff/zipball/ba01945089c3a293b01ba9badc29ad55b106b0bc\",\n                \"reference\": \"ba01945089c3a293b01ba9badc29ad55b106b0bc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\",\n                \"symfony/process\": \"^4.2 || ^5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Kore Nordmann\",\n                    \"email\": \"mail@kore-nordmann.de\"\n                }\n            ],\n            \"description\": \"Diff implementation\",\n            \"homepage\": \"https://github.com/sebastianbergmann/diff\",\n            \"keywords\": [\n                \"diff\",\n                \"udiff\",\n                \"unidiff\",\n                \"unified diff\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/diff/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/diff/tree/4.0.6\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T06:30:58+00:00\"\n        },\n        {\n            \"name\": \"sebastian/environment\",\n            \"version\": \"5.1.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/environment.git\",\n                \"reference\": \"830c43a844f1f8d5b7a1f6d6076b784454d8b7ed\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/environment/zipball/830c43a844f1f8d5b7a1f6d6076b784454d8b7ed\",\n                \"reference\": \"830c43a844f1f8d5b7a1f6d6076b784454d8b7ed\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"suggest\": {\n                \"ext-posix\": \"*\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Provides functionality to handle HHVM/PHP environments\",\n            \"homepage\": \"http://www.github.com/sebastianbergmann/environment\",\n            \"keywords\": [\n                \"Xdebug\",\n                \"environment\",\n                \"hhvm\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/environment/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/environment/tree/5.1.5\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T06:03:51+00:00\"\n        },\n        {\n            \"name\": \"sebastian/exporter\",\n            \"version\": \"4.0.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/exporter.git\",\n                \"reference\": \"78c00df8f170e02473b682df15bfcdacc3d32d72\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/exporter/zipball/78c00df8f170e02473b682df15bfcdacc3d32d72\",\n                \"reference\": \"78c00df8f170e02473b682df15bfcdacc3d32d72\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\",\n                \"sebastian/recursion-context\": \"^4.0\"\n            },\n            \"require-dev\": {\n                \"ext-mbstring\": \"*\",\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Jeff Welch\",\n                    \"email\": \"whatthejeff@gmail.com\"\n                },\n                {\n                    \"name\": \"Volker Dusch\",\n                    \"email\": \"github@wallbash.com\"\n                },\n                {\n                    \"name\": \"Adam Harvey\",\n                    \"email\": \"aharvey@php.net\"\n                },\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@gmail.com\"\n                }\n            ],\n            \"description\": \"Provides the functionality to export PHP variables for visualization\",\n            \"homepage\": \"https://www.github.com/sebastianbergmann/exporter\",\n            \"keywords\": [\n                \"export\",\n                \"exporter\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/exporter/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/exporter/tree/4.0.6\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T06:33:00+00:00\"\n        },\n        {\n            \"name\": \"sebastian/global-state\",\n            \"version\": \"5.0.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/global-state.git\",\n                \"reference\": \"bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/global-state/zipball/bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9\",\n                \"reference\": \"bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\",\n                \"sebastian/object-reflector\": \"^2.0\",\n                \"sebastian/recursion-context\": \"^4.0\"\n            },\n            \"require-dev\": {\n                \"ext-dom\": \"*\",\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"suggest\": {\n                \"ext-uopz\": \"*\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Snapshotting of global state\",\n            \"homepage\": \"http://www.github.com/sebastianbergmann/global-state\",\n            \"keywords\": [\n                \"global state\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/global-state/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/global-state/tree/5.0.7\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T06:35:11+00:00\"\n        },\n        {\n            \"name\": \"sebastian/lines-of-code\",\n            \"version\": \"1.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/lines-of-code.git\",\n                \"reference\": \"e1e4a170560925c26d424b6a03aed157e7dcc5c5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/lines-of-code/zipball/e1e4a170560925c26d424b6a03aed157e7dcc5c5\",\n                \"reference\": \"e1e4a170560925c26d424b6a03aed157e7dcc5c5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"nikic/php-parser\": \"^4.18 || ^5.0\",\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library for counting the lines of code in PHP source code\",\n            \"homepage\": \"https://github.com/sebastianbergmann/lines-of-code\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/lines-of-code/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/lines-of-code/tree/1.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-12-22T06:20:34+00:00\"\n        },\n        {\n            \"name\": \"sebastian/object-enumerator\",\n            \"version\": \"4.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/object-enumerator.git\",\n                \"reference\": \"5c9eeac41b290a3712d88851518825ad78f45c71\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/object-enumerator/zipball/5c9eeac41b290a3712d88851518825ad78f45c71\",\n                \"reference\": \"5c9eeac41b290a3712d88851518825ad78f45c71\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\",\n                \"sebastian/object-reflector\": \"^2.0\",\n                \"sebastian/recursion-context\": \"^4.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Traverses array structures and object graphs to enumerate all referenced objects\",\n            \"homepage\": \"https://github.com/sebastianbergmann/object-enumerator/\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/object-enumerator/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/object-enumerator/tree/4.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-26T13:12:34+00:00\"\n        },\n        {\n            \"name\": \"sebastian/object-reflector\",\n            \"version\": \"2.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/object-reflector.git\",\n                \"reference\": \"b4f479ebdbf63ac605d183ece17d8d7fe49c15c7\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/object-reflector/zipball/b4f479ebdbf63ac605d183ece17d8d7fe49c15c7\",\n                \"reference\": \"b4f479ebdbf63ac605d183ece17d8d7fe49c15c7\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Allows reflection of object attributes, including inherited and non-public ones\",\n            \"homepage\": \"https://github.com/sebastianbergmann/object-reflector/\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/object-reflector/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/object-reflector/tree/2.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-26T13:14:26+00:00\"\n        },\n        {\n            \"name\": \"sebastian/recursion-context\",\n            \"version\": \"4.0.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/recursion-context.git\",\n                \"reference\": \"e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1\",\n                \"reference\": \"e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Jeff Welch\",\n                    \"email\": \"whatthejeff@gmail.com\"\n                },\n                {\n                    \"name\": \"Adam Harvey\",\n                    \"email\": \"aharvey@php.net\"\n                }\n            ],\n            \"description\": \"Provides functionality to recursively process PHP variables\",\n            \"homepage\": \"https://github.com/sebastianbergmann/recursion-context\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/recursion-context/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/recursion-context/tree/4.0.5\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T06:07:39+00:00\"\n        },\n        {\n            \"name\": \"sebastian/resource-operations\",\n            \"version\": \"3.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/resource-operations.git\",\n                \"reference\": \"05d5692a7993ecccd56a03e40cd7e5b09b1d404e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/resource-operations/zipball/05d5692a7993ecccd56a03e40cd7e5b09b1d404e\",\n                \"reference\": \"05d5692a7993ecccd56a03e40cd7e5b09b1d404e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Provides a list of PHP built-in functions that operate on resources\",\n            \"homepage\": \"https://www.github.com/sebastianbergmann/resource-operations\",\n            \"support\": {\n                \"source\": \"https://github.com/sebastianbergmann/resource-operations/tree/3.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-14T16:00:52+00:00\"\n        },\n        {\n            \"name\": \"sebastian/type\",\n            \"version\": \"3.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/type.git\",\n                \"reference\": \"75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/type/zipball/75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7\",\n                \"reference\": \"75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Collection of value objects that represent the types of the PHP type system\",\n            \"homepage\": \"https://github.com/sebastianbergmann/type\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/type/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/type/tree/3.2.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T06:13:03+00:00\"\n        },\n        {\n            \"name\": \"sebastian/version\",\n            \"version\": \"3.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/version.git\",\n                \"reference\": \"c6c1022351a901512170118436c764e473f6de8c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/version/zipball/c6c1022351a901512170118436c764e473f6de8c\",\n                \"reference\": \"c6c1022351a901512170118436c764e473f6de8c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library that helps with managing the version number of Git-hosted PHP projects\",\n            \"homepage\": \"https://github.com/sebastianbergmann/version\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/version/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/version/tree/3.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-09-28T06:39:44+00:00\"\n        },\n        {\n            \"name\": \"swoole/ide-helper\",\n            \"version\": \"5.1.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/swoole/ide-helper.git\",\n                \"reference\": \"c5149a01c00e4ed56fc7b3ffeb6823e69acb4a76\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/swoole/ide-helper/zipball/c5149a01c00e4ed56fc7b3ffeb6823e69acb4a76\",\n                \"reference\": \"c5149a01c00e4ed56fc7b3ffeb6823e69acb4a76\",\n                \"shasum\": \"\"\n            },\n            \"type\": \"library\",\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"Apache-2.0\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Team Swoole\",\n                    \"email\": \"team@swoole.com\"\n                }\n            ],\n            \"description\": \"IDE help files for Swoole.\",\n            \"support\": {\n                \"issues\": \"https://github.com/swoole/ide-helper/issues\",\n                \"source\": \"https://github.com/swoole/ide-helper/tree/5.1.6\"\n            },\n            \"time\": \"2024-11-29T07:21:36+00:00\"\n        },\n        {\n            \"name\": \"symfony/yaml\",\n            \"version\": \"v6.0.19\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/yaml.git\",\n                \"reference\": \"deec3a812a0305a50db8ae689b183f43d915c884\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/yaml/zipball/deec3a812a0305a50db8ae689b183f43d915c884\",\n                \"reference\": \"deec3a812a0305a50db8ae689b183f43d915c884\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.2\",\n                \"symfony/polyfill-ctype\": \"^1.8\"\n            },\n            \"conflict\": {\n                \"symfony/console\": \"<5.4\"\n            },\n            \"require-dev\": {\n                \"symfony/console\": \"^5.4|^6.0\"\n            },\n            \"suggest\": {\n                \"symfony/console\": \"For validating YAML files using the lint command\"\n            },\n            \"bin\": [\n                \"Resources/bin/yaml-lint\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Yaml\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Loads and dumps YAML files\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/yaml/tree/v6.0.19\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-01-11T11:50:03+00:00\"\n        },\n        {\n            \"name\": \"theseer/tokenizer\",\n            \"version\": \"1.2.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/theseer/tokenizer.git\",\n                \"reference\": \"737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/theseer/tokenizer/zipball/737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2\",\n                \"reference\": \"737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-tokenizer\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"A small library for converting tokenized PHP source code into XML and potentially other formats\",\n            \"support\": {\n                \"issues\": \"https://github.com/theseer/tokenizer/issues\",\n                \"source\": \"https://github.com/theseer/tokenizer/tree/1.2.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/theseer\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-03T12:36:25+00:00\"\n        }\n    ],\n    \"aliases\": [],\n    \"minimum-stability\": \"dev\",\n    \"stability-flags\": [],\n    \"prefer-stable\": true,\n    \"prefer-lowest\": false,\n    \"platform\": {\n        \"php\": \"^8.0\",\n        \"ext-curl\": \"*\",\n        \"ext-gd\": \"*\",\n        \"ext-imagick\": \"*\",\n        \"ext-json\": \"*\",\n        \"ext-libxml\": \"*\",\n        \"ext-openssl\": \"*\",\n        \"ext-simplexml\": \"*\",\n        \"ext-zip\": \"*\"\n    },\n    \"platform-dev\": [],\n    \"plugin-api-version\": \"2.6.0\"\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "database",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 7.3916015625,
          "content": "services:\n  php:\n    container_name: \"dootask-php-${APP_ID}\"\n    image: \"kuaifan/php:swoole-8.0.rc18\"\n    shm_size: \"2gb\"\n    ulimits:\n      core:\n        soft: 0\n        hard: 0\n    volumes:\n      - ./docker/crontab/crontab.conf:/etc/supervisor/conf.d/crontab.conf\n      - ./docker/php/php.conf:/etc/supervisor/conf.d/php.conf\n      - ./docker/php/php.ini:/usr/local/etc/php/php.ini\n      - ./docker/log/supervisor:/var/log/supervisor\n      - ./:/var/www\n    environment:\n      LANG: \"C.UTF-8\"\n      MODE: \"production\"\n      MYSQL_HOST: \"${DB_HOST}\"\n      MYSQL_PORT: \"${DB_PORT}\"\n      MYSQL_DB_NAME: \"${DB_DATABASE}\"\n      MYSQL_USERNAME: \"${DB_USERNAME}\"\n      MYSQL_PASSWORD: \"${DB_PASSWORD}\"\n    networks:\n      extnetwork:\n        ipv4_address: \"${APP_IPPR}.2\"\n    depends_on:\n      - redis\n      - mariadb\n    restart: unless-stopped\n\n  nginx:\n    container_name: \"dootask-nginx-${APP_ID}\"\n    image: \"nginx:alpine\"\n    ports:\n      - \"${APP_PORT}:80\"\n      - \"${APP_SSL_PORT:-}:443\"\n    volumes:\n      - ./docker/nginx:/etc/nginx/conf.d\n      - ./public:/var/www/public\n    networks:\n      extnetwork:\n        ipv4_address: \"${APP_IPPR}.3\"\n    links:\n      - php\n      - office\n      - fileview\n      - drawio-webapp\n      - drawio-export\n      - minder\n      - okr\n      - ai\n    restart: unless-stopped\n\n  redis:\n    container_name: \"dootask-redis-${APP_ID}\"\n    image: \"redis:alpine\"\n    networks:\n      extnetwork:\n        ipv4_address: \"${APP_IPPR}.4\"\n    restart: unless-stopped\n\n  mariadb:\n    container_name: \"dootask-mariadb-${APP_ID}\"\n    image: \"mariadb:10.7.3\"\n    volumes:\n      - ./docker/mysql/repassword.sh:/etc/mysql/repassword.sh\n      - ./docker/mysql/conf.d:/etc/mysql/conf.d\n      - ./docker/mysql/data:/var/lib/mysql\n    environment:\n      MYSQL_PREFIX: \"${DB_PREFIX}\"\n      MYSQL_ROOT_PASSWORD: \"${DB_ROOT_PASSWORD}\"\n      MYSQL_DATABASE: \"${DB_DATABASE}\"\n      MYSQL_USER: \"${DB_USERNAME}\"\n      MYSQL_PASSWORD: \"${DB_PASSWORD}\"\n    networks:\n      extnetwork:\n        ipv4_address: \"${APP_IPPR}.5\"\n    restart: unless-stopped\n\n  office:\n    container_name: \"dootask-office-${APP_ID}\"\n    image: \"onlyoffice/documentserver:8.2.2.1\"\n    volumes:\n      - ./docker/office/logs:/var/log/onlyoffice\n      - ./docker/office/data:/var/www/onlyoffice/Data\n      - ./docker/office/resources/require.js:/var/www/onlyoffice/documentserver/web-apps/vendor/requirejs/require.js\n      - ./docker/office/resources/common/main/resources/img/header:/var/www/onlyoffice/documentserver/web-apps/apps/common/main/resources/img/header\n      - ./docker/office/resources/documenteditor/main/resources/css/app.css:/var/www/onlyoffice/documentserver/web-apps/apps/documenteditor/main/resources/css/app.css\n      - ./docker/office/resources/documenteditor/mobile/css/526.caf35c11a8d72ca5ac85.css:/var/www/onlyoffice/documentserver/web-apps/apps/documenteditor/mobile/css/526.caf35c11a8d72ca5ac85.css\n      - ./docker/office/resources/presentationeditor/main/resources/css/app.css:/var/www/onlyoffice/documentserver/web-apps/apps/presentationeditor/main/resources/css/app.css\n      - ./docker/office/resources/presentationeditor/mobile/css/923.f9cf19de1a25c2e7bf8b.css:/var/www/onlyoffice/documentserver/web-apps/apps/presentationeditor/mobile/css/923.f9cf19de1a25c2e7bf8b.css\n      - ./docker/office/resources/spreadsheeteditor/main/resources/css/app.css:/var/www/onlyoffice/documentserver/web-apps/apps/spreadsheeteditor/main/resources/css/app.css\n      - ./docker/office/resources/spreadsheeteditor/mobile/css/611.1bef49f175e18fc085db.css:/var/www/onlyoffice/documentserver/web-apps/apps/spreadsheeteditor/mobile/css/611.1bef49f175e18fc085db.css\n    environment:\n      JWT_SECRET: ${APP_KEY}\n    networks:\n      extnetwork:\n        ipv4_address: \"${APP_IPPR}.6\"\n    restart: unless-stopped\n\n  fileview:\n    container_name: \"dootask-fileview-${APP_ID}\"\n    image: \"kuaifan/fileview:4.2.0-SNAPSHOT-RC25\"\n    environment:\n      KK_CONTEXT_PATH: \"/fileview\"\n      KK_OFFICE_PREVIEW_SWITCH_DISABLED: true\n      KK_FILE_UPLOAD_ENABLED: true\n      KK_MEDIA: \"mp3,wav,mp4,mov,avi,wmv\"\n    networks:\n      extnetwork:\n        ipv4_address: \"${APP_IPPR}.7\"\n    restart: unless-stopped\n\n  drawio-webapp:\n    container_name: \"dootask-drawio-webapp-${APP_ID}\"\n    image: \"jgraph/drawio:24.7.17\"\n    volumes:\n      - ./docker/drawio/webapp/index.html:/usr/local/tomcat/webapps/draw/index.html\n      - ./docker/drawio/webapp/stencils:/usr/local/tomcat/webapps/draw/stencils\n      - ./docker/drawio/webapp/js/app.min.js:/usr/local/tomcat/webapps/draw/js/app.min.js\n      - ./docker/drawio/webapp/js/croppie/croppie.min.css:/usr/local/tomcat/webapps/draw/js/croppie/croppie.min.css\n      - ./docker/drawio/webapp/js/diagramly/ElectronApp.js:/usr/local/tomcat/webapps/draw/js/diagramly/ElectronApp.js\n    networks:\n      extnetwork:\n        ipv4_address: \"${APP_IPPR}.8\"\n    depends_on:\n      - drawio-export\n    restart: unless-stopped\n\n  drawio-export:\n    container_name: \"dootask-drawio-export-${APP_ID}\"\n    image: \"kuaifan/export-server:0.0.1\"\n    networks:\n      extnetwork:\n        ipv4_address: \"${APP_IPPR}.9\"\n    volumes:\n      - ./docker/drawio/export/fonts:/usr/share/fonts/drawio\n    restart: unless-stopped\n\n  minder:\n    container_name: \"dootask-minder-${APP_ID}\"\n    image: \"kuaifan/minder:0.1.3\"\n    networks:\n      extnetwork:\n        ipv4_address: \"${APP_IPPR}.10\"\n    restart: unless-stopped\n\n  approve:\n    container_name: \"dootask-approve-${APP_ID}\"\n    image: \"kuaifan/dooapprove:0.1.5\"\n    environment:\n      TZ: \"${TIMEZONE:-PRC}\"\n      MYSQL_HOST: \"${DB_HOST}\"\n      MYSQL_PORT: \"${DB_PORT}\"\n      MYSQL_DBNAME: \"${DB_DATABASE}\"\n      MYSQL_USERNAME: \"${DB_USERNAME}\"\n      MYSQL_PASSWORD: \"${DB_PASSWORD}\"\n      MYSQL_Prefix: \"${DB_PREFIX}approve_\"\n      DEMO_DATA: true\n      KEY: ${APP_KEY}\n    networks:\n      extnetwork:\n        ipv4_address: \"${APP_IPPR}.11\"\n    depends_on:\n      - mariadb\n    restart: unless-stopped\n\n  ai:\n    container_name: \"dootask-ai-${APP_ID}\"\n    image: \"kuaifan/dootask-ai:0.2.6\"\n    environment:\n      REDIS_HOST: \"${REDIS_HOST}\"\n      REDIS_PORT: \"${REDIS_PORT}\"\n    networks:\n      extnetwork:\n        ipv4_address: \"${APP_IPPR}.12\"\n    depends_on:\n      - redis\n    restart: unless-stopped\n\n  okr:\n    container_name: \"dootask-okr-${APP_ID}\"\n    image: \"kuaifan/doookr:0.4.5\"\n    environment:\n      TZ: \"${TIMEZONE:-PRC}\"\n      DOO_TASK_URL: \"http://${APP_IPPR}.3\"\n      MYSQL_HOST: \"${DB_HOST}\"\n      MYSQL_PORT: \"${DB_PORT}\"\n      MYSQL_DBNAME: \"${DB_DATABASE}\"\n      MYSQL_USERNAME: \"${DB_USERNAME}\"\n      MYSQL_PASSWORD: \"${DB_PASSWORD}\"\n      MYSQL_PREFIX: \"${DB_PREFIX}\"\n      DEMO_DATA: true\n      KEY: ${APP_KEY}\n    networks:\n      extnetwork:\n        ipv4_address: \"${APP_IPPR}.13\"\n    depends_on:\n      - mariadb\n    restart: unless-stopped\n\n  face:\n    container_name: \"dootask-face-${APP_ID}\"\n    image: \"hitosea2020/dooface:0.0.1\"\n    ports:\n      - \"7788:7788\"\n    environment:\n      TZ: \"${TIMEZONE:-PRC}\"\n      STORAGE: mysql\n      MYSQL_HOST: \"${DB_HOST}\"\n      MYSQL_PORT: \"${DB_PORT}\"\n      MYSQL_USERNAME: \"${DB_USERNAME}\"\n      MYSQL_PASSWORD: \"${DB_PASSWORD}\"\n      MYSQL_DB_NAME: \"${DB_DATABASE}\"\n      DB_PREFIX: \"${DB_PREFIX}\"\n      REPORT_API: \"http://${APP_IPPR}.3:80/api/public/checkin/report\"\n    depends_on:\n      - mariadb\n    networks:\n      extnetwork:\n        ipv4_address: \"${APP_IPPR}.14\"\n    restart: unless-stopped\n\nnetworks:\n  extnetwork:\n    name: \"dootask-networks-${APP_ID}\"\n    ipam:\n      config:\n        - subnet: \"${APP_IPPR}.0/24\"\n          gateway: \"${APP_IPPR}.1\"\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "electron",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 0.0849609375,
          "content": "<script>window.location.href=window.location.href.replace(/:\\d+/, ':' + 2222)</script>\n"
        },
        {
          "name": "language",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.8916015625,
          "content": "{\n    \"name\": \"DooTask\",\n    \"version\": \"0.42.37\",\n    \"codeVerson\": 165,\n    \"description\": \"DooTask is task management system.\",\n    \"scripts\": {\n        \"start\": \"./cmd dev\",\n        \"build\": \"./cmd prod\",\n        \"version\": \"node ./bin/version.js\",\n        \"translate\": \"./cmd translate\"\n    },\n    \"author\": {\n        \"name\": \"KuaiFan\",\n        \"email\": \"aipaw@live.cn\",\n        \"url\": \"https://github.com/kuaifan\"\n    },\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"git+https://github.com/kuaifan/dootask.git\"\n    },\n    \"devDependencies\": {\n        \"@chenfengyuan/vue-qrcode\": \"^1.0.2\",\n        \"@kangc/v-md-editor\": \"^1.7.12\",\n        \"@micro-zoe/micro-app\": \"^0.8.11\",\n        \"@traptitech/markdown-it-katex\": \"^3.6.0\",\n        \"autoprefixer\": \"^10.4.13\",\n        \"axios\": \"^0.24.0\",\n        \"chokidar\": \"^4.0.1\",\n        \"codemirror\": \"^5.65.16\",\n        \"cross-env\": \"^7.0.3\",\n        \"css-loader\": \"^6.7.2\",\n        \"dayjs\": \"^1.11.13\",\n        \"dexie\": \"^3.2.3\",\n        \"echarts\": \"^5.2.2\",\n        \"element-sea\": \"^2.15.10-7\",\n        \"file-loader\": \"^6.2.0\",\n        \"highlight.js\": \"^11.7.0\",\n        \"inquirer\": \"^8.2.0\",\n        \"internal-ip\": \"^6.2.0\",\n        \"jquery\": \"^3.6.4\",\n        \"jspdf\": \"^2.5.1\",\n        \"less\": \"^4.1.2\",\n        \"less-loader\": \"^10.2.0\",\n        \"localforage\": \"^1.10.0\",\n        \"lodash\": \"^4.17.21\",\n        \"markdown-it\": \"^14.1.0\",\n        \"markdown-it-link-attributes\": \"^4.0.1\",\n        \"mitt\": \"^3.0.1\",\n        \"notification-koro1\": \"^1.1.1\",\n        \"openpgp_hi\": \"^5.7.0-1\",\n        \"photoswipe\": \"^5.2.8\",\n        \"postcss\": \"^8.4.5\",\n        \"prismjs\": \"^1.29.0\",\n        \"quill-hi\": \"^2.0.0-rc1\",\n        \"quill-mention-hi\": \"^4.0.0-8\",\n        \"resolve-url-loader\": \"^4.0.0\",\n        \"sass\": \"1.77.4\",\n        \"sass-loader\": \"14.2.1\",\n        \"stylus\": \"^0.59.0\",\n        \"stylus-loader\": \"^7.1.0\",\n        \"tinymce\": \"^5.10.3\",\n        \"tui-calendar-hi\": \"^1.15.1-5\",\n        \"view-design-hi\": \"^4.7.0-59\",\n        \"vite\": \"^2.9.15\",\n        \"vite-plugin-file-copy\": \"^1.0.0\",\n        \"vite-plugin-require\": \"^1.1.10\",\n        \"vite-plugin-vue2\": \"^2.0.3\",\n        \"vue\": \"~2.6.14\",\n        \"vue-clipboard2\": \"^0.3.3\",\n        \"vue-kityminder-ggg\": \"^1.3.10\",\n        \"vue-loader\": \"^15.10.1\",\n        \"vue-resize-observer\": \"^2.0.16\",\n        \"vue-router\": \"^3.6.5\",\n        \"vue-template-compiler\": \"~2.6.14\",\n        \"vue-virtual-scroll-list-hi\": \"^2.3.5-14\",\n        \"vuedraggable\": \"^2.24.3\",\n        \"vuex\": \"^3.6.2\"\n    },\n    \"app\": [\n        {\n            \"id\": \"com.dootask.task\",\n            \"name\": \"DooTask\",\n            \"url\": \"http://public/\",\n            \"urls\": [\n                \"https://dootask.com/\",\n                \"https://www.dootask.com/\",\n                \"https://t.hitosea.com/\"\n            ],\n            \"publish\": {\n                \"provider\": \"generic\",\n                \"url\": \"https://www.dootask.com/desktop/publish\"\n            }\n        }\n    ]\n}\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 1.173828125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"./vendor/phpunit/phpunit/phpunit.xsd\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n>\n    <testsuites>\n        <testsuite name=\"Unit\">\n            <directory suffix=\"Test.php\">./tests/Unit</directory>\n        </testsuite>\n        <testsuite name=\"Feature\">\n            <directory suffix=\"Test.php\">./tests/Feature</directory>\n        </testsuite>\n    </testsuites>\n    <coverage processUncoveredFiles=\"true\">\n        <include>\n            <directory suffix=\".php\">./app</directory>\n        </include>\n    </coverage>\n    <php>\n        <server name=\"APP_ENV\" value=\"testing\"/>\n        <server name=\"BCRYPT_ROUNDS\" value=\"4\"/>\n        <server name=\"CACHE_DRIVER\" value=\"array\"/>\n        <!-- <server name=\"DB_CONNECTION\" value=\"sqlite\"/> -->\n        <!-- <server name=\"DB_DATABASE\" value=\":memory:\"/> -->\n        <server name=\"MAIL_MAILER\" value=\"array\"/>\n        <server name=\"QUEUE_CONNECTION\" value=\"sync\"/>\n        <server name=\"SESSION_DRIVER\" value=\"array\"/>\n        <server name=\"TELESCOPE_ENABLED\" value=\"false\"/>\n    </php>\n</phpunit>\n"
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "routes",
          "type": "tree",
          "content": null
        },
        {
          "name": "server.php",
          "type": "blob",
          "size": 0.5498046875,
          "content": "<?php\n\n/**\n * Laravel - A PHP Framework For Web Artisans\n *\n * @package  Laravel\n * @author   Taylor Otwell <taylor@laravel.com>\n */\n\n$uri = urldecode(\n    parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH)\n);\n\n// This file allows us to emulate Apache's \"mod_rewrite\" functionality from the\n// built-in PHP web server. This provides a convenient way to test a Laravel\n// application without having installed a \"real\" web server software here.\nif ($uri !== '/' && file_exists(__DIR__.'/public'.$uri)) {\n    return false;\n}\n\nrequire_once __DIR__.'/public/index.php';\n"
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "vite.config.js",
          "type": "blob",
          "size": 4.5986328125,
          "content": "import fs from \"fs\";\nimport path from \"path\";\nimport {execSync} from \"child_process\";\nimport {defineConfig, loadEnv} from 'vite'\nimport {createVuePlugin} from 'vite-plugin-vue2';\nimport vitePluginRequire from 'vite-plugin-require'\nimport vitePluginFileCopy from 'vite-plugin-file-copy';\nimport autoprefixer from 'autoprefixer';\nimport chokidar from 'chokidar';\n\nconst argv = process.argv;\nconst basePath = argv.includes('electronBuild') ? './' : '/';\nconst publicPath = argv.includes('electronBuild') ? 'electron/public' : 'public';\nconst staticDir = {src: path.resolve(__dirname, 'resources/assets/statics/public'), dest: path.resolve(__dirname, publicPath)}\n\nif (!argv.includes('fromcmd')) {\n    execSync(`npx ${path.resolve(__dirname, 'cmd')} ${argv.includes(\"build\") ? \"build\" : \"dev\"}`, {stdio: \"inherit\"});\n    process.exit()\n}\n\nexport default defineConfig(({command, mode}) => {\n    const env = loadEnv(mode, process.cwd(), '')\n    const host = \"0.0.0.0\"\n    const port = parseInt(env['APP_DEV_PORT'])\n\n    if (command === 'serve') {\n        const hotFile = path.resolve(__dirname, 'public/hot')\n        const hotClean = (exit) => {\n            if (fs.existsSync(hotFile)) {\n                fs.unlinkSync(hotFile);\n            }\n            if (exit) {\n                process.exit()\n            }\n        }\n        hotClean(false)\n        fs.writeFileSync(hotFile, JSON.stringify(env));\n        process.on('exit', () => hotClean(true));\n        process.on('SIGINT', () => hotClean(true));\n        process.on('SIGHUP', () => hotClean(true));\n    }\n\n    const plugins = [\n        createVuePlugin({\n            template: {\n                compilerOptions: {\n                    isCustomElement: (tag) => tag.includes('micro-app'),\n                }\n            }\n        }),\n        vitePluginRequire(),\n        vitePluginFileCopy([staticDir])\n    ]\n    if (mode === \"development\") {\n        plugins.push({\n            name: 'watch-copy',\n            configureServer() {\n                chokidar.watch(staticDir.src, {\n                    ignoreInitial: true,\n                }).on('all', (event, filePath) => {\n                    if (['add', 'change', 'unlink'].includes(event)) {\n                        const relativePath = path.relative(staticDir.src, filePath);\n                        const destPath = path.resolve(staticDir.dest, relativePath);\n                        if (event === 'unlink') {\n                            if (fs.existsSync(destPath)) {\n                                fs.unlinkSync(destPath);\n                                console.log(`Removed ${destPath}`);\n                            }\n                            return;\n                        }\n                        if (path.basename(filePath) === '.DS_Store') {\n                            return;\n                        }\n                        fs.mkdirSync(path.dirname(destPath), {recursive: true});\n                        fs.copyFileSync(filePath, destPath);\n                        console.log(`Copied ${filePath} to ${destPath}`);\n                    }\n                });\n            }\n        })\n    }\n\n    return {\n        base: basePath,\n        publicDir: publicPath,\n        server: {\n            host,\n            port,\n            strictPort: false,\n        },\n        resolve: {\n            alias: {\n                '~element-sea': path.resolve(__dirname, 'node_modules/element-sea'),\n                '~quill-hi': path.resolve(__dirname, 'node_modules/quill-hi'),\n                '~quill-mention-hi': path.resolve(__dirname, 'node_modules/quill-mention-hi'),\n                '../images': path.resolve(__dirname, command === 'serve' ? '/images' : 'resources/assets/statics/public/images'),\n                '../css': path.resolve(__dirname, command === 'serve' ? '/css' : 'resources/assets/statics/public/css')\n            },\n            extensions: ['.mjs', '.js', '.ts', '.jsx', '.tsx', '.json', '.vue']\n        },\n        build: {\n            manifest: true,\n            outDir: publicPath,\n            assetsDir: \"js/build\",\n            emptyOutDir: false,\n            rollupOptions: {\n                input: 'resources/assets/js/app.js',\n                output: {\n                    manualChunks(id) {\n                        if (id.includes('node_modules')) {\n                            return id.toString().split('node_modules/')[1].split('/')[0].toString();\n                        }\n                    }\n                }\n            },\n            brotliSize: false,\n            chunkSizeWarningLimit: 1500,\n        },\n        plugins,\n        css: {\n            postcss: {\n                plugins: [\n                    autoprefixer\n                ]\n            }\n        }\n    };\n});\n"
        }
      ]
    }
  ]
}