{
  "metadata": {
    "timestamp": 1736711901323,
    "page": 279,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "laracasts/flash",
      "stars": 2660,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1416015625,
          "content": "* text=auto\n\n/tests export-ignore\n.gitattributes export-ignore\n.gitignore export-ignore\n.travis.yml export-ignore\nphpunit.xml.dist export-ignore\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.05078125,
          "content": "/vendor\ncomposer.phar\ncomposer.lock\n.DS_Store\n.idea\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2294921875,
          "content": "language: php\n\nphp:\n  - 5.3\n  - 5.4\n  - 5.5\n  - 5.6\n  - 7.0\n  - 7.1\n  - 7.2\n  - 7.3\n  - 7.4\n  - 8.0\n  - 8.1\n  - hhvm\n\nbefore_script:\n  - composer self-update\n  - composer install --prefer-source --no-interaction --dev\n\nscript: phpunit\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.8896484375,
          "content": "{\n    \"name\": \"laracasts/flash\",\n    \"description\": \"Easy flash notifications\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Jeffrey Way\",\n            \"email\": \"jeffrey@laracasts.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=5.4.0\",\n        \"illuminate/support\": \"~5.0|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\"\n    },\n    \"require-dev\": {\n        \"mockery/mockery\": \"dev-master\",\n        \"phpunit/phpunit\": \"^6.1|^9.5.10|^10.5\"\n    },\n    \"autoload\": {\n        \"psr-0\": {\n            \"Laracasts\\\\Flash\": \"src/\"\n        },\n        \"files\": [\n            \"src/Laracasts/Flash/functions.php\"\n        ]\n    },\n    \"minimum-stability\": \"stable\",\n    \"extra\": {\n        \"laravel\": {\n            \"providers\": [\n                \"Laracasts\\\\Flash\\\\FlashServiceProvider\"\n            ],\n            \"aliases\": {\n                \"Flash\": \"Laracasts\\\\Flash\\\\Flash\"\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.556640625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\"\n         syntaxCheck=\"false\"\n>\n    <testsuites>\n        <testsuite name=\"Package Test Suite\">\n            <directory suffix=\".php\">./tests/</directory>\n        </testsuite>\n    </testsuites>\n</phpunit>\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 3.595703125,
          "content": "# Easy Flash Messages for Your Laravel App\n\nThis composer package offers a Twitter Bootstrap optimized flash messaging setup for your Laravel applications.\n\n## Installation\n\nBegin by pulling in the package through Composer.\n\n```bash\ncomposer require laracasts/flash\n```\n\nNext, as noted above, the default CSS classes for your flash message are optimized for Twitter Bootstrap. As such, either pull in the Bootstrap's CSS within your HTML or layout file, or write your own CSS based on these classes.\n\n```html\n<link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\">\n```\n\n## Usage\n\nWithin your controllers, before you perform a redirect, make a call to the `flash()` function.\n\n```php\npublic function store()\n{\n    flash('Welcome Aboard!');\n\n    return home();\n}\n```\n\nYou may also do:\n\n- `flash('Message')->success()`: Set the flash theme to \"success\".\n- `flash('Message')->error()`: Set the flash theme to \"danger\".\n- `flash('Message')->warning()`: Set the flash theme to \"warning\".\n- `flash('Message')->overlay()`: Render the message as an overlay.\n- `flash()->overlay('Modal Message', 'Modal Title')`: Display a modal overlay with a title.\n- `flash('Message')->important()`: Add a close button to the flash message.\n- `flash('Message')->error()->important()`: Render a \"danger\" flash message that must be dismissed.\n\nWith this message flashed to the session, you may now display it in your view(s). Because flash messages and overlays are so common, we provide a template out of the box to get you started. You're free to use - and even modify to your needs - this template how you see fit.\n\n```html\n@include('flash::message')\n```\n\n## Example\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n    <link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\">\n</head>\n<body>\n\n<div class=\"container\">\n    @include('flash::message')\n\n    <p>Welcome to my website...</p>\n</div>\n\n<!-- If using flash()->important() or flash()->overlay(), you'll need to pull in the JS for Twitter Bootstrap. -->\n<script src=\"//code.jquery.com/jquery.js\"></script>\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js\"></script>\n\n<script>\n    $('#flash-overlay-modal').modal();\n</script>\n\n</body>\n</html>\n```\n\nIf you need to modify the flash message partials, you can run:\n\n```bash\nphp artisan vendor:publish --provider=\"Laracasts\\Flash\\FlashServiceProvider\"\n```\n\nThe two package views will now be located in the `resources/views/vendor/flash/` directory.\n\n```php\nflash('Welcome Aboard!');\n\nreturn home();\n```\n\n```php\nflash('Sorry! Please try again.')->error();\n\nreturn home();\n```\n\n```php\nflash()->overlay('You are now a Laracasts member!', 'Yay');\n\nreturn home();\n```\n\n> [Learn exactly how to build this very package on Laracasts!](https://laracasts.com/lessons/flexible-flash-messages)\n\n## Hiding Flash Messages\n\nA common desire is to display a flash message for a few seconds, and then hide it. To handle this, write a simple bit of JavaScript. For example, using jQuery, you might add the following snippet just before the closing `</body>` tag.\n\n```html\n<script>\n$('div.alert').not('.alert-important').delay(3000).fadeOut(350);\n</script>\n```\n\nThis will find any alerts - excluding the important ones, which should remain until manually closed by the user - wait three seconds, and then fade them out.\n\n## Multiple Flash Messages\n\nNeed to flash multiple flash messages to the session? No problem.\n\n```php\nflash('Message 1');\nflash('Message 2')->important();\n\nreturn redirect('somewhere');\n```\n\nDone! You'll now see two flash messages upon redirect.\n\n\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}