{
  "metadata": {
    "timestamp": 1736712110391,
    "page": 696,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "silvanmelchior/RPi_Cam_Web_Interface",
      "stars": 1542,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2158203125,
          "content": ".*.swp      # Vim Files\n*~          # backup files\n\n# Generated text files\ninstall.txt\nconfig.txt\ninstall.txt\nstart.txt\nupdate.txt\n\n# website config\netc/nginx/sites-available/default\n\n# settings\netc/raspimjpeg/raspimjpeg\n"
        },
        {
          "name": "DoNot UseRPi_Cam_Web_Interface_Installer.sh",
          "type": "blob",
          "size": 56.533203125,
          "content": "#!/bin/bash\n\n# Copyright (c) 2014, Silvan Melchior\n# All rights reserved.\n\n# Redistribution and use, with or without modification, are permitted provided\n# that the following conditions are met:\n#    * Redistributions of source code must retain the above copyright\n#      notice, this list of conditions and the following disclaimer.\n#    * Neither the name of the copyright holder nor the\n#      names of its contributors may be used to endorse or promote products\n#      derived from this software without specific prior written permission.\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# Description\n# This script installs a browser-interface to control the RPi Cam. It can be run\n# on any Raspberry Pi with a newly installed raspbian and enabled camera-support.\n#\n# Edited by jfarcher to work with github\n# Edited by slabua to support custom installation folder\n# Additions by btidey, miraaz, gigpi \n\n\n# Configure below the folder name where to install the software to,\n#  or leave empty to install to the root of the webserver.\n# The folder name must be a subfolder of /var/www/ or /var/www/html/ which will be created\n#  accordingly, and must not include leading nor trailing / character.\n# Default upstream behaviour: RPICAMDIR=\"\" (installs in /var/www/ or /var/www/html)\n\ncd $(dirname $(readlink -f $0))\n\nif [ $(dpkg-query -W -f='${Status}' \"dialog\" 2>/dev/null | grep -c \"ok installed\") -eq 0 ]; then\n  sudo apt-get install -y dialog\nfi\n\n# Terminal colors\ncolor_red=\"tput setaf 1\"\ncolor_green=\"tput setaf 2\"\ncolor_reset=\"tput sgr0\"\nRED=$(tput setaf 1)\nGREEN=$(tput setaf 2)\nNORMAL=$(tput sgr0)\n\nRASPICONFIG=/boot/config.txt\n\nFN_WWWROOT_PORT()\n{\nPACKAGE=('nginx' 'apache2');\nfor i in \"${PACKAGE[@]}\"\ndo\n  if [ $(dpkg-query -W -f='${Status}' \"$i\" 2>/dev/null | grep -c \"ok installed\") -eq 1 ]; then\n    WEBSERVER=\"$i\"\n    if [ \"$WEBSERVER\" == \"nginx\" ]; then\n      WWWROOT=$(sudo cat /etc/nginx/sites-enabled/default | grep \"^\troot\" | cut -d \" \" -f2 | cut -d \";\" -f1)\n      WEBPORT=$(sudo cat /etc/nginx/sites-available/default | grep \"^\tlisten\" | cut -d \" \" -f2 | head -1)\n      INFO_NGINX=\"(Nginx installed)\"\n    fi\n    if [ \"$WEBSERVER\" == \"apache2\" ]; then\n      if [ -f \"/etc/apache2/sites-available/default\" ]; then\n        APACHEDEFAULT=\"/etc/apache2/sites-available/default\"\n      elif [ -f \"/etc/apache2/sites-available/000-default.conf\" ]; then\n        APACHEDEFAULT=\"/etc/apache2/sites-available/000-default.conf\"\n      fi\n      WWWROOT=$(sudo cat $APACHEDEFAULT | grep \"DocumentRoot\" | cut -d \" \" -f2)\n      WEBPORT=$(sudo cat $APACHEDEFAULT | grep \"<VirtualHost\" | cut -d \":\" -f2 | cut -d \">\" -f1)\n      INFO_APACHE2=\"(Apache2 installed)\"\n    fi\n  fi\ndone\n}\nFN_WWWROOT_PORT\n\nFN_INSTALLDIR()\n{\nsource ./config.txt\nif [ \"$RPICAMDIR\" == \"\" ]; then\n  INSTALLDIR=\"$WWWROOT\"\nelse\n  INSTALLDIR=\"$WWWROOT/$RPICAMDIR\"\nfi\n}\nFN_INSTALLDIR\n\n# Tedect Debian version (we not using that right now. Historical, maby we can use)\nDEBVERSION=$(cat /etc/issue)\nif [ \"$DEBVERSION\" == \"Raspbian GNU/Linux 7 \\n \\l\" ]; then\n  echo \"Raspbian Wheezy\";\n  #WWWROOT=\"/var/www\"\nelif [ \"$DEBVERSION\" == \"Raspbian GNU/Linux 8 \\n \\l\" ]; then\n  echo \"Raspbian Jessie\";\n  #WWWROOT=\"/var/www/html\"\nelse\n  echo \"Unknown\"\n  #WWWROOT=\"/var/www\"\nfi\n\n# -------------------------------- START/FUNCTIONS --------------------------------\t\nFN_STOP ()\n{ # This is function stop\n        sudo killall raspimjpeg\n        sudo killall php\n        sudo killall motion\n        sudo service apache2 stop >/dev/null 2>&1\n        sudo service nginx stop >/dev/null 2>&1\n        dialog --title 'Stop message' --infobox 'Stopped.' 4 16 ; sleep 2\n}\n\nFN_REBOOT ()\n{ # This is function reboot system\n  dialog --title \"You must reboot your system!\" --backtitle \"$backtitle\" --yesno \"Do you want to reboot now?\" 5 33\n  response=$?\n    case $response in\n      0) sudo reboot;;\n      1) dialog --title 'Reboot message' --colors --infobox \"\\Zb\\Z1\"'Pending system changes that require a reboot!' 4 28 ; sleep 2;;\n      255) dialog --title 'Reboot message' --colors --infobox \"\\Zb\\Z1\"'Pending system changes that require a reboot!' 4 28 ; sleep 2;;\n    esac\n}\n\nFN_ABORT()\n{\n    $color_red; echo >&2 '\n***************\n*** ABORTED ***\n***************\n'\n    echo \"An error occurred. Exiting...\" >&2; $color_reset\n    exit 1\n}\n\nFN_RPICAMDIR ()\n{ \n  source ./config.txt\n  \n  tmpfile=$(mktemp)\n  dialog  --backtitle \"$backtitle\" --title \"Default www-root is $WWWROOT\" --cr-wrap --inputbox \"\\\n  Current install path is $WWWROOT/$RPICAMDIR\n  Enter new install Subfolder if you like.\" 8 52 $RPICAMDIR 2>$tmpfile\n\t\t\t\n  sel=$?\n\t\t\t\n  RPICAMDIR=`cat $tmpfile`\n  case $sel in\n  0)\n    sudo sed -i \"s/^RPICAMDIR=.*/RPICAMDIR=\\\"$RPICAMDIR\\\"/g\" ./config.txt\t\n  ;;\n  1) source ./config.txt ;;\n  255) source ./config.txt ;;\n  esac\n\n  dialog --title 'Install path' --infobox \"Install path is set $WWWROOT/$RPICAMDIR\" 4 48 ; sleep 3\n  sudo chmod 664 ./config.txt\n\n  if [ \"$DEBUG\" == \"yes\" ]; then\n    dialog --title \"FN_RPICAMDIR ./config.txt contains\" --textbox ./config.txt 22 70\n  fi\n}\n\nFN_APACHEPORT ()\n{\n  source ./config.txt\n\t\t\n  if [ \"$WEBPORT\" == \"\" ]; then\n    WEBPORT=$(cat $APACHEDEFAULT | grep \"<VirtualHost\" | cut -d \":\" -f2 | cut -d \">\" -f1)\n    sudo sed -i \"s/^WEBPORT=.*/WEBPORT=\\\"$WEBPORT\\\"/g\" ./config.txt\n  fi\t\t\n\t\t\n  tmpfile=$(mktemp)\n  dialog  --backtitle \"$backtitle\" --title \"Current Apache web server port is $WEBPORT\" --inputbox \"Enter new port:\" 8 40 $WEBPORT 2>$tmpfile\n\t\t\t\n  sel=$?\n\t\t\t\n  WEBPORT=`cat $tmpfile`\n  case $sel in\n  0)\n    sudo sed -i \"s/^WEBPORT=.*/WEBPORT=\\\"$WEBPORT\\\"/g\" ./config.txt\t\n  ;;\n  1) source ./config.txt ;;\n  255) source ./config.txt ;;\n  esac\n\t\t\t\n  tmpfile=$(mktemp)\n  sudo awk '/NameVirtualHost \\*:/{c+=1}{if(c==1){sub(\"NameVirtualHost \\*:.*\",\"NameVirtualHost *:'$WEBPORT'\",$0)};print}' /etc/apache2/ports.conf > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/apache2/ports.conf\n  sudo awk '/Listen/{c+=1}{if(c==1){sub(\"Listen.*\",\"Listen '$WEBPORT'\",$0)};print}' /etc/apache2/ports.conf > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/apache2/ports.conf\n  sudo awk '/<VirtualHost \\*:/{c+=1}{if(c==1){sub(\"<VirtualHost \\*:.*\",\"<VirtualHost *:'$WEBPORT'>\",$0)};print}' $APACHEDEFAULT > \"$tmpfile\" && sudo mv \"$tmpfile\" $APACHEDEFAULT\n  if [ ! \"$RPICAMDIR\" == \"\" ]; then\n    if [ \"$WEBPORT\" != \"80\" ]; then\n      sudo sed -i \"s/^netcam_url.*/netcam_url\\ http:\\/\\/localhost:$WEBPORT\\/$RPICAMDIR\\/cam_pic.php/g\" /etc/motion/motion.conf\n    else\n      sudo sed -i \"s/^netcam_url.*/netcam_url\\ http:\\/\\/localhost\\/$RPICAMDIR\\/cam_pic.php/g\" /etc/motion/motion.conf\n    fi\n  else\n    if [ \"$WEBPORT\" != \"80\" ]; then\n      sudo sed -i \"s/^netcam_url.*/netcam_url\\ http:\\/\\/localhost:$WEBPORT\\/cam_pic.php/g\" /etc/motion/motion.conf\n    else\n      sudo sed -i \"s/^netcam_url.*/netcam_url\\ http:\\/\\/localhost\\/cam_pic.php/g\" /etc/motion/motion.conf\n    fi\n  fi\n  sudo chown motion:www-data /etc/motion/motion.conf\n  sudo chmod 664 /etc/motion/motion.conf\n  sudo service apache2 restart\n}\n\nFN_SECURE_APACHE_NO ()\n{\n  if [ \"$DEBUG\" == \"yes\" ]; then\n    dialog --title 'FN_SECURE_APACHE_NO' --infobox 'FN_SECURE_APACHE_NO STARTED.' 4 25 ; sleep 2\n  fi\n  #APACHEDEFAULT=\"/etc/apache2/sites-available/default\"\n  if [ \"$APACHEDEFAULT\" == \"/etc/apache2/sites-available/default\" ]; then\n    tmpfile=$(mktemp)\n    sudo awk '/AllowOverride/{c+=1}{if(c==2){sub(\"AllowOverride.*\",\"AllowOverride None\",$0)};print}' $APACHEDEFAULT > \"$tmpfile\" && sudo mv \"$tmpfile\" $APACHEDEFAULT\n  elif [ \"$APACHEDEFAULT\" == \"/etc/apache2/sites-available/000-default.conf\" ]; then\t\n    tmpfile=$(mktemp)\n    sudo awk '/AllowOverride/{c+=1}{if(c==3){sub(\"AllowOverride.*\",\"AllowOverride None\",$0)};print}' /etc/apache2/apache2.conf > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/apache2/apache2.conf\n  else\n    echo \"$(date '+%d-%b-%Y-%H-%M') Disable security is not possible in apache conf!\" >> ./error.txt\n  fi\t\n  #sudo awk '/netcam_userpass/{c+=1}{if(c==1){sub(\"^netcam_userpass.*\",\"; netcam_userpass value\",$0)};print}' /etc/motion/motion.conf > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/motion/motion.conf\n  sudo sed -i \"s/^netcam_userpass.*/; netcam_userpass value/g\" /etc/motion/motion.conf\n  sudo /etc/init.d/apache2 restart\n}\n\nFN_SECURE_APACHE ()\n{ # This is function secure in config.txt file. Working only apache right now! GUI mode.\nsource ./config.txt\n\nFN_SECURE_APACHE_YES ()\n{\n  if [ \"$DEBUG\" == \"yes\" ]; then\n    dialog --title 'FN_SECURE_APACHE_YES' --infobox 'FN_SECURE_APACHE_YES STARTED.' 4 25 ; sleep 2\n  fi\n  #APACHEDEFAULT=\"/etc/apache2/sites-available/default\"\n  if [ \"$APACHEDEFAULT\" == \"/etc/apache2/sites-available/default\" ]; then\n    tmpfile=$(mktemp)\n    sudo awk '/AllowOverride/{c+=1}{if(c==2){sub(\"AllowOverride.*\",\"AllowOverride All\",$0)};print}' $APACHEDEFAULT > \"$tmpfile\" && sudo mv \"$tmpfile\" $APACHEDEFAULT\n  #APACHEDEFAULT=\"/etc/apache2/sites-available/000-default.conf\"\n  elif [ \"$APACHEDEFAULT\" == \"/etc/apache2/sites-available/000-default.conf\" ]; then\n    tmpfile=$(mktemp)\n    sudo awk '/AllowOverride/{c+=1}{if(c==3){sub(\"AllowOverride.*\",\"AllowOverride All\",$0)};print}' /etc/apache2/apache2.conf > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/apache2/apache2.conf\n  else\n    echo \"$(date '+%d-%b-%Y-%H-%M') Enable security is not possible in apache conf!\" >> ./error.txt\n  fi \n  #sudo awk '/; netcam_userpass/{c+=1}{if(c==1){sub(\"; netcam_userpass.*\",\"netcam_userpass '$user':'$passwd'\",$0)};print}' /etc/motion/motion.conf > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/motion/motion.conf\n  sudo sed -i \"s/^; netcam_userpass.*/netcam_userpass/g\" /etc/motion/motion.conf\t\t\n  sudo sed -i \"s/^netcam_userpass.*/netcam_userpass $user:$passwd/g\" /etc/motion/motion.conf\n  sudo htpasswd -b -c /usr/local/.htpasswd $user $passwd\n  sudo /etc/init.d/apache2 restart\n}\n\n# We make missing .htacess file\nif [ ! -e $WWWROOT/$RPICAMDIR/.htaccess ]; then\nsudo bash -c \"cat > $WWWROOT/$RPICAMDIR/.htaccess\" << EOF\nAuthName \"RPi Cam Web Interface Restricted Area\"\nAuthType Basic\nAuthUserFile /usr/local/.htpasswd\nAuthGroupFile /dev/null\nRequire valid-user\nEOF\nsudo chown -R www-data:www-data $WWWROOT/$RPICAMDIR/.htaccess\nfi\n\nexec 3>&1\n\ndialog                                         \\\n--separate-widget $'\\n'                        \\\n--title \"RPi Cam Apache Webserver Security\"    \\\n--backtitle \"$backtitle\"\t\t\t\t\t   \\\n--form \"\"                                      \\\n0 0 0                                          \\\n\"Enable:(yes/no)\" 1 1   \"$security\" 1 18 15 0  \\\n\"User:\"           2 1   \"$user\"     2 18 15 0  \\\n\"Password:\"       3 1   \"$passwd\"   3 18 15 0  \\\n2>&1 1>&3 | {\n    read -r security\n    read -r user\n    read -r passwd\n\nif [[ ! \"$security\" == \"\" || ! \"$user\" == \"\" || ! \"$passwd\" == \"\" ]] ; then\n  sudo sed -i \"s/^security=.*/security=\\\"$security\\\"/g\" ./config.txt\n  sudo sed -i \"s/^user=.*/user=\\\"$user\\\"/g\" ./config.txt\n  sudo sed -i \"s/^passwd=.*/passwd=\\\"$passwd\\\"/g\" ./config.txt\nfi\n}\n\nexec 3>&-\n\nsource ./config.txt\n\nif [ ! \"$security\" == \"yes\" ]; then\n  FN_SECURE_APACHE_NO\n  sudo sed -i \"s/^security=.*/security=\\\"no\\\"/g\" ./config.txt\nelse\n  FN_SECURE_APACHE_YES\nfi\n\nsudo chown motion:www-data /etc/motion/motion.conf\nsudo chmod 664 /etc/motion/motion.conf\nsudo chmod 664 ./config.txt\nsudo service apache2 restart\n\nif [ \"$DEBUG\" == \"yes\" ]; then\n  if [ \"$APACHEDEFAULT\" == \"/etc/apache2/sites-available/default\" ]; then\n    dialog --title \"FN_SECURE_APACHE $APACHEDEFAULT contains\" --textbox $APACHEDEFAULT 22 70\n  elif [ \"$APACHEDEFAULT\" == \"/etc/apache2/sites-available/000-default.conf\" ]; then\n    dialog --title \"FN_SECURE_APACHE /etc/apache2/apache2.conf contains\" --textbox /etc/apache2/apache2.conf 22 70    \n  else\n    echo \"$(date '+%d-%b-%Y-%H-%M') Edit security is not possible in apache conf!\"\n  fi\n  dialog --title \"FN_SECURE_APACHE /etc/motion/motion.conf contains\" --textbox /etc/motion/motion.conf 22 70\n  dialog --title \"FN_SECURE_APACHE ./config.txt contains\" --textbox ./config.txt 22 70\nfi\n}\n# -------------------------------- END/FUNCTIONS --------------------------------\t\n\n# AUTOSTART. We edit rc.local\nFN_AUTOSTART_DISABLE ()\n{\n  if ! grep -Fq '#START RASPIMJPEG SECTION' /etc/rc.local; then\n    FN_CONFIGURE_MENU\n  elif grep -Fq '#START RASPIMJPEG SECTION' /etc/rc.local; then\n    tmpfile=$(mktemp)\n    sudo sed '/#START/,/#END/d' /etc/rc.local > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/rc.local\n    # Remove to growing plank lines.\n    sudo awk '!NF {if (++n <= 1) print; next}; {n=0;print}' /etc/rc.local > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/rc.local\n    sudo sed -i \"s/^AUTOSTART.*/AUTOSTART=\\\"no\\\"/g\" ./config.txt\n\t\t\t  \n    # Finally we set owners and permissions all files what we changed.\n    sudo chown root:root /etc/rc.local\n    sudo chmod 755 /etc/rc.local\n    sudo chmod 664 ./config.txt\n  fi\t\n\t\n  if [ \"$DEBUG\" == \"yes\" ]; then\n    dialog --title \"FN_AUTOSTART_DISABLE /etc/rc.local contains\" --textbox /etc/rc.local 22 70\n    dialog --title \"FN_AUTOSTART_DISABLE ./config.txt contains\" --textbox ./config.txt 22 70\n  fi\n}\n\nFN_AUTOSTART_ENABLE ()\n{\nFN_INSTALLDIR\nif grep -Fq '#START RASPIMJPEG SECTION' /etc/rc.local; then\n  FN_CONFIGURE_MENU\nelif ! grep -Fq '#START RASPIMJPEG SECTION' /etc/rc.local; then\n  sudo sed -i '/exit 0/d' /etc/rc.local\nsudo bash -c \"cat >> /etc/rc.local\" << EOF\n#START RASPIMJPEG SECTION\nmkdir -p /dev/shm/mjpeg\nchown www-data:www-data /dev/shm/mjpeg\nchmod 777 /dev/shm/mjpeg\nsleep 4;su -c 'raspimjpeg > /dev/null 2>&1 &' www-data\nif [ -e /etc/debian_version ]; then\n  sleep 4;su -c \"php $INSTALLDIR/schedule.php > /dev/null 2>&1 &\" www-data\nelse\n  sleep 4;su -s '/bin/bash' -c \"php $INSTALLDIR/schedule.php > /dev/null 2>&1 &\" www-data\nfi\n#END RASPIMJPEG SECTION\n\nexit 0\nEOF\n  sudo chmod 755 /etc/rc.local\nfi\n\nsudo sed -i \"s/^AUTOSTART.*/AUTOSTART=\\\"yes\\\"/g\" ./config.txt\n\t\t\t  \n# Finally we set owners and permissions all files what we changed.\nsudo chown root:root /etc/rc.local\nsudo chmod 755 /etc/rc.local\nsudo chmod 664 ./config.txt\n\t\t\t  \nif [ \"$DEBUG\" == \"yes\" ]; then\n  dialog --title \"FN_AUTOSTART_ENABLE /etc/rc.local contains\" --textbox /etc/rc.local 22 70\n  dialog --title \"FN_AUTOSTART_ENABLE ./config.txt contains\" --textbox ./config.txt 22 70\nfi\n}\n\nFN_AUTOSTART ()\n{\t\nsource ./config.txt\n\t\t\nif [ \"$AUTOSTART\" == \"\" ]; then\n  if grep -Fq '#START RASPIMJPEG SECTION' /etc/rc.local; then\n    sudo sed -i \"s/^AUTOSTART.*/AUTOSTART=\\\"yes\\\"/g\" ./config.txt\n  else\n    sudo sed -i \"s/^AUTOSTART.*/AUTOSTART=\\\"no\\\"/g\" ./config.txt\n  fi\nfi\n\t\t\t\nif grep -Fq '#START RASPIMJPEG SECTION' /etc/rc.local; then\n  status=\"\\Zb\\Z2Enabled\\Zn\"\nelse\n  status=\"\\Zb\\Z1Disabled\\Zn\"\nfi\n\t\t\n# We look is AUTOSTART manually set.\nif [[ \"$AUTOSTART\" == \"yes\" && \"$status\" == \"Disabled\" ]] ; then\n  FN_AUTOSTART_ENABLE\nelif [[ \"$AUTOSTART\" == \"no\" && \"$status\" == \"Enabled\" ]] ; then\n  FN_AUTOSTART_DISABLE\nelse\n  dialog --title \"Curently auto start in boot time is $status\" \\\n  --backtitle \"$backtitle\"                                     \\\n  --colors                                                     \\\n  --extra-button --extra-label Disable                         \\\n  --ok-label Enable                                            \\\n  --yesno \"Do you want enable auto start in boot time?\" 7 60\n  response=$?\n    case $response in\n      0) FN_AUTOSTART_ENABLE;;\n      1) FN_CONFIGURE_MENU;;\n      3) FN_AUTOSTART_DISABLE;;\n      255) FN_CONFIGURE_MENU;;\nesac\nfi\n\t\t\nif grep -Fq '#START RASPIMJPEG SECTION' /etc/rc.local; then\n  dialog --title 'Autostart message' --colors --infobox 'Autostart \\Zb\\Z2Enabled.\\Zn' 4 23 ; sleep 2\nelse\n  dialog --title 'Autostart message' --colors --infobox 'Autostart \\Zb\\Z1Disabled.\\Zn' 4 23 ; sleep 2\nfi\n\t\t\t\n# Finally we set owners and permissions all files what we changed.\nsudo chown root:root /etc/rc.local\nsudo chmod 755 /etc/rc.local\nsudo chmod 664 ./config.txt\n\t\t\t\nif [ \"$DEBUG\" == \"yes\" ]; then\n  dialog --title \"FN_AUTOSTART /etc/rc.local contains\" --textbox /etc/rc.local 22 70\n  dialog --title \"FN_AUTOSTART ./config.txt contains\" --textbox ./config.txt 22 70\nfi\n}\n\nFN_STORAGE ()\n{\n# Do Not Change By Hand!\nCURRENT_STORAGE=\"$WWWROOT/$RPICAMDIR/media\"\n\nif [[ -d \"$CURRENT_STORAGE\" && ! -L \"$CURRENT_STORAGE\" ]] ; then\n  # We make directory for new media\n  sudo mkdir -p $WWWROOT/$RPICAMDIR/storage\n  sudo chown -R www-data:www-data $WWWROOT/$RPICAMDIR/storage\n  # We move media to storage\n  sudo mv $WWWROOT/$RPICAMDIR/media $WWWROOT/$RPICAMDIR/storage\n  # We link it back to media\n  sudo ln -s $WWWROOT/$RPICAMDIR/storage/media $WWWROOT/$RPICAMDIR/media\n  sudo chown -R www-data:www-data $WWWROOT/$RPICAMDIR/media\n  CURRENT_STORAGE=\"$WWWROOT/$RPICAMDIR/storage/media\"\nelif [[ -d \"$CURRENT_STORAGE\" && -L \"$CURRENT_STORAGE\" ]] ; then\n  HYPER=$(readlink -f $CURRENT_STORAGE)\n  CURRENT_STORAGE=$HYPER\nelse\n  echo \"$(date '+%d-%b-%Y-%H-%M') ERROR! Storage Folder or Link missing!\" >> ./error.txt\n  echo \"$(date '+%d-%b-%Y-%H-%M') ERROR! Storage Folder or Link missing!\"\n  exit\nfi\n  \n  tmpfile=$(mktemp)\n  dialog  --backtitle \"$backtitle\" --title \"Media Storage Path\" --colors --cr-wrap --inputbox \"\\\n  \\Zb\\Zu Current storage path: \\Zn \\Zb\\Z4 $CURRENT_STORAGE \\Zn\n  \\Zb\\Zu Enter new storage location if you like. \\Zn\" 8 52 $CURRENT_STORAGE 2>$tmpfile\n\t\t\t\n  sel=$?\n\t\t\t\n  STORAGE=`cat $tmpfile`\n  case $sel in\n  0)\n\tif [ \"$STORAGE\" != \"$CURRENT_STORAGE\" ]; then\n\t  # We make directory for new storage location\n\t  sudo mkdir -p $STORAGE\n\t  sudo chown -R www-data:www-data $STORAGE\n\t  sudo unlink $WWWROOT/$RPICAMDIR/media\n\t  sudo ln -s $STORAGE $WWWROOT/$RPICAMDIR/media\n\t  sudo mv $CURRENT_STORAGE/* $STORAGE\n\tfi\n  ;;\n  1) source ./config.txt ;;\n  255) source ./config.txt ;;\n  esac\n\n  dialog --title 'Storage path' --colors --infobox \"\\Zb\\Zu Storage path is set \\Zn \\Zb\\Z4 $STORAGE \\Zn\" 4 48 ; sleep 3\n}\n\n# We edit $APACHEDEFAULT\nFN_APACHE_DEFAULT_INSTALL ()\n{\nif ! sudo grep -Fq 'cam_pic.php' $APACHEDEFAULT; then\n  if [ ! \"$RPICAMDIR\" == \"\" ]; then\n    sudo sed -i \"s/<Directory\\ \\/var\\/www\\/.*/<Directory\\ \\/var\\/www\\/$RPICAMDIR\\/>/g\" $APACHEDEFAULT\n  fi\t\n  sudo sed -i '/CustomLog\\ ${APACHE_LOG_DIR}\\/access.log\\ combined/i \\\tSetEnvIf\\ Request_URI\\ \"\\/cam_pic.php$|\\/status_mjpeg.php$\"\\ dontlog' $APACHEDEFAULT\n  sudo sed -i 's/CustomLog\\ ${APACHE_LOG_DIR}\\/access.log.*/CustomLog\\ ${APACHE_LOG_DIR}\\/access.log\\ common\\ env=!dontlog/g' $APACHEDEFAULT\nfi\n}\nFN_APACHE_DEFAULT_REMOVE ()\n{\nif sudo grep -Fq 'cam_pic.php' $APACHEDEFAULT; then\n  if [ ! \"$RPICAMDIR\" == \"\" ]; then\n    # We disable next row. It was for remove old rpicam. There we changed DocumentRoot. And that was revert that changes.\n    #sudo sed -i 's/DocumentRoot\\ \\/var\\/www.*/DocumentRoot\\ \\/var\\/www/g' $APACHEDEFAULT\n    sudo sed -i \"s/<Directory\\ \\/var\\/www\\/$RPICAMDIR\\/>/<Directory\\ \\/var\\/www\\/>/g\" $APACHEDEFAULT\n  fi\n  sudo sed -i '/SetEnvIf\\ Request_URI\\ \"\\/cam_pic.php$|\\/status_mjpeg.php$\"\\ dontlog/d' $APACHEDEFAULT\n  sudo sed -i 's/CustomLog\\ ${APACHE_LOG_DIR}\\/access.log\\ common\\ env=!dontlog/CustomLog\\ ${APACHE_LOG_DIR}\\/access.log\\ combined/g' $APACHEDEFAULT\nfi\n}\n\nFN_MOTION ()\n{\n# Enable rows\nstrings=('netcam_url' 'on_event_start' 'on_event_end');\nfor i in \"${strings[@]}\"\ndo\n  sudo sed -i \"s/^; \"$i\".*/\"$i\"/g\" /etc/motion/motion.conf\ndone\n\n# Disable rows\nstrings=('process_id_file' 'videodevice');\nfor i in \"${strings[@]}\"\ndo\n  sudo sed -i \"s/^\"$i\".*/; \"$i\"/g\" /etc/motion/motion.conf\ndone\n\n# Turn off\nstrings=('output_pictures' 'ffmpeg_output_movies' 'ffmpeg_cap_new');\nfor i in \"${strings[@]}\"\ndo\n  sudo sed -i \"s/^\"$i\".*/\"$i\" off/g\" /etc/motion/motion.conf\ndone\n\nif [ \"$passwd\" == \"\" ]; then\n   sudo sed -i \"s/^netcam_userpass.*/; netcam_userpass value/g\" /etc/motion/motion.conf\t\t\nelse\n   sudo sed -i \"s/^; netcam_userpass.*/netcam_userpass/g\" /etc/motion/motion.conf\t\t\n   sudo sed -i \"s/^netcam_userpass.*/netcam_userpass $user:$passwd/g\" /etc/motion/motion.conf\t\t\nfi\n\nif [ \"$RPICAMDIR\" == \"\" ]; then\n   sudo sed -i \"s/^on_event_start.*/on_event_start echo -n \\'1\\' >\\/var\\/www\\/html\\/FIFO1/g\" /etc/motion/motion.conf\n   sudo sed -i \"s/^on_event_end.*/on_event_end echo -n \\'0\\' >\\/var\\/www\\/html\\/FIFO1/g\" /etc/motion/motion.conf\n    if [ \"$WEBPORT\" != \"80\" ]; then\n      sudo sed -i \"s/^netcam_url.*/netcam_url\\ http:\\/\\/localhost:$WEBPORT\\/cam_pic.php/g\" /etc/motion/motion.conf\n    else\n      sudo sed -i \"s/^netcam_url.*/netcam_url\\ http:\\/\\/localhost\\/cam_pic.php/g\" /etc/motion/motion.conf\n    fi\nelse\n   sudo sed -i \"s/^on_event_start.*/on_event_start echo -n \\'1\\' >\\/var\\/www\\/html\\/$RPICAMDIR\\/FIFO1/g\" /etc/motion/motion.conf\n   sudo sed -i \"s/^on_event_end.*/on_event_end echo -n \\'0\\' >\\/var\\/www\\/html\\/$RPICAMDIR\\/FIFO1/g\" /etc/motion/motion.conf\n    if [ \"$WEBPORT\" != \"80\" ]; then\n      sudo sed -i \"s/^netcam_url.*/netcam_url\\ http:\\/\\/localhost:$WEBPORT\\/$RPICAMDIR\\/cam_pic.php/g\" /etc/motion/motion.conf\n    else\n      sudo sed -i \"s/^netcam_url.*/netcam_url\\ http:\\/\\/localhost\\/$RPICAMDIR\\/cam_pic.php/g\" /etc/motion/motion.conf\n    fi\nfi\n\n  if [ ! \"$RPICAMDIR\" == \"\" ]; then\n    if [ \"$WEBPORT\" != \"80\" ]; then\n      sudo sed -i \"s/^netcam_url\\ http.*/netcam_url\\ http:\\/\\/localhost:$WEBPORT\\/$RPICAMDIR\\/cam_pic.php/g\" /etc/motion/motion.conf\n    else\n      sudo sed -i \"s/^netcam_url\\ http.*/netcam_url\\ http:\\/\\/localhost\\/$RPICAMDIR\\/cam_pic.php/g\" /etc/motion/motion.conf\n    fi\n  else\n    if [ \"$WEBPORT\" != \"80\" ]; then\n      sudo sed -i \"s/^netcam_url\\ http.*/netcam_url\\ http:\\/\\/localhost:$WEBPORT\\/cam_pic.php/g\" /etc/motion/motion.conf\n    else\n      sudo sed -i \"s/^netcam_url\\ http.*/netcam_url\\ http:\\/\\/localhost\\/cam_pic.php/g\" /etc/motion/motion.conf\n    fi\n  fi\n\nsudo sed -i \"s/control_port.*/control_port 6642/g\" /etc/motion/motion.conf\nsudo sed -i \"s/^stream_port.*/stream_port 0/g\" /etc/motion/motion.conf\t\t\nsudo sed -i \"s/^webcam_port.*/webcam_port 0/g\" /etc/motion/motion.conf\nsudo sed -i \"s/^event_gap 60/event_gap 3/g\" /etc/motion/motion.conf\nsudo sed -i \"s/control_html_output.*/control_html_output off/g\" /etc/motion/motion.conf\n\nsudo chown motion:www-data /etc/motion/motion.conf\nsudo chmod 664 /etc/motion/motion.conf\n}\n\n        # -------------------------------- START/File locations --------------------------------\n        # List of files what We Back Up\n        ##########################################\n        #/etc/rc.local\n        #/etc/passwd\n        ##########################################\n        sudo mkdir -p ./Backup/Preinstall\n\n        #/etc/rc.local\n        if [ -f \"/etc/rc.local\" ]; then\n           if [ ! -f ./Backup/Preinstall/etc/rc.local ]; then\n             sudo cp -p --parents /etc/rc.local ./Backup/Preinstall/\n           fi\n           echo \"File /etc/rc.local ${GREEN}Exist.${NORMAL}\" \n        else\n           echo \"$(date '+%d-%b-%Y-%H-%M') File /etc/rc.local does not exist!\" >> ./error.txt\n           echo \"File /etc/rc.local ${RED}does Not exist!${NORMAL}\"\n        fi\n\n        #/etc/passwd\n        if [ -f \"/etc/passwd\" ]; then\n           if [ ! -f ./Backup/Preinstall/etc/passwd ]; then\n             sudo cp -p --parents /etc/passwd ./Backup/Preinstall/\n           fi\n\t  echo \"File /etc/passwd ${GREEN}Exist.${NORMAL}\" \n        else\n\t  echo \"$(date '+%d-%b-%Y-%H-%M') File /etc/passwd does not exist!\" >> ./error.txt\n\t  echo \"File /etc/passwd ${RED}does Not exist!${NORMAL}\"\n        fi\n\n\t# -------------------------------- END/File locations --------------------------------\n\t\t\n\t# -------------------------------- START/config.txt --------------------------------\n\t# Config options located in ./config.txt. In first run script makes that file for you.\n\tif [ ! -e ./config.txt ]; then\n\t  sudo echo \"#This is config file for main installer. Put any extra options in here.\" > ./config.txt\n\t  sudo echo \"\" >> ./config.txt\n\tfi\n\n\t# We enable DEBUG installer script\n\tif ! grep -Fq \"DEBUG=\" ./config.txt; then\n\t  sudo echo \"# Enable or disable DEBUG for installer script\" >> ./config.txt\n\t  sudo echo \"DEBUG=\\\"no\\\"\" >> ./config.txt\n\t  sudo echo \"\" >> ./config.txt\n\tfi\n\n\t# RPICAMDIR\n\tif ! grep -Fq \"RPICAMDIR=\" ./config.txt; then\n\t  sudo echo \"# Rpicam install directory\" >> ./config.txt\n\t  sudo echo \"RPICAMDIR=\\\"\\\"\" >> ./config.txt\n\t  sudo echo \"\" >> ./config.txt\n\tfi\n\n\t# AUTOSTART\n\tif ! grep -Fq \"AUTOSTART=\" ./config.txt; then\n\t  sudo echo \"# Enable or disable AUTOSTART\" >> ./config.txt\n\t  sudo echo \"AUTOSTART=\\\"\\\"\" >> ./config.txt\n\t  sudo echo \"\" >> ./config.txt\n\tfi\n\n\t# SECURITY\n\tif ! grep -Fq \"security=\" ./config.txt; then\n\t  sudo echo \"# Webserver security\" >> ./config.txt\n\t  sudo echo \"security=\\\"no\\\"\" >> ./config.txt\n\t  sudo echo \"user=\\\"\\\"\" >> ./config.txt\n\t  sudo echo \"passwd=\\\"\\\"\" >> ./config.txt\n\t  sudo echo \"\" >> ./config.txt\n\tfi\n\n\tsudo chmod 664 ./config.txt\n\tsource ./config.txt  \n\t# -------------------------------- END/config.txt --------------------------------\n\n# Start and Stop without GUI mode.\ncase \"$1\" in\n  start)\n        FN_STOP\n        sudo mkdir -p /dev/shm/mjpeg\n        sudo chown www-data:www-data /dev/shm/mjpeg\n        sudo chmod 777 /dev/shm/mjpeg\n        sleep 1;sudo su -c 'raspimjpeg > /dev/null &' www-data\n        if [ -e /etc/debian_version ]; then\n          sleep 1;sudo su -c \"php $WWWROOT/$RPICAMDIR/schedule.php > /dev/null &\" www-data\n        else\n          sleep 1;sudo su -c '/bin/bash' -c \"php $WWWROOT/$RPICAMDIR/schedule.php > /dev/null &\" www-data\n        fi\n\n        dialog --title 'Start message' --infobox 'Started.' 4 16 ; sleep 2\n\texit\n        ;;\n\n  stop)\n        FN_STOP\n\texit\n        ;;  \nesac\n\n# Version stuff moved out functions as we need it more when one time.\nversionfile=\"./www/config.php\"\nversion=$(cat $versionfile | grep \"'APP_VERSION'\" | cut -d \"'\" -f4)\nbacktitle=\"Copyright (c) 2014, Silvan Melchior. RPi Cam $version\"\n\nFN_MENU_INSTALLER ()\n{\n# We using only \"raspimjpeg\" right now, but we need extracted values for future development.\nprocess=('raspimjpeg' 'php' 'motion'); \nfor i in \"${process[@]}\"\n  do\n    ps cax | grep $i > /dev/null\n    if [ $? -eq 0 ]; then\n      echo \"process_$i=\"started\"\" >> tmp_status\n    else\n      echo \"process_$i=\"stopped\"\" >> tmp_status\n    fi\ndone\n  \nsource ./tmp_status\n\n# Do not put values here! Its for reset variables after function reloaded.\nstopped_rpicam=\"\"\nstarted_rpicam=\"\"\n\nif [ \"$process_raspimjpeg\" == \"started\" ] ; then\n  started_rpicam=\"(started)\"\nelse\n  stopped_rpicam=\"(stopped)\"\nfi\nrm ./tmp_status\t\n\t\ncmd=(dialog --backtitle \"$backtitle\" --title \"RPi Cam Web Interface Installer\" --colors --menu \"Select your option:$WEBSERVER\" 13 76 16)\n\noptions=(\"1 install\" \"\\Zb\\ZuInstall\\Zn (\\Zb\\ZuApache\\Zn web server based) \\Zb\\Z2$INFO_APACHE2\\Zn\"\n         \"2 install_nginx\" \"\\Zb\\ZuInstall\\Zn (\\Zb\\ZuNginx\\Zn web server based) \\Zb\\Z2$INFO_NGINX\\Zn\"\n         \"3 configure\" \"\\Zb\\Z1Configure\\Zn RPi Cam (After install)\"\n         \"4 start\" \"\\Zb\\ZuStart\\Zn RPi Cam \\Zb\\Z2$started_rpicam\"\n         \"5 stop\" \"\\Zb\\ZuStop\\Zn RPi Cam \\Zb\\Z1$stopped_rpicam\"\n         \"6 remove\" \"\\Zb\\ZuRemove\\Zn RPi Cam\")\n\nchoices=$(\"${cmd[@]}\" \"${options[@]}\" 2>&1 >/dev/tty)\n\nfor choice in $choices\ndo\n  case $choice in\n\n  install)\n        dialog --title 'Basic Install message' --colors --infobox \"\\Zb\\Z1Notice!\\Zn Configure you settings after install using \\Zb\\Z1\\\"configure\\\"\\Zn option.\" 5 43 ; sleep 4\n        sudo killall raspimjpeg\n        sudo apt-get install -y apache2 php5 php5-cli libapache2-mod-php5 gpac motion zip libav-tools usbmount\n        sudo a2enmod authz_groupfile\n        sudo service apache2 restart\n\t\t\n        # -------------------------------- START/File locations --------------------------------\n        # List of files what We Back Up\n        ##########################################\n        #/etc/apache2/sites-available/default\n        #/etc/apache2/sites-available/000-default.conf\n        #/etc/apache2/apache2.conf\n        #/etc/apache2/ports.conf\n        #/etc/motion/motion.conf\n        # Directories\n        #/etc/apache2/conf.d\n        #/etc/apache2/conf-available\n        ##########################################\n        #/etc/apache2/sites-available/default\n        #/etc/apache2/sites-available/000-default.conf\n        if [ -f \"/etc/apache2/sites-available/default\" ]; then\n          if [ ! -f ./Backup/Preinstall/etc/apache2/sites-available/default ]; then\n            sudo cp -p --parents /etc/apache2/sites-available/default ./Backup/Preinstall/\n          fi\n          APACHEDEFAULT=\"/etc/apache2/sites-available/default\"\n          echo \"File $APACHEDEFAULT ${GREEN}Exist.${NORMAL}\"\n        elif [ -f \"/etc/apache2/sites-available/000-default.conf\" ]; then\n          if [ ! -f ./Backup/Preinstall/etc/apache2/sites-available/000-default.conf ]; then\n            sudo cp -p --parents /etc/apache2/sites-available/000-default.conf ./Backup/Preinstall/\n          fi\n          APACHEDEFAULT=\"/etc/apache2/sites-available/000-default.conf\"\n          echo \"File $APACHEDEFAULT ${GREEN}Exist.${NORMAL}\"  \n        else\n          echo \"$(date '+%d-%b-%Y-%H-%M') File $APACHEDEFAULT does not exist!\" >> ./error.txt\n          echo \"File $APACHEDEFAULT ${RED}does Not exist!{NORMAL}\"\n        fi\n        #/etc/apache2/apache2.conf\n        if [ -f \"/etc/apache2/apache2.conf\" ]; then\n          if [ ! -f ./Backup/Preinstall/etc/apache2/apache2.conf ]; then\n            sudo cp -p --parents /etc/apache2/apache2.conf ./Backup/Preinstall/\n          fi\n          echo \"File /etc/apache2/apache2.conf ${GREEN}Exist.${NORMAL}\" \n        else\n          echo \"$(date '+%d-%b-%Y-%H-%M') File /etc/apache2/apache2.conf does not exist!\" >> ./error.txt\n          echo \"File /etc/apache2/apache2.conf ${RED}does Not exist!${NORMAL}\"\n        fi\n        #/etc/apache2/ports.conf\n        if [ -f \"/etc/apache2/ports.conf\" ]; then\n          if [ ! -f ./Backup/Preinstall/etc/apache2/ports.conf ]; then\n            sudo cp -p --parents /etc/apache2/ports.conf ./Backup/Preinstall/\n          fi\n          echo \"File /etc/apache2/ports.conf ${GREEN}Exist.${NORMAL}\" \n        else\n          echo \"$(date '+%d-%b-%Y-%H-%M') File /etc/apache2/ports.conf does not exist!\" >> ./error.txt\n          echo \"File /etc/apache2/ports.conf ${RED}does Not exist!${NORMAL}\"\n        fi\n        #/etc/motion/motion.conf\n        if [ -f \"/etc/motion/motion.conf\" ]; then\n          if [ ! -f ./Backup/Preinstall/etc/motion/motion.conf ]; then\n            sudo cp -p --parents /etc/motion/motion.conf ./Backup/Preinstall/\n          fi\n          echo \"File /etc/motion/motion.conf ${GREEN}Exist.${NORMAL}\" \n        else\n          echo \"$(date '+%d-%b-%Y-%H-%M') File /etc/motion/motion.conf does not exist!\" >> ./error.txt\n          echo \"File /etc/motion/motion.conf ${RED}does Not exist!${NORMAL}\"\n        fi\n        # Directories\n        #/etc/apache2/conf.d\n        #/etc/apache2/conf-available\n        if [ -d \"/etc/apache2/conf.d\" ]; then\n          APACHELOG=\"/etc/apache2/conf.d\"\n          echo \"Directory $APACHELOG ${GREEN}Exist.${NORMAL}\"\n        elif [ -d \"/etc/apache2/conf-available\" ]; then\n          APACHELOG=\"/etc/apache2/conf-available\"\n          echo \"Directory $APACHELOG ${GREEN}Exist.${NORMAL}\"   \n        else\n          echo \"$(date '+%d-%b-%Y-%H-%M') APACHELOG does not exist!\" >> ./error.txt\n          echo \"Directory APACHELOG ${RED}does Not exist!${NORMAL}\"\n        fi\n        # -------------------------------- END/File locations --------------------------------\n        # -------------------------------- START/config.txt --------------------------------\n        # WEBPORT\n        #cat 000-default.conf | grep \"<VirtualHost\" | cut -d \":\" -f2 | cut -d \">\" -f1\n        if ! grep -Fq \"WEBPORT=\" ./config.txt; then\n          WEBPORT=$(sudo cat $APACHEDEFAULT | grep \"<VirtualHost\" | cut -d \":\" -f2 | cut -d \">\" -f1)\n          sudo echo \"# Web server port\" >> ./config.txt\n          sudo echo \"WEBPORT=\\\"$WEBPORT\\\"\" >> ./config.txt\n          sudo echo \"\" >> ./config.txt\n\t    fi\n\t    if [ \"$WEBPORT\" == \"\" ]; then\n          WEBPORT=$(sudo cat $APACHEDEFAULT | grep \"<VirtualHost\" | cut -d \":\" -f2 | cut -d \">\" -f1)\n          sudo sed -i \"s/^WEBPORT=.*/WEBPORT=\\\"$WEBPORT\\\"/g\" ./config.txt\n\t    fi\n\t\t\n\tsudo chmod 664 ./config.txt\n\tsource ./config.txt \n\t# -------------------------------- END/config.txt --------------------------------\n\t\n\t# We need find wwwroot after apache2 installed\n\tFN_WWWROOT_PORT\n        if [ \"$WWWROOT\" == \"/var/www/html\" ]; then\n          sudo sed -i \"s/^www-data:x.*/www-data:x:33:33:www-data:\\/var\\/www\\/html:\\/bin\\/sh/g\" /etc/passwd\n        fi\n\t\t\n\tFN_RPICAMDIR\n\t\t\n\tFN_AUTOSTART_ENABLE\n\t\t\n        sudo mkdir -p $WWWROOT/$RPICAMDIR/media\n        sudo cp -r www/* $WWWROOT/$RPICAMDIR/\n        if [ -e $WWWROOT/$RPICAMDIR/index.html ]; then\n          sudo cp -p --parents $WWWROOT/$RPICAMDIR/index.html ./Backup/Preinstall/\n          sudo mv $WWWROOT/$RPICAMDIR/index.html $WWWROOT/$RPICAMDIR/index.html.bak\n        fi\n        sudo chown -R www-data:www-data $WWWROOT/$RPICAMDIR\n        \n        if [ ! -e $WWWROOT/$RPICAMDIR/FIFO ]; then\n          sudo mknod $WWWROOT/$RPICAMDIR/FIFO p\n        fi\n        sudo chmod 666 $WWWROOT/$RPICAMDIR/FIFO\n        \n        if [ ! -e $WWWROOT/$RPICAMDIR/FIFO1 ]; then\n          sudo mknod $WWWROOT/$RPICAMDIR/FIFO1 p\n        fi\n        sudo chmod 666 $WWWROOT/$RPICAMDIR/FIFO1\n        sudo chmod 755 $WWWROOT/$RPICAMDIR/raspizip.sh\n\n        if [ ! -e $WWWROOT/$RPICAMDIR/cam.jpg ]; then\n          sudo ln -sf /run/shm/mjpeg/cam.jpg $WWWROOT/$RPICAMDIR/cam.jpg\n        fi\n        if [ -e $WWWROOT/$RPICAMDIR/status_mjpeg.txt ]; then\n          sudo rm $WWWROOT/$RPICAMDIR/status_mjpeg.txt\n        fi\n        sudo ln -sf /run/shm/mjpeg/status_mjpeg.txt $WWWROOT/$RPICAMDIR/status_mjpeg.txt\n\n        FN_APACHE_DEFAULT_INSTALL\n\n        sudo cp etc/apache2/conf.d/other-vhosts-access-log $APACHELOG/other-vhosts-access-log\n        sudo chmod 644 $APACHELOG/other-vhosts-access-log\n\n        sudo cp etc/sudoers.d/RPI_Cam_Web_Interface /etc/sudoers.d/\n        sudo chmod 440 /etc/sudoers.d/RPI_Cam_Web_Interface\n\n        sudo cp -r bin/raspimjpeg /opt/vc/bin/\n        sudo chmod 755 /opt/vc/bin/raspimjpeg\n        if [ ! -e /usr/bin/raspimjpeg ]; then\n          sudo ln -s /opt/vc/bin/raspimjpeg /usr/bin/raspimjpeg\n        fi\n\n        if [ \"$WWWROOT\" == \"/var/www\" ]; then\n          if [ \"$RPICAMDIR\" == \"\" ]; then\n            sudo cat etc/raspimjpeg/raspimjpeg.1 > etc/raspimjpeg/raspimjpeg\n          else\n            sudo sed -e \"s/www/www\\/$RPICAMDIR/\" etc/raspimjpeg/raspimjpeg.1 > etc/raspimjpeg/raspimjpeg\n          fi\n        elif [ \"$WWWROOT\" == \"/var/www/html\" ]; then\n          if [ \"$RPICAMDIR\" == \"\" ]; then\n            sudo sed -e \"s/www/www\\/html/\" etc/raspimjpeg/raspimjpeg.1 > etc/raspimjpeg/raspimjpeg\n          else\n            sudo sed -e \"s/www/www\\/html\\/$RPICAMDIR/\" etc/raspimjpeg/raspimjpeg.1 > etc/raspimjpeg/raspimjpeg\n          fi\t\t\n        fi\n\t\t\n        if [ `cat /proc/cmdline |awk -v RS=' ' -F= '/boardrev/ { print $2 }'` == \"0x11\" ]; then\n          sudo sed -i \"s/^camera_num 0/camera_num 1/g\" etc/raspimjpeg/raspimjpeg\n        fi\n        if [ -e /etc/raspimjpeg ]; then\n          $color_green; echo \"Your custom raspimjpeg backed up at /etc/raspimjpeg.bak\"; $color_reset\n          sudo cp -r /etc/raspimjpeg /etc/raspimjpeg.bak\n        fi\n        sudo cp -r etc/raspimjpeg/raspimjpeg /etc/\n        sudo chmod 644 /etc/raspimjpeg\n        if [ ! -e $WWWROOT/$RPICAMDIR/raspimjpeg ]; then\n          sudo ln -s /etc/raspimjpeg $WWWROOT/$RPICAMDIR/raspimjpeg\n        fi\n\n        FN_MOTION\n        : '\n        # We commented old Whreezy way out. If we not get complaints FN_MOTION not working in Whreezy we can remove old way.\n        if [ \"$WWWROOT\" == \"/var/www\" ]; then\n          if [ \"$RPICAMDIR\" == \"\" ]; then\n            sudo cat etc/motion/motion.conf.1 > etc/motion/motion.conf\n        else\n          sudo sed -e \"s/www/www\\/$RPICAMDIR/\" etc/motion/motion.conf.1 > etc/motion/motion.conf\n          sudo sed -i \"s/^netcam_url.*/netcam_url http:\\/\\/localhost\\/$RPICAMDIR\\/cam_pic.php/g\" etc/motion/motion.conf\n          sudo cp -r etc/motion/motion.conf /etc/motion/\n        fi\n        elif [ \"$WWWROOT\" == \"/var/www/html\" ]; then\n          FN_MOTION\t\t\n        fi\n        '\n\t\t\n        sudo usermod -a -G video www-data\n        if [ -e $WWWROOT/$RPICAMDIR/uconfig ]; then\n          sudo chown www-data:www-data $WWWROOT/$RPICAMDIR/uconfig\n        fi\n        \n        if [ ! \"$RPICAMDIR\" == \"\" ]; then\n          sudo sed -i \"s/www\\//www\\/$RPICAMDIR\\//g\" $WWWROOT/$RPICAMDIR/schedule.php\n        fi\n\n        sudo chown motion:www-data /etc/motion/motion.conf\n        sudo chmod 664 /etc/motion/motion.conf\n        sudo chown -R www-data:www-data $WWWROOT/$RPICAMDIR\n\n        dialog --title 'Install message' --infobox 'Installer finished.' 4 25 ; sleep 2\n        FN_REBOOT\n        ;;\n\n  install_nginx)\n        dialog --title 'Basic Install message' --colors --infobox \"\\Zb\\Z1Notice!\\Zn Configure you settings after install using \\Zb\\Z1\\\"configure\\\"\\Zn option.\" 5 43 ; sleep 4\n        sudo killall raspimjpeg\n        sudo apt-get install -y nginx php5-fpm php5-cli php5-common php-apc gpac motion zip libav-tools\n\n\t# -------------------------------- START/File locations --------------------------------\n\t# List of files what We Back Up\n\t##########################################\n\t#/etc/nginx/sites-available/default\n\t##########################################\n        #/etc/nginx/sites-available/default\n        if [ -f \"/etc/nginx/sites-available/default\" ]; then\n           if [ ! -f ./Backup/Preinstall/etc/nginx/sites-available/default ]; then\n             sudo cp -p --parents /etc/nginx/sites-available/default ./Backup/Preinstall/\n           fi\n           echo \"File etc/nginx/sites-available/default ${GREEN}Exist.${NORMAL}\" \n        else\n           echo \"$(date '+%d-%b-%Y-%H-%M') File etc/nginx/sites-available/default does not exist!\" >> ./error.txt\n           echo \"File etc/nginx/sites-available/default ${RED}does Not exist!${NORMAL}\"\n        fi\n\t\t\n\t    FN_WWWROOT_PORT\n\t\t\n        if [ \"$WWWROOT\" == \"/var/www/html\" ]; then\n          sudo sed -i \"s/^www-data:x.*/www-data:x:33:33:www-data:\\/var\\/www\\/html:\\/bin\\/sh/g\" /etc/passwd\n        fi\n\t\t\n        FN_RPICAMDIR\n        sudo mkdir -p $WWWROOT/$RPICAMDIR/media\n        sudo cp -r www/* $WWWROOT/$RPICAMDIR/\n        if [ -e $WWWROOT/$RPICAMDIR/index.html ]; then\n          sudo rm $WWWROOT/$RPICAMDIR/index.html\n        fi\n        sudo chown -R www-data:www-data $WWWROOT/$RPICAMDIR\n\n        if [ ! -e $WWWROOT/$RPICAMDIR/FIFO ]; then\n          sudo mknod $WWWROOT/$RPICAMDIR/FIFO p\n        fi\n        sudo chmod 666 $WWWROOT/$RPICAMDIR/FIFO\n\n        if [ ! -e $WWWROOT/$RPICAMDIR/FIFO1 ]; then\n          sudo mknod $WWWROOT/$RPICAMDIR/FIFO1 p\n        fi\n        sudo chmod 666 $WWWROOT/$RPICAMDIR/FIFO1\n        sudo chmod 755 $WWWROOT/$RPICAMDIR/raspizip.sh\n\n        if [ ! -e $WWWROOT/$RPICAMDIR/cam.jpg ]; then\n          sudo ln -sf /run/shm/mjpeg/cam.jpg $WWWROOT/$RPICAMDIR/cam.jpg\n        fi\n        if [ -e $WWWROOT/$RPICAMDIR/status_mjpeg.txt ]; then\n           sudo rm $WWWROOT/$RPICAMDIR/status_mjpeg.txt\n        fi\n        sudo ln -sf /run/shm/mjpeg/status_mjpeg.txt $WWWROOT/$RPICAMDIR/status_mjpeg.txt\n\n        if [ \"$RPICAMDIR\" == \"\" ]; then\n          sudo cat etc/nginx/sites-available/rpicam.1 > etc/nginx/sites-available/rpicam\n        else\n          sudo sed -e \"s:root $WWWROOT;:root $WWWROOT/$RPICAMDIR;:g\" etc/nginx/sites-available/rpicam.1 > etc/nginx/sites-available/rpicam\n        fi\n        sudo cp -r etc/nginx/sites-available/rpicam /etc/nginx/sites-available/rpicam\n        sudo chmod 644 /etc/nginx/sites-available/rpicam\n\n\n        if [ ! -e /etc/nginx/sites-enabled/rpicam ]; then\n          sudo ln -s /etc/nginx/sites-available/rpicam /etc/nginx/sites-enabled/rpicam\n        fi\n\n        # Update nginx main config file\n        sudo sed -i \"s/worker_processes 4;/worker_processes 2;/g\" /etc/nginx/nginx.conf\n        sudo sed -i \"s/worker_connections 768;/worker_connections 128;/g\" /etc/nginx/nginx.conf\n        sudo sed -i \"s/gzip on;/gzip off;/g\" /etc/nginx/nginx.conf\n        if [\"$NGINX_DISABLE_LOGGING\"]; then\n            sudo sed -i \"s:access_log /var/log/nginx/nginx/access.log;:access_log /dev/null;:g\" /etc/nginx/nginx.conf\n        fi\n\n        # Configure php-apc\n        sudo sh -c \"echo \\\"cgi.fix_pathinfo = 0;\\\" >> /etc/php5/fpm/php.ini\"\n        sudo cp etc/php5/apc.ini /etc/php5/conf.d/20-apc.ini\n        sudo chmod 644 /etc/php5/conf.d/20-apc.ini\n\n        sudo cp etc/sudoers.d/RPI_Cam_Web_Interface /etc/sudoers.d/\n        sudo chmod 440 /etc/sudoers.d/RPI_Cam_Web_Interface\n\n        sudo cp -r bin/raspimjpeg /opt/vc/bin/\n        sudo chmod 755 /opt/vc/bin/raspimjpeg\n        if [ ! -e /usr/bin/raspimjpeg ]; then\n          sudo ln -s /opt/vc/bin/raspimjpeg /usr/bin/raspimjpeg\n        fi\n\n        if [ \"$RPICAMDIR\" == \"\" ]; then\n          sudo cat etc/raspimjpeg/raspimjpeg.1 > etc/raspimjpeg/raspimjpeg\n        else\n          sudo sed -e \"s/www/www\\/$RPICAMDIR/\" etc/raspimjpeg/raspimjpeg.1 > etc/raspimjpeg/raspimjpeg\n        fi\n        if [ `cat /proc/cmdline |awk -v RS=' ' -F= '/boardrev/ { print $2 }'` == \"0x11\" ]; then\n          sed -i \"s/^camera_num 0/camera_num 1/g\" etc/raspimjpeg/raspimjpeg\n        fi\n        if [ -e /etc/raspimjpeg ]; then\n          $color_green; echo \"Your custom raspimjpeg backed up at /etc/raspimjpeg.bak\"; $color_reset\n          sudo cp -r /etc/raspimjpeg /etc/raspimjpeg.bak\n        fi\n        sudo cp -r /etc/raspimjpeg /etc/raspimjpeg.bak\n        sudo cp -r etc/raspimjpeg/raspimjpeg /etc/\n        sudo chmod 644 /etc/raspimjpeg\n        if [ ! -e $WWWROOT/$RPICAMDIR/raspimjpeg ]; then\n          sudo ln -s /etc/raspimjpeg $WWWROOT/$RPICAMDIR/raspimjpeg\n        fi\n\n        FN_AUTOSTART\n\n        if [ \"$RPICAMDIR\" == \"\" ]; then\n          sudo cat etc/motion/motion.conf.1 > etc/motion/motion.conf\n        else\n          sudo sed -e \"s/www/www\\/$RPICAMDIR/\" etc/motion/motion.conf.1 > etc/motion/motion.conf\n          sudo sed -i \"s/^netcam_url.*/netcam_url http:\\/\\/localhost\\/$RPICAMDIR\\/cam_pic.php/g\" etc/motion/motion.conf\n        fi\n        sudo cp -r etc/motion/motion.conf /etc/motion/\n        sudo usermod -a -G video www-data\n        if [ -e $WWWROOT/$RPICAMDIR/uconfig ]; then\n          sudo chown www-data:www-data $WWWROOT/$RPICAMDIR/uconfig\n        fi\n        \n        if [ ! \"$RPICAMDIR\" == \"\" ]; then\n          sudo sed -i \"s/www\\//www\\/$RPICAMDIR\\//g\" $WWWROOT/$RPICAMDIR/schedule.php\n        fi\n        sudo chown motion:www-data /etc/motion/motion.conf\n        sudo chmod 664 /etc/motion/motion.conf\n        sudo chown -R www-data:www-data $WWWROOT/$RPICAMDIR\n\n        dialog --title 'Install message' --infobox 'Installer finished.' 4 25 ; sleep 2\n        FN_REBOOT\n        ;;\n\n  configure)\n        FN_WWWROOT_PORT\n        FN_CONFIGURE_MENU ()\n        {\n\tCAMERA=$(sudo cat $RASPICONFIG | grep \"start_x\" | cut -d \"=\" -f2)\n\tif [ $CAMERA -eq 1 ]; then\n\t  CAMSTATUS=\"\\Zb\\Z2(Enabled)\"\n\telif [ $CAMERA -eq 0 ]; then\n\t  CAMSTATUS=\"\\Zb\\Z1(Disabled)\"\n\tfi\n\t\t\n        if grep -Fq '#START RASPIMJPEG SECTION' /etc/rc.local; then\n          AUTOSTART=\"\\Zb\\Z2(Enabled)\"\n        else\n          AUTOSTART=\"\\Zb\\Z1(Disabled)\"\n        fi\t\n\n        if [ \"$APACHEDEFAULT\" == \"/etc/apache2/sites-available/default\" ]; then\n          TMP_SECURITY=$(sudo awk '/AllowOverride/ {i++}i==2{print $2; exit}' $APACHEDEFAULT)\n        elif [ \"$APACHEDEFAULT\" == \"/etc/apache2/sites-available/000-default.conf\" ]; then\n          TMP_SECURITY=$(sudo awk '/AllowOverride/ {i++}i==3{print $2; exit}' /etc/apache2/apache2.conf)  \n        fi\n        if [ \"$TMP_SECURITY\" == \"All\" ]; then\n          SECURITY=\"\\Zb\\Z2(Enabled)\"\n        elif [ \"$TMP_SECURITY\" == \"None\" ]; then\n          SECURITY=\"\\Zb\\Z1(Disabled)\"\n        else\n          SECURITY=\"\\Zb\\Z1(ERROR!)\"\n        fi\n        \t\n        cmd=(dialog --backtitle \"$backtitle\" --title \"RPi Cam Web Interface Configurator\" --colors --menu \"Select your option:\" 16 76 16)\n        options=(\n            \"1 update\" \"\\Zb\\ZuUpdate\\Zn RPi Cam installer\"\n            \"2 upgrade\" \"\\Zb\\ZuUpgrade\\Zn RPi Cam\"\n            \"3 apache_security\" \"Change \\Zb\\ZuApache\\Zn web server \\Zb\\Zusecurity\\Zn $SECURITY\" \n            \"4 apache_port\" \"Change \\Zb\\ZuApache\\Zn web server \\Zb\\Zuport\\Zn \\Zb\\Z2($WEBPORT)\"\n            \"5 autostart\" \"RPi Cam \\Zb\\ZuAutostart\\Zn \\Zb\\ZuEnable/Disable\\Zn $AUTOSTART\"\n            \"6 camera\" \"\\Zb\\ZuEnable/Disable\\Zn Raspberry Pi \\Zb\\Zucamera\\Zn $CAMSTATUS\"\n            \"7 storage\" \"RPi Cam \\Zb\\ZuStorage location\\Zn\"\n            \"8 backup_restore\" \"RPi Cam \\Zb\\ZuBackup\\Zn or Restore\"\n            \"9 debug\" \"Run RPi Cam with \\Zb\\Zudebug\\Zn mode\"\n            )\n        choices=$(\"${cmd[@]}\" \"${options[@]}\" 2>&1 >/dev/tty)\n        if [[ -n \"$choices\" ]]; then\n          for choice in $choices\n          do\n            case $choice in\n             update)\n                trap 'FN_ABORT' 0\n                set -e\n                remote=$(\n                    git ls-remote -h origin master |\n                    awk '{print $1}'\n                )\n                local=$(git rev-parse HEAD)\n                printf \"Local : %s\\nRemote: %s\\n\" $local $remote\n                if [[ $local == $remote ]]; then\n                  dialog --title 'Update message' --infobox 'Commits match. Nothing update.' 4 35 ; sleep 2\n                else\n                  dialog --title 'Update message' --infobox \"Commits don't match. We update.\" 4 35 ; sleep 2\n                  git pull origin master\n                fi\n                trap : 0\n                dialog --title 'Update message' --infobox 'Update finished.' 4 20 ; sleep 2\n                # We call updated script\n                SCRIPT=\"$(basename \"$(test -L \"$0\" && readlink \"$0\" || echo \"$0\")\")\"\n                ./$SCRIPT\n                ;;\n             upgrade)\n                sudo killall raspimjpeg\n                if [ $(dpkg-query -W -f='${Status}' \"zip\" 2>/dev/null | grep -c \"ok installed\") -eq 0 ]; then\n                  sudo apt-get install -y zip\n                fi\n                sudo cp -r bin/raspimjpeg /opt/vc/bin/\n                sudo chmod 755 /opt/vc/bin/raspimjpeg\n                sudo cp -r www/* $WWWROOT/$RPICAMDIR/\n                if [ ! -e $WWWROOT/$RPICAMDIR/raspimjpeg ]; then\n                  sudo ln -s /etc/raspimjpeg $WWWROOT/$RPICAMDIR/raspimjpeg\n                fi\n                sudo chmod 755 $WWWROOT/$RPICAMDIR/raspizip.sh\n                dialog --title 'Upgrade message' --infobox 'Upgrade finished.' 4 20 ; sleep 2\n                FN_CONFIGURE_MENU\n                ;;\n             apache_security)\n                FN_SECURE_APACHE\n                dialog --title 'Apache web security message' --infobox \"Apache web security changed.\" 4 23 ; sleep 2\n                FN_CONFIGURE_MENU\n                ;;\n             apache_port)\n                FN_APACHEPORT\n                dialog --title 'Apache web port message' --infobox \"Apache web port: $webport.\" 4 23 ; sleep 2\n                FN_CONFIGURE_MENU\n                ;;\n\t\t\t autostart)\n                FN_AUTOSTART\n                FN_CONFIGURE_MENU\n                ;;\n\t\t\t camera)\n                exec sudo ./cam.sh\n             ;;\n             storage)\n                FN_STORAGE\n                dialog --title 'Storage message' --infobox 'Changed storage location.' 4 23 ; sleep 2\n                FN_CONFIGURE_MENU\n                ;;\n             backup_restore)\n                FN_BACKUP () \n                {\n                  BACKUPDIR=\"$(date '+%d-%b-%Y-%H-%M')\"\n                  sudo mkdir -p ./Backup/$BACKUPDIR\n                  sudo cp ./config.txt ./Backup/$BACKUPDIR\n                  sudo cp /etc/motion/motion.conf ./Backup/$BACKUPDIR\n                  sudo cp /etc/raspimjpeg ./Backup/$BACKUPDIR\t\t\t\t\n                  if [ ! \"$RPICAMDIR\" == \"\" ]; then\n                    sudo cp $WWWROOT/$RPICAMDIR/uconfig ./Backup/$BACKUPDIR\n                  else\n                    sudo cp $WWWROOT/uconfig ./Backup/$BACKUPDIR\n                  fi\n                }\n\t\t\t\t\n                FN_RESTORE () \n                {\n                  sudo cp $ANSW/config.txt ./config.txt\n                  sudo cp $ANSW/motion.conf /etc/motion/motion.conf\n                  sudo cp $ANSW/raspimjpeg /etc/raspimjpeg\n                  if [ ! \"$RPICAMDIR\" == \"\" ]; then\n                    sudo cp $ANSW/uconfig $WWWROOT/$RPICAMDIR/uconfig\n                  else\n                    sudo cp $ANSW/uconfig $WWWROOT/uconfig\n                  fi\n                }\n\t\t\t\t\n                FN_REMOVE_BACKUP ()\n                {\n                  let i=0\n                  W=()\n                  while read -r line; do\n                    let i=$i+1\n                    W+=($i \"$line\")\n                  done < <( ls -1d ./Backup/*/ )\n                  FILE=$(dialog --title \"List Directorys of Backup ./Backup\" --backtitle \"$backtitle\" --colors --menu \"Chose Backup what you want to \\Zb\\Z1remove\\Zn?\" 24 80 17 \"${W[@]}\" 3>&2 2>&1 1>&3)\n                  if [ \"$FILE\" == \"\" ]; then\n                    FN_BACKUP_RESTORE_MENU\n                  else\n                    clear\n                    if [ $? -eq 0 ]; then # Exit with OK\n                      ANSW=$(readlink -f $(ls -1d ./Backup/*/ | sed -n \"`echo \"$FILE p\" | sed 's/ //'`\"))\n                      sudo rm -r $ANSW\n                      FN_REMOVE_BACKUP\n                    fi\n                  fi\n                }\n\t\t\t\t  \n                FN_RESTORE_BACKUP ()\n                {\n                  let i=0\n                  W=()\n                  while read -r line; do\n                    let i=$i+1\n                    W+=($i \"$line\")\n                  done < <( ls -1d ./Backup/*/ )\n                  FILE=$(dialog --title \"List Directorys of Backup ./Backup\" --backtitle \"$backtitle\" --colors --menu \"Chose Backup what you want to \\Zb\\Z5restore\\Zn?\" 24 80 17 \"${W[@]}\" 3>&2 2>&1 1>&3)\n                  if [ \"$FILE\" == \"\" ]; then\n                    FN_BACKUP_RESTORE_MENU\n                  else\n                    clear\n                    if [ $? -eq 0 ]; then # Exit with OK\n                      ANSW=$(readlink -f $(ls -1d ./Backup/*/ | sed -n \"`echo \"$FILE p\" | sed 's/ //'`\"))\n                      FN_RESTORE\n                      dialog --title 'Restore message' --colors --infobox \"Restored \\Zb\\Z5$ANSW.\" 4 80 ; sleep 3\n                      FN_CONFIGURE_MENU\n                    fi\n                  fi\n                }\n\t\t\t\t\n                FN_BACKUP_RESTORE_MENU ()\n                {\n                  dialog --title \"Backup or Restore message\" \\\n                  --backtitle \"$backtitle\"                   \\\n                  --help-button --help-label \"Remove backup\" \\\n                  --extra-button --extra-label Restore       \\\n                  --ok-label Backup                          \\\n                  --yesno \"Backup or Restore your RPi Cam config files.\" 5 68\n                  response=$?\n                  case $response in\n                    0) #echo \"[Backup] key pressed.\"\n                      FN_BACKUP\n                      dialog --title 'Backup message' --colors --infobox \"Backup \\Zb\\Z5$BACKUPDIR\\Zn done.\" 4 40 ; sleep 3\n                      FN_CONFIGURE_MENU\n                    ;;\n                    1) #echo \"[Cansel] key pressed.\"\n                      FN_CONFIGURE_MENU\n                    ;;\n                    2) #echo \"[Remove backup] key pressed.\"\n                      FN_REMOVE_BACKUP\n                    ;;\n                    3) #echo \"[Restore] key pressed.\"\n                      FN_RESTORE_BACKUP\n                    ;;\n                    255) #echo \"[ESC] key pressed.\"\n                      FN_CONFIGURE_MENU\n                    ;;\n                  esac\n                }\n                FN_BACKUP_RESTORE_MENU\n             ;;\n                \n             debug)\n                FN_STOP\n                sudo mkdir -p /dev/shm/mjpeg\n                sudo chown www-data:www-data /dev/shm/mjpeg\n                sudo chmod 777 /dev/shm/mjpeg\n                sleep 1;sudo su -c 'raspimjpeg &' www-data\n                if [ -e /etc/debian_version ]; then\n                  sleep 1;sudo sudo su -c \"php $WWWROOT/$RPICAMDIR/schedule.php &\" www-data\n                else\n                  sleep 1;sudo su -c '/bin/bash' -c \"php $WWWROOT/$RPICAMDIR/schedule.php &\" www-data\n                fi        \n                $color_red; echo \"Started with debug\"; $color_reset\n             ;;\n\t\t\t\n            esac\n            done\n        else\n          FN_MENU_INSTALLER\n        fi\n        }\n\n\t# This is trap if webserver not installed.\n        TESTVAR=\"$WEBSERVER\"\n        VAR()\n        {\n        if [ ${TESTVAR[@]} ]; then\n\t FN_CONFIGURE_MENU\n        else\n        dialog --title 'Install message' --colors --infobox 'Please \\Zb\\Z1Install\\Zn Rpicam first!' 4 25 ; sleep 2\n        FN_MENU_INSTALLER\n        fi\n        }\n        VAR\t\t\n        ;;\n\n  start)\n        FN_STOP\n        sudo mkdir -p /dev/shm/mjpeg\n        sudo chown www-data:www-data /dev/shm/mjpeg\n        sudo chmod 777 /dev/shm/mjpeg\n        sleep 1;sudo su -c 'raspimjpeg > /dev/null &' www-data\n        if [ -e /etc/debian_version ]; then\n          sleep 1;sudo su -c \"php $WWWROOT/$RPICAMDIR/schedule.php > /dev/null &\" www-data\n        else\n          sleep 1;sudo su -c '/bin/bash' -c \"php $WWWROOT/$RPICAMDIR/schedule.php > /dev/null &\" www-data\n        fi\n        \n        dialog --title 'Start message' --infobox 'Started.' 4 16 ; sleep 2\n        FN_MENU_INSTALLER\n        ;;\n        \n  stop)\n        FN_STOP\n        FN_MENU_INSTALLER\n        ;;\n\n  remove)\n        FN_WWWROOT_PORT\n        FN_STOP\n \n    FN_LIGHT ()\n    {\n      FN_INSTALLDIR\n      # Trap. Security reason. If we not find installdir we abort and not start remove whole system!\n      if [ \"$INSTALLDIR\" == \"\" ]; then\n\techo \"$(date '+%d-%b-%Y-%H-%M') Install directory missing! Aborted!\" >> ./error.txt\n        echo \"Install directory missing! ${RED}Aborted!${NORMAL}\"\n        FN_MENU_INSTALLER\n      fi\n\t  \n      dialog --title \"Backup media?\" --backtitle \"$backtitle\" --yesno \"Do you want backup media into you home directory?\" 5 33\n      response=$?\n        case $response in\n          0) # echo yes\n\t    if [ ! -d ~/media ]; then\n              mkdir ~/media\n            fi\n\t    sudo mv $INSTALLDIR/media ~/media\n\t      ;;\n          1)\n\t      ;;\n          255) \n\t        dialog --title 'Backup media' --colors --infobox \"\\Zb\\Z1\"'media Remove aborted!' 4 28 ; sleep 1\n\t        FN_MENU_INSTALLER\n\t      ;;\n        esac\t\t\n\t\n\t  if [ $(dpkg-query -W -f='${Status}' \"apache2\" 2>/dev/null | grep -c \"ok installed\") -eq 1 ]; then\n\t    FN_APACHE_DEFAULT_REMOVE\n\t    FN_SECURE_APACHE_NO\n\t  fi\n\t\n\t  FN_AUTOSTART_DISABLE\n\t\n          BACKUPDIR=\"$(date '+%d-%B-%Y-%H-%M')\"\n\t  sudo mkdir -p ./Backup/removed-$BACKUPDIR\n\t  sudo cp ./config.txt ./Backup/removed-$BACKUPDIR\n\t  sudo cp /etc/motion/motion.conf ./removed-$BACKUPDIR\n\t  sudo cp /etc/raspimjpeg ./Backup/removed-$BACKUPDIR\t\t\t\t\n\t  sudo cp $INSTALLDIR/uconfig ./Backup/removed-$BACKUPDIR\n\t\n\t  sudo rm /etc/sudoers.d/RPI_Cam_Web_Interface\n\t  sudo rm /usr/bin/raspimjpeg\n\t  sudo rm /etc/raspimjpeg\n\t  if [ ! \"$RPICAMDIR\" == \"\" ]; then\n\t    sudo rm -r $WWWROOT/$RPICAMDIR\n\t  else\n\t    # Here needed think. If RPICAMDIR not set then removed all webserver content!\n\t    sudo rm -r $INSTALLDIR/*\n\t  fi\n    }\n \n    FN_MEDIUM ()\n    {\n      package=('apache2' 'php5' 'libapache2-mod-php5' 'php5-cli' 'zip' 'nginx' 'php5-fpm' 'php5-common' 'php-apc' 'gpac motion' 'libav-tools'); \n      for i in \"${package[@]}\"\n      do\n        if [ $(dpkg-query -W -f='${Status}' \"$i\" 2>/dev/null | grep -c \"ok installed\") -eq 1 ]; then\n        sudo apt-get remove -y \"$i\" && sudo apt-get autoremove -y\n      fi\n      done\n    }\n\t\n    FN_HARD ()\n    {\n      #Put here packages where config files also removed.\n      package=('apache2' 'apache2-utils' 'nginx' 'nginx-common' 'nginx-full' 'motion' 'gpac motion'); \n\t    for i in \"${package[@]}\"\n\t      do\n\t\t   if [ $(dpkg-query -W -f='${Status}' \"$i\" 2>/dev/null | grep -c \"ok installed\") -eq 1 ]; then\n\t\t    sudo apt-get remove --purge -y \"$i\" && sudo apt-get autoremove -y\n\t\t   fi\n\t    done\n    }\n \n    FN_UNINSTALL ()\n    {\n      dialog --title \"Uninstall packages!\"       \\\n      --backtitle \"$backtitle\"                   \\\n      --help-button --help-label \"Hard\" \\\n      --extra-button --extra-label Medium        \\\n      --ok-label Light                           \\\n      --cr-wrap                                  \\\n      --colors                                   \\\n      --trim                                     \\\n      --yesno                                    \\\n\"\\Zb\\Z4Light\\Zn - Removed only files.\n\\Zb\\Z4Medium\\Zn - Removed files and Uninstalled packages.\n\\Zb\\Z1Hard\\Zn - Full uninstall! \\Zb\\Z1(Config Files also!)\\Zn\" 10 68\n      response=$?\n      case $response in\n        0) #echo \"[Light] key pressed.\"\n          FN_LIGHT\n          FN_MENU_INSTALLER\n        ;;\n        1) #echo \"[Cansel] key pressed.\"\n          FN_MENU_INSTALLER\n        ;;\n        2) #echo \"[Hard] key pressed.\"\n          FN_LIGHT\n          FN_HARD\n\t  FN_MEDIUM\n        ;;\n        3) #echo \"[Medium] key pressed.\"\n          FN_LIGHT\n          FN_MEDIUM\n        ;;\n        255) #echo \"[ESC] key pressed.\"\n          FN_MENU_INSTALLER\n        ;;\n      esac\n    }\n    FN_UNINSTALL\n\n    dialog --title 'Remove message' --infobox 'Removed everything.' 4 23 ; sleep 2\n    FN_REBOOT\n    ;;\n  esac\ndone\n}\nFN_MENU_INSTALLER\n\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0703125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2013 Silvan Melchior, Robert Tidey\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.5966796875,
          "content": "Web based interface for controlling the Raspberry Pi Camera, includes motion detection, time lapse, and image and video recording.\nCurrent version 6.6.26\nAll information on this project can be found here: http://www.raspberrypi.org/forums/viewtopic.php?f=43&t=63276\n\nThe wiki page can be found here:\n\nhttp://elinux.org/RPi-Cam-Web-Interface\n\nThis includes the installation instructions at the top and full technical details.\nFor latest change details see:\n\nhttps://github.com/silvanmelchior/RPi_Cam_Web_Interface/commits/master\n  \nThis version has updates for php7.3 / Buster. May need further changes for nginx"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.306640625,
          "content": "# Security Policy\n\n## Supported Versions\n\nCurrent version as reported in README.md\n        |\n\n## Reporting a Vulnerability\n\nemail robert@tideys.co.uk with details of vulnerability found and any suggested remedies.\n\nYou will receive an email response (typically within 48 hours describing action that will be taken\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "cam.sh",
          "type": "blob",
          "size": 2.87890625,
          "content": "#!/bin/bash\n\ncd $(dirname $(readlink -f $0))\n\nif [ $(dpkg-query -W -f='${Status}' \"dialog\" 2>/dev/null | grep -c \"ok installed\") -eq 0 ]; then\n  sudo apt-get install -y dialog\nfi\n\n# Terminal colors\ncolor_red=\"tput setaf 1\"\ncolor_green=\"tput setaf 2\"\ncolor_reset=\"tput sgr0\"\nRED=$(tput setaf 1)\nGREEN=$(tput setaf 2)\nNORMAL=$(tput sgr0)\n\nASK_TO_REBOOT=0\nRASPICONFIG=/boot/config.txt\nMAINSCRIPT=\"./RPi_Cam_Web_Interface_Installer.sh\"\n\n# Version stuff moved out functions as we need it more when one time.\nversionfile=\"./www/config.php\"\nversion=$(cat $versionfile | grep \"'APP_VERSION'\" | cut -d \"'\" -f4)\nbacktitle=\"Copyright (c) 2014, Silvan Melchior. RPi Cam $version\"\n\nget_config_var() {\n  lua - \"$1\" \"$2\" <<EOF\nlocal key=assert(arg[1])\nlocal fn=assert(arg[2])\nlocal file=assert(io.open(fn))\nlocal found=false\nfor line in file:lines() do\n  local val = line:match(\"^%s*\"..key..\"=(.*)$\")\n  if (val ~= nil) then\n    print(val)\n    found=true\n    break\n  end\nend\nif not found then\n   print(0)\nend\nEOF\n}\n\nset_config_var() {\n  lua - \"$1\" \"$2\" \"$3\" <<EOF > \"$3.bak\"\nlocal key=assert(arg[1])\nlocal value=assert(arg[2])\nlocal fn=assert(arg[3])\nlocal file=assert(io.open(fn))\nlocal made_change=false\nfor line in file:lines() do\n  if line:match(\"^#?%s*\"..key..\"=.*$\") then\n    line=key..\"=\"..value\n    made_change=true\n  end\n  print(line)\nend\n\nif not made_change then\n  print(key..\"=\"..value)\nend\nEOF\nmv \"$3.bak\" \"$3\"\n}\n\ndo_finish() {\n  if [ $ASK_TO_REBOOT -eq 1 ]; then\n    dialog --yesno \"Would you like to reboot now?\" 5 35\n    if [ $? -eq 0 ]; then # yes\n      sync\n      reboot\n\telif [ $? -eq 1 ]; then # no\n\t  exec sudo $MAINSCRIPT\n    fi\n  fi\n  exit 0\n}\n\ndo_camera ()\n{\n  if [ ! -e /boot/start_x.elf ]; then\n    dialog --msgbox \"Your firmware appears to be out of date (no start_x.elf). Please update\" 20 60\n\texec sudo $MAINSCRIPT\n  fi\n  dialog --title \"Raspberry Pi camera message\" \\\n  --backtitle \"$backtitle\"                     \\\n  --extra-button --extra-label Disable         \\\n  --ok-label Enable                            \\\n  --yesno \"Enable support for Raspberry Pi camera?\" 5 48\n  response=$?\n  case $response in\n    0) #echo \"[Enable] key pressed.\"\n    set_config_var start_x 1 $RASPICONFIG\n    CUR_GPU_MEM=$(get_config_var gpu_mem $RASPICONFIG)\n    if [ -z \"$CUR_GPU_MEM\" ] || [ \"$CUR_GPU_MEM\" -lt 128 ]; then\n      set_config_var gpu_mem 128 $RASPICONFIG\n    fi\n    sed $RASPICONFIG -i -e \"s/^startx/#startx/\"\n    sed $RASPICONFIG -i -e \"s/^fixup_file/#fixup_file/\"\n\tASK_TO_REBOOT=1\n\tdo_finish\n    ;;\n    1) #echo \"[Cansel] key pressed.\"\n    exec sudo $MAINSCRIPT\n    ;;\n    3) #echo \"[Disable] key pressed.\"\n    set_config_var start_x 0 $RASPICONFIG\n    sed $RASPICONFIG -i -e \"s/^startx/#startx/\"\n    sed $RASPICONFIG -i -e \"s/^start_file/#start_file/\"\n    sed $RASPICONFIG -i -e \"s/^fixup_file/#fixup_file/\"\n\tASK_TO_REBOOT=1\n\tdo_finish\n    ;;\n    255) echo \"[ESC] key pressed.\"\n    exec sudo $MAINSCRIPT\n    ;;\n  esac\n}\n\ndo_camera\nexit\n"
        },
        {
          "name": "debug.sh",
          "type": "blob",
          "size": 2.23046875,
          "content": "#!/bin/bash\n\n# Copyright (c) 2015, Bob Tidey\n# All rights reserved.\n\n# Redistribution and use, with or without modification, are permitted provided\n# that the following conditions are met:\n#    * Redistributions of source code must retain the above copyright\n#      notice, this list of conditions and the following disclaimer.\n#    * Neither the name of the copyright holder nor the\n#      names of its contributors may be used to endorse or promote products\n#      derived from this software without specific prior written permission.\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# Description\n# This script stops a running RPi_Cam interface\n# Based on RPI_Cam_Web_Interface installer by Silvan Melchior\n# Edited by jfarcher to work with github\n# Edited by slabua to support custom installation folder\n# Additions by btidey, miraaz, gigpi\n# Split up and refactored by Bob Tidey \n\n#Debug enable next 3 lines\nexec 5> start.txt\nBASH_XTRACEFD=\"5\"\nset -x\n\ncd $(dirname $(readlink -f $0))\n\nsource ./config.txt\n\nfn_stop ()\n{ # This is function stop\n   sudo killall raspimjpeg 2>/dev/null\n   sudo killall php 2>/dev/null\n   sudo killall motion 2>/dev/null\n}\n\n#start operation\nfn_stop\nsudo mkdir -p /dev/shm/mjpeg\nsudo chown www-data:www-data /dev/shm/mjpeg\nsudo chmod 777 /dev/shm/mjpeg\nsleep 1;sudo su -c 'raspimjpeg &' www-data\nif [ -e /etc/debian_version ]; then\n   sleep 1;sudo su -c \"php /var/www/$rpicamdir/schedule.php > /dev/null &\" www-data\nelse\n   sleep 1;sudo su -c '/bin/bash' -c \"php /var/www/$rpicamdir/schedule.php > /dev/null &\" www-data\nfi\n"
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 17.8017578125,
          "content": "#!/bin/bash\n\n# Copyright (c) 2015, Bob Tidey\n# All rights reserved.\n\n# Redistribution and use, with or without modification, are permitted provided\n# that the following conditions are met:\n#    * Redistributions of source code must retain the above copyright\n#      notice, this list of conditions and the following disclaimer.\n#    * Neither the name of the copyright holder nor the\n#      names of its contributors may be used to endorse or promote products\n#      derived from this software without specific prior written permission.\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# Description\n# This script installs a browser-interface to control the RPi Cam. It can be run\n# on any Raspberry Pi with a newly installed raspbian and enabled camera-support.\n# RPI_Cam_Web_Interface installer by Silvan Melchior\n# Edited by jfarcher to work with github\n# Edited by slabua to support custom installation folder\n# Additions by btidey, miraaz, gigpi\n# Rewritten and split up by Bob Tidey \n\n#Debug enable next 3 lines\nexec 5> install.txt\nBASH_XTRACEFD=\"5\"\nset -x\n\ncd $(dirname $(readlink -f $0))\n\nif [ $(dpkg-query -W -f='${Status}' \"dialog\" 2>/dev/null | grep -c \"ok installed\") -eq 0 ]; then\n  sudo apt-get install -y dialog\nfi\n\n#Legacy support Bullseye\nread -d . VERSION < /etc/debian_version\necho $VERSION\nif [ $VERSION  -eq 10 ]; then\n   phpversion=7.3\nelif [ $VERSION -eq 11 ]; then\n   phpversion=7.4\n#following is done by enable legacy camera in updates raspi-config\n#   sudo sed -i 's/^camera_auto_detect=1/#camera_auto_detect=1/g' /boot/config.txt\n#   sudo grep -qxF 'start_x=1' /boot/config.txt || sudo sed -i '$ a start_x=1' /boot/config.txt\n#   sudo grep -qxF 'gpu_mem=128' /boot/config.txt || sudo sed -i '$ a gpu_mem=128' /boot/config.txt\n   sudo mkdir -p /opt/vc/bin\nelif [ $VERSION -eq 12 ]; then\n   phpversion=8.2\n#following is done by enable legacy camera in updates raspi-config\n#   sudo sed -i 's/^camera_auto_detect=1/#camera_auto_detect=1/g' /boot/config.txt\n#   sudo grep -qxF 'start_x=1' /boot/config.txt || sudo sed -i '$ a start_x=1' /boot/config.txt\n#   sudo grep -qxF 'gpu_mem=128' /boot/config.txt || sudo sed -i '$ a gpu_mem=128' /boot/config.txt\n   sudo mkdir -p /opt/vc/bin\nelse\n   phpversion=7.0\nfi\n\n# Terminal colors\ncolor_red=\"tput setaf 1\"\ncolor_green=\"tput setaf 2\"\ncolor_reset=\"tput sgr0\"\n\n# Version stuff moved out functions as we need it more when one time.\nversionfile=\"./www/config.php\"\nversion=$(cat $versionfile | grep \"'APP_VERSION'\" | cut -d \"'\" -f4)\nbacktitle=\"Copyright (c) 2015, Bob Tidey. RPi Cam $version\"\njpglink=\"no\"\n\n# Config options located in ./config.txt. In first run script makes that file for you.\nif [ ! -e ./config.txt ]; then\n      sudo echo \"#This is config file for main installer. Put any extra options in here.\" > ./config.txt\n      sudo echo \"rpicamdir=\\\"html\\\"\" >> ./config.txt\n      sudo echo \"webserver=\\\"apache\\\"\" >> ./config.txt\n      sudo echo \"webport=\\\"80\\\"\" >> ./config.txt\n      sudo echo \"user=\\\"\\\"\" >> ./config.txt\n      sudo echo \"webpasswd=\\\"\\\"\" >> ./config.txt\n      sudo echo \"autostart=\\\"yes\\\"\" >> ./config.txt\n      sudo echo \"jpglink=\\\"no\\\"\" >> ./config.txt\n      sudo echo \"phpversion=\\\"$phpversion\\\"\" >> ./config.txt\n      sudo echo \"\" >> ./config.txt\n      sudo chmod 664 ./config.txt\nfi\n\nsource ./config.txt\nrpicamdirold=$rpicamdir\nif [ ! \"${rpicamdirold:0:1}\" == \"\" ]; then\n   rpicamdirold=/$rpicamdirold\nfi\n\n\n#Allow for a quiet install\nrm exitfile.txt >/dev/null 2>&1\nif [ $# -eq 0 ] || [ \"$1\" != \"q\" ]; then\n   exec 3>&1\n   dialog                                         \\\n   --separate-widget $'\\n'                        \\\n   --title \"Configuration Options\"    \\\n   --backtitle \"$backtitle\"\t\t\t\t\t   \\\n   --form \"\"                                      \\\n   0 0 0                                          \\\n   \"Cam subfolder:\"        1 1   \"$rpicamdir\"   1 32 15 0  \\\n   \"Autostart:(yes/no)\"    2 1   \"$autostart\"   2 32 15 0  \\\n   \"Server:(apache/nginx/lighttpd)\" 3 1   \"$webserver\"   3 32 15 0  \\\n   \"Webport:\"              4 1   \"$webport\"     4 32 15 0  \\\n   \"User:(blank=nologin)\"  5 1   \"$user\"        5 32 15 0  \\\n   \"Password:\"             6 1   \"$webpasswd\"   6 32 15 0  \\\n   \"jpglink:(yes/no)\"      7 1   \"$jpglink\"     7 32 15 0  \\\n   \"php:(stretch 7.0,buster 7.3)\"           8 1   \"$phpversion\"  8 32 15 0  \\\n   2>&1 1>&3 | {\n      read -r rpicamdir\n      read -r autostart\n      read -r webserver\n      read -r webport\n      read -r user\n      read -r webpasswd\n\t  read -r jpglink\n\t  read -r phpversion\n   if [ -n \"$webport\" ]; then\n      sudo echo \"#This is edited config file for main installer. Put any extra options in here.\" > ./config.txt\n      sudo echo \"rpicamdir=\\\"$rpicamdir\\\"\" >> ./config.txt\n      sudo echo \"webserver=\\\"$webserver\\\"\" >> ./config.txt\n      sudo echo \"webport=\\\"$webport\\\"\" >> ./config.txt\n      sudo echo \"user=\\\"$user\\\"\" >> ./config.txt\n      sudo echo \"webpasswd=\\\"$webpasswd\\\"\" >> ./config.txt\n      sudo echo \"autostart=\\\"$autostart\\\"\" >> ./config.txt\n      sudo echo \"jpglink=\\\"$jpglink\\\"\" >> ./config.txt\n      sudo echo \"phpversion=\\\"$phpversion\\\"\" >> ./config.txt\n      sudo echo \"\" >> ./config.txt\n   else\n      echo \"exit\" > ./exitfile.txt\n   fi\n   }\n   exec 3>&-\n\n   if [ -e exitfile.txt ]; then\n      rm exitfile.txt\n      exit\n   fi\n\n   source ./config.txt\nfi\n\nif [ ! \"${rpicamdir:0:1}\" == \"\" ]; then\n   rpicamdir=/$rpicamdir\n   rpicamdirEsc=${rpicamdir//\\//\\\\\\/}\nelse\n   rpicamdirEsc=\"\"\nfi\n\nfn_stop ()\n{ # This is function stop\n        sudo killall raspimjpeg 2>/dev/null\n        sudo killall php 2>/dev/null\n        sudo killall motion 2>/dev/null\n}\n\nfn_reboot ()\n{ # This is function reboot system\n  dialog --title \"Start camera system now\" --backtitle \"$backtitle\" --yesno \"Start now?\" 5 33\n  response=$?\n    case $response in\n      0) ./start.sh;;\n      1) dialog --title 'Start or Reboot message' --colors --infobox \"\\Zb\\Z1\"'Manually run ./start.sh or reboot!' 4 28 ; sleep 2;;\n      255) dialog --title 'Start or Reboot message' --colors --infobox \"\\Zb\\Z1\"'Manually run ./start.sh or reboot!' 4 28 ; sleep 2;;\n    esac\n}\n\n\nfn_apache ()\n{\naconf=\"etc/apache2/sites-available/raspicam.conf\"\ncp $aconf.1 $aconf\nif [ -e \"\\/$aconf\" ]; then\n   sudo rm \"\\/$aconf\"\nfi\nif [ -e /etc/apache2/conf-available/other-vhosts-access-log.conf ]; then\n   aotherlog=\"/etc/apache2/conf-available/other-vhosts-access-log.conf\"\nelse\n   aotherlog=\"/etc/apache2/conf.d/other-vhosts-access-log\"\nfi\ntmpfile=$(mktemp)\nsudo awk '/NameVirtualHost \\*:/{c+=1}{if(c==1){sub(\"NameVirtualHost \\\\*:.*\",\"NameVirtualHost *:'$webport'\",$0)};print}' /etc/apache2/ports.conf > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/apache2/ports.conf\nsudo awk '/Listen/{c+=1}{if(c==1){sub(\"Listen.*\",\"Listen '$webport'\",$0)};print}' /etc/apache2/ports.conf > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/apache2/ports.conf\nsudo awk '/<VirtualHost \\*:/{c+=1}{if(c==1){sub(\"<VirtualHost \\\\*:.*\",\"<VirtualHost *:'$webport'>\",$0)};print}' $aconf > \"$tmpfile\" && sudo mv \"$tmpfile\" $aconf\nsudo sed -i \"s/<Directory\\ \\/var\\/www\\/.*/<Directory\\ \\/var\\/www$rpicamdirEsc>/g\" $aconf\nif [ \"$user\" == \"\" ]; then\n\tsudo sed -i \"s/AllowOverride\\ .*/AllowOverride None/g\" $aconf\nelse\n   if [ ! -e /usr/local/.htpasswd ]; then\n      sudo htpasswd -b -B -c /usr/local/.htpasswd $user $webpasswd\n   fi\n   sudo htpasswd -b -B /usr/local/.htpasswd $user $webpasswd\n   sudo sed -i \"s/AllowOverride\\ .*/AllowOverride All/g\" $aconf\n   if [ ! -e /var/www$rpicamdir/.htaccess ]; then\n      sudo bash -c \"cat > /var/www$rpicamdir/.htaccess\" << EOF\nAuthName \"RPi Cam Web Interface Restricted Area\"\nAuthType Basic\nAuthUserFile /usr/local/.htpasswd\nRequire valid-user\nEOF\n      sudo chown -R www-data:www-data /var/www$rpicamdir/.htaccess\n   fi\nfi\nsudo mv $aconf /$aconf\nif [ ! -e /etc/apache2/sites-enabled/raspicam.conf ]; then\n   sudo ln -sf /$aconf /etc/apache2/sites-enabled/raspicam.conf\nfi\nsudo sed -i 's/^CustomLog/#CustomLog/g' $aotherlog\nsudo a2dissite 000-default.conf >/dev/null 2>&1\nsudo service apache2 restart\n}\n\nfn_nginx ()\n{\naconf=\"etc/nginx/sites-available/rpicam\"\ncp $aconf.1 $aconf\nif [ -e \"\\/$aconf\" ]; then\n   sudo rm \"\\/$aconf\"\nfi\n#uncomment next line if wishing to always access by http://ip as the root\n#sudo sed -i \"s:root /var/www;:root /var/www$rpicamdirEsc;:g\" $aconf \nsudo mv /etc/nginx/sites-available/*default* etc/nginx/sites-available/ >/dev/null 2>&1\n#remove link file as nginx now errors if link invalid\nsudo rm /etc/nginx/sites-enabled/*default* >/dev/null 2>&1\n\nif [ \"$user\" == \"\" ]; then\n   sed -i \"s/auth_basic\\ .*/auth_basic \\\"Off\\\";/g\" $aconf\n   sed -i \"s/\\ auth_basic_user_file/#auth_basic_user_file/g\" $aconf\nelse\n   sudo htpasswd -b -c /usr/local/.htpasswd $user $webpasswd\n   sed -i \"s/auth_basic\\ .*/auth_basic \\\"Restricted\\\";/g\" $aconf\n   sed -i \"s/#auth_basic_user_file/\\ auth_basic_user_file/g\" $aconf\nfi\nif [[ \"$phpversion\" == \"7.4\" ]]; then\n   sed -i \"s/\\/var\\/run\\/php5-fpm\\.sock;/\\/run\\/php\\/php7.4-fpm\\.sock;/g\" $aconf\nelif [[ \"$phpversion\" == \"7.3\" ]]; then\n   sed -i \"s/\\/var\\/run\\/php5-fpm\\.sock;/\\/run\\/php\\/php7.3-fpm\\.sock;/g\" $aconf\nfi\nsudo sed -i -E \"s/(listen.+?)80/\\1$webport/g\" $aconf\n# following line sets root url to direct subfolder. This is inconsistent with other usage.\n#sudo sed -i -E \"s/root \\/var\\/www/root \\/var\\/www$rpicamdirEsc/\" $aconf\nsudo mv $aconf /$aconf\nsudo chmod 644 /$aconf\nif [ ! -e /etc/nginx/sites-enabled/rpicam ]; then\n   sudo ln -sf /$aconf /etc/nginx/sites-enabled/rpicam\nfi\n\n# Update nginx main config file\nsudo sed -i \"s/worker_processes 4;/worker_processes 2;/g\" /etc/nginx/nginx.conf\nsudo sed -i \"s/worker_connections 768;/worker_connections 128;/g\" /etc/nginx/nginx.conf\nsudo sed -i \"s/gzip on;/gzip off;/g\" /etc/nginx/nginx.conf\nif [ \"$NGINX_DISABLE_LOGGING\" != \"\" ]; then\n   sudo sed -i \"s:access_log /var/log/nginx/nginx/access.log;:access_log /dev/null;:g\" /etc/nginx/nginx.conf\nfi\n\n# Configure php-apc\nif [[ \"$phpversion\" == \"7.3\" ]]; then\n\tphpnv=/etc/php/7.3\nelse\n\tphpnv=/etc/php/$phpversion\nfi\nsudo sh -c \"echo \\\"cgi.fix_pathinfo = 0;\\\" >> $phpnv/fpm/php.ini\"\nsudo mkdir $phpnv/conf.d >/dev/null 2>&1\nsudo cp etc/php5/apc.ini $phpnv/conf.d/20-apc.ini\nsudo chmod 644 $phpnv/conf.d/20-apc.ini\nsudo service nginx restart\n}\n\nfn_lighttpd ()\n{\nsudo lighty-enable-mod fastcgi-php\nsudo sed -i \"s/^server.document-root.*/server.document-root  = \\\"\\/var\\/www$rpicamdirEsc\\\"/g\" /etc/lighttpd/lighttpd.conf\nsudo sed -i \"s/^server.port.*/server.port  = $webport/g\" /etc/lighttpd/lighttpd.conf\n#sudo service lighttpd restart  \nsudo /etc/init.d/lighttpd force-reload\n }\n\nfn_motion ()\n{\nsudo sed -i \"s/^daemon.*/daemon on/g\" /etc/motion/motion.conf\t\t\nsudo sed -i \"s/^logfile.*/;logfile \\/tmp\\/motion.log /g\" /etc/motion/motion.conf\t\t\nsudo sed -i \"s/^; netcam_url.*/netcam_url/g\" /etc/motion/motion.conf\t\t\nsudo sed -i \"s/^netcam_url.*/netcam_url http:\\/\\/localhost:$webport$rpicamdirEsc\\/cam_pic.php/g\" /etc/motion/motion.conf\t\t\nif [ \"$user\" == \"\" ]; then\n   sudo sed -i \"s/^netcam_userpass.*/; netcam_userpass value/g\" /etc/motion/motion.conf\t\t\nelse\n   sudo sed -i \"s/^; netcam_userpass.*/netcam_userpass/g\" /etc/motion/motion.conf\t\t\n   sudo sed -i \"s/^netcam_userpass.*/netcam_userpass $user:$webpasswd/g\" /etc/motion/motion.conf\t\t\nfi\nsudo sed -i \"s/^; on_event_start.*/on_event_start/g\" /etc/motion/motion.conf\t\t\nsudo sed -i \"s/^on_event_start.*/on_event_start echo -n \\'1\\' >\\/var\\/www$rpicamdirEsc\\/FIFO1/g\" /etc/motion/motion.conf\t\t\nsudo sed -i \"s/^; on_event_end.*/on_event_end/g\" /etc/motion/motion.conf\t\t\nsudo sed -i \"s/^on_event_end.*/on_event_end echo -n \\'0\\' >\\/var\\/www$rpicamdirEsc\\/FIFO1/g\" /etc/motion/motion.conf\t\t\nsudo sed -i \"s/control_port.*/control_port 6642/g\" /etc/motion/motion.conf\t\t\nsudo sed -i \"s/control_html_output.*/control_html_output off/g\" /etc/motion/motion.conf\t\t\nsudo sed -i \"s/^output_pictures.*/output_pictures off/g\" /etc/motion/motion.conf\t\t\nsudo sed -i \"s/^ffmpeg_output_movies on/ffmpeg_output_movies off/g\" /etc/motion/motion.conf\t\t\nsudo sed -i \"s/^ffmpeg_cap_new on/ffmpeg_cap_new off/g\" /etc/motion/motion.conf\t\t\nsudo sed -i \"s/^stream_port.*/stream_port 0/g\" /etc/motion/motion.conf\t\t\nsudo sed -i \"s/^webcam_port.*/webcam_port 0/g\" /etc/motion/motion.conf\t\t\nsudo sed -i \"s/^process_id_file/; process_id_file/g\" /etc/motion/motion.conf\nsudo sed -i \"s/^videodevice/; videodevice/g\" /etc/motion/motion.conf\nsudo sed -i \"s/^event_gap 60/event_gap 3/g\" /etc/motion/motion.conf\nsudo chown motion:www-data /etc/motion/motion.conf\nsudo chmod 664 /etc/motion/motion.conf\n}\n\nfn_autostart ()\n{\ntmpfile=$(mktemp)\nsudo sed '/#START/,/#END/d' /etc/rc.local > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/rc.local\n# Remove to growing plank lines.\nsudo awk '!NF {if (++n <= 1) print; next}; {n=0;print}' /etc/rc.local > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/rc.local\nif [ \"$autostart\" == \"yes\" ]; then\n   if ! grep -Fq '#START RASPIMJPEG SECTION' /etc/rc.local; then\n      sudo sed -i '/exit 0/d' /etc/rc.local\n      sudo bash -c \"cat >> /etc/rc.local\" << EOF\n#START RASPIMJPEG SECTION\nmkdir -p /dev/shm/mjpeg\nchown www-data:www-data /dev/shm/mjpeg\nchmod 777 /dev/shm/mjpeg\nsleep 4;su -c 'raspimjpeg > /dev/null 2>&1 &' www-data\nif [ -e /etc/debian_version ]; then\n  sleep 4;su -c 'php /var/www$rpicamdir/schedule.php > /dev/null 2>&1 &' www-data\nelse\n  sleep 4;su -s '/bin/bash' -c 'php /var/www$rpicamdir/schedule.php > /dev/null 2>&1 &' www-data\nfi\n#END RASPIMJPEG SECTION\n\nexit 0\nEOF\n   else\n      tmpfile=$(mktemp)\n      sudo sed '/#START/,/#END/d' /etc/rc.local > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/rc.local\n      # Remove to growing plank lines.\n      sudo awk '!NF {if (++n <= 1) print; next}; {n=0;print}' /etc/rc.local > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/rc.local\n   fi\n\nfi\nsudo chown root:root /etc/rc.local\nsudo chmod 755 /etc/rc.local\n}\n\n#Main install)\nfn_stop\n\nsudo mkdir -p /var/www$rpicamdir/media\n#move old material if changing from a different install folder\nif [ ! \"$rpicamdir\" == \"$rpicamdirold\" ]; then\n   if [ -e /var/www$rpicamdirold/index.php ]; then\n      sudo mv /var/www$rpicamdirold/* /var/www$rpicamdir\n   fi\nfi\n\nsudo cp -r www/* /var/www$rpicamdir/\nif [ -e /var/www$rpicamdir/index.html ]; then\n   sudo rm /var/www$rpicamdir/index.html\nfi\n\nif [[ \"$phpversion\" == \"7.3\" ]]; then\n   phpv=php7.3\nelse\n   phpv=php$phpversion\nfi\n\nif [ \"$webserver\" == \"apache\" ]; then\n   sudo apt-get install -y apache2 $phpv $phpv-cli libapache2-mod-$phpv gpac motion zip gstreamer1.0-tools\n   if [ $? -ne 0 ]; then exit; fi\n   fn_apache\nelif [ \"$webserver\" == \"nginx\" ]; then\n   sudo apt-get install -y nginx $phpv-fpm $phpv-cli $phpv-common php-apcu apache2-utils gpac motion zip gstreamer1.0-tools\n   if [ $? -ne 0 ]; then exit; fi\n   fn_nginx\nelif [ \"$webserver\" == \"lighttpd\" ]; then\n   sudo apt-get install -y  lighttpd $phpv-cli $phpv-common $phpv-cgi $phpv gpac motion zip gstreamer1.0-tools\n   if [ $? -ne 0 ]; then exit; fi\n   fn_lighttpd\nfi\n\n#Make sure user www-data has bash shell\nsudo sed -i \"s/^www-data:x.*/www-data:x:33:33:www-data:\\/var\\/www:\\/bin\\/bash/g\" /etc/passwd\n\nif [ ! -e /var/www$rpicamdir/FIFO ]; then\n   sudo mknod /var/www$rpicamdir/FIFO p\nfi\nsudo chmod 666 /var/www$rpicamdir/FIFO\n\nif [ ! -e /var/www$rpicamdir/FIFO11 ]; then\n   sudo mknod /var/www$rpicamdir/FIFO11 p\nfi\nsudo chmod 666 /var/www$rpicamdir/FIFO11\n\nif [ ! -e /var/www$rpicamdir/FIFO1 ]; then\n   sudo mknod /var/www$rpicamdir/FIFO1 p\nfi\n\nsudo chmod 666 /var/www$rpicamdir/FIFO1\n\nif [ ! -d /dev/shm/mjpeg ]; then\n   mkdir /dev/shm/mjpeg\nfi\n\nif [ \"$jpglink\" == \"yes\" ]; then\n\tif [ ! -e /var/www$rpicamdir/cam.jpg ]; then\n\t   sudo ln -sf /dev/shm/mjpeg/cam.jpg /var/www$rpicamdir/cam.jpg\n\tfi\nfi\n\nif [ -e /var/www$rpicamdir/status_mjpeg.txt ]; then\n   sudo rm /var/www$rpicamdir/status_mjpeg.txt\nfi\nif [ ! -e /dev/shm/mjpeg/status_mjpeg.txt ]; then\n   echo -n 'halted' > /dev/shm/mjpeg/status_mjpeg.txt\nfi\nsudo chown www-data:www-data /dev/shm/mjpeg/status_mjpeg.txt\nsudo ln -sf /dev/shm/mjpeg/status_mjpeg.txt /var/www$rpicamdir/status_mjpeg.txt\n\nsudo chown -R www-data:www-data /var/www$rpicamdir\nsudo cp etc/sudoers.d/RPI_Cam_Web_Interface /etc/sudoers.d/\nsudo chmod 440 /etc/sudoers.d/RPI_Cam_Web_Interface\n\nsudo cp -r bin/raspimjpeg /opt/vc/bin/\nsudo chmod 755 /opt/vc/bin/raspimjpeg\nif [ ! -e /usr/bin/raspimjpeg ]; then\n   sudo ln -s /opt/vc/bin/raspimjpeg /usr/bin/raspimjpeg\nfi\n\nsed -e \"s/www/www$rpicamdirEsc/\" etc/raspimjpeg/raspimjpeg.1 > etc/raspimjpeg/raspimjpeg\nif [[ `cat /proc/cmdline |awk -v RS=' ' -F= '/boardrev/ { print $2 }'` == \"0x11\" ]]; then\n   sed -i 's/^camera_num 0/camera_num 1/g' etc/raspimjpeg/raspimjpeg\nfi\nif [ -e /etc/raspimjpeg ]; then\n   $color_green; echo \"Your custom raspimjpg backed up at /etc/raspimjpeg.bak\"; $color_reset\n   sudo cp -r /etc/raspimjpeg /etc/raspimjpeg.bak\nfi\nsudo cp -r etc/raspimjpeg/raspimjpeg /etc/\nsudo chmod 644 /etc/raspimjpeg\nif [ ! -e /var/www$rpicamdir/raspimjpeg ]; then\n   sudo ln -s /etc/raspimjpeg /var/www$rpicamdir/raspimjpeg\nfi\n\nsudo usermod -a -G video www-data\nif [ -e /var/www$rpicamdir/uconfig ]; then\n   sudo chown www-data:www-data /var/www$rpicamdir/uconfig\nfi\n\nfn_motion\nfn_autostart\n\nif [ -e /var/www$rpicamdir/uconfig ]; then\n   sudo chown www-data:www-data /var/www$rpicamdir/uconfig\nfi\n\nif [ -e /var/www$rpicamdir/schedule.php ]; then\n   sudo rm /var/www$rpicamdir/schedule.php\nfi\n\nsudo sed -e \"s/www/www$rpicamdirEsc/g\" www/schedule.php > www/schedule.php.1\nsudo mv www/schedule.php.1 /var/www$rpicamdir/schedule.php\nsudo chown www-data:www-data /var/www$rpicamdir/schedule.php\n\nif [ $# -eq 0 ] || [ \"$1\" != \"q\" ]; then\n   fn_reboot\nfi\n"
        },
        {
          "name": "installreadme.txt",
          "type": "blob",
          "size": 1.458984375,
          "content": "There are 2 ways of installing the software ./RPi_Cam_Web_Interface_Installer.sh and a set of dedicated scripts.\n\nThe ./RPi_Cam_Web_Interface_Installer.sh is the original scheme largely developed under Wheezy.\n\nThe dedicated scripts are a re-factoring to simplify the process and these work under Wheezy and Jessie.\nFuture changes will be made to these.\n\n5 scripts are used instead of combining all together.\nThis avoids the overhead of a separate selection and makes it easier to run a particular function automatically.\nSo start and stop can just be run as separate activities.\n\nThe scripts are\ninstall.sh main installation\nupdate.sh check for updates and then run main installation\nstart.sh starts the software\nstop.sh stops the software\nremove.sh removes the software\n\nThe main installation always does the same thing to simplify its logic.\nIt gathers all user parameters first in one combined dialog and then always\napplies the parameters as it goes through the process.\nA q (quiet) parameter may be used to skip this and give an automatic install based on config.txt\nAll parameters are always in the config.txt file, a default version is created if one\ndoesn't exist and is then changed just once after the initial user dialog.\nThe installation always tries to upgrade the main software components and then functionally goes through\nthe configuration steps for each area like apache, motion start up.\n\nDebug is turned on for the moment so it logs its activity to a file called install.txt"
        },
        {
          "name": "remove.sh",
          "type": "blob",
          "size": 5.1875,
          "content": "#!/bin/bash\n\n# Copyright (c) 2015, Bob Tidey\n# All rights reserved.\n\n# Redistribution and use, with or without modification, are permitted provided\n# that the following conditions are met:\n#    * Redistributions of source code must retain the above copyright\n#      notice, this list of conditions and the following disclaimer.\n#    * Neither the name of the copyright holder nor the\n#      names of its contributors may be used to endorse or promote products\n#      derived from this software without specific prior written permission.\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# Description\n# This script removes the browser-interface to control the RPi Cam. It can be run\n# on any Raspberry Pi with a newly installed raspbian and enabled camera-support.\n# Based on RPI_Cam_WEb_Interface installer by Silvan Melchior\n# Edited by jfarcher to work with github\n# Edited by slabua to support custom installation folder\n# Additions by btidey, miraaz, gigpi\n# Split up and refactored by Bob Tidey \n\n#Debug enable next 3 lines\nexec 5> remove.txt\nBASH_XTRACEFD=\"5\"\nset -x\n\n\ncd $(dirname $(readlink -f $0))\n\n# Terminal colors\ncolor_red=\"tput setaf 1\"\ncolor_green=\"tput setaf 2\"\ncolor_reset=\"tput sgr0\"\n\nsource ./config.txt\n\nfn_stop ()\n{ # This is function stop\n        sudo killall raspimjpeg 2>/dev/null\n        sudo killall php 2>/dev/null\n        sudo killall motion 2>/dev/null\n        sudo service apache2 stop >dev/null 2>&1\n        sudo service nginx stop >dev/null 2>&1\n        sudo service lighttpd stop >dev/null 2>&1\n        dialog --title 'Stop message' --infobox 'Stopped.' 4 16 ; sleep 2\n}\n\nfn_autostart_disable ()\n{\n  tmpfile=$(mktemp)\n  sudo sed '/#START/,/#END/d' /etc/rc.local > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/rc.local\n  # Remove to growing plank lines.\n  sudo awk '!NF {if (++n <= 1) print; next}; {n=0;print}' /etc/rc.local > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/rc.local\n\t\t\t  \n  # Finally we set owners and permissions all files what we changed.\n  sudo chown root:root /etc/rc.local\n  sudo chmod 755 /etc/rc.local\n  sudo chmod 664 ./config.txt\n}\n\n\nfn_apache_default ()\n{\nif [ -e /etc/apache2/sites-available/000-default.conf ]; then\n   adefault=\"/etc/apache2/sites-available/000-default.conf\"\n   subdir=\"\\/html\"\nelse\n   adefault=\"/etc/apache2/sites-available/default\"\n   subdir=\"\"\nfi\ntmpfile=$(mktemp)\nwebport=\"80\"\nuser=\"\"\npasswd=\"\"\nsudo awk '/NameVirtualHost \\*:/{c+=1}{if(c==1){sub(\"NameVirtualHost \\\\*:.*\",\"NameVirtualHost *:'$webport'\",$0)};print}' /etc/apache2/ports.conf > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/apache2/ports.conf\nsudo awk '/Listen/{c+=1}{if(c==1){sub(\"Listen.*\",\"Listen '$webport'\",$0)};print}' /etc/apache2/ports.conf > \"$tmpfile\" && sudo mv \"$tmpfile\" /etc/apache2/ports.conf\nsudo awk '/<VirtualHost \\*:/{c+=1}{if(c==1){sub(\"<VirtualHost \\\\*:.*\",\"<VirtualHost *:'$webport'>\",$0)};print}' $adefault > \"$tmpfile\" && sudo mv \"$tmpfile\" $adefault\nsudo sed -i \"s/DocumentRoot\\ \\/var\\/www\\/.*/DocumentRoot\\ \\/var\\/www$subdir/g\" $adefault\nsudo awk '/AllowOverride/{c+=1}{if(c==2){sub(\"AllowOverride.*\",\"AllowOverride None\",$0)};print}' /etc/apache2/sites-available/default > \"$tmpfile\" && sudo mv \"$tmpfile\" $adefault\nsudo service apache2 restart\n}\n\n\nfn_stop\n     \ndialog --title \"Uninstall packages!\" --backtitle \"$backtitle\" --yesno \"Do You want uninstall webserver and php packages also?\" 6 35\nresponse=$?\ncase $response in\n   0) package=('apache2' 'php5' 'libapache2-mod-php5' 'php5-cli' 'zip' 'nginx' 'lighttpd' 'apache2-utils' 'php5-fpm' 'php5-common' 'php-apc' 'gpac' 'motion' 'libav-tools');;\n   1) package=('zip' 'gpac motion' 'libav-tools');; \n   255) dialog --title 'Uninstall message' --infobox 'Webserver and php packages not uninstalled.' 4 33 ; sleep 2;;\nesac\nfor i in \"${package[@]}\"\n   do\n      if [ $(dpkg-query -W -f='${Status}' \"$i\" 2>/dev/null | grep -c \"ok installed\") -eq 1 ]; then\n      sudo apt-get remove -y \"$i\"\n      fi\n   done\nsudo apt-get autoremove -y\t  \n\nif [ ! -d ~/media ]; then\n  mkdir ~/media\nfi\nif [ ! \"$rpicamdir\" == \"\" ]; then\n   sudo mv  /var/www/$rpicamdir/media ~/media\n   sudo rm -r /var/www/$rpicamdir\nelse\n   sudo mv /var/www/media ~/media\n   sudo rm /var/www/*\nfi\nsudo rm /etc/sudoers.d/RPI_Cam_Web_Interface\nsudo rm /usr/bin/raspimjpeg\nsudo rm /etc/raspimjpeg\nfn_autostart_disable\n\nsudo mv etc/nginx/sites-available/*default* /etc/nginx/sites-available >/dev/null 2>&1\nsudo mv etc/apache2/sites-available/*default* /etc/apache2/sites-available >/dev/null 2>&1\n     \nif [ $(dpkg-query -W -f='${Status}' \"apache2\" 2>/dev/null | grep -c \"ok installed\") -eq 1 ]; then\n   fn_apache_default\nfi\n\n"
        },
        {
          "name": "start.sh",
          "type": "blob",
          "size": 2.2421875,
          "content": "#!/bin/bash\n\n# Copyright (c) 2015, Bob Tidey\n# All rights reserved.\n\n# Redistribution and use, with or without modification, are permitted provided\n# that the following conditions are met:\n#    * Redistributions of source code must retain the above copyright\n#      notice, this list of conditions and the following disclaimer.\n#    * Neither the name of the copyright holder nor the\n#      names of its contributors may be used to endorse or promote products\n#      derived from this software without specific prior written permission.\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# Description\n# This script stops a running RPi_Cam interface\n# Based on RPI_Cam_Web_Interface installer by Silvan Melchior\n# Edited by jfarcher to work with github\n# Edited by slabua to support custom installation folder\n# Additions by btidey, miraaz, gigpi\n# Split up and refactored by Bob Tidey \n\n#Debug enable next 3 lines\nexec 5> start.txt\nBASH_XTRACEFD=\"5\"\nset -x\n\ncd $(dirname $(readlink -f $0))\n\nsource ./config.txt\n\nfn_stop ()\n{ # This is function stop\n   sudo killall raspimjpeg 2>/dev/null\n   sudo killall php 2>/dev/null\n   sudo killall motion 2>/dev/null\n}\n\n#start operation\nfn_stop\nsudo mkdir -p /dev/shm/mjpeg\nsudo chown www-data:www-data /dev/shm/mjpeg\nsudo chmod 777 /dev/shm/mjpeg\nsleep 1;sudo su -c 'raspimjpeg > /dev/null &' www-data\nif [ -e /etc/debian_version ]; then\n   sleep 1;sudo su -c \"php /var/www/$rpicamdir/schedule.php > /dev/null &\" www-data\nelse\n   sleep 1;sudo su -c '/bin/bash' -c \"php /var/www/$rpicamdir/schedule.php > /dev/null &\" www-data\nfi\n"
        },
        {
          "name": "stop.sh",
          "type": "blob",
          "size": 1.8642578125,
          "content": "#!/bin/bash\n\n# Copyright (c) 2015, Bob Tidey\n# All rights reserved.\n\n# Redistribution and use, with or without modification, are permitted provided\n# that the following conditions are met:\n#    * Redistributions of source code must retain the above copyright\n#      notice, this list of conditions and the following disclaimer.\n#    * Neither the name of the copyright holder nor the\n#      names of its contributors may be used to endorse or promote products\n#      derived from this software without specific prior written permission.\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# Description\n# This script stops a running RPi_Cam interface\n# Based on RPI_Cam_Web_Interface installer by Silvan Melchior\n# Edited by jfarcher to work with github\n# Edited by slabua to support custom installation folder\n# Additions by btidey, miraaz, gigpi\n# Split up and refactored by Bob Tidey \n\n#Debug enable next 3 lines\nexec 5> stop.txt\nBASH_XTRACEFD=\"5\"\nset -x\n\ncd $(dirname $(readlink -f $0))\n\nsource ./config.txt\n\nfn_stop ()\n{ # This is function stop\n   sudo killall raspimjpeg 2>/dev/null\n   sudo killall php 2>/dev/null\n   sudo killall motion 2>/dev/null\n}\n\n#stop operation\nfn_stop\n"
        },
        {
          "name": "update.sh",
          "type": "blob",
          "size": 2.81640625,
          "content": "#!/bin/bash\n\n# Copyright (c) 2015, Bob Tidey\n# All rights reserved.\n\n# Redistribution and use, with or without modification, are permitted provided\n# that the following conditions are met:\n#    * Redistributions of source code must retain the above copyright\n#      notice, this list of conditions and the following disclaimer.\n#    * Neither the name of the copyright holder nor the\n#      names of its contributors may be used to endorse or promote products\n#      derived from this software without specific prior written permission.\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# Description\n# This script updates the installer for the browser-interface to control the RPi Cam. It can be run\n# on any Raspberry Pi with a newly installed raspbian and enabled camera-support.\n# Based on RPI_Cam_WEb_Interface installer by Silvan Melchior\n# Edited by jfarcher to work with github\n# Edited by slabua to support custom installation folder\n# Additions by btidey, miraaz, gigpi\n# Split up and refactored by Bob Tidey \n\n#Debug enable next 3 lines\nexec 5> update.txt\nBASH_XTRACEFD=\"5\"\nset -x\n\ncd $(dirname $(readlink -f $0))\n\n# Terminal colors\ncolor_red=\"tput setaf 1\"\ncolor_green=\"tput setaf 2\"\ncolor_reset=\"tput sgr0\"\n\n\nfn_abort()\n{\n    $color_red; echo >&2 '\n***************\n*** ABORTED ***\n***************\n'\n    echo \"An error occurred. Exiting...\" >&2; $color_reset\n    exit 1\n}\n\n   trap 'fn_abort' 0\n   set -e\n   remote=$(\n     git ls-remote -h origin master |\n     awk '{print $1}'\n   )\n   local=$(git rev-parse HEAD)\n   printf \"Local : %s\\nRemote: %s\\n\" $local $remote\n   if [[ $local == $remote ]]; then\n      dialog --title 'Update message' --infobox 'Commits match. Nothing update.' 4 35 ; sleep 2\n   else\n      dialog --title 'Update message' --infobox \"Commits don't match. We update.\" 4 35 ; sleep 2\n      git fetch origin master\n      git reset --hard origin/master\n      chmod u+x *.sh\n   fi\n   trap : 0\n   dialog --title 'Update message' --infobox 'Update finished.' 4 20 ; sleep 2\n   \n   # We call updated install script passing through any quiet parameter\n   if [ $# -eq 0 ]; then \n      ./install.sh\n   else\n      ./install.sh $1\n   fi\n"
        },
        {
          "name": "www",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}