{
  "metadata": {
    "timestamp": 1736712178757,
    "page": 850,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Spomky-Labs/otphp",
      "stars": 1333,
      "defaultBranch": "11.4.x",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.49609375,
          "content": "# https://EditorConfig.org\n\nroot = true\n\n[*]\nindent_style = space\n# Reduce tab size on GitHub\nindent_size = 4\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nblock_comment_start = /*\nblock_comment = *\nblock_comment_end = */\n\n[{*.yml,*.yaml}]\nindent_size = 2\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[Makefile]\nindent_style = tab\n\n# Generated file\n[infection.txt]\nindent_size = unset\ntrim_trailing_whitespace = unset\n\n[phpstan-baseline.neon]\nindent_style = unset\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.41796875,
          "content": "* text=auto\n\n/.github export-ignore\n/doc export-ignore\n/tests export-ignore\n/.editorconfig export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/CODE_OF_CONDUCT.md export-ignore\n/deptrac.yaml export-ignore\n/ecs.php export-ignore\n/infection.json.dist export-ignore\n/Makefile export-ignore\n/phpstan.neon export-ignore\n/phpstan-baseline.neon export-ignore\n/phpunit.xml.dist export-ignore\n/rector.php export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.072265625,
          "content": "/composer.lock\n/vendor/\n.phpunit.result.cache\n/phpunit.xml\n/infection.log\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.14453125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at contact@spomky-labs.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014-2016 Florent Morselli\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.80859375,
          "content": "########################\n#      Everyday        #\n########################\n\n.PHONY: mu\nmu: vendor ## Mutation tests\n\tXDEBUG_MODE=coverage vendor/bin/infection -s --threads=$$(nproc) --min-msi=30 --min-covered-msi=50\n\n.PHONY: tests\ntests: vendor ## Run all tests\n\tvendor/bin/phpunit  --color\n\n.PHONY: cc\ncc: vendor ## Show test coverage rates (HTML)\n\tvendor/bin/phpunit --coverage-html ./build\n\n.PHONY: cs\ncs: vendor ## Fix all files using defined ECS rules\n\tvendor/bin/ecs check --fix\n\n.PHONY: tu\ntu: vendor ## Run only unit tests\n\tvendor/bin/phpunit --color --group Unit\n\n.PHONY: ti\nti: vendor ## Run only integration tests\n\tvendor/bin/phpunit --color --group Integration\n\n.PHONY: tf\ntf: vendor ## Run only functional tests\n\tvendor/bin/phpunit --color --group Functional\n\n.PHONY: st\nst: vendor ## Run static analyse\n\tXDEBUG_MODE=off vendor/bin/phpstan analyse\n\n\n########################\n#         CI/CD        #\n########################\n\n.PHONY: ci-mu\nci-mu: vendor ## Mutation tests (for CI/CD only)\n\tXDEBUG_MODE=coverage vendor/bin/infection --logger-github -s --threads=$$(nproc) --min-msi=30 --min-covered-msi=50\n\n.PHONY: ci-cc\nci-cc: vendor ## Show test coverage rates (for CI/CD only)\n\tXDEBUG_MODE=coverage vendor/bin/phpunit --coverage-text\n\n.PHONY: ci-cs\nci-cs: vendor ## Check all files using defined ECS rules (for CI/CD only)\n\tXDEBUG_MODE=off vendor/bin/ecs check\n\n########################\n#        Others        #\n########################\n\n.PHONY: rector\nrector: vendor ## Check all files using Rector\n\tXDEBUG_MODE=off vendor/bin/rector process --ansi --dry-run --xdebug\n\nvendor: composer.json\n\tcomposer validate\n\tcomposer install\n\n.DEFAULT_GOAL := help\nhelp:\n\t@grep -E '(^[a-zA-Z_-]+:.*?##.*$$)|(^##)' $(MAKEFILE_LIST) | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[32m%-30s\\033[0m %s\\n\", $$1, $$2}' | sed -e 's/\\[32m##/[33m/'\n.PHONY: help\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.0361328125,
          "content": "TOTP / HOTP library in PHP\n==========================\n\n![Build Status](https://github.com/spomky-labs/otphp/workflows/Integrate/badge.svg)\n![Build Status](https://github.com/spomky-labs/otphp/workflows/Infection/badge.svg)\n\n[![Latest Stable Version](https://poser.pugx.org/spomky-labs/otphp/v/stable.png)](https://packagist.org/packages/spomky-labs/otphp)\n[![Total Downloads](https://poser.pugx.org/spomky-labs/otphp/downloads.png)](https://packagist.org/packages/spomky-labs/otphp)\n[![Latest Unstable Version](https://poser.pugx.org/spomky-labs/otphp/v/unstable.png)](https://packagist.org/packages/spomky-labs/otphp)\n[![License](https://poser.pugx.org/spomky-labs/otphp/license.png)](https://packagist.org/packages/spomky-labs/otphp)\n\nA php library for generating one-time passwords according to [RFC 4226](https://datatracker.ietf.org/doc/html/rfc4226) (HOTP Algorithm) and [RFC 6238](https://datatracker.ietf.org/doc/html/rfc6238) (TOTP Algorithm)\n\nThis library is compatible with Google Authenticator apps available for Android and iPhone.\nIt is also compatible with other applications such as [FreeOTP](https://play.google.com/store/apps/details?id=org.fedorahosted.freeotp) for example.\n\n# Documentation\n\nThe documentation of this project is available in the [*doc* folder](doc/index.md).\n\n# Support\n\nI bring solutions to your problems and answer your questions.\n\nIf you really love that project, and the work I have done or if you want I prioritize your issues, then you can help me out for a couple of :beers: or more!\n\n[Become a sponsor](https://github.com/sponsors/Spomky)\n\nOr\n\n[![Become a Patreon](https://c5.patreon.com/external/logo/become_a_patron_button.png)](https://www.patreon.com/FlorentMorselli)\n\n## Contributing\n\nRequests for new features, bug fixed and all other ideas to make this project useful are welcome.\n\nPlease report all issues in [the repository bug tracker](hhttps://github.com/Spomky-Labs/otphp/issues).\n\nAlso make sure to [follow these best practices](.github/CONTRIBUTING.md).\n\n## Licence\n\nThis software is release under the [MIT licence](LICENSE).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 4.1396484375,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version | Supported                              |\n| ------- |----------------------------------------|\n| 11.0.x  | :white_check_mark:                     |\n| 10.0.x  | :white_check_mark: (security fix only) |\n| < 10.0  | :x:                                    |\n\n## Reporting a Vulnerability\n\nPlease email `security@spomky-labs.com`.\nIf deemed necessary, you can encrypt your message using one of the following GPG key\n\n```\n-----BEGIN PGP PUBLIC KEY BLOCK-----\nxjMEXTsJVxYJKwYBBAHaRw8BAQdAZCS93eHRx97V+LQbAWuAaeKIdUZ9YIkn\nQH5pQ7dDU0TNMWNvbnRhY3RAc3BvbWt5LWxhYnMuY29tIDxjb250YWN0QHNw\nb21reS1sYWJzLmNvbT7CdwQQFgoAHwUCXTsJVwYLCQcIAwIEFQgKAgMWAgEC\nGQECGwMCHgEACgkQG6hbCDSDj+1/tgEAoy11uHvDV7kkG/iN2/0ylV72hU8y\nc/xoqGd7qFaKD6ABANcthlg63OrQVTf0dUPOT9Y2BJpOOA88JJWgILtuUPIO\nzjgEXTsJVxIKKwYBBAGXVQEFAQEHQKiX7nldkmICePhzwReZnBPmjpsmNt7V\nY8xHdICKsr8cAwEIB8JhBBgWCAAJBQJdOwlXAhsMAAoJEBuoWwg0g4/t0KgA\n/31ucb/bL/MGpWFrpSjTs6uQhZWlBmcFoeMhwCYepIpZAQDd65UBqFDKXJWv\nXy3zoMQQzD9Z6fUATnFrWkzjHwhvDQ==\n=j4dw\n-----END PGP PUBLIC KEY BLOCK-----\n```\n\n\n```\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n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\nBUqlX5YJHneD9Q8Sfz/HKDQDCqg=\n=o+4z\n-----END PGP PUBLIC KEY BLOCK-----\n```\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.005859375,
          "content": "{\n    \"name\": \"spomky-labs/otphp\",\n    \"type\": \"library\",\n    \"description\": \"A PHP library for generating one time passwords according to RFC 4226 (HOTP Algorithm) and the RFC 6238 (TOTP Algorithm) and compatible with Google Authenticator\",\n    \"license\": \"MIT\",\n    \"keywords\": [\"otp\", \"hotp\", \"totp\", \"RFC 4226\", \"RFC 6238\", \"Google Authenticator\", \"FreeOTP\"],\n    \"homepage\": \"https://github.com/Spomky-Labs/otphp\",\n    \"authors\": [\n        {\n            \"name\": \"Florent Morselli\",\n            \"homepage\": \"https://github.com/Spomky\"\n        },\n        {\n            \"name\": \"All contributors\",\n            \"homepage\": \"https://github.com/Spomky-Labs/otphp/contributors\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=8.1\",\n        \"ext-mbstring\": \"*\",\n        \"paragonie/constant_time_encoding\": \"^2.0 || ^3.0\",\n        \"psr/clock\": \"^1.0\",\n        \"symfony/deprecation-contracts\": \"^3.2\"\n    },\n    \"require-dev\": {\n        \"ekino/phpstan-banned-code\": \"^1.0\",\n        \"infection/infection\": \"^0.26|^0.27|^0.28|^0.29\",\n        \"php-parallel-lint/php-parallel-lint\": \"^1.3\",\n        \"phpstan/phpstan\": \"^1.0\",\n        \"phpstan/phpstan-deprecation-rules\": \"^1.0\",\n        \"phpstan/phpstan-phpunit\": \"^1.0\",\n        \"phpstan/phpstan-strict-rules\": \"^1.0\",\n        \"phpunit/phpunit\": \"^9.5.26|^10.0|^11.0\",\n        \"qossmic/deptrac-shim\": \"^1.0\",\n        \"rector/rector\": \"^1.0\",\n        \"symfony/phpunit-bridge\": \"^6.1|^7.0\",\n        \"symplify/easy-coding-standard\": \"^12.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": { \"OTPHP\\\\\": \"src/\" }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": { \"OTPHP\\\\Test\\\\\": \"tests/\" }\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"phpstan/extension-installer\": true,\n            \"infection/extension-installer\": true,\n            \"composer/package-versions-deprecated\": true,\n            \"symfony/flex\": true,\n            \"symfony/runtime\": true\n        },\n        \"optimize-autoloader\": true,\n        \"preferred-install\": {\n            \"*\": \"dist\"\n        },\n        \"sort-packages\": true\n    }\n}\n"
        },
        {
          "name": "deptrac.yaml",
          "type": "blob",
          "size": 0.3125,
          "content": "parameters:\n  paths:\n    - './src'\n  layers:\n    - name: 'OTP'\n      collectors:\n        - type: 'directory'\n          regex: 'src/.*'\n    - name: 'Vendors'\n      collectors:\n        - { type: className, regex: '^ParagonIE\\\\' }\n        - { type: className, regex: '^Psr\\\\Clock\\\\' }\n  ruleset:\n    OTP:\n      - 'Vendors'\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "ecs.php",
          "type": "blob",
          "size": 4.0185546875,
          "content": "<?php\n\ndeclare(strict_types=1);\n\nuse PhpCsFixer\\Fixer\\Alias\\MbStrFunctionsFixer;\nuse PhpCsFixer\\Fixer\\ArrayNotation\\ArraySyntaxFixer;\nuse PhpCsFixer\\Fixer\\ClassNotation\\ProtectedToPrivateFixer;\nuse PhpCsFixer\\Fixer\\Comment\\HeaderCommentFixer;\nuse PhpCsFixer\\Fixer\\ConstantNotation\\NativeConstantInvocationFixer;\nuse PhpCsFixer\\Fixer\\ControlStructure\\NoSuperfluousElseifFixer;\nuse PhpCsFixer\\Fixer\\FunctionNotation\\NativeFunctionInvocationFixer;\nuse PhpCsFixer\\Fixer\\Import\\GlobalNamespaceImportFixer;\nuse PhpCsFixer\\Fixer\\Import\\OrderedImportsFixer;\nuse PhpCsFixer\\Fixer\\LanguageConstruct\\CombineConsecutiveIssetsFixer;\nuse PhpCsFixer\\Fixer\\LanguageConstruct\\CombineConsecutiveUnsetsFixer;\nuse PhpCsFixer\\Fixer\\Phpdoc\\AlignMultilineCommentFixer;\nuse PhpCsFixer\\Fixer\\Phpdoc\\NoSuperfluousPhpdocTagsFixer;\nuse PhpCsFixer\\Fixer\\Phpdoc\\PhpdocOrderFixer;\nuse PhpCsFixer\\Fixer\\Phpdoc\\PhpdocTrimConsecutiveBlankLineSeparationFixer;\nuse PhpCsFixer\\Fixer\\PhpTag\\LinebreakAfterOpeningTagFixer;\nuse PhpCsFixer\\Fixer\\PhpUnit\\PhpUnitTestAnnotationFixer;\nuse PhpCsFixer\\Fixer\\PhpUnit\\PhpUnitTestCaseStaticMethodCallsFixer;\nuse PhpCsFixer\\Fixer\\PhpUnit\\PhpUnitTestClassRequiresCoversFixer;\nuse PhpCsFixer\\Fixer\\ReturnNotation\\SimplifiedNullReturnFixer;\nuse PhpCsFixer\\Fixer\\Strict\\DeclareStrictTypesFixer;\nuse PhpCsFixer\\Fixer\\Strict\\StrictComparisonFixer;\nuse PhpCsFixer\\Fixer\\Strict\\StrictParamFixer;\nuse PhpCsFixer\\Fixer\\Whitespace\\ArrayIndentationFixer;\nuse PhpCsFixer\\Fixer\\Whitespace\\CompactNullableTypehintFixer;\nuse Symplify\\EasyCodingStandard\\Config\\ECSConfig;\nuse Symplify\\EasyCodingStandard\\ValueObject\\Set\\SetList;\n\nreturn static function (ECSConfig $config): void {\n    $config->import(SetList::PSR_12);\n    $config->import(SetList::CLEAN_CODE);\n    $config->import(SetList::DOCTRINE_ANNOTATIONS);\n    $config->import(SetList::SPACES);\n    $config->import(SetList::PHPUNIT);\n    $config->import(SetList::SYMPLIFY);\n    $config->import(SetList::ARRAY);\n    $config->import(SetList::COMMON);\n    $config->import(SetList::COMMENTS);\n    $config->import(SetList::CONTROL_STRUCTURES);\n    $config->import(SetList::DOCBLOCK);\n    $config->import(SetList::NAMESPACES);\n    $config->import(SetList::STRICT);\n\n    $config->rule(StrictParamFixer::class);\n    $config->rule(StrictComparisonFixer::class);\n    $config->rule(ArrayIndentationFixer::class);\n    $config->rule(OrderedImportsFixer::class);\n    $config->rule(ProtectedToPrivateFixer::class);\n    $config->rule(DeclareStrictTypesFixer::class);\n    $config->rule(NativeConstantInvocationFixer::class);\n    $config->rule(MbStrFunctionsFixer::class);\n    $config->rule(LinebreakAfterOpeningTagFixer::class);\n    $config->rule(CombineConsecutiveIssetsFixer::class);\n    $config->rule(CombineConsecutiveUnsetsFixer::class);\n    $config->rule(CompactNullableTypehintFixer::class);\n    $config->rule(NoSuperfluousElseifFixer::class);\n    $config->rule(NoSuperfluousPhpdocTagsFixer::class);\n    $config->rule(PhpdocTrimConsecutiveBlankLineSeparationFixer::class);\n    $config->rule(PhpdocOrderFixer::class);\n    $config->rule(SimplifiedNullReturnFixer::class);\n    $config->rule(PhpUnitTestCaseStaticMethodCallsFixer::class);\n    $config->ruleWithConfiguration(ArraySyntaxFixer::class, [\n        'syntax' => 'short',\n    ]);\n    $config->ruleWithConfiguration(NativeFunctionInvocationFixer::class, [\n        'include' => ['@compiler_optimized'],\n        'scope' => 'namespaced',\n        'strict' => true,\n    ]);\n    $config->ruleWithConfiguration(HeaderCommentFixer::class, [\n        'header' => '',\n    ]);\n    $config->ruleWithConfiguration(AlignMultilineCommentFixer::class, [\n        'comment_type' => 'all_multiline',\n    ]);\n    $config->ruleWithConfiguration(PhpUnitTestAnnotationFixer::class, [\n        'style' => 'annotation',\n    ]);\n    $config->ruleWithConfiguration(GlobalNamespaceImportFixer::class, [\n        'import_classes' => true,\n        'import_constants' => true,\n        'import_functions' => true,\n    ]);\n\n    $config->parallel();\n    $config->paths([__DIR__]);\n    $config->skip([__DIR__ . '/vendor', PhpUnitTestClassRequiresCoversFixer::class]);\n};\n"
        },
        {
          "name": "infection.json.dist",
          "type": "blob",
          "size": 0.318359375,
          "content": "{\n    \"source\": {\n        \"directories\": [\n            \"src\"\n        ]\n    },\n    \"logs\": {\n        \"text\": \"infection.log\"\n    },\n    \"mutators\": {\n        \"@default\": true,\n        \"MBString\": {\n            \"settings\": {\n                \"mb_substr\": false,\n                \"mb_strlen\": false\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 1.26953125,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Cannot cast mixed to int\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/HOTP.php\n\n\t\t-\n\t\t\tmessage: \"#^Method OTPHP\\\\\\\\OTP\\\\:\\\\:generateSecret\\\\(\\\\) should return non\\\\-empty\\\\-string but returns string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/OTP.php\n\n\t\t-\n\t\t\tmessage: \"#^Variable property access on \\\\$this\\\\(OTPHP\\\\\\\\OTP\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/OTP.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#2 \\\\$host of class OTPHP\\\\\\\\Url constructor expects non\\\\-empty\\\\-string, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Url.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#3 \\\\$path of class OTPHP\\\\\\\\Url constructor expects non\\\\-empty\\\\-string, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Url.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#4 \\\\$secret of class OTPHP\\\\\\\\Url constructor expects non\\\\-empty\\\\-string, array\\\\|string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Url.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#5 \\\\$query of class OTPHP\\\\\\\\Url constructor expects array\\\\<non\\\\-empty\\\\-string, mixed\\\\>, array\\\\<int\\\\|string, array\\\\|string\\\\> given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Url.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$dateTime of method OTPHP\\\\\\\\Test\\\\\\\\ClockMock\\\\:\\\\:setDateTime\\\\(\\\\) expects DateTimeImmutable\\\\|null, DateTimeImmutable\\\\|false given\\\\.$#\"\n\t\t\tcount: 5\n\t\t\tpath: tests/TOTPTest.php\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.4501953125,
          "content": "parameters:\n    level: max\n    paths:\n        - src\n        - tests\n\n    treatPhpDocTypesAsCertain: false\nincludes:\n    - vendor/phpstan/phpstan/conf/bleedingEdge.neon\n    - vendor/phpstan/phpstan-strict-rules/rules.neon\n    - vendor/phpstan/phpstan-phpunit/extension.neon\n    - vendor/phpstan/phpstan-deprecation-rules/rules.neon\n    - vendor/phpstan/phpstan-phpunit/rules.neon\n    - vendor/ekino/phpstan-banned-code/extension.neon\n    - phpstan-baseline.neon\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.478515625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    bootstrap=\"vendor/autoload.php\"\n    colors=\"true\"\n    xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n>\n    <testsuites>\n        <testsuite name=\"OTP Test Suite\">\n            <directory>./tests</directory>\n        </testsuite>\n    </testsuites>\n    <source>\n        <include>\n            <directory>./src</directory>\n        </include>\n    </source>\n</phpunit>\n"
        },
        {
          "name": "rector.php",
          "type": "blob",
          "size": 0.9609375,
          "content": "<?php\n\ndeclare(strict_types=1);\n\nuse Rector\\Config\\RectorConfig;\nuse Rector\\PHPUnit\\CodeQuality\\Rector\\Class_\\PreferPHPUnitThisCallRector;\nuse Rector\\PHPUnit\\Set\\PHPUnitSetList;\nuse Rector\\Set\\ValueObject\\LevelSetList;\nuse Rector\\Set\\ValueObject\\SetList;\nuse Rector\\Symfony\\Set\\SymfonySetList;\nuse Rector\\ValueObject\\PhpVersion;\n\nreturn static function (RectorConfig $config): void {\n    $config->import(SetList::DEAD_CODE);\n    $config->import(LevelSetList::UP_TO_PHP_81);\n    $config->import(SymfonySetList::SYMFONY_CODE_QUALITY);\n    $config->import(PHPUnitSetList::PHPUNIT_100);\n    $config->import(PHPUnitSetList::ANNOTATIONS_TO_ATTRIBUTES);\n    $config->import(PHPUnitSetList::PHPUNIT_CODE_QUALITY);\n    $config->parallel();\n    $config->paths([__DIR__ . '/src', __DIR__ . '/tests']);\n    $config->skip([PreferPHPUnitThisCallRector::class]);\n    $config->phpVersion(PhpVersion::PHP_81);\n    $config->parallel();\n    $config->importNames();\n    $config->importShortClasses();\n};\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}