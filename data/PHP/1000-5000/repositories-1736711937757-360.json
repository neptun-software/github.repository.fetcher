{
  "metadata": {
    "timestamp": 1736711937757,
    "page": 360,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "maxmind/GeoIP2-php",
      "stars": 2362,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3662109375,
          "content": "/.github/ export-ignore\n/bin/ export-ignore\n/dev-bin/ export-ignore\n/maxmind-db/ export-ignore\n/tests/ export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/.gitmodules export-ignore\n/.php-cs-fixer.php export-ignore\n/box.json export-ignore\n/phar-stub.php export-ignore\n/phpstan.neon export-ignore\n/phpunit.xml.dist export-ignore\n/README.dev.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2412109375,
          "content": "_site\n.gh-pages\n.idea\n.php_cs.cache\n.php-cs-fixer.cache\n.phpunit.cache/\n.phpunit.result.cache\nGeoLite2-City.mmdb\nbox.phar\nbuild\ncomposer.lock\ncomposer.phar\n/phpDocumentor.phar\nphpunit.xml\ngeoip2.phar\ngeoip2-php.sublime-*\nt.php\nvendor/\n*.sw?\n*.old\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.0869140625,
          "content": "[submodule \"maxmind-db\"]\n\tpath = maxmind-db\n\turl = https://github.com/maxmind/MaxMind-DB\n"
        },
        {
          "name": ".php-cs-fixer.php",
          "type": "blob",
          "size": 1.470703125,
          "content": "<?php\n\n$config = new PhpCsFixer\\Config();\n\nreturn $config\n    ->setRiskyAllowed(true)\n    ->setRules([\n        '@Symfony' => true,\n        '@Symfony:risky' => true,\n        '@PhpCsFixer' => true,\n        '@PSR1' => true,\n        '@PSR2' => true,\n        '@PSR12' => true,\n        '@PSR12:risky' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'combine_consecutive_unsets' => true,\n        'concat_space' => [ 'spacing' => 'one'],\n        'explicit_string_variable' => false,\n        'fopen_flags' => ['b_mode' => true],\n        'heredoc_to_nowdoc' => true,\n        'increment_style' => false,\n        'list_syntax' => ['syntax' => 'short'],\n        'multiline_whitespace_before_semicolons' => false,\n        'no_unreachable_default_argument_value' => true,\n        'no_useless_else' => true,\n        'no_useless_return' => true,\n        'ordered_imports' => true,\n        'php_unit_strict' => true,\n        'php_unit_test_class_requires_covers' => true,\n        'phpdoc_add_missing_param_annotation' => true,\n        'phpdoc_no_alias_tag' => false,\n        'phpdoc_order' => true,\n        'phpdoc_types_order' => ['sort_algorithm' => 'alpha', 'null_adjustment' => 'always_last'],\n        'semicolon_after_instruction' => true,\n        'single_line_throw' => false,\n        'strict_comparison' => true,\n        'strict_param' => true,\n        'yoda_style' => false,\n    ])\n    ->setFinder(\n        PhpCsFixer\\Finder::create()\n            ->exclude('ext')\n            ->in(__DIR__)\n    )\n;\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 11.8779296875,
          "content": "CHANGELOG\n=========\n\n3.1.0 (2024-11-15)\n------------------\n\n* This library no longer uses implicitly nullable parameter types. This\n  will fix deprecation warning in PHP 8.4. Reported by Steven Lewis.\n  GitHub #230.\n* The PHPDoc type hints have been improved for use with PHPStan.\n\n3.0.0 (2023-12-04)\n------------------\n\n* IMPORTANT: PHP 8.1 or greater is now required.\n* BREAKING: Read-only properties are now used for the model and record\n  classes rather than magic methods. This significantly improves performance.\n* BREAKING: The `raw` property on model classess and the `record` property on\n  record classes have been removed.\n* BREAKING: On `GeoIp2\\Record\\Traits`, the deprecated `isAnonymousProxy` and\n  `isSatelliteProvider` properties have been removed.\n* BREAKING: The `jsonSerialize` output has changed.\n* `GeoIp2\\WebService\\Client` methods now throw an `InvalidArgumentException`\n  if an invalid IP address is passed to them. Previously, they would make\n  a request to the web service and throw a\n  `GeoIp2\\Exception\\InvalidRequestException`.\n* The `isAnycast` property was added to `GeoIp2\\Record\\Traits`. This returns\n  `true` if the IP address belongs to an [anycast\n  network](https://en.wikipedia.org/wiki/Anycast). This is available for the\n  GeoIP2 Country, City Plus, and Insights web services and the GeoIP2 Country,\n  City, and Enterprise databases.\n\n2.13.0 (2022-08-05)\n-------------------\n\n* The model class names are no longer constructed by concatenating strings.\n  This change was made to improve support for tools like PHP-Scoper.\n  Reported by Andrew Mead. GitHub #194.\n* Box 4.0.1 is now used to generate the `geoip2.phar` file.\n\n2.12.2 (2021-11-30)\n-------------------\n\n* The `geoip2.phar` now works when included from another directory.\n  Reported by Eduardo Ruiz. GitHub #179.\n\n2.12.1 (2021-11-23)\n-------------------\n\n* The `geoip2.phar` included in 2.12.0 would only work in CLI applications.\n  This was due to a change in Box 3.x. The Phar should now work in all\n  applications. This release only affects users of the Phar file.\n\n2.12.0 (2021-11-18)\n-------------------\n\n* Support for mobile country code (MCC) and mobile network codes (MNC) was\n  added for the GeoIP2 ISP and Enterprise databases as well as the GeoIP2\n  City and Insights web services. `$mobileCountryCode` and\n  `$mobileNetworkCode` properties were added to `GeoIp2\\Model\\Isp`\n  for the GeoIP2 ISP database and `GeoIp2\\Record\\Traits` for the Enterprise\n  database and the GeoIP2 City and Insights web services. We expect this data\n  to be available by late January, 2022.\n* `geoip2.phar` is now generated with Box 3.x.\n\n2.11.0 (2020-10-01)\n-------------------\n\n* IMPORTANT: PHP 7.2 or greater is now required.\n* Added the `isResidentialProxy` property to `GeoIp2\\Model\\AnonymousIP` and\n  `GeoIp2\\Record\\Traits`.\n* Additional type hints have been added.\n\n2.10.0 (2019-12-12)\n-------------------\n\n* PHP 5.6 or greater is now required.\n* The `network` property was added to `GeoIp2\\Record\\Traits`,\n  `GeoIp2\\Model\\AnonymousIp`, `GeoIp2\\Model\\Asn`,\n  `GeoIp2\\Model\\ConnectionType`, `Geoip2\\Model\\Domain`,\n  and `GeoIp2\\Model\\Isp`. This is a string in CIDR format representing the\n  largest network where all of the properties besides `ipAddress` have the\n  same value.\n* Updated documentation of anonymizer properties - `isAnonymousVpn`\n  and `isHostingProvider` - to be more descriptive.\n* The `userCount` property was added to `GeoIp2\\Record\\Traits`. This is an\n  integer which indicates the estimated number of users sharing the\n  IP/network during the past 24 hours. This output is available from GeoIP2\n  Precision Insights.\n* The `staticIpScore` property was added to `GeoIp2\\Record\\Traits`. This is\n  a float which indicates how static or dynamic an IP address is. This\n  output is available from GeoIP2 Precision Insights.\n\n2.9.0 (2018-04-10)\n------------------\n\n* Refer to account IDs using the terminology \"account\" rather than \"user\".\n\n2.8.0 (2018-01-18)\n------------------\n\n* The `isInEuropeanUnion` property was added to `GeoIp2\\Record\\Country`\n  and `GeoIp2\\Record\\RepresentedCountry`. This property is `true` if the\n  country is a member state of the European Union.\n\n2.7.0 (2017-10-27)\n------------------\n\n* The following new anonymizer properties were added to `GeoIp2\\Record\\Traits`\n  for use with GeoIP2 Precision Insights: `isAnonymous`, `isAnonymousVpn`,\n  `isHostingProvider`, `isPublicProxy`, and `isTorExitNode`.\n\n2.6.0 (2017-07-10)\n-----------------\n\n* Code clean-up and tidying.\n* Set minimum required PHP version to 5.4 in `composer.json`. Previously,\n  5.3 would work but was not tested. Now 5.4 is hard minimum version.\n\n2.5.0 (2017-05-08)\n------------------\n\n* Support for PHP 5.3 was dropped.\n* Added support for GeoLite2 ASN database.\n\n2.4.5 (2017-01-31)\n------------------\n\n* Additional error checking on the data returned from `MaxMind\\Db\\Reader`\n  was added to help detect corrupt databases. GitHub #83.\n\n2.4.4 (2016-10-11)\n------------------\n\n* `isset()` on `mostSpecificSubdivision` attribute now returns the\n  correct value. Reported by Juan Francisco Giordana. GitHub #81.\n\n2.4.3 (2016-10-11)\n------------------\n\n* `isset()` on `name` attribute now returns the correct value. Reported by\n  Juan Francisco Giordana. GitHub #79.\n\n2.4.2 (2016-08-17)\n------------------\n\n* Updated documentation to clarify what the accuracy radius refers to.\n* Upgraded `maxmind/web-service-common` to 0.3.0. This version uses\n  `composer/ca-bundle` rather than our own CA bundle. GitHub #75.\n* Improved PHP documentation generation.\n\n2.4.1 (2016-06-10)\n------------------\n\n* Corrected type annotations in documentation. GitHub #66.\n* Updated documentation to reflect that the accuracy radius is now included\n  in City.\n* Upgraded web service client, which supports setting a proxy. GitHub #59.\n\n2.4.0 (2016-04-15)\n------------------\n\n* Added support for the GeoIP2 Enterprise database.\n\n2.3.3 (2015-09-24)\n------------------\n\n* Corrected case on `JsonSerializable` interface. Reported by Axel Etcheverry.\n  GitHub #56.\n\n2.3.2 (2015-09-23)\n------------------\n\n* `JsonSerializable` compatibility interface was moved to `GeoIp2\\Compat`\n  rather than the global namespace to prevent autoloading issues. Reported by\n  Tomas Buteler. GitHub #54.\n* Missing documentation for the `$postal` property was added to the\n  `GeoIp2\\Model\\City` class. Fix by Roy Sindre Norangshol. GitHub #51.\n* In the Phar distribution, source files for this module no longer have their\n  documentation stripped, allowing IDE introspection to work properly.\n  Reported by Dominic Black. GitHub #52.\n\n2.3.1 (2015-06-30)\n------------------\n\n* Updated `maxmind/web-service-common` to version with fixes for PHP 5.3 and\n  5.4.\n\n2.3.0 (2015-06-29)\n------------------\n\n* Support for demographics fields `averageIncome` and `populationDensity` in\n  the `Location` record, returned by the Insights endpoint.\n* The `isAnonymousProxy` and `isSatelliteProvider` properties on\n  `GeoIP2\\Record\\Traits` have been deprecated. Please use our [GeoIP2\n  Anonymous IP database](https://www.maxmind.com/en/geoip2-anonymous-ip-database)\n  to determine whether an IP address is used by an anonymizing service.\n\n2.2.0-beta1 (2015-06-09)\n------------------------\n\n* Typo fix in documentation.\n\n2.2.0-alpha2 (2015-06-01)\n-------------------------\n\n* `maxmind-ws/web-service-common` was renamed to `maxmind/web-service-common`.\n\n2.2.0-alpha1 (2015-05-22)\n-------------------------\n\n* The library no longer uses Guzzle and instead uses curl directly.\n* Support for `timeout` and `connectTimout` were added to the `$options` array\n  passed to the `GeoIp2\\WebService\\Client` constructor. Pull request by Will\n  Bradley. GitHub #36.\n\n2.1.1 (2014-12-03)\n------------------\n\n* The 2.1.0 Phar builds included a shebang line, causing issues when loading\n  it as a library. This has been corrected. GitHub #33.\n\n2.1.0 (2014-10-29)\n------------------\n\n* Update ApiGen dependency to version that isn't broken on case sensitive\n  file systems.\n* Added support for the GeoIP2 Anonymous IP database. The\n  `GeoIP2\\Database\\Reader` class now has an `anonymousIp` method which returns\n  a `GeoIP2\\Model\\AnonymousIp` object.\n* Boolean attributes like those in the `GeoIP2\\Record\\Traits` class now return\n `false` instead of `null` when they were not true.\n\n2.0.0 (2014-09-22)\n------------------\n\n* First production release.\n\n0.9.0 (2014-09-15)\n------------------\n\n* IMPORTANT: The deprecated `omni()` and `cityIspOrg()` methods have been\n  removed from `GeoIp2\\WebService\\Client`.\n\n0.8.1 (2014-09-12)\n------------------\n\n* The check added to the `GeoIP2\\Database\\Reader` lookup methods in 0.8.0 did\n  not work with the GeoIP2 City Database Subset by Continent with World\n  Countries. This has been fixed. Fixes GitHub issue #23.\n\n0.8.0 (2014-09-10)\n------------------\n\n* The `GeoIp2\\Database\\Reader` lookup methods (e.g., `city()`, `isp()`) now\n  throw a `BadMethodCallException` if they are used with a database that\n  does not match the method. In particular, doing a `city()` lookup on a\n  GeoIP2 Country database will result in an exception, and vice versa.\n* A `metadata()` method has been added to the `GeoIP2\\Database\\Reader` class.\n  This returns a `MaxMind\\Db\\Reader\\Metadata` class with information about the\n  database.\n* The name attribute was missing from the RepresentedCountry class.\n\n0.7.0 (2014-07-22)\n------------------\n\n* The web service client API has been updated for the v2.1 release of the web\n  service. In particular, the `cityIspOrg` and `omni` methods on\n  `GeoIp2\\WebService\\Client` should be considered deprecated. The `city`\n  method now provides all of the data formerly provided by `cityIspOrg`, and\n  the `omni` method has been replaced by the `insights` method.\n* Support was added for GeoIP2 Connection Type, Domain and ISP databases.\n\n\n0.6.3 (2014-05-12)\n------------------\n\n* With the previous Phar builds, some users received `phar error: invalid url\n  or non-existent phar` errors. The correct alias is now used for the Phar,\n  and this should no longer be an issue.\n\n0.6.2 (2014-05-08)\n------------------\n\n* The Phar build was broken with Guzzle 3.9.0+. This has been fixed.\n\n0.6.1 (2014-05-01)\n------------------\n\n* This API now officially supports HHVM.\n* The `maxmind-db/reader` dependency was updated to a version that does not\n  require BC Math.\n* The Composer compatibility autoload rules are now targeted more narrowly.\n* A `box.json` file is included to build a Phar package.\n\n0.6.0 (2014-02-19)\n------------------\n\n* This API is now licensed under the Apache License, Version 2.0.\n* Model and record classes now implement `JsonSerializable`.\n* `isset` now works with model and record classes.\n\n0.5.0 (2013-10-21)\n------------------\n\n* Renamed $languages constructor parameters to $locales for both the Client\n  and Reader classes.\n* Documentation and code clean-up (Ben Morel).\n* Added the interface `GeoIp2\\ProviderInterface`, which is implemented by both\n  `\\GeoIp2\\Database\\Reader` and `\\GeoIp2\\WebService\\Client`.\n\n0.4.0 (2013-07-16)\n------------------\n\n* This is the first release with the GeoIP2 database reader. Please see the\n  `README.md` file and the `\\GeoIp2\\Database\\Reader` class.\n* The general exception classes were replaced with specific exception classes\n  representing particular types of errors, such as an authentication error.\n\n0.3.0 (2013-07-12)\n------------------\n\n* In namespaces and class names, \"GeoIP2\" was renamed to \"GeoIp2\" to improve\n  consistency.\n\n0.2.1 (2013-06-10)\n------------------\n\n* First official beta release.\n* Documentation updates and corrections.\n\n0.2.0 (2013-05-29)\n------------------\n\n* `GenericException` was renamed to `GeoIP2Exception`.\n* We now support more languages. The new languages are de, es, fr, and pt-BR.\n* The REST API now returns a record with data about your account. There is\n  a new `GeoIP\\Records\\MaxMind` class for this data.\n* The `continentCode` attribute on `Continent` was renamed to `code`.\n* Documentation updates.\n\n0.1.1 (2013-05-14)\n------------------\n\n* Updated Guzzle version requirement.\n* Fixed Composer example in README.md.\n\n\n0.1.0 (2013-05-13)\n------------------\n\n* Initial release.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.dev.md",
          "type": "blob",
          "size": 0.650390625,
          "content": "Steps for releasing:\n\n1. Review open issues and PRs to see if any can easily be fixed, closed, or\n   merged.\n2. Bump copyright year in `README.md`, if necessary.\n3. Review `CHANGELOG.md` for completeness and correctness. Update its release\n   date.\n4. Install or update [gh](https://github.com/cli/cli) as it used by the\n   release script.\n5. Run `./dev-bin/release.sh`. This will build the phar, generate the docs,\n   tag the release, push it to origin, and update the GH releases with the\n   release notes and Phar.\n6. Verify the release on [GitHub](https://github.com/maxmind/GeoIP2-php/releases)\n   and [Packagist](https://packagist.org/packages/geoip2/geoip2).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.39453125,
          "content": "# GeoIP2 PHP API #\n\n## Description ##\n\nThis package provides an API for the GeoIP2 and GeoLite2\n[web services](https://dev.maxmind.com/geoip/docs/web-services?lang=en) and\n[databases](https://dev.maxmind.com/geoip/docs/databases?lang=en).\n\n## Install via Composer ##\n\nWe recommend installing this package with [Composer](https://getcomposer.org/).\n\n### Download Composer ###\n\nTo download Composer, run in the root directory of your project:\n\n```bash\ncurl -sS https://getcomposer.org/installer | php\n```\n\nYou should now have the file `composer.phar` in your project directory.\n\n### Install Dependencies ###\n\nRun in your project root:\n\n```sh\nphp composer.phar require geoip2/geoip2:~2.0\n```\n\nYou should now have the files `composer.json` and `composer.lock` as well as\nthe directory `vendor` in your project directory. If you use a version control\nsystem, `composer.json` should be added to it.\n\n### Require Autoloader ###\n\nAfter installing the dependencies, you need to require the Composer autoloader\nfrom your code:\n\n```php\nrequire 'vendor/autoload.php';\n```\n\n## Install via Phar ##\n\nAlthough we strongly recommend using Composer, we also provide a\n[phar archive](https://php.net/manual/en/book.phar.php) containing most of the\ndependencies for GeoIP2. Our latest phar archive is available on\n[our releases page](https://github.com/maxmind/GeoIP2-php/releases).\n\n### Install Dependencies ###\n\nIn order to use the phar archive, you must have the PHP\n[Phar extension](https://php.net/manual/en/book.phar.php) installed and\nenabled.\n\nIf you will be making web service requests, you must have the PHP\n[cURL extension](https://php.net/manual/en/book.curl.php)\ninstalled to use this archive. For Debian based distributions, this can\ntypically be found in the the `php-curl` package. For other operating\nsystems, please consult the relevant documentation. After installing the\nextension you may need to restart your web server.\n\nIf you are missing this extension, you will see errors like the following:\n\n```\nPHP Fatal error:  Uncaught Error: Call to undefined function MaxMind\\WebService\\curl_version()\n```\n\n### Require Package ###\n\nTo use the archive, just require it from your script:\n\n```php\nrequire 'geoip2.phar';\n```\n\n## Optional C Extension ##\n\nThe [MaxMind DB API](https://github.com/maxmind/MaxMind-DB-Reader-php)\nincludes an optional C extension that you may install to dramatically increase\nthe performance of lookups in GeoIP2 or GeoLite2 databases. To install, please\nfollow the instructions included with that API.\n\nThe extension has no effect on web-service lookups.\n\n## IP Geolocation Usage ##\n\nIP geolocation is inherently imprecise. Locations are often near the center of\nthe population. Any location provided by a GeoIP2 database or web service\nshould not be used to identify a particular address or household.\n\n## Database Reader ##\n\n### Usage ###\n\nTo use this API, you must create a new `\\GeoIp2\\Database\\Reader` object with\nthe path to the database file as the first argument to the constructor. You\nmay then call the method corresponding to the database you are using.\n\nIf the lookup succeeds, the method call will return a model class for the\nrecord in the database. This model in turn contains multiple container\nclasses for the different parts of the data such as the city in which the\nIP address is located.\n\nIf the record is not found, a `\\GeoIp2\\Exception\\AddressNotFoundException`\nis thrown. If the database is invalid or corrupt, a\n`\\MaxMind\\Db\\InvalidDatabaseException` will be thrown.\n\nSee the [API documentation](https://maxmind.github.io/GeoIP2-php/) for more\ndetails.\n\n### City Example ###\n\n```php\n<?php\nrequire_once 'vendor/autoload.php';\nuse GeoIp2\\Database\\Reader;\n\n// This creates the Reader object, which should be reused across\n// lookups.\n$cityDbReader = new Reader('/usr/local/share/GeoIP/GeoIP2-City.mmdb');\n\n// Replace \"city\" with the appropriate method for your database, e.g.,\n// \"country\".\n$record = $cityDbReader->city('128.101.101.101');\n\nprint($record->country->isoCode . \"\\n\"); // 'US'\nprint($record->country->name . \"\\n\"); // 'United States'\nprint($record->country->names['zh-CN'] . \"\\n\"); // '美国'\n\nprint($record->mostSpecificSubdivision->name . \"\\n\"); // 'Minnesota'\nprint($record->mostSpecificSubdivision->isoCode . \"\\n\"); // 'MN'\n\nprint($record->city->name . \"\\n\"); // 'Minneapolis'\n\nprint($record->postal->code . \"\\n\"); // '55455'\n\nprint($record->location->latitude . \"\\n\"); // 44.9733\nprint($record->location->longitude . \"\\n\"); // -93.2323\n\nprint($record->traits->network . \"\\n\"); // '128.101.101.101/32'\n\n```\n\n### Anonymous IP Example ###\n\n```php\n<?php\nrequire_once 'vendor/autoload.php';\nuse GeoIp2\\Database\\Reader;\n\n// This creates the Reader object, which should be reused across\n// lookups.\n$anonymousDbReader = new Reader('/usr/local/share/GeoIP/GeoIP2-Anonymous-IP.mmdb');\n\n$record = $anonymousDbReader->anonymousIp('128.101.101.101');\n\nif ($record->isAnonymous) { print \"anon\\n\"; }\nprint($record->ipAddress . \"\\n\"); // '128.101.101.101'\nprint($record->network . \"\\n\"); // '128.101.101.101/32'\n\n```\n\n### Connection-Type Example ###\n\n```php\n<?php\nrequire_once 'vendor/autoload.php';\nuse GeoIp2\\Database\\Reader;\n\n// This creates the Reader object, which should be reused across\n// lookups.\n$connectionTypeDbReader = new Reader('/usr/local/share/GeoIP/GeoIP2-Connection-Type.mmdb');\n\n$record = $connectionTypeDbReader->connectionType('128.101.101.101');\n\nprint($record->connectionType . \"\\n\"); // 'Corporate'\nprint($record->ipAddress . \"\\n\"); // '128.101.101.101'\nprint($record->network . \"\\n\"); // '128.101.101.101/32'\n\n```\n\n### Domain Example ###\n\n```php\n<?php\nrequire_once 'vendor/autoload.php';\nuse GeoIp2\\Database\\Reader;\n\n// This creates the Reader object, which should be reused across\n// lookups.\n$domainDbReader = new Reader('/usr/local/share/GeoIP/GeoIP2-Domain.mmdb');\n\n$record = $domainDbReader->domain('128.101.101.101');\n\nprint($record->domain . \"\\n\"); // 'umn.edu'\nprint($record->ipAddress . \"\\n\"); // '128.101.101.101'\nprint($record->network . \"\\n\"); // '128.101.101.101/32'\n\n```\n\n### Enterprise Example ###\n\n```php\n<?php\nrequire_once 'vendor/autoload.php';\nuse GeoIp2\\Database\\Reader;\n\n// This creates the Reader object, which should be reused across\n// lookups.\n$enterpriseDbReader = new Reader('/usr/local/share/GeoIP/GeoIP2-Enterprise.mmdb');\n\n// Use the ->enterprise method to do a lookup in the Enterprise database\n$record = $enterpriseDbReader->enterprise('128.101.101.101');\n\nprint($record->country->confidence . \"\\n\"); // 99\nprint($record->country->isoCode . \"\\n\"); // 'US'\nprint($record->country->name . \"\\n\"); // 'United States'\nprint($record->country->names['zh-CN'] . \"\\n\"); // '美国'\n\nprint($record->mostSpecificSubdivision->confidence . \"\\n\"); // 77\nprint($record->mostSpecificSubdivision->name . \"\\n\"); // 'Minnesota'\nprint($record->mostSpecificSubdivision->isoCode . \"\\n\"); // 'MN'\n\nprint($record->city->confidence . \"\\n\"); // 60\nprint($record->city->name . \"\\n\"); // 'Minneapolis'\n\nprint($record->postal->code . \"\\n\"); // '55455'\n\nprint($record->location->accuracyRadius . \"\\n\"); // 50\nprint($record->location->latitude . \"\\n\"); // 44.9733\nprint($record->location->longitude . \"\\n\"); // -93.2323\n\nprint($record->traits->network . \"\\n\"); // '128.101.101.101/32'\n\n```\n\n### ISP Example ###\n\n```php\n<?php\nrequire_once 'vendor/autoload.php';\nuse GeoIp2\\Database\\Reader;\n\n// This creates the Reader object, which should be reused across\n// lookups.\n$ispDbReader = new Reader('/usr/local/share/GeoIP/GeoIP2-ISP.mmdb');\n\n$record = $ispDbReader->isp('128.101.101.101');\n\nprint($record->autonomousSystemNumber . \"\\n\"); // 217\nprint($record->autonomousSystemOrganization . \"\\n\"); // 'University of Minnesota'\nprint($record->isp . \"\\n\"); // 'University of Minnesota'\nprint($record->organization . \"\\n\"); // 'University of Minnesota'\n\nprint($record->ipAddress . \"\\n\"); // '128.101.101.101'\nprint($record->network . \"\\n\"); // '128.101.101.101/32'\n\n```\n\n## Database Updates ##\n\nYou can keep your databases up to date with our\n[GeoIP Update program](https://github.com/maxmind/geoipupdate/releases).\n[Learn more about GeoIP Update on our developer\nportal.](https://dev.maxmind.com/geoip/updating-databases?lang=en)\n\n## Web Service Client ##\n\n### Usage ###\n\nTo use this API, you must create a new `\\GeoIp2\\WebService\\Client`\nobject with your `$accountId` and `$licenseKey`:\n\n```php\n$client = new Client(42, 'abcdef123456');\n```\n\nYou may also call the constructor with additional arguments. The third argument\nspecifies the language preferences when using the `->name` method on the model\nclasses that this client creates. The fourth argument is additional options\nsuch as `host` and `timeout`.\n\nFor instance, to call the GeoLite2 web service instead of the GeoIP2 web\nservice:\n\n```php\n$client = new Client(42, 'abcdef123456', ['en'], ['host' => 'geolite.info']);\n```\n\nTo call the Sandbox GeoIP2 web service instead of the production GeoIP2 web\nservice:\n\n```php\n$client = new Client(42, 'abcdef123456', ['en'], ['host' => 'sandbox.maxmind.com']);\n```\n\nAfter creating the client, you may now call the method corresponding to a\nspecific endpoint with the IP address to look up, e.g.:\n\n```php\n$record = $client->city('128.101.101.101');\n```\n\nIf the request succeeds, the method call will return a model class for the\nendpoint you called. This model in turn contains multiple record classes, each\nof which represents part of the data returned by the web service.\n\nIf there is an error, a structured exception is thrown.\n\nSee the [API documentation](https://maxmind.github.io/GeoIP2-php/) for more\ndetails.\n\n### Example ###\n\n```php\n<?php\nrequire_once 'vendor/autoload.php';\nuse GeoIp2\\WebService\\Client;\n\n// This creates a Client object that can be reused across requests.\n// Replace \"42\" with your account ID and \"license_key\" with your license\n// key. Set the \"host\" to \"geolite.info\" in the fourth argument options\n// array to use the GeoLite2 web service instead of the GeoIP2 web\n// service. Set the \"host\" to \"sandbox.maxmind.com\" in the fourth argument\n// options array to use the Sandbox GeoIP2 web service instead of the\n// production GeoIP2 web service.\n$client = new Client(42, 'abcdef123456');\n\n// Replace \"city\" with the method corresponding to the web service that\n// you are using, e.g., \"country\", \"insights\".\n$record = $client->city('128.101.101.101');\n\nprint($record->country->isoCode . \"\\n\"); // 'US'\nprint($record->country->name . \"\\n\"); // 'United States'\nprint($record->country->names['zh-CN'] . \"\\n\"); // '美国'\n\nprint($record->mostSpecificSubdivision->name . \"\\n\"); // 'Minnesota'\nprint($record->mostSpecificSubdivision->isoCode . \"\\n\"); // 'MN'\n\nprint($record->city->name . \"\\n\"); // 'Minneapolis'\n\nprint($record->postal->code . \"\\n\"); // '55455'\n\nprint($record->location->latitude . \"\\n\"); // 44.9733\nprint($record->location->longitude . \"\\n\"); // -93.2323\n\nprint($record->traits->network . \"\\n\"); // '128.101.101.101/32'\n\n```\n\n## Values to use for Database or Array Keys ##\n\n**We strongly discourage you from using a value from any `names` property as\na key in a database or array.**\n\nThese names may change between releases. Instead we recommend using one of the\nfollowing:\n\n* `GeoIp2\\Record\\City` - `$city->geonameId`\n* `GeoIp2\\Record\\Continent` - `$continent->code` or `$continent->geonameId`\n* `GeoIp2\\Record\\Country` and `GeoIp2\\Record\\RepresentedCountry` -\n  `$country->isoCode` or `$country->geonameId`\n* `GeoIp2\\Record\\Subdivision` - `$subdivision->isoCode` or `$subdivision->geonameId`\n\n### What data is returned? ###\n\nWhile many of the end points return the same basic records, the attributes\nwhich can be populated vary between end points. In addition, while an end\npoint may offer a particular piece of data, MaxMind does not always have every\npiece of data for any given IP address.\n\nBecause of these factors, it is possible for any end point to return a record\nwhere some or all of the attributes are unpopulated.\n\nSee the\n[GeoIP2 web service docs](https://dev.maxmind.com/geoip/docs/web-services?lang=en)\nfor details on what data each end point may return.\n\nThe only piece of data which is always returned is the `ipAddress`\nattribute in the `GeoIp2\\Record\\Traits` record.\n\n## Integration with GeoNames ##\n\n[GeoNames](https://www.geonames.org/) offers web services and downloadable\ndatabases with data on geographical features around the world, including\npopulated places. They offer both free and paid premium data. Each\nfeature is unique identified by a `geonameId`, which is an integer.\n\nMany of the records returned by the GeoIP2 web services and databases\ninclude a `geonameId` property. This is the ID of a geographical feature\n(city, region, country, etc.) in the GeoNames database.\n\nSome of the data that MaxMind provides is also sourced from GeoNames. We\nsource things like place names, ISO codes, and other similar data from\nthe GeoNames premium data set.\n\n## Reporting data problems ##\n\nIf the problem you find is that an IP address is incorrectly mapped,\nplease\n[submit your correction to MaxMind](https://www.maxmind.com/en/correction).\n\nIf you find some other sort of mistake, like an incorrect spelling,\nplease check the [GeoNames site](https://www.geonames.org/) first. Once\nyou've searched for a place and found it on the GeoNames map view, there\nare a number of links you can use to correct data (\"move\", \"edit\",\n\"alternate names\", etc.). Once the correction is part of the GeoNames\ndata set, it will be automatically incorporated into future MaxMind\nreleases.\n\nIf you are a paying MaxMind customer and you're not sure where to submit\na correction, please\n[contact MaxMind support](https://www.maxmind.com/en/support) for help.\n\n## Other Support ##\n\nPlease report all issues with this code using the\n[GitHub issue tracker](https://github.com/maxmind/GeoIP2-php/issues).\n\nIf you are having an issue with a MaxMind service that is not specific\nto the client API, please see\n[our support page](https://www.maxmind.com/en/support).\n\n## Requirements  ##\n\nThis library requires PHP 8.1 or greater.\n\nThis library also relies on the [MaxMind DB Reader](https://github.com/maxmind/MaxMind-DB-Reader-php).\n\n## Contributing ##\n\nPatches and pull requests are encouraged. All code should follow the PSR-2\nstyle guidelines. Please include unit tests whenever possible. You may obtain\nthe test data for the maxmind-db folder by running `git submodule update\n--init --recursive` or adding `--recursive` to your initial clone, or from\nhttps://github.com/maxmind/MaxMind-DB\n\n## Versioning ##\n\nThe GeoIP2 PHP API uses [Semantic Versioning](https://semver.org/).\n\n## Copyright and License ##\n\nThis software is Copyright (c) 2013-2024 by MaxMind, Inc.\n\nThis is free software, licensed under the Apache License, Version 2.0.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "box.json",
          "type": "blob",
          "size": 0.791015625,
          "content": "{\n    \"stub\": \"phar-stub.php\",\n    \"main\": false,\n    \"output\": \"geoip2.phar\",\n    \"compactors\": [\n        \"KevinGH\\\\Box\\\\Compactor\\\\Php\",\n        \"KevinGH\\\\Box\\\\Compactor\\\\Json\"\n    ],\n    \"files\": [\n        \"LICENSE\"\n    ],\n    \"finder\": [\n        {\n            \"name\": [\n                \"LICENSE\",\n                \"LICENSE.*\",\n                \"*.php\",\n                \"*.pem\",\n                \"*.pem.md5\"\n            ],\n            \"exclude\": [\n                \"phpunit\",\n                \"satooshi\",\n                \"Tests\",\n                \"tests\",\n                \"yaml\"\n            ],\n            \"in\": \"vendor\"\n            }\n    ],\n    \"finder-bin\": [\n        {\n            \"name\": [\n                \"*.php\"\n            ],\n            \"in\": \"src\"\n            }\n    ],\n    \"git-version\": \"git-version\"\n}\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.8447265625,
          "content": "{\n    \"name\": \"geoip2/geoip2\",\n    \"description\": \"MaxMind GeoIP2 PHP API\",\n    \"keywords\": [\"geoip\", \"geoip2\", \"geolocation\", \"ip\", \"maxmind\"],\n    \"homepage\": \"https://github.com/maxmind/GeoIP2-php\",\n    \"type\": \"library\",\n    \"license\": \"Apache-2.0\",\n    \"authors\": [\n        {\n            \"name\": \"Gregory J. Oschwald\",\n            \"email\": \"goschwald@maxmind.com\",\n            \"homepage\": \"https://www.maxmind.com/\"\n        }\n    ],\n    \"require\": {\n        \"maxmind-db/reader\": \"^1.12.0\",\n        \"maxmind/web-service-common\": \"~0.10\",\n        \"php\": \">=8.1\",\n        \"ext-json\": \"*\"\n    },\n    \"require-dev\": {\n        \"friendsofphp/php-cs-fixer\": \"3.*\",\n        \"phpunit/phpunit\": \"^10.0\",\n        \"squizlabs/php_codesniffer\": \"3.*\",\n        \"phpstan/phpstan\": \"*\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"GeoIp2\\\\\": \"src\"\n        }\n    }\n}\n"
        },
        {
          "name": "dev-bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "maxmind-db",
          "type": "commit",
          "content": null
        },
        {
          "name": "phar-stub.php",
          "type": "blob",
          "size": 0.0849609375,
          "content": "<?php\n\nrequire_once 'phar://' . __FILE__ . '/vendor/autoload.php';\n\n__HALT_COMPILER();\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.064453125,
          "content": "parameters:\n    level: 6\n    paths:\n        - src\n        - tests\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.416015625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" bootstrap=\"./vendor/autoload.php\" colors=\"true\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.4/phpunit.xsd\" cacheDirectory=\".phpunit.cache\">\n  <testsuites>\n    <testsuite name=\"GeoIP2 Test Suite\">\n      <directory suffix=\"Test.php\">./tests/GeoIp2/Test/</directory>\n    </testsuite>\n  </testsuites>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}