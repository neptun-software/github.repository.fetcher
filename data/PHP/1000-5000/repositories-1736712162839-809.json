{
  "metadata": {
    "timestamp": 1736712162839,
    "page": 809,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wintercms/winter",
      "stars": 1390,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2763671875,
          "content": "# EditorConfig is awesome: https://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n[*]\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\n\n[**/.github/workflows/**.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".env.example",
          "type": "blob",
          "size": 0.6708984375,
          "content": "APP_NAME=\"Winter CMS\"\nAPP_KEY=\nAPP_DEBUG=true\nAPP_URL=http://localhost\nAPP_LOCALE=en\n\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=database\nDB_USERNAME=root\nDB_PASSWORD=\n\nCACHE_DRIVER=file\n\nSESSION_DRIVER=file\n\nREDIS_HOST=127.0.0.1\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n\nQUEUE_CONNECTION=sync\n\nMAIL_MAILER=log\nMAIL_LOG_CHANNEL=null\nMAIL_HOST=null\nMAIL_PORT=null\nMAIL_USERNAME=null\nMAIL_PASSWORD=null\nMAIL_ENCRYPTION=null\nMAIL_FROM_ADDRESS=noreply@example.com\nMAIL_FROM_NAME=\"${APP_NAME}\"\n\nROUTES_CACHE=false\nASSET_CACHE=false\nLINK_POLICY=detect\nENABLE_CSRF=true\nDATABASE_TEMPLATES=false\n\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\nAWS_DEFAULT_REGION=us-east-1\nAWS_BUCKET=\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1796875,
          "content": "* text=auto\n\n*.md diff=markdown\n*.php diff=php\n\n/.devcontainer export-ignore\n/.github export-ignore\n.gitattributes export-ignore\nCHANGELOG.md export-ignore\n/package.json export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.49609375,
          "content": "# Composer ignores\n/vendor\ncomposer.phar\ncomposer.lock\n\n# Framework ignores\n.env\n.env.*.php\n.env.php\nselenium.php\n/bootstrap/compiled.php\n.phpunit.result.cache\n\n# Hosting ignores\nphp_errors.log\nnginx-error.log\nnginx-access.log\nnginx-ssl.access.log\nnginx-ssl.error.log\nsftp-config.json\n.ftpconfig\n\n# Editor ignores\nnbproject\n.idea\n.vscode\n!.devcontainer/.vscode\n_ide_helper.php\n\n# Other ignores\n.DS_Store\npackage-lock.json\n/node_modules\n\n# Ignore generated public directory from `winter:mirror public`\npublic\n"
        },
        {
          "name": ".htaccess",
          "type": "blob",
          "size": 1.8857421875,
          "content": "<IfModule mod_rewrite.c>\n\n    <IfModule mod_negotiation.c>\n        Options -MultiViews\n    </IfModule>\n\n    RewriteEngine On\n\n    ##\n    ## You may need to uncomment the following line for some hosting environments,\n    ## if you have installed to a subdirectory, enter the name here also.\n    ##\n    # RewriteBase /\n\n    ##\n    ## Uncomment following lines to force HTTPS.\n    ##\n    # RewriteCond %{HTTPS} off\n    # RewriteRule (.*) https://%{SERVER_NAME}/$1 [L,R=301]\n\n    ##\n    ## Paths explicitly blocked from being handled by the server\n    ##\n    RewriteRule ^bootstrap/.* index.php [L,NC]\n    RewriteRule ^config/.* index.php [L,NC]\n    RewriteRule ^vendor/.* index.php [L,NC]\n    RewriteRule ^storage/cms/.* index.php [L,NC]\n    RewriteRule ^storage/logs/.* index.php [L,NC]\n    RewriteRule ^storage/framework/.* index.php [L,NC]\n    RewriteRule ^storage/temp/protected/.* index.php [L,NC]\n    RewriteRule ^storage/app/uploads/protected/.* index.php [L,NC]\n\n    ##\n    ## Paths explicitly handled by the server\n    ##\n    RewriteCond %{REQUEST_FILENAME} -f\n    RewriteCond %{REQUEST_FILENAME} !/.well-known/*\n    RewriteCond %{REQUEST_FILENAME} !/storage/app/uploads/public/.*\n    RewriteCond %{REQUEST_FILENAME} !/storage/app/media/.*\n    RewriteCond %{REQUEST_FILENAME} !/storage/app/resized/.*\n    RewriteCond %{REQUEST_FILENAME} !/storage/temp/public/.*\n    RewriteCond %{REQUEST_FILENAME} !/themes/.*/(assets|resources)/.*\n    RewriteCond %{REQUEST_FILENAME} !/plugins/.*/(assets|resources)/.*\n    RewriteCond %{REQUEST_FILENAME} !/modules/.*/(assets|resources)/.*\n    RewriteRule !^index.php index.php [L,NC]\n\n    ##\n    ## Block all PHP files, except index\n    ##\n    RewriteCond %{REQUEST_FILENAME} -f\n    RewriteCond %{REQUEST_FILENAME} \\.php$\n    RewriteRule !^index.php index.php [L,NC]\n\n    ##\n    ## Standard routes\n    ##\n    RewriteCond %{REQUEST_FILENAME} !-f\n    RewriteRule ^ index.php [L]\n\n</IfModule>\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.1025390625,
          "content": "View the changelog on the [meta repository](https://github.com/wintercms/meta/tree/master/release-notes)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0830078125,
          "content": "MIT License\n\nCopyright (c) 2013-2021.03.01 October CMS\nCopyright (c) 2021 Winter CMS\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.5126953125,
          "content": "<p align=\"center\">\n    <img src=\"https://github.com/wintercms/winter/raw/develop/.github/assets/Github%20Banner.png?raw=true\" alt=\"Winter CMS Logo\" width=\"100%\" />\n</p>\n\n[Winter](https://wintercms.com) is a free, open-source content management system based on the [Laravel](https://laravel.com) PHP framework. Developers and agencies all around the world rely upon Winter for its quick prototyping and development, safe and secure codebase and dedication to simplicity.\n\nNo matter how large or small your project is, Winter provides a rich development environment, regardless of your level of experience.\n\n[![Version](https://img.shields.io/github/v/release/wintercms/winter?sort=semver&style=flat-square)](https://github.com/wintercms/winter/releases)\n[![Tests](https://img.shields.io/github/actions/workflow/status/wintercms/winter/tests.yml?branch=develop&label=tests&style=flat-square)](https://github.com/wintercms/winter/actions)\n[![License](https://img.shields.io/github/license/wintercms/winter?label=open%20source&style=flat-square)](https://packagist.org/packages/wintercms/winter)\n[![Discord](https://img.shields.io/badge/discord-join-purple?style=flat-square&logo=discord&logoColor=white)](https://discord.gg/D5MFSPH6Ux)\n\n## Installing Winter\n\nWinter can be installed in several ways for both new users and experienced developers - see our [Installation page](https://wintercms.com/install) for more information.\n\n### Quick start with Composer\n\nFor advanced users, run the following command in your terminal to install Winter via Composer:\n\n```shell\ncomposer create-project wintercms/winter example.com \"dev-develop\"\n```\n\nRun the following command with the folder created by the previous command to generate an environment file which will contain your configuration settings:\n\n```shell\nphp artisan winter:env\n```\n\nAfter configuring your installation, you can run the following command to run the database migrations and automatically create an administrator account with the username `admin`. The password of this account will be automatically generated and displayed in your terminal.\n\n```shell\nphp artisan winter:up\n```\n\n## Learning Winter\n\nThe best place to learn Winter is by [reading the documentation](https://wintercms.com/docs) or [following some tutorials](https://wintercms.com/blog/category/tutorials). You can also join the maintenance team and our active community on [Discord](https://discord.gg/D5MFSPH6Ux) who are always willing to help out with questions.\n\n## Development team\n\nWinter was forked from October CMS in March 2021 due to a difference in open source management philosophies between the core maintainer team and the two founders of October.\n\nThe development of Winter is lead by [Luke Towers](https://luketowers.ca/), along with many wonderful people that dedicate their time to help support and grow the community. The [Frostbyte Foundation](mailto:hello@frostbytefoundation.org) provides an organisational backing for the project and the continued development of Winter, its plugins and themes and its ecosystem.\n\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/luketowers\"><img src=\"https://avatars.githubusercontent.com/u/7253840?v=3\" width=\"100px;\" alt=\"Luke Towers\"/><br /><sub><b>Luke Towers</b></sub></a></td>\n    <td align=\"center\"><a href=\"https://github.com/bennothommo\"><img src=\"https://avatars.githubusercontent.com/u/15900351?v=3\" width=\"100px;\" alt=\"Ben Thomson\"/><br /><sub><b>Ben Thomson</b></sub></a></td>\n    <td align=\"center\"><a href=\"https://github.com/mjauvin\"><img src=\"https://avatars.githubusercontent.com/u/2013630?v=3\" width=\"100px;\" alt=\"Marc Jauvin\"/><br /><sub><b>Marc Jauvin</b></sub></a></td>\n    <td align=\"center\"><a href=\"https://github.com/jaxwilko\"><img src=\"https://avatars.githubusercontent.com/u/31214002?v=4\" width=\"100px;\" alt=\"Jack Wilkinson\"/><br /><sub><b>Jack Wilkinson</b></sub></a></td>\n  </tr>\n</table>\n\n## Foundation library\n\nWinter is built on top of the wildly-popular [Laravel](https://laravel.com) framework for PHP, with the in-house [Storm](https://github.com/wintercms/storm) library as a buffer between the Laravel framework and the Winter project, to minimize breaking changes and improve stability.\n\n## Getting in touch\n\nYou can get in touch with the maintainer team using the following mediums:\n\n* [Follow us on Twitter](https://twitter.com/usewintercms) for announcements and updates.\n* [Join us on Discord](https://discord.gg/D5MFSPH6Ux) to chat with us.\n\n## Contributing\n\nBefore contributing issues or pull requests, be sure to review the [Contributing Guidelines](https://github.com/wintercms/.github/blob/master/CONTRIBUTING.md) first.\n\n### Coding standards\n\nPlease follow the following guides and code standards:\n\n* [PSR 4 Coding Standards](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md)\n* [PSR 2 Coding Style Guide](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md)\n* [PSR 1 Coding Standards](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md)\n\n### Code of conduct\n\nIn order to ensure that the Winter community is welcoming to all, please review and abide by the [Code of Conduct](https://github.com/wintercms/.github/blob/master/CODE_OF_CONDUCT.md).\n\n## Sponsors\n\nWinter CMS development is financially supported by the generosity of the following sponsors:\n\n### Organizations\n\n[![Route4Me logo, Route Planning and Route Mapping](https://raw.githubusercontent.com/wintercms/winter/develop/.github/assets/sponsor-route4me.png)](https://route4me.com/?utm_source=wintercms)\n\nRoute4Me is a [Premium Sponsor to the Winter CMS Open Collective](https://opencollective.com/wintercms).\n\n[![Froala logo](https://froala.com/wp-content/uploads/2019/10/froala.svg)](https://froala.com/wysiwyg-editor/)\n\nFroala provides a perpetual, Enterprise license to Winter CMS which allows us and our users to use the Froala WYSIWYG Editor in Winter CMS powered projects.\n\nBig thanks to our sponsors on OpenCollective:\n\n- [FrogeHost](https://froge.host/?utm_source=wintercms)\n\n### Individuals\n\nBig thanks to our sponsors on OpenCollective:\n\n- Orville\n\nIf you would like to have your name, company and link added to this list and support open-source development, feel free to make a donation to our [Open Collective](https://opencollective.com/wintercms).\n\n## License\n\nThe Winter platform is open-sourced software licensed under the [MIT license](https://opensource.org/licenses/MIT).\n\n## Security vulnerabilities\n\nPlease review [our security policy](https://github.com/wintercms/winter/security/policy) on how to report security vulnerabilities.\n"
        },
        {
          "name": "artisan",
          "type": "blob",
          "size": 1.607421875,
          "content": "#!/usr/bin/env php\n<?php\n\n/*\n|--------------------------------------------------------------------------\n| Register The Auto Loader\n|--------------------------------------------------------------------------\n|\n| Composer provides a convenient, automatically generated class loader\n| for our application. We just need to utilize it! We'll require it\n| into the script here so that we do not have to worry about the\n| loading of any of our classes manually. It's great to relax.\n|\n*/\n\nrequire __DIR__.'/bootstrap/autoload.php';\n\n$app = require_once __DIR__.'/bootstrap/app.php';\n\n/*\n|--------------------------------------------------------------------------\n| Run The Artisan Application\n|--------------------------------------------------------------------------\n|\n| When we run the console application, the current CLI command will be\n| executed in this console and the response sent back to a terminal\n| or another output device for the developers. Here goes nothing!\n|\n*/\n\n$kernel = $app->make(Illuminate\\Contracts\\Console\\Kernel::class);\n\n$status = $kernel->handle(\n    $input = new Symfony\\Component\\Console\\Input\\ArgvInput,\n    new Symfony\\Component\\Console\\Output\\ConsoleOutput\n);\n\n/*\n|--------------------------------------------------------------------------\n| Shutdown The Application\n|--------------------------------------------------------------------------\n|\n| Once Artisan has finished running, we will fire off the shutdown events\n| so that any final work may be done by the application before we shut\n| down the process. This is the last thing to happen to the request.\n|\n*/\n\n$kernel->terminate($input, $status);\n\nexit($status);\n"
        },
        {
          "name": "bootstrap",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.74609375,
          "content": "{\n    \"name\": \"wintercms/winter\",\n    \"description\": \"Free, open-source, self-hosted CMS platform based on the Laravel PHP Framework. Originally known as October CMS.\",\n    \"homepage\": \"https://wintercms.com\",\n    \"type\": \"project\",\n    \"keywords\": [\"winter\", \"cms\", \"wintercms\", \"laravel\", \"cmf\"],\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Alexey Bobkov\",\n            \"email\": \"aleksey.bobkov@gmail.com\",\n            \"role\": \"Original Author\"\n        },\n        {\n            \"name\": \"Samuel Georges\",\n            \"email\": \"daftspunky@gmail.com\",\n            \"role\": \"Original Author\"\n        },\n        {\n            \"name\": \"Luke Towers\",\n            \"email\": \"wintercms@luketowers.ca\",\n            \"role\": \"Lead Maintainer\"\n        }\n    ],\n    \"support\": {\n        \"issues\": \"https://github.com/wintercms/winter/issues\",\n        \"docs\": \"https://wintercms.com/docs/\",\n        \"discord\": \"https://discord.gg/D5MFSPH6Ux\",\n        \"source\": \"https://github.com/wintercms/winter\"\n    },\n    \"require\": {\n        \"php\": \"^8.0.2\",\n        \"winter/storm\": \"dev-develop as 1.2\",\n        \"winter/wn-system-module\": \"dev-develop\",\n        \"winter/wn-backend-module\": \"dev-develop\",\n        \"winter/wn-cms-module\": \"dev-develop\",\n        \"laravel/framework\": \"^9.1\",\n        \"wikimedia/composer-merge-plugin\": \"~2.1.0\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^9.5.8\",\n        \"mockery/mockery\": \"^1.4.4\",\n        \"fakerphp/faker\": \"^1.9.2\",\n        \"squizlabs/php_codesniffer\": \"^3.2\",\n        \"php-parallel-lint/php-parallel-lint\": \"^1.0\",\n        \"dms/phpunit-arraysubset-asserts\": \"^0.1.0|^0.2.1\"\n    },\n    \"scripts\": {\n        \"post-create-project-cmd\": [\n            \"@php artisan winter:install\",\n            \"@php artisan winter:env\",\n            \"@php artisan winter:mirror public --relative\"\n        ],\n        \"post-update-cmd\": [\n            \"@php artisan winter:version\",\n            \"@php artisan package:discover\"\n        ],\n        \"test\": [\n            \"phpunit --stop-on-failure\"\n        ],\n        \"lint\": [\n            \"parallel-lint --exclude vendor --exclude storage --exclude modules/system/tests/fixtures/plugins/testvendor/goto/Plugin.php .\"\n        ],\n        \"sniff\": [\n            \"phpcs --colors -nq --report=\\\"full\\\" --extensions=\\\"php\\\"\"\n        ]\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"extra\": {\n        \"merge-plugin\": {\n            \"include\": [\n                \"plugins/myauthor/*/composer.json\"\n            ],\n            \"recurse\": true,\n            \"replace\": false,\n            \"merge-replace\": false,\n            \"merge-dev\": false\n        }\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"composer/installers\": true,\n            \"wikimedia/composer-merge-plugin\": true\n        }\n    }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 1.15234375,
          "content": "<?php\n/**\n * Winter CMS - The PHP platform that gets back to basics.\n *\n * @package  Winter\n * @author   Alexey Bobkov, Samuel Georges\n */\n\n/*\n|--------------------------------------------------------------------------\n| Register composer\n|--------------------------------------------------------------------------\n|\n| Composer provides a generated class loader for the application.\n|\n*/\n\nrequire __DIR__.'/bootstrap/autoload.php';\n\n/*\n|--------------------------------------------------------------------------\n| Load framework\n|--------------------------------------------------------------------------\n|\n| This bootstraps the framework and loads up this application.\n|\n*/\n\n$app = require_once __DIR__.'/bootstrap/app.php';\n\n/*\n|--------------------------------------------------------------------------\n| Process request\n|--------------------------------------------------------------------------\n|\n| Execute the request and send the response back to the client.\n|\n*/\n\n$kernel = $app->make(Illuminate\\Contracts\\Http\\Kernel::class);\n\n$response = $kernel->handle(\n    $request = Illuminate\\Http\\Request::capture()\n);\n\n$response->send();\n\n$kernel->terminate($request, $response);\n"
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.1826171875,
          "content": "{\n    \"devDependencies\": {\n        \"laravel-mix\": \"^6.0.41\"\n    },\n    \"workspaces\": {\n        \"packages\": [\n            \"modules/backend\",\n            \"modules/system\"\n        ]\n    }\n}\n"
        },
        {
          "name": "phpcs.xml",
          "type": "blob",
          "size": 7.8115234375,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\"Winter CMS\">\n    <description>The coding standard for Winter CMS.</description>\n    <rule ref=\"PSR2\">\n        <!--\n        Exceptions to the PSR-2 guidelines as per our Developer Guide:\n        https://wintercms.com/help/guidelines/developer#psr-exceptions\n        -->\n        <exclude name=\"PSR1.Methods.CamelCapsMethodName.NotCamelCaps\" />\n        <exclude name=\"Squiz.ControlStructures.ControlSignature.SpaceAfterCloseBrace\" />\n        <exclude name=\"PSR2.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace\" />\n\n        <!--  We're not enforcing a line length limit -->\n        <exclude name=\"Generic.Files.LineLength\" />\n    </rule>\n\n    <rule ref=\"Squiz.ControlStructures.ControlSignature\">\n        <!-- We use 0 spaces before the colon for short (alternative) tags -->\n        <properties>\n            <property name=\"requiredSpacesBeforeColon\" value=\"0\" />\n        </properties>\n    </rule>\n\n    <rule ref=\"Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpen\">\n        <!--\n        Ignore correct spacing for control structure in partial templates - spacing may be useful for templates to\n        easily deduce HTML code that is conditional\n        -->\n        <exclude-pattern>*/modules/*/behaviors/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/components/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/controllers/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/formwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/reportwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/widgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/behaviors/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/components/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/controllers/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/formwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/reportwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/widgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/partials/*\\.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"PSR1.Classes.ClassDeclaration.MissingNamespace\">\n        <!-- Migration files and tests do not need a namespace defined -->\n        <exclude-pattern>*/database/migrations/*\\.php</exclude-pattern>\n        <exclude-pattern>*/tests/*</exclude-pattern>\n    </rule>\n\n    <rule ref=\"PSR1.Classes.ClassDeclaration.MultipleClasses\">\n        <!--\n        Test fixtures and cases can have multiple classes defined, only if they are directly related to the test, or are\n        extended classes\n        -->\n        <exclude-pattern>*/tests/*</exclude-pattern>\n    </rule>\n\n    <rule ref=\"PSR2.Files.ClosingTag.NotAllowed\">\n        <!--\n        Partials may finish on a closing tag, especially when using the short echo \"<?= ?>\" tag. We'll allow this.\n        -->\n        <exclude-pattern>*/modules/*/behaviors/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/components/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/controllers/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/formwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/reportwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/widgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/behaviors/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/components/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/controllers/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/formwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/reportwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/widgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/partials/*\\.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"PSR2.ControlStructures.SwitchDeclaration.BodyOnNextLineCASE\">\n        <!--\n        Partials may have HTML within switch/case statements, which look neater when inline. PHPCS also has difficulty\n        interpreting a short echo tag on a new line within a switch/case statement.\n        -->\n        <exclude-pattern>*/modules/*/behaviors/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/components/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/controllers/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/formwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/reportwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/widgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/behaviors/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/components/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/controllers/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/formwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/reportwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/widgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/partials/*\\.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"PSR2.ControlStructures.SwitchDeclaration.BreakNotNewLine\">\n        <!--\n        Partials may have HTML within switch/case statements, which look neater when inline. PHPCS also has difficulty\n        interpreting a short echo tag on a new line within a switch/case statement.\n        -->\n        <exclude-pattern>*/modules/*/behaviors/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/components/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/controllers/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/formwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/reportwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/widgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/modules/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/behaviors/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/components/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/controllers/*/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/formwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/reportwidgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/widgets/*/partials/*\\.php</exclude-pattern>\n        <exclude-pattern>*/plugins/*/*/partials/*\\.php</exclude-pattern>\n    </rule>\n\n    <arg name=\"extensions\" value=\"php\" />\n    <arg name=\"colors\" />\n\n    <file>bootstrap/</file>\n    <file>config/</file>\n    <file>modules/</file>\n    <file>plugins/winter/demo/</file>\n    <file>tests/</file>\n\n    <!-- Ignore vendor files -->\n    <exclude-pattern>*/vendor/*</exclude-pattern>\n    <!-- Ignore this view file as fixing the issues in here will break the template -->\n    <exclude-pattern>modules/system/views/exception.php</exclude-pattern>\n    <!-- Ignore this view file as PHPCS wants line 8 to have 44 spaces instead of 12, clearly insane -->\n    <exclude-pattern>modules/backend/widgets/mediamanager/partials/_item-icon.php</exclude-pattern>\n    <!-- Ignore this test case completely as it's testing a parse error -->\n    <exclude-pattern>tests/fixtures/plugins/testvendor/goto/Plugin.php</exclude-pattern>\n</ruleset>\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 1.4833984375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         bootstrap=\"./modules/system/tests/bootstrap/app.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\"\n         xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\"\n>\n    <coverage>\n        <include>\n            <directory suffix=\".php\">./modules/</directory>\n        </include>\n        <exclude>\n            <file>./modules/backend/routes.php</file>\n            <file>./modules/cms/routes.php</file>\n            <file>./modules/system/routes.php</file>\n            <directory suffix=\".php\">./modules/backend/database</directory>\n            <directory suffix=\".php\">./modules/cms/database</directory>\n            <directory suffix=\".php\">./modules/system/database</directory>\n        </exclude>\n    </coverage>\n    <testsuites>\n        <testsuite name=\"Winter CMS Test Suite\">\n            <directory>./modules/system</directory>\n            <directory>./modules/cms</directory>\n            <directory>./modules/backend</directory>\n        </testsuite>\n    </testsuites>\n    <php>\n        <env name=\"APP_ENV\" value=\"testing\"/>\n        <env name=\"CACHE_DRIVER\" value=\"array\"/>\n        <env name=\"SESSION_DRIVER\" value=\"array\"/>\n    </php>\n</phpunit>\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "themes",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}