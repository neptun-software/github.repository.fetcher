{
  "metadata": {
    "timestamp": 1736712022239,
    "page": 534,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "getsentry/sentry-php",
      "stars": 1843,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".craft.yml",
          "type": "blob",
          "size": 0.2568359375,
          "content": "minVersion: 0.9.0\ngithub:\n  owner: getsentry\n  repo: sentry-php\nchangelogPolicy: simple\nstatusProvider:\n  name: github\nartifactProvider:\n  name: none\ntargets:\n  - name: github\n  - name: registry\n    type: sdk\n    config:\n      canonical: 'composer:sentry/sentry'\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.291015625,
          "content": "; top-most EditorConfig file\nroot = true\n\n; Unix-style newlines\n[*]\ncharset = utf-8\nend_of_line = LF\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nindent_style = space\nindent_size = 4\n\n[*.md]\nmax_line_length = 80\n\n[*.{yml, yaml}]\nindent_size = 2\n\n[COMMIT_EDITMSG]\nmax_line_length = 0\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.0625,
          "content": "# Update PHPCS (#1599)\nf8b64d330d03cbf809795beb5846b2c48175cd62\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 1.1572265625,
          "content": "# Auto-detect text files, ensure they use LF.\n*       text=auto eol=lf\n\n# These files are always considered text and should use LF.\n# See core.whitespace @ http://git-scm.com/docs/git-config for whitespace flags.\n*.php   text eol=lf whitespace=blank-at-eol,blank-at-eof,space-before-tab,tab-in-indent,tabwidth=4 diff=php\n*.json  text eol=lf whitespace=blank-at-eol,blank-at-eof,space-before-tab,tab-in-indent,tabwidth=4\n*.yml   text eol=lf whitespace=blank-at-eol,blank-at-eof,space-before-tab,tab-in-indent,tabwidth=4\n*.md    text eol=lf whitespace=blank-at-eol,blank-at-eof\n*.rst   text eol=lf whitespace=blank-at-eol,blank-at-eof\n\n# Exclude non-essential files from dist\n/tests export-ignore\n/stubs export-ignore\n/.appveyor.yml export-ignore\n/.craft.yml export-ignore\n/.editorconfig export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/.php-cs-fixer.dist.php export-ignore\n/.travis.yml export-ignore\n/Makefile export-ignore\n/phpstan.neon export-ignore\n/phpstan-baseline.neon export-ignore\n/phpunit.xml.dist export-ignore\n/psalm.xml.dist export-ignore\n/psalm-baseline.xml export-ignore\n/codecov.yml export-ignore\n/.github export-ignore\n/phpbench.json export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.111328125,
          "content": "*.lock\npackage.xml\n/vendor\n.idea\n.php-cs-fixer.cache\n.phpbench\n.phpunit.result.cache\ndocs/_build\ntests/clover.xml\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 1.3408203125,
          "content": "<?php\n\nreturn (new PhpCsFixer\\Config())\n    ->setRules([\n        '@PHP71Migration' => true,\n        '@Symfony' => true,\n        '@Symfony:risky' => true,\n        'concat_space' => ['spacing' => 'one'],\n        'ordered_imports' => [\n            'imports_order' => ['class', 'function', 'const'],\n        ],\n        'declare_strict_types' => true,\n        'get_class_to_class_keyword' => false,\n        'yoda_style' => [\n            'equal' => false,\n            'identical' => false,\n            'less_and_greater' => false,\n        ],\n        'self_accessor' => false,\n        'modernize_strpos' => false,\n        'no_superfluous_phpdoc_tags' => [\n            'allow_mixed' => true,\n        ],\n        'phpdoc_to_comment' => false,\n        'phpdoc_align' => [\n            'tags' => ['param', 'return', 'throws', 'type', 'var'],\n        ],\n        'phpdoc_line_span' => [\n            'const' => 'multi',\n            'method' => 'multi',\n            'property' => 'multi',\n        ],\n        'trailing_comma_in_multiline' => [\n            'after_heredoc' => false,\n            'elements' => ['arrays'],\n        ],\n    ])\n    ->setRiskyAllowed(true)\n    ->setFinder(\n        PhpCsFixer\\Finder::create()\n            ->in(__DIR__)\n            ->exclude([\n                'tests/resources',\n                'tests/phpt',\n                'tests/Fixtures',\n            ])\n    )\n;\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.154296875,
          "content": "The Sentry PHP SDK was originally written by Michael van Tellingen\nand is maintained by the Sentry Team.\n\nhttp://github.com/getsentry/sentry-php/contributors\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 15.419921875,
          "content": "# CHANGELOG\n\n## 4.10.0\n\nThe Sentry SDK team is happy to announce the immediate availability of Sentry PHP SDK v4.10.0.\n\n### Features\n\n- The SDK was updated to support PHP 8.4 [(#1760)](https://github.com/getsentry/sentry-php/pull/1760)\n- Expose a new `http_ssl_native_ca` option to tell the HTTP client to use the operating system's native CA store for certificate verification [(#1766)](https://github.com/getsentry/sentry-php/pull/1766)\n\n### Bug Fixes\n\n- Fix the `http_timeout` & `http_connect_timeout` options, which now also work with sub second values [(#1785)](https://github.com/getsentry/sentry-php/pull/1785)\n\n### Misc\n\n- HTTP breadcrumbs created by the `GuzzleTracingMiddleware` are now set to a warning status for `4xx` responses and an error status for `5xx` responses [(#1773)](https://github.com/getsentry/sentry-php/pull/1773)\n- All public Metrics APIs are now no-op, intneral APIs were removed [(#1786)](https://github.com/getsentry/sentry-php/pull/1786)\n\n## 4.9.0\n\nThe Sentry SDK team is happy to announce the immediate availability of Sentry PHP SDK v4.9.0.\n\n### Features\n\n- Allow retrieving a single piece of data from the span by itâ€™s key [(#1767)](https://github.com/getsentry/sentry-php/pull/1767)\n\n  ```php\n  \\Sentry\\SentrySdk::getCurrentHub()->getSpan()?->setData([\n      'failure' => $span->getData('failure', 0) + 1,\n  ]);\n  ```\n\n- Add span trace origin [(#1769)](https://github.com/getsentry/sentry-php/pull/1769)\n\n## 4.8.1\n\nThe Sentry SDK team is happy to announce the immediate availability of Sentry PHP SDK v4.8.1.\n\n### Bug Fixes\n\n- Guard against empty `REMOTE_ADDR` [(#1751)](https://github.com/getsentry/sentry-php/pull/1751)\n\n## 4.8.0\n\nThe Sentry SDK team is happy to announce the immediate availability of Sentry PHP SDK v4.8.0.\n\n### Features\n\n- Add timing span when emiting a timing metric [(#1717)](https://github.com/getsentry/sentry-php/pull/1717)\n\n  ```php\n  use function Sentry\\metrics;\n\n  // This will now both emit a distribution metric and a span with the \"expensive-operation\" key\n  metrics()->timing(\n      key: 'expensive-operation',\n      callback: fn() => doExpensiveOperation(),\n  );\n  ```\n\n### Bug Fixes\n\n- Fix missing data on HTTP spans [(#1735)](https://github.com/getsentry/sentry-php/pull/1735)\n- Test span sampled status before creating child spans [(#1740)](https://github.com/getsentry/sentry-php/pull/1740)\n\n### Misc\n\n- Implement fast path for ignoring errors [(#1737)](https://github.com/getsentry/sentry-php/pull/1737)\n- Add array shape for better autocomplete of `Sentry\\init` function [(#1738)](https://github.com/getsentry/sentry-php/pull/1738)\n- Represent callable strings as strings [(#1741)](https://github.com/getsentry/sentry-php/pull/1741)\n- Use `AWS_LAMBDA_FUNCTION_VERSION` environment variable for release if available [(#1742)](https://github.com/getsentry/sentry-php/pull/1742)\n\n## 4.7.0\n\nThe Sentry SDK team is happy to announce the immediate availability of Sentry PHP SDK v4.7.0.\n\n### Features\n\n- Improve debugging experience by emitting more logs from the SDK [(#1705)](https://github.com/getsentry/sentry-php/pull/1705)\n- Handle `metric_bucket` rate limits [(#1726)](https://github.com/getsentry/sentry-php/pull/1726) & [(#1728)](https://github.com/getsentry/sentry-php/pull/1728)\n\n### Bug Fixes\n\n- Fix deprecation notice when trying to serialize a callable [(#1732)](https://github.com/getsentry/sentry-php/pull/1732)\n\n### Misc\n\n- Deprecated `SpanStatus::resourceExchausted()`. Use `SpanStatus::resourceExhausted()` instead [(#1725)](https://github.com/getsentry/sentry-php/pull/1725)\n- Update metric normalization [(#1729)](https://github.com/getsentry/sentry-php/pull/1729)\n\n## 4.6.1\n\nThe Sentry SDK team is happy to announce the immediate availability of Sentry PHP SDK v4.6.1.\n\n### Bug Fixes\n\n- Always add the sampled flag to the W3C `traceparent` header [(#1713)](https://github.com/getsentry/sentry-php/pull/1713)\n- Add `JSON_ERROR_NON_BACKED_ENUM` to allowed `JSON::encode()` errors. [(#1707)](https://github.com/getsentry/sentry-php/pull/1707)\n\n## 4.6.0\n\nThe Sentry SDK team is happy to announce the immediate availability of Sentry PHP SDK v4.6.0.\n\n### Features\n\n- Add the PHP SAPI to the runtime context [(#1700)](https://github.com/getsentry/sentry-php/pull/1700)\n\n### Bug Fixes\n\n- Correctly apply properties/options in `ClientBuilder::class` [(#1699)](https://github.com/getsentry/sentry-php/pull/1699)\n- Attach `_metrics_summary` to transactions [(#1702)](https://github.com/getsentry/sentry-php/pull/1702)\n\n### Misc\n\n- Remove `final` from `Metrics::class` [(#1697)](https://github.com/getsentry/sentry-php/pull/1697)\n- Return early when using `ignore_exceptions` [(#1701)](https://github.com/getsentry/sentry-php/pull/1701)\n- Attach exceptions to the log message from `FrameContextifierIntegration::class` [(#1678)](https://github.com/getsentry/sentry-php/pull/1678)\n\n## 4.5.0\n\nThe Sentry SDK team is happy to announce the immediate availability of Sentry PHP SDK v4.5.0.\n\n### Features\n\n- Add `before_send_check_in` and `before_send_metrics` [(#1690)](https://github.com/getsentry/sentry-php/pull/1690)\n\n  ```php\n  \\Sentry\\init([\n      'before_send_check_in' => function (\\Sentry\\Event $event) {\n          $checkIn = $event->getCheckIn(),\n          // modify the check-in or return null to not send it\n      },\n  ]);\n  ```\n\n  ```php\n  \\Sentry\\init([\n      'before_send_metrics' => function (\\Sentry\\Event $event) {\n          $metrics = $event->getMetrics(),\n          // modify the metrics or return null to not send it\n      },\n  ]);\n  ```\n\n### Bug Fixes\n\n- Fix `_metrics_summary` formatting [(#1682)](https://github.com/getsentry/sentry-php/pull/1682)\n\n- Fix `DebugFileLogger` and `DebugStdOutLogger` to be usable with PHP 7.2 and up [(#1691)](https://github.com/getsentry/sentry-php/pull/1691)\n\n- Allow whitespace in metric tag values [(#1692)](https://github.com/getsentry/sentry-php/pull/1692)\n\n## 4.4.0\n\nThe Sentry SDK team is happy to announce the immediate availability of Sentry PHP SDK v4.4.0.\n\n### Features\n\n- Add `metrics()->timing()` [(#1670)](https://github.com/getsentry/sentry-php/pull/1670)\n\n  This allows you to emit a distribution metric based on the duration of the provided callback.\n\n  ```php\n  use function Sentry\\metrics;\n\n  metrics()->timing(\n      key: 'my-metric',\n      callback: fn() => doSomething(),\n  );\n  ```\n\n- Add `withMonitor()` [(#1679)](https://github.com/getsentry/sentry-php/pull/1679)\n\n  This wraps a callback into monitor check-ins.\n\n  ```php\n  use function Sentry\\withMonitor;\n\n  withMonitor(\n      slug: 'my-monitor',\n      callback: fn () => doSomething(),\n      monitorConfig: new MonitorConfig(...),\n  );\n  ```\n\n- Add new `failure_issue_threshold` and `recovery_threshold` configuration to `MonitorConfig` [(#1685)](https://github.com/getsentry/sentry-php/pull/1685)\n\n- Add `TransactionContext::make()` and `SpanContext::make()` [(#1684)](https://github.com/getsentry/sentry-php/pull/1684)\n\n  ```php\n  use Sentry\\Tracing\\SpanContext;\n\n  $spanCpntext = SpanContext::make()\n      ->setOp('http.client')\n      ->setDescription('GET https://example.com')\n  ```\n- Add support for fluent use of `Transaction::setName()` [(#1687)](https://github.com/getsentry/sentry-php/pull/1687)\n\n- Add support for the W3C `traceparent` header [(#1680)](https://github.com/getsentry/sentry-php/pull/1680)\n\n### Bug Fixes\n\n- Do not send an empty event if no metrics are in the bucket [(#1676)](https://github.com/getsentry/sentry-php/pull/1676)\n\n- Fix the `http_ssl_verify_peer` option to set the correct value to `CURLOPT_SSL_VERIFYPEER` [(#1686)](https://github.com/getsentry/sentry-php/pull/1686)\n\n### Misc\n\n- Depreacted `UserDataBag::getSegment()` and `UserDataBag::setSegment()`. You may use a custom tag or context instead [(#1681)](https://github.com/getsentry/sentry-php/pull/1681)\n\n## 4.3.1\n\nThe Sentry SDK team is happy to announce the immediate availability of Sentry PHP SDK v4.3.1.\n\n### Bug Fixes\n\n- Fix tags not being serialized correctly for metrics [(#1672)](https://github.com/getsentry/sentry-php/pull/1672)\n\n### Misc\n\n- Remove `@internal` annotation from `MetricsUnit` class [(#1671)](https://github.com/getsentry/sentry-php/pull/1671)\n\n## 4.3.0\n\nThe Sentry SDK team is happy to announce the immediate availability of Sentry PHP SDK v4.3.0.\n\n### Features\n\n- Add support for Sentry Developer Metrics [(#1619)](https://github.com/getsentry/sentry-php/pull/1619)\n\n  ```php\n  use function Sentry\\metrics;\n\n  // Add 4 to a counter named hits\n  metrics()->increment(key: 'hits', value: 4);\n\n  // Add 25 to a distribution named response_time with unit milliseconds\n  metrics()->distribution(key: 'response_time', value: 25, unit: MetricsUnit::millisecond());\n\n  // Add 2 to gauge named parallel_requests, tagged with type: \"a\"\n  metrics()->gauge(key: 'parallel_requests, value: 2, tags: ['type': 'a']);\n\n  // Add a user's email to a set named users.sessions, tagged with role: \"admin\"\n  metrics()->set('users.sessions, 'jane.doe@example.com', null, ['role' => User::admin()]);\n\n  // Add 2 to gauge named `parallel_requests`, tagged with `type: \"a\"`\n  Sentry.metrics.gauge('parallel_requests', 2, { tags: { type: 'a' } });\n\n  // Flush the metrics to Sentry\n  metrics()->flush();\n\n  // We recommend registering the flushing in a shutdown function\n  register_shutdown_function(static fn () => metrics()->flush());\n  ```\n\n  To learn more about Sentry Developer Merics, join the discussion at https://github.com/getsentry/sentry-php/discussions/1666.\n\n### Bug Fixes\n\n- Disallow to seralize the `HubAdapter::class` [(#1663)](https://github.com/getsentry/sentry-php/pull/1663)\n- Do not overwrite trace context on event [(#1668)](https://github.com/getsentry/sentry-php/pull/1668)\n- Serialize breadcrumb data to display correct in the Sentry UI [(#1669)](https://github.com/getsentry/sentry-php/pull/1669)\n\n### Misc\n\n- Remove the `final` keyword from `Hub::class`, `Client::class` and `Scope::class` [(#1665)](https://github.com/getsentry/sentry-php/pull/1665)\n\n## 4.2.0\n\nThe Sentry SDK team is happy to announce the immediate availability of Sentry PHP SDK v4.2.0.\n\n### Features\n\n- Add a config option to allow overriding the Spotlight url [(#1659)](https://github.com/getsentry/sentry-php/pull/1659)\n\n  ```php\n  Sentry\\init([\n      'spotlight_url' => 'http://localhost:8969',\n  ]);\n  ```\n\n### Bug Fixes\n\n- Restore setting the `logger` value on the event payload [(#1657)](https://github.com/getsentry/sentry-php/pull/1657)\n\n- Only apply the `sample_rate` on error/message events [(#1662)](https://github.com/getsentry/sentry-php/pull/1662)\n\n  This fixes an issue where Cron Check-Ins were wrongly sampled out if a `sample_rate` lower than `1.0` is used.\n\n### Misc\n\n- Remove the `@internal` annotation from `ClientBuilder::class` [(#1661)](https://github.com/getsentry/sentry-php/pull/1661)\n\n## 4.1.0\n\nThe Sentry SDK team is happy to announce the immediate availability of Sentry PHP SDK v4.1.0.\n\n### Features\n\n- Add support for Spotlight [(#1647)](https://github.com/getsentry/sentry-php/pull/1647)\n\n  Spotlight is Sentry for Development. Inspired by an old project, Django Debug Toolbar. Spotlight brings a rich debug overlay into development environments, and it does it by leveraging the existing power of Sentry's SDKs.\n\n  To learn more about Spotlight, go to https://spotlightjs.com/.\n\n### Misc\n\n- Normalize `response` status [(#1644)](https://github.com/getsentry/sentry-php/pull/1644)\n\n## 4.0.1\n\nThe Sentry SDK team is happy to announce the immediate availability of Sentry PHP SDK v4.0.1.\n\n### Bug Fixes\n\n- Fix capturing out-of-memory errors when memory-constrained [(#1636)](https://github.com/getsentry/sentry-php/pull/1636)\n- Check if the cURL extension is installed [(#1632)](https://github.com/getsentry/sentry-php/pull/1632)\n\n## 4.0.0\n\nThe Sentry SDK team is thrilled to announce the immediate availability of Sentry PHP SDK v4.0.0.\n\n### Breaking Change\n\nPlease refer to the [UPGRADE-4.0.md](UPGRADE-4.0.md) guide for a complete list of breaking changes.\n\n- This version exclusively uses the [envelope endpoint](https://develop.sentry.dev/sdk/envelopes/) to send event data to Sentry.\n\n  If you are using [sentry.io](https://sentry.io), no action is needed.\n  If you are using an on-premise/self-hosted installation of Sentry, the minimum requirement is now version `>= v20.6.0`.\n\n- You need to have `ext-curl` installed to use the SDK.\n\n- The `IgnoreErrorsIntegration` integration was removed. Use the `ignore_exceptions` option instead.\n\n  ```php\n  Sentry\\init([\n      'ignore_exceptions' => [BadThingsHappenedException::class],\n  ]);\n  ```\n\n  This option performs an [`is_a`](https://www.php.net/manual/en/function.is-a.php) check now, so you can also ignore more generic exceptions.\n\n### Features\n\n- Add new fluent APIs [(#1601)](https://github.com/getsentry/sentry-php/pull/1601)\n\n  ```php\n  // Before\n  $transactionContext = new TransactionContext();\n  $transactionContext->setName('GET /example');\n  $transactionContext->setOp('http.server');\n\n  // After\n  $transactionContext = (new TransactionContext())\n      ->setName('GET /example');\n      ->setOp('http.server');\n  ```\n\n- Simplify the breadcrumb API [(#1603)](https://github.com/getsentry/sentry-php/pull/1603)\n\n  ```php\n  // Before\n  \\Sentry\\addBreadcrumb(\n      new \\Sentry\\Breadcrumb(\n          \\Sentry\\Breadcrumb::LEVEL_INFO,\n          \\Sentry\\Breadcrumb::TYPE_DEFAULT,\n          'auth',                // category\n          'User authenticated',  // message (optional)\n          ['user_id' => $userId] // data (optional)\n      )\n  );\n\n  // After\n  \\Sentry\\addBreadcrumb(\n      category: 'auth',\n      message: 'User authenticated', // optional\n      metadata: ['user_id' => $userId], // optional\n      level: Breadcrumb::LEVEL_INFO, // set by default\n      type: Breadcrumb::TYPE_DEFAULT, // set by default\n  );\n  ```\n\n- New `logger` option [(#1625)](https://github.com/getsentry/sentry-php/pull/1625)\n\n  To make it easier to debug the internals of the SDK, the `logger` option now accepts a `Psr\\Log\\LoggerInterface` instance.\n  We do provide two implementations, `Sentry\\Logger\\DebugFileLogger` and `Sentry\\Logger\\DebugStdOutLogger`.\n\n  ```php\n  // This logs messages to the provided file path\n  Sentry\\init([\n      'logger' => new DebugFileLogger(filePath: ROOT . DS . 'sentry.log'),\n  ]);\n\n  // This logs messages to stdout\n  Sentry\\init([\n      'logger' => new DebugStdOutLogger(),\n  ]);\n  ```\n\n- New default cURL HTTP client [(#1589)](https://github.com/getsentry/sentry-php/pull/1589)\n\n  The SDK now ships with its own HTTP client based on cURL. A few new options were added.\n\n  ```php\n  Sentry\\init([\n      'http_proxy_authentication' => 'username:password', // user name and password to use for proxy authentication\n      'http_ssl_verify_peer' => false, // default true, verify the peer's SSL certificate\n      'http_compression' => false, // default true, http request body compression\n  ]);\n  ```\n\n  To use a different client, you may use the `http_client` option.\n\n  ```php\n  use Sentry\\Client;\n  use Sentry\\HttpClient\\HttpClientInterface;\n  use Sentry\\HttpClient\\Request;\n  use Sentry\\HttpClient\\Response;\n  use Sentry\\Options;\n\n  $httpClient = new class() implements HttpClientInterface {\n      public function sendRequest(Request $request, Options $options): Response\n      {\n\n          // your custom implementation\n\n          return new Response($response->getStatusCode(), $response->getHeaders(), '');\n      }\n  };\n\n  Sentry\\init([\n      'http_client' => $httpClient,\n  ]);\n  ```\n\n  To use a different transport, you may use the `transport` option. A custom transport must implement the `TransportInterface`.\n  If you use the `transport` option, the `http_client` option has no effect.\n\n### Misc\n\n- The abandoned package `php-http/message-factory` was removed.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.1533203125,
          "content": "<p align=\"center\">\n  <a href=\"https://sentry.io/?utm_source=github&utm_medium=logo\" target=\"_blank\">\n    <img src=\"https://sentry-brand.storage.googleapis.com/sentry-wordmark-dark-280x84.png\" alt=\"Sentry\" width=\"280\" height=\"84\">\n  </a>\n</p>\n\n# Contributing to the Sentry PHP SDK\n\nWe welcome contributions to `sentry-php` by the community.\n\nPlease search the [issue tracker](https://github.com/getsentry/sentry-php/issues) before creating a new issue (a problem or an improvement request). Please also ask in our [Sentry Community on Discord](https://discord.com/invite/Ww9hbqr) before submitting a new issue. There is a ton of great people in our Discord community ready to help you!\n\nIf you feel that you can fix or implement it yourself, please read on to learn how to submit your changes.\n\n## Submitting changes\n\n- Setup the development environment.\n- Clone the `sentry-php` repository and prepare necessary changes.\n- Add tests for your changes to `tests/`.\n- Run tests and make sure all of them pass.\n- Open a pull request.\n\nWe will review your pull request as soon as possible.\nThank you for contributing!\n\n## PR reviews\n\nFor feedback in PRs, we use the [LOGAF scale](https://blog.danlew.net/2020/04/15/the-logaf-scale/) to specify how important a comment is:\n\n* `l`: low - nitpick. You may address this comment, but you don't have to.\n* `m`: medium - normal comment. Worth addressing and fixing.\n* `h`: high - Very important. We must not merge this PR without addressing this issue.\n\nYou only need one approval from a maintainer to be able to merge. For some PRs, asking specific or multiple people for review might be adequate.\n\nOur different types of reviews:\n  \n  1. **LGTM without any comments.** You can merge immediately.\n  2. **LGTM with low and medium comments.** The reviewer trusts you to resolve these comments yourself, and you don't need to wait for another approval. \n  3. **Only comments.** You must address all the comments and need another review until you merge.\n  4. **Request changes.** Only use if something critical is in the PR that absolutely must be addressed. We usually use `h` comments for that. When someone requests changes, the same person must approve the changes to allow merging. Use this sparingly.\n\n## Development environment\n\n### Clone the repository\n\n```bash\ngit clone git@github.com:getsentry/sentry-php.git\n```\n\nMake sure that you have PHP 7.2+ installed. Version 7.4 or higher is required to run style checkers. On macOS, we recommend using brew to install PHP. For Windows, we recommend an official PHP.net release.\n\n### Install the dependencies\n\nDependencies are managed through [Composer](https://getcomposer.org/):\n\n```bash\ncomposer install\n```\n\n### Running tests\n\nTests can then be run via [PHPUnit](https://phpunit.de/):\n\n```bash\nvendor/bin/phpunit\n```\n\n## Releasing a new version\n\n(only relevant for Sentry employees)\n\nPrerequisites:\n\n- All changes that should be released must be in the `master` branch.\n- Every commit should follow the [Commit Message Format](https://develop.sentry.dev/commit-messages/#commit-message-format) convention.\n\nManual Process:\n\n- Update CHANGELOG.md with the version to be released. Example commit: https://github.com/getsentry/sentry-php/commit/877bca3f0f0ac0fc8ec0a218c6070cccea266795.\n- On GitHub in the `sentry-php` repository go to \"Actions\" select the \"Release\" workflow.\n- Click on \"Run workflow\" on the right side and make sure the `master` branch is selected.\n- Set \"Version to release\" input field. Here you decide if it is a major, minor or patch release. (See \"Versioning Policy\" below)\n- Click \"Run Workflow\"\n\nThis will trigger [Craft](https://github.com/getsentry/craft) to prepare everything needed for a release. (For more information see [craft prepare](https://github.com/getsentry/craft#craft-prepare-preparing-a-new-release)) At the end of this process, a release issue is created in the [Publish](https://github.com/getsentry/publish) repository. (Example release issue: https://github.com/getsentry/publish/issues/815)\n\nNow one of the persons with release privileges (most probably your engineering manager) will review this Issue and then add the `accepted` label to the issue.\n\nThere are always two persons involved in a release.\n\nIf you are in a hurry and the release should be out immediately there is a Slack channel called `#proj-release-approval` where you can see your release issue and where you can ping people to please have a look immediately.\n\nWhen the release issue is labeled `accepted` [Craft](https://github.com/getsentry/craft) is triggered again to publish the release to all the right platforms. (See [craft publish](https://github.com/getsentry/craft#craft-publish-publishing-the-release) for more information). At the end of this process, the release issue on GitHub will be closed and the release is completed! Congratulations!\n\nThere is a sequence diagram visualizing all this in the [README.md](https://github.com/getsentry/publish) of the `Publish` repository.\n\n### Versioning Policy\n\nThis project follows [semver](https://semver.org/), with three additions:\n\n- Semver says that major version `0` can include breaking changes at any time. Still, it is common practice to assume that only `0.x` releases (minor versions) can contain breaking changes while `0.x.y` releases (patch versions) are used for backwards-compatible changes (bugfixes and features). This project also follows that practice.\n\n- All undocumented APIs are considered internal. They are not part of this contract.\n\n- Certain features (e.g. integrations) may be explicitly called out as \"experimental\" or \"unstable\" in the documentation. They come with their own versioning policy described in the documentation.\n\nWe recommend pinning your version requirements against `1.x.*` or `1.x.y`.\nEither one of the following is fine:\n\n```json\n\"sentry/sentry\": \"^1.0\",\n\"sentry/sentry\": \"^1\",\n```\n\nA major release `N` implies the previous release `N-1` will no longer receive updates. We generally do not backport bugfixes to older versions unless they are security relevant. However, feel free to ask for backports of specific commits on the bug tracker.\n\n## Commit message format guidelines\n\nSee the documentation on commit messages here:\n\nhttps://develop.sentry.dev/commit-messages/#commit-message-format\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.06640625,
          "content": "MIT License\n\nCopyright (c) 2012 Functional Software, Inc. dba Sentry\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.9833984375,
          "content": "<div align=\"center\">\n    <a href=\"https://sentry.io/?utm_source=github&utm_medium=logo\" target=\"_blank\">\n        <img src=\"https://sentry-brand.storage.googleapis.com/github-banners/github-sdk-php.jpg\" alt=\"Sentry for PHP\">\n    </a>\n</div>\n\n_Bad software is everywhere, and we're tired of it. Sentry is on a mission to help developers write better software faster, so we can get back to enjoying technology. If you want to join us [<kbd>**Check out our open positions**</kbd>](https://sentry.io/careers/)_\n\n# Official Sentry SDK for PHP\n\n[![CI](https://github.com/getsentry/sentry-php/workflows/CI/badge.svg?branch=master)](https://github.com/getsentry/sentry-php/actions?query=workflow%3ACI+branch%3Amaster)\n[![Coverage Status](https://img.shields.io/codecov/c/github/getsentry/sentry-php/master?logo=codecov)](https://codecov.io/gh/getsentry/sentry-php/branch/master)\n[![Latest Stable Version](https://poser.pugx.org/sentry/sentry/v/stable)](https://packagist.org/packages/sentry/sentry)\n[![License](https://poser.pugx.org/sentry/sentry/license)](https://packagist.org/packages/sentry/sentry)\n[![Total Downloads](https://poser.pugx.org/sentry/sentry/downloads)](https://packagist.org/packages/sentry/sentry)\n[![Monthly Downloads](https://poser.pugx.org/sentry/sentry/d/monthly)](https://packagist.org/packages/sentry/sentry)\n[![Discord](https://img.shields.io/discord/621778831602221064)](https://discord.gg/cWnMQeA)\n\nThe Sentry PHP error reporter tracks errors and exceptions that happen during the\nexecution of your application and provides instant notification with detailed\ninformation needed to prioritize, identify, reproduce and fix each issue.\n\n## Getting started\n\n### Install\n\nInstall the SDK using [Composer](https://getcomposer.org/).\n\n```bash\ncomposer require sentry/sentry\n```\n\n### Configuration\n\nInitialize the SDK as early as possible in your application.\n\n```php\n\\Sentry\\init(['dsn' => '___PUBLIC_DSN___' ]);\n```\n\n### Usage\n\n```php\ntry {\n    thisFunctionThrows(); // -> throw new \\Exception('foo bar');\n} catch (\\Exception $exception) {\n    \\Sentry\\captureException($exception);\n}\n```\n\n## Official integrations\n\nThe following integrations are fully supported and maintained by the Sentry team.\n\n- [Symfony](https://github.com/getsentry/sentry-symfony)\n- [Laravel](https://github.com/getsentry/sentry-laravel)\n\n## 3rd party integrations using SDK 4.x\n\nThe following integrations are available and maintained by members of the Sentry community.\n\n- [Drupal](https://www.drupal.org/project/raven)\n- [WordPress](https://wordpress.org/plugins/wp-sentry-integration/)\n- ... feel free to be famous, create a port to your favourite platform!\n\n## 3rd party integrations using the old SDK 3.x\n\n- [Neos Flow](https://github.com/flownative/flow-sentry)\n- [ZendFramework](https://github.com/facile-it/sentry-module)\n- [Yii2](https://github.com/notamedia/yii2-sentry)\n- [Silverstripe](https://github.com/phptek/silverstripe-sentry)\n- [CakePHP 3.0 - 4.3](https://github.com/Connehito/cake-sentry)\n- [CakePHP 4.4+](https://github.com/lordsimal/cakephp-sentry)\n- [October CMS](https://github.com/OFFLINE-GmbH/oc-sentry-plugin)\n\n## 3rd party integrations using the old SDK 2.x\n\n- [Neos Flow](https://github.com/networkteam/Networkteam.SentryClient)\n- [OXID eShop](https://github.com/OXIDprojects/sentry)\n- [TYPO3](https://github.com/networkteam/sentry_client)\n- [CakePHP](https://github.com/Connehito/cake-sentry/tree/3.x)\n\n## 3rd party integrations using the old SDK 1.x\n\n- [Neos CMS](https://github.com/networkteam/Netwokteam.Neos.SentryClient)\n- [OpenCart](https://github.com/BurdaPraha/oc_sentry)\n- [TYPO3](https://github.com/networkteam/sentry_client/tree/2.1.1)\n\n## Community\n\n- [Documentation](https://docs.sentry.io/error-reporting/quickstart/?platform=php)\n- [Bug Tracker](http://github.com/getsentry/sentry-php/issues)\n- [Code](http://github.com/getsentry/sentry-php)\n\n## Contributing to the SDK\n\nPlease make sure to read the [CONTRIBUTING.md](CONTRIBUTING.md) before making a pull request.\n\nThanks to everyone who has contributed to this project so far.\n\n<a href=\"https://github.com/getsentry/sentry-php/graphs/contributors\">\n  <img src=\"https://contributors-img.web.app/image?repo=getsentry/sentry-php\" />\n</a>\n\n## Getting help/support\n\nIf you need help setting up or configuring the PHP SDK (or anything else in the Sentry universe) please head over to the [Sentry Community on Discord](https://discord.com/invite/sentry). There is a ton of great people in our Discord community ready to help you!\n\n## Resources\n\n- [![Documentation](https://img.shields.io/badge/documentation-sentry.io-green.svg)](https://docs.sentry.io/quickstart/)\n- [![Discord](https://img.shields.io/discord/621778831602221064)](https://discord.gg/Ww9hbqr)\n- [![Stack Overflow](https://img.shields.io/badge/stack%20overflow-sentry-green.svg)](http://stackoverflow.com/questions/tagged/sentry)\n- [![Twitter Follow](https://img.shields.io/twitter/follow/getsentry?label=getsentry&style=social)](https://twitter.com/intent/follow?screen_name=getsentry)\n\n## License\n\nLicensed under the MIT license, see [`LICENSE`](LICENSE)\n"
        },
        {
          "name": "UPGRADE-2.0.md",
          "type": "blob",
          "size": 17.7685546875,
          "content": "# Upgrade from 1.10 to 2.0\n\nVersion `2.x` is a complete rewrite of the existing code base. The public API has been trimmed down to a minimum.\nThe preferred way of using the SDK is through our \"Static API\" / global functions.\n\nHere is a simple example to get started:\n\n```php\n\\Sentry\\init(['dsn' => '___PUBLIC_DSN___' ]);\n\n\\Sentry\\configureScope(function (\\Sentry\\State\\Scope $scope): void {\n     $scope->setTag('page_locale', 'de-at');\n     $scope->setUser(['email' => 'john.doe@example.com']);\n     $scope->setLevel(\\Sentry\\Severity::warning());\n     $scope->setExtra('character_name', 'Mighty Fighter');\n});\n\n// The following capture call will contain the data from the previous configured Scope\ntry {\n    thisFunctionThrows(); // -> throw new \\Exception('foo bar');\n} catch (\\Exception $exception) {\n    \\Sentry\\captureException($exception);\n}\n\n\\Sentry\\addBreadcrumb(new Breadcrumb(Breadcrumb::LEVEL_ERROR, Breadcrumb::TYPE_ERROR, 'error_reporting', 'Message'));\n```\n\nThe call to `\\Sentry\\init()` sets up global exception/error handlers and any uncaught error will be sent to Sentry.\nVersion `>= 2.0` conforms to the [Unified SDK API](https://docs.sentry.io/development/sdk-dev/unified-api/).\nIt has a fundamentally different concept, it's no longer recommended to just use a `Client` unless you really know what you are doing.\n\nPlease visit [our docs](https://docs.sentry.io/error-reporting/quickstart/?platform=php) to get a full overview.\n\n### Client options\n\n- The `exclude` option has been removed. \n\n- The `excluded_app_path` option has been renamed to `in_app_exclude`\n\n- The `send_callback` option has been renamed to `before_send`.\n\n- The `name` option has been renamed to `server_name`.\n\n- The `secret_key` option has been removed.\n\n- The `public_key` option has been removed.\n\n- The `message_limit` option has been removed.\n\n- The `project` option has been removed.\n\n- The `severity_map` option has been removed.\n\n- The `ignore_server_port` option has been removed.\n\n- The `trust_x_forwarded_proto` option has been removed.\n\n- The `mb_detect_order` option has been removed.\n\n- The `trace` option has been removed.\n\n- The `tags` option has been removed in favour of setting them in the scope.\n\n- The `site` option has been removed.\n\n- The `extra_data` option has been removed in favour of setting additional data\n  in the scope.\n\n- The `curl_method` option has been removed.\n\n- The `curl_path` option has been removed.\n\n- The `curl_ipv4` option has been removed.\n\n- The `curl_ssl_version` option has been removed.\n\n- The `verify_ssl` option has been removed.\n\n- The `ca_cert` option has been removed.\n\n- The `proxy` option has been removed in favour of leaving to the user the burden\n  of configuring the HTTP client options using a custom client.\n\n- The `processors` option has been removed.\n\n- The `processors_options` option has been removed.\n\n- The `transport` option has been removed in favour of setting it using the\n  client builder.\n\n- The `install_default_breadcrumb_handlers` option has been removed.\n\n- The `serialize_all_object` option has been removed.\n\n- The `context_lines` option has been added to configure the number of lines of\n  code context to capture.\n\n- The `max_value_length` option has been added to set an upper bound to the length\n  of serialized items.\n\n- The `server` option has been renamed to `dsn`.\n\n### Misc\n\n- All the classes have been renamed and moved around to follow the PSR-4\n  convention and `final` have been added where appropriate.\n\n- The `Raven_Autoloader` class has been removed. To install and use the\n  library you are required to use [Composer](https://getcomposer.org/).\n\n- The `Raven_Util` class has been removed.\n\n- The `Raven_Compat` class has been removed.\n\n- The `Raven_Util` class has been removed.\n\n- The `Raven_CurlHandler` class has been removed.\n\n- The `Raven_TransactionStack` class has been removed.\n\n- The `Raven_Exception` class has been removed.\n\n### Client\n\n- The constructor of the `Client` (before `Raven_Client`) class has changed its signature and\n  now requires to be passed a configuration object, an instance of a transport\n  and an event factory.\n\n  Before:\n\n  ```php\n  public function __construct($options_or_dsn = null, $options = array())\n  {\n      // ...\n  }\n  ```\n\n  After:\n\n  ```php\n  public function __construct(Options $options, TransportInterface $transport, EventFactoryInterface $eventFactory)\n  {\n      // ...\n  }\n  ```\n  \n The suggested way to create your own instance of the client is to use the provided builder (`ClientBuilder`) that will take care of instantiating a few dependencies like the PSR-7 factories and the HTTP client.\n\n- The method `Raven_Client::close_all_children_link` has been removed and there\n\n- The methods `Raven_Client::getRelease` and `Raven_Client::setRelease` have\n  been removed. You should use `Options::getRelease` and `Options::setRelease`\n  instead.\n\n  Before:\n\n  ```php\n  $client->getRelease();\n  $client->setRelease(...);\n  ```\n\n  After:\n\n  ```php\n  use Sentry\\State\\Hub;\n\n  $options = Hub::getCurrent()->getClient()->getOptions();\n\n  $options->getRelease();\n  $options->setRelease(...);\n  ```\n\n- The methods `Raven_Client::getEnvironment` and `Raven_Client::setEnvironment`\n  have been removed. You should use `Options::getEnvironment` and `Options::setEnvironment`\n  instead.\n\n  Before:\n\n  ```php\n  $client->getEnvironment();\n  $client->setEnvironment(...);\n  ```\n\n  After:\n\n  ```php\n  use Sentry\\State\\Hub;\n\n  $options = Hub::getCurrent()->getClient()->getOptions();\n\n  $options->getEnvironment();\n  $options->setEnvironment(...);\n  ```\n\n- The method `Raven_Client::getInputStream` has been removed.\n\n- The methods `Raven_Client::getDefaultPrefixes` and `Raven_Client::setPrefixes`\n  have been removed. You should use `Options::getPrefixes` and\n  `Options::setPrefixes` instead.\n\n  Before:\n\n  ```php\n  $client->getPrefixes();\n  $client->setPrefixes(...);\n  ```\n\n  After:\n\n  ```php\n  use Sentry\\State\\Hub;\n\n  $options = Hub::getCurrent()->getClient()->getOptions();\n\n  $options->getPrefixes();\n  $options->setPrefixes(...);\n  ```\n\n- The methods `Raven_Client::getAppPath` and `Raven_Client::setAppPath` have been\n  removed. You should use `Options::getProjectRoot` and `Options::setProjectRoot`\n  instead.\n\n  Before:\n\n  ```php\n  $client->getAppPath();\n  $client->setAppPath(...);\n  ```\n\n  After:\n\n  ```php\n  use Sentry\\State\\Hub;\n\n  $options = Hub::getCurrent()->getClient()->getOptions();\n\n  $options->getProjectRoot();\n  $options->setProjectRoot(...);\n  ```\n\n- The methods `Raven_Client::getExcludedAppPaths` and `Raven_Client::setExcludedAppPaths`\n  have been removed. You should use `Options::getInAppExcludedPaths`\n  and `Options::setInAppExcludedPaths` instead.\n\n  Before:\n\n  ```php\n  $client->getExcludedAppPaths();\n  $client->setExcludedAppPaths(...);\n  ```\n\n  After:\n\n  ```php\n  use Sentry\\State\\Hub;\n\n  $options = Hub::getCurrent()->getClient()->getOptions();\n\n  $options->getExcludedAppPaths();\n  $options->setExcludedAppPaths(...);\n  ```\n\n- The methods `Raven_Client::getSendCallback` and `Raven_Client::setSendCallback`\n  have been removed. You should use `Options::getBeforeSendCallback` and\n  `Options::setBeforeSendCallback` instead.\n\n  Before:\n\n  ```php\n  $client->getSendCallback();\n  $client->setSendCallback(...);\n  ```\n\n  After:\n\n  ```php\n  use Sentry\\State\\Hub;\n\n  $options = Hub::getCurrent()->getClient()->getOptions();\n\n  $options->getBeforeSendCallback();\n  $options->setBeforeSendCallback(...);\n\n- The method `Raven_Client::getServerEndpoint` has been removed. You should use\n  `Options::getDsn` instead.\n\n  Before:\n\n  ```php\n  $client->getServerEndpoint();\n  ```\n\n  After:\n\n  ```php\n  use Sentry\\State\\Hub;\n\n  $options = Hub::getCurrent()->getClient()->getOptions();\n\n  $options->getDsn();\n  ```\n\n- The methods `Raven_Client::getTransport` and `Raven_Client::setTransport` have\n  been removed. The transport is now a required dependency of the client and must\n  be passed as required constructor argument.\n\n- The method `Raven_Client::getUserAgent` has been removed.\n\n- The method `Raven_Client::getErrorTypes` has been removed. You should use\n  `Configuration::getErrorTypes` instead.\n\n  Before:\n\n  ```php\n  $client->getErrorTypes();\n  ```\n\n  After:\n\n  ```php\n  $client->getConfig()->getErrorTypes();\n  ```\n\n- The `Raven_Client::getDefaultProcessors` method has been removed.\n\n- The `Raven_Client::setProcessorsFromOptions` method has been removed.\n\n- The `Raven_Client::getLastEventID` method has been removed. The ID of the\n  last event that was captured is now returned by each of the `Client::capture*`\n  methods. You can also use `Hub::getCurrent()->getLastEventId()`.\n\n- The `Raven_Client::parseDSN` method has been removed.\n\n- The `Raven_Client::getLastError` method has been removed.\n\n- The `Raven_Client::getIdent` method has been removed.\n\n- The `Raven_Client::registerShutdownFunction` method has been removed.\n\n- The `Raven_Client::is_http_request` method has been removed.\n\n- The `Raven_Client::get_http_data` method has been removed.\n\n- The `Raven_Client::get_user_data` method has been removed.\n\n- The `Raven_Client::get_extra_data` method has been removed.\n\n- The `Raven_Client::get_default_data` method has been removed.\n\n- The `Raven_Client::message` method has been removed.\n\n- The `Raven_Client::exception` method has been removed.\n\n- The `Raven_Client::captureQuery` method has been removed.\n\n- The `Raven_Client::captureMessage` method has changed its signature.\n\n  Before:\n\n  ```php\n  public function captureMessage($message, $params = array(), $data = array(), $stack = false, $vars = null)\n  {\n      // ...\n  }\n  ```\n\n  After:\n\n  ```php\n  public function captureMessage(string $message, ?Severity $level = null, ?Scope $scope = null): ?string\n  {\n      // ...\n  }\n  ```\n\n- The `Raven_Client::captureException` method has changed its signature.\n\n  Before:\n\n  ```php\n  public function captureException($exception, $data = null, $logger = null, $vars = null)\n  {\n      // ...\n  }\n  ```\n\n  After:\n\n  ```php\n  public function captureException(\\Throwable $exception, ?Scope $scope = null): ?string\n  {\n      // ...\n  }\n  ```\n\n- The `Raven_Client::captureLastError` method has changed its signature.\n\n  Before:\n\n  ```php\n  public function captureLastError()\n  {\n      // ...\n  }\n  ```\n\n  After:\n\n  ```php\n  public function captureLastError(?Scope $scope = null): ?string\n  {\n      // ...\n  }\n  ```\n\n- The method `Raven_Client::capture` has been removed.\n\n- The method `Raven_Client::sanitize` has been removed.\n\n- The method `Raven_Client::process` has been removed.\n\n- The method `Raven_Client::sendUnsentErrors` has been removed.\n\n- The method `Raven_Client::encode` has been removed.\n\n- The method `Raven_Client::send` has been removed.\n\n- The method `Raven_Client::send_remote` has been removed.\n\n- The method `Raven_Client::get_default_ca_cert` has been removed.\n\n- The method `Raven_Client::get_curl_options` has been removed.\n\n- The method `Raven_Client::send_http` has been removed.\n\n- The method `Raven_Client::buildCurlCommand` has been removed.\n\n- The method `Raven_Client::send_http_asynchronous_curl_exec` has been removed.\n\n- The method `Raven_Client::send_http_synchronous` has been removed.\n\n- The method `Raven_Client::get_auth_header` has been removed.\n\n- The method `Raven_Client::getAuthHeader` has been removed.\n\n- The method `Raven_Client::uuid4` has been removed.\n\n- The method `Raven_Client::get_current_url` has been removed.\n\n- The method `Raven_Client::isHttps` has been removed.\n\n- The method `Raven_Client::translateSeverity` has been removed.\n\n- The method `Raven_Client::registerSeverityMap` has been removed.\n\n- The method `Raven_Client::set_user_data` has been removed.\n\n- The method `Raven_Client::onShutdown` has been removed.\n\n- The method `Raven_Client::createProcessors` has been removed.\n\n- The method `Raven_Client::setProcessors` has been removed.\n\n- The method `Raven_Client::getLastSentryError` has been removed.\n\n- The method `Raven_Client::getShutdownFunctionHasBeenSet` has been removed.\n\n- The method `Raven_Client::close_curl_resource` has been removed.\n\n- The method `Raven_Client::setSerializer` has been removed. You can set it\n  using the client builder.\n\n  Before:\n\n  ```php\n  $client = new Raven_Client();\n  $client->setSerializer(...);\n  ```\n\n  After:\n\n  ```php\n  use Sentry\\ClientBuilder;\n\n  $clientBuilder = ClientBuilder::create();\n  $clientBuilder->setSerializer(...);\n  ```\n\n- The method `Raven_Client::setReprSerializer` has been removed. You can set it\n  using the client builder.\n\n  Before:\n\n  ```php\n  $client = new Raven_Client();\n  $client->setSerializer(...);\n  ```\n\n  After:\n\n  ```php\n  use Sentry\\ClientBuilder;\n\n  $clientBuilder = ClientBuilder::create();\n  $clientBuilder->setRepresentationSerializer(...);\n  ```\n\n- The method `Raven_Client::cleanup_php_version` has been removed.\n\n- The method `Raven_Client::registerDefaultBreadcrumbHandlers` has been removed.\n\n- The `Raven_Client::user_context` method has been removed. You can set this\n  data in the current active scope.\n\n  Before:\n\n  ```php\n  $client->user_context(array('foo', 'bar'));\n  ```\n\n  After:\n\n  ```php\n  use Sentry\\State\\Hub;\n  use Sentry\\State\\Scope;\n\n  Hub::getCurrent()->configureScope(function (Scope $scope): void {\n      $scope->setUser(['email' => 'foo@example.com']);\n  });\n  ```\n\n- The `Raven_Client::tags_context` method has been removed. You can set this\n  data in the current active scope.\n\n  Before:\n\n  ```php\n  $client->tags_context(array('foo', 'bar'));\n  ```\n\n  After:\n\n  ```php\n  use Sentry\\State\\Hub;\n  use Sentry\\State\\Scope;\n\n  Hub::getCurrent()->configureScope(function (Scope $scope): void {\n      $scope->setTag('tag_name', 'tag_value');\n  });\n  ```\n\n- The `Raven_Client::extra_context` method has been removed. You can set this\n  data in the current active scope.\n\n  Before:\n\n  ```php\n  $client->extra_context(array('foo' => 'bar'));\n  ```\n\n  After:\n\n  ```php\n  use Sentry\\State\\Hub;\n  use Sentry\\State\\Scope;\n\n  Hub::getCurrent()->configureScope(function (Scope $scope): void {\n      $scope->setExtra('extra_key', 'extra_value');\n  });\n  ```\n\n- The method `Raven_Client::install` has been removed. The error handler is\n  registered automatically when using the `ExceptionListenerIntegration` \n  and `ErrorListenerIntegration` integrations (which are enabled by default).\n\n### Processors\n\n- The `Raven_Processor_RemoveCookiesProcessor` class has been removed.\n\n- The `Raven_Processor_SanitizeStacktraceProcessor` class has been removed.\n\n- The `Raven_Processor_SanitizeHttpHeadersProcessor` class has been removed.\n\n- The `Raven_Processor_RemoveHttpBodyProcessor` class has been removed.\n\n- The `Raven_Processor_SanitizeDataProcessor` class has been removed.\n\n- The `Raven_Processor` class has been removed.\n\n### Context\n\n- The `Raven_Context` class has been renamed to `Context`.\n\n- The `tags`, `extra` and `user` properties of the `Raven_Context` class have\n  been removed. Each instance of the new class represents now a single context\n  type at once.\n\n## Error handlers\n\n- The `Raven_Breadcrumbs_ErrorHandler` class has been removed.\n\n- The `Raven_Breadcrumbs_MonologHandler` class has been removed.\n\n- The `Raven_ErrorHandler` class has been renamed to `ErrorHandler` and has\n  been made `final`.\n\n- The method `Raven_ErrorHandler::handleError` has changed its signature by removing\n  the `$context` argument and it has been marked as `internal` to make it clear that\n  it should not be called publicly and its method visibility is subject to changes\n  without any notice.\n\n- The methods `Raven_ErrorHandler::registerErrorHandler`, `Raven_ErrorHandler::registerExceptionHandler`\n  and `Raven_ErrorHandler::registerShutdownFunction` have been removed. You should\n  use the `ErrorHandler::register` method instead, but note that it registers all\n  error handlers (error, exception and fatal error) at once and there is no way\n  anymore to only use one of them.\n\n  Before:\n\n  ```php\n  $errorHandler = new Raven_ErrorHandler($client);\n  $errorHandler->registerErrorHandler();\n  $errorHandler->registerExceptionHandler();\n  $errorHandler->registerShutdownFunction();\n  ```\n\n  After:\n\n  ```php\n  use Sentry\\ErrorHandler;\n\n  ErrorHandler::register(function (\\Throwable $exception): void {\n      // ...\n  });\n  ```\n\n- The method `Raven_ErrorHandler::handleError` has changed its signature by\n  removing the `$context` argument and it has been marked as `internal` to\n  make it clear that it should not be called publicly and its method visibility\n  is subject to changes without any notice.\n\n- The method `Raven_ErrorHandler::handleFatalError` has changed its signature\n  by adding an optional argument named `$error` and it has been marked as `internal`\n  to make it clear that it should not be called publicly and its method visibility\n  is subject to changes without any notice.\n\n- The method `Raven_ErrorHandler::handleException` has changed its signature by\n  removing the `$isError` and `$vars` arguments and it has been marked as `internal`\n  to make it clear that it should not be called publicly and its method visibility\n  is subject to changes without any notice.\n\n- The method `Raven_ErrorHandler::bitwiseOr` has been removed and there is no\n  replacement for it.\n\n- The method `Raven_ErrorHandler::shouldCaptureFatalError` has been removed and\n  there is no replacement for it.\n\n### Serializers\n\n- The `Raven_Serializer` class has been renamed to `Serializer` and its constructor\n  changed signature.\n\n  Before:\n\n  ```php\n  public function __construct($mb_detect_order = null, $message_limit = null)\n  {\n      // ...\n  }\n  ```\n\n  After:\n\n  ```php\n  public function __construct(int $maxDepth = 3, ?string $mbDetectOrder = null, int $messageLimit = Client::MESSAGE_MAX_LENGTH_LIMIT)\n  {\n      // ...\n  }\n  ```\n\n- The `Raven_ReprSerializer` class has been renamed to `RepresentationSerializer`\n  and its constructor changed signature.\n\n  Before:\n\n  ```php\n  public function __construct($mb_detect_order = null, $message_limit = null)\n  {\n      // ...\n  }\n  ```\n\n  After:\n\n  ```php\n  public function __construct(int $maxDepth = 3, ?string $mbDetectOrder = null, int $messageLimit = Client::MESSAGE_MAX_LENGTH_LIMIT)\n  {\n      // ...\n  }\n  ```\n"
        },
        {
          "name": "UPGRADE-3.0.md",
          "type": "blob",
          "size": 7.4560546875,
          "content": "# Upgrade 2.x to 3.0\n\n- Removed the `HubInterface::getCurrentHub()` and `HubInterface::setCurrentHub()` methods. Use `SentrySdk::getCurrentHub()` and `SentrySdk::setCurrentHub()` instead\n- Removed the `ErrorHandler::registerOnce()` method, use `ErrorHandler::register*Handler()` instead\n- Removed the `ErrorHandler::addErrorListener` method, use `ErrorHandler::addErrorHandlerListener()` instead\n- Removed the `ErrorHandler::addFatalErrorListener` method, use `ErrorHandler::addFatalErrorHandlerListener()` instead\n- Removed the `ErrorHandler::addExceptionListener` method, use `ErrorHandler::addExceptionHandlerListener()` instead\n- The signature of the `ErrorListenerIntegration::__construct()` method changed to not accept any parameter\n- The signature of the `FatalErrorListenerIntegration::__construct()` method changed to not accept any parameter\n- The `ErrorListenerIntegration` integration does not get called anymore when a fatal error occurs\n- The default value of the `error_types` option changed to the value get from `error_reporting()`\n- The signature of the `capture*()` global functions changed to return an instance of the `EventId` class instead of a `string`\n- The signature of the `ClientInterface::capture*()` methods changed to return an instance of the `EventId` class instead of a `string`\n- The signature of the `HubInterface::capture*e()` methods changed to return an instance of the `EventId` class instead of a `string`\n- The signature of the `Event::getId()` method changed to return an instance of the `EventId` class instead of a `string`\n- The signature of the `Options::getDsn()` method changed to always return an instance of the `Dsn` class instead of a `string`\n- Removed the `Options::getProjectId`, `Options::getPublicKey` and `Options::getSecretKey` methods, use `Options::getDsn()` instead\n- Removed the `Breadcrumb::LEVEL_CRITICAL` constant, use `Breadcrumb::LEVEL_FATAL` instead\n- Removed the `Breadcrumb::levelFromErrorException()` method\n- Removed the `PluggableHttpClientFactory` class\n- Removed the following methods from the `ClientBuilderInterface` interface, use `ClientBuilderInterface::setTransportFactory()` instead:\n  - `ClientBuilderInterface::setUriFactory()`\n  - `ClientBuilderInterface::setMessageFactory()`\n  - `ClientBuilderInterface::setTransport()`\n  - `ClientBuilderInterface::setHttpClient()`\n  - `ClientBuilderInterface::addHttpClientPlugin()`\n  - `ClientBuilderInterface::removeHttpClientPlugin()`.\n- Removed the following methods from the `Options` class, use the `IgnoreErrorsIntegration` integration instead:\n  - `Options::getExcludedExceptions()`\n  - `Options::setExcludedExceptions()`\n  - `Options::isExcludedException()`\n  - `Options::getProjectRoot()`\n  - `Options::setProjectRoot()`\n- Removed the `Context::CONTEXT_USER`, `Context::CONTEXT_RUNTIME`, `Context::CONTEXT_TAGS`, `Context::CONTEXT_EXTRA`, `Context::CONTEXT_SERVER_OS` constants\n- The signature of the `Scope::setUser()` method changed to `setUser(array|Sentry\\UserDataBag $user)`\n- The signature of the `TransportInterface::send()` method changed to return a promise instead of the event ID\n- The signature of the `HttpClientFactory::__construct()` method changed to accept instances of the PSR-17 factories in place of Httplug's ones\n- The signature of the `DefaultTransportFactory::__construct()` method changed to accept instances of the PSR-17 factories in place of Httplug's ones\n- The signature of the `GzipEncoderPlugin::__construct()` method changed to accept an instance of the `Psr\\Http\\Message\\StreamFactoryInterface` interface only\n- The Monolog handler does not set anymore the tags and extras on the event by extracting automatically the data from the record payload. You can decorate the\n  class and set such data on the scope as shown below:\n\n  ```php\n  use Monolog\\Handler\\HandlerInterface;\n  use Sentry\\State\\Scope;\n  use function Sentry\\withScope;\n\n  final class MonologHandler implements HandlerInterface\n  {\n      private $decoratedHandler;\n\n      public function __construct(HandlerInterface $decoratedHandler)\n      {\n          $this->decoratedHandler = $decoratedHandler;\n      }\n\n      public function isHandling(array $record): bool\n      {\n          return $this->decoratedHandler->isHandling($record);\n      }\n\n      public function handle(array $record): bool\n      {\n          $result = false;\n\n          withScope(function (Scope $scope) use ($record, &$result): void {\n              $scope->setTags(...);\n              $scope->setExtras(...);\n\n              $result = $this->decoratedHandler->handle($record);\n          });\n\n          return $result;\n      }\n\n      public function handleBatch(array $records): void\n      {\n          $this->decoratedHandler->handleBatch($records);\n      }\n\n      public function close(): void\n      {\n          $this->decoratedHandler->close();\n      }\n  }\n  ```\n\n- Removed the `TagsContext`, `ExtraContext` and `Context` classes, data is now stored in a plain array\n- Renamed the `ServerOsContext` class to `OsContext`\n- The `OsContext` and `RuntimeContext` classes do not implement anymore the `ArrayAccess`, `IteratorAggregate` and `JsonSerializable` interfaces and became `final`\n- The following methods have been removed from the `OsContext` and `RuntimeContext` classes:\n  - `*Context::merge()`\n  - `*Context::setData()`\n  - `*Context::replaceData()`\n  - `*Context::clear()`\n  - `*Context::isEmpty()`\n  - `*Context::toArray()`\n- Removed the `UserContext` class, use `UserDataBag` instead\n- The signature of the constructor of the `RuntimeContext` class changed to `RuntimeContext::__construct(string $name, ?string $version = null)`\n- The signature of the constructor of the `OsContext` class changed to `OsContext::__construct(string $name, ?string $version = null, ?string $build = null, ?string $kernelVersion = null)`\n- Removed the `Event::getExtraContext()` method, use `Event::getExtra()` instead\n- Removed the `Event::getTagsContext()` method, use `Event::getTags()` instead\n- Removed the `Event::getUserContext()` method, use `Event::getUser()` instead\n- Renamed the `Event::getServerOsContext()` method to `Event::getOsContext()`\n- The signature of the `Scope::setUser()` method changed to accept a plain array\n- Removed the `FlushableClientInterface` and `ClosableTransportInterface` interfaces. Their methods have been moved to the corresponding `ClientInterface` and `TransportInterface` interfaces\n- Removed the `Event::toArray()` and `Event::jsonSerialize()` methods, use `PayloadSerializerInterface::serialize()` instead\n- Removed the `Breadcrumb::toArray()` and `Breadcrumb::jsonSerialize()` methods\n- Removed the `Frame::toArray()` and `Frame::jsonSerialize()` methods\n- Removed the `Stacktrace::toArray()` and `Stacktrace::jsonSerialize()` methods\n- Removed the `SpoolTransport` class and the `SpoolInterface` interface with related implementation\n- Made the `Event::__construct()` method `private`, use the named constructors instead\n- The signature of `ClientInterface::captureEvent()` changed to `ClientInterface::captureEvent(Event $event, ?EventHint $hint = null, ?Scope $scope = null)`\n- The signature of `HubInterface::captureEvent()` changed to `HubInterface::captureEvent(Event $event, ?EventHint $hint = null)`\n- The signature of `captureEvent()` changed to `captureEvent(Event $event, ?EventHint $hint = null)`\n- The signature of `Scope::applyToEvent()` changed to `Scope::applyToEvent(Event $event, ?EventHint $hint = null)`\n- Global and scope event processors will now receive a `EventHint` as the second parameter, callable should now have the signature `callable(Event $event, EventHint $hint)`\n"
        },
        {
          "name": "UPGRADE-4.0.md",
          "type": "blob",
          "size": 3.1279296875,
          "content": "# Upgrade 3.x to 4.0\n\n- This version exclusively uses the [envelope endpoint](https://develop.sentry.dev/sdk/envelopes/) to send event data to Sentry.\n\n  If you are using [sentry.io](https://sentry.io), no action is needed.\n  If you are using an on-premise/self-hosted installation of Sentry, the minimum requirement is now version `>= v20.6.0`.\n\n- Added `ext-curl` as a composer requirement.\n\n- The `IgnoreErrorsIntegration` integration was removed. Use the `ignore_exceptions` option instead.\n\n  ```php\n  Sentry\\init([\n      'ignore_exceptions' => [BadThingsHappenedException::class],\n  ]);\n  ```\n\n  This option performs an [`is_a`](https://www.php.net/manual/en/function.is-a.php) check, so you can also ignore more generic exceptions.\n\n- Removed support for `symfony/options-resolver: ^3.4.43`.\n\n- The `RequestFetcher` now relies on `guzzlehttp/psr7: ^1.8.4|^2.1.1`.\n\n- Added new methods to `ClientInterface`\n\n  ```php\n  public function getCspReportUrl(): ?string;\n\n  public function getStacktraceBuilder(): StacktraceBuilder;\n  ```\n\n- Added new methods to `HubInterface`\n\n  ```php\n  public function captureCheckIn(string $slug, CheckInStatus $status, $duration = null, ?MonitorConfig $monitorConfig = null, ?string $checkInId = null): ?string;\n  ```\n\n- The new default value for the `trace_propagation_targets` option is now `null`. To not attach any headers to outgoing requests, using the `GuzzleTracingMiddleware`, set this option to `[]`.\n- The `ignore_exceptions` option now performs a `is_a` check on the provided class strings.\n- The `send_attempts` option was removed. You may implement a custom transport if you rely on this behaviour.\n- The `enable_compression` option was removed. Use `http_compression` instead.\n- The `logger` option now accepts a `Psr\\Log\\LoggerInterface` instance instead of `string`.\n\n- Removed `Options::getSendAttempts/setSendAttempts()`.\n- Removed `Options::isCompressionEnabled/setEnableCompression()`. Use `Options::isHttpCompressionEnabled/setEnableHttpCompression()` instead.\n- Removed `SpanContext::fromTraceparent()`. Use `Sentry\\continueTrace()` instead.\n- Removed `TransactionContext::fromSentryTrace()`. Use `Sentry\\continueTrace()` instead.\n- Removed `Sentry\\Exception\\InvalidArgumentException`. Use `\\InvalidArgumentException` instead.\n- Removed `Sentry\\Exception/ExceptionInterface`.\n- Removed `ClientBuilderInterface()`.\n- Removed `ClientBuilder::setSerializer()`.\n- Removed `ClientBuilder::setTransportFactory()`. You can set a custom transport via the `transport` option.\n- Removed `Client::__construct()` parameter `SerializerInterface $serializer`.\n- Removed `TransportFactoryInterface`.\n- Removed `DefaultTransportFactory`.\n- Removed `HttpClientFactoryInterface`.\n- Removed `HttpClientFactory`.\n- Removed `NullTransport`.\n- Removed `Dsn::getSecretKey()`.\n- Removed `Dsn::setSecretKey()`.\n- Removed `EventType::default()`.\n- Removed adding the value of the `logger` option as a tag on the event. If you rely on this behaviour, add the tag manually.\n\n- Added return type to `Dsn::getProjectId(): string`.\n- Changed return type to `Options::getLogger(): ?LoggerInterface`.\n- Changed parameter type of `Options::setLogger(LoggerInterface $logger)`.\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.126953125,
          "content": "comment: false\nignore:\n  - tests/data\n  - tests/resources\n  - tests/Fixtures\n\ncoverage:\n  status:\n    project: off\n    patch: off\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.1201171875,
          "content": "{\n    \"name\": \"sentry/sentry\",\n    \"type\": \"library\",\n    \"description\": \"PHP SDK for Sentry (http://sentry.io)\",\n    \"keywords\": [\n        \"sentry\",\n        \"log\",\n        \"logging\",\n        \"error-monitoring\",\n        \"error-handler\",\n        \"crash-reporting\",\n        \"crash-reports\",\n        \"profiling\",\n        \"tracing\"\n    ],\n    \"homepage\": \"http://sentry.io\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Sentry\",\n            \"email\": \"accounts@sentry.io\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^7.2|^8.0\",\n        \"ext-json\": \"*\",\n        \"ext-mbstring\": \"*\",\n        \"ext-curl\": \"*\",\n        \"guzzlehttp/psr7\": \"^1.8.4|^2.1.1\",\n        \"jean85/pretty-package-versions\": \"^1.5|^2.0.4\",\n        \"psr/log\": \"^1.0|^2.0|^3.0\",\n        \"symfony/options-resolver\": \"^4.4.30|^5.0.11|^6.0|^7.0\"\n    },\n    \"require-dev\": {\n        \"friendsofphp/php-cs-fixer\": \"^3.4\",\n        \"guzzlehttp/promises\": \"^2.0.3\",\n        \"guzzlehttp/psr7\": \"^1.8.4|^2.1.1\",\n        \"monolog/monolog\": \"^1.6|^2.0|^3.0\",\n        \"phpbench/phpbench\": \"^1.0\",\n        \"phpstan/phpstan\": \"^1.3\",\n        \"phpunit/phpunit\": \"^8.5|^9.6\",\n        \"symfony/phpunit-bridge\": \"^5.2|^6.0|^7.0\",\n        \"vimeo/psalm\": \"^4.17\"\n    },\n    \"suggest\": {\n        \"monolog/monolog\": \"Allow sending log messages to Sentry by using the included Monolog handler.\"\n    },\n    \"conflict\": {\n        \"raven/raven\": \"*\"\n    },\n    \"autoload\": {\n        \"files\": [\n            \"src/functions.php\"\n        ],\n        \"psr-4\": {\n            \"Sentry\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Sentry\\\\Tests\\\\\": \"tests/\"\n        }\n    },\n    \"scripts\": {\n        \"check\": [\n            \"@cs-check\",\n            \"@phpstan\",\n            \"@psalm\",\n            \"@tests\"\n        ],\n        \"tests\": \"vendor/bin/phpunit --verbose\",\n        \"cs-check\": \"vendor/bin/php-cs-fixer fix --verbose --diff --dry-run\",\n        \"cs-fix\": \"vendor/bin/php-cs-fixer fix --verbose --diff\",\n        \"phpstan\": \"vendor/bin/phpstan analyse\",\n        \"psalm\": \"vendor/bin/psalm\"\n    },\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"prefer-stable\": true\n}\n"
        },
        {
          "name": "phpbench.json",
          "type": "blob",
          "size": 0.181640625,
          "content": "{\n    \"$schema\":\"./vendor/phpbench/phpbench/phpbench.schema.json\",\n    \"runner.bootstrap\": \"vendor/autoload.php\",\n    \"runner.retry_threshold\": 2,\n    \"runner.path\": \"tests/Benchmark\"\n}\n"
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 12.8740234375,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Client\\\\:\\\\:getIntegration\\\\(\\\\) should return \\\\(T of Sentry\\\\\\\\Integration\\\\\\\\IntegrationInterface\\\\)\\\\|null but returns \\\\(T of Sentry\\\\\\\\Integration\\\\\\\\IntegrationInterface\\\\)\\\\|null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Client.php\n\n\t\t-\n\t\t\tmessage: \"#^Offset 'host' does not exist on array\\\\{scheme\\\\: 'http'\\\\|'https', host\\\\?\\\\: string, port\\\\?\\\\: int\\\\<0, 65535\\\\>, user\\\\?\\\\: string, pass\\\\?\\\\: string, path\\\\?\\\\: string, query\\\\?\\\\: string, fragment\\\\?\\\\: string\\\\}\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Dsn.php\n\n\t\t-\n\t\t\tmessage: \"#^Offset 'path' does not exist on array\\\\{scheme\\\\: 'http'\\\\|'https', host\\\\?\\\\: string, port\\\\?\\\\: int\\\\<0, 65535\\\\>, user\\\\?\\\\: string, pass\\\\?\\\\: string, path\\\\?\\\\: string, query\\\\?\\\\: string, fragment\\\\?\\\\: string\\\\}\\\\.$#\"\n\t\t\tcount: 4\n\t\t\tpath: src/Dsn.php\n\n\t\t-\n\t\t\tmessage: \"#^Offset 'scheme' does not exist on array\\\\{scheme\\\\?\\\\: string, host\\\\?\\\\: string, port\\\\?\\\\: int\\\\<0, 65535\\\\>, user\\\\?\\\\: string, pass\\\\?\\\\: string, path\\\\?\\\\: string, query\\\\?\\\\: string, fragment\\\\?\\\\: string\\\\}\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Dsn.php\n\n\t\t-\n\t\t\tmessage: \"#^Offset 'user' does not exist on array\\\\{scheme\\\\: 'http'\\\\|'https', host\\\\?\\\\: string, port\\\\?\\\\: int\\\\<0, 65535\\\\>, user\\\\?\\\\: string, pass\\\\?\\\\: string, path\\\\?\\\\: string, query\\\\?\\\\: string, fragment\\\\?\\\\: string\\\\}\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Dsn.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Event\\\\:\\\\:getMetrics\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Event.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Event\\\\:\\\\:getMetricsSummary\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Event.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Event\\\\:\\\\:setMetrics\\\\(\\\\) has parameter \\\\$metrics with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Event.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Event\\\\:\\\\:setMetricsSummary\\\\(\\\\) has parameter \\\\$metricsSummary with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Event.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Sentry\\\\\\\\Integration\\\\\\\\RequestIntegration\\\\:\\\\:\\\\$options \\\\(array\\\\{pii_sanitize_headers\\\\: array\\\\<string\\\\>\\\\}\\\\) does not accept array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Integration/RequestIntegration.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#2 \\\\.\\\\.\\\\.\\\\$values of function sprintf expects bool\\\\|float\\\\|int\\\\|string\\\\|null, mixed given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Logger/DebugFileLogger.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#2 \\\\.\\\\.\\\\.\\\\$values of function sprintf expects bool\\\\|float\\\\|int\\\\|string\\\\|null, mixed given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Logger/DebugStdOutLogger.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$level of method Monolog\\\\\\\\Handler\\\\\\\\AbstractHandler\\\\:\\\\:__construct\\\\(\\\\) expects 100\\\\|200\\\\|250\\\\|300\\\\|400\\\\|500\\\\|550\\\\|600\\\\|'ALERT'\\\\|'alert'\\\\|'CRITICAL'\\\\|'critical'\\\\|'DEBUG'\\\\|'debug'\\\\|'EMERGENCY'\\\\|'emergency'\\\\|'ERROR'\\\\|'error'\\\\|'INFO'\\\\|'info'\\\\|'NOTICE'\\\\|'notice'\\\\|'WARNING'\\\\|'warning'\\\\|Monolog\\\\\\\\Level, int\\\\|Monolog\\\\\\\\Level\\\\|string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/BreadcrumbHandler.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getBeforeBreadcrumbCallback\\\\(\\\\) should return callable\\\\(Sentry\\\\\\\\Breadcrumb\\\\)\\\\: \\\\(Sentry\\\\\\\\Breadcrumb\\\\|null\\\\) but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getBeforeSendCallback\\\\(\\\\) should return callable\\\\(Sentry\\\\\\\\Event, Sentry\\\\\\\\EventHint\\\\|null\\\\)\\\\: \\\\(Sentry\\\\\\\\Event\\\\|null\\\\) but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getBeforeSendCheckInCallback\\\\(\\\\) should return callable\\\\(Sentry\\\\\\\\Event, Sentry\\\\\\\\EventHint\\\\|null\\\\)\\\\: \\\\(Sentry\\\\\\\\Event\\\\|null\\\\) but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getBeforeSendMetricsCallback\\\\(\\\\) should return callable\\\\(Sentry\\\\\\\\Event, Sentry\\\\\\\\EventHint\\\\|null\\\\)\\\\: \\\\(Sentry\\\\\\\\Event\\\\|null\\\\) but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getBeforeSendTransactionCallback\\\\(\\\\) should return callable\\\\(Sentry\\\\\\\\Event, Sentry\\\\\\\\EventHint\\\\|null\\\\)\\\\: \\\\(Sentry\\\\\\\\Event\\\\|null\\\\) but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getClassSerializers\\\\(\\\\) should return array\\\\<string, callable\\\\(\\\\)\\\\: mixed\\\\> but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getContextLines\\\\(\\\\) should return int\\\\|null but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getDsn\\\\(\\\\) should return Sentry\\\\\\\\Dsn\\\\|null but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getEnableTracing\\\\(\\\\) should return bool\\\\|null but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getEnvironment\\\\(\\\\) should return string\\\\|null but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getErrorTypes\\\\(\\\\) should return int but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getHttpClient\\\\(\\\\) should return Sentry\\\\\\\\HttpClient\\\\\\\\HttpClientInterface\\\\|null but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getHttpConnectTimeout\\\\(\\\\) should return float but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getHttpProxy\\\\(\\\\) should return string\\\\|null but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getHttpProxyAuthentication\\\\(\\\\) should return string\\\\|null but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getHttpSslNativeCa\\\\(\\\\) should return bool but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getHttpSslVerifyPeer\\\\(\\\\) should return bool but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getHttpTimeout\\\\(\\\\) should return float but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getIgnoreExceptions\\\\(\\\\) should return array\\\\<int, class\\\\-string\\\\<Throwable\\\\>\\\\> but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getIgnoreTransactions\\\\(\\\\) should return array\\\\<string\\\\> but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getInAppExcludedPaths\\\\(\\\\) should return array\\\\<string\\\\> but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getInAppIncludedPaths\\\\(\\\\) should return array\\\\<string\\\\> but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getIntegrations\\\\(\\\\) should return array\\\\<Sentry\\\\\\\\Integration\\\\\\\\IntegrationInterface\\\\>\\\\|\\\\(callable\\\\(array\\\\<Sentry\\\\\\\\Integration\\\\\\\\IntegrationInterface\\\\>\\\\)\\\\: array\\\\<Sentry\\\\\\\\Integration\\\\\\\\IntegrationInterface\\\\>\\\\) but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getLogger\\\\(\\\\) should return Psr\\\\\\\\Log\\\\\\\\LoggerInterface\\\\|null but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getMaxBreadcrumbs\\\\(\\\\) should return int but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getMaxRequestBodySize\\\\(\\\\) should return string but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getMaxValueLength\\\\(\\\\) should return int but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getPrefixes\\\\(\\\\) should return array\\\\<string\\\\> but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getRelease\\\\(\\\\) should return string\\\\|null but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getSampleRate\\\\(\\\\) should return float but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getServerName\\\\(\\\\) should return string but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getSpotlightUrl\\\\(\\\\) should return string but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getTags\\\\(\\\\) should return array\\\\<string, string\\\\> but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getTracePropagationTargets\\\\(\\\\) should return array\\\\<string\\\\>\\\\|null but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getTracesSampleRate\\\\(\\\\) should return float\\\\|null but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getTracesSampler\\\\(\\\\) should return \\\\(callable\\\\(Sentry\\\\\\\\Tracing\\\\\\\\SamplingContext\\\\)\\\\: float\\\\)\\\\|null but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:getTransport\\\\(\\\\) should return Sentry\\\\\\\\Transport\\\\\\\\TransportInterface\\\\|null but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:hasDefaultIntegrations\\\\(\\\\) should return bool but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:isHttpCompressionEnabled\\\\(\\\\) should return bool but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:shouldAttachMetricCodeLocations\\\\(\\\\) should return bool but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:shouldAttachStacktrace\\\\(\\\\) should return bool but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:shouldCaptureSilencedErrors\\\\(\\\\) should return bool but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Options\\\\:\\\\:shouldSendDefaultPii\\\\(\\\\) should return bool but returns mixed\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: \"#^Argument of an invalid type object supplied for foreach, only iterables are supported\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Serializer/AbstractSerializer.php\n\n\t\t-\n\t\t\tmessage: \"#^Cannot cast mixed to string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Serializer/AbstractSerializer.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to method getResponse\\\\(\\\\) on an unknown class GuzzleHttp\\\\\\\\Exception\\\\\\\\RequestException\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tracing/GuzzleTracingMiddleware.php\n\n\t\t-\n\t\t\tmessage: \"#^Class GuzzleHttp\\\\\\\\Exception\\\\\\\\RequestException not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tracing/GuzzleTracingMiddleware.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Tracing\\\\\\\\Span\\\\:\\\\:getMetricsSummary\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tracing/Span.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Tracing\\\\\\\\Span\\\\:\\\\:setMetricsSummary\\\\(\\\\) has parameter \\\\$tags with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tracing/Span.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Tracing\\\\\\\\Span\\\\:\\\\:setMetricsSummary\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Tracing/Span.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$email of method Sentry\\\\\\\\UserDataBag\\\\:\\\\:setEmail\\\\(\\\\) expects string\\\\|null, mixed given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/UserDataBag.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$id of method Sentry\\\\\\\\UserDataBag\\\\:\\\\:setId\\\\(\\\\) expects int\\\\|string\\\\|null, mixed given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/UserDataBag.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$ipAddress of method Sentry\\\\\\\\UserDataBag\\\\:\\\\:setIpAddress\\\\(\\\\) expects string\\\\|null, mixed given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/UserDataBag.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$segment of method Sentry\\\\\\\\UserDataBag\\\\:\\\\:setSegment\\\\(\\\\) expects string\\\\|null, mixed given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/UserDataBag.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$username of method Sentry\\\\\\\\UserDataBag\\\\:\\\\:setUsername\\\\(\\\\) expects string\\\\|null, mixed given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/UserDataBag.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Sentry\\\\\\\\Util\\\\\\\\JSON\\\\:\\\\:encode\\\\(\\\\) should return string but returns string\\\\|false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Util/JSON.php\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.31640625,
          "content": "includes:\n    - phpstan-baseline.neon\n\nparameters:\n    tipsOfTheDay: false\n    treatPhpDocTypesAsCertain: false\n    level: 9\n    paths:\n        - src\n    excludePaths:\n        - tests/resources\n        - tests/Fixtures\n    dynamicConstantNames:\n        - Monolog\\Logger::API\n    bootstrapFiles:\n        - stubs/autoload.php\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 1.18359375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n         backupGlobals=\"true\"\n         colors=\"true\"\n         bootstrap=\"tests/bootstrap.php\"\n         cacheResult=\"false\"\n         beStrictAboutOutputDuringTests=\"true\"\n>\n    <php>\n        <env name=\"SYMFONY_DEPRECATIONS_HELPER\" value=\"max[self]=0\" />\n    </php>\n\n    <testsuites>\n        <testsuite name=\"unit\">\n            <directory>tests</directory>\n            <directory suffix=\".phpt\">tests/phpt</directory>\n        </testsuite>\n\n        <testsuite name=\"oom\">\n            <directory suffix=\".phpt\">tests/phpt-oom</directory>\n        </testsuite>\n    </testsuites>\n\n    <coverage>\n        <include>\n            <directory suffix=\".php\">src</directory>\n        </include>\n    </coverage>\n\n    <filter>\n        <whitelist>\n            <directory suffix=\".php\">src</directory>\n        </whitelist>\n    </filter>\n\n    <listeners>\n        <listener class=\"\\Symfony\\Bridge\\PhpUnit\\SymfonyTestsListener\" />\n    </listeners>\n\n    <extensions>\n        <extension class=\"Sentry\\Tests\\SentrySdkExtension\" />\n    </extensions>\n</phpunit>\n"
        },
        {
          "name": "psalm-baseline.xml",
          "type": "blob",
          "size": 3.73828125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<files psalm-version=\"4.30.0@d0bc6e25d89f649e4f36a534f330f8bb4643dd69\">\n  <file src=\"src/Dsn.php\">\n    <PossiblyUndefinedArrayOffset occurrences=\"4\">\n      <code>$parsedDsn['host']</code>\n      <code>$parsedDsn['path']</code>\n      <code>$parsedDsn['scheme']</code>\n      <code>$parsedDsn['user']</code>\n    </PossiblyUndefinedArrayOffset>\n  </file>\n  <file src=\"src/HttpClient/HttpClientFactory.php\">\n    <UndefinedClass occurrences=\"5\">\n      <code>Guzzle6HttpClient</code>\n      <code>GuzzleHttpClientOptions</code>\n      <code>GuzzleHttpClientOptions</code>\n      <code>GuzzleHttpClientOptions</code>\n      <code>SymfonyHttpClient</code>\n    </UndefinedClass>\n  </file>\n  <file src=\"src/Integration/IntegrationRegistry.php\">\n    <PossiblyInvalidArgument occurrences=\"2\">\n      <code>$userIntegration</code>\n      <code>$userIntegrations</code>\n    </PossiblyInvalidArgument>\n  </file>\n  <file src=\"src/Monolog/BreadcrumbHandler.php\">\n    <PossiblyInvalidArgument occurrences=\"4\">\n      <code>$record['channel']</code>\n      <code>$record['level']</code>\n      <code>$record['level']</code>\n      <code>$record['message']</code>\n    </PossiblyInvalidArgument>\n    <PossiblyInvalidMethodCall occurrences=\"1\">\n      <code>getTimestamp</code>\n    </PossiblyInvalidMethodCall>\n    <UndefinedDocblockClass occurrences=\"2\">\n      <code>Level|int</code>\n      <code>int|string|Level|LogLevel::*</code>\n    </UndefinedDocblockClass>\n  </file>\n  <file src=\"src/Monolog/CompatibilityProcessingHandlerTrait.php\">\n    <DuplicateClass occurrences=\"1\">\n      <code>CompatibilityProcessingHandlerTrait</code>\n    </DuplicateClass>\n    <UndefinedClass occurrences=\"1\">\n      <code>Level</code>\n    </UndefinedClass>\n  </file>\n  <file src=\"src/Monolog/Handler.php\">\n    <PossiblyInvalidArgument occurrences=\"3\">\n      <code>$record['channel']</code>\n      <code>$record['level']</code>\n      <code>$record['message']</code>\n    </PossiblyInvalidArgument>\n    <PossiblyInvalidArrayOffset occurrences=\"1\">\n      <code>$record['context']['exception']</code>\n    </PossiblyInvalidArrayOffset>\n    <PossiblyUndefinedMethod occurrences=\"2\">\n      <code>$record['context']</code>\n      <code>$record['context']</code>\n    </PossiblyUndefinedMethod>\n  </file>\n  <file src=\"src/Profiling/Profile.php\">\n    <LessSpecificReturnStatement occurrences=\"1\"/>\n    <MoreSpecificReturnType occurrences=\"1\">\n      <code>SentryProfile|null</code>\n    </MoreSpecificReturnType>\n  </file>\n  <file src=\"src/Serializer/RepresentationSerializer.php\">\n    <InvalidReturnStatement occurrences=\"1\">\n      <code>$value</code>\n    </InvalidReturnStatement>\n    <InvalidReturnType occurrences=\"1\">\n      <code>representationSerialize</code>\n    </InvalidReturnType>\n  </file>\n  <file src=\"src/State/Hub.php\">\n    <TooManyArguments occurrences=\"3\">\n      <code>captureException</code>\n      <code>captureLastError</code>\n      <code>captureMessage</code>\n    </TooManyArguments>\n  </file>\n  <file src=\"src/State/HubAdapter.php\">\n    <TooManyArguments occurrences=\"4\">\n      <code>captureException</code>\n      <code>captureLastError</code>\n      <code>captureMessage</code>\n      <code>startTransaction</code>\n    </TooManyArguments>\n  </file>\n  <file src=\"src/Tracing/SpanContext.php\">\n    <UnsafeInstantiation occurrences=\"1\">\n      <code>new static()</code>\n    </UnsafeInstantiation>\n  </file>\n  <file src=\"src/Tracing/Transaction.php\">\n    <NonInvariantDocblockPropertyType occurrences=\"1\">\n      <code>$transaction</code>\n    </NonInvariantDocblockPropertyType>\n  </file>\n  <file src=\"src/functions.php\">\n    <TooManyArguments occurrences=\"4\">\n      <code>captureException</code>\n      <code>captureLastError</code>\n      <code>captureMessage</code>\n      <code>startTransaction</code>\n    </TooManyArguments>\n  </file>\n</files>\n"
        },
        {
          "name": "psalm.xml.dist",
          "type": "blob",
          "size": 2.578125,
          "content": "<?xml version=\"1.0\"?>\n<psalm\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"https://getpsalm.org/schema/config\"\n    xsi:schemaLocation=\"https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd\"\n    memoizeMethodCallResults=\"true\"\n    errorBaseline=\"psalm-baseline.xml\"\n>\n    <projectFiles>\n        <directory name=\"src\" />\n        <ignoreFiles>\n            <directory name=\"vendor\" />\n        </ignoreFiles>\n    </projectFiles>\n\n    <issueHandlers>\n        <LessSpecificReturnType errorLevel=\"info\" />\n\n        <!-- level 3 issues - slightly lazy code writing, but provably low false-negatives -->\n\n        <DeprecatedMethod errorLevel=\"info\" />\n        <DeprecatedProperty errorLevel=\"info\" />\n        <DeprecatedClass errorLevel=\"info\" />\n        <DeprecatedConstant errorLevel=\"info\" />\n        <DeprecatedFunction errorLevel=\"info\" />\n        <DeprecatedInterface errorLevel=\"info\" />\n        <DeprecatedTrait errorLevel=\"info\" />\n\n        <InternalMethod errorLevel=\"info\" />\n        <InternalProperty errorLevel=\"info\" />\n        <InternalClass errorLevel=\"info\" />\n\n        <MissingClosureReturnType errorLevel=\"info\" />\n        <MissingReturnType errorLevel=\"info\" />\n        <MissingPropertyType errorLevel=\"info\" />\n        <InvalidDocblock errorLevel=\"info\" />\n\n        <PropertyNotSetInConstructor errorLevel=\"info\">\n            <errorLevel type=\"suppress\">\n                <file name=\"src/Monolog/Handler.php\" />\n                <referencedProperty name=\"Monolog\\Handler\\AbstractHandler::$formatter\" />\n            </errorLevel>\n        </PropertyNotSetInConstructor>\n\n        <MissingConstructor errorLevel=\"info\" />\n        <MissingClosureParamType errorLevel=\"info\" />\n        <MissingParamType errorLevel=\"info\" />\n\n        <RedundantCondition errorLevel=\"info\" />\n\n        <DocblockTypeContradiction errorLevel=\"info\" />\n        <RedundantConditionGivenDocblockType errorLevel=\"info\" />\n\n        <UnresolvableInclude errorLevel=\"info\" />\n\n        <RawObjectIteration errorLevel=\"info\" />\n\n        <InvalidStringClass errorLevel=\"info\" />\n\n        <UndefinedClass errorLevel=\"error\">\n            <errorLevel type=\"suppress\">\n                <file name=\"src/ClientBuilder.php\" />\n                <referencedClass name=\"Http\\Client\\Curl\\Client\" />\n            </errorLevel>\n        </UndefinedClass>\n    </issueHandlers>\n\n    <stubs>\n        <file name=\"stubs/ExcimerLog.stub\" />\n        <file name=\"stubs/ExcimerLogEntry.stub\" />\n        <file name=\"stubs/ExcimerProfiler.stub\" />\n        <file name=\"stubs/ExcimerTimer.stub\" />\n        <file name=\"stubs/globals.stub\" />\n    </stubs>\n</psalm>\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "stubs",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}