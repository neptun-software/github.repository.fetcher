{
  "metadata": {
    "timestamp": 1736712224548,
    "page": 946,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "symfony/security",
      "stars": 1204,
      "defaultBranch": "4.4",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.033203125,
          "content": "vendor/\ncomposer.lock\nphpunit.xml\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 10.7978515625,
          "content": "CHANGELOG\n=========\n\n4.4.0\n-----\n\n * Deprecated class `LdapUserProvider`, use `Symfony\\Component\\Ldap\\Security\\LdapUserProvider` instead\n * Added method `needsRehash()` to `PasswordEncoderInterface` and `UserPasswordEncoderInterface`\n * Added `MigratingPasswordEncoder`\n * Added and implemented `PasswordUpgraderInterface`, for opportunistic password migrations\n * Added `Guard\\PasswordAuthenticatedInterface`, an optional interface\n   for \"guard\" authenticators that deal with user passwords\n * Marked all dispatched event classes as `@final`\n * Deprecated returning a non-boolean value when implementing `Guard\\AuthenticatorInterface::checkCredentials()`.\n * Deprecated passing more than one attribute to `AccessDecisionManager::decide()` and `AuthorizationChecker::isGranted()`\n * Added new `argon2id` encoder, undeprecated the `bcrypt` and `argon2i` ones (using `auto` is still recommended by default.)\n * Added `AbstractListener` which replaces the deprecated `ListenerInterface`\n\n4.3.0\n-----\n\n * Added methods `__serialize` and `__unserialize` to the `TokenInterface`\n * Added `SodiumPasswordEncoder` and `NativePasswordEncoder`\n * The `Role` and `SwitchUserRole` classes are deprecated and will be removed in 5.0. Use strings for roles\n   instead.\n * The `getReachableRoles()` method of the `RoleHierarchyInterface` is deprecated and will be removed in 5.0.\n   Role hierarchies must implement the `getReachableRoleNames()` method instead and return roles as strings.\n * The `getRoles()` method of the `TokenInterface` is deprecated. Tokens must implement the `getRoleNames()`\n   method instead and return roles as strings.\n * Made the `serialize()` and `unserialize()` methods of `AbstractToken` and\n  `AuthenticationException` final, use `__serialize()`/`__unserialize()` instead\n * `AuthenticationException` doesn't implement `Serializable` anymore\n * Deprecated the `ListenerInterface`, turn your listeners into callables instead\n * Deprecated `Firewall::handleRequest()`, use `Firewall::callListeners()` instead\n * Dispatch `AuthenticationSuccessEvent` on `security.authentication.success`\n * Dispatch `AuthenticationFailureEvent` on `security.authentication.failure`\n * Dispatch `InteractiveLoginEvent` on `security.interactive_login`\n * Dispatch `SwitchUserEvent` on `security.switch_user`\n * Deprecated `Argon2iPasswordEncoder`, use `SodiumPasswordEncoder` instead\n * Deprecated `BCryptPasswordEncoder`, use `NativePasswordEncoder` instead\n * Added `DeauthenticatedEvent` dispatched in case the user has changed when trying to refresh the token\n\n4.2.0\n-----\n\n * added the `is_granted()` function in security expressions\n * deprecated the `has_role()` function in security expressions, use `is_granted()` instead\n * Passing custom class names to the\n   `Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationTrustResolver` to define\n   custom anonymous and remember me token classes is deprecated. To\n   use custom tokens, extend the existing `Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken`\n   or `Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken`.\n * allow passing null as $filter in LdapUserProvider to get the default filter\n * accessing the user object that is not an instance of `UserInterface` from `Security::getUser()` is deprecated\n * Deprecated `SimpleAuthenticatorInterface`, `SimpleFormAuthenticatorInterface`,\n   `SimplePreAuthenticatorInterface`, `SimpleAuthenticationProvider`, `SimpleAuthenticationHandler`,\n   `SimpleFormAuthenticationListener` and `SimplePreAuthenticationListener`. Use Guard instead.\n\n4.1.0\n-----\n\n * The `ContextListener::setLogoutOnUserChange()` method is deprecated.\n * added `UserValueResolver`.\n * Using the AdvancedUserInterface is now deprecated. To use the existing\n   functionality, create a custom user-checker based on the\n   `Symfony\\Component\\Security\\Core\\User\\UserChecker`.\n * `AuthenticationUtils::getLastUsername()` now always returns a string.\n\n4.0.0\n-----\n\n * The `AbstractFormLoginAuthenticator::onAuthenticationSuccess()` was removed.\n   You should implement this method yourself in your concrete authenticator.\n * removed the `AccessDecisionManager::setVoters()` method\n * removed the `RoleInterface`\n * removed support for voters that don't implement the `VoterInterface`\n * added a sixth `string $context` argument to `LogoutUrlGenerator::registerListener()`\n * removed HTTP digest authentication\n * removed `GuardAuthenticatorInterface` in favor of `AuthenticatorInterface`\n * removed `AbstractGuardAuthenticator::supports()`\n * added target user to `SwitchUserListener`\n\n3.4.0\n-----\n\n * Added `getUser`, `getToken` and `isGranted` methods to `Security`.\n * added a `setToken()` method to the `SwitchUserEvent` class to allow to replace the created token while switching users\n   when custom token generation is required by application.\n * Using voters that do not implement the `VoterInterface`is now deprecated in\n   the `AccessDecisionManager` and this functionality will be removed in 4.0.\n * Using the `ContextListener` without setting the `logoutOnUserChange`\n   property will trigger a deprecation when the user has changed. As of 4.0\n   the user will always be logged out when the user has changed between\n   requests.\n * deprecated HTTP digest authentication\n * Added a new password encoder for the Argon2i hashing algorithm\n * deprecated `GuardAuthenticatorInterface` in favor of `AuthenticatorInterface`\n * deprecated to return `null` from `getCredentials()` in classes that extend\n   `AbstractGuardAuthenticator`. Return `false` from `supports()` instead.\n\n3.3.0\n-----\n\n * deprecated `AccessDecisionManager::setVoters()` in favor of passing the\n   voters to the constructor.\n * [EXPERIMENTAL] added a `json_login` listener for stateless authentication\n\n3.2.0\n-----\n\n * added `$attributes` and `$subject` with getters/setters to `Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException`\n\n3.0.0\n-----\n\n * removed all deprecated code\n\n2.8.0\n-----\n\n * deprecated `getKey()` of the `AnonymousToken`, `RememberMeToken`,\n   `AbstractRememberMeServices` and `DigestAuthenticationEntryPoint` classes in favor of `getSecret()`.\n * deprecated `Symfony\\Component\\Security\\Core\\Authentication\\SimplePreAuthenticatorInterface`, use\n   `Symfony\\Component\\Security\\Http\\Authentication\\SimplePreAuthenticatorInterface` instead\n * deprecated `Symfony\\Component\\Security\\Core\\Authentication\\SimpleFormAuthenticatorInterface`, use\n   `Symfony\\Component\\Security\\Http\\Authentication\\SimpleFormAuthenticatorInterface` instead\n * deprecated `Symfony\\Component\\Security\\Core\\Util\\ClassUtils`, use\n   `Symfony\\Component\\Security\\Acl\\Util\\ClassUtils` instead\n * deprecated the `Symfony\\Component\\Security\\Core\\Util\\SecureRandom` class in favor of the `random_bytes()` function\n * deprecated `supportsAttribute()` and `supportsClass()` methods of\n   `Symfony\\Component\\Security\\Core\\Authorization\\AccessDecisionManagerInterface` and\n   `Symfony\\Component\\Security\\Core\\Authorization\\Voter\\VoterInterface`.\n * deprecated `getSupportedAttributes()` and `getSupportedClasses()` methods of\n   `Symfony\\Component\\Security\\Core\\Authorization\\Voter\\AbstractVoter`, use `supports()` instead.\n * deprecated the `intention` option for all the authentication listeners,\n   use the `csrf_token_id` option instead.\n\n2.7.0\n-----\n\n * added LogoutUrlGenerator\n * added the triggering of the `Symfony\\Component\\Security\\Http\\SecurityEvents::INTERACTIVE_LOGIN` in `Symfony\\Component\\Security\\Http\\Firewall\\SimplePreAuthenticationListener`\n * The MaskBuilder logic has been abstracted in the `Symfony\\Component\\Security\\Acl\\Permission\\AbstractMaskBuilder`\n   and described in the `Symfony\\Component\\Security\\Acl\\Permission\\MaskBuilderInterface`\n * added interface `Symfony\\Component\\Security\\Acl\\Permission\\MaskBuilderRetrievalInterface`\n\n2.6.0\n-----\n\n * added Symfony\\Component\\Security\\Http\\Authentication\\AuthenticationUtils\n * Deprecated the `SecurityContext` class in favor of the `AuthorizationChecker` and `TokenStorage` classes\n\n2.4.0\n-----\n\n * Translations in the `src/Symfony/Component/Security/Resources/translations/` directory are deprecated, ones in `src/Symfony/Component/Security/Core/Resources/translations/` must be used instead.\n * The switch user listener now preserves the query string when switching a user\n * The remember-me cookie hashes now use HMAC, which means that current cookies will be invalidated\n * added simpler customization options\n * structured component into three sub-components Acl, Core and Http\n * added Csrf sub-component\n * changed Http sub-component to depend on Csrf sub-component instead of the Form component\n\n2.3.0\n-----\n\n * [BC BREAK] the BCrypt encoder constructor signature has changed (the first argument was removed)\n   To use the BCrypt encoder, you now need PHP 5.5 or \"ircmaxell/password-compat\" as a composer dependency\n * [BC BREAK] return 401 instead of 500 when using use_forward during for form authentication\n * added a `require_previous_session` option to `AbstractAuthenticationListener`\n\n2.2.0\n-----\n\n * `Symfony\\Component\\Security\\Http\\Firewall` and\n   `Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener` now\n   implements EventSubscriberInterface\n * added secure random number generator\n * added PBKDF2 Password encoder\n * added BCrypt password encoder\n\n2.1.0\n-----\n\n * [BC BREAK] The signature of ExceptionListener has changed\n * changed the HttpUtils constructor signature to take a UrlGenerator and a UrlMatcher instead of a Router\n * EncoderFactoryInterface::getEncoder() can now also take a class name as an argument\n * allow switching to the user that is already impersonated\n * added support for the remember_me parameter in the query\n * added AccessMapInterface\n * [BC BREAK] moved user comparison logic out of UserInterface\n * made the logout path check configurable\n * after login, the user is now redirected to `default_target_path` if\n   `use_referer` is true and the referrer is the `login_path`.\n * added a way to remove a token from a session\n * [BC BREAK] changed `MutableAclInterface::setParentAcl` to accept `null`,\n   review your implementation to reflect this change.\n * `ObjectIdentity::fromDomainObject`, `UserSecurityIdentity::fromAccount` and\n   `UserSecurityIdentity::fromToken` now return correct identities for proxies\n   objects (e.g. Doctrine proxies)\n * [BC BREAK] moved the default authentication success and failure handling to\n   separate classes. The order of arguments in the constructor of the\n   `AbstractAuthenticationListener` has changed.\n * [BC BREAK] moved the default logout success handling to a separate class. The\n   order of arguments in the constructor of `LogoutListener` has changed.\n * [BC BREAK] The constructor of `AuthenticationException` and all child\n   classes now matches the constructor of `\\Exception`. The extra information\n   getters and setters are removed. There are now dedicated getters/setters for\n   token (`AuthenticationException'), user (`AccountStatusException`) and\n   username (`UsernameNotFoundException`).\n"
        },
        {
          "name": "Core",
          "type": "tree",
          "content": null
        },
        {
          "name": "Csrf",
          "type": "tree",
          "content": null
        },
        {
          "name": "Guard",
          "type": "tree",
          "content": null
        },
        {
          "name": "Http",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "Copyright (c) 2004-2022 Fabien Potencier\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.7626953125,
          "content": "Security Component\n==================\n\nThe Security component provides a complete security system for your web\napplication. It ships with facilities for authenticating using HTTP basic, \ninteractive form login or X.509 certificate login, but\nalso allows you to implement your own authentication strategies. Furthermore,\nthe component provides ways to authorize authenticated users based on their\nroles.\n\nResources\n---------\n\n * [Documentation](https://symfony.com/doc/current/components/security.html)\n * [Contributing](https://symfony.com/doc/current/contributing/index.html)\n * [Report issues](https://github.com/symfony/symfony/issues) and\n   [send Pull Requests](https://github.com/symfony/symfony/pulls)\n   in the [main Symfony repository](https://github.com/symfony/symfony)\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.287109375,
          "content": "{\n    \"name\": \"symfony/security\",\n    \"type\": \"library\",\n    \"description\": \"Provides a complete security system for your web application\",\n    \"keywords\": [],\n    \"homepage\": \"https://symfony.com\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Fabien Potencier\",\n            \"email\": \"fabien@symfony.com\"\n        },\n        {\n            \"name\": \"Symfony Community\",\n            \"homepage\": \"https://symfony.com/contributors\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=7.1.3\",\n        \"symfony/event-dispatcher-contracts\": \"^1.1|^2\",\n        \"symfony/http-foundation\": \"^3.4.40|^4.4.7|^5.0.7\",\n        \"symfony/http-kernel\": \"^4.4\",\n        \"symfony/polyfill-php80\": \"^1.16\",\n        \"symfony/property-access\": \"^3.4|^4.0|^5.0\",\n        \"symfony/service-contracts\": \"^1.1|^2\"\n    },\n    \"replace\": {\n        \"symfony/security-core\": \"self.version\",\n        \"symfony/security-csrf\": \"self.version\",\n        \"symfony/security-guard\": \"self.version\",\n        \"symfony/security-http\": \"self.version\"\n    },\n    \"require-dev\": {\n        \"psr/container\": \"^1.0|^2.0\",\n        \"symfony/finder\": \"^3.4|^4.0|^5.0\",\n        \"symfony/polyfill-ctype\": \"~1.8\",\n        \"symfony/polyfill-intl-icu\": \"~1.0\",\n        \"symfony/routing\": \"^3.4|^4.0|^5.0\",\n        \"symfony/validator\": \"^3.4.31|^4.3.4|^5.0\",\n        \"symfony/expression-language\": \"^3.4|^4.0|^5.0\",\n        \"symfony/ldap\": \"^4.4|^5.0\",\n        \"symfony/translation\": \"^4.4|^5.0\",\n        \"psr/log\": \"^1|^2|^3\"\n    },\n    \"conflict\": {\n        \"symfony/event-dispatcher\": \">=5\",\n        \"symfony/ldap\": \"<4.4\"\n    },\n    \"suggest\": {\n        \"psr/container-implementation\": \"To instantiate the Security class\",\n        \"symfony/form\": \"\",\n        \"symfony/validator\": \"For using the user password constraint\",\n        \"symfony/routing\": \"For using the HttpUtils class to create sub-requests, redirect the user, and match URLs\",\n        \"symfony/expression-language\": \"For using the expression voter\",\n        \"symfony/ldap\": \"For using the LDAP user and authentication providers\"\n    },\n    \"autoload\": {\n        \"psr-4\": { \"Symfony\\\\Component\\\\Security\\\\\": \"\" },\n        \"exclude-from-classmap\": [\n            \"/Core/Tests/\",\n            \"/Csrf/Tests/\",\n            \"/Guard/Tests/\",\n            \"/Http/Tests/\"\n        ]\n    },\n    \"minimum-stability\": \"dev\"\n}\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.919921875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"http://schema.phpunit.de/5.2/phpunit.xsd\"\n         backupGlobals=\"false\"\n         colors=\"true\"\n         bootstrap=\"vendor/autoload.php\"\n         failOnRisky=\"true\"\n         failOnWarning=\"true\"\n>\n    <php>\n        <ini name=\"error_reporting\" value=\"-1\" />\n    </php>\n\n    <testsuites>\n        <testsuite name=\"Symfony Security Component Test Suite\">\n            <directory>./*/Tests/</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist>\n            <directory>./</directory>\n            <exclude>\n                <directory>./vendor</directory>\n                <directory>./*/Resources</directory>\n                <directory>./*/Tests</directory>\n                <directory>./*/vendor</directory>\n            </exclude>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        }
      ]
    }
  ]
}