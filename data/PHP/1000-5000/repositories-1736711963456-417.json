{
  "metadata": {
    "timestamp": 1736711963456,
    "page": 417,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Imangazaliev/DiDOM",
      "stars": 2203,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2578125,
          "content": "# Exclude build/test files from archive\n/tests            export-ignore\n/.editorconfig    export-ignore\n/.gitattributes   export-ignore\n/.gitignore       export-ignore\n/.php_cs          export-ignore\n/.travis.yml      export-ignore\n/phpunit.xml      export-ignore\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0830078125,
          "content": "/vendor\n/.idea\ncomposer.phar\n.php_cs.cache\n.DS_Store\n.phpunit.result.cache\nThumbs.db\n"
        },
        {
          "name": ".php_cs",
          "type": "blob",
          "size": 7.05859375,
          "content": "<?php\n\nuse PhpCsFixer\\Config;\nuse PhpCsFixer\\Finder;\n\nrequire __DIR__.'/vendor/autoload.php';\n\n$fixers = [\n    // PHP arrays should be declared using the short syntax\n    'array_syntax' => ['syntax' => 'short'],\n\n    // There MUST be one blank line after the namespace declaration\n    'blank_line_after_namespace' => true,\n\n    // Ensure there is no code on the same line as the PHP open tag and it is followed by a blank line\n    'blank_line_after_opening_tag' => true,\n\n    // An empty line feed should precede a return statement\n    'blank_line_before_return' => true,\n\n    // The body of each structure MUST be enclosed by braces\n    // Braces should be properly placed\n    // Body of braces should be properly indented\n    'braces' => true,\n\n    // A single space should be between cast and variable\n    'cast_spaces' => true,\n\n    // Whitespace around the key words of a class, trait or interfaces definition should be one space\n    'class_definition' => true,\n\n    // The keyword elseif should be used instead of else if so that all control keywords look like single words\n    'elseif' => true,\n\n    // PHP code MUST use only UTF-8 without BOM (remove BOM)\n    'encoding' => true,\n\n    // PHP code must use the long <?php tags or short-echo <?= tags and not other tag variations\n    'full_opening_tag' => true,\n\n    // Spaces should be properly placed in a function declaration\n    'function_declaration' => true,\n\n    // Add missing space between function's argument and its typehint\n    'function_typehint_space' => true,\n\n    // Include/Require and file path should be divided with a single space\n    // File path should not be placed under brackets\n    'include' => true,\n\n    // Code MUST use configured indentation type\n    'indentation_type' => true,\n\n    // All PHP files must use same line ending\n    'line_ending' => true,\n\n    // The PHP constants true, false, and null MUST be in lower case\n    'lowercase_constants' => true,\n\n    // PHP keywords MUST be in lower case\n    'lowercase_keywords' => true,\n\n    // In method arguments and method call, there MUST NOT be a space before each comma and there MUST be one space after each comma\n    'method_argument_space' => true,\n\n    // Methods must be separated with one blank line\n    'method_separation' => true,\n\n    // There should be no empty lines after class opening brace\n    'no_blank_lines_after_class_opening' => true,\n\n    // There should not be blank lines between docblock and the documented element\n    'no_blank_lines_after_phpdoc' => true,\n\n    // The closing PHP tag MUST be omitted from files containing only PHP\n    'no_closing_tag' => true,\n\n    // Remove leading slashes in use clauses\n    'no_leading_import_slash' => true,\n\n    // The namespace declaration line shouldn't contain leading whitespace\n    'no_leading_namespace_whitespace' => true,\n\n    // Multi-line whitespace before closing semicolon are prohibited\n    'no_multiline_whitespace_before_semicolons' => true,\n\n    // Single-line whitespace before closing semicolon are prohibited\n    'no_singleline_whitespace_before_semicolons' => true,\n\n    // There MUST NOT be a space after the opening parenthesis\n    // There MUST NOT be a space before the closing parenthesis\n    'no_spaces_inside_parenthesis' => true,\n\n    // Remove trailing commas in list function calls\n    'no_trailing_comma_in_list_call' => true,\n\n    // PHP single-line arrays should not have trailing comma\n    'no_trailing_comma_in_singleline_array' => true,\n\n    // Remove trailing commas in list function calls\n    'no_trailing_whitespace' => true,\n\n    // Unused use statements must be removed\n    'no_unused_imports' => true,\n\n    // Remove trailing whitespace at the end of blank lines\n    'no_whitespace_in_blank_line' => true,\n\n    // All instances created with new keyword must be followed by braces\n    'new_with_braces' => true,\n\n    // There should not be space before or after object T_OBJECT_OPERATOR ->\n    'object_operator_without_whitespace' => true,\n\n    // Ordering use statements\n    'ordered_imports' => true,\n\n    // All items of the given phpdoc tags must be aligned vertically\n    // defaults to ['param', 'return', 'throws', 'type', 'var']\n    // 'phpdoc_align' => true,\n\n    // Docblocks should have the same indentation as the documented subject\n    'phpdoc_indent' => true,\n\n    // Fix PHPDoc inline tags, make inheritdoc always inline\n    'phpdoc_inline_tag' => true,\n\n    // @access annotations should be omitted from phpdocs\n    'phpdoc_no_access' => true,\n\n    // @return void and @return null annotations should be omitted from phpdocs\n    'phpdoc_no_empty_return' => true,\n\n    // @package and @subpackage annotations should be omitted from phpdocs\n    'phpdoc_no_package' => true,\n\n    // Scalar types should always be written in the same form\n    // int not integer, bool not boolean, float not real or double\n    'phpdoc_scalar' => true,\n\n    // Annotations in phpdocs should be grouped together so that annotations of the same type immediately follow each other,\n    // and annotations of a different type are separated by a single blank line\n    'phpdoc_separation' => true,\n\n    // Phpdocs summary should end in either a full stop, exclamation mark, or question mark\n    'phpdoc_summary' => true,\n\n    // Docblocks should only be used on structural elements\n    'phpdoc_to_comment' => true,\n\n    // Phpdocs should start and end with content, excluding the very first and last line of the docblocks\n    'phpdoc_trim' => true,\n\n    // @var and @type annotations should not contain the variable name\n    'phpdoc_var_without_name' => true,\n\n    // Pre incrementation/decrementation should be used if possible\n    'pre_increment' => true,\n\n    // A PHP file without end tag must always end with a single empty line feed\n    'single_blank_line_at_eof' => true,\n\n    // There should be exactly one blank line before a namespace declaration\n    'single_blank_line_before_namespace' => true,\n\n    // There MUST be one use keyword per declaration\n    'single_import_per_statement' => true,\n\n    // Each namespace use MUST go on its own line and there MUST be one blank line after the use statements block\n    'single_line_after_imports' => true,\n\n    // Single-line comments and multi-line comments with only one line of actual content should use the // syntax\n    'single_line_comment_style' => true,\n\n    // Convert double quotes to single quotes for simple strings\n    'single_quote' => true,\n\n    // Replace all <> with !=\n    'standardize_not_equals' => true,\n\n    // Standardize spaces around ternary operator\n    'ternary_operator_spaces' => true,\n\n    // PHP multi-line arrays should have a trailing comma\n    'trailing_comma_in_multiline_array' => true,\n\n    // Unary operators should be placed adjacent to their operands\n    'unary_operator_spaces' => true,\n\n    // Visibility MUST be declared on all properties and methods;\n    // abstract and final MUST be declared before the visibility;\n    // static MUST be declared after the visibility\n    'visibility_required' => true,\n];\n\n$finder = Finder::create();\n\n$finder->files()->in([\n    'src',\n]);\n\n$config = Config::create()\n    ->setRules($fixers)\n    ->setFinder($finder)\n    ->setUsingCache(true);\n\nreturn $config;\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.4287109375,
          "content": "jobs:\n  include:\n    - language: php\n      dist: bionic\n      php: 7.2\n\n    - language: php\n      dist: bionic\n      php: 7.3\n\n    - language: php\n      dist: bionic\n      php: 7.4\n\n    - language: php\n      dist: focal\n      php: 8.0\n\n    - language: php\n      dist: focal\n      php: 8.1\n\n    - language: php\n      dist: jammy\n      php: 8.2\n\nbefore_script:\n  - composer self-update\n  - composer install\nscript:\n  - ./vendor/bin/phpunit\n\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.482421875,
          "content": "## 2.0\n\n### Breaking changes\n\n- Minimum PHP version bumped to 7.2\n- Remove `__invoke` method from `Document`, `Element` and `DocumentFragment` that was deprecated early\n- Remove magic property `Element::$tag`. Use `tagName()` method instead\n- Rename `Element::getDocument()` to `ownerDocument()`\n\n### What's new\n\n- Add `Node::setInnerXml()` method (i. e. for `Element` and `DocumentFragment` too)\n\n## 1.18\n\n- Fix a bug when a call of Element::previousSibling() with selector returns a previous sibling when there is not matching element\n\n## 1.17\n\n- Add support of multiple pseudoclasses (#125)\n\n## 1.16.4\n\n- Handle nested pseudo-classes with expression correctly\n\n## 1.16.3\n\n- Fix parsing of a style property in \"style\" attribute when the value contains a colon\n\n## 1.16.1\n\n- Fix deprecation notice in PHP 8 for `libxml_disable_entity_loader`\n\n## 1.16\n\n- Add `Node::insertSiblingBefore()` and `Node::insertSiblingAfter()` methods for inserting sibling nodes\n\n## 1.15\n\n- Add support of document fragments\n\n## 1.14.1\n\n- Fix an exception when selecting comment element with XPath\n- Add support of `DOMCdataSection` nodes\n- Add methods `createTextNode()`, `createComment()`, `createCdataSection()` to the Document class\n\n## 1.14\n\n- Add `Element::innerXml()` method\n\n## 1.13\n\n- Add `Element::outerHtml()` method\n- Add `Element::prependChild()` method\n- Add `Element::insertBefore()` and `Element::insertAfter()` methods\n- Add `Element::style()` method for more convenient inline styles manipulation\n- Add `Element::classes()` method for more convenient class manipulation\n\n## 1.12\n\n- Many fixes and improvements\n\n## 1.11.1\n\n- Fix bug with unregistered PHP functions in XPath in `Document::has()` and `Document::count()` methods\n\n## 1.11\n\n- Add `Element::isElementNode()` method\n- Add ability to retrieve only specific attributes in `Element::attributes()` method\n- Add `Element::removeAllAttributes()` method\n- Add ability to specify selector and node type in `Element::previousSibling()` and `Element::nextSibling()` methods\n- Add `Element::previousSiblings()` and `Element::nextSiblings()` methods\n- Many minor fixes and improvements\n\n## 1.10.6\n\n- Fix bug with XML document loading\n\n## 1.10.5\n\n- Fix issue #85\n\n## 1.10.4\n\n- Use `mb_convert_encoding()` in the Encoder if it is available\n\n## 1.10.3\n\n- Add `Element::removeChild()` and `Element::removeChildren()` methods\n- Fix bug in `Element::matches()` method\n- `Element::matches()` method now returns false if node is not `DOMElement`\n- Add `Element::hasChildren()` method\n\n## 1.10.2\n\n- Fix bug in setInnerHtml: can't rewrite existing content\n- Throw `InvalidSelectorException` instead of `InvalidArgumentException` when selector is empty\n\n## 1.10.1\n\n- Fix attributes `ends-with` XPath\n- Method `Element::matches()` now can check children nodes\n\n## 1.10\n\n- Fix HTML saving mechanism\n- Throw `InvalidSelectorException` instead of `RuntimeException` in Query class\n\n## 1.9.1\n\n- Add ability to search in owner document using current node as context\n- Bugs fixed\n\n## 1.9.0\n\n- Methods `Document::appendChild()` and `Element::appendChild()` now return appended node(s)\n- Add ability to search elements in context\n\n## 1.8.8\n\n- Bugs fixed\n\n## 1.8.7\n\n- Add `Element::getLineNo()` method\n\n## 1.8.6\n\n- Fix issue #55\n\n## 1.8.5\n\n- Add support of `DOMComment`\n\n## 1.8.4\n\n- Add ability to create an element by selector\n- Add closest method\n\n## 1.8.3\n\n- Add method `Element::isTextNode()`\n- Many minor fixes\n\n## 1.8.2\n\n- Add ability to check that element matches selector\n- Add ability counting nodes by selector\n- Many minor fixes\n\n## 1.8.1\n\n- Small fix\n\n## 1.8\n\n- Bug fixes\n- Add support of ~ selector\n- Add ability to direct search by CSS selector\n- Add setInnerHtml method\n- Add attributes method\n\n## 1.7.4\n\n- Add support of text nodes\n\n## 1.7.3\n\n- Bug fix\n\n## 1.7.2\n\n- Fixed behavior of nth-child pseudo class\n- Add nth-of-type pseudo class\n\n## 1.7.1\n\n- Add pseudo class has and more attribute options\n\n## 1.7.0\n\n- Bug fixes\n- Add methods `previousSibling`, `nextSibling`, `child`, `firstChild`, `lastChild`, `children`, `getDocument` to the Element\n- Changed behavior of parent method. Now it returns parent node instead of owner document\n\n## 1.6.8\n\n- Bug fix\n\n## 1.6.5\n\n- Added ability to get an element attribute by CSS selector\n\n## 1.6.4\n\n- Added handling of `DOMText` and `DOMAttr` in `Document::find()`\n\n## 1.6.3\n\n- Added ability to get inner HTML\n\n## 1.6.2\n\n- Added the ability to pass options when load HTML or XML\n\n## 1.6.1\n\n- Added the ability to pass an array of nodes to appendChild\n- Added the ability to pass options when converting to HTML or XML\n- Added the ability to add child elements to the element\n\n## 1.6\n\n- Added support for XML\n- Added the ability to search element by part of attribute name or value\n- Added support for pseudo-class \"contains\"\n- Added the ability to clone a node\n\n## 1.5.1\n\n- Added ability to remove and replace nodes\n- Added ability to specify encoding when converting the element into the document\n\n## 1.5\n\n- Fixed problem with incorrect encoding\n- Added ability to set the value of the element\n- Added ability to specify encoding when creating document\n\n## 1.4\n\n- Added the ability to specify the return type element (`DiDom\\Element` or `DOMElement`)\n\n## 1.3.2\n\n- Bug fixed\n\n## 1.3.1\n\n- Bugs fixed\n- Added the ability to pass element attributes in the constructor\n\n## 1.3\n\n- Bugs fixed\n\n## 1.2\n\n- Bugs fixed\n- Added the ability to compare Element\\Document\n- Added the ability to format HTML code of the document when outputting\n\n## 1.1\n\n- Added cache control\n- Converter from CSS to XPath replaced by faster\n\n## 1.0\n\n- First release"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0390625,
          "content": "Copyright (c) 2015 Muhammad Imangazaliev\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "README-RU.md",
          "type": "blob",
          "size": 26.2314453125,
          "content": "# DiDOM\n\n[![Build Status](https://travis-ci.org/Imangazaliev/DiDOM.svg?branch=master)](https://travis-ci.org/Imangazaliev/DiDOM)\n[![Total Downloads](https://poser.pugx.org/imangazaliev/didom/downloads)](https://packagist.org/packages/imangazaliev/didom)\n[![Latest Stable Version](https://poser.pugx.org/imangazaliev/didom/v/stable)](https://packagist.org/packages/imangazaliev/didom)\n[![License](https://poser.pugx.org/imangazaliev/didom/license)](https://packagist.org/packages/imangazaliev/didom)\n\nDiDOM - простая и быстрая библиотека для парсинга HTML.\n\n- [English version](README.md)\n- [Документация для версии 1.x](https://github.com/Imangazaliev/DiDOM/blob/98d411741d598b0b74bb38e215d99c1cdb0d532d/README-RU.md). Чтобы обновится с версии 1.x, пожалуйста просмотрите [историю изменений](CHANGELOG.md).\n\n## Содержание\n\n- [Установка](#Установка)\n- [Быстрый старт](#Быстрый-старт)\n- [Создание нового документа](#Создание-нового-документа)\n- [Поиск элементов](#Поиск-элементов)\n- [Проверка наличия элемента](#Проверка-наличия-элемента)\n- [Подсчет количества элементов](#Подсчет-количества-элементов)\n- [Поиск в элементе](#Поиск-в-элементе)\n- [Поддерживамые селекторы](#Поддерживамые-селекторы)\n- [Изменение содержимого](#Изменение-содержимого)\n- [Вывод содержимого](#Вывод-содержимого)\n- [Работа с элементами](#Работа-с-элементами)\n    - [Создание нового элемента](#Создание-нового-элемента)\n    - [Получение названия элемента](#Получение-названия-элемента)\n    - [Получение родительского элемента](#Получение-родительского-элемента)\n    - [Получение соседних элементов](#Получение-соседних-элементов)\n    - [Получение дочерних элементов](#Получение-соседних-элементов)\n    - [Получение документа](#Получение-документа)\n    - [Работа с атрибутами элемента](#Работа-с-атрибутами-элемента)\n    - [Сравнение элементов](#Сравнение-элементов)\n    - [Добавление дочерних элементов](#Добавление-дочерних-элементов)\n    - [Замена элемента](#Замена-элемента)\n    - [Удаление элемента](#Удаление-элемента)\n- [Работа с кэшем](#Работа-с-кэшем)\n- [Прочее](#Прочее)\n- [Сравнение с другими парсерами](#Сравнение-с-другими-парсерами)\n\n## Установка\n\nДля установки DiDOM выполните команду:\n\n    composer require imangazaliev/didom\n\n## Быстрый старт\n\n```php\nuse DiDom\\Document;\n\n$document = new Document('http://www.news.com/', true);\n\n$posts = $document->find('.post');\n\nforeach($posts as $post) {\n    echo $post->text(), \"\\n\";\n}\n```\n\n## Создание нового документа\n\nDiDom позволяет загрузить HTML несколькими способами:\n\n##### Через конструктор\n\n```php\n// в первом параметре передается строка с HTML\n$document = new Document($html);\n\n// путь к файлу\n$document = new Document('page.html', true);\n\n// или URL\n$document = new Document('http://www.example.com/', true);\n\n// также можно создать документ из DOMDocument\n$domDocument = new DOMDocument();\n$document = new Document($domDocument);\n```\n\nСигнатура:\n\n```php\n__construct($string = null, $isFile = false, $encoding = 'UTF-8', $type = Document::TYPE_HTML)\n```\n\n`$isFile` - указывает, что загружается файл. По умолчанию - `false`.\n\n`$encoding` - кодировка документа. По умолчанию - UTF-8.\n\n`$type` - тип документа (HTML - `Document::TYPE_HTML`, XML - `Document::TYPE_XML`). По умолчанию - `Document::TYPE_HTML`.\n\n##### Через отдельные методы\n\n```php\n$document = new Document();\n\n$document->loadHtml($html);\n\n$document->loadHtmlFile('page.html');\n\n$document->loadHtmlFile('http://www.example.com/');\n```\n\nДля загрузки XML есть соответствующие методы `loadXml` и `loadXmlFile`.\n\nПри загрузке документа через эти методы, парсеру можно передать дополнительные [опции](http://php.net/manual/ru/libxml.constants.php):\n\n```php\n$document->loadHtml($html, LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD);\n$document->loadHtmlFile($url, LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD);\n\n$document->loadXml($xml, LIBXML_PARSEHUGE);\n$document->loadXmlFile($url, LIBXML_PARSEHUGE);\n```\n\n## Поиск элементов\n\nВ качестве выражения для поиска можно передать CSS-селектор или XPath. Для этого в первом параметре нужно передать само выражение, а во втором - его тип (по умолчанию - `Query::TYPE_CSS`):\n\n##### Через метод `find()`:\n\n```php\nuse DiDom\\Document;\nuse DiDom\\Query;\n\n...\n\n// CSS-селектор\n$posts = $document->find('.post');\n\n// эквивалентно\n$posts = $document->find('.post', Query::TYPE_CSS);\n\n// XPath-выражение\n$posts = $document->find(\"//div[contains(@class, 'post')]\", Query::TYPE_XPATH);\n```\n\nМетод вернет массив с элементами (экземпляры класса `DiDom\\Element`) или пустой массив, если не найден ни один элемент, соответствующий выражению.\n\nПри желании можно получить массив узлов без преобразования в Element или текст (`DOMElement`/`DOMText`/`DOMComment`/`DOMAttr`, в зависимости от выражения), для этого необходимо передать в качестве третьего параметра `false`.\n\n##### Через метод `first()`:\n\nВозвращает первый найденный элемент или `null`, если не найдено ни одного элемента.\n\nПринимает те же параметры, что и метод `find()`.\n\n##### Через магический метод `__invoke()`:\n\n```php\n$posts = $document('.post');\n```\n\nПринимает те же параметры, что и метод `find()`.\n\n**Внимание:** использование данного метода нежелательно, т.к. в будущем он может быть удален.\n\n##### Через метод `xpath()`:\n\n```php\n$posts = $document->xpath(\"//*[contains(concat(' ', normalize-space(@class), ' '), ' post ')]\");\n```\n\n## Проверка наличия элемента\n\nПроверить наличие элемента можно с помощью метода `has()`:\n\n```php\nif ($document->has('.post')) {\n    // код\n}\n```\n\nЕсли нужно проверить наличие элемента, а затем получить его, то можно сделать так:\n\n```php\nif ($document->has('.post')) {\n    $elements = $document->find('.post');\n\n    // код\n}\n```\n\nно быстрее так:\n\n```php\n$elements = $document->find('.post');\n\nif (count($elements) > 0) {\n    // код\n}\n```\n\nт.к. в первом случае выполняется два запроса.\n\n## Подсчет количества элементов\n\nМетод `count()` позволяет подсчитать количество дочерних элементов, соотвествующих селектору:\n\n```php\n// выведет количество ссылок в документе\necho $document->count('a');\n```\n\n```php\n// выведет количество пунктов в списке\necho $document->first('ul')->count('> li');\n```\n\n## Поиск в элементе\n\nМетоды `find()`, `first()`, `xpath()`, `has()`, `count()` доступны также и для элемента.\n\nПример:\n\n```php\necho $document->find('nav')[0]->first('ul.menu')->xpath('//li')[0]->text();\n```\n\n#### Метод `findInDocument()`\n\nПри изменении, замене или удалении элемента, найденного в другом элементе, документ не будет изменен. Данное поведение связано с тем, что в методе `find()` класса `Element` (а, соответственно, и в методах `first()` и `xpath`) создается новый документ, в котором и производится поиск.\n\nДля поиска элементов в исходном документе необходимо использовать методы `findInDocument()` и `firstInDocument()`:\n\n```php\n// ничего не выйдет\n$document->first('head')->first('title')->remove();\n\n// а вот так да\n$document->first('head')->firstInDocument('title')->remove();\n```\n\n**Внимание:** методы `findInDocument()` и `firstInDocument()` работают только для элементов, которые принадлежат какому-либо документу, либо созданых через `new Element(...)`. Если элемент не принадлежит к какому-либо документу, будет выброшено исключение `LogicException`;\n\n## Поддерживамые селекторы\n\nDiDom поддерживает поиск по:\n\n- тэгу\n- классу, идентификатору, имени и значению атрибута\n- псевдоклассам:\n    - first-, last-, nth-child\n    - empty и not-empty\n    - contains\n    - has\n\n```php\n// все ссылки\n$document->find('a');\n\n// любой элемент с id = \"foo\" и классом \"bar\"\n$document->find('#foo.bar');\n\n// любой элемент, у которого есть атрибут \"name\"\n$document->find('[name]');\n\n// эквивалентно\n$document->find('*[name]');\n\n// поле ввода с именем \"foo\"\n$document->find('input[name=foo]');\n$document->find('input[name=\\'foo\\']');\n$document->find('input[name=\"foo\"]');\n\n// поле ввода с именем \"foo\" и значением \"bar\"\n$document->find('input[name=\"foo\"][value=\"bar\"]');\n\n// поле ввода, название которого НЕ равно \"foo\"\n$document->find('input[name!=\"foo\"]');\n\n// любой элемент, у которого есть атрибут,\n// начинающийся с \"data-\" и равный \"foo\"\n$document->find('*[^data-=foo]');\n\n// все ссылки, у которых адрес начинается с https\n$document->find('a[href^=https]');\n\n// все изображения с расширением png\n$document->find('img[src$=png]');\n\n// все ссылки, содержащие в своем адресе строку \"example.com\"\n$document->find('a[href*=example.com]');\n\n// все ссылки, содержащие в атрибуте data-foo значение bar отделенное пробелом\n$document->find('a[data-foo~=bar]');\n\n// текст всех ссылок с классом \"foo\" (массив строк)\n$document->find('a.foo::text');\n\n// эквивалентно\n$document->find('a.foo::text()');\n\n// адрес и текст подсказки всех полей с классом \"bar\"\n$document->find('a.bar::attr(href|title)');\n\n// все ссылки, которые являются прямыми потомками текущего элемента\n$element->find('> a');\n```\n\n## Изменение содержимого\n\n### Изменение HTML\n\n```php\n$element->setInnerHtml('<a href=\"#\">Foo</a>');\n```\n\n### Изменение XML\n\n```php\n$element->setInnerXml(' Foo <span>Bar</span><!-- Baz --><![CDATA[\n    <root>Hello world!</root>\n]]>');\n```\n\n### Изменение значения (как простой текст)\n\n```php\n$element->setValue('Foo');\n// будет закодирован в HTML-сущность как при вызове htmlentities()\n$element->setValue('<a href=\"#\">Foo</a>');\n```\n\n## Вывод содержимого\n\n### Получение HTML\n\n##### Через метод `html()`:\n\n```php\n// HTML-код документа\necho $document->html();\n\n// HTML-код элемента\necho $document->first('.post')->html();\n```\n\n##### Приведение к строке:\n\n```php\n// HTML-код документа\n$html = (string) $document;\n\n// HTML-код элемента\n$html = (string) $document->first('.post');\n```\n\n**Внимание:** использование данного способа нежелательно, т.к. в будущем он может быть удален.\n\n##### Форматирование HTML при выводе\n\n```php\necho $document->format()->html();\n```\n\nМетод `format()` отсутствует у элемента, поэтому, если нужно получить отформатированный HTML-код элемента, необходимо сначала преобразовать его в документ:\n\n```php\n$html = $element->toDocument()->format()->html();\n```\n\n#### Внутренний HTML\n\n```php\n$innerHtml = $element->innerHtml();\n```\n\nМетод `innerHtml()` отсутствует у документа, поэтому, если нужно получить внутренний HTML-код документа, необходимо сначала преобразовать его в элемент:\n\n```php\n$innerHtml = $document->toElement()->innerHtml();\n```\n\n### Получение XML\n\n```php\n// XML-код документа\necho $document->xml();\n\n// XML-код элемента\necho $document->first('book')->xml();\n```\n\n### Получение содержимого\n\nВозвращает текстовое содержимое узла и его потомков:\n\n```php\necho $element->text();\n```\n\n## Создание нового элемента\n\n### Создание экземпляра класса\n\n```php\nuse DiDom\\Element;\n\n$element = new Element('span', 'Hello');\n\n// выведет \"<span>Hello</span>\"\necho $element->html();\n```\n\nПервым параметром передается название элемента, вторым - его значение (необязательно), третьим - атрибуты элемента (необязательно).\n\nПример создания элемента с атрибутами:\n\n```php\n$attributes = ['name' => 'description', 'placeholder' => 'Enter description of item'];\n\n$element = new Element('textarea', 'Text', $attributes);\n```\n\nЭлемент можно создать и из экземпляра класса `DOMElement`:\n\n```php\nuse DiDom\\Element;\nuse DOMElement;\n\n$domElement = new DOMElement('span', 'Hello');\n$element = new Element($domElement);\n```\n\n#### Изменение элемента, созданного из `DOMElement`\n\nЭкземпляры класса `DOMElement`, созданные через конструктор (`new DOMElement(...)`), являются неизменяемыми, поэтому и элементы (экземпляры класса `DiDom\\Element`), созданные из таких объектов, так же являются неизменяемыми.\n\nПример:\n\n```php\n$element = new Element('span', 'Hello');\n\n// добавит атрибут \"id\" со значением \"greeting\"\n$element->attr('id', 'greeting');\n\n$domElement = new DOMElement('span', 'Hello');\n$element = new Element($domElement);\n\n// будет выброшено исключение\n// DOMException with message 'No Modification Allowed Error'\n$element->attr('id', 'greeting');\n```\n\n### С помощью метода `Document::createElement()`\n\n```php\n$document = new Document($html);\n\n$element = $document->createElement('span', 'Hello');\n```\n\n### С помощью CSS-селектора\n\nПервый параметр - селектор, второй - значение, третий - массив с атрибутами.\n\nАтрибуты элемента могут быть указаны как в селекторе, так и переданы отдельно в третьем параметре.\n\nЕсли название атрибута в массиве совпадает с названием атрибута из селектора, будет использовано значение, указанное в селекторе.\n\n```php\n$document = new Document($html);\n\n$element = $document->createElementBySelector('div.block', 'Foo', [\n    'id' => '#content',\n    'class' => '.container',\n]);\n```\n\nМожно так же использовать статический метод `createBySelector` класса `Element`:\n\n```php\n$element = Element::createBySelector('div.block', 'Foo', [\n     'id' => '#content',\n     'class' => '.container',\n ]);\n```\n\n## Получение названия элемента\n\n```php\n$element->tagName();\n```\n\n## Получение родительского элемента\n\n```php\n$element->parent();\n```\n\nТак же можно получить родительский элемент, соответствующий селектору:\n\n```php\n$element->closest('.foo');\n```\n\nВернет родительский элемент, у которого есть класс `foo`. Если подходящий элемент не найден, метод вернет `null`.\n\n## Получение соседних элементов\n\nПервый аргумент - CSS-селектор, второй - тип узла (`DOMElement`, `DOMText` или `DOMComment`).\n\nЕсли оба аргумента опущены, будет осуществлен поиск узлов любого типа.\n\nЕсли селектор указан, а тип узла нет, будет использован тип `DOMElement`.\n\n**Внимание:** Селектор можно использовать только с типом `DOMElement`.\n\n```php\n// предыдущий элемент\n$item->previousSibling();\n\n// предыдущий элемент, соответствующий селектору\n$item->previousSibling('span');\n\n// предыдущий элемент типа DOMElement\n$item->previousSibling(null, 'DOMElement');\n\n// предыдущий элемент типа DOMComment\n$item->previousSibling(null, 'DOMComment');\n```\n\n```php\n// все предыдущие элементы\n$item->previousSiblings();\n\n// все предыдущие элементы, соответствующие селектору\n$item->previousSiblings('span');\n\n// все предыдущие элементы типа DOMElement\n$item->previousSiblings(null, 'DOMElement');\n\n// все предыдущие элементы типа DOMComment\n$item->previousSiblings(null, 'DOMComment');\n```\n\n```php\n// следующий элемент\n$item->nextSibling();\n\n// следующий элемент, соответствующий селектору\n$item->nextSibling('span');\n\n// следующий элемент типа DOMElement\n$item->nextSibling(null, 'DOMElement');\n\n// следующий элемент типа DOMComment\n$item->nextSibling(null, 'DOMComment');\n```\n\n```php\n// все последующие элементы\n$item->nextSiblings();\n\n// все последующие элементы, соответствующие селектору\n$item->nextSiblings('span');\n\n// все последующие элементы типа DOMElement\n$item->nextSiblings(null, 'DOMElement');\n\n// все последующие элементы типа DOMComment\n$item->nextSiblings(null, 'DOMComment');\n```\n\n## Получение дочерних элементов\n\n```php\n$html = '<div>Foo<span>Bar</span><!--Baz--></div>';\n\n$document = new Document($html);\n\n$div = $document->first('div');\n\n// элемент (DOMElement)\n// string(3) \"Bar\"\nvar_dump($div->child(1)->text());\n\n// текстовый узел (DOMText)\n// string(3) \"Foo\"\nvar_dump($div->firstChild()->text());\n\n// комментарий (DOMComment)\n// string(3) \"Baz\"\nvar_dump($div->lastChild()->text());\n\n// array(3) { ... }\nvar_dump($div->children());\n```\n\n## Получение документа\n\n```php\n$document = new Document($html);\n\n$element = $document->first('input[name=email]');\n\n$document2 = $element->ownerDocument();\n\n// bool(true)\nvar_dump($document->is($document2));\n```\n\n## Работа с атрибутами элемента\n\n#### Создание/изменение атрибута\n\n##### Через метод `setAttribute`:\n```php\n$element->setAttribute('name', 'username');\n```\n\n##### Через метод `attr`:\n```php\n$element->attr('name', 'username');\n```\n\n##### Через магический метод `__set`:\n```php\n$element->name = 'username';\n```\n\n#### Получение значения атрибута\n\n##### Через метод `getAttribute`:\n```php\n$username = $element->getAttribute('value');\n```\n\n##### Через метод `attr`:\n```php\n$username = $element->attr('value');\n```\n\n##### Через магический метод `__get`:\n```php\n$username = $element->name;\n```\n\nЕсли атрибут не найден, вернет `null`.\n\n#### Проверка наличия атрибута\n\n##### Через метод `hasAttribute`:\n```php\nif ($element->hasAttribute('name')) {\n    // код\n}\n```\n\n##### Через магический метод `__isset`:\n```php\nif (isset($element->name)) {\n    // код\n}\n```\n\n#### Удаление атрибута:\n\n##### Через метод `removeAttribute`:\n```php\n$element->removeAttribute('name');\n```\n\n##### Через магический метод `__unset`:\n```php\nunset($element->name);\n```\n\n#### Получение всех атрибутов:\n\n```php\nvar_dump($element->attributes());\n```\n\n#### Получение определенных атрибутов:\n\n```php\nvar_dump($element->attributes(['name', 'type']));\n```\n\n#### Удаление всех атрибутов:\n\n```php\n$element->removeAllAttributes();\n```\n\n#### Удаление всех атрибутов, за исключением указанных:\n\n```php\n$element->removeAllAttributes(['name', 'type']);\n```\n\n## Сравнение элементов\n\n```php\n$element  = new Element('span', 'hello');\n$element2 = new Element('span', 'hello');\n\n// bool(true)\nvar_dump($element->is($element));\n\n// bool(false)\nvar_dump($element->is($element2));\n```\n\n## Добавление дочерних элементов\n\n```php\n$list = new Element('ul');\n\n$item = new Element('li', 'Item 1');\n\n$list->appendChild($item);\n\n$items = [\n    new Element('li', 'Item 2'),\n    new Element('li', 'Item 3'),\n];\n\n$list->appendChild($items);\n```\n\n## Замена элемента\n\n```php\n$title = new Element('title', 'foo');\n\n$document->first('title')->replace($title);\n```\n\n**Внимание:** заменить можно только те элементы, которые были найдены непосредственно в документе:\n\n```php\n// ничего не выйдет\n$document->first('head')->first('title')->replace($title);\n\n// а вот так да\n$document->first('head title')->replace($title);\n```\n\nПодробнее об этом в разделе [Поиск в элементе](#Поиск-в-элементе).\n\n## Удаление элемента\n\n```php\n$document->first('title')->remove();\n```\n\n**Внимание:** удалить можно только те элементы, которые были найдены непосредственно в документе:\n\n```php\n// ничего не выйдет\n$document->first('head')->first('title')->remove();\n\n// а вот так да\n$document->first('head title')->remove();\n```\n\nПодробнее об этом в разделе [Поиск в элементе](#Поиск-в-элементе).\n\n## Работа с кэшем\n\nКэш - массив XPath-выражений, полученных из CSS.\n\n#### Получение кэша\n\n```php\nuse DiDom\\Query;\n\n...\n\n$xpath    = Query::compile('h2');\n$compiled = Query::getCompiled();\n\n// array('h2' => '//h2')\nvar_dump($compiled);\n```\n\n#### Установка кэша\n\n```php\nQuery::setCompiled(['h2' => '//h2']);\n```\n\n## Прочее\n\n#### `preserveWhiteSpace`\n\nПо умолчанию сохранение пробелов между тегами отключено.\n\nВключать опцию `preserveWhiteSpace` следует до загрузки документа:\n\n```php\n$document = new Document();\n\n$document->preserveWhiteSpace();\n\n$document->loadXml($xml);\n```\n\n#### `matches`\n\nВозвращает `true`, если элемент соответсвует селектору:\n\n```php\n// вернет true, если элемент это div с идентификатором content\n$element->matches('div#content');\n\n// строгое соответствие\n// вернет true, если элемент это div с идентификатором content и ничего более\n// если у элемента будут какие-либо другие атрибуты, метод вернет false\n$element->matches('div#content', true);\n```\n\n#### `isElementNode`\n\nПроверяет, является ли элемент узлом типа DOMElement:\n\n```php\n$element->isElementNode();\n```\n\n#### `isTextNode`\n\nПроверяет, является ли элемент текстовым узлом (DOMText):\n\n```php\n$element->isTextNode();\n```\n\n#### `isCommentNode`\n\nПроверяет, является ли элемент комментарием (DOMComment):\n\n```php\n$element->isCommentNode();\n```\n\n## Сравнение с другими парсерами\n\n[Сравнение с другими парсерами](https://github.com/Imangazaliev/DiDOM/wiki/Сравнение-с-другими-парсерами-(1.6.3))\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.556640625,
          "content": "# DiDOM\n\n[![Build Status](https://travis-ci.com/Imangazaliev/DiDOM.svg?branch=master)](https://travis-ci.com/Imangazaliev/DiDOM)\n[![Total Downloads](https://poser.pugx.org/imangazaliev/didom/downloads)](https://packagist.org/packages/imangazaliev/didom)\n[![Latest Stable Version](https://poser.pugx.org/imangazaliev/didom/v/stable)](https://packagist.org/packages/imangazaliev/didom)\n[![License](https://poser.pugx.org/imangazaliev/didom/license)](https://packagist.org/packages/imangazaliev/didom)\n\nDiDOM - simple and fast HTML parser.\n\n- [README на русском](README-RU.md)\n- [DiDOM 1.x documentation](https://github.com/Imangazaliev/DiDOM/blob/98d411741d598b0b74bb38e215d99c1cdb0d532d/README.md). To upgrade from 1.x please checkout the [changelog](CHANGELOG.md).\n\n## Contents\n\n- [Installation](#installation)\n- [Quick start](#quick-start)\n- [Creating new document](#creating-new-document)\n- [Search for elements](#search-for-elements)\n- [Verify if element exists](#verify-if-element-exists)\n- [Search in element](#search-in-element)\n- [Supported selectors](#supported-selectors)\n- [Changing content](#changing-content)\n- [Output](#output)\n- [Working with elements](#working-with-elements)\n    - [Creating a new element](#creating-a-new-element)\n    - [Getting the name of an element](#getting-the-name-of-an-element)\n    - [Getting parent element](#getting-parent-element)\n    - [Getting sibling elements](#getting-sibling-elements)\n    - [Getting the child elements](#getting-the-child-elements)\n    - [Getting document](#getting-document)\n    - [Working with element attributes](#working-with-element-attributes)\n    - [Comparing elements](#comparing-elements)\n    - [Adding a child element](#adding-a-child-element)\n    - [Replacing element](#replacing-element)\n    - [Removing element](#removing-element)\n- [Working with cache](#working-with-cache)\n- [Miscellaneous](#miscellaneous)\n- [Comparison with other parsers](#comparison-with-other-parsers)\n\n## Installation\n\nTo install DiDOM run the command:\n\n    composer require imangazaliev/didom\n\n## Quick start\n\n```php\nuse DiDom\\Document;\n\n$document = new Document('http://www.news.com/', true);\n\n$posts = $document->find('.post');\n\nforeach($posts as $post) {\n    echo $post->text(), \"\\n\";\n}\n```\n\n## Creating new document\n\nDiDom allows to load HTML in several ways:\n\n##### With constructor\n\n```php\n// the first parameter is a string with HTML\n$document = new Document($html);\n\n// file path\n$document = new Document('page.html', true);\n\n// or URL\n$document = new Document('http://www.example.com/', true);\n```\n\nThe second parameter specifies if you need to load file. Default is `false`.\n\nSignature:\n\n```php\n__construct($string = null, $isFile = false, $encoding = 'UTF-8', $type = Document::TYPE_HTML)\n```\n\n`$string` - an HTML or XML string or a file path.\n\n`$isFile` - indicates that the first parameter is a path to a file.\n\n`$encoding` - the document encoding.\n\n`$type` - the document type (HTML - `Document::TYPE_HTML`, XML - `Document::TYPE_XML`).\n\n##### With separate methods\n\n```php\n$document = new Document();\n\n$document->loadHtml($html);\n\n$document->loadHtmlFile('page.html');\n\n$document->loadHtmlFile('http://www.example.com/');\n```\n\nThere are two methods available for loading XML: `loadXml` and `loadXmlFile`.\n\nThese methods accept additional [options](http://php.net/manual/en/libxml.constants.php):\n\n```php\n$document->loadHtml($html, LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD);\n$document->loadHtmlFile($url, LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD);\n\n$document->loadXml($xml, LIBXML_PARSEHUGE);\n$document->loadXmlFile($url, LIBXML_PARSEHUGE);\n```\n\n## Search for elements\n\nDiDOM accepts CSS selector or XPath as an expression for search. You need to path expression as the first parameter, and specify its type in the second one (default type is `Query::TYPE_CSS`):\n\n##### With method `find()`:\n\n```php\nuse DiDom\\Document;\nuse DiDom\\Query;\n\n...\n\n// CSS selector\n$posts = $document->find('.post');\n\n// XPath\n$posts = $document->find(\"//div[contains(@class, 'post')]\", Query::TYPE_XPATH);\n```\n\nIf the elements that match a given expression are found, then method returns an array of instances of `DiDom\\Element`, otherwise - an empty array. You could also get an array of `DOMElement` objects. To get this, pass `false` as the third parameter.\n\n##### With magic method `__invoke()`:\n\n```php\n$posts = $document('.post');\n```\n\n**Warning:** using this method is undesirable because it may be removed in the future.\n\n##### With method `xpath()`:\n\n```php\n$posts = $document->xpath(\"//*[contains(concat(' ', normalize-space(@class), ' '), ' post ')]\");\n```\n\nYou can do search inside an element:\n\n```php\necho $document->find('nav')[0]->first('ul.menu')->xpath('//li')[0]->text();\n```\n\n### Verify if element exists\n\nTo verify if element exist use `has()` method:\n\n```php\nif ($document->has('.post')) {\n    // code\n}\n```\n\nIf you need to check if element exist and then get it:\n\n```php\nif ($document->has('.post')) {\n    $elements = $document->find('.post');\n    // code\n}\n```\n\nbut it would be faster like this:\n\n```php\nif (count($elements = $document->find('.post')) > 0) {\n    // code\n}\n```\n\nbecause in the first case it makes two queries.\n\n## Search in element\n\nMethods `find()`, `first()`, `xpath()`, `has()`, `count()` are available in Element too.\n\nExample:\n\n```php\necho $document->find('nav')[0]->first('ul.menu')->xpath('//li')[0]->text();\n```\n\n#### Method `findInDocument()`\n\nIf you change, replace, or remove an element that was found in another element, the document will not be changed. This happens because method `find()` of `Element` class (a, respectively, the `first ()` and `xpath` methods) creates a new document to search.\n\nTo search for elements in the source document, you must use the methods `findInDocument()` and `firstInDocument()`:\n\n```php\n// nothing will happen\n$document->first('head')->first('title')->remove();\n\n// but this will do\n$document->first('head')->firstInDocument('title')->remove();\n```\n\n**Warning:** methods  `findInDocument()` and `firstInDocument()` work only for elements, which belong to a document, and for elements created via `new Element(...)`. If an element does not belong to a document, `LogicException` will be thrown;\n\n## Supported selectors\n\nDiDom supports search by:\n\n- tag\n- class, ID, name and value of an attribute\n- pseudo-classes:\n    - first-, last-, nth-child\n    - empty and not-empty\n    - contains\n    - has\n\n```php\n// all links\n$document->find('a');\n\n// any element with id = \"foo\" and \"bar\" class\n$document->find('#foo.bar');\n\n// any element with attribute \"name\"\n$document->find('[name]');\n// the same as\n$document->find('*[name]');\n\n// input field with the name \"foo\"\n$document->find('input[name=foo]');\n$document->find('input[name=\\'bar\\']');\n$document->find('input[name=\"baz\"]');\n\n// any element that has an attribute starting with \"data-\" and the value \"foo\"\n$document->find('*[^data-=foo]');\n\n// all links starting with https\n$document->find('a[href^=https]');\n\n// all images with the extension png\n$document->find('img[src$=png]');\n\n// all links containing the string \"example.com\"\n$document->find('a[href*=example.com]');\n\n// text of the links with \"foo\" class\n$document->find('a.foo::text');\n\n// address and title of all the fields with \"bar\" class\n$document->find('a.bar::attr(href|title)');\n```\n\n## Changing content\n\n### Change inner HTML\n\n```php\n$element->setInnerHtml('<a href=\"#\">Foo</a>');\n```\n\n### Change inner XML\n\n```php\n$element->setInnerXml(' Foo <span>Bar</span><!-- Baz --><![CDATA[\n    <root>Hello world!</root>\n]]>');\n```\n\n### Change value (as plain text)\n\n```php\n$element->setValue('Foo');\n// will be encoded like using htmlentities()\n$element->setValue('<a href=\"#\">Foo</a>');\n```\n\n## Output\n\n### Getting HTML\n\n##### With method `html()`:\n\n```php\n$posts = $document->find('.post');\n\necho $posts[0]->html();\n```\n\n##### Casting to string:\n\n```php\n$html = (string) $posts[0];\n```\n\n##### Formatting HTML output\n\n```php\n$html = $document->format()->html();\n```\n\nAn element does not have `format()` method, so if you need to output formatted HTML of the element, then first you have to convert it to a document:\n\n\n```php\n$html = $element->toDocument()->format()->html();\n```\n\n#### Inner HTML\n\n```php\n$innerHtml = $element->innerHtml();\n```\n\nDocument does not have the method `innerHtml()`, therefore, if you need to get inner HTML of a document, convert it into an element first:\n\n```php\n$innerHtml = $document->toElement()->innerHtml();\n```\n\n### Getting XML\n\n```php\necho $document->xml();\n\necho $document->first('book')->xml();\n```\n\n### Getting content\n\n```php\n$posts = $document->find('.post');\n\necho $posts[0]->text();\n```\n\n## Creating a new element\n\n### Creating an instance of the class\n\n```php\nuse DiDom\\Element;\n\n$element = new Element('span', 'Hello');\n\n// Outputs \"<span>Hello</span>\"\necho $element->html();\n```\n\nFirst parameter is a name of an attribute, the second one is its value (optional), the third one is element attributes (optional).\n\nAn example of creating an element with attributes:\n\n```php\n$attributes = ['name' => 'description', 'placeholder' => 'Enter description of item'];\n\n$element = new Element('textarea', 'Text', $attributes);\n```\n\nAn element can be created from an instance of the class `DOMElement`:\n\n```php\nuse DiDom\\Element;\nuse DOMElement;\n\n$domElement = new DOMElement('span', 'Hello');\n\n$element = new Element($domElement);\n```\n\n### Using the method `createElement`\n\n```php\n$document = new Document($html);\n\n$element = $document->createElement('span', 'Hello');\n```\n\n## Getting the name of an element\n\n```php\n$element->tagName();\n```\n\n## Getting parent element\n\n```php\n$document = new Document($html);\n\n$input = $document->find('input[name=email]')[0];\n\nvar_dump($input->parent());\n```\n\n## Getting sibling elements\n\n```php\n$document = new Document($html);\n\n$item = $document->find('ul.menu > li')[1];\n\nvar_dump($item->previousSibling());\n\nvar_dump($item->nextSibling());\n```\n\n## Getting the child elements\n\n```php\n$html = '<div>Foo<span>Bar</span><!--Baz--></div>';\n\n$document = new Document($html);\n\n$div = $document->first('div');\n\n// element node (DOMElement)\n// string(3) \"Bar\"\nvar_dump($div->child(1)->text());\n\n// text node (DOMText)\n// string(3) \"Foo\"\nvar_dump($div->firstChild()->text());\n\n// comment node (DOMComment)\n// string(3) \"Baz\"\nvar_dump($div->lastChild()->text());\n\n// array(3) { ... }\nvar_dump($div->children());\n```\n\n## Getting owner document\n\n```php\n$document = new Document($html);\n\n$element = $document->find('input[name=email]')[0];\n\n$document2 = $element->ownerDocument();\n\n// bool(true)\nvar_dump($document->is($document2));\n```\n\n## Working with element attributes\n\n#### Creating/updating an attribute\n\n##### With method `setAttribute`:\n```php\n$element->setAttribute('name', 'username');\n```\n\n##### With method `attr`:\n```php\n$element->attr('name', 'username');\n```\n\n##### With magic method `__set`:\n```php\n$element->name = 'username';\n```\n\n#### Getting value of an attribute\n\n##### With method `getAttribute`:\n\n```php\n$username = $element->getAttribute('value');\n```\n\n##### With method `attr`:\n\n```php\n$username = $element->attr('value');\n```\n\n##### With magic method `__get`:\n\n```php\n$username = $element->name;\n```\n\nReturns `null` if attribute is not found.\n\n#### Verify if attribute exists\n\n##### With method `hasAttribute`:\n\n```php\nif ($element->hasAttribute('name')) {\n    // code\n}\n```\n\n##### With magic method `__isset`:\n\n```php\nif (isset($element->name)) {\n    // code\n}\n```\n\n#### Removing attribute:\n\n##### With method `removeAttribute`:\n\n```php\n$element->removeAttribute('name');\n```\n\n##### With magic method `__unset`:\n\n```php\nunset($element->name);\n```\n\n## Comparing elements\n\n```php\n$element  = new Element('span', 'hello');\n$element2 = new Element('span', 'hello');\n\n// bool(true)\nvar_dump($element->is($element));\n\n// bool(false)\nvar_dump($element->is($element2));\n```\n\n## Appending child elements\n\n```php\n$list = new Element('ul');\n\n$item = new Element('li', 'Item 1');\n\n$list->appendChild($item);\n\n$items = [\n    new Element('li', 'Item 2'),\n    new Element('li', 'Item 3'),\n];\n\n$list->appendChild($items);\n```\n\n## Adding a child element\n\n```php\n$list = new Element('ul');\n\n$item = new Element('li', 'Item 1');\n$items = [\n    new Element('li', 'Item 2'),\n    new Element('li', 'Item 3'),\n];\n\n$list->appendChild($item);\n$list->appendChild($items);\n```\n\n## Replacing element\n\n```php\n$element = new Element('span', 'hello');\n\n$document->find('.post')[0]->replace($element);\n```\n\n**Waning:** you can replace only those elements that were found directly in the document:\n\n```php\n// nothing will happen\n$document->first('head')->first('title')->replace($title);\n\n// but this will do\n$document->first('head title')->replace($title);\n```\n\nMore about this in section [Search for elements](#search-for-elements).\n\n## Removing element\n\n```php\n$document->find('.post')[0]->remove();\n```\n\n**Warning:** you can remove only those elements that were found directly in the document:\n\n```php\n// nothing will happen\n$document->first('head')->first('title')->remove();\n\n// but this will do\n$document->first('head title')->remove();\n```\n\nMore about this in section [Search for elements](#search-for-elements).\n\n## Working with cache\n\nCache is an array of XPath expressions, that were converted from CSS.\n\n#### Getting from cache\n\n```php\nuse DiDom\\Query;\n\n...\n\n$xpath    = Query::compile('h2');\n$compiled = Query::getCompiled();\n\n// array('h2' => '//h2')\nvar_dump($compiled);\n```\n\n#### Cache setting\n\n```php\nQuery::setCompiled(['h2' => '//h2']);\n```\n\n## Miscellaneous\n\n#### `preserveWhiteSpace`\n\nBy default, whitespace preserving is disabled.\n\nYou can enable the `preserveWhiteSpace` option before loading the document:\n\n```php\n$document = new Document();\n\n$document->preserveWhiteSpace();\n\n$document->loadXml($xml);\n```\n\n#### `count`\n\nThe `count ()` method counts children that match the selector:\n\n```php\n// prints the number of links in the document\necho $document->count('a');\n```\n\n```php\n// prints the number of items in the list\necho $document->first('ul')->count('li');\n```\n\n#### `matches`\n\nReturns `true` if the node matches the selector:\n\n```php\n$element->matches('div#content');\n\n// strict match\n// returns true if the element is a div with id equals content and nothing else\n// if the element has any other attributes the method returns false\n$element->matches('div#content', true);\n```\n\n#### `isElementNode`\n\nChecks whether an element is an element (DOMElement):\n\n```php\n$element->isElementNode();\n```\n\n#### `isTextNode`\n\nChecks whether an element is a text node (DOMText):\n\n```php\n$element->isTextNode();\n```\n\n#### `isCommentNode`\n\nChecks whether the element is a comment (DOMComment):\n\n```php\n$element->isCommentNode();\n```\n\n## Comparison with other parsers\n\n[Comparison with other parsers](https://github.com/Imangazaliev/DiDOM/wiki/Comparison-with-other-parsers-(1.0))\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.78515625,
          "content": "{\n    \"name\": \"imangazaliev/didom\",\n    \"description\": \"Simple and fast HTML parser\",\n    \"type\": \"library\",\n    \"keywords\": [\"didom\", \"parser\", \"html\", \"xml\"],\n    \"license\": \"MIT\",\n    \"homepage\": \"https://github.com/Imangazaliev/DiDOM\",\n    \"authors\": [\n        {\n            \"name\": \"Imangazaliev Muhammad\",\n            \"email\": \"imangazalievm@gmail.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=7.2\",\n        \"ext-dom\": \"*\",\n        \"ext-iconv\": \"*\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^8.5\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"DiDom\\\\\": \"src/DiDom/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": { \n            \"DiDom\\\\Tests\\\\\": \"tests/\"\n        }\n    },\n    \"config\": {\n        \"platform\": {\n            \"php\": \"7.2\"\n        }\n    }\n}\n"
        },
        {
          "name": "composer.lock",
          "type": "blob",
          "size": 63.5595703125,
          "content": "{\n    \"_readme\": [\n        \"This file locks the dependencies of your project to a known state\",\n        \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies\",\n        \"This file is @generated automatically\"\n    ],\n    \"content-hash\": \"4cb2844eeea52c1240d6ccaa8381c25d\",\n    \"packages\": [],\n    \"packages-dev\": [\n        {\n            \"name\": \"doctrine/instantiator\",\n            \"version\": \"1.4.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/instantiator.git\",\n                \"reference\": \"10dcfce151b967d20fde1b34ae6640712c3891bc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/instantiator/zipball/10dcfce151b967d20fde1b34ae6640712c3891bc\",\n                \"reference\": \"10dcfce151b967d20fde1b34ae6640712c3891bc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^9\",\n                \"ext-pdo\": \"*\",\n                \"ext-phar\": \"*\",\n                \"phpbench/phpbench\": \"^0.16 || ^1\",\n                \"phpstan/phpstan\": \"^1.4\",\n                \"phpstan/phpstan-phpunit\": \"^1\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.5\",\n                \"vimeo/psalm\": \"^4.22\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Instantiator\\\\\": \"src/Doctrine/Instantiator/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marco Pivetta\",\n                    \"email\": \"ocramius@gmail.com\",\n                    \"homepage\": \"https://ocramius.github.io/\"\n                }\n            ],\n            \"description\": \"A small, lightweight utility to instantiate objects in PHP without invoking their constructors\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/instantiator.html\",\n            \"keywords\": [\n                \"constructor\",\n                \"instantiate\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/instantiator/issues\",\n                \"source\": \"https://github.com/doctrine/instantiator/tree/1.4.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Finstantiator\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-03-03T08:28:38+00:00\"\n        },\n        {\n            \"name\": \"myclabs/deep-copy\",\n            \"version\": \"1.11.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/myclabs/DeepCopy.git\",\n                \"reference\": \"14daed4296fae74d9e3201d2c4925d1acb7aa614\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/myclabs/DeepCopy/zipball/14daed4296fae74d9e3201d2c4925d1acb7aa614\",\n                \"reference\": \"14daed4296fae74d9e3201d2c4925d1acb7aa614\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"conflict\": {\n                \"doctrine/collections\": \"<1.6.8\",\n                \"doctrine/common\": \"<2.13.3 || >=3,<3.2.2\"\n            },\n            \"require-dev\": {\n                \"doctrine/collections\": \"^1.6.8\",\n                \"doctrine/common\": \"^2.13.3 || ^3.2.2\",\n                \"phpunit/phpunit\": \"^7.5.20 || ^8.5.23 || ^9.5.13\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/DeepCopy/deep_copy.php\"\n                ],\n                \"psr-4\": {\n                    \"DeepCopy\\\\\": \"src/DeepCopy/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"Create deep copies (clones) of your objects\",\n            \"keywords\": [\n                \"clone\",\n                \"copy\",\n                \"duplicate\",\n                \"object\",\n                \"object graph\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/myclabs/DeepCopy/issues\",\n                \"source\": \"https://github.com/myclabs/DeepCopy/tree/1.11.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/myclabs/deep-copy\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-03-03T13:19:32+00:00\"\n        },\n        {\n            \"name\": \"phar-io/manifest\",\n            \"version\": \"2.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phar-io/manifest.git\",\n                \"reference\": \"97803eca37d319dfa7826cc2437fc020857acb53\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phar-io/manifest/zipball/97803eca37d319dfa7826cc2437fc020857acb53\",\n                \"reference\": \"97803eca37d319dfa7826cc2437fc020857acb53\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-phar\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"phar-io/version\": \"^3.0.1\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Heuer\",\n                    \"email\": \"sebastian@phpeople.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Component for reading phar.io manifest information from a PHP Archive (PHAR)\",\n            \"support\": {\n                \"issues\": \"https://github.com/phar-io/manifest/issues\",\n                \"source\": \"https://github.com/phar-io/manifest/tree/2.0.3\"\n            },\n            \"time\": \"2021-07-20T11:28:43+00:00\"\n        },\n        {\n            \"name\": \"phar-io/version\",\n            \"version\": \"3.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phar-io/version.git\",\n                \"reference\": \"4f7fd7836c6f332bb2933569e566a0d6c4cbed74\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phar-io/version/zipball/4f7fd7836c6f332bb2933569e566a0d6c4cbed74\",\n                \"reference\": \"4f7fd7836c6f332bb2933569e566a0d6c4cbed74\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Heuer\",\n                    \"email\": \"sebastian@phpeople.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Library for handling version information and constraints\",\n            \"support\": {\n                \"issues\": \"https://github.com/phar-io/version/issues\",\n                \"source\": \"https://github.com/phar-io/version/tree/3.2.1\"\n            },\n            \"time\": \"2022-02-21T01:04:05+00:00\"\n        },\n        {\n            \"name\": \"phpdocumentor/reflection-common\",\n            \"version\": \"2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpDocumentor/ReflectionCommon.git\",\n                \"reference\": \"1d01c49d4ed62f25aa84a747ad35d5a16924662b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpDocumentor/ReflectionCommon/zipball/1d01c49d4ed62f25aa84a747ad35d5a16924662b\",\n                \"reference\": \"1d01c49d4ed62f25aa84a747ad35d5a16924662b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-2.x\": \"2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"phpDocumentor\\\\Reflection\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jaap van Otterdijk\",\n                    \"email\": \"opensource@ijaap.nl\"\n                }\n            ],\n            \"description\": \"Common reflection classes used by phpdocumentor to reflect the code structure\",\n            \"homepage\": \"http://www.phpdoc.org\",\n            \"keywords\": [\n                \"FQSEN\",\n                \"phpDocumentor\",\n                \"phpdoc\",\n                \"reflection\",\n                \"static analysis\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/phpDocumentor/ReflectionCommon/issues\",\n                \"source\": \"https://github.com/phpDocumentor/ReflectionCommon/tree/2.x\"\n            },\n            \"time\": \"2020-06-27T09:03:43+00:00\"\n        },\n        {\n            \"name\": \"phpdocumentor/reflection-docblock\",\n            \"version\": \"5.3.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpDocumentor/ReflectionDocBlock.git\",\n                \"reference\": \"622548b623e81ca6d78b721c5e029f4ce664f170\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpDocumentor/ReflectionDocBlock/zipball/622548b623e81ca6d78b721c5e029f4ce664f170\",\n                \"reference\": \"622548b623e81ca6d78b721c5e029f4ce664f170\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-filter\": \"*\",\n                \"php\": \"^7.2 || ^8.0\",\n                \"phpdocumentor/reflection-common\": \"^2.2\",\n                \"phpdocumentor/type-resolver\": \"^1.3\",\n                \"webmozart/assert\": \"^1.9.1\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"~1.3.2\",\n                \"psalm/phar\": \"^4.8\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"phpDocumentor\\\\Reflection\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mike van Riel\",\n                    \"email\": \"me@mikevanriel.com\"\n                },\n                {\n                    \"name\": \"Jaap van Otterdijk\",\n                    \"email\": \"account@ijaap.nl\"\n                }\n            ],\n            \"description\": \"With this component, a library can provide support for annotations via DocBlocks or otherwise retrieve information that is embedded in a DocBlock.\",\n            \"support\": {\n                \"issues\": \"https://github.com/phpDocumentor/ReflectionDocBlock/issues\",\n                \"source\": \"https://github.com/phpDocumentor/ReflectionDocBlock/tree/5.3.0\"\n            },\n            \"time\": \"2021-10-19T17:43:47+00:00\"\n        },\n        {\n            \"name\": \"phpdocumentor/type-resolver\",\n            \"version\": \"1.6.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpDocumentor/TypeResolver.git\",\n                \"reference\": \"77a32518733312af16a44300404e945338981de3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpDocumentor/TypeResolver/zipball/77a32518733312af16a44300404e945338981de3\",\n                \"reference\": \"77a32518733312af16a44300404e945338981de3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\",\n                \"phpdocumentor/reflection-common\": \"^2.0\"\n            },\n            \"require-dev\": {\n                \"ext-tokenizer\": \"*\",\n                \"psalm/phar\": \"^4.8\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-1.x\": \"1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"phpDocumentor\\\\Reflection\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mike van Riel\",\n                    \"email\": \"me@mikevanriel.com\"\n                }\n            ],\n            \"description\": \"A PSR-5 based resolver of Class names, Types and Structural Element Names\",\n            \"support\": {\n                \"issues\": \"https://github.com/phpDocumentor/TypeResolver/issues\",\n                \"source\": \"https://github.com/phpDocumentor/TypeResolver/tree/1.6.1\"\n            },\n            \"time\": \"2022-03-15T21:29:03+00:00\"\n        },\n        {\n            \"name\": \"phpspec/prophecy\",\n            \"version\": \"v1.15.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpspec/prophecy.git\",\n                \"reference\": \"bbcd7380b0ebf3961ee21409db7b38bc31d69a13\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpspec/prophecy/zipball/bbcd7380b0ebf3961ee21409db7b38bc31d69a13\",\n                \"reference\": \"bbcd7380b0ebf3961ee21409db7b38bc31d69a13\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/instantiator\": \"^1.2\",\n                \"php\": \"^7.2 || ~8.0, <8.2\",\n                \"phpdocumentor/reflection-docblock\": \"^5.2\",\n                \"sebastian/comparator\": \"^3.0 || ^4.0\",\n                \"sebastian/recursion-context\": \"^3.0 || ^4.0\"\n            },\n            \"require-dev\": {\n                \"phpspec/phpspec\": \"^6.0 || ^7.0\",\n                \"phpunit/phpunit\": \"^8.0 || ^9.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Prophecy\\\\\": \"src/Prophecy\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Konstantin Kudryashov\",\n                    \"email\": \"ever.zet@gmail.com\",\n                    \"homepage\": \"http://everzet.com\"\n                },\n                {\n                    \"name\": \"Marcello Duarte\",\n                    \"email\": \"marcello.duarte@gmail.com\"\n                }\n            ],\n            \"description\": \"Highly opinionated mocking framework for PHP 5.3+\",\n            \"homepage\": \"https://github.com/phpspec/prophecy\",\n            \"keywords\": [\n                \"Double\",\n                \"Dummy\",\n                \"fake\",\n                \"mock\",\n                \"spy\",\n                \"stub\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/phpspec/prophecy/issues\",\n                \"source\": \"https://github.com/phpspec/prophecy/tree/v1.15.0\"\n            },\n            \"time\": \"2021-12-08T12:19:24+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-code-coverage\",\n            \"version\": \"7.0.15\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-code-coverage.git\",\n                \"reference\": \"819f92bba8b001d4363065928088de22f25a3a48\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/819f92bba8b001d4363065928088de22f25a3a48\",\n                \"reference\": \"819f92bba8b001d4363065928088de22f25a3a48\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"php\": \">=7.2\",\n                \"phpunit/php-file-iterator\": \"^2.0.2\",\n                \"phpunit/php-text-template\": \"^1.2.1\",\n                \"phpunit/php-token-stream\": \"^3.1.3 || ^4.0\",\n                \"sebastian/code-unit-reverse-lookup\": \"^1.0.1\",\n                \"sebastian/environment\": \"^4.2.2\",\n                \"sebastian/version\": \"^2.0.1\",\n                \"theseer/tokenizer\": \"^1.1.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.2.2\"\n            },\n            \"suggest\": {\n                \"ext-xdebug\": \"^2.7.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"7.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library that provides collection, processing, and rendering functionality for PHP code coverage information.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-code-coverage\",\n            \"keywords\": [\n                \"coverage\",\n                \"testing\",\n                \"xunit\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-code-coverage/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-code-coverage/tree/7.0.15\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2021-07-26T12:20:09+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-file-iterator\",\n            \"version\": \"2.0.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-file-iterator.git\",\n                \"reference\": \"42c5ba5220e6904cbfe8b1a1bda7c0cfdc8c12f5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-file-iterator/zipball/42c5ba5220e6904cbfe8b1a1bda7c0cfdc8c12f5\",\n                \"reference\": \"42c5ba5220e6904cbfe8b1a1bda7c0cfdc8c12f5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"FilterIterator implementation that filters files based on a list of suffixes.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-file-iterator/\",\n            \"keywords\": [\n                \"filesystem\",\n                \"iterator\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-file-iterator/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-file-iterator/tree/2.0.5\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2021-12-02T12:42:26+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-text-template\",\n            \"version\": \"1.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-text-template.git\",\n                \"reference\": \"31f8b717e51d9a2afca6c9f046f5d69fc27c8686\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-text-template/zipball/31f8b717e51d9a2afca6c9f046f5d69fc27c8686\",\n                \"reference\": \"31f8b717e51d9a2afca6c9f046f5d69fc27c8686\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.3\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Simple template engine.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-text-template/\",\n            \"keywords\": [\n                \"template\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-text-template/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-text-template/tree/1.2.1\"\n            },\n            \"time\": \"2015-06-21T13:50:34+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-timer\",\n            \"version\": \"2.1.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-timer.git\",\n                \"reference\": \"2454ae1765516d20c4ffe103d85a58a9a3bd5662\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-timer/zipball/2454ae1765516d20c4ffe103d85a58a9a3bd5662\",\n                \"reference\": \"2454ae1765516d20c4ffe103d85a58a9a3bd5662\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Utility class for timing\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-timer/\",\n            \"keywords\": [\n                \"timer\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-timer/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-timer/tree/2.1.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-11-30T08:20:02+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-token-stream\",\n            \"version\": \"3.1.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-token-stream.git\",\n                \"reference\": \"9c1da83261628cb24b6a6df371b6e312b3954768\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-token-stream/zipball/9c1da83261628cb24b6a6df371b6e312b3954768\",\n                \"reference\": \"9c1da83261628cb24b6a6df371b6e312b3954768\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-tokenizer\": \"*\",\n                \"php\": \">=7.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^7.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Wrapper around PHP's tokenizer extension.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-token-stream/\",\n            \"keywords\": [\n                \"tokenizer\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-token-stream/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-token-stream/tree/3.1.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2021-07-26T12:15:06+00:00\"\n        },\n        {\n            \"name\": \"phpunit/phpunit\",\n            \"version\": \"8.5.26\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/phpunit.git\",\n                \"reference\": \"ef117c59fc4c54a979021b26d08a3373e386606d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/phpunit/zipball/ef117c59fc4c54a979021b26d08a3373e386606d\",\n                \"reference\": \"ef117c59fc4c54a979021b26d08a3373e386606d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/instantiator\": \"^1.3.1\",\n                \"ext-dom\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"ext-xml\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"myclabs/deep-copy\": \"^1.10.0\",\n                \"phar-io/manifest\": \"^2.0.3\",\n                \"phar-io/version\": \"^3.0.2\",\n                \"php\": \">=7.2\",\n                \"phpspec/prophecy\": \"^1.10.3\",\n                \"phpunit/php-code-coverage\": \"^7.0.12\",\n                \"phpunit/php-file-iterator\": \"^2.0.4\",\n                \"phpunit/php-text-template\": \"^1.2.1\",\n                \"phpunit/php-timer\": \"^2.1.2\",\n                \"sebastian/comparator\": \"^3.0.2\",\n                \"sebastian/diff\": \"^3.0.2\",\n                \"sebastian/environment\": \"^4.2.3\",\n                \"sebastian/exporter\": \"^3.1.2\",\n                \"sebastian/global-state\": \"^3.0.0\",\n                \"sebastian/object-enumerator\": \"^3.0.3\",\n                \"sebastian/resource-operations\": \"^2.0.1\",\n                \"sebastian/type\": \"^1.1.3\",\n                \"sebastian/version\": \"^2.0.1\"\n            },\n            \"require-dev\": {\n                \"ext-pdo\": \"*\"\n            },\n            \"suggest\": {\n                \"ext-soap\": \"*\",\n                \"ext-xdebug\": \"*\",\n                \"phpunit/php-invoker\": \"^2.0.0\"\n            },\n            \"bin\": [\n                \"phpunit\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"8.5-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"The PHP Unit Testing framework.\",\n            \"homepage\": \"https://phpunit.de/\",\n            \"keywords\": [\n                \"phpunit\",\n                \"testing\",\n                \"xunit\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/phpunit/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/phpunit/tree/8.5.26\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://phpunit.de/sponsors.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2022-04-01T12:34:39+00:00\"\n        },\n        {\n            \"name\": \"sebastian/code-unit-reverse-lookup\",\n            \"version\": \"1.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup.git\",\n                \"reference\": \"1de8cd5c010cb153fcd68b8d0f64606f523f7619\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/code-unit-reverse-lookup/zipball/1de8cd5c010cb153fcd68b8d0f64606f523f7619\",\n                \"reference\": \"1de8cd5c010cb153fcd68b8d0f64606f523f7619\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.6\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Looks up which function or method a line of code belongs to\",\n            \"homepage\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup/\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup/tree/1.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-11-30T08:15:22+00:00\"\n        },\n        {\n            \"name\": \"sebastian/comparator\",\n            \"version\": \"3.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/comparator.git\",\n                \"reference\": \"1071dfcef776a57013124ff35e1fc41ccd294758\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/comparator/zipball/1071dfcef776a57013124ff35e1fc41ccd294758\",\n                \"reference\": \"1071dfcef776a57013124ff35e1fc41ccd294758\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\",\n                \"sebastian/diff\": \"^3.0\",\n                \"sebastian/exporter\": \"^3.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Jeff Welch\",\n                    \"email\": \"whatthejeff@gmail.com\"\n                },\n                {\n                    \"name\": \"Volker Dusch\",\n                    \"email\": \"github@wallbash.com\"\n                },\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@2bepublished.at\"\n                }\n            ],\n            \"description\": \"Provides the functionality to compare PHP values for equality\",\n            \"homepage\": \"https://github.com/sebastianbergmann/comparator\",\n            \"keywords\": [\n                \"comparator\",\n                \"compare\",\n                \"equality\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/comparator/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/comparator/tree/3.0.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-11-30T08:04:30+00:00\"\n        },\n        {\n            \"name\": \"sebastian/diff\",\n            \"version\": \"3.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/diff.git\",\n                \"reference\": \"14f72dd46eaf2f2293cbe79c93cc0bc43161a211\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/diff/zipball/14f72dd46eaf2f2293cbe79c93cc0bc43161a211\",\n                \"reference\": \"14f72dd46eaf2f2293cbe79c93cc0bc43161a211\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^7.5 || ^8.0\",\n                \"symfony/process\": \"^2 || ^3.3 || ^4\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Kore Nordmann\",\n                    \"email\": \"mail@kore-nordmann.de\"\n                }\n            ],\n            \"description\": \"Diff implementation\",\n            \"homepage\": \"https://github.com/sebastianbergmann/diff\",\n            \"keywords\": [\n                \"diff\",\n                \"udiff\",\n                \"unidiff\",\n                \"unified diff\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/diff/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/diff/tree/3.0.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-11-30T07:59:04+00:00\"\n        },\n        {\n            \"name\": \"sebastian/environment\",\n            \"version\": \"4.2.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/environment.git\",\n                \"reference\": \"d47bbbad83711771f167c72d4e3f25f7fcc1f8b0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/environment/zipball/d47bbbad83711771f167c72d4e3f25f7fcc1f8b0\",\n                \"reference\": \"d47bbbad83711771f167c72d4e3f25f7fcc1f8b0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^7.5\"\n            },\n            \"suggest\": {\n                \"ext-posix\": \"*\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Provides functionality to handle HHVM/PHP environments\",\n            \"homepage\": \"http://www.github.com/sebastianbergmann/environment\",\n            \"keywords\": [\n                \"Xdebug\",\n                \"environment\",\n                \"hhvm\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/environment/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/environment/tree/4.2.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-11-30T07:53:42+00:00\"\n        },\n        {\n            \"name\": \"sebastian/exporter\",\n            \"version\": \"3.1.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/exporter.git\",\n                \"reference\": \"0c32ea2e40dbf59de29f3b49bf375176ce7dd8db\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/exporter/zipball/0c32ea2e40dbf59de29f3b49bf375176ce7dd8db\",\n                \"reference\": \"0c32ea2e40dbf59de29f3b49bf375176ce7dd8db\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.0\",\n                \"sebastian/recursion-context\": \"^3.0\"\n            },\n            \"require-dev\": {\n                \"ext-mbstring\": \"*\",\n                \"phpunit/phpunit\": \"^8.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Jeff Welch\",\n                    \"email\": \"whatthejeff@gmail.com\"\n                },\n                {\n                    \"name\": \"Volker Dusch\",\n                    \"email\": \"github@wallbash.com\"\n                },\n                {\n                    \"name\": \"Adam Harvey\",\n                    \"email\": \"aharvey@php.net\"\n                },\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@gmail.com\"\n                }\n            ],\n            \"description\": \"Provides the functionality to export PHP variables for visualization\",\n            \"homepage\": \"http://www.github.com/sebastianbergmann/exporter\",\n            \"keywords\": [\n                \"export\",\n                \"exporter\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/exporter/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/exporter/tree/3.1.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2021-11-11T13:51:24+00:00\"\n        },\n        {\n            \"name\": \"sebastian/global-state\",\n            \"version\": \"3.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/global-state.git\",\n                \"reference\": \"de036ec91d55d2a9e0db2ba975b512cdb1c23921\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/global-state/zipball/de036ec91d55d2a9e0db2ba975b512cdb1c23921\",\n                \"reference\": \"de036ec91d55d2a9e0db2ba975b512cdb1c23921\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\",\n                \"sebastian/object-reflector\": \"^1.1.1\",\n                \"sebastian/recursion-context\": \"^3.0\"\n            },\n            \"require-dev\": {\n                \"ext-dom\": \"*\",\n                \"phpunit/phpunit\": \"^8.0\"\n            },\n            \"suggest\": {\n                \"ext-uopz\": \"*\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Snapshotting of global state\",\n            \"homepage\": \"http://www.github.com/sebastianbergmann/global-state\",\n            \"keywords\": [\n                \"global state\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/global-state/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/global-state/tree/3.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2022-02-10T06:55:38+00:00\"\n        },\n        {\n            \"name\": \"sebastian/object-enumerator\",\n            \"version\": \"3.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/object-enumerator.git\",\n                \"reference\": \"e67f6d32ebd0c749cf9d1dbd9f226c727043cdf2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/object-enumerator/zipball/e67f6d32ebd0c749cf9d1dbd9f226c727043cdf2\",\n                \"reference\": \"e67f6d32ebd0c749cf9d1dbd9f226c727043cdf2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.0\",\n                \"sebastian/object-reflector\": \"^1.1.1\",\n                \"sebastian/recursion-context\": \"^3.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^6.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Traverses array structures and object graphs to enumerate all referenced objects\",\n            \"homepage\": \"https://github.com/sebastianbergmann/object-enumerator/\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/object-enumerator/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/object-enumerator/tree/3.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-11-30T07:40:27+00:00\"\n        },\n        {\n            \"name\": \"sebastian/object-reflector\",\n            \"version\": \"1.1.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/object-reflector.git\",\n                \"reference\": \"9b8772b9cbd456ab45d4a598d2dd1a1bced6363d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/object-reflector/zipball/9b8772b9cbd456ab45d4a598d2dd1a1bced6363d\",\n                \"reference\": \"9b8772b9cbd456ab45d4a598d2dd1a1bced6363d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^6.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Allows reflection of object attributes, including inherited and non-public ones\",\n            \"homepage\": \"https://github.com/sebastianbergmann/object-reflector/\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/object-reflector/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/object-reflector/tree/1.1.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-11-30T07:37:18+00:00\"\n        },\n        {\n            \"name\": \"sebastian/recursion-context\",\n            \"version\": \"3.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/recursion-context.git\",\n                \"reference\": \"367dcba38d6e1977be014dc4b22f47a484dac7fb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/367dcba38d6e1977be014dc4b22f47a484dac7fb\",\n                \"reference\": \"367dcba38d6e1977be014dc4b22f47a484dac7fb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^6.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Jeff Welch\",\n                    \"email\": \"whatthejeff@gmail.com\"\n                },\n                {\n                    \"name\": \"Adam Harvey\",\n                    \"email\": \"aharvey@php.net\"\n                }\n            ],\n            \"description\": \"Provides functionality to recursively process PHP variables\",\n            \"homepage\": \"http://www.github.com/sebastianbergmann/recursion-context\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/recursion-context/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/recursion-context/tree/3.0.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-11-30T07:34:24+00:00\"\n        },\n        {\n            \"name\": \"sebastian/resource-operations\",\n            \"version\": \"2.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/resource-operations.git\",\n                \"reference\": \"31d35ca87926450c44eae7e2611d45a7a65ea8b3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/resource-operations/zipball/31d35ca87926450c44eae7e2611d45a7a65ea8b3\",\n                \"reference\": \"31d35ca87926450c44eae7e2611d45a7a65ea8b3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Provides a list of PHP built-in functions that operate on resources\",\n            \"homepage\": \"https://www.github.com/sebastianbergmann/resource-operations\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/resource-operations/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/resource-operations/tree/2.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-11-30T07:30:19+00:00\"\n        },\n        {\n            \"name\": \"sebastian/type\",\n            \"version\": \"1.1.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/type.git\",\n                \"reference\": \"0150cfbc4495ed2df3872fb31b26781e4e077eb4\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/type/zipball/0150cfbc4495ed2df3872fb31b26781e4e077eb4\",\n                \"reference\": \"0150cfbc4495ed2df3872fb31b26781e4e077eb4\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Collection of value objects that represent the types of the PHP type system\",\n            \"homepage\": \"https://github.com/sebastianbergmann/type\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/type/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/type/tree/1.1.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-11-30T07:25:11+00:00\"\n        },\n        {\n            \"name\": \"sebastian/version\",\n            \"version\": \"2.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/version.git\",\n                \"reference\": \"99732be0ddb3361e16ad77b68ba41efc8e979019\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/version/zipball/99732be0ddb3361e16ad77b68ba41efc8e979019\",\n                \"reference\": \"99732be0ddb3361e16ad77b68ba41efc8e979019\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.6\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library that helps with managing the version number of Git-hosted PHP projects\",\n            \"homepage\": \"https://github.com/sebastianbergmann/version\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/version/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/version/tree/master\"\n            },\n            \"time\": \"2016-10-03T07:35:21+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-ctype\",\n            \"version\": \"v1.25.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-ctype.git\",\n                \"reference\": \"30885182c981ab175d4d034db0f6f469898070ab\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-ctype/zipball/30885182c981ab175d4d034db0f6f469898070ab\",\n                \"reference\": \"30885182c981ab175d4d034db0f6f469898070ab\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"provide\": {\n                \"ext-ctype\": \"*\"\n            },\n            \"suggest\": {\n                \"ext-ctype\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.23-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Ctype\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Gert de Pagter\",\n                    \"email\": \"BackEndTea@gmail.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for ctype functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"ctype\",\n                \"polyfill\",\n                \"portable\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-ctype/tree/v1.25.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-10-20T20:35:02+00:00\"\n        },\n        {\n            \"name\": \"theseer/tokenizer\",\n            \"version\": \"1.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/theseer/tokenizer.git\",\n                \"reference\": \"34a41e998c2183e22995f158c581e7b5e755ab9e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/theseer/tokenizer/zipball/34a41e998c2183e22995f158c581e7b5e755ab9e\",\n                \"reference\": \"34a41e998c2183e22995f158c581e7b5e755ab9e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-tokenizer\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"A small library for converting tokenized PHP source code into XML and potentially other formats\",\n            \"support\": {\n                \"issues\": \"https://github.com/theseer/tokenizer/issues\",\n                \"source\": \"https://github.com/theseer/tokenizer/tree/1.2.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/theseer\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2021-07-28T10:34:58+00:00\"\n        },\n        {\n            \"name\": \"webmozart/assert\",\n            \"version\": \"1.10.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/webmozarts/assert.git\",\n                \"reference\": \"6964c76c7804814a842473e0c8fd15bab0f18e25\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/webmozarts/assert/zipball/6964c76c7804814a842473e0c8fd15bab0f18e25\",\n                \"reference\": \"6964c76c7804814a842473e0c8fd15bab0f18e25\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\",\n                \"symfony/polyfill-ctype\": \"^1.8\"\n            },\n            \"conflict\": {\n                \"phpstan/phpstan\": \"<0.12.20\",\n                \"vimeo/psalm\": \"<4.6.1 || 4.6.2\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5.13\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.10-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Webmozart\\\\Assert\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@gmail.com\"\n                }\n            ],\n            \"description\": \"Assertions to validate method input/output with nice error messages.\",\n            \"keywords\": [\n                \"assert\",\n                \"check\",\n                \"validate\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/webmozarts/assert/issues\",\n                \"source\": \"https://github.com/webmozarts/assert/tree/1.10.0\"\n            },\n            \"time\": \"2021-03-09T10:59:23+00:00\"\n        }\n    ],\n    \"aliases\": [],\n    \"minimum-stability\": \"stable\",\n    \"stability-flags\": [],\n    \"prefer-stable\": false,\n    \"prefer-lowest\": false,\n    \"platform\": {\n        \"php\": \">=7.2\",\n        \"ext-dom\": \"*\",\n        \"ext-iconv\": \"*\"\n    },\n    \"platform-dev\": [],\n    \"platform-overrides\": {\n        \"php\": \"7.2\"\n    },\n    \"plugin-api-version\": \"2.1.0\"\n}\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.4775390625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit\n    backupGlobals=\"false\"\n    backupStaticAttributes=\"false\"\n    bootstrap=\"tests/bootstrap.php\"\n    colors=\"true\"\n    convertErrorsToExceptions=\"true\"\n    convertNoticesToExceptions=\"true\"\n    convertWarningsToExceptions=\"true\"\n    processIsolation=\"false\"\n    stopOnFailure=\"false\"\n>\n    <testsuites>\n        <testsuite name=\"DiDom Test Suite\">\n            <directory>./tests/</directory>\n        </testsuite>\n    </testsuites>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}