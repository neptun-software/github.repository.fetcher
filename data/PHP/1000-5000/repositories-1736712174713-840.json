{
  "metadata": {
    "timestamp": 1736712174713,
    "page": 840,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "formers/former",
      "stars": 1341,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0771484375,
          "content": "# Development\n.idea\n.phpunit.result.cache\n\n# Dependencies\ncomposer.lock\nvendor\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 7.693359375,
          "content": "# CHANGELOG\n\n## 4.0.0\n- Laravel 5+ branch\n\n## 3.5.3\n\n### Added\n- Allow repopulating multiselects from Laravel relationships\n- Support checkbox repopulation from models\n\n### Fixed\n- Handle dot notation in live validation\n- Don't repopulate _token fields\n- Encode values of hidden fields\n\n## 3.5.2\n\n### Fixed\n- Fix the `bind` function for checkables\n- Fixed an error when manually creating checkables\n\n## 3.5.1\n\n### Added\n- Added support for Foundation 5\n- Added PlainText field type\n- Added `->bind()` method to fields to change which binding to use for repopulation\n\n### Changed\n- Peformance tweaks (framework caching)\n\n### Fixed\n- Fixed position of MAX_FILE_SIZE field\n- Fixed Laravel 5 compatibility\n- Fixed wrong class for inline checkables on Bootstrap 3\n\n## 3.5.0\n\n### Changed\n- Bumped minimum requirement to 5.4\n\n## 3.4.4\n\n### Deprecated\n- Last release for PHP 5.3\n\n## 3.4.3\n\n### Added\n- Added step parameter to `Select::range()` method\n- Allow individual checkboxes to override the global push-checkbox setting\n\n### Changed\n- Add some additional options for Foundation 4\n- Allow translation method to fetch nested keys via dot or brackets\n\n### Fixed\n- Fix some repopulation issues\n\n## 3.4.2\n\n### Added\n- Added the ability to specify multiple namespaces to look for fields in the MethodDispatcher\n- Appended buttons are now properly wrapped in input-group-btn in Bootstrap 3\n\n### Fixed\n- Fixed a bug where wrong items would get selected in optgroups\n- Fixed some bug when fetching data from the request\n- Fixed spaces in validation rules causing errors\n\n## 3.4.1\n\n### Added\n- Added support for passing MessageBag instances to `withErrors`\n\n### Changed\n- MethodDispatcher can now look for field classes in multiple namespaces\n- Use objects' `toArray` instead of array casting when possible\n\n### Fixed\n- Fix framework classes overwriting classes predefined on Field classes\n- Fix stability problems that prevented Former form being installed\n\n## 3.4.0\n\n### Added\n- Added `Former::rawOpen` to open a temporary no-framework/no-label form\n- Added support for camelCase form openers (ie. `verticalOpen` and `vertical_open`)\n- Added possibility to disable automatic capitalization of translations\n\n### Fixed\n- Fixed a bug where two fields with the same name would get the same ID\n- Various bugfixes related to repopulation\n- Fix various memory and 4.1 compatibility issues\n\n## 3.3.0\n\n### Added\n- Add ability to pass attributes to a select's options\n- Add support for PATCH method\n- Add ability to create range number fields (`Former::number('foo')->range(1, 5)` sets the `min` to 1 and `max` to 5)\n- Added Form->route and Form->controller to set a form's action to a route/controller path, and the corresponding method\n\n### Changed\n- Allow switching to alternate icon fonts\n- Form classes are now framework-dependant\n- More work on the Bootstrap 3 integration\n- Prevent custom groups from responding to errors from non-grouped fields\n\n### Fixed\n- Fix bug in selection false values in Selects\n- Fix bug where selects with optgroups weren't populated correctly\n\n## 3.2.0\n\n### Changed\n- Updated TwitterBootstrap3 to the latest release\n- Former now handles camelCase attributes (ie. `dataPlaceholder` for `data-placeholder`)\n- `$group->getErrors()` is now public\n\n## 3.1.0\n\n### Added\n- You can now configure which attributes are translated by default\n- Added the `TwitterBootstrap3` framework\n- Add a second argument to `Former::group` that allows specifying which errors should be displayed\n- Add ability to interact with the Group's method by using `onGroup{method}` (ex: `onGroupAddClass`)\n\n### Changed\n- All fields are now displayed as \"raw\" by default in custom groups\n\n### Fixed\n- Fix some checkable bugs\n\n## 3.0.0\n\n### Added\n- Refactor of Former â€“ the project is now framework agnostic, see installation details\n- You can now chain methods to actions blocks `Former::actions('Hello', 'Mr Bond')->id('foo')->addClass('bar')`\n- You can now chain buttons to actions blocks `Former::actions()->large_primary_submit('Submit')`\n- You can now chain live validation rules to fields (example: `Former::text('foo')->alpha_dash()`)\n- You can now display a single field without control group in any kind of form (`Former::text('foo')->raw()`)\n- Frameworks names renamed from `bootstrap` to `TwitterBootstrap`, `zurb` to `ZurbFoundation` and `null` to `Nude`\n- You can now manually open groups via `Former::group('label')`\n- You can also create a group that contains raw content (not a field) with `Former::group('label')->contents('YourContent')`. This will wrap the content in a control class so that your content is aligned with the fields.\n- Checkables now handle being populated from relations\n- You can now add classes to the group via the `->addGroupClass` method\n- Former::withRules() now also take a Laravel-formatted string of rules (ie. \"rule|rule:parameter|rule\")\n- You can now populate on a form-basis with the chained method `->populate` on a form opener\n- Add support for macros with Former::macro($name, $macro())\n- Add Select->range() method\n- Former now automatically inserts a token in the form\n- Support for select groups\n\n## 2.6.0\n\n### Added\n- 'required_text' to append a text to required fields's labels\n- Former::open()->rules([]) as alias to Former::withRules\n\n### Fixed\n- Fix a bug where labels for radios would fail because of identical ids\n- Fixed a bug where ->populateField would fail if the form was populated with an object\n\n## 2.5.0\n\n### Added\n- Add basic button class that allow Bootstrappy submit/buttons\n- ControlGroup->prependIcon and appendIcon methods\n- Ability to pass an array of classes to add to Field->addClass\n\n### Fixed\n- Fix instantiated classes bug in PHP 5.3.2\n- Fix multiple buttons instances overwriting themselves\n\n## 2.4.0\n\n### Added\n- Form openers are now objects too and accept chained methods\n- Add `unchecked_value` option to decide what value unchecked checkboxes have in the POST array\n- Allow booleans to be passed to Checkable->check() on single items\n\n### Changed\n- Disable `push_checkbox` option by default\n\n### Fixed\n- Automatically fetch Lang objects passed to `->options`\n\n## 2.3.0\n\n### Added\n- Add `push_checkboxes` option which forces the submiting of unchecked fields to the POST array\n\n## 2.2.0\n\n### Added\n- Add `Former::file()` and `Former::files()` with methods `->max` and `->accept`\n- Add ability to set a placeholder option for select fields\n- Add ability to set attributes for a label\n\n## 2.1.0\n\n### Added\n- Add ability to populate field with a model's relationships\n- Added `->check()` method on radios and checkboxes\n\n## 2.0.0\n\n### Added\n- Former now uses Laravel's Config class to manage settings, letting the user create a `former.php` file in `application/config` to override default options\n- Add option to disable automatic labeling of fields\n\n### Fixed\n- Fix translation of empty strings\n\n## 1.2.1\n\n### Added\n- Fetch automatically key and value from models through `get_key` and `__toString`\n- Add `Former::populateField` to populate a specific field\n\n### Fixed\n- Fixed a bug preventing from using one Former call to output several times\n\n## 1.2.0\n\n### Added\n- Add suport for Zurb's Foundation framework\n- Allow the passing of Query/Eloquent objects to text fields through `->useDatalist`\n- Add option to desactivate live validation\n\n### Changed\n- Allow public use of `Former::getErrors()`\n- Let user specify a custom id for generated datalists\n\n### Fixed\n- Don't create a label tag around checkboxes if the label is empty\n- Fix custom arguments of `open()` not working as desired\n\n## 1.1.0\n\n### Added\n- Allow the passing of Query/Eloquent objets to select fields through `->fromQuery`\n\n### Fixed\n- Disable form population on password fields\n- Fix uneditable inputs outputing as text fields\n\n## 1.0.0\n\n### Added\n- Initial release of Former on [Laravel Bundles](http://bundles.laravel.com/bundle/former/)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.349609375,
          "content": "# Contribution guidelines\n\nThank you for contributing to Former! Please target all changes to the master branch.\n\nDon't forget to add a test in the `tests` folder :\n- If it's a feature you're adding, add a test proving it works.\n- If it's a bug you're fixing, write a test proving it doesn't occur anymore.\n\nThanks for you input and thanks for using Former!\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.630859375,
          "content": "# Former\r\n## A Laravelish way to create and format forms\r\n\r\n[![Latest Stable Version](http://img.shields.io/packagist/v/anahkiasen/former.svg?style=flat)](https://packagist.org/packages/anahkiasen/former)\r\n[![Total Downloads](http://img.shields.io/packagist/dt/anahkiasen/former.svg?style=flat)](https://packagist.org/packages/anahkiasen/former)\r\n\r\nFormer outputs form elements in HTML compatible with your favorite CSS framework (Bootstrap and Foundation are currently supported). Former also handles repopulation after validation errors, including automatically rendering error text with affected fields.\r\n\r\n### Introduction\r\n\r\nFormer provides a fluent method of form creation, allowing you to do:\r\n\r\n```php\r\nFormer::framework('TwitterBootstrap3');\r\n\r\nFormer::horizontal_open()\r\n  ->id('MyForm')\r\n  ->rules(['name' => 'required'])\r\n  ->method('GET');\r\n\r\n  Former::xlarge_text('name') # Bootstrap sizing\r\n    ->class('myclass') # arbitrary attribute support\r\n    ->label('Full name')\r\n    ->value('Joseph')\r\n    ->required() # HTML5 validation\r\n    ->help('Please enter your full name');\r\n\r\n  Former::textarea('comments')\r\n    ->rows(10)\r\n    ->columns(20)\r\n    ->autofocus();\r\n\r\n  Former::actions()\r\n    ->large_primary_submit('Submit') # Combine Bootstrap directives like \"lg and btn-primary\"\r\n    ->large_inverse_reset('Reset');\r\n\r\nFormer::close();\r\n```\r\n\r\nEvery time you call a method that doesn't actually exist, Former assumes you're trying to set an attribute and creates it magically. That's why you can do in the above example `->rows(10)` ; in case you want to set attributes that contain dashes, just replace them by underscores : `->data_foo('bar')` equals `data-foo=\"bar\"`.\r\nNow of course in case you want to set an attribute that actually contains an underscore you can always use the fallback method `setAttribute('data_foo', 'bar')`. You're welcome.\r\n\r\nThis is the core of it, but Former offers a lot more. I invite you to consult the wiki to see the extent of what Former does.\r\n\r\n-----\r\n\r\n### Installation\r\nRequire Former package using Composer:\r\n\r\n    composer require anahkiasen/former\r\n\r\nPublish config files with artisan:\r\n    \r\n    php artisan vendor:publish --provider=\"Former\\FormerServiceProvider\"\r\n\r\n#### App.php config for Laravel 5.4 and below\r\n\r\nFor Laravel 5.4 and below, you must modify your `config/app.php`.\r\n\r\nIn the `providers` array add :\r\n\r\n    Former\\FormerServiceProvider::class\r\n\r\nAdd then alias Former's main class by adding its facade to the `aliases` array in the same file :\r\n\r\n    'Former' => 'Former\\Facades\\Former',\r\n\r\n-----\r\n\r\n### Documentation\r\n\r\nPlease refer to the [wiki](https://github.com/formers/former/wiki) for the full documentation.\r\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.4599609375,
          "content": "{\n  \"name\": \"anahkiasen/former\",\n  \"description\": \"A powerful form builder\",\n  \"homepage\": \"http://formers.github.io/former/\",\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"bootstrap\",\n    \"form\",\n    \"foundation\",\n    \"laravel\"\n  ],\n  \"authors\": [\n    {\n      \"name\": \"Maxime Fabre\",\n      \"email\": \"ehtnam6@gmail.com\"\n    }\n  ],\n  \"require\": {\n    \"php\": \"^7.2|^8.0\",\n    \"illuminate/config\": \"^5.1.3|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n    \"illuminate/container\": \"^5.1.3|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n    \"illuminate/contracts\": \"^5.1.3|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n    \"illuminate/http\": \"^5.1.3|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n    \"illuminate/routing\": \"^5.1.3|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n    \"illuminate/session\": \"^5.1.3|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n    \"illuminate/translation\": \"^5.1.3|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n    \"illuminate/support\": \"^5.1.3|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n    \"kylekatarnls/html-object\": \"^1.5\"\n  },\n  \"require-dev\": {\n    \"phpunit/phpunit\": \"^8.5\",\n    \"mockery/mockery\": \"^1.3\",\n    \"illuminate/database\": \"^5.1.3|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\"\n  },\n  \"autoload\": {\n    \"psr-4\": {\n      \"Former\\\\\": [\n        \"src/Former\",\n        \"tests\"\n      ],\n      \"Laravel\\\\\": \"src/Laravel\"\n    }\n  },\n  \"extra\": {\n    \"laravel\": {\n      \"providers\": [\n          \"Former\\\\FormerServiceProvider\"\n      ],\n      \"aliases\": {\n          \"Former\": \"Former\\\\Facades\\\\Former\"\n      }\n    }\n  },\n  \"minimum-stability\": \"dev\",\n  \"prefer-stable\": true\n}\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.4375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n  backupStaticAttributes=\"false\"\n  bootstrap=\"vendor/autoload.php\"\n  colors=\"true\"\n  convertErrorsToExceptions=\"true\"\n  convertNoticesToExceptions=\"true\"\n  convertWarningsToExceptions=\"true\"\n  processIsolation=\"false\"\n  stopOnFailure=\"false\">\n  <testsuites>\n    <testsuite name=\"Former Test Suite\">\n      <directory>tests</directory>\n    </testsuite>\n  </testsuites>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}