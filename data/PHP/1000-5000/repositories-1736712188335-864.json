{
  "metadata": {
    "timestamp": 1736712188335,
    "page": 864,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dedemao/alipay",
      "stars": 1322,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0498046875,
          "content": "The MIT License (MIT)\n\nCopyright (c) Taylor Otwell\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.5439453125,
          "content": "# alipay\n一个PHP文件搞定支付宝支付系列\n\n网上的很多PHP支付宝支付接入教程都颇为复杂，且需要配置和引入较多的文件，本人通过整理后给出一个单文件版的（代码只有200行左右），每个文件独立运行，不依赖和引入其他文件。希望可以给各位想接入支付宝的带来些许帮助和借鉴意义。\n\n一个PHP文件搞定微信支付系列请移步：https://github.com/dedemao/weixinPay\n\n# 在线演示\nhttps://www.dedemao.com/alipay/demo.html\n\n# 环境依赖\n\nPHP5.0以上，且需要开启CURL服务、SSL服务。\n\n# 文件对应说明\n\npc.php\t  电脑网站支付\n\nwap.php   手机网站支付\n\nqrcode.php   当面付（扫码支付）\n\nbarcode.php   当面付（条码支付）\n\njsapi.php   js原生支付（支付宝扫码打开网页，在网页中调起支付宝原生支付）\n\ntransfers.php\t单笔转账到支付宝账户\n\nsettle.php   交易结算（分账、分润）\n\nauthorize.php  网页授权获取用户信息\n\nclose.php 交易关闭接口\n\nrefund.php\t退款\n\nb2c.php B2C现金红包\n\nc2c.php C2C现金红包（请看上面的在线演示）\n\nreturn.php   同步回调通知\n\nnotify.php   异步回调通知\n\n# 注意事项\n\n1.需要用到支付宝哪一种支付方式，就只下载对应的单个文件即可。\n\n2.文件开头的配置信息必须完善\n\n\n# 若对您有帮助，可以赞助并支持下作者哦，谢谢！\n\n<p align=\"center\">\n    <img src=\"https://www.dedemao.com/uploads/zan.jpg\" width=\"500px\">\n    <p align=\"center\">联系邮箱：884358@qq.com</p>\n</p>\n"
        },
        {
          "name": "authorize.php",
          "type": "blob",
          "size": 9.2734375,
          "content": "<?php\r\n/**\r\n * 接口文档地址：https://docs.open.alipay.com/53/104114\r\n *  注意：要在支付宝开放平台应用设置中设置授权回调地址，且只能在该网址下测试。否则会出现网页找不到的情况\r\n */\r\nheader('Content-type:text/html; Charset=utf-8');\r\n/*** 请填写以下配置信息 ***/\r\n$scope = 'auth_user';       //auth_base或auth_user。如果只需要获取用户id，填写auth_base即可。如需获取头像、昵称等信息，则填写auth_user\r\n$appid = 'xxxxx';    //https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写开通了“获取会员信息”应用的APPID\r\n$signType = 'RSA2';       //签名算法类型，支持RSA2和RSA，推荐使用RSA2\r\n//商户私钥，填写对应签名算法类型的私钥，如何生成密钥参考：https://docs.open.alipay.com/291/105971和https://docs.open.alipay.com/200/105310\r\n$rsaPrivateKey='xxxxx';\r\n/*** 配置结束 ***/\r\n$aliPay = new AlipayService();\r\n$aliPay->setAppid($appid);\r\n$aliPay->setScope($scope);\r\n$aliPay->setRsaPrivateKey($rsaPrivateKey);\r\n$result = $aliPay->getToken();\r\n$user = array();\r\nif($baseInfo = $result['alipay_system_oauth_token_response']){\r\n    $userid = $baseInfo['user_id'];\r\n    if($scope=='auth_base'){\r\n        $user['user_id'] = $userid;\r\n\t\techo '<h1>你的user_id是：'.$user['user_id'];exit();\r\n    }else{\r\n        $userinfo = $aliPay->doGetUserInfo($baseInfo['access_token']);\r\n        if($userinfo['error_response']){\r\n            echo '<h1>'.$userinfo['error_response']['code'].':'.$userinfo['error_response']['sub_msg'].'</h1>';\r\n            exit();\r\n        }\r\n        if($userinfo['alipay_user_info_share_response']){\r\n            $user = $userinfo['alipay_user_info_share_response'];\r\n\t\t\t//打印user信息\r\n\t\t\techo \"<pre>\";\r\n\t\t\tprint_r($user);die;\r\n        }else{\r\n            exit('异常');\r\n        }\r\n    }\r\n}else{\r\n    echo '<h1>'.$result['error_response']['code'].':'.$result['error_response']['sub_msg'].'</h1>';exit();\r\n}\r\n\r\nclass AlipayService\r\n{\r\n    protected $appId;\r\n    protected $charset;\r\n    //私钥值\r\n    protected $rsaPrivateKey;\r\n    protected $auth_code;\r\n    public function __construct()\r\n    {\r\n        $this->charset = 'utf-8';\r\n    }\r\n\r\n    public function setAppid($appid)\r\n    {\r\n        $this->appId = $appid;\r\n    }\r\n\r\n    public function setScope($scope)\r\n    {\r\n        $this->scope = $scope;\r\n    }\r\n\r\n    public function setAuthCode($authCode)\r\n    {\r\n        $this->auth_code = $authCode;\r\n    }\r\n\r\n    public function setRsaPrivateKey($rsaPrivateKey)\r\n    {\r\n        $this->rsaPrivateKey = $rsaPrivateKey;\r\n    }\r\n\r\n    /**\r\n     * 获取access_token和user_id\r\n     * @return array\r\n     */\r\n    public function doAuth()\r\n    {\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.system.oauth.token',//接口名称\r\n            'format' => 'JSON',\r\n            'charset'=>$this->charset,\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'grant_type'=>'authorization_code',\r\n            'code'=>$this->auth_code,\r\n        );\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\r\n        return json_decode($result,true);\r\n    }\r\n\r\n    /**\r\n     * 获取access_token和user_id\r\n     */\r\n    public function getToken()\r\n    {\r\n        //通过code获得access_token和user_id\r\n        if (!isset($_GET['auth_code'])){\r\n            //触发微信返回code码\r\n            $scheme = $_SERVER['HTTPS']=='on' ? 'https://' : 'http://';\r\n            $baseUrl = urlencode($scheme.$_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF']);\r\n            if($_SERVER['QUERY_STRING']) $baseUrl = $baseUrl.'?'.$_SERVER['QUERY_STRING'];\r\n            $url = $this->__CreateOauthUrlForCode($baseUrl);\r\n            Header(\"Location: $url\");\r\n            exit();\r\n        } else {\r\n            //获取code码，以获取openid\r\n            $this->setAuthCode($_GET['auth_code']);\r\n            return $this->doAuth();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过code获取access_token和user_id\r\n     * @param string $code 支付宝跳转回来带上的auth_code\r\n     * @return openid\r\n     */\r\n    public function getBaseinfoFromAlipay($code)\r\n    {\r\n        $this->setAuthCode($code);\r\n        return $this->doAuth();\r\n    }\r\n\r\n    /**\r\n     * 构造获取token的url连接\r\n     * @param string $redirectUrl 微信服务器回跳的url，需要url编码\r\n     * @return 返回构造好的url\r\n     */\r\n    private function __CreateOauthUrlForCode($redirectUrl)\r\n    {\r\n        $urlObj[\"app_id\"] = $this->appId;\r\n        $urlObj[\"redirect_uri\"] = \"$redirectUrl\";\r\n        $urlObj[\"scope\"] = $this->scope;\r\n        $urlObj[\"state\"] = 123456;\r\n        $bizString = $this->ToUrlParams($urlObj);\r\n        return \"https://openauth.alipay.com/oauth2/publicAppAuthorize.htm?\".$bizString;\r\n    }\r\n\r\n    /**\r\n     * 拼接签名字符串\r\n     * @param array $urlObj\r\n     * @return 返回已经拼接好的字符串\r\n     */\r\n    private function ToUrlParams($urlObj)\r\n    {\r\n        $buff = \"\";\r\n        foreach ($urlObj as $k => $v)\r\n        {\r\n            if($k != \"sign\") $buff .= $k . \"=\" . $v . \"&\";\r\n        }\r\n        $buff = trim($buff, \"&\");\r\n        return $buff;\r\n    }\r\n\r\n    /**\r\n     * 获取用户信息\r\n     * @return array\r\n     */\r\n    public function doGetUserInfo($token)\r\n    {\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.user.info.share',//接口名称\r\n            'format' => 'JSON',\r\n            'charset'=>$this->charset,\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'auth_token'=>$token,\r\n        );\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\r\n        return json_decode($result,true);\r\n    }\r\n\r\n    public function generateSign($params, $signType = \"RSA\") {\r\n        return $this->sign($this->getSignContent($params), $signType);\r\n    }\r\n\r\n    protected function sign($data, $signType = \"RSA\") {\r\n        $priKey=$this->rsaPrivateKey;\r\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\r\n            wordwrap($priKey, 64, \"\\n\", true) .\r\n            \"\\n-----END RSA PRIVATE KEY-----\";\r\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\r\n        if (\"RSA2\" == $signType) {\r\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\r\n        } else {\r\n            openssl_sign($data, $sign, $res);\r\n        }\r\n        $sign = base64_encode($sign);\r\n        return $sign;\r\n    }\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n        return false;\r\n    }\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n    public function curlPost($url = '', $postData = '', $options = array())\r\n    {\r\n        if (is_array($postData)) {\r\n            $postData = http_build_query($postData);\r\n        }\r\n        $ch = curl_init();\r\n        curl_setopt($ch, CURLOPT_URL, $url);\r\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n        curl_setopt($ch, CURLOPT_POST, 1);\r\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);\r\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30); //设置cURL允许执行的最长秒数\r\n        if (!empty($options)) {\r\n            curl_setopt_array($ch, $options);\r\n        }\r\n        //https请求 不验证证书和host\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\r\n        $data = curl_exec($ch);\r\n        curl_close($ch);\r\n        return $data;\r\n    }\r\n}\r\n"
        },
        {
          "name": "b2c.php",
          "type": "blob",
          "size": 7.232421875,
          "content": "<?php\r\n$appid = 'xxxxx';  //https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写添加了现金红包的应用的APPID\r\n$alipayRootCertSn = 'xxxxx';     //支付宝根证书sn\r\n$appCertSn = 'xxxxx';     //应用证书sn\r\n$outTradeNo = uniqid();     //商户订单号，不能重复\r\n$payAmount = 0.01;          //红包金额，单位:元\r\n$orderName = '公益';          //红包标题\r\n$signType = 'RSA2';\t\t\t//签名算法类型，支持RSA2和RSA，推荐使用RSA2\r\n$userid = '2088xxx'; //接收红包的支付宝用户id（2088开头的16位数字）\r\n//商户私钥\r\n$rsaPrivateKey='xxxxx';\r\n$aliPay = new AlipayService();\r\n$aliPay->setAppid($appid);\r\n$aliPay->setAlipayRootCertSn($alipayRootCertSn);\r\n$aliPay->setAppCertSn($appCertSn);\r\n$aliPay->setRsaPrivateKey($rsaPrivateKey);\r\n$aliPay->setNotifyUrl($notifyUrl);\r\n$aliPay->setTotalFee($payAmount);\r\n$aliPay->setOutTradeNo($outTradeNo);\r\n$aliPay->setOrderName($orderName);\r\n$aliPay->setUserId($userid);\r\n$result = $aliPay->sendRedPacket();\r\nif($result['alipay_fund_trans_uni_transfer_response']['code']==10000){\r\n    echo '红包发送成功';\r\n}else{\r\n    echo '红包发送失败，原因：'.$result['alipay_fund_trans_uni_transfer_response']['msg'];\r\n}\r\n\r\nclass AlipayService\r\n{\r\n    protected $appId;\r\n    protected $alipayRootCertSn;\r\n    protected $appCertSn;\r\n    protected $notifyUrl;\r\n    protected $charset;\r\n    //私钥值\r\n    protected $rsaPrivateKey;\r\n    protected $totalFee;\r\n    protected $outTradeNo;\r\n    protected $orderName;\r\n    protected $userid;\r\n    public function __construct()\r\n    {\r\n        $this->charset = 'utf-8';\r\n    }\r\n    public function setAppid($appid)\r\n    {\r\n        $this->appId = $appid;\r\n    }\r\n    public function setAlipayRootCertSn($alipayRootCertSn)\r\n    {\r\n        $this->alipayRootCertSn = $alipayRootCertSn;\r\n    }\r\n    public function setAppCertSn($appCertSn)\r\n    {\r\n        $this->appCertSn = $appCertSn;\r\n    }\r\n    public function setNotifyUrl($notifyUrl)\r\n    {\r\n        $this->notifyUrl = $notifyUrl;\r\n    }\r\n    public function setRsaPrivateKey($saPrivateKey)\r\n    {\r\n        $this->rsaPrivateKey = $saPrivateKey;\r\n    }\r\n    public function setTotalFee($payAmount)\r\n    {\r\n        $this->totalFee = $payAmount;\r\n    }\r\n    public function setOutTradeNo($outTradeNo)\r\n    {\r\n        $this->outTradeNo = $outTradeNo;\r\n    }\r\n    public function setOrderName($orderName)\r\n    {\r\n        $this->orderName = $orderName;\r\n    }\r\n    public function setUserId($userid)\r\n    {\r\n        $this->userid = $userid;\r\n    }\r\n    /**\r\n     * 发红包\r\n     * @return array\r\n     */\r\n    public function sendRedPacket()\r\n    {\r\n        //请求参数\r\n        $requestConfigs = array(\r\n            'out_biz_no'=>$this->outTradeNo,\r\n            'trans_amount'=>$this->totalFee, //单位 元\r\n            'product_code'=>'STD_RED_PACKET',\r\n            'biz_scene'=>'DIRECT_TRANSFER',\r\n            'remark'=>$this->orderName,\r\n            'order_title'=>$this->orderName,  //订单标题\r\n            'payee_info'=>array(\r\n                'identity'=>$this->userid,     //接受红包的用户id\r\n                'identity_type'=>'ALIPAY_USER_ID',     //参与方的标识类型\r\n            ),\r\n            'business_params'=>array(\r\n                'sub_biz_scene'=>'REDPACKET',       //子场景\r\n            )\r\n        );\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'alipay_root_cert_sn' => $this->alipayRootCertSn,\r\n            'app_cert_sn' => $this->appCertSn,\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.fund.trans.uni.transfer',             //接口名称\r\n            'format' => 'JSON',\r\n            'charset'=>'utf-8',\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'biz_content'=>json_encode($requestConfigs),\r\n        );\r\n\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\r\n        return json_decode($result,true);\r\n    }\r\n\r\n    public function generateSign($params, $signType = \"RSA\") {\r\n        return $this->sign($this->getSignContent($params), $signType);\r\n    }\r\n    protected function sign($data, $signType = \"RSA\") {\r\n        $priKey=$this->rsaPrivateKey;\r\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\r\n            wordwrap($priKey, 64, \"\\n\", true) .\r\n            \"\\n-----END RSA PRIVATE KEY-----\";\r\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\r\n        if (\"RSA2\" == $signType) {\r\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\r\n        } else {\r\n            openssl_sign($data, $sign, $res);\r\n        }\r\n        $sign = base64_encode($sign);\r\n        return $sign;\r\n    }\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n        return false;\r\n    }\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n    public function curlPost($url = '', $postData = '', $options = array())\r\n    {\r\n        if (is_array($postData)) {\r\n            $postData = http_build_query($postData);\r\n        }\r\n        $ch = curl_init();\r\n        curl_setopt($ch, CURLOPT_URL, $url);\r\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n        curl_setopt($ch, CURLOPT_POST, 1);\r\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);\r\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30); //设置cURL允许执行的最长秒数\r\n        if (!empty($options)) {\r\n            curl_setopt_array($ch, $options);\r\n        }\r\n        //https请求 不验证证书和host\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\r\n        $data = curl_exec($ch);\r\n        curl_close($ch);\r\n        return $data;\r\n    }\r\n}\r\n"
        },
        {
          "name": "barcode.php",
          "type": "blob",
          "size": 7.2275390625,
          "content": "<?php\r\nheader('Content-type:text/html; Charset=utf-8');\r\n/*** 请填写以下配置信息 ***/\r\n$appid = 'xxxxx';  //https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写添加了“当面付”的应用的APPID\r\n$notifyUrl = 'http://www.xxx.com/alipay/notify.php';     //付款成功后的异步回调地址\r\n$outTradeNo = uniqid();     //你自己的商品订单号，不能重复\r\n$payAmount = 0.01;         //付款金额，单位:元\r\n$orderName = '支付测试';    //订单标题\r\n$signType = 'RSA2';       //签名算法类型，支持RSA2和RSA，推荐使用RSA2\r\n$authCode = '';           //用户付款码（商户设备扫描用户二维码读取到的条码数字，或 点击支付宝APP-》付钱-》上面有显示一串数字）\r\n$rsaPrivateKey='';\t\t  //商户私钥，填写对应签名算法类型的私钥，如何生成密钥参考：https://docs.open.alipay.com/291/105971和https://docs.open.alipay.com/200/105310\r\n/*** 配置结束 ***/\r\n$aliPay = new AlipayService();\r\n$aliPay->setAppid($appid);\r\n$aliPay->setNotifyUrl($notifyUrl);\r\n$aliPay->setRsaPrivateKey($rsaPrivateKey);\r\n$aliPay->setTotalFee($payAmount);\r\n$aliPay->setOutTradeNo($outTradeNo);\r\n$aliPay->setOrderName($orderName);\r\n$aliPay->setAuthCode($authCode);\r\n$result = $aliPay->doPay();\r\n$result = $result['alipay_trade_pay_response'];\r\nif($result['code'] && $result['code']=='10000'){\r\n    echo '支付成功';\r\n}elseif($result['code'] && $result['code']=='10003'){\r\n    echo '等待用户付款';\r\n}else{\r\n    echo $result['msg'].' : '.$result['sub_msg'];\r\n}\r\nclass AlipayService\r\n{\r\n    protected $appId;\r\n    protected $charset;\r\n    protected $notifyUrl;\r\n    //私钥值\r\n    protected $rsaPrivateKey;\r\n    protected $totalFee;\r\n    protected $outTradeNo;\r\n    protected $orderName;\r\n    protected $authCode;\r\n\r\n    public function __construct()\r\n    {\r\n        $this->charset = 'utf-8';\r\n    }\r\n\r\n    public function setAppid($appid)\r\n    {\r\n        $this->appId = $appid;\r\n    }\r\n\r\n    public function setNotifyUrl($notifyUrl)\r\n    {\r\n        $this->notifyUrl = $notifyUrl;\r\n    }\r\n\r\n    public function setRsaPrivateKey($rsaPrivateKey)\r\n    {\r\n        $this->rsaPrivateKey = $rsaPrivateKey;\r\n    }\r\n\r\n    public function setTotalFee($payAmount)\r\n    {\r\n        $this->totalFee = $payAmount;\r\n    }\r\n\r\n    public function setOutTradeNo($outTradeNo)\r\n    {\r\n        $this->outTradeNo = $outTradeNo;\r\n    }\r\n\r\n    public function setOrderName($orderName)\r\n    {\r\n        $this->orderName = $orderName;\r\n    }\r\n\r\n    public function setAuthCode($authCode)\r\n    {\r\n        $this->authCode = $authCode;\r\n    }\r\n\r\n    /**\r\n     * 发起订单\r\n     * @return array\r\n     */\r\n    public function doPay()\r\n    {\r\n        //请求参数\r\n        $requestConfigs = array(\r\n            'out_trade_no'=>$this->outTradeNo,\r\n            'scene'=>'bar_code',                //条码支付固定传入bar_code\r\n            'auth_code'=>$this->authCode,         //用户付款码，25~30开头的长度为16~24位的数字，实际字符串长度以开发者获取的付款码长度为准\r\n            'total_amount'=>$this->totalFee,      //单位 元\r\n            'subject'=>$this->orderName,          //订单标题\r\n            'store_id'=>'DEDEMAO_001',          //商户门店编号\r\n            'timeout_express'=>'2m',            //交易超时时间\r\n        );\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.trade.pay',             //接口名称\r\n            'format' => 'JSON',\r\n            'charset'=>$this->charset,\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'notify_url' => $this->notifyUrl,\r\n            'biz_content'=>json_encode($requestConfigs),\r\n        );\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\r\n        //$result = iconv('GBK','UTF-8',$result);\r\n        return json_decode($result,true);\r\n    }\r\n    public function generateSign($params, $signType = \"RSA\") {\r\n        return $this->sign($this->getSignContent($params), $signType);\r\n    }\r\n    protected function sign($data, $signType = \"RSA\") {\r\n        $priKey=$this->rsaPrivateKey;\r\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\r\n            wordwrap($priKey, 64, \"\\n\", true) .\r\n            \"\\n-----END RSA PRIVATE KEY-----\";\r\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\r\n        if (\"RSA2\" == $signType) {\r\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\r\n        } else {\r\n            openssl_sign($data, $sign, $res);\r\n        }\r\n        $sign = base64_encode($sign);\r\n        return $sign;\r\n    }\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n        return false;\r\n    }\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n    public function curlPost($url = '', $postData = '', $options = array())\r\n    {\r\n        if (is_array($postData)) {\r\n            $postData = http_build_query($postData);\r\n        }\r\n        $ch = curl_init();\r\n        curl_setopt($ch, CURLOPT_URL, $url);\r\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n        curl_setopt($ch, CURLOPT_POST, 1);\r\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);\r\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30); //设置cURL允许执行的最长秒数\r\n        if (!empty($options)) {\r\n            curl_setopt_array($ch, $options);\r\n        }\r\n        //https请求 不验证证书和host\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\r\n        $data = curl_exec($ch);\r\n        curl_close($ch);\r\n        return $data;\r\n    }\r\n}\r\n"
        },
        {
          "name": "close.php",
          "type": "blob",
          "size": 6.458984375,
          "content": "<?php\r\n/**\r\n * alipay.trade.close(统一收单交易关闭接口)\r\n *\r\n * 用于交易创建后，用户在一定时间内未进行支付，可调用该接口直接将未付款的交易进行关闭。\r\n */\r\nheader('Content-type:text/html; Charset=utf-8');\r\n/*** 请填写以下配置信息 ***/\r\n$appid = 'xxxxx';  //https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写添加了电脑网站支付的应用的APPID\r\n$tradeNo = '';     //在支付宝系统中的交易流水号。最短 16 位，最长 64 位。和out_trade_no不能同时为空，如果同时传了 out_trade_no和 trade_no，则以 trade_no为准。\r\n$outTradeNo = '';     //订单支付时传入的商户订单号,和支付宝交易号不能同时为空。 trade_no,out_trade_no如果同时存在优先取trade_no\r\n$signType = 'RSA2';       //签名算法类型，支持RSA2和RSA，推荐使用RSA2\r\n//商户私钥，填写对应签名算法类型的私钥，如何生成密钥参考：https://docs.open.alipay.com/291/105971和https://docs.open.alipay.com/200/105310\r\n$rsaPrivateKey='';\r\n/*** 配置结束 ***/\r\n$aliPay = new AlipayService();\r\n$aliPay->setAppid($appid);\r\n$aliPay->setRsaPrivateKey($rsaPrivateKey);\r\n$aliPay->setTradeNo($tradeNo);\r\n$aliPay->setOutTradeNo($outTradeNo);\r\n$result = $aliPay->doClose();\r\n$result = $result['alipay_trade_close_response'];\r\nif($result['code'] && $result['code']=='10000'){\r\n    echo '<h1>订单已关闭</h1>';\r\n}else{\r\n    echo $result['msg'].' : '.$result['sub_msg'];\r\n}\r\n\r\nclass AlipayService\r\n{\r\n    protected $appId;\r\n    protected $returnUrl;\r\n    protected $notifyUrl;\r\n    protected $charset;\r\n    //私钥值\r\n    protected $rsaPrivateKey;\r\n    protected $outTradeNo;\r\n    protected $tradeNo;\r\n\r\n    public function __construct()\r\n    {\r\n        $this->charset = 'utf-8';\r\n    }\r\n    public function setAppid($appid)\r\n    {\r\n        $this->appId = $appid;\r\n    }\r\n    public function setRsaPrivateKey($saPrivateKey)\r\n    {\r\n        $this->rsaPrivateKey = $saPrivateKey;\r\n    }\r\n    public function setOutTradeNo($outTradeNo)\r\n    {\r\n        $this->outTradeNo = $outTradeNo;\r\n    }\r\n    public function settradeNo($tradeNo)\r\n    {\r\n        $this->tradeNo = $tradeNo;\r\n    }\r\n\r\n    /**\r\n     * 关闭订单\r\n     * @return array\r\n     */\r\n    public function doClose()\r\n    {\r\n        //请求参数\r\n        $requestConfigs = array(\r\n            'trade_no'=>$this->tradeNo,\r\n            'out_trade_no'=>$this->outTradeNo,\r\n        );\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.trade.close',             //接口名称\r\n            'format' => 'JSON',\r\n            'charset'=>$this->charset,\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'biz_content'=>json_encode($requestConfigs),\r\n        );\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\r\n        $resultArr = json_decode($result,true);\r\n        if(empty($resultArr)){\r\n            $result = iconv('GBK','UTF-8//IGNORE',$result);\r\n            return json_decode($result,true);\r\n        }\r\n        return $resultArr;\r\n    }\r\n\r\n    public function generateSign($params, $signType = \"RSA\") {\r\n        return $this->sign($this->getSignContent($params), $signType);\r\n    }\r\n\r\n    protected function sign($data, $signType = \"RSA\") {\r\n        $priKey=$this->rsaPrivateKey;\r\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\r\n            wordwrap($priKey, 64, \"\\n\", true) .\r\n            \"\\n-----END RSA PRIVATE KEY-----\";\r\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\r\n        if (\"RSA2\" == $signType) {\r\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\r\n        } else {\r\n            openssl_sign($data, $sign, $res);\r\n        }\r\n        $sign = base64_encode($sign);\r\n        return $sign;\r\n    }\r\n\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n\r\n    public function curlPost($url = '', $postData = '', $options = array())\r\n    {\r\n        if (is_array($postData)) {\r\n            $postData = http_build_query($postData);\r\n        }\r\n        $ch = curl_init();\r\n        curl_setopt($ch, CURLOPT_URL, $url);\r\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n        curl_setopt($ch, CURLOPT_POST, 1);\r\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);\r\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30); //设置cURL允许执行的最长秒数\r\n        if (!empty($options)) {\r\n            curl_setopt_array($ch, $options);\r\n        }\r\n        //https请求 不验证证书和host\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\r\n        $data = curl_exec($ch);\r\n        curl_close($ch);\r\n        return $data;\r\n    }\r\n}\r\n"
        },
        {
          "name": "jsapi.php",
          "type": "blob",
          "size": 8.904296875,
          "content": "<?php\r\nheader('Content-type:text/html; Charset=utf-8');\r\n/*** 请填写以下配置信息 ***/\r\n$appid = 'xxxxx';  //https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写添加了电脑网站支付的应用的APPID\r\n$notifyUrl = 'http://www.xxx.com/alipay/notify.php';     //付款成功后的异步回调地址\r\n$outTradeNo = uniqid();     //你自己的商品订单号，不能重复\r\n$payAmount = 0.01;          //付款金额，单位:元\r\n$orderName = '支付测试';    //订单标题\r\n$signType = 'RSA2';\t\t\t//签名算法类型，支持RSA2和RSA，推荐使用RSA2\r\n//商户私钥，填写对应签名算法类型的私钥，如何生成密钥参考：https://docs.open.alipay.com/291/105971和https://docs.open.alipay.com/200/105310\r\n$rsaPrivateKey='xxxxx';  \r\n/*** 配置结束 ***/\r\n$aliPay = new AlipayService();\r\n$aliPay->setAppid($appid);\r\n$aliPay->setNotifyUrl($notifyUrl);\r\n$aliPay->setRsaPrivateKey($rsaPrivateKey);\r\n$aliPay->setTotalFee($payAmount);\r\n$aliPay->setOutTradeNo($outTradeNo);\r\n$aliPay->setOrderName($orderName);\r\n$orderStr = $aliPay->getOrderStr();\r\n?>\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <meta charset=\"UTF-8\">\r\n    <title>支付宝jsapi支付</title>\r\n    <link href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n    <script src=\"https://cdn.bootcss.com/jquery/2.1.0/jquery.min.js\"></script>\r\n    <script src=\"https://gw.alipayobjects.com/as/g/h5-lib/alipayjsapi/3.1.1/alipayjsapi.min.js\"></script>\r\n</head>\r\n<body>\r\n<div class=\"container\">\r\n<?php\r\n    if(!isInAlipayClient()):\r\n?>\r\n    <h3>请使用支付宝扫码打开该网页：</h3>\r\n    <img src=\"https://wenhairu.com/static/api/qr/?size=300&text=<?php echo getCurrentUrl()?>\" />\r\n<?php\r\n    else:\r\n?>\r\n<h3>点击以下按钮唤起支付宝支付</h3>\r\n<a href=\"javascript:void(0)\" class=\"btn btn-primary btns-lg orderstrPay orderstr\">点击调起支付宝支付</a>\r\n\r\n<div class=\"alert alert-success\" role=\"alert\" style=\"margin-top:30px;display: none\">\r\n\r\n</div>\r\n<?php\r\n    endif;\r\n?>\r\n</div>\r\n<script>\r\n    function ready(callback) {\r\n        // 如果jsbridge已经注入则直接调用\r\n        if (window.AlipayJSBridge) {\r\n            callback && callback();\r\n        } else {\r\n            // 如果没有注入则监听注入的事件\r\n            document.addEventListener('AlipayJSBridgeReady', callback, false);\r\n        }\r\n    }\r\n    ready(function(){\r\n        document.querySelector('.orderstr').addEventListener('click', function() {\r\n            AlipayJSBridge.call(\"tradePay\", {\r\n                orderStr: \"<?php echo $orderStr?>\"\r\n            }, function(result) {\r\n                if(result.resultCode!=9000){\r\n                    //支付失败\r\n                    alert(result.resultCode+\"：\"+result.memo);\r\n                }else{\r\n                    //支付成功\r\n                    var info = eval('(' + result.result + ')');\r\n                    $(\".alert-success\").html(\"<strong>支付成功！</strong> 订单号：\"+info.alipay_trade_app_pay_response.out_trade_no+\" 支付金额：￥\"+info.alipay_trade_app_pay_response.total_amount);\r\n                    $(\".alert-success\").show();\r\n                }\r\n                // alert(JSON.stringify(result));\r\n            });\r\n        });\r\n    });\r\n</script>\r\n</body>\r\n</html>\r\n\r\n<?php\r\nclass AlipayService\r\n{\r\n    protected $appId;\r\n    protected $notifyUrl;\r\n    protected $charset;\r\n    //私钥值\r\n    protected $rsaPrivateKey;\r\n    protected $totalFee;\r\n    protected $outTradeNo;\r\n    protected $orderName;\r\n    public function __construct()\r\n    {\r\n        $this->charset = 'utf-8';\r\n    }\r\n    public function setAppid($appid)\r\n    {\r\n        $this->appId = $appid;\r\n    }\r\n    public function setNotifyUrl($notifyUrl)\r\n    {\r\n        $this->notifyUrl = $notifyUrl;\r\n    }\r\n    public function setRsaPrivateKey($saPrivateKey)\r\n    {\r\n        $this->rsaPrivateKey = $saPrivateKey;\r\n    }\r\n    public function setTotalFee($payAmount)\r\n    {\r\n        $this->totalFee = $payAmount;\r\n    }\r\n    public function setOutTradeNo($outTradeNo)\r\n    {\r\n        $this->outTradeNo = $outTradeNo;\r\n    }\r\n    public function setOrderName($orderName)\r\n    {\r\n        $this->orderName = $orderName;\r\n    }\r\n    /**\r\n     * 获取orderStr\r\n     * @return array\r\n     */\r\n    public function getOrderStr()\r\n    {\r\n        //请求参数\r\n        $requestConfigs = array(\r\n            'out_trade_no'=>$this->outTradeNo,\r\n            'total_amount'=>$this->totalFee, //单位 元\r\n            'subject'=>$this->orderName,  //订单标题\r\n            'product_code'=>'QUICK_MSECURITY_PAY', //销售产品码，商家和支付宝签约的产品码，为固定值QUICK_MSECURITY_PAY\r\n            'timeout_express'=>'2h',       //该笔订单允许的最晚付款时间，逾期将关闭交易。取值范围：1m～15d。m-分钟，h-小时，d-天，1c-当天（1c-当天的情况下，无论交易何时创建，都在0点关闭）。 该参数数值不接受小数点， 如 1.5h，可转换为 90m。\r\n//            'store_id'=>'',                 //商户门店编号。该参数用于请求参数中以区分各门店，非必传项。\r\n//            'extend_params'=>array(\r\n//                'sys_service_provider_id'=>''       //系统商编号，该参数作为系统商返佣数据提取的依据，请填写系统商签约协议的PID\r\n//            )\r\n        );\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.trade.app.pay',             //接口名称\r\n            'format' => 'JSON',\r\n            'charset'=>$this->charset,\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'notify_url' => $this->notifyUrl,\r\n            'biz_content'=>json_encode($requestConfigs),\r\n        );\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        $result = $this->buildOrderStr($commonConfigs);\r\n        return $result;\r\n    }\r\n    public function generateSign($params, $signType = \"RSA\") {\r\n        return $this->sign($this->getSignContent($params), $signType);\r\n    }\r\n    protected function sign($data, $signType = \"RSA\") {\r\n        $priKey=$this->rsaPrivateKey;\r\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\r\n            wordwrap($priKey, 64, \"\\n\", true) .\r\n            \"\\n-----END RSA PRIVATE KEY-----\";\r\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\r\n        if (\"RSA2\" == $signType) {\r\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\r\n        } else {\r\n            openssl_sign($data, $sign, $res);\r\n        }\r\n        $sign = base64_encode($sign);\r\n        return $sign;\r\n    }\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n        return false;\r\n    }\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n\r\n    public function buildOrderStr($data)\r\n    {\r\n        return http_build_query($data);\r\n    }\r\n}\r\n// 是否支付宝客户端\r\nfunction isInAlipayClient() {\r\n    if( strpos($_SERVER['HTTP_USER_AGENT'], 'AlipayClient') !== false ) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction getCurrentUrl()\r\n{\r\n    $scheme = $_SERVER['HTTPS']=='on' ? 'https://' : 'http://';\r\n\t$uri = $_SERVER['PHP_SELF'].$_SERVER['QUERY_STRING'];\r\n\tif($_SERVER['REQUEST_URI']) $uri = $_SERVER['REQUEST_URI'];\r\n\t$baseUrl = urlencode($scheme.$_SERVER['HTTP_HOST'].$uri);\r\n    return $baseUrl;\r\n}\r\n"
        },
        {
          "name": "jsapi2.php",
          "type": "blob",
          "size": 14.40234375,
          "content": "<?php\r\n//文档地址：https://docs.open.alipay.com/common/105591\r\nerror_reporting(0);\r\nheader('Content-type:text/html; Charset=utf-8');\r\n/*** 请填写以下配置信息 ***/\r\n$appid = 'xxxxxx';  //https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写添加了电脑网站支付的应用的APPID\r\n$notifyUrl = 'http://www.xxx.com';     //付款成功后的异步回调地址\r\n$outTradeNo = uniqid();     //你自己的商品订单号，不能重复\r\n$payAmount = 0.1;          //付款金额，单位:元\r\n$orderName = '支付测试';    //订单标题\r\n$signType = 'RSA2';\t\t\t//签名算法类型，支持RSA2和RSA，推荐使用RSA2\r\n//商户私钥，填写对应签名算法类型的私钥，如何生成密钥参考：https://docs.open.alipay.com/291/105971和https://docs.open.alipay.com/200/105310\r\n$rsaPrivateKey='xxxx';\r\n/*** 配置结束 ***/\r\nif(!isInAlipayClient()){\r\n    echo '<h3>请使用支付宝扫码打开该网页：</h3><img src=\"https://wenhairu.com/static/api/qr/?size=300&text='.getCurrentUrl().'\" />';\r\n    exit();\r\n}\r\n$aliPay = new AlipayService();\r\n$aliPay->setAppid($appid);\r\n$aliPay->setScope('auth_base');\r\n$aliPay->setRsaPrivateKey($rsaPrivateKey);\r\n$result = $aliPay->getToken();\r\n$user = array();\r\nif($baseInfo = $result['alipay_system_oauth_token_response']){\r\n    $userid = $baseInfo['user_id'];     //支付用户的支付宝id\r\n}else{\r\n    echo '<h1>'.$result['error_response']['code'].':'.$result['error_response']['sub_msg'].'</h1>';exit();\r\n}\r\n$aliPay->setNotifyUrl($notifyUrl);\r\n$aliPay->setTotalFee($payAmount);\r\n$aliPay->setOutTradeNo($outTradeNo);\r\n$aliPay->setOrderName($orderName);\r\n$aliPay->setBuyerId($userid);\r\n$orderStr = $aliPay->createOrder();\r\n$tradeNo = $orderStr['alipay_trade_create_response']['trade_no'];\r\nif(!$tradeNo){\r\n exit('获取订单号失败');\r\n}\r\n?>\r\n    <!DOCTYPE html>\r\n    <html lang=\"en\">\r\n    <head>\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n        <meta charset=\"UTF-8\">\r\n        <title>支付宝jsapi支付</title>\r\n        <link href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n        <script src=\"https://cdn.bootcss.com/jquery/2.1.0/jquery.min.js\"></script>\r\n        <script src=\"https://gw.alipayobjects.com/as/g/h5-lib/alipayjsapi/3.1.1/alipayjsapi.min.js\"></script>\r\n    </head>\r\n    <body>\r\n    <div class=\"container\">\r\n        <?php\r\n        if(!isInAlipayClient()):\r\n            ?>\r\n            <h3>请使用支付宝扫码打开该网页：</h3>\r\n            <img src=\"https://wenhairu.com/static/api/qr/?size=300&text=<?php echo getCurrentUrl()?>\" />\r\n            <?php\r\n        else:\r\n            ?>\r\n            <h3>点击唤起支付宝收银台</h3>\r\n            <a href=\"javascript:void(0)\" class=\"btn btn-primary btns-lg orderstrPay orderstr\">点击支付</a>\r\n\r\n            <div class=\"alert alert-success\" role=\"alert\" style=\"margin-top:30px;display: none\">\r\n\r\n            </div>\r\n            <?php\r\n        endif;\r\n        ?>\r\n    </div>\r\n\r\n    <p id=\"result\"></p>\r\n    <div class=\"alert alert-success\" role=\"alert\" style=\"margin-top:30px;display: none\">\r\n\r\n    </div>\r\n\r\n    <script type=\"application/javascript\">\r\n        // 调试时可以通过在页面定义一个元素，打印信息，使用alert方法不够优雅\r\n        function log(obj) {\r\n            $(\"#result\").append(obj).append(\" \").append(\"<br />\");\r\n        }\r\n\r\n        $(document).ready(function(){\r\n            // 页面载入完成后即唤起收银台\r\n            // 点击payButton按钮后唤起收银台\r\n            $(\".orderstr\").click(function() {\r\n                tradePay(\"<?=$tradeNo?>\");\r\n            });\r\n\r\n            // 通过jsapi关闭当前窗口，仅供参考，更多jsapi请访问\r\n            // /aod/54/104510\r\n            $(\"#closeButton\").click(function() {\r\n                AlipayJSBridge.call('closeWebview');\r\n            });\r\n        });\r\n\r\n        // 由于js的载入是异步的，所以可以通过该方法，当AlipayJSBridgeReady事件发生后，再执行callback方法\r\n        function ready(callback) {\r\n            if (window.AlipayJSBridge) {\r\n                callback && callback();\r\n            } else {\r\n                document.addEventListener('AlipayJSBridgeReady', callback, false);\r\n            }\r\n        }\r\n\r\n        function tradePay(tradeNO) {\r\n            ready(function(){\r\n                // 通过传入交易号唤起快捷调用方式(注意tradeNO大小写严格)\r\n                AlipayJSBridge.call(\"tradePay\", {\r\n                    tradeNO: tradeNO\r\n                }, function (data) {\r\n//                    log(JSON.stringify(data));\r\n                    if(data.resultCode!=9000){\r\n                        //支付失败\r\n                        alert(data.resultCode+\"：\"+data.memo);\r\n                    }else{\r\n                        //支付成功\r\n                        $(\".alert-success\").html(\"<strong>支付成功！</strong> 订单号：<?=$tradeNo?>\");\r\n                        $(\".alert-success\").show();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    </script>\r\n\r\n    </body>\r\n    </html>\r\n\r\n<?php\r\nclass AlipayService\r\n{\r\n    protected $appId;\r\n    protected $notifyUrl;\r\n    protected $charset;\r\n    //私钥值\r\n    protected $rsaPrivateKey;\r\n    protected $totalFee;\r\n    protected $outTradeNo;\r\n    protected $orderName;\r\n    protected $scope;\r\n    protected $buyerId;\r\n    protected $authCode;\r\n\r\n    public function __construct()\r\n    {\r\n        $this->charset = 'utf-8';\r\n    }\r\n    public function setAppid($appid)\r\n    {\r\n        $this->appId = $appid;\r\n    }\r\n    public function setNotifyUrl($notifyUrl)\r\n    {\r\n        $this->notifyUrl = $notifyUrl;\r\n    }\r\n    public function setRsaPrivateKey($saPrivateKey)\r\n    {\r\n        $this->rsaPrivateKey = $saPrivateKey;\r\n    }\r\n    public function setTotalFee($payAmount)\r\n    {\r\n        $this->totalFee = $payAmount;\r\n    }\r\n    public function setOutTradeNo($outTradeNo)\r\n    {\r\n        $this->outTradeNo = $outTradeNo;\r\n    }\r\n    public function setOrderName($orderName)\r\n    {\r\n        $this->orderName = $orderName;\r\n    }\r\n    public function setScope($scope)\r\n    {\r\n        $this->scope = $scope;\r\n    }\r\n    public function setBuyerId($buyerId)\r\n    {\r\n        $this->buyerId = $buyerId;\r\n    }\r\n    public function setAuthCode($authCode)\r\n    {\r\n        $this->authCode = $authCode;\r\n    }\r\n    /**\r\n     * 获取orderStr\r\n     * @return array\r\n     */\r\n    public function createOrder()\r\n    {\r\n        //请求参数\r\n        $requestConfigs = array(\r\n            'out_trade_no'=>$this->outTradeNo,\r\n            'total_amount'=>$this->totalFee, //单位 元\r\n            'subject'=>$this->orderName,  //订单标题\r\n            'buyer_id'=>$this->buyerId,  //购买者的userid\r\n            'timeout_express'=>'2h',       //该笔订单允许的最晚付款时间，逾期将关闭交易。取值范围：1m～15d。m-分钟，h-小时，d-天，1c-当天（1c-当天的情况下，无论交易何时创建，都在0点关闭）。 该参数数值不接受小数点， 如 1.5h，可转换为 90m。\r\n//            'store_id'=>'',                 //商户门店编号。该参数用于请求参数中以区分各门店，非必传项。\r\n            //'terminal_id'=>'xxx',\r\n            //'extend_params'=>array(\r\n                //'sys_service_provider_id'=>'xxxx'       //系统商编号，该参数作为系统商返佣数据提取的依据，请填写系统商签约协议的PID\r\n            //)\r\n        );\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.trade.create',             //接口名称\r\n            'format' => 'JSON',\r\n            'charset'=>$this->charset,\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'notify_url' => $this->notifyUrl,\r\n            'biz_content'=>json_encode($requestConfigs),\r\n        );\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\r\n        return json_decode($result,true);\r\n    }\r\n    public function generateSign($params, $signType = \"RSA\") {\r\n        return $this->sign($this->getSignContent($params), $signType);\r\n    }\r\n    protected function sign($data, $signType = \"RSA\") {\r\n        $priKey=$this->rsaPrivateKey;\r\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\r\n            wordwrap($priKey, 64, \"\\n\", true) .\r\n            \"\\n-----END RSA PRIVATE KEY-----\";\r\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\r\n        if (\"RSA2\" == $signType) {\r\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\r\n        } else {\r\n            openssl_sign($data, $sign, $res);\r\n        }\r\n        $sign = base64_encode($sign);\r\n        return $sign;\r\n    }\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n        return false;\r\n    }\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n    public function buildOrderStr($data)\r\n    {\r\n        return http_build_query($data);\r\n    }\r\n    public function curlPost($url = '', $postData = '', $options = array())\r\n    {\r\n        if (is_array($postData)) {\r\n            $postData = http_build_query($postData);\r\n        }\r\n        $ch = curl_init();\r\n        curl_setopt($ch, CURLOPT_URL, $url);\r\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n        curl_setopt($ch, CURLOPT_POST, 1);\r\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);\r\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30); //设置cURL允许执行的最长秒数\r\n        if (!empty($options)) {\r\n            curl_setopt_array($ch, $options);\r\n        }\r\n        //https请求 不验证证书和host\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\r\n        $data = curl_exec($ch);\r\n        curl_close($ch);\r\n        return $data;\r\n    }\r\n\r\n    /**\r\n     * 获取access_token和user_id\r\n     */\r\n    public function getToken()\r\n    {\r\n        //通过code获得access_token和user_id\r\n        if (!isset($_GET['auth_code'])){\r\n            //触发微信返回code码\r\n            $scheme = $_SERVER['HTTPS']=='on' ? 'https://' : 'http://';\r\n\t\t\t$uri = $_SERVER['PHP_SELF'].$_SERVER['QUERY_STRING'];\r\n\t\t\tif($_SERVER['REQUEST_URI']) $uri = $_SERVER['REQUEST_URI'];\r\n\t\t\t$baseUrl = $scheme.$_SERVER['HTTP_HOST'].$uri;\r\n            $url = $this->__CreateOauthUrlForCode($baseUrl);\r\n            Header(\"Location: $url\");\r\n            exit();\r\n        } else {\r\n            //获取code码，以获取openid\r\n            $this->setAuthCode($_GET['auth_code']);\r\n            return $this->doAuth();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 构造获取token的url连接\r\n     * @param string $redirectUrl 微信服务器回跳的url，需要url编码\r\n     * @return 返回构造好的url\r\n     */\r\n    private function __CreateOauthUrlForCode($redirectUrl)\r\n    {\r\n        $urlObj[\"app_id\"] = $this->appId;\r\n        $urlObj[\"redirect_uri\"] = urlencode($redirectUrl);\r\n        $urlObj[\"scope\"] = $this->scope;\r\n        $urlObj[\"state\"] = 123456;\r\n        $bizString = $this->ToUrlParams($urlObj);\r\n        return \"https://openauth.alipay.com/oauth2/publicAppAuthorize.htm?\".$bizString;\r\n    }\r\n\r\n    /**\r\n     * 拼接签名字符串\r\n     * @param array $urlObj\r\n     * @return 返回已经拼接好的字符串\r\n     */\r\n    private function ToUrlParams($urlObj)\r\n    {\r\n        $buff = \"\";\r\n        foreach ($urlObj as $k => $v)\r\n        {\r\n            if($k != \"sign\") $buff .= $k . \"=\" . $v . \"&\";\r\n        }\r\n        $buff = trim($buff, \"&\");\r\n        return $buff;\r\n    }\r\n\r\n    /**\r\n     * 获取access_token和user_id\r\n     * @return array\r\n     */\r\n    public function doAuth()\r\n    {\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.system.oauth.token',//接口名称\r\n            'format' => 'JSON',\r\n            'charset'=>$this->charset,\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'grant_type'=>'authorization_code',\r\n            'code'=>$this->authCode,\r\n        );\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\r\n        $result = iconv('GBK','UTF-8',$result);\r\n        return json_decode($result,true);\r\n    }\r\n\r\n}\r\n// 是否支付宝客户端\r\nfunction isInAlipayClient() {\r\n    if( strpos($_SERVER['HTTP_USER_AGENT'], 'AlipayClient') !== false ) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction getCurrentUrl()\r\n{\r\n    $scheme = $_SERVER['HTTPS']=='on' ? 'https://' : 'http://';\r\n\t$uri = $_SERVER['PHP_SELF'].$_SERVER['QUERY_STRING'];\r\n\tif($_SERVER['REQUEST_URI']) $uri = $_SERVER['REQUEST_URI'];\r\n\t$baseUrl = urlencode($scheme.$_SERVER['HTTP_HOST'].$uri);\r\n    return $baseUrl;\r\n}\r\n\r\n"
        },
        {
          "name": "mapi.php",
          "type": "blob",
          "size": 8.2568359375,
          "content": "<?php\r\nheader('Content-type:text/html; Charset=utf-8');\r\n$pid = 'xxxxx';  //https://open.alipay.com 账户中心->密钥管理->mapi网关产品密钥->合作伙伴身份（PID）\r\n$returnUrl = 'http://www.xxx.com/alipay/return.php';     //付款成功后的同步回调地址\r\n$notifyUrl = 'http://www.xxx.com/alipay/notify.php';     //付款成功后的异步回调地址\r\n$outTradeNo = uniqid();     //你自己的商品订单号\r\n$payAmount = 0.01;          //付款金额，单位:元\r\n$orderName = '支付测试';    //订单标题\r\n$signType = 'RSA';       //签名算法类型，RSA或MD5，推荐使用RSA\r\n//商户私钥，对应签名算法填写\r\n$privateKey='MIICWwIBAAKBgQCaYZmbUPalRCqo6a5x7Wbl4x2ZaYbTZ5Vmh0h2LDnwhsrHW6yLAe/DQNtc/kwWGXdcUvAZEz+KCmIdDeRDXIoK/fKMkC2/a/kCeimrp7X+EPaSFCEYI/OZ9Kr99LIOlaWGbs5UM8YQaPY8CUz935/0u4vov/zCUr/OGV3Z7vvIRQIDAQABAoGAMgzYXulFvVi3N+Hiw17DEF6sVvNGWb1oS0Aqtt0pv5gDn9RRwRNUpwmc1K5A/p0s/EqLOqXp4JfzLRY23bvfqKW19GzNfxB16wyeN46U+lYlFDfhbGOb9GMqqCdROXCMkfesbQjrBKP/KD2xkT/u5O5qIMunI5P4HZ1bqXwaUMECQQDKMgdEi+Pf0oZkptvVfI9ogNoj9bSStFazY1TcbDsY8smmwgQ73FLE4+43tr2j+cBWqSc8Ead27Zs9FBcByfgRAkEAw3Ze+KQvQ0SBCqn0w94p9FytQ3FaU1k3Pa1DjFV6+snRDnr71v7FbJn4W9AGgFl609FnNmW/GBGOWmMaE/tg9QJAP/AaBD8ITBrSjLmHArdk0fMNCBoGg+2rDQb4Ksu+1GDSC32GwTcmpUQ+bDfJODUd8UmEMqaSgjUYxfO4YsRvQQJAE1diPG5asuhTcI+yxbL1KdYF2xebXYYFflfnyDopKinQQwOOag7Z0E5IEiW6jvbLvawJ74sP5rzN/kmyKeoFBQJAMhwuIKyNob0qBGRFL4NaNiRGuEbVChlIM5dbzC8OTAhwU5jAbexfIUNxweiZB62vkpLMgeEUWOSVb+ngggxrpA==';\r\n$aliPay = new AlipayService($pid,$returnUrl,$notifyUrl,$signType,$privateKey);\r\n$sHtml = $aliPay->doPay($payAmount,$outTradeNo,$orderName,$returnUrl,$notifyUrl);\r\necho $sHtml;\r\n\r\nclass AlipayService\r\n{\r\n    protected $appId;\r\n    protected $returnUrl;\r\n    protected $notifyUrl;\r\n    protected $charset;\r\n    protected $signType;\r\n    //私钥值\r\n    protected $privateKey;\r\n\r\n    public function __construct($appid, $returnUrl, $notifyUrl,$signType,$privateKey)\r\n    {\r\n        $this->appId = $appid;\r\n        $this->returnUrl = $returnUrl;\r\n        $this->notifyUrl = $notifyUrl;\r\n        $this->charset = 'utf8';\r\n        $this->signType = $signType;\r\n        $this->privateKey=$privateKey;\r\n    }\r\n    /**\r\n     * 发起订单\r\n     * @param float $totalFee 收款总费用 单位元\r\n     * @param string $outTradeNo 唯一的订单号\r\n     * @param string $orderName 订单名称\r\n     * @param string $notifyUrl 支付结果通知url 不要有问号\r\n     * @param string $timestamp 订单发起时间\r\n     * @return array\r\n     */\r\n    public function doPay($totalFee, $outTradeNo, $orderName, $returnUrl,$notifyUrl)\r\n    {\r\n        $requestConfigs = array(\r\n            'partner'=>$this->appId,\r\n            'service' => 'create_direct_pay_by_user',\r\n            '_input_charset'=>strtolower($this->charset),       //gbk或者utf8，小写\r\n            'sign_type'=>strtoupper($this->signType),     //RSA或MD5，必须大写。\r\n            'return_url' => $returnUrl,\r\n            'notify_url' => $notifyUrl,\r\n            'out_trade_no'=>$outTradeNo,\r\n            'total_fee'=>$totalFee, //单位 元\r\n            'subject'=>$orderName,  //订单标题\r\n            'payment_type'=>1,\r\n            'seller_id'=>$this->appId,         //卖家支付宝用户号（以2088开头的纯16位数字）\r\n        );\r\n        return $this->buildRequestForm($requestConfigs);\r\n    }\r\n\r\n    /**\r\n     * 建立请求，以表单HTML形式构造（默认）\r\n     * @param $para_temp 请求参数数组\r\n     * @return 提交表单HTML文本\r\n     */\r\n    function buildRequestForm($para_temp) {\r\n        //待请求参数数组\r\n        $para = $this->buildRequestPara($para_temp);\r\n\r\n        $sHtml = \"<form id='alipaysubmit' name='alipaysubmit' action='https://mapi.alipay.com/gateway.do?_input_charset=\".trim(strtolower($this->charset)).\"' method='post'>\";\r\n        while (list ($key, $val) = each ($para)) {\r\n            $sHtml.= \"<input type='hidden' name='\".$key.\"' value='\".$val.\"'/>\";\r\n        }\r\n        //submit按钮控件请不要含有name属性\r\n        $sHtml = $sHtml.\"<input type='submit'  value='提交' style='display:none;'></form>\";\r\n\r\n        $sHtml = $sHtml.\"<script>document.forms['alipaysubmit'].submit();</script>\";\r\n\r\n        return $sHtml;\r\n    }\r\n\r\n    /**\r\n     * 生成要请求给支付宝的参数数组\r\n     * @param $para_temp 请求前的参数数组\r\n     * @return 要请求的参数数组\r\n     */\r\n    function buildRequestPara($para_temp) {\r\n        //除去待签名参数数组中的空值和签名参数\r\n        $para_filter = $this->paraFilter($para_temp);\r\n\r\n        //对待签名参数数组排序\r\n        $para_sort = $this->argSort($para_filter);\r\n\r\n        //生成签名结果\r\n        $mysign = $this->buildRequestMysign($para_sort);\r\n\r\n        //签名结果与签名方式加入请求提交参数组中\r\n        $para_sort['sign'] = $mysign;\r\n        $para_sort['sign_type'] = strtoupper(trim($this->signType));\r\n\r\n        return $para_sort;\r\n    }\r\n\r\n    /**\r\n     * 对数组排序\r\n     * @param $para 排序前的数组\r\n     * return 排序后的数组\r\n     */\r\n    function argSort($para) {\r\n        ksort($para);\r\n        reset($para);\r\n        return $para;\r\n    }\r\n\r\n    /**\r\n     * 生成签名结果\r\n     * @param $para_sort 已排序要签名的数组\r\n     * return 签名结果字符串\r\n     */\r\n    private function buildRequestMysign($para_sort) {\r\n        //把数组所有元素，按照“参数=参数值”的模式用“&”字符拼接成字符串\r\n        $prestr = $this->createLinkstring($para_sort);\r\n\r\n        $mysign = \"\";\r\n        switch (strtoupper(trim($this->signType))) {\r\n            case \"MD5\" :\r\n                $mysign = $this->md5Sign($prestr, $this->privateKey);\r\n                break;\r\n            case \"RSA\" :\r\n            default :\r\n                $mysign = $this->rsaSign($prestr, $this->privateKey);\r\n                break;\r\n        }\r\n        return $mysign;\r\n    }\r\n\r\n    /**\r\n     * RSA签名\r\n     * @param $data 待签名数据\r\n     * @param $private_key 商户私钥字符串\r\n     * return 签名结果\r\n     */\r\n    private function rsaSign($data, $private_key) {\r\n        //以下为了初始化私钥，保证在您填写私钥时不管是带格式还是不带格式都可以通过验证。\r\n        $private_key=str_replace(\"-----BEGIN RSA PRIVATE KEY-----\",\"\",$private_key);\r\n        $private_key=str_replace(\"-----END RSA PRIVATE KEY-----\",\"\",$private_key);\r\n        $private_key=str_replace(\"\\n\",\"\",$private_key);\r\n\r\n        $private_key=\"-----BEGIN RSA PRIVATE KEY-----\".PHP_EOL .wordwrap($private_key, 64, \"\\n\", true). PHP_EOL.\"-----END RSA PRIVATE KEY-----\";\r\n\r\n        $res=openssl_get_privatekey($private_key);\r\n\r\n        if($res)\r\n        {\r\n            openssl_sign($data, $sign,$res);\r\n        }\r\n        else {\r\n            echo \"您的私钥格式不正确!\".\"<br/>\".\"The format of your private_key is incorrect!\";\r\n            exit();\r\n        }\r\n        openssl_free_key($res);\r\n        //base64编码\r\n        $sign = base64_encode($sign);\r\n        return $sign;\r\n    }\r\n\r\n    /**\r\n     * 签名字符串\r\n     * @param $prestr 需要签名的字符串\r\n     * @param $key 私钥\r\n     * return 签名结果\r\n     */\r\n    function md5Sign($prestr, $key) {\r\n        $prestr = $prestr . $key;\r\n        return md5($prestr);\r\n    }\r\n\r\n    /**\r\n     * 把数组所有元素，按照“参数=参数值”的模式用“&”字符拼接成字符串\r\n     * @param $para 需要拼接的数组\r\n     * return 拼接完成以后的字符串\r\n     */\r\n    private function createLinkstring($para) {\r\n        $arg  = \"\";\r\n        while (list ($key, $val) = each ($para)) {\r\n            $arg.=$key.\"=\".$val.\"&\";\r\n        }\r\n        //去掉最后一个&字符\r\n        $arg = substr($arg,0,count($arg)-2);\r\n\r\n        //如果存在转义字符，那么去掉转义\r\n        if(get_magic_quotes_gpc()){$arg = stripslashes($arg);}\r\n\r\n        return $arg;\r\n    }\r\n\r\n    /**\r\n     * 除去数组中的空值和签名参数\r\n     * @param $para 签名参数组\r\n     * return 去掉空值与签名参数后的新签名参数组\r\n     */\r\n    private function paraFilter($para) {\r\n        $para_filter = array();\r\n        while (list ($key, $val) = each ($para)) {\r\n            if($key == \"sign\" || $key == \"sign_type\" || $val == \"\")continue;\r\n            else\t$para_filter[$key] = $para[$key];\r\n        }\r\n        return $para_filter;\r\n    }\r\n}\r\n"
        },
        {
          "name": "notify.php",
          "type": "blob",
          "size": 3.84375,
          "content": "<?php\r\nheader('Content-type:text/html; Charset=utf-8');\r\n//支付宝公钥，账户中心->密钥管理->开放平台密钥，找到添加了支付功能的应用，根据你的加密类型，查看支付宝公钥\r\n$alipayPublicKey='';\r\n\r\n$aliPay = new AlipayService($alipayPublicKey);\r\n//验证签名\r\n$result = $aliPay->rsaCheck($_POST,$_POST['sign_type']);\r\nif($result===true && $_POST['trade_status'] == 'TRADE_SUCCESS'){\r\n    //处理你的逻辑，例如获取订单号$_POST['out_trade_no']，订单金额$_POST['total_amount']等\r\n    //程序执行完后必须打印输出“success”（不包含引号）。如果商户反馈给支付宝的字符不是success这7个字符，支付宝服务器会不断重发通知，直到超过24小时22分钟。一般情况下，25小时以内完成8次通知（通知的间隔频率一般是：4m,10m,10m,1h,2h,6h,15h）；\r\n    echo 'success';exit();\r\n}\r\necho 'error';exit();\r\nclass AlipayService\r\n{\r\n    //支付宝公钥\r\n    protected $alipayPublicKey;\r\n    protected $charset;\r\n\r\n    public function __construct($alipayPublicKey)\r\n    {\r\n        $this->charset = 'utf8';\r\n        $this->alipayPublicKey=$alipayPublicKey;\r\n    }\r\n\r\n    /**\r\n     *  验证签名\r\n     **/\r\n    public function rsaCheck($params) {\r\n        $sign = $params['sign'];\r\n        $signType = $params['sign_type'];\r\n        unset($params['sign_type']);\r\n        unset($params['sign']);\r\n        return $this->verify($this->getSignContent($params), $sign, $signType);\r\n    }\r\n\r\n    function verify($data, $sign, $signType = 'RSA') {\r\n        $pubKey= $this->alipayPublicKey;\r\n        $res = \"-----BEGIN PUBLIC KEY-----\\n\" .\r\n            wordwrap($pubKey, 64, \"\\n\", true) .\r\n            \"\\n-----END PUBLIC KEY-----\";\r\n        ($res) or die('支付宝RSA公钥错误。请检查公钥文件格式是否正确');\r\n\r\n        //调用openssl内置方法验签，返回bool值\r\n        if (\"RSA2\" == $signType) {\r\n            $result = (bool)openssl_verify($data, base64_decode($sign), $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256);\r\n        } else {\r\n            $result = (bool)openssl_verify($data, base64_decode($sign), $res);\r\n        }\r\n//        if(!$this->checkEmpty($this->alipayPublicKey)) {\r\n//            //释放资源\r\n//            openssl_free_key($res);\r\n//        }\r\n        return $result;\r\n    }\r\n\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n}\r\n"
        },
        {
          "name": "pc.php",
          "type": "blob",
          "size": 6.5458984375,
          "content": "<?php\r\nheader('Content-type:text/html; Charset=utf-8');\r\n/*** 请填写以下配置信息 ***/\r\n$appid = 'xxxxx';\t\t\t//https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写添加了电脑网站支付的应用的APPID\r\n$returnUrl = 'http://www.xxx.com/alipay/return.php';     //付款成功后的同步回调地址\r\n$notifyUrl = 'http://www.xxx.com/alipay/notify.php';     //付款成功后的异步回调地址\r\n$outTradeNo = uniqid();     //你自己的商品订单号，不能重复\r\n$payAmount = 0.01;          //付款金额，单位:元\r\n$orderName = '支付测试';    //订单标题\r\n$signType = 'RSA2';\t\t\t//签名算法类型，支持RSA2和RSA，推荐使用RSA2\r\n$rsaPrivateKey='xxxx';\t\t//商户私钥，填写对应签名算法类型的私钥，如何生成密钥参考：https://docs.open.alipay.com/291/105971和https://docs.open.alipay.com/200/105310\r\n/*** 配置结束 ***/\r\n$aliPay = new AlipayService();\r\n$aliPay->setAppid($appid);\r\n$aliPay->setReturnUrl($returnUrl);\r\n$aliPay->setNotifyUrl($notifyUrl);\r\n$aliPay->setRsaPrivateKey($rsaPrivateKey);\r\n$aliPay->setTotalFee($payAmount);\r\n$aliPay->setOutTradeNo($outTradeNo);\r\n$aliPay->setOrderName($orderName);\r\n$sHtml = $aliPay->doPay();\r\necho $sHtml;\r\n\r\nclass AlipayService\r\n{\r\n    protected $appId;\r\n    protected $returnUrl;\r\n    protected $notifyUrl;\r\n    protected $charset;\r\n    //私钥值\r\n    protected $rsaPrivateKey;\r\n    protected $totalFee;\r\n    protected $outTradeNo;\r\n    protected $orderName;\r\n\r\n    public function __construct()\r\n    {\r\n        $this->charset = 'utf8';\r\n    }\r\n\r\n    public function setAppid($appid)\r\n    {\r\n        $this->appId = $appid;\r\n    }\r\n\r\n    public function setReturnUrl($returnUrl)\r\n    {\r\n        $this->returnUrl = $returnUrl;\r\n    }\r\n\r\n    public function setNotifyUrl($notifyUrl)\r\n    {\r\n        $this->notifyUrl = $notifyUrl;\r\n    }\r\n\r\n    public function setRsaPrivateKey($saPrivateKey)\r\n    {\r\n        $this->rsaPrivateKey = $saPrivateKey;\r\n    }\r\n\r\n    public function setTotalFee($payAmount)\r\n    {\r\n        $this->totalFee = $payAmount;\r\n    }\r\n\r\n    public function setOutTradeNo($outTradeNo)\r\n    {\r\n        $this->outTradeNo = $outTradeNo;\r\n    }\r\n\r\n    public function setOrderName($orderName)\r\n    {\r\n        $this->orderName = $orderName;\r\n    }\r\n\r\n    /**\r\n     * 发起订单\r\n     * @return array\r\n     */\r\n    public function doPay()\r\n    {\r\n        //请求参数\r\n        $requestConfigs = array(\r\n            'out_trade_no'=>$this->outTradeNo,\r\n            'product_code'=>'FAST_INSTANT_TRADE_PAY',\r\n            'total_amount'=>$this->totalFee, //单位 元\r\n            'subject'=>$this->orderName,  //订单标题\r\n        );\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.trade.page.pay',             //接口名称\r\n            'format' => 'JSON',\r\n            'return_url' => $this->returnUrl,\r\n            'charset'=>$this->charset,\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'notify_url' => $this->notifyUrl,\r\n            'biz_content'=>json_encode($requestConfigs),\r\n        );\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        return $this->buildRequestForm($commonConfigs);\r\n    }\r\n\r\n    /**\r\n     * 建立请求，以表单HTML形式构造（默认）\r\n     * @param $para_temp 请求参数数组\r\n     * @return 提交表单HTML文本\r\n     */\r\n    protected function buildRequestForm($para_temp) {\r\n\r\n        $sHtml = \"正在跳转至支付页面...<form id='alipaysubmit' name='alipaysubmit' action='https://openapi.alipay.com/gateway.do?charset=\".$this->charset.\"' method='POST'>\";\r\n\t\tforeach($para_temp as $key=>$val){\r\n            if (false === $this->checkEmpty($val)) {\r\n                $val = str_replace(\"'\",\"&apos;\",$val);\r\n                $sHtml.= \"<input type='hidden' name='\".$key.\"' value='\".$val.\"'/>\";\r\n            }\t\r\n\t\t}\r\n        //submit按钮控件请不要含有name属性\r\n        $sHtml = $sHtml.\"<input type='submit' value='ok' style='display:none;''></form>\";\r\n        $sHtml = $sHtml.\"<script>document.forms['alipaysubmit'].submit();</script>\";\r\n        return $sHtml;\r\n    }\r\n\r\n    public function generateSign($params, $signType = \"RSA\") {\r\n        return $this->sign($this->getSignContent($params), $signType);\r\n    }\r\n\r\n    protected function sign($data, $signType = \"RSA\") {\r\n        $priKey=$this->rsaPrivateKey;\r\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\r\n            wordwrap($priKey, 64, \"\\n\", true) .\r\n            \"\\n-----END RSA PRIVATE KEY-----\";\r\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\r\n        if (\"RSA2\" == $signType) {\r\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\r\n        } else {\r\n            openssl_sign($data, $sign, $res);\r\n        }\r\n        $sign = base64_encode($sign);\r\n        return $sign;\r\n    }\r\n\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n}\r\n"
        },
        {
          "name": "qrcode.php",
          "type": "blob",
          "size": 6.875,
          "content": "<?php\r\nheader('Content-type:text/html; Charset=utf-8');\r\n/*** 请填写以下配置信息 ***/\r\n$appid = 'xxxxx';  //https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写添加了电脑网站支付的应用的APPID\r\n$notifyUrl = 'http://www.xxx.com/alipay/notify.php';     //付款成功后的异步回调地址\r\n$outTradeNo = uniqid();     //你自己的商品订单号，不能重复\r\n$payAmount = 0.01;          //付款金额，单位:元\r\n$orderName = '支付测试';    //订单标题\r\n$signType = 'RSA2';\t\t\t//签名算法类型，支持RSA2和RSA，推荐使用RSA2\r\n$rsaPrivateKey='xxxxx';\t\t//商户私钥，填写对应签名算法类型的私钥，如何生成密钥参考：https://docs.open.alipay.com/291/105971和https://docs.open.alipay.com/200/105310\r\n/*** 配置结束 ***/\r\n$aliPay = new AlipayService();\r\n$aliPay->setAppid($appid);\r\n$aliPay->setNotifyUrl($notifyUrl);\r\n$aliPay->setRsaPrivateKey($rsaPrivateKey);\r\n$aliPay->setTotalFee($payAmount);\r\n$aliPay->setOutTradeNo($outTradeNo);\r\n$aliPay->setOrderName($orderName);\r\n$result = $aliPay->doPay();\r\n$result = $result['alipay_trade_precreate_response'];\r\nif($result['code'] && $result['code']=='10000'){\r\n    //生成二维码\r\n    $url = 'https://wenhairu.com/static/api/qr/?size=300&text='.$result['qr_code'];\r\n    echo \"<img src='{$url}' style='width:300px;'><br>\";\r\n    echo '二维码内容：'.$result['qr_code'];\r\n}else{\r\n    echo $result['msg'].' : '.$result['sub_msg'];\r\n}\r\nclass AlipayService\r\n{\r\n    protected $appId;\r\n    protected $notifyUrl;\r\n    protected $charset;\r\n    //私钥值\r\n    protected $rsaPrivateKey;\r\n    protected $totalFee;\r\n    protected $outTradeNo;\r\n    protected $orderName;\r\n\r\n    public function __construct()\r\n    {\r\n        $this->charset = 'utf-8';\r\n    }\r\n\r\n    public function setAppid($appid)\r\n    {\r\n        $this->appId = $appid;\r\n    }\r\n\r\n    public function setNotifyUrl($notifyUrl)\r\n    {\r\n        $this->notifyUrl = $notifyUrl;\r\n    }\r\n\r\n    public function setRsaPrivateKey($saPrivateKey)\r\n    {\r\n        $this->rsaPrivateKey = $saPrivateKey;\r\n    }\r\n\r\n    public function setTotalFee($payAmount)\r\n    {\r\n        $this->totalFee = $payAmount;\r\n    }\r\n\r\n    public function setOutTradeNo($outTradeNo)\r\n    {\r\n        $this->outTradeNo = $outTradeNo;\r\n    }\r\n\r\n    public function setOrderName($orderName)\r\n    {\r\n        $this->orderName = $orderName;\r\n    }\r\n\r\n    /**\r\n     * 发起订单\r\n     * @return array\r\n     */\r\n    public function doPay()\r\n    {\r\n        //请求参数\r\n        $requestConfigs = array(\r\n            'out_trade_no'=>$this->outTradeNo,\r\n            'total_amount'=>$this->totalFee, //单位 元\r\n            'subject'=>$this->orderName,  //订单标题\r\n            'timeout_express'=>'2h'       //该笔订单允许的最晚付款时间，逾期将关闭交易。取值范围：1m～15d。m-分钟，h-小时，d-天，1c-当天（1c-当天的情况下，无论交易何时创建，都在0点关闭）。 该参数数值不接受小数点， 如 1.5h，可转换为 90m。\r\n        );\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.trade.precreate',             //接口名称\r\n            'format' => 'JSON',\r\n            'charset'=>$this->charset,\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'notify_url' => $this->notifyUrl,\r\n            'biz_content'=>json_encode($requestConfigs),\r\n        );\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\r\n        return json_decode($result,true);\r\n    }\r\n    public function generateSign($params, $signType = \"RSA\") {\r\n        return $this->sign($this->getSignContent($params), $signType);\r\n    }\r\n    protected function sign($data, $signType = \"RSA\") {\r\n        $priKey=$this->rsaPrivateKey;\r\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\r\n            wordwrap($priKey, 64, \"\\n\", true) .\r\n            \"\\n-----END RSA PRIVATE KEY-----\";\r\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\r\n        if (\"RSA2\" == $signType) {\r\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\r\n        } else {\r\n            openssl_sign($data, $sign, $res);\r\n        }\r\n        $sign = base64_encode($sign);\r\n        return $sign;\r\n    }\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n        return false;\r\n    }\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n    public function curlPost($url = '', $postData = '', $options = array())\r\n    {\r\n        if (is_array($postData)) {\r\n            $postData = http_build_query($postData);\r\n        }\r\n        $ch = curl_init();\r\n        curl_setopt($ch, CURLOPT_URL, $url);\r\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n        curl_setopt($ch, CURLOPT_POST, 1);\r\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);\r\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30); //设置cURL允许执行的最长秒数\r\n        if (!empty($options)) {\r\n            curl_setopt_array($ch, $options);\r\n        }\r\n        //https请求 不验证证书和host\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\r\n        $data = curl_exec($ch);\r\n        curl_close($ch);\r\n        return $data;\r\n    }\r\n}\r\n"
        },
        {
          "name": "query.php",
          "type": "blob",
          "size": 6.38671875,
          "content": "<?php\r\nheader('Content-type:text/html; Charset=utf-8');\r\n/*** 请填写以下配置信息 ***/\r\n$appid = '';  //https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写对应应用的APPID\r\n$outTradeNo = '';     //要查询的商户订单号。注：商户订单号与支付宝交易号不能同时为空\r\n$tradeNo = '';     //要查询的支付宝交易号。注：商户订单号与支付宝交易号不能同时为空\r\n$signType = 'RSA2';       //签名算法类型，使用RSA2\r\n//商户私钥，填写对应签名算法类型的私钥，如何生成密钥参考：https://docs.open.alipay.com/291/105971和https://docs.open.alipay.com/200/105310\r\n$rsaPrivateKey='';\r\n/*** 配置结束 ***/\r\n$aliPay = new AlipayService();\r\n$aliPay->setAppid($appid);\r\n$aliPay->setRsaPrivateKey($rsaPrivateKey);\r\n$aliPay->setOutTradeNo($outTradeNo);\r\n$aliPay->setTradeNo($tradeNo);\r\n$result = $aliPay->doQuery();\r\nif($result['alipay_trade_query_response']['code']!='10000'){\r\n\techo $result['alipay_trade_query_response']['msg'].'：'.$result['alipay_trade_query_response']['sub_code'].' '.$result['alipay_trade_query_response']['sub_msg'];\r\n}else{\r\n\tswitch($result['alipay_trade_query_response']['trade_status']){\r\n\t\tcase 'WAIT_BUYER_PAY':\r\n\t\t\techo '交易创建，等待买家付款';\r\n\t\t\tbreak;\r\n\t\tcase 'TRADE_CLOSED':\r\n\t\t\techo '未付款交易超时关闭，或支付完成后全额退款';\r\n\t\t\tbreak;\r\n\t\tcase 'TRADE_SUCCESS':\r\n\t\t\techo '交易支付成功';\r\n\t\t\tbreak;\r\n\t\tcase 'TRADE_FINISHED':\r\n\t\t\techo '交易结束，不可退款';\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\techo '未知状态';\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nclass AlipayService\r\n{\r\n    protected $appId;\r\n    protected $charset;\r\n    //私钥值\r\n    protected $rsaPrivateKey;\r\n    protected $outTradeNo;\r\n    protected $tradeNo;\r\n\r\n    public function __construct()\r\n    {\r\n        $this->charset = 'utf-8';\r\n    }\r\n\r\n    public function setAppid($appid)\r\n    {\r\n        $this->appId = $appid;\r\n    }\r\n\r\n    public function setRsaPrivateKey($saPrivateKey)\r\n    {\r\n        $this->rsaPrivateKey = $saPrivateKey;\r\n    }\r\n\r\n    public function setOutTradeNo($outTradeNo)\r\n    {\r\n        $this->outTradeNo = $outTradeNo;\r\n    }\r\n\r\n    public function setTradeNo($tradeNo)\r\n    {\r\n        $this->tradeNo = $tradeNo;\r\n    }\r\n\r\n    /**\r\n     * 发起查询\r\n     * @return array\r\n     */\r\n    public function doQuery()\r\n    {\r\n        //请求参数\r\n        $requestConfigs = array(\r\n            'out_trade_no'=>$this->outTradeNo,\r\n            'trade_no'=>$this->tradeNo,\r\n        );\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.trade.query',             //接口名称\r\n            'format' => 'JSON',\r\n            'charset'=>$this->charset,\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'biz_content'=>json_encode($requestConfigs),\r\n        );\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\r\n        return json_decode($result,true);\r\n    }\r\n\r\n   \r\n    public function generateSign($params, $signType = \"RSA\") {\r\n        return $this->sign($this->getSignContent($params), $signType);\r\n    }\r\n\r\n    protected function sign($data, $signType = \"RSA\") {\r\n        $priKey=$this->rsaPrivateKey;\r\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\r\n            wordwrap($priKey, 64, \"\\n\", true) .\r\n            \"\\n-----END RSA PRIVATE KEY-----\";\r\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\r\n        if (\"RSA2\" == $signType) {\r\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\r\n        } else {\r\n            openssl_sign($data, $sign, $res);\r\n        }\r\n        $sign = base64_encode($sign);\r\n        return $sign;\r\n    }\r\n\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n\r\n    public function curlPost($url = '', $postData = '', $options = array())\r\n    {\r\n        if (is_array($postData)) {\r\n            $postData = http_build_query($postData);\r\n        }\r\n        $ch = curl_init();\r\n        curl_setopt($ch, CURLOPT_URL, $url);\r\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n        curl_setopt($ch, CURLOPT_POST, 1);\r\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);\r\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30); //设置cURL允许执行的最长秒数\r\n        curl_setopt($ch, CURLOPT_HTTPHEADER, array('content-type: application/x-www-form-urlencoded;charset=' . $this->charset));\r\n        if (!empty($options)) {\r\n            curl_setopt_array($ch, $options);\r\n        }\r\n        //https请求 不验证证书和host\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\r\n        $data = curl_exec($ch);\r\n        curl_close($ch);\r\n        return $data;\r\n    }\r\n}\r\n"
        },
        {
          "name": "refund.php",
          "type": "blob",
          "size": 6.67578125,
          "content": "<?php\r\n/**\r\n * alipay.trade.refund(统一收单交易退款接口)\r\n *\r\n * 当交易发生之后一段时间内，由于买家或者卖家的原因需要退款时，卖家可以通过退款接口将支付款退还给买家，支付宝将在收到退款请求并且验证成功之后，按照退款规则将支付款按原路退到买家帐号上。\r\n */\r\nheader('Content-type:text/html; Charset=utf-8');\r\n/*** 请填写以下配置信息 ***/\r\n$appid = 'xxxxx';  //https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写添加了电脑网站支付的应用的APPID\r\n$tradeNo = '';     //在支付宝系统中的交易流水号。最短 16 位，最长 64 位。和out_trade_no不能同时为空\r\n$outTradeNo = '';     //订单支付时传入的商户订单号,和支付宝交易号不能同时为空。\r\n$signType = 'RSA2';       //签名算法类型，支持RSA2和RSA，推荐使用RSA2\r\n$refundAmount = 0.01;       ////需要退款的金额，该金额不能大于订单金额,单位为元，支持两位小数\r\n//商户私钥，填写对应签名算法类型的私钥，如何生成密钥参考：https://docs.open.alipay.com/291/105971和https://docs.open.alipay.com/200/105310\r\n$rsaPrivateKey='';\r\n/*** 配置结束 ***/\r\n$aliPay = new AlipayService();\r\n$aliPay->setAppid($appid);\r\n$aliPay->setRsaPrivateKey($rsaPrivateKey);\r\n$aliPay->setTradeNo($tradeNo);\r\n$aliPay->setOutTradeNo($outTradeNo);\r\n$aliPay->setRefundAmount($refundAmount);\r\n$result = $aliPay->doRefund();\r\n$result = $result['alipay_trade_refund_response'];\r\nif($result['code'] && $result['code']=='10000'){\r\n    echo '<h1>退款成功</h1>';\r\n}else{\r\n    echo $result['msg'].' : '.$result['sub_msg'];\r\n}\r\n\r\nclass AlipayService\r\n{\r\n    protected $appId;\r\n    protected $returnUrl;\r\n    protected $notifyUrl;\r\n    protected $charset;\r\n    //私钥值\r\n    protected $rsaPrivateKey;\r\n    protected $outTradeNo;\r\n    protected $tradeNo;\r\n    protected $refundAmount;\r\n\r\n    public function __construct()\r\n    {\r\n        $this->charset = 'utf-8';\r\n    }\r\n    public function setAppid($appid)\r\n    {\r\n        $this->appId = $appid;\r\n    }\r\n    public function setRsaPrivateKey($saPrivateKey)\r\n    {\r\n        $this->rsaPrivateKey = $saPrivateKey;\r\n    }\r\n    public function setOutTradeNo($outTradeNo)\r\n    {\r\n        $this->outTradeNo = $outTradeNo;\r\n    }\r\n    public function settradeNo($tradeNo)\r\n    {\r\n        $this->tradeNo = $tradeNo;\r\n    }\r\n    public function setRefundAmount($refundAmount)\r\n    {\r\n        $this->refundAmount = $refundAmount;\r\n    }\r\n\r\n    /**\r\n     * 退款\r\n     * @return array\r\n     */\r\n    public function doRefund()\r\n    {\r\n        //请求参数\r\n        $requestConfigs = array(\r\n            'trade_no'=>$this->tradeNo,\r\n            'out_trade_no'=>$this->outTradeNo,\r\n            'refund_amount'=>$this->refundAmount,\r\n        );\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.trade.refund',             //接口名称\r\n            'format' => 'JSON',\r\n            'charset'=>$this->charset,\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'biz_content'=>json_encode($requestConfigs),\r\n        );\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\r\n        $resultArr = json_decode($result,true);\r\n        return $resultArr;\r\n    }\r\n\r\n    public function generateSign($params, $signType = \"RSA\") {\r\n        return $this->sign($this->getSignContent($params), $signType);\r\n    }\r\n\r\n    protected function sign($data, $signType = \"RSA\") {\r\n        $priKey=$this->rsaPrivateKey;\r\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\r\n            wordwrap($priKey, 64, \"\\n\", true) .\r\n            \"\\n-----END RSA PRIVATE KEY-----\";\r\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\r\n        if (\"RSA2\" == $signType) {\r\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\r\n        } else {\r\n            openssl_sign($data, $sign, $res);\r\n        }\r\n        $sign = base64_encode($sign);\r\n        return $sign;\r\n    }\r\n\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n\r\n    public function curlPost($url = '', $postData = '', $options = array())\r\n    {\r\n        if (is_array($postData)) {\r\n            $postData = http_build_query($postData);\r\n        }\r\n        $ch = curl_init();\r\n        curl_setopt($ch, CURLOPT_URL, $url);\r\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n        curl_setopt($ch, CURLOPT_POST, 1);\r\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);\r\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30); //设置cURL允许执行的最长秒数\r\n        if (!empty($options)) {\r\n            curl_setopt_array($ch, $options);\r\n        }\r\n        //https请求 不验证证书和host\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\r\n        $data = curl_exec($ch);\r\n        curl_close($ch);\r\n        return $data;\r\n    }\r\n}\r\n"
        },
        {
          "name": "return.php",
          "type": "blob",
          "size": 3.529296875,
          "content": "<?php\r\nheader('Content-type:text/html; Charset=utf-8');\r\n//支付宝公钥，账户中心->密钥管理->开放平台密钥，找到添加了支付功能的应用，根据你的加密类型，查看支付宝公钥\r\n$alipayPublicKey='';\r\n\r\n$aliPay = new AlipayService($alipayPublicKey);\r\n//验证签名\r\n$result = $aliPay->rsaCheck($_GET,$_GET['sign_type']);\r\nif($result===true){\r\n    //同步回调一般不处理业务逻辑，显示一个付款成功的页面，或者跳转到用户的财务记录页面即可。\r\n    echo '<h1>付款成功</h1>';\r\n    exit();\r\n}\r\necho '不合法的请求';exit();\r\nclass AlipayService\r\n{\r\n    //支付宝公钥\r\n    protected $alipayPublicKey;\r\n    protected $charset;\r\n\r\n    public function __construct($alipayPublicKey)\r\n    {\r\n        $this->charset = 'utf8';\r\n        $this->alipayPublicKey=$alipayPublicKey;\r\n    }\r\n\r\n    /**\r\n     *  验证签名\r\n     **/\r\n    public function rsaCheck($params) {\r\n        $sign = $params['sign'];\r\n        $signType = $params['sign_type'];\r\n        unset($params['sign_type']);\r\n        unset($params['sign']);\r\n        return $this->verify($this->getSignContent($params), $sign, $signType);\r\n    }\r\n\r\n    function verify($data, $sign, $signType = 'RSA') {\r\n        $pubKey= $this->alipayPublicKey;\r\n        $res = \"-----BEGIN PUBLIC KEY-----\\n\" .\r\n            wordwrap($pubKey, 64, \"\\n\", true) .\r\n            \"\\n-----END PUBLIC KEY-----\";\r\n        ($res) or die('支付宝RSA公钥错误。请检查公钥文件格式是否正确');\r\n\r\n        //调用openssl内置方法验签，返回bool值\r\n        if (\"RSA2\" == $signType) {\r\n            $result = (bool)openssl_verify($data, base64_decode($sign), $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256);\r\n        } else {\r\n            $result = (bool)openssl_verify($data, base64_decode($sign), $res);\r\n        }\r\n//        if(!$this->checkEmpty($this->alipayPublicKey)) {\r\n//            //释放资源\r\n//            openssl_free_key($res);\r\n//        }\r\n        return $result;\r\n    }\r\n\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n}\r\n"
        },
        {
          "name": "settle.php",
          "type": "blob",
          "size": 7.1572265625,
          "content": "<?php\r\nheader('Content-type:text/html; Charset=utf-8');\r\n/*** 请填写以下配置信息 ***/\r\n$appid = '';    //https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写开通了“当面付”应用的APPID\r\n$outTradeNo = uniqid();         //结算请求流水号 开发者自行生成并保证唯一性\r\n$tradeNo = '';     //支付宝订单号\r\n$tradeOut = '';     //分账支出方账户，本参数为要分账的支付宝账号对应的支付宝唯一用户号。以2088开头的纯16位数字。\r\n$tradeIn = '';     //分账收入方账户，本参数为要分账的支付宝账号对应的支付宝唯一用户号。以2088开头的纯16位数字。\r\n$amount = 0.01;                      //分账金额。即收款方实际收到的金额\r\n$signType = 'RSA2';       //签名算法类型，支持RSA2和RSA，推荐使用RSA2\r\n//商户私钥，填写对应签名算法类型的私钥，如何生成密钥参考：https://docs.open.alipay.com/291/105971和https://docs.open.alipay.com/200/105310\r\n$rsaPrivateKey='';\r\n/*** 配置结束 ***/\r\n$aliPay = new AlipayService();\r\n$aliPay->setAppid($appid);\r\n$aliPay->setRsaPrivateKey($rsaPrivateKey);\r\n$aliPay->setTotalFee($amount);\r\n$aliPay->setOutTradeNo($outTradeNo);\r\n$aliPay->setTradeNo($tradeNo);\r\n$aliPay->setTranOut($tradeOut);\r\n$aliPay->setTranIn($tradeIn);\r\n$result = $aliPay->doSettle();\r\n$result = $result['alipay_trade_order_settle_response'];\r\nif($result['code'] && $result['code']=='10000'){\r\n    echo '分账成功';\r\n}else{\r\n    echo $result['msg'].' : '.$result['sub_msg'];\r\n}\r\nclass AlipayService\r\n{\r\n    protected $appId;\r\n    protected $charset;\r\n    protected $notifyUrl;\r\n    //私钥值\r\n    protected $rsaPrivateKey;\r\n    protected $totalFee;\r\n    protected $outTradeNo;\r\n    protected $orderName;\r\n\r\n    protected $tradeNo;\r\n    protected $tranOut;\r\n    protected $tranIn;\r\n    protected $amountPercentage;\r\n\r\n    public function __construct()\r\n    {\r\n        $this->charset = 'utf-8';\r\n    }\r\n\r\n    public function setAppid($appid)\r\n    {\r\n        $this->appId = $appid;\r\n    }\r\n\r\n    public function setTradeNo($tradeNo)\r\n    {\r\n        $this->tradeNo = $tradeNo;\r\n    }\r\n\r\n    public function setTranOut($tranOut)\r\n    {\r\n        $this->tranOut = $tranOut;\r\n    }\r\n\r\n    public function setTranIn($tranIn)\r\n    {\r\n        $this->tranIn = $tranIn;\r\n    }\r\n\r\n    public function setRsaPrivateKey($rsaPrivateKey)\r\n    {\r\n        $this->rsaPrivateKey = $rsaPrivateKey;\r\n    }\r\n\r\n    public function setTotalFee($payAmount)\r\n    {\r\n        $this->totalFee = $payAmount;\r\n    }\r\n\r\n    public function setOutTradeNo($outTradeNo)\r\n    {\r\n        $this->outTradeNo = $outTradeNo;\r\n    }\r\n\r\n    /**\r\n     * 发起分账\r\n     * @return array\r\n     */\r\n    public function doSettle()\r\n    {\r\n        //请求参数\r\n        $requestConfigs = array(\r\n            'out_request_no'=>$this->outTradeNo,\r\n            'trade_no'=>$this->tradeNo,\r\n            'royalty_parameters'=>array(\r\n                array(\r\n                    'trans_out'=>$this->tranOut,\r\n                    'trans_in'=>$this->tranIn,\r\n                    'amount'=>$this->totalFee,\r\n                    //'amount_percentage'=>100,\r\n                    'desc'=>'分账给'.$this->tranIn,\r\n                )\r\n            ),\r\n            'operator_id'=>'A001',  //操作员id（选填）\r\n        );\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.trade.order.settle',             //接口名称\r\n            'format' => 'JSON',\r\n            'charset'=>$this->charset,\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'app_auth_token'=>'',\r\n            'biz_content'=>json_encode($requestConfigs),\r\n        );\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\r\n        return json_decode($result,true);\r\n    }\r\n    public function generateSign($params, $signType = \"RSA\") {\r\n        return $this->sign($this->getSignContent($params), $signType);\r\n    }\r\n    protected function sign($data, $signType = \"RSA\") {\r\n        $priKey=$this->rsaPrivateKey;\r\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\r\n            wordwrap($priKey, 64, \"\\n\", true) .\r\n            \"\\n-----END RSA PRIVATE KEY-----\";\r\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\r\n        if (\"RSA2\" == $signType) {\r\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\r\n        } else {\r\n            openssl_sign($data, $sign, $res);\r\n        }\r\n        $sign = base64_encode($sign);\r\n        return $sign;\r\n    }\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n        return false;\r\n    }\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n    public function curlPost($url = '', $postData = '', $options = array())\r\n    {\r\n        if (is_array($postData)) {\r\n            $postData = http_build_query($postData);\r\n        }\r\n        $ch = curl_init();\r\n        curl_setopt($ch, CURLOPT_URL, $url);\r\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n        curl_setopt($ch, CURLOPT_POST, 1);\r\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);\r\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30); //设置cURL允许执行的最长秒数\r\n        if (!empty($options)) {\r\n            curl_setopt_array($ch, $options);\r\n        }\r\n        //https请求 不验证证书和host\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\r\n        $data = curl_exec($ch);\r\n        curl_close($ch);\r\n        return $data;\r\n    }\r\n}\r\n"
        },
        {
          "name": "transfers.php",
          "type": "blob",
          "size": 6.0009765625,
          "content": "<?php\r\nheader('Content-type:text/html; Charset=utf-8');\r\n$appid = 'xxxxx';  //https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写添加了电脑网站支付的应用的APPID\r\n$outTradeNo = uniqid();     //商户转账唯一订单号\r\n$payAmount = 0.1;          //转账金额，单位：元 （金额必须大于等于0.1元)\r\n$remark = '转账测试';    //转帐备注\r\n$signType = 'RSA2';       //签名算法类型，支持RSA2和RSA，推荐使用RSA2\r\n//商户私钥，填写对应签名算法类型的私钥，如何生成密钥参考：https://docs.open.alipay.com/291/105971和https://docs.open.alipay.com/200/105310\r\n$saPrivateKey='';\r\n$account = '';      //收款方账户（支付宝登录号，支持邮箱和手机号格式。）\r\n$realName = '';     //收款方真实姓名\r\n$aliPay = new AlipayService($appid,$saPrivateKey);\r\n$result = $aliPay->doPay($payAmount,$outTradeNo,$account,$realName,$remark);\r\n$result = $result['alipay_fund_trans_toaccount_transfer_response'];\r\nif($result['code'] && $result['code']=='10000'){\r\n    echo '<h1>转账成功</h1>';\r\n}else{\r\n    echo $result['msg'].' : '.$result['sub_msg'];\r\n}\r\nclass AlipayService\r\n{\r\n    protected $appId;\r\n    //私钥值\r\n    protected $rsaPrivateKey;\r\n\r\n    public function __construct($appid, $saPrivateKey)\r\n    {\r\n        $this->appId = $appid;\r\n        $this->charset = 'utf-8';\r\n        $this->rsaPrivateKey=$saPrivateKey;\r\n    }\r\n\r\n    /**\r\n     * 转帐\r\n     * @param float $totalFee 转账金额，单位：元。\r\n     * @param string $outTradeNo 商户转账唯一订单号\r\n     * @param string $remark 转帐备注\r\n     * @return array\r\n     */\r\n    public function doPay($totalFee, $outTradeNo, $account,$realName,$remark='')\r\n    {\r\n        //请求参数\r\n        $requestConfigs = array(\r\n            'out_biz_no'=>$outTradeNo,\r\n            'payee_type'=>'ALIPAY_LOGONID',\r\n            'payee_account'=>$account,\r\n            'payee_real_name'=>$realName,  //收款方真实姓名\r\n            'amount'=>$totalFee, //转账金额，单位：元。\r\n            'remark'=>$remark,  //转账备注（选填）\r\n        );\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.fund.trans.toaccount.transfer',             //接口名称\r\n            'format' => 'JSON',\r\n            'charset'=>$this->charset,\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'biz_content'=>json_encode($requestConfigs),\r\n        );\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\r\n        $resultArr = json_decode($result,true);\r\n        return $resultArr;\r\n    }\r\n\r\n    public function generateSign($params, $signType = \"RSA\") {\r\n        return $this->sign($this->getSignContent($params), $signType);\r\n    }\r\n\r\n    protected function sign($data, $signType = \"RSA\") {\r\n        $priKey=$this->rsaPrivateKey;\r\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\r\n            wordwrap($priKey, 64, \"\\n\", true) .\r\n            \"\\n-----END RSA PRIVATE KEY-----\";\r\n\r\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\r\n        if (\"RSA2\" == $signType) {\r\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\r\n        } else {\r\n            openssl_sign($data, $sign, $res);\r\n        }\r\n        $sign = base64_encode($sign);\r\n        return $sign;\r\n    }\r\n\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n\r\n    public function curlPost($url = '', $postData = '', $options = array())\r\n    {\r\n        if (is_array($postData)) {\r\n            $postData = http_build_query($postData);\r\n        }\r\n        $ch = curl_init();\r\n        curl_setopt($ch, CURLOPT_URL, $url);\r\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n        curl_setopt($ch, CURLOPT_POST, 1);\r\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);\r\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30); //设置cURL允许执行的最长秒数\r\n        if (!empty($options)) {\r\n            curl_setopt_array($ch, $options);\r\n        }\r\n        //https请求 不验证证书和host\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\r\n        $data = curl_exec($ch);\r\n        curl_close($ch);\r\n        return $data;\r\n    }\r\n}\r\n"
        },
        {
          "name": "transfers_bank.php",
          "type": "blob",
          "size": 7.5078125,
          "content": "<?php\nheader('Content-type:text/html; Charset=utf-8');\n/* 配置开始 */\n/*\n1.下载支付宝的密钥生成工具（下载地址：https://opendocs.alipay.com/open/291/106097），生成公钥证书。选择PKCS1（非JAVA通用）。密钥长度选择RSA2，然后在下方的获取CSR文件，点击“点击获取”按钮。填写信息后，点击生成CSR文件。\n2.进入支付宝开放平台，确认应用的接口加密方式为：公钥证书。如果不是需要点击“更换应用公钥”进行更换。点击“上传CSR文件在线生成证书”按钮，选择刚生成的证书文件中后缀为csr格式的文件。\n3.下载应用公钥证书。\n4.生成应用证书sn：https://www.dedemao.com/alipay/cert_sn.php\n*/\n$appid = 'xxxxx';  //https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写添加了“单笔转账到账户”应用的APPID\n$outTradeNo = uniqid();     //商户转账唯一订单号\n$payAmount = 0.1;          //转账金额，单位：元 （金额必须大于等于0.1元)\n$alipayRootCertSn = '687b59193f3f462dd5336e5abf83c5d8_02941eef3187dddf3d3b83462e1dfcf6';\t//固定值，支付宝根证书\n$appCertSn = 'xxxxx';\t//生成应用证书sn\n$remark = '转账测试';    //转帐备注\n$signType = 'RSA2';       //签名算法类型，支持RSA2和RSA，推荐使用RSA2\n//商户私钥，填写对应签名算法类型的私钥，如何生成密钥参考：https://docs.open.alipay.com/291/105971和https://docs.open.alipay.com/200/105310\n$saPrivateKey='xxxxx';\n$account = 'xxxxx';      //收款方银行卡号\n$realName = 'xxx';     //收款方真实姓名\n/* 配置结束 */\n$aliPay = new AlipayService($appid,$saPrivateKey);\n$aliPay->setAlipayRootCertSn($alipayRootCertSn);\n$aliPay->setAppCertSn($appCertSn);\n$result = $aliPay->doTransfer($payAmount,$outTradeNo,$account,$realName,$remark);\n$result = $result['alipay_fund_trans_uni_transfer_response'];\nif($result['code'] && $result['code']=='10000'){\n    echo '<h1>转账成功</h1>';\n}else{\n    echo $result['msg'].' : '.$result['sub_msg'];\n}\nclass AlipayService\n{\n    protected $appId;\n    //私钥值\n    protected $rsaPrivateKey;\n\t//支付宝根证书SN\n\tprotected $alipayRootCertSn='';\n\t//应用证书SN\n\tprotected $appCertSn='';\n\n    public function __construct($appid, $saPrivateKey)\n    {\n        $this->appId = $appid;\n        $this->charset = 'utf-8';\n        $this->rsaPrivateKey=$saPrivateKey;\n    }\n\n\tpublic function setAlipayRootCertSn($alipayRootCertSn)\n\t{\n\t\t$this->alipayRootCertSn = $alipayRootCertSn;\n\t}\n\n\tpublic function setAppCertSn($appCertSn)\n\t{\n\t\t$this->appCertSn = $appCertSn;\n\t}\n\n    /**\n     * 转帐\n     * @param float $totalFee 转账金额，单位：元。\n     * @param string $outTradeNo 商户转账唯一订单号\n     * @param string $remark 转帐备注\n     * @return array\n     */\n    public function doTransfer($totalFee, $outTradeNo, $account,$realName,$remark='')\n    {\n        //请求参数\n        $requestConfigs = array(\n            'out_biz_no'=>$outTradeNo,\n            'payee_type'=>'ALIPAY_LOGONID',\n            'trans_amount'=>$totalFee,\t\t\t\t//转账金额，单位：元。\n            'product_code'=>'TRANS_BANKCARD_NO_PWD',\n            'biz_scene'=>'DIRECT_TRANSFER',\n            'order_title'=>'织梦猫提现',\n\t\t\t'payee_info'=>array(\t\t\t\t\n\t\t\t\t'identity'=>$account,\t\t//收款方银行卡账号\n\t\t\t\t'identity_type'=>'BANKCARD_ACCOUNT',\n\t\t\t\t'name'=>$realName, //收款方真实姓名\n\t\t\t\t'bankcard_ext_info'=>array(\n\t\t\t\t\t'account_type'=>2 //收款账户类型\t 1：对公 2：对私\n\t\t\t\t\t//更多bankcard_ext_info参数说明：https://opendocs.alipay.com/open/common/transfertocard\n\t\t\t\t)\n\t\t\t),\n            'remark'=>$remark,  //转账备注（选填）\n        );\n        $commonConfigs = array(\n            //公共参数\n\t\t\t'alipay_root_cert_sn' => $this->alipayRootCertSn,\n            'app_cert_sn' => $this->appCertSn,\n            'app_id' => $this->appId,\n            'method' => 'alipay.fund.trans.uni.transfer',             //接口名称\n            'format' => 'JSON',\n            'charset'=>$this->charset,\n            'sign_type'=>'RSA2',\n            'timestamp'=>date('Y-m-d H:i:s'),\n            'version'=>'1.0',\n            'biz_content'=>json_encode($requestConfigs),\n        );\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\n        return json_decode($result,true);\n    }\n\n    public function generateSign($params, $signType = \"RSA\") {\n        return $this->sign($this->getSignContent($params), $signType);\n    }\n\n    protected function sign($data, $signType = \"RSA\") {\n        $priKey=$this->rsaPrivateKey;\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\n            wordwrap($priKey, 64, \"\\n\", true) .\n            \"\\n-----END RSA PRIVATE KEY-----\";\n\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\n        if (\"RSA2\" == $signType) {\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\n        } else {\n            openssl_sign($data, $sign, $res);\n        }\n        $sign = base64_encode($sign);\n        return $sign;\n    }\n\n    /**\n     * 校验$value是否非空\n     *  if not set ,return true;\n     *    if is null , return true;\n     **/\n    protected function checkEmpty($value) {\n        if (!isset($value))\n            return true;\n        if ($value === null)\n            return true;\n        if (trim($value) === \"\")\n            return true;\n\n        return false;\n    }\n\n    public function getSignContent($params) {\n        ksort($params);\n        $stringToBeSigned = \"\";\n        $i = 0;\n        foreach ($params as $k => $v) {\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\n                // 转换成目标字符集\n                $v = $this->characet($v, $this->charset);\n                if ($i == 0) {\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\n                } else {\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\n                }\n                $i++;\n            }\n        }\n\n        unset ($k, $v);\n        return $stringToBeSigned;\n    }\n\n    /**\n     * 转换字符集编码\n     * @param $data\n     * @param $targetCharset\n     * @return string\n     */\n    function characet($data, $targetCharset) {\n        if (!empty($data)) {\n            $fileType = $this->charset;\n            if (strcasecmp($fileType, $targetCharset) != 0) {\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\n            }\n        }\n        return $data;\n    }\n\n    public function curlPost($url = '', $postData = '', $options = array())\n    {\n        if (is_array($postData)) {\n            $postData = http_build_query($postData);\n        }\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_POST, 1);\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30); //设置cURL允许执行的最长秒数\n        if (!empty($options)) {\n            curl_setopt_array($ch, $options);\n        }\n        //https请求 不验证证书和host\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        $data = curl_exec($ch);\n        curl_close($ch);\n        return $data;\n    }\n}\n"
        },
        {
          "name": "transfers_new.php",
          "type": "blob",
          "size": 7.3486328125,
          "content": "<?php\nheader('Content-type:text/html; Charset=utf-8');\n/* 配置开始 */\n/*\n1.下载支付宝的密钥生成工具（下载地址：https://opendocs.alipay.com/open/291/106097），生成公钥证书。选择PKCS1（非JAVA通用）。密钥长度选择RSA2，然后在下方的获取CSR文件，点击“点击获取”按钮。填写信息后，点击生成CSR文件。\n2.进入支付宝开放平台，确认应用的接口加密方式为：公钥证书。如果不是需要点击“更换应用公钥”进行更换。点击“上传CSR文件在线生成证书”按钮，选择刚生成的证书文件中后缀为csr格式的文件。\n3.下载应用公钥证书。\n4.生成应用证书sn：https://www.dedemao.com/alipay/cert_sn.php\n*/\n$appid = 'xxxxx';  //https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写添加了“单笔转账到账户”应用的APPID\n$outTradeNo = uniqid();     //商户转账唯一订单号\n$payAmount = 0.1;          //转账金额，单位：元 （金额必须大于等于0.1元)\n$alipayRootCertSn = '687b59193f3f462dd5336e5abf83c5d8_02941eef3187dddf3d3b83462e1dfcf6';\t//固定值，不要修改\n$appCertSn = 'xxxxx';\t//生成应用证书sn\n$remark = '转账测试';    //转帐备注\n$signType = 'RSA2';       //签名算法类型，支持RSA2和RSA，推荐使用RSA2\n//商户私钥，填写对应签名算法类型的私钥，如何生成密钥参考：https://docs.open.alipay.com/291/105971和https://docs.open.alipay.com/200/105310\n$saPrivateKey='xxxxx';\n$account = 'xxxxx';      //收款方账户（支付宝登录号，支持邮箱和手机号格式。）\n$realName = 'xxx';     //收款方真实姓名\n/* 配置结束 */\n$aliPay = new AlipayService($appid,$saPrivateKey);\n$aliPay->setAlipayRootCertSn($alipayRootCertSn);\n$aliPay->setAppCertSn($appCertSn);\n$result = $aliPay->doTransfer($payAmount,$outTradeNo,$account,$realName,$remark);\n$result = $result['alipay_fund_trans_uni_transfer_response'];\nif($result['code'] && $result['code']=='10000'){\n    echo '<h1>转账成功</h1>';\n}else{\n    echo $result['msg'].' : '.$result['sub_msg'];\n}\nclass AlipayService\n{\n    protected $appId;\n    //私钥值\n    protected $rsaPrivateKey;\n\t//支付宝根证书SN\n\tprotected $alipayRootCertSn='';\n\t//应用证书SN\n\tprotected $appCertSn='';\n\n    public function __construct($appid, $saPrivateKey)\n    {\n        $this->appId = $appid;\n        $this->charset = 'utf-8';\n        $this->rsaPrivateKey=$saPrivateKey;\n    }\n\n\tpublic function setAlipayRootCertSn($alipayRootCertSn)\n\t{\n\t\t$this->alipayRootCertSn = $alipayRootCertSn;\n\t}\n\n\tpublic function setAppCertSn($appCertSn)\n\t{\n\t\t$this->appCertSn = $appCertSn;\n\t}\n\n    /**\n     * 转帐\n     * @param float $totalFee 转账金额，单位：元。\n     * @param string $outTradeNo 商户转账唯一订单号\n     * @param string $remark 转帐备注\n     * @return array\n     */\n    public function doTransfer($totalFee, $outTradeNo, $account,$realName,$remark='')\n    {\n        //请求参数\n        $requestConfigs = array(\n            'out_biz_no'=>$outTradeNo,\n            'payee_type'=>'ALIPAY_LOGONID',\n            'trans_amount'=>$totalFee,\t\t\t\t//转账金额，单位：元。\n            'product_code'=>'TRANS_ACCOUNT_NO_PWD',\n            'biz_scene'=>'DIRECT_TRANSFER',\n            'order_title'=>'织梦猫提现',\n\t\t\t'payee_info'=>array(\n\t\t\t\t'identity'=>$account,\t\t//收款方支付宝账号\n\t\t\t\t'identity_type'=>'ALIPAY_LOGON_ID',\n\t\t\t\t'name'=>$realName, //收款方真实姓名\n\t\t\t),\n            'remark'=>$remark,  //转账备注（选填）\n        );\n        $commonConfigs = array(\n            //公共参数\n\t\t\t'alipay_root_cert_sn' => $this->alipayRootCertSn,\n            'app_cert_sn' => $this->appCertSn,\n            'app_id' => $this->appId,\n            'method' => 'alipay.fund.trans.uni.transfer',             //接口名称\n            'format' => 'JSON',\n            'charset'=>$this->charset,\n            'sign_type'=>'RSA2',\n            'timestamp'=>date('Y-m-d H:i:s'),\n            'version'=>'1.0',\n            'biz_content'=>json_encode($requestConfigs),\n        );\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\n        return json_decode($result,true);\n    }\n\n    public function generateSign($params, $signType = \"RSA\") {\n        return $this->sign($this->getSignContent($params), $signType);\n    }\n\n    protected function sign($data, $signType = \"RSA\") {\n        $priKey=$this->rsaPrivateKey;\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\n            wordwrap($priKey, 64, \"\\n\", true) .\n            \"\\n-----END RSA PRIVATE KEY-----\";\n\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\n        if (\"RSA2\" == $signType) {\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\n        } else {\n            openssl_sign($data, $sign, $res);\n        }\n        $sign = base64_encode($sign);\n        return $sign;\n    }\n\n    /**\n     * 校验$value是否非空\n     *  if not set ,return true;\n     *    if is null , return true;\n     **/\n    protected function checkEmpty($value) {\n        if (!isset($value))\n            return true;\n        if ($value === null)\n            return true;\n        if (trim($value) === \"\")\n            return true;\n\n        return false;\n    }\n\n    public function getSignContent($params) {\n        ksort($params);\n        $stringToBeSigned = \"\";\n        $i = 0;\n        foreach ($params as $k => $v) {\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\n                // 转换成目标字符集\n                $v = $this->characet($v, $this->charset);\n                if ($i == 0) {\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\n                } else {\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\n                }\n                $i++;\n            }\n        }\n\n        unset ($k, $v);\n        return $stringToBeSigned;\n    }\n\n    /**\n     * 转换字符集编码\n     * @param $data\n     * @param $targetCharset\n     * @return string\n     */\n    function characet($data, $targetCharset) {\n        if (!empty($data)) {\n            $fileType = $this->charset;\n            if (strcasecmp($fileType, $targetCharset) != 0) {\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\n            }\n        }\n        return $data;\n    }\n\n    public function curlPost($url = '', $postData = '', $options = array())\n    {\n        if (is_array($postData)) {\n            $postData = http_build_query($postData);\n        }\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_POST, 1);\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30); //设置cURL允许执行的最长秒数\n        if (!empty($options)) {\n            curl_setopt_array($ch, $options);\n        }\n        //https请求 不验证证书和host\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        $data = curl_exec($ch);\n        curl_close($ch);\n        return $data;\n    }\n}\n"
        },
        {
          "name": "transfers_query.php",
          "type": "blob",
          "size": 5.689453125,
          "content": "<?php\r\nheader('Content-type:text/html; Charset=utf-8');\r\n$appid = 'xxxxx';  //https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写添加了电脑网站支付的应用的APPID\r\n$outBizBo = '';        //商户转账唯一订单号（商户转账唯一订单号、支付宝转账单据号 至少填一个）\r\n$orderId = '';         //支付宝转账单据号（商户转账唯一订单号、支付宝转账单据号 至少填一个）\r\n$signType = 'RSA2';    //签名算法类型，支持RSA2和RSA，推荐使用RSA2\r\n//商户私钥，填写对应签名算法类型的私钥，如何生成密钥参考：https://docs.open.alipay.com/291/105971和https://docs.open.alipay.com/200/105310\r\n$saPrivateKey='';\r\n$aliPay = new AlipayService($appid,$saPrivateKey);\r\n$result = $aliPay->doQuery($outBizBo,$orderId);\r\n$result = $result['alipay_fund_trans_order_query_response'];\r\nif($result['code'] && $result['code']=='10000'){\r\n    echo '<h1>该笔款项转账成功</h1>';\r\n}else{\r\n    echo $result['msg'].' : '.$result['sub_msg'];\r\n}\r\nclass AlipayService\r\n{\r\n    protected $appId;\r\n    //私钥值\r\n    protected $rsaPrivateKey;\r\n\r\n    public function __construct($appid, $saPrivateKey)\r\n    {\r\n        $this->appId = $appid;\r\n        $this->charset = 'utf-8';\r\n        $this->rsaPrivateKey=$saPrivateKey;\r\n    }\r\n\r\n    /**\r\n     * 转帐查询\r\n     * @param string $outBizBo 商户转账唯一订单号（商户转账唯一订单号、支付宝转账单据号 至少填一个）\r\n     * @param string $orderId 支付宝转账单据号（商户转账唯一订单号、支付宝转账单据号 至少填一个）\r\n     * @return array\r\n     */\r\n    public function doQuery($outBizBo='',$orderId='')\r\n    {\r\n        //请求参数\r\n        $requestConfigs = array(\r\n            'out_biz_no'=>$outBizBo,\r\n            'order_id'=>$orderId,\r\n        );\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.fund.trans.order.query',             //接口名称\r\n            'format' => 'JSON',\r\n            'charset'=>$this->charset,\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'biz_content'=>json_encode($requestConfigs),\r\n        );\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\r\n        return json_decode($result,true);\r\n    }\r\n\r\n    public function generateSign($params, $signType = \"RSA\") {\r\n        return $this->sign($this->getSignContent($params), $signType);\r\n    }\r\n\r\n    protected function sign($data, $signType = \"RSA\") {\r\n        $priKey=$this->rsaPrivateKey;\r\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\r\n            wordwrap($priKey, 64, \"\\n\", true) .\r\n            \"\\n-----END RSA PRIVATE KEY-----\";\r\n\r\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\r\n        if (\"RSA2\" == $signType) {\r\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\r\n        } else {\r\n            openssl_sign($data, $sign, $res);\r\n        }\r\n        $sign = base64_encode($sign);\r\n        return $sign;\r\n    }\r\n\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n\r\n    public function curlPost($url = '', $postData = '', $options = array())\r\n    {\r\n        if (is_array($postData)) {\r\n            $postData = http_build_query($postData);\r\n        }\r\n        $ch = curl_init();\r\n        curl_setopt($ch, CURLOPT_URL, $url);\r\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n        curl_setopt($ch, CURLOPT_POST, 1);\r\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);\r\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30); //设置cURL允许执行的最长秒数\r\n        if (!empty($options)) {\r\n            curl_setopt_array($ch, $options);\r\n        }\r\n        //https请求 不验证证书和host\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\r\n        $data = curl_exec($ch);\r\n        curl_close($ch);\r\n        return $data;\r\n    }\r\n}\r\n"
        },
        {
          "name": "wap.php",
          "type": "blob",
          "size": 6.474609375,
          "content": "<?php\r\nheader('Content-type:text/html; Charset=utf-8');\r\n/*** 请填写以下配置信息 ***/\r\n$appid = 'xxxxx';  //https://open.alipay.com 账户中心->密钥管理->开放平台密钥，填写添加了电脑网站支付的应用的APPID\r\n$returnUrl = 'http://www.xxx.com/alipay/return.php';     //付款成功后的同步回调地址\r\n$notifyUrl = 'http://www.xxx.com/alipay/notify.php';     //付款成功后的异步回调地址\r\n$outTradeNo = uniqid();     //你自己的商品订单号\r\n$payAmount = 0.01;          //付款金额，单位:元\r\n$orderName = '支付测试';    //订单标题\r\n$signType = 'RSA2';\t\t\t//签名算法类型，支持RSA2和RSA，推荐使用RSA2\r\n$rsaPrivateKey='xxxxx';\t\t//商户私钥，填写对应签名算法类型的私钥，如何生成密钥参考：https://docs.open.alipay.com/291/105971和https://docs.open.alipay.com/200/105310\r\n/*** 配置结束 ***/\r\n$aliPay = new AlipayService();\r\n$aliPay->setAppid($appid);\r\n$aliPay->setReturnUrl($returnUrl);\r\n$aliPay->setNotifyUrl($notifyUrl);\r\n$aliPay->setRsaPrivateKey($rsaPrivateKey);\r\n$aliPay->setTotalFee($payAmount);\r\n$aliPay->setOutTradeNo($outTradeNo);\r\n$aliPay->setOrderName($orderName);\r\n$sHtml = $aliPay->doPay();\r\necho $sHtml;\r\nclass AlipayService\r\n{\r\n    protected $appId;\r\n    protected $charset;\r\n    protected $returnUrl;\r\n    protected $notifyUrl;\r\n    //私钥值\r\n    protected $rsaPrivateKey;\r\n    protected $totalFee;\r\n    protected $outTradeNo;\r\n    protected $orderName;\r\n    public function __construct()\r\n    {\r\n        $this->charset = 'utf-8';\r\n    }\r\n    public function setAppid($appid)\r\n    {\r\n        $this->appId = $appid;\r\n    }\r\n\r\n    public function setReturnUrl($returnUrl)\r\n    {\r\n        $this->returnUrl = $returnUrl;\r\n    }\r\n\r\n\r\n    public function setNotifyUrl($notifyUrl)\r\n    {\r\n        $this->notifyUrl = $notifyUrl;\r\n    }\r\n\r\n    public function setRsaPrivateKey($rsaPrivateKey)\r\n    {\r\n        $this->rsaPrivateKey = $rsaPrivateKey;\r\n    }\r\n\r\n    public function setTotalFee($payAmount)\r\n    {\r\n        $this->totalFee = $payAmount;\r\n    }\r\n\r\n    public function setOutTradeNo($outTradeNo)\r\n    {\r\n        $this->outTradeNo = $outTradeNo;\r\n    }\r\n\r\n    public function setOrderName($orderName)\r\n    {\r\n        $this->orderName = $orderName;\r\n    }\r\n\r\n    /**\r\n     * 发起订单\r\n     * @return array\r\n     */\r\n    public function doPay()\r\n    {\r\n        //请求参数\r\n        $requestConfigs = array(\r\n            'out_trade_no'=>$this->outTradeNo,\r\n            'product_code'=>'QUICK_WAP_WAY',\r\n            'total_amount'=>$this->totalFee, //单位 元\r\n            'subject'=>$this->orderName,  //订单标题\r\n        );\r\n        $commonConfigs = array(\r\n            //公共参数\r\n            'app_id' => $this->appId,\r\n            'method' => 'alipay.trade.wap.pay',             //接口名称\r\n            'format' => 'JSON',\r\n            'return_url' => $this->returnUrl,\r\n            'charset'=>$this->charset,\r\n            'sign_type'=>'RSA2',\r\n            'timestamp'=>date('Y-m-d H:i:s'),\r\n            'version'=>'1.0',\r\n            'notify_url' => $this->notifyUrl,\r\n            'biz_content'=>json_encode($requestConfigs),\r\n        );\r\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\r\n        return $this->buildRequestForm($commonConfigs);\r\n    }\r\n    /**\r\n     * 建立请求，以表单HTML形式构造（默认）\r\n     * @param $para_temp 请求参数数组\r\n     * @return 提交表单HTML文本\r\n     */\r\n    protected function buildRequestForm($para_temp) {\r\n        $sHtml = \"<form id='alipaysubmit' name='alipaysubmit' action='https://openapi.alipay.com/gateway.do?charset=\".$this->charset.\"' method='POST'>\";\r\n\t\tforeach($para_temp as $key=>$val){\r\n            if (false === $this->checkEmpty($val)) {\r\n                $val = str_replace(\"'\",\"&apos;\",$val);\r\n                $sHtml.= \"<input type='hidden' name='\".$key.\"' value='\".$val.\"'/>\";\r\n            }\t\t\r\n\t\t}\r\n        //submit按钮控件请不要含有name属性\r\n        $sHtml = $sHtml.\"<input type='submit' value='ok' style='display:none;''></form>\";\r\n        $sHtml = $sHtml.\"<script>document.forms['alipaysubmit'].submit();</script>\";\r\n        return $sHtml;\r\n    }\r\n    public function generateSign($params, $signType = \"RSA\") {\r\n        return $this->sign($this->getSignContent($params), $signType);\r\n    }\r\n    protected function sign($data, $signType = \"RSA\") {\r\n        $priKey=$this->rsaPrivateKey;\r\n        $res = \"-----BEGIN RSA PRIVATE KEY-----\\n\" .\r\n            wordwrap($priKey, 64, \"\\n\", true) .\r\n            \"\\n-----END RSA PRIVATE KEY-----\";\r\n        ($res) or die('您使用的私钥格式错误，请检查RSA私钥配置');\r\n        if (\"RSA2\" == $signType) {\r\n            openssl_sign($data, $sign, $res, version_compare(PHP_VERSION,'5.4.0', '<') ? SHA256 : OPENSSL_ALGO_SHA256); //OPENSSL_ALGO_SHA256是php5.4.8以上版本才支持\r\n        } else {\r\n            openssl_sign($data, $sign, $res);\r\n        }\r\n        $sign = base64_encode($sign);\r\n        return $sign;\r\n    }\r\n    /**\r\n     * 校验$value是否非空\r\n     *  if not set ,return true;\r\n     *    if is null , return true;\r\n     **/\r\n    protected function checkEmpty($value) {\r\n        if (!isset($value))\r\n            return true;\r\n        if ($value === null)\r\n            return true;\r\n        if (trim($value) === \"\")\r\n            return true;\r\n        return false;\r\n    }\r\n    public function getSignContent($params) {\r\n        ksort($params);\r\n        $stringToBeSigned = \"\";\r\n        $i = 0;\r\n        foreach ($params as $k => $v) {\r\n            if (false === $this->checkEmpty($v) && \"@\" != substr($v, 0, 1)) {\r\n                // 转换成目标字符集\r\n                $v = $this->characet($v, $this->charset);\r\n                if ($i == 0) {\r\n                    $stringToBeSigned .= \"$k\" . \"=\" . \"$v\";\r\n                } else {\r\n                    $stringToBeSigned .= \"&\" . \"$k\" . \"=\" . \"$v\";\r\n                }\r\n                $i++;\r\n            }\r\n        }\r\n        unset ($k, $v);\r\n        return $stringToBeSigned;\r\n    }\r\n    /**\r\n     * 转换字符集编码\r\n     * @param $data\r\n     * @param $targetCharset\r\n     * @return string\r\n     */\r\n    function characet($data, $targetCharset) {\r\n        if (!empty($data)) {\r\n            $fileType = $this->charset;\r\n            if (strcasecmp($fileType, $targetCharset) != 0) {\r\n                $data = mb_convert_encoding($data, $targetCharset, $fileType);\r\n                //$data = iconv($fileType, $targetCharset.'//IGNORE', $data);\r\n            }\r\n        }\r\n        return $data;\r\n    }\r\n}\r\n"
        },
        {
          "name": "wap_in_weixin",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}