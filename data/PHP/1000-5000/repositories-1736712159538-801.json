{
  "metadata": {
    "timestamp": 1736712159538,
    "page": 801,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "spatie/laravel-honeypot",
      "stars": 1396,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3056640625,
          "content": "; This file is for unifying the coding style for different editors and IDEs.\n; More information at https://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.5224609375,
          "content": "# Path-based git attributes\n# https://www.kernel.org/pub/software/scm/git/docs/gitattributes.html\n\n# Ignore all test and documentation with \"export-ignore\".\n/.github            export-ignore\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/.travis.yml        export-ignore\n/phpunit.xml.dist   export-ignore\n/.scrutinizer.yml   export-ignore\n/tests              export-ignore\n/.editorconfig      export-ignore\n/CHANGELOG.md       export-ignore\n/UPGRADING.md       export-ignore\n/.php-cs-fixer.dist.php export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0869140625,
          "content": "build\ncomposer.lock\ndocs\nvendor\ncoverage\n.phpunit.result.cache\n.php-cs-fixer.cache\n.idea\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 1.162109375,
          "content": "<?php\n\n$finder = Symfony\\Component\\Finder\\Finder::create()\n    ->notPath('bootstrap/*')\n    ->notPath('storage/*')\n    ->notPath('resources/view/mail/*')\n    ->in([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->name('*.php')\n    ->notName('*.blade.php')\n    ->ignoreDotFiles(true)\n    ->ignoreVCS(true);\n\nreturn (new PhpCsFixer\\Config())\n    ->setRules([\n        '@PSR2' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'ordered_imports' => ['sort_algorithm' => 'alpha'],\n        'no_unused_imports' => true,\n        'not_operator_with_successor_space' => true,\n        'trailing_comma_in_multiline' => true,\n        'phpdoc_scalar' => true,\n        'unary_operator_spaces' => true,\n        'binary_operator_spaces' => true,\n        'blank_line_before_statement' => [\n            'statements' => ['break', 'continue', 'declare', 'return', 'throw', 'try'],\n        ],\n        'phpdoc_single_line_var_spacing' => true,\n        'phpdoc_var_without_name' => true,\n        'method_argument_space' => [\n            'on_multiline' => 'ensure_fully_multiline',\n            'keep_multiple_spaces_after_comma' => true,\n        ]\n    ])\n    ->setFinder($finder);\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 7.3095703125,
          "content": "# Changelog\n\nAll notable changes to `laravel-honeypot` will be documented in this file\n\n## 4.5.3 - 2024-09-20\n\n### What's Changed\n\n* Corrected publishing tag by @LiamMcArthur in https://github.com/spatie/laravel-honeypot/pull/132\n* Add volt imports to README.md in https://github.com/spatie/laravel-honeypot/pull/135\n* Register components lazily by @mabdullahsari in https://github.com/spatie/laravel-honeypot/pull/136\n\n### New Contributors\n\n* @LiamMcArthur made their first contribution in https://github.com/spatie/laravel-honeypot/pull/132\n* @mabdullahsari made their first contribution in https://github.com/spatie/laravel-honeypot/pull/136\n\n**Full Changelog**: https://github.com/spatie/laravel-honeypot/compare/4.5.2...4.5.3\n\n## 4.5.2 - 2024-04-15\n\n### What's Changed\n\n* Fix Carbon 3 rawAddUnit type by @clementmas in https://github.com/spatie/laravel-honeypot/pull/131\n\n### New Contributors\n\n* @clementmas made their first contribution in https://github.com/spatie/laravel-honeypot/pull/131\n\n**Full Changelog**: https://github.com/spatie/laravel-honeypot/compare/4.5.1...4.5.2\n\n## 4.5.1 - 2024-03-14\n\n### What's Changed\n\n* Added Carbon 3 to the requirements by @poldixd in https://github.com/spatie/laravel-honeypot/pull/127\n\n### New Contributors\n\n* @poldixd made their first contribution in https://github.com/spatie/laravel-honeypot/pull/127\n\n**Full Changelog**: https://github.com/spatie/laravel-honeypot/compare/4.5.0...4.5.1\n\n## 4.5.0 - 2024-02-29\n\n### What's Changed\n\n* Laravel 11.x Support by @erikn69 in https://github.com/spatie/laravel-honeypot/pull/126\n\n**Full Changelog**: https://github.com/spatie/laravel-honeypot/compare/4.4.0...4.5.0\n\n## 4.4.0 - 2023-12-01\n\n### What's Changed\n\n* GitHub Actions V4 by @erikn69 in https://github.com/spatie/laravel-honeypot/pull/123\n* Add instructions on how to use with Volt functional syntax by @jcsoriano in https://github.com/spatie/laravel-honeypot/pull/125\n\n### New Contributors\n\n* @jcsoriano made their first contribution in https://github.com/spatie/laravel-honeypot/pull/125\n\n**Full Changelog**: https://github.com/spatie/laravel-honeypot/compare/4.3.4...4.4.0\n\n## 4.3.4 - 2023-07-19\n\nFix `autocomplete` attribute value\n\n## 4.3.3 - 2023-07-17\n\n### What's Changed\n\n- Fix badges by @erikn69 in https://github.com/spatie/laravel-honeypot/pull/116\n- fix typo by @conlacda in https://github.com/spatie/laravel-honeypot/pull/118\n- Fixes not dispatching SpamDetectedEvent in Livewire by @fsamapoor in https://github.com/spatie/laravel-honeypot/pull/120\n\n### New Contributors\n\n- @conlacda made their first contribution in https://github.com/spatie/laravel-honeypot/pull/118\n- @fsamapoor made their first contribution in https://github.com/spatie/laravel-honeypot/pull/120\n\n**Full Changelog**: https://github.com/spatie/laravel-honeypot/compare/4.3.2...4.3.3\n\n## 4.3.2 - 2023-01-17\n\n### What's Changed\n\n- PHP 8.2 Build by @erikn69 in https://github.com/spatie/laravel-honeypot/pull/112\n- Refactor tests to Pest by @alexmanase in https://github.com/spatie/laravel-honeypot/pull/113\n- Laravel 10.x Support by @erikn69 in https://github.com/spatie/laravel-honeypot/pull/115\n\n### New Contributors\n\n- @erikn69 made their first contribution in https://github.com/spatie/laravel-honeypot/pull/112\n- @alexmanase made their first contribution in https://github.com/spatie/laravel-honeypot/pull/113\n\n**Full Changelog**: https://github.com/spatie/laravel-honeypot/compare/4.3.1...4.3.2\n\n## 4.3.1 - 2022-08-03\n\n### What's Changed\n\n- handle DecryptException when valid_from field is a non-encrypted valuâ€¦ by @mikemunger in https://github.com/spatie/laravel-honeypot/pull/110\n\n### New Contributors\n\n- @mikemunger made their first contribution in https://github.com/spatie/laravel-honeypot/pull/110\n\n**Full Changelog**: https://github.com/spatie/laravel-honeypot/compare/4.3.0...4.3.1\n\n## 4.3.0 - 2022-05-23\n\n## What's Changed\n\n- SpamProtection to use the honeypot everywhere by @masterix21 in https://github.com/spatie/laravel-honeypot/pull/107\n\n## New Contributors\n\n- @masterix21 made their first contribution in https://github.com/spatie/laravel-honeypot/pull/107\n\n**Full Changelog**: https://github.com/spatie/laravel-honeypot/compare/4.2.3...4.3.0\n\n## 4.2.3 - 2022-05-12\n\n## What's Changed\n\n- Don't specify return type for middleware (too many different types possible)\n- Update .gitattributes by @angeljqv in https://github.com/spatie/laravel-honeypot/pull/102\n- Update README.md - Added 'valid_from_timestamp' by @vdvcoder in https://github.com/spatie/laravel-honeypot/pull/105\n\n## New Contributors\n\n- @angeljqv made their first contribution in https://github.com/spatie/laravel-honeypot/pull/102\n- @vdvcoder made their first contribution in https://github.com/spatie/laravel-honeypot/pull/105\n\n**Full Changelog**: https://github.com/spatie/laravel-honeypot/compare/4.2.2...4.2.3\n\n## 4.2.2 - 2022-03-24\n\n- Revert back to using inline styles (to avoid CSP issues)\n- Add `aria-hidden` for screenreaders\n- Use `autocomplete=nope` to disable autocomplete (https://stackoverflow.com/questions/12374442/chrome-ignores-autocomplete-off)\n\n**Full Changelog**: https://github.com/spatie/laravel-honeypot/compare/4.2.1...4.2.2\n\n## 4.2.1 - 2022-03-23\n\n- Add `autocomplete=off` to input fields\n\n**Full Changelog**: https://github.com/spatie/laravel-honeypot/compare/4.2.0...4.2.1\n\n## 4.2.0 - 2022-03-23\n\n## What's Changed\n\n- Add `tabindex=-1` to fields\n- Use custom class to hide honeypot fields\n- Increase default honeypot timeout to 3 seconds\n- Update .gitattributes by @PaolaRuby in https://github.com/spatie/laravel-honeypot/pull/100\n- Fix typo in docs by @mertasan in https://github.com/spatie/laravel-honeypot/pull/101\n\n## New Contributors\n\n- @PaolaRuby made their first contribution in https://github.com/spatie/laravel-honeypot/pull/100\n- @mertasan made their first contribution in https://github.com/spatie/laravel-honeypot/pull/101\n\n**Full Changelog**: https://github.com/spatie/laravel-honeypot/compare/4.1.0...4.2.0\n\n## 4.1.0 - 2022-01-13\n\n- support Laravel 9\n\n## 4.0.0 - 2021-04-13\n\n- add support for Fortify\n- drop support for PHP 7\n\n## 3.0.1 - 2020-11-04\n\n- add support for PHP 8\n\n## 3.0.0 - 2020-09-16\n\n- drop support for anything below PHP 7.4, Laravel 8\n- add `x-honeypot` Blade component\n- move setup to dedicated class, so it can be used in Inertia\n\n## 2.3.0 - 2020-09-08\n\n- add support for Laravel 8\n- add option to skip `valid_from` timestamp check\n\n## 2.2.0 - 2020-04-14\n\n- reverts back `block all requests without honeypot fields` and adds an option to enable it\n\n## 2.1.0 - 2020-03-02\n\n- drop support for anything below Laravel 7\n\n## 2.0.0 - 2020-03-02\n\n- block all requests without honeypot fields\n\n## 1.5.0 - 2020-03-02\n\n- make compatible with Laravel 7\n\n## 1.4.0 - 2019-04-09\n\n- make compatible with Laravel 6\n\n## 1.3.4 - 2019-06-12\n\n- improve validation of the timestamp\n\n## 1.3.3 - 2019-03-18\n\n- fix invalid payload error\n\n## 1.3.2 - 2019-03-06\n\n- drop support for Laravel 5.7 and Carbon 1\n\n## 1.3.1 - 2019-02-27\n\n- fix requirements\n\n## 1.3.0 - 2019-02-27\n\n- drop support for PHP 7.1\n\n## 1.2.0 - 2019-02-27\n\n- add support for Laravel 5.8\n\n## 1.1.3 - 2019-02-15\n\n- fix name field name\n\n## 1.1.2 - 2019-02-15\n\n- restrict honeypot to POST requests only\n\n## 1.1.1 - 2019-02-15\n\n- use underscores instead of dashes for form field names\n\n## 1.1.0 - 2018-01-03\n\n- add randomized name field name\n\n## 1.0.2 - 2018-12-27\n\n- fix view hint path\n\n## 1.0.1 - 2018-12-27\n\n- allow Laravel 5.6\n\n## 1.0.0 - 2018-12-27\n\n- initial release\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0654296875,
          "content": "The MIT License (MIT)\n\nCopyright (c) Spatie bvba <info@spatie.be>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.3203125,
          "content": "# Preventing spam submitted through forms\n\n[![Latest Version on Packagist](https://img.shields.io/packagist/v/spatie/laravel-honeypot.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-honeypot)\n![Test Status](https://img.shields.io/github/actions/workflow/status/spatie/laravel-honeypot/run-tests.yml?branch=main&label=Tests)\n![Code Style Status](https://img.shields.io/github/actions/workflow/status/spatie/laravel-honeypot/php-cs-fixer.yml?branch=main&label=Code%20Style)\n[![Total Downloads](https://img.shields.io/packagist/dt/spatie/laravel-honeypot.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-honeypot)\n\nWhen adding a form to a public site, there's a risk that spam bots will try to submit it with fake values. Luckily, the majority of these bots are pretty dumb. You can thwart most of them by adding an invisible field to your form that should never contain a value when submitted. Such a field is called a honeypot. These spam bots will just fill all fields, including the honeypot.\n\nWhen a submission comes in with a filled honeypot field, this package will discard that request. \nOn top of that this package also checks how long it took to submit the form. This is done using a timestamp in another invisible field. If the form was submitted in a ridiculously short time, the anti spam will also be triggered.\n\nAfter installing this package, all you need to do is to add the `x-honeypot` Blade component to your form.\n\n```html\n<form method=\"POST\">\n    <x-honeypot />\n    <input name=\"myField\" type=\"text\">\n</form>\n```\n\nThe package also supports manually passing the necessary values to your view layer, so you can easily add honeypot fields to your [Inertia](https://inertiajs.com) powered app.\n\n## Support us\n\n[<img src=\"https://github-ads.s3.eu-central-1.amazonaws.com/laravel-honeypot.jpg?t=1\" width=\"419px\" />](https://spatie.be/github-ad-click/laravel-honeypot)\n\nWe invest a lot of resources into creating [best in class open source packages](https://spatie.be/open-source). You can support us by [buying one of our paid products](https://spatie.be/open-source/support-us).\n\nWe highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using. You'll find our address on [our contact page](https://spatie.be/about-us). We publish all received postcards on [our virtual postcard wall](https://spatie.be/open-source/postcards).\n\n## Video tutorial\n\nIn [this video](https://vimeo.com/381197983), which is part of the [Mailcoach](https://mailcoach.app) video course, you can see how the package can be installed and used.\n\n## Installation\n\nYou can install the package via composer:\n\n```bash\ncomposer require spatie/laravel-honeypot\n```\n\nOptionally, you can publish the config file of the package.\n\n```bash\n php artisan vendor:publish --provider=\"Spatie\\Honeypot\\HoneypotServiceProvider\" --tag=\"honeypot-config\"\n```\n\nThis is the content of the config file that will be published at `config/honeypot.php`:\n\n```php\nuse Spatie\\Honeypot\\SpamResponder\\BlankPageResponder;\n\nreturn [\n    /*\n     * Here you can specify name of the honeypot field. Any requests that submit a non-empty\n     * value for this name will be discarded. Make sure this name does not\n     * collide with a form field that is actually used.\n     */\n    'name_field_name' => env('HONEYPOT_NAME', 'my_name'),\n\n    /*\n     * When this is activated there will be a random string added\n     * to the name_field_name. This improves the\n     * protection against bots.\n     */\n    'randomize_name_field_name' => env('HONEYPOT_RANDOMIZE', true),\n\n    /*\n     * When this is activated, requests will be checked if\n     * form is submitted faster than this amount of seconds\n     */\n    'valid_from_timestamp' => env('HONEYPOT_VALID_FROM_TIMESTAMP', true),\n    \n    /*\n     * This field contains the name of a form field that will be used to verify\n     * if the form wasn't submitted too quickly. Make sure this name does not\n     * collide with a form field that is actually used.\n     */\n    'valid_from_field_name' => env('HONEYPOT_VALID_FROM', 'valid_from'),\n\n    /*\n     * If the form is submitted faster than this amount of seconds\n     * the form submission will be considered invalid.\n     */\n    'amount_of_seconds' => env('HONEYPOT_SECONDS', 1),\n\n    /*\n     * This class is responsible for sending a response to requests that\n     * are detected as being spammy. By default a blank page is shown.\n     *\n     * A valid responder is any class that implements\n     * `Spatie\\Honeypot\\SpamResponder\\SpamResponder`\n     */\n    'respond_to_spam_with' => BlankPageResponder::class,\n\n    /*\n     * This class is responsible for applying all protection\n     * rules for a request. By default uses `request()`.\n     *\n     * It throws the `Spatie\\Honeypot\\ExceptionsSpamException` if the\n     * request is flagged as spam, or returns void if it succeeds.\n     */\n    'spam_protection' => \\Spatie\\Honeypot\\SpamProtection::class,\n\n    /*\n     * When activated, requests will be checked if honeypot fields are missing,\n     * if so the request will be stamped as spam. Be careful! When using the\n     * global middleware be sure to add honeypot fields to each form.\n     */\n    'honeypot_fields_required_for_all_forms' => false,\n\n    /*\n     * This switch determines if the honeypot protection should be activated.\n     */\n    'enabled' => env('HONEYPOT_ENABLED', true),\n];\n```\n  \n## Usage\n\nFirst, you must add the `x-honeypot` Blade component to any form you wish to protect.\n\n```blade\n<form method=\"POST\" action=\"{{ route('contactForm.submit') }}\")>\n    <x-honeypot />\n    <input name=\"myField\" type=\"text\">\n</form>\n```\n\nAlternatively, you can use the `@honeypot` Blade directive:\n\n```blade\n<form method=\"POST\" action=\"{{ route('contactForm.submit') }}\")>\n    @honeypot\n    <input name=\"myField\" type=\"text\">\n</form>\n```\n\nUsing either the Blade component or directive will add two fields: `my_name` and `valid_from_timestamp` (you can change the names in the config file).\n\nNext, you must use the `Spatie\\Honeypot\\ProtectAgainstSpam` middleware in the route that handles the form submission. This middleware will intercept any request that submits a non empty value for the key named `my_name`. It will also intercept the request if it is submitted faster than the encrypted timestamp that the package generated in `valid_from_timestamp`.\n\n```php\nuse App\\Http\\Controllers\\ContactFormSubmissionController;\nuse Spatie\\Honeypot\\ProtectAgainstSpam;\n\nRoute::post('contact', [ContactFormSubmissionController::class, 'create'])->middleware(ProtectAgainstSpam::class);\n```\n\nIf you want to integrate the `Spatie\\Honeypot\\ProtectAgainstSpam` middleware with Laravel's built in authentication routes, wrap the `Auth::routes();` declaration with the appropriate middleware group (make sure to add the `@honeypot` directive to the authentication forms).\n\n```php\nuse Spatie\\Honeypot\\ProtectAgainstSpam;\n\nRoute::middleware(ProtectAgainstSpam::class)->group(function() {\n    Auth::routes();\n});\n```\n\nIf your app has a lot of forms handled by many different controllers, you could opt to register it as global middleware.\n\n```php\n// inside app\\Http\\Kernel.php\n\nprotected $middleware = [\n   // ...\n   \\Spatie\\Honeypot\\ProtectAgainstSpam::class,\n];\n```\n\n### Usage in Inertia \n\nWhen using Inertia you must manually pass the values used in the honeypot fields. Here's an example:\n\n```php\n// in a controller\npublic function create(\\Spatie\\Honeypot\\Honeypot $honeypot) \n{\n    return inertia('contactform.show', [\n        'honeypot' => $honeypot,\n    ]);\n}\n```\n\nYour front-end will get an `honeypot` object with these keys: `enabled`, `nameFieldName`, `validFromFieldName`, `encryptedValidFrom`.\n\nHere's an example how these values could be rendered using Vue:\n\n```html\n<div v-if=\"honeypot.enabled\" :name=\"`${honeypot.nameFieldName}_wrap`\" style=\"display:none;\">\n    <input type=\"text\" v-model=\"form[honeypot.nameFieldName]\" :name=\"honeypot.nameFieldName\" :id=\"honeypot.nameFieldName\" />\n    <input type=\"text\" v-model=\"form[honeypot.validFromFieldName]\" :name=\"honeypot.validFromFieldName\" />\n</div>\n```\n\nAnd then in your Vue component, add these values to your form data:\n\n```javascript\nprops: ['honeypot'],\n\ndata() {\n    return {\n        form: this.$inertia.form({\n            [this.honeypot.nameFieldName]: '',\n            [this.honeypot.validFromFieldName]: this.honeypot.encryptedValidFrom,\n        }),\n    }\n}\n```\n\n### Usage in Livewire\n\nYou can use this package to prevent spam submission to forms powered by Livewire.\n\nFirst, add the `UsesSpamProtection` trait to your Livewire component:\n\n```php\nuse Spatie\\Honeypot\\Http\\Livewire\\Concerns\\UsesSpamProtection;\n\nclass YourComponent extends Component\n{\n    use UsesSpamProtection;\n```\n\nNext, declare a `HoneypotData` property and call `protectAgainstSpam()` in the method that handles form submissions:\n\n```php\nuse Spatie\\Honeypot\\Http\\Livewire\\Concerns\\HoneypotData;\n\nclass YourComponent extends Component\n{\n    // ...\n    \n    public HoneypotData $extraFields;\n    \n    public function mount()\n    {\n        $this->extraFields = new HoneypotData();\n    }\n \n   \n    public function submit(): void \n    {\n        $this->protectAgainstSpam(); // if is spam, will abort the request\n    \n        User::create($request->all());\n    }\n}\n```\n\nFinally, use the `x-honeypot` in your Livewire Blade component:\n\n```blade\n<form method=\"POST\" action=\"{{ route('contactForm.submit') }}\")>\n    <x-honeypot livewire-model=\"extraFields\" />\n    <input name=\"myField\" type=\"text\">\n</form>\n```\n\n#### Usage in Volt functional syntax\n\nTo use this package in Volt functional syntax, return the `HoneypotData` property from the `guessHoneypotDataProperty` method.\n\n```php\nuse App\\Models\\User;\nuse Spatie\\Honeypot\\Http\\Livewire\\Concerns\\HoneypotData;\nuse Spatie\\Honeypot\\Http\\Livewire\\Concerns\\UsesSpamProtection;\nuse function Livewire\\Volt\\{uses, state, mount};\n\nuses(UsesSpamProtection::class);\n\nstate([\n    // ...\n    'extraFields' => null,\n]);\n\nmount(function () {\n    $this->extraFields = new HoneypotData();\n});\n\n$guessHoneypotDataProperty = fn () => $this->extraFields;\n\n$submit = function () {\n    $this->protectAgainstSpam(); // if is spam, will abort the request\n    \n    User::create($request->all());\n};\n```\n\n### Disabling in testing\n\nBy default, any protected form that is submitted in faster than 1 second will be marked as spammy. When running end to end tests, which should run as fast as possible, you probably don't want this. \n\nTo disable all honeypots in code, you can set the `enabled` config value to `false`.\n\n```php\nconfig()->set('honeypot.enabled', false)\n```\n\n### Customizing the response\n\nWhen a spammy submission is detected, the package will show a blank page by default. You can customize this behaviour by writing your own `SpamResponse` and specifying its fully qualified class name in the `respond_to_spam_with` key of the `honeypot` config file.\n\nA valid `SpamResponse` is any class that implements the `Spatie\\Honeypot\\SpamResponder\\SpamResponder` interface. This is what that interface looks like:\n\n```php\nnamespace Spatie\\Honeypot\\SpamResponder;\n\nuse Closure;\nuse Illuminate\\Http\\Request;\n\ninterface SpamResponder\n{\n    public function respond(Request $request, Closure $next);\n}\n```\n\nEven though a spam responder's primary purpose is to respond to spammy requests, you could do other stuff there as well. You could for instance use the properties on `$request` to determine the source of the spam (maybe all requests come from the same IP) and put some logic to block that source altogether.\n\nIf the package wrongly determined that the request is spammy, you can generate the default response by passing the `$request` to the `$next` closure, like you would in a middleware.\n\n```php\n// in your spam responder\n$regularResponse = $next($request)\n```\n\n### Customizing the generated honeypot fields\n\nTo customize output generated, you can publish the `honeypot` view with:\n\n```php\nphp artisan vendor:publish --provider=\"Spatie\\Honeypot\\HoneypotServiceProvider\" --tag=honeypot-views\n```\n\nThe view will be placed in `resources/views/vendor/honeypot/honeypotFormFields.blade.php`. This is the default content:\n\n```php\n@if($enabled)\n    <div id=\"{{ $nameFieldName }}_wrap\" style=\"display:none;\">\n        <input name=\"{{ $nameFieldName }}\" type=\"text\" value=\"\" id=\"{{ $nameFieldName }}\">\n        <input name=\"{{ $validFromFieldName }}\" type=\"text\" value=\"{{ $encryptedValidFrom }}\">\n    </div>\n@endif\n```\n\n### Events fired\n\nWhenever spam is detected, the `Spatie\\Honeypot\\Events\\SpamDetectedEvent` event is fired. It has the `$request` as a public property.\n\n### Testing\n\n``` bash\ncomposer test\n```\n\n## Changelog\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information on what has changed recently.\n\n## Alternatives\n\nIf you need stronger spam protection, consider using [Google ReCaptcha](https://m.dotdev.co/google-recaptcha-integration-with-laravel-ad0f30b52d7d) or [Akismet](https://github.com/nickurt/laravel-akismet). \n\n## Contributing\n\nPlease see [CONTRIBUTING](https://github.com/spatie/.github/blob/main/CONTRIBUTING.md) for details.\n\n## Security\n\nIf you've found a bug regarding security please mail [security@spatie.be](mailto:security@spatie.be) instead of using the issue tracker.\n\n## Credits\n\n- [Freek Van der Herten](https://github.com/freekmurze)\n- [All Contributors](../../contributors)\n\nThis package was inspired by [the Honeypot package](https://github.com/msurguy/Honeypot) by [Maksim Surguy](https://github.com/msurguy).\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n"
        },
        {
          "name": "UPGRADING.md",
          "type": "blob",
          "size": 0.123046875,
          "content": "## From v1 to v2\n\nThere are no changes to the API. The only change is that requests without the honeypot fields will now fail\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.9248046875,
          "content": "{\n    \"name\": \"spatie/laravel-honeypot\",\n    \"description\": \"Preventing spam submitted through forms\",\n    \"keywords\": [\n        \"spatie\",\n        \"laravel-honeypot\"\n    ],\n    \"homepage\": \"https://github.com/spatie/laravel-honeypot\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Freek Van der Herten\",\n            \"email\": \"freek@spatie.be\",\n            \"homepage\": \"https://spatie.be\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.0\",\n        \"illuminate/contracts\": \"^8.0|^9.0|^10.0|^11.0\",\n        \"illuminate/encryption\": \"^8.0|^9.0|^10.0|^11.0\",\n        \"illuminate/http\": \"^8.0|^9.0|^10.0|^11.0\",\n        \"illuminate/support\": \"^8.0|^9.0|^10.0|^11.0\",\n        \"illuminate/validation\": \"^8.0|^9.0|^10.0|^11.0\",\n        \"nesbot/carbon\": \"^2.0|^3.0\",\n        \"spatie/laravel-package-tools\": \"^1.9\",\n        \"symfony/http-foundation\": \"^5.1.2|^6.0|^7.0\"\n    },\n    \"require-dev\": {\n        \"livewire/livewire\": \"^2.10|^3.0\",\n        \"orchestra/testbench\": \"^6.23|^7.0|^8.0|^9.0\",\n        \"pestphp/pest-plugin-livewire\": \"^1.0|^2.1\",\n        \"phpunit/phpunit\": \"^9.6|^10.5\",\n        \"spatie/pest-plugin-snapshots\": \"^1.1|^2.1\",\n        \"spatie/phpunit-snapshot-assertions\": \"^4.2|^5.1\",\n        \"spatie/test-time\": \"^1.2.1\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Spatie\\\\Honeypot\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Spatie\\\\Honeypot\\\\Tests\\\\\": \"tests\"\n        }\n    },\n    \"scripts\": {\n        \"test\": \"vendor/bin/pest\",\n        \"test-coverage\": \"vendor/bin/pest --coverage-html coverage\"\n    },\n    \"config\": {\n        \"sort-packages\": true,\n        \"allow-plugins\": {\n            \"pestphp/pest-plugin\": true\n        }\n    },\n    \"extra\": {\n        \"laravel\": {\n            \"providers\": [\n                \"Spatie\\\\Honeypot\\\\HoneypotServiceProvider\"\n            ]\n        }\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.6630859375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" bootstrap=\"vendor/autoload.php\" backupGlobals=\"false\" backupStaticAttributes=\"false\" colors=\"true\" verbose=\"true\" convertErrorsToExceptions=\"true\" convertNoticesToExceptions=\"true\" convertWarningsToExceptions=\"true\" processIsolation=\"false\" stopOnFailure=\"false\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\">\n  <coverage>\n    <include>\n      <directory suffix=\".php\">src/</directory>\n    </include>\n  </coverage>\n  <testsuites>\n    <testsuite name=\"Spatie Test Suite\">\n      <directory>tests</directory>\n    </testsuite>\n  </testsuites>\n</phpunit>\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}