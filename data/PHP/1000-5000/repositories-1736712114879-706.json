{
  "metadata": {
    "timestamp": 1736712114879,
    "page": 706,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thephpleague/event",
      "stars": 1534,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3232421875,
          "content": "* text=auto\n\n.github/ export-ignore\n.php_cs.dist export-ignore\nphpunit.xml.dist export-ignore\nphpstan.neon export-ignore\n**/Stub*.php export-ignore\n**/*Test.php export-ignore\n**/*Spy.php export-ignore\n.gitattributes export-ignore\n.gitignore export-ignore\nchangelog.md export-ignore\nreadme.md export-ignore\nupgrade.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0830078125,
          "content": ".idea\nvendor\ncoverage\ncoverage.xml\ncomposer.lock\n.php_cs.cache\n.phpunit.result.cache\n"
        },
        {
          "name": ".php_cs.dist",
          "type": "blob",
          "size": 0.9482421875,
          "content": "<?php\n\n$finder = PhpCsFixer\\Finder::create()->in([__DIR__ . '/src']);\n\nreturn PhpCsFixer\\Config::create()\n    ->setRules([\n        '@PSR2' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'binary_operator_spaces' => true,\n        'blank_line_before_return' => true,\n        'cast_spaces' => true,\n        'concat_space' => ['spacing' => 'one'],\n        'no_singleline_whitespace_before_semicolons' => true,\n        'not_operator_with_space' => true,\n        'ordered_imports' => true,\n        'phpdoc_align' => true,\n        'phpdoc_indent' => true,\n        'phpdoc_no_access' => true,\n        'phpdoc_no_alias_tag' => true,\n        'phpdoc_no_package' => true,\n        'phpdoc_scalar' => true,\n        'phpdoc_separation' => true,\n        'phpdoc_summary' => true,\n        'phpdoc_to_comment' => true,\n        'phpdoc_trim' => true,\n        'single_blank_line_at_eof' => true,\n        'ternary_operator_spaces' => true,\n    ])\n    ->setFinder($finder);\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.033203125,
          "content": "Copyright (c) 2020 Frank de Jonge\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "changelog.md",
          "type": "blob",
          "size": 2.7998046875,
          "content": "# Changelog\n\n## 3.0.2 - 29-10-2022\n\n### Fixed\n\n- Reduce complexity of removing one-time listeners (#102)\n\n## 3.0.1 - 28-10-2022\n\n### Fixed\n\n- Ensure one-time-listener is removed from the sorted list of listeners in the prioritized sub-class\n\n## 3.0.0 - 29-09-2020\n\n* PSR-14 is now supported.\n* Classes and interfaces renamed to match PSR terminology.\n\n## 2.2.0 - 2018-11-26\n\n* Buffered event emitter was added.\n\n## 2.1.2 - 2015-05-21\n\n### Fixed\n\n- Event emitting now respects the order in which the listeners were added in addition to priority.\n\n## 2.1.1 - 2015-03-30\n\n# Altered\n\n- __Emitter::emitBatch__ now uses a foreach instead of array map to allow better exception handling.\n\n## 2.1.0 - 2015-02-12\n\n### Added\n\n- EmitterAwareInterface: an interface to be EmitterInterface aware.\n- EmitterAwareTrait: a default implementation to EmitterAwareInterface\n\n### Changed\n\n- EmitterTrait: The EmitterAware interface was extracted from this, which it now uses.\n\n## 2.0.0 - 2014-12-09\n\n### Added\n\n- EventInterface: an interface is derived from the AbstractEvent class to allow more flexible type hinting and custom implementations. All the code expecting an AbstractEvent now expect an EventInterface implementation, however AbstractEvent covers the most use cases.\n- Event::named: named construtor to create string based events\n- CallbackListener::fromCallable: create a callback listener from a callable.\n- ListenerAcceptorInterface: An interface (distilled from the EmitterInterface) to only focus on accepting listeners.\n- ListenerProviderInterface: An interface to focus on providing the Emitter with new listeners.\n- EmitterInterface::useListenerProvider: Allows you to use an implementation of the ListenerProviderInterface to add listeners.\n- EmitterInterface::releaseGeneratedEvents: Eases the way events are released from GeneratorInterface implementations.\n\n### Altered\n\n- All event typehints have been changed from AbstractEvent to EventInterface\n\n### Removed\n\n- PriorityEmitter: this functionality is now part of the standard emitter.\n\n## 1.0.0 - 2014-10-09\n\n### Altered\n\n- The Emitter now checks if propagation has been stopped before invoking the first listener.\n- Renamed ListenerAbstract to AbstractListener\n\n\n## 0.3.1 - 06-09-2014\n\n### Added\n\n- Wildcard listeners: When specifying `*` as the event name to listen to it will listen to all events. Wildcard listeners will be invoked AFTER named event listeners.\n\n### Fixed\n\n- Various code style fixes.\n- Corrected priority emitter sorting.\n\n### Altered\n\n- Listener invocation is now responsible for retrieving the events attached to an event name. [internal]\n\n\n## 0.3.0 - 23-08-2014\n\n### Added\n\n- EmitterInterface: an interface is derived from the Emitter class to allow more flexible type hinting and custom implementations. All the code expecting an Emitter now expect an EmitterInterface implementation.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.7705078125,
          "content": "{\n    \"name\": \"league/event\",\n    \"description\": \"Event package\",\n    \"keywords\": [\n        \"event\",\n        \"emitter\",\n        \"listener\"\n    ],\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Frank de Jonge\",\n            \"email\": \"info@frenky.net\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=7.2.0\",\n        \"psr/event-dispatcher\": \"^1.0\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^8.5\",\n        \"phpstan/phpstan\": \"^0.12.45\",\n        \"friendsofphp/php-cs-fixer\": \"^2.16\"\n    },\n    \"provide\": {\n        \"psr/event-dispatcher-implementation\": \"1.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"League\\\\Event\\\\\": \"src/\"\n        }\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"3.0-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.2080078125,
          "content": "parameters:\n    checkMissingIterableValueType: false\n    reportUnmatchedIgnoredErrors: false\n    checkGenericClassInNonGenericObjectType: false\n    ignoreErrors:\n        - '#Call to protected method recordEvent#'\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.4638671875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit colors=\"true\" bootstrap=\"vendor/autoload.php\">\n    <testsuites>\n        <testsuite name=\"League\\Event\">\n            <directory suffix=\"Test.php\">src/</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist>\n            <directory>src/</directory>\n            <exclude>\n                <directory suffix=\"Test.php\">src/</directory>\n            </exclude>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 1.1396484375,
          "content": "# League\\Event\n\n[![Author](http://img.shields.io/badge/author-@frankdejonge-blue.svg?style=flat-square)](https://twitter.com/frankdejonge)\n[![Build Status](https://img.shields.io/github/workflow/status/thephpleague/event/Quality%20Assurance?style=flat-square)](https://github.com/thephpleague/event/actions?query=workflow%3A%22Quality+Assurance%22)\n[![Quality Score](https://img.shields.io/scrutinizer/g/thephpleague/event.svg?style=flat-square)](https://scrutinizer-ci.com/g/thephpleague/event)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE)\n[![Packagist Version](https://img.shields.io/packagist/v/league/event.svg?style=flat-square)](https://packagist.org/packages/league/event)\n[![Total Downloads](https://img.shields.io/packagist/dt/league/event.svg?style=flat-square)](https://packagist.org/packages/league/event)\n[![Coverage Status](https://img.shields.io/scrutinizer/coverage/g/thephpleague/event.svg?style=flat-square)](https://scrutinizer-ci.com/g/thephpleague/event/code-structure)\n\n# Installation\n\n```\ncomposer require league/event\n```\n\n# [Read the documentation](http://event.thephpleague.com)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}