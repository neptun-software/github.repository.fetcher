{
  "metadata": {
    "timestamp": 1736711887892,
    "page": 252,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "doctrine/data-fixtures",
      "stars": 2787,
      "defaultBranch": "2.0.x",
      "files": [
        {
          "name": ".doctrine-project.json",
          "type": "blob",
          "size": 1.3818359375,
          "content": "{\n    \"active\": true,\n    \"name\": \"Data fixtures\",\n    \"slug\": \"data-fixtures\",\n    \"docsSlug\": \"doctrine-data-fixtures\",\n    \"versions\": [\n        {\n            \"name\": \"3.0\",\n            \"branchName\": \"3.0.x\",\n            \"slug\": \"latest\",\n            \"upcoming\": true\n        },\n        {\n            \"name\": \"2.1\",\n            \"branchName\": \"2.1.x\",\n            \"slug\": \"2.1\",\n            \"upcoming\": true\n        },\n        {\n            \"name\": \"2.0\",\n            \"branchName\": \"2.0.x\",\n            \"slug\": \"2.0\",\n            \"current\": true\n        },\n        {\n            \"name\": \"1.8\",\n            \"branchName\": \"1.8.x\",\n            \"slug\": \"1.8\",\n            \"maintained\": true\n        },\n        {\n            \"name\": \"1.7\",\n            \"branchName\": \"1.7.x\",\n            \"slug\": \"1.7\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.6\",\n            \"branchName\": \"1.6.x\",\n            \"slug\": \"1.6\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.5\",\n            \"branchName\": \"1.5.x\",\n            \"slug\": \"1.5\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.4\",\n            \"branchName\": \"1.4.x\",\n            \"slug\": \"1.4\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.3\",\n            \"branchName\": \"1.3\",\n            \"slug\": \"1.3\",\n            \"maintained\": false\n        }\n    ]\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.38671875,
          "content": "# Auto-detect text files, ensure they use LF.\n* text=auto eol=lf\n\n# Exclude non-essential files from dist\n/docs export-ignore\n/tests export-ignore\n/.doctrine-project.json export-ignore\n/.gitattributes export-ignore\n/.github export-ignore\n/.gitignore export-ignore\n/phpunit.xml.dist export-ignore\n/phpcs.xml.dist export-ignore\n/phpstan.neon.dist export-ignore\n/phpstan-baseline.neon export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0673828125,
          "content": "phpunit.xml\nvendor/\n.phpcs-cache\ncomposer.lock\n.phpunit.result.cache\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.041015625,
          "content": "Copyright (c) 2006-2015 Doctrine Project\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.7451171875,
          "content": "# Doctrine Data Fixtures Extension\n\n[![Build Status](https://github.com/doctrine/data-fixtures/workflows/Continuous%20Integration/badge.svg)](https://github.com/doctrine/data-fixtures/actions)\n\nThis extension aims to provide a simple way to manage and execute the loading of data fixtures\nfor the [Doctrine ORM or ODM](http://www.doctrine-project.org/).\n\n## More resources:\n\n* [Website](http://www.doctrine-project.org)\n* [Documentation](https://www.doctrine-project.org/projects/doctrine-data-fixtures/en/latest/index.html)\n\n## Running the tests:\n\nPhpunit is included in the dev requirements of this package.\n\nTo setup and run tests follow these steps:\n\n- go to the root directory of data-fixtures\n- run: **composer install --dev**\n- run: **vendor/bin/phpunit**\n"
        },
        {
          "name": "UPGRADE.md",
          "type": "blob",
          "size": 2.71484375,
          "content": "Note about upgrading: Doctrine uses static and runtime mechanisms to raise\nawareness about deprecated code.\n\n- Use of `@deprecated` docblock that is detected by IDEs (like PHPStorm) or\n  Static Analysis tools (like Psalm, phpstan)\n- Use of our low-overhead runtime deprecation API, details:\n  https://github.com/doctrine/deprecations/\n\n# Upgrade to 2.0\n\nYou need PHP 8.1 or newer to use this library.\n\n## BC BREAK: Add native types declarations to all the methods\n\nAll types defined in phpdoc annotations are now defined natively,\nthey must be added to your code if you extend the classes or implement the interfaces.\n\n## Loggers have to implement the PSR-3 contracts\n\n* Passing a callable to `AbstractExecutor::setLogger()` is not possible anymore, pass a PSR-3 logger instead.\n* The method `AbstractExecutor::log()` has been removed without replacement.\n\n## Specifying the class is mandatory when loading references\n\nFor the following method, the `class` param is now mandatory:\n- `AbstractFixture::getReference`\n- `AbstractFixture::hasReference`\n- `ReferenceRepository::setReferenceIdentity`\n- `ReferenceRepository::hasIdentity`\n- `ReferenceRepository::getReference`\n- `ReferenceRepository::setReference`\n\nThe following method was removed:\n- `ReferenceRepository::getReferences`\n\nThe following classes are now final, each of them has an interface you can implement:\n- `Doctrine\\Common\\DataFixtures\\Executor\\MongoDBExecutor`\n- `Doctrine\\Common\\DataFixtures\\Executor\\ORMExecutor`\n- `Doctrine\\Common\\DataFixtures\\Executor\\PHPCSExecutor`\n- `Doctrine\\Common\\DataFixtures\\Purger\\MongoDBPurger`\n- `Doctrine\\Common\\DataFixtures\\Purger\\ORMPurger`\n- `Doctrine\\Common\\DataFixtures\\Purger\\PHPCSPurger`\n\n# Upgrade to 1.8\n\n## Deprecated closure loggers in favor of PSR-3\n\n* Passing a callable to `AbstractExecutor::setLogger()` is deprecated, pass a PSR-3 logger instead.\n* The method `AbstractExecutor::log()` is deprecated without replacement.\n\n## Finalized classes\n\nExecutor and Purger classes are final, they cannot be extended.\n`AbstractExecutor` is internal. It cannot be extended or used as typehint.\n\n# Upgrade to 1.6\n\n## BC BREAK: `CircularReferenceException` no longer extends `Doctrine\\Common\\CommonException`\n\nWe don't think anyone catches this exception in a `catch (CommonException)` statement.\n\n## `doctrine/data-fixtures` no longer requires `doctrine/common`\n\nIf you rely on types from `doctrine/common`, you should require that package, regardless of whether other packages require it.\n\n# Between v1.0.0-ALPHA1 and v1.0.0-ALPHA2\n\nThe FixtureInterface was changed from\n\n    interface FixtureInterface\n    {\n        load($manager);\n    }\n\nto\n\n    use Doctrine\\Common\\Persistence\\ObjectManager;\n\n    interface FixtureInterface\n    {\n        load(ObjectManager $manager);\n    }\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.7373046875,
          "content": "{\n    \"name\": \"doctrine/data-fixtures\",\n    \"type\": \"library\",\n    \"description\": \"Data Fixtures for all Doctrine Object Managers\",\n    \"keywords\": [\n        \"database\"\n    ],\n    \"homepage\": \"https://www.doctrine-project.org\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Jonathan Wage\",\n            \"email\": \"jonwage@gmail.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.1\",\n        \"doctrine/persistence\": \"^3.1\",\n        \"psr/log\": \"^1.1 || ^2 || ^3\"\n    },\n    \"conflict\": {\n        \"doctrine/dbal\": \"<3.5 || >=5\",\n        \"doctrine/orm\": \"<2.14 || >=4\",\n        \"doctrine/phpcr-odm\": \"<1.3.0\"\n    },\n    \"require-dev\": {\n        \"ext-sqlite3\": \"*\",\n        \"doctrine/coding-standard\": \"^12\",\n        \"doctrine/dbal\": \"^3.5 || ^4\",\n        \"doctrine/mongodb-odm\": \"^1.3.0 || ^2.0.0\",\n        \"doctrine/orm\": \"^2.14 || ^3\",\n        \"fig/log-test\": \"^1\",\n        \"phpstan/phpstan\": \"^1.10\",\n        \"phpunit/phpunit\": \"^10.5.3\",\n        \"symfony/cache\": \"^6.4 || ^7\",\n        \"symfony/var-exporter\": \"^6.4 || ^7\"\n    },\n    \"suggest\": {\n        \"alcaeus/mongo-php-adapter\": \"For using MongoDB ODM 1.3 with PHP 7 (deprecated)\",\n        \"doctrine/mongodb-odm\": \"For loading MongoDB ODM fixtures\",\n        \"doctrine/orm\": \"For loading ORM fixtures\",\n        \"doctrine/phpcr-odm\": \"For loading PHPCR ODM fixtures\"\n    },\n    \"config\": {\n        \"sort-packages\": true,\n        \"allow-plugins\": {\n            \"composer/package-versions-deprecated\": true,\n            \"dealerdirect/phpcodesniffer-composer-installer\": true\n        }\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Doctrine\\\\Common\\\\DataFixtures\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Doctrine\\\\Tests\\\\\": \"tests\"\n        }\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpcs.xml.dist",
          "type": "blob",
          "size": 2.533203125,
          "content": "<?xml version=\"1.0\"?>\n<ruleset>\n    <arg name=\"basepath\" value=\".\"/>\n    <arg name=\"extensions\" value=\"php\"/>\n    <arg name=\"parallel\" value=\"80\"/>\n    <arg name=\"cache\" value=\".phpcs-cache\"/>\n    <arg name=\"colors\" />\n\n    <config name=\"php_version\" value=\"80100\"/>\n\n    <!-- Ignore warnings and show progress of the run -->\n    <arg value=\"nps\"/>\n\n    <file>src</file>\n    <file>tests</file>\n\n    <rule ref=\"Doctrine\">\n        <!-- Traversable type hints often end up as mixed[], so we skip them for now -->\n        <exclude name=\"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingTraversableTypeHintSpecification\"/>\n        <exclude name=\"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification\"/>\n        <exclude name=\"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification\"/>\n    </rule>\n\n    <rule ref=\"PSR1.Classes.ClassDeclaration.MultipleClasses\">\n        <exclude-pattern>tests/*</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming\">\n        <exclude-pattern>src/AbstractFixture.php</exclude-pattern>\n        <exclude-pattern>src/Executor/AbstractExecutor.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.Classes.SuperfluousExceptionNaming\">\n        <exclude-pattern>src/Exception/CircularReferenceException.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming\">\n        <exclude-pattern>src/DependentFixtureInterface.php</exclude-pattern>\n        <exclude-pattern>src/FixtureInterface.php</exclude-pattern>\n        <exclude-pattern>src/Purger/MongoDBPurgerInterface.php</exclude-pattern>\n        <exclude-pattern>src/Purger/ORMPurgerInterface.php</exclude-pattern>\n        <exclude-pattern>src/Purger/PHPCRPurgerInterface.php</exclude-pattern>\n        <exclude-pattern>src/Purger/PurgerInterface.php</exclude-pattern>\n        <exclude-pattern>src/OrderedFixtureInterface.php</exclude-pattern>\n        <exclude-pattern>src/SharedFixtureInterface.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint\">\n        <!-- ORM 3 compatibility -->\n        <exclude-pattern>src/Purger/ORMPurger.php</exclude-pattern>\n        <!-- Don't add parameter types to overridden methods -->\n        <exclude-pattern>tests/Common/DataFixtures/TestTypes/UuidType.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"Squiz.Classes.ClassFileName.NoMatch\">\n        <exclude-pattern>tests/*</exclude-pattern>\n    </rule>\n</ruleset>\n"
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 15.6328125,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Strict comparison using \\\\=\\\\=\\\\= between array\\\\<string\\\\> and false will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Event/Listener/MongoDBReferenceListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Strict comparison using \\\\=\\\\=\\\\= between array\\\\<string\\\\> and false will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Event/Listener/ORMReferenceListener.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to method transactional\\\\(\\\\) on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManagerInterface\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Executor/PHPCRExecutor.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Executor\\\\\\\\PHPCRExecutor\\\\:\\\\:getObjectManager\\\\(\\\\) has invalid return type Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManagerInterface\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Executor/PHPCRExecutor.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$dm of method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\PHPCRPurger\\\\:\\\\:setDocumentManager\\\\(\\\\) expects Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManager, Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManagerInterface given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Executor/PHPCRExecutor.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$manager of method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Executor\\\\\\\\AbstractExecutor\\\\:\\\\:__construct\\\\(\\\\) expects Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager, Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManagerInterface given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Executor/PHPCRExecutor.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\$dm of method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Executor\\\\\\\\PHPCRExecutor\\\\:\\\\:__construct\\\\(\\\\) has invalid type Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManagerInterface\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Executor/PHPCRExecutor.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Executor\\\\\\\\PHPCRExecutor\\\\:\\\\:\\\\$dm has unknown class Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManagerInterface as its type\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Executor/PHPCRExecutor.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\FixtureInterface\\\\:\\\\:getDependencies\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Loader.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Loader\\\\:\\\\:createFixture\\\\(\\\\) should return Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\FixtureInterface but returns object\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Loader.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Loader\\\\:\\\\:getUnsequencedClasses\\\\(\\\\) should return array\\\\<class\\\\-string\\\\<Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\FixtureInterface\\\\>\\\\> but returns array\\\\<int\\\\<0, max\\\\>, class\\\\-string\\\\<Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\DependentFixtureInterface\\\\>\\\\|class\\\\-string\\\\<Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\FixtureInterface\\\\>\\\\>\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Loader.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Loader\\\\:\\\\:loadFromDirectory\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Loader.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Loader\\\\:\\\\:loadFromFile\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Loader.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$sequences of method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Loader\\\\:\\\\:getUnsequencedClasses\\\\(\\\\) expects array\\\\<class\\\\-string\\\\<Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\DependentFixtureInterface\\\\>, int\\\\>, array\\\\<class\\\\-string\\\\<Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\DependentFixtureInterface\\\\>\\\\|class\\\\-string\\\\<Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\FixtureInterface\\\\>, int\\\\> given\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Loader.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getReference\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/ProxyReferenceRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Expression on left side of \\\\?\\\\? is not nullable\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/ORMPurger.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\ORMPurger\\\\:\\\\:getAssociationTables\\\\(\\\\) has parameter \\\\$classes with generic class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata but does not specify its types\\\\: T$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/ORMPurger.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\ORMPurger\\\\:\\\\:getCommitOrder\\\\(\\\\) has parameter \\\\$classes with generic class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata but does not specify its types\\\\: T$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/ORMPurger.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\ORMPurger\\\\:\\\\:getCommitOrder\\\\(\\\\) return type with generic class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata does not specify its types\\\\: T$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/ORMPurger.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\ORMPurger\\\\:\\\\:getJoinTableName\\\\(\\\\) has parameter \\\\$class with generic class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata but does not specify its types\\\\: T$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/ORMPurger.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\ORMPurger\\\\:\\\\:getTableName\\\\(\\\\) has parameter \\\\$class with generic class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata but does not specify its types\\\\: T$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/ORMPurger.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$assoc of method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\ORMPurger\\\\:\\\\:getJoinTableName\\\\(\\\\) expects array\\\\|Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ManyToManyOwningSideMapping, Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ManyToManyInverseSideMapping\\\\|Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ManyToManyOwningSideMapping\\\\|Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ManyToOneAssociationMapping\\\\|Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\OneToManyAssociationMapping\\\\|Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\OneToOneInverseSideMapping\\\\|Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\OneToOneOwningSideMapping given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/ORMPurger.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$association of method Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\QuoteStrategy\\\\:\\\\:getJoinTableName\\\\(\\\\) expects Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ManyToManyOwningSideMapping, array\\\\|Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ManyToManyOwningSideMapping given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/ORMPurger.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to method getPhpcrSession\\\\(\\\\) on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManagerInterface\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/PHPCRPurger.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to static method purgeWorkspace\\\\(\\\\) on an unknown class PHPCR\\\\\\\\Util\\\\\\\\NodeHelper\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/PHPCRPurger.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\PHPCRPurger\\\\:\\\\:getObjectManager\\\\(\\\\) has invalid return type Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManagerInterface\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/PHPCRPurger.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\$dm of method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\PHPCRPurger\\\\:\\\\:__construct\\\\(\\\\) has invalid type Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManagerInterface\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/PHPCRPurger.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\$dm of method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\PHPCRPurger\\\\:\\\\:setDocumentManager\\\\(\\\\) has invalid type Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManager\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/PHPCRPurger.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\PHPCRPurger\\\\:\\\\:\\\\$dm \\\\(Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManagerInterface\\\\|null\\\\) does not accept Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManager\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/PHPCRPurger.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\PHPCRPurger\\\\:\\\\:\\\\$dm has unknown class Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManagerInterface as its type\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/PHPCRPurger.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\$dm of method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\PHPCRPurgerInterface\\\\:\\\\:setDocumentManager\\\\(\\\\) has invalid type Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\DocumentManager\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Purger/PHPCRPurgerInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property Doctrine\\\\\\\\Persistence\\\\\\\\Mapping\\\\\\\\ClassMetadata\\\\<T of object\\\\>\\\\:\\\\:\\\\$name\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/ReferenceRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getReference\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/ReferenceRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getUnitOfWork\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/ReferenceRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method object\\\\:\\\\:getDocumentId\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/ReferenceRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method object\\\\:\\\\:getDocumentIdentifier\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/ReferenceRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManager not found\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/ReferenceRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$className of method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getClassMetadata\\\\(\\\\) expects class\\\\-string\\\\<object\\\\>, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/ReferenceRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\ReferenceRepository\\\\:\\\\:\\\\$identitiesByClass \\\\(array\\\\<class\\\\-string, array\\\\<string, mixed\\\\>\\\\>\\\\) does not accept array\\\\<string, array\\\\<string, mixed\\\\>\\\\>\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/ReferenceRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\ReferenceRepository\\\\:\\\\:\\\\$referencesByClass \\\\(array\\\\<class\\\\-string, array\\\\<string, object\\\\>\\\\>\\\\) does not accept array\\\\<string, array\\\\<string, object\\\\>\\\\>\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/ReferenceRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Unable to resolve the template type T in call to method Doctrine\\\\\\\\Persistence\\\\\\\\ObjectManager\\\\:\\\\:getClassMetadata\\\\(\\\\)$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/ReferenceRepository.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Sorter\\\\\\\\TopologicalSorter\\\\:\\\\:addNode\\\\(\\\\) has parameter \\\\$node with generic class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata but does not specify its types\\\\: T$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sorter/TopologicalSorter.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Sorter\\\\\\\\TopologicalSorter\\\\:\\\\:sort\\\\(\\\\) return type with generic class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata does not specify its types\\\\: T$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sorter/TopologicalSorter.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Sorter\\\\\\\\TopologicalSorter\\\\:\\\\:\\\\$sortedNodeList with generic class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata does not specify its types\\\\: T$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sorter/TopologicalSorter.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Sorter\\\\\\\\Vertex\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$value with generic class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata but does not specify its types\\\\: T$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sorter/Vertex.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Sorter\\\\\\\\Vertex\\\\:\\\\:\\\\$value with generic class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata does not specify its types\\\\: T$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Sorter/Vertex.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Tests\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\FixtureWithUnexistentDependency\\\\:\\\\:getDependencies\\\\(\\\\) should return array\\\\<class\\\\-string\\\\<Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\FixtureInterface\\\\>\\\\> but returns array\\\\<int, string\\\\>\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Common/DataFixtures/DependentFixtureTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to method expects\\\\(\\\\) on an unknown class Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManager\\\\.$#\"\n\t\t\tcount: 5\n\t\t\tpath: tests/Common/DataFixtures/Executor/PHPCRExecutorTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Tests\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Executor\\\\\\\\PHPCRExecutorTest\\\\:\\\\:getDocumentManager\\\\(\\\\) has invalid return type Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManager\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Common/DataFixtures/Executor/PHPCRExecutorTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$dm of class Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Executor\\\\\\\\PHPCRExecutor constructor expects Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManagerInterface, Doctrine\\\\\\\\ODM\\\\\\\\PHPCR\\\\\\\\DocumentManager&PHPUnit\\\\\\\\Framework\\\\\\\\MockObject\\\\\\\\MockObject given\\\\.$#\"\n\t\t\tcount: 5\n\t\t\tpath: tests/Common/DataFixtures/Executor/PHPCRExecutorTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#2 \\\\$purger of class Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Executor\\\\\\\\PHPCRExecutor constructor expects Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\PHPCRPurger\\\\|null, Doctrine\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\Purger\\\\\\\\PHPCRPurgerInterface&PHPUnit\\\\\\\\Framework\\\\\\\\MockObject\\\\\\\\MockObject given\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: tests/Common/DataFixtures/Executor/PHPCRExecutorTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Doctrine\\\\\\\\ODM\\\\\\\\MongoDB\\\\\\\\DocumentManager\\\\:\\\\:getConnection\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Common/DataFixtures/Purger/MongoDBPurgerTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$name of class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata constructor expects class\\\\-string\\\\<1\\\\>, string given\\\\.$#\"\n\t\t\tcount: 6\n\t\t\tpath: tests/Common/DataFixtures/Sorter/TopologicalSorterTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$name of class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata constructor expects class\\\\-string\\\\<2\\\\>, string given\\\\.$#\"\n\t\t\tcount: 5\n\t\t\tpath: tests/Common/DataFixtures/Sorter/TopologicalSorterTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$name of class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata constructor expects class\\\\-string\\\\<3\\\\>, string given\\\\.$#\"\n\t\t\tcount: 5\n\t\t\tpath: tests/Common/DataFixtures/Sorter/TopologicalSorterTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$name of class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata constructor expects class\\\\-string\\\\<4\\\\>, string given\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: tests/Common/DataFixtures/Sorter/TopologicalSorterTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$name of class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata constructor expects class\\\\-string\\\\<5\\\\>, string given\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: tests/Common/DataFixtures/Sorter/TopologicalSorterTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$name of class Doctrine\\\\\\\\ORM\\\\\\\\Mapping\\\\\\\\ClassMetadata constructor expects class\\\\-string\\\\<\\\\\\\\Sample\\\\\\\\Entity\\\\>, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Common/DataFixtures/Sorter/VertexTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Tests\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\TestEntity\\\\\\\\Quoted\\\\:\\\\:getSelects\\\\(\\\\) return type with generic interface Doctrine\\\\\\\\Common\\\\\\\\Collections\\\\\\\\Collection does not specify its types\\\\: TKey, T$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Common/DataFixtures/TestEntity/Quoted.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Tests\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\TestEntity\\\\\\\\Quoted\\\\:\\\\:setSelects\\\\(\\\\) has parameter \\\\$selects with generic interface Doctrine\\\\\\\\Common\\\\\\\\Collections\\\\\\\\Collection but does not specify its types\\\\: TKey, T$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Common/DataFixtures/TestEntity/Quoted.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Doctrine\\\\\\\\Tests\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\TestEntity\\\\\\\\Quoted\\\\:\\\\:\\\\$selects with generic interface Doctrine\\\\\\\\Common\\\\\\\\Collections\\\\\\\\Collection does not specify its types\\\\: TKey, T$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Common/DataFixtures/TestEntity/Quoted.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Doctrine\\\\\\\\Tests\\\\\\\\Common\\\\\\\\DataFixtures\\\\\\\\TestValueObjects\\\\\\\\Uuid\\\\:\\\\:__unserialize\\\\(\\\\) has parameter \\\\$data with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: tests/Common/DataFixtures/TestValueObjects/Uuid.php\n"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.1962890625,
          "content": "parameters:\n    phpVersion: 80200\n    level: 7\n    paths:\n        - src\n        - tests\n    excludePaths:\n        - tests/Mock/ForwardCompatibleEntityManager.php\n\nincludes:\n    - phpstan-baseline.neon\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.60546875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n         colors=\"true\"\n         beStrictAboutOutputDuringTests=\"true\"\n         beStrictAboutTodoAnnotatedTests=\"true\"\n         bootstrap=\"vendor/autoload.php\"\n>\n    <testsuites>\n        <testsuite name=\"Doctrine Data Fixtures Test Suite\">\n            <directory>./tests</directory>\n        </testsuite>\n    </testsuites>\n\n    <coverage>\n        <include>\n            <directory>./src</directory>\n        </include>\n    </coverage>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}