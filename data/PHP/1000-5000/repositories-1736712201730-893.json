{
  "metadata": {
    "timestamp": 1736712201730,
    "page": 893,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Jean85/pretty-package-versions",
      "stars": 1276,
      "defaultBranch": "2.x",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3291015625,
          "content": "* text=auto eol=lf\n\n.github/ export-ignore\n.gitattributes export-ignore\n.gitignore export-ignore\n.php-cs-fixer.dist.php export-ignore\nCHANGELOG.md export-ignore\ncodecov.yml export-ignore\nMakefile export-ignore\nphpstan.neon export-ignore\nphpunit.xml.dist export-ignore\npsalm.xml export-ignore\nREADME.md export-ignore\ntests/ export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0576171875,
          "content": ".php-cs-fixer.php\ncomposer.lock\nphpunit.xml\nvendor\n*.cache\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 3.5830078125,
          "content": "<?php\n\n$config = new PhpCsFixer\\Config('default');\n$config->setRiskyAllowed(true);\n$config->setRules([\n    '@PSR2' => true,\n    'align_multiline_comment' => true,\n    'array_indentation' => true,\n    'array_syntax' => [\n        'syntax' => 'short',\n    ],\n    'binary_operator_spaces' => [\n        'operators' => ['=' => null, '=>' => null],\n    ],\n    'blank_line_after_namespace' => true,\n    'blank_line_after_opening_tag' => true,\n    'blank_line_before_statement' => [\n        'statements' => [\n            'return',\n        ],\n    ],\n    'cast_spaces' => [\n        'space' => 'single',\n    ],\n    'class_attributes_separation' => [\n        'elements' => [\n            'method' => 'one', \n            'property' => 'one',\n        ],\n    ],\n    'compact_nullable_typehint' => true,\n    'concat_space' => [\n        'spacing' => 'one',\n    ],\n    'declare_equal_normalize' => true,\n    'declare_strict_types' => true,\n    'function_typehint_space' => true,\n    'include' => true,\n    'increment_style' => ['style' => 'pre'],\n    'indentation_type' => true,\n    'lowercase_cast' => true,\n    'method_chaining_indentation' => true,\n    'multiline_comment_opening_closing' => true,\n    'native_function_casing' => true,\n    'new_with_braces' => true,\n    'no_blank_lines_after_phpdoc' => true,\n    'no_empty_comment' => true,\n    'no_empty_phpdoc' => true,\n    'no_empty_statement' => true,\n    'no_extra_blank_lines' => [\n        'tokens' => [\n            'curly_brace_block',\n            'extra',\n            'parenthesis_brace_block',\n            'square_brace_block',\n            'throw',\n            'use',\n        ],\n    ],\n    'no_leading_import_slash' => true,\n    'no_leading_namespace_whitespace' => true,\n    'no_mixed_echo_print' => [\n        'use' => 'echo',\n    ],\n    'no_multiline_whitespace_around_double_arrow' => true,\n    'no_short_bool_cast' => true,\n    'no_singleline_whitespace_before_semicolons' => true,\n    'no_spaces_around_offset' => true,\n    'no_superfluous_phpdoc_tags' => [\n        'allow_mixed' => true,\n    ],\n    'no_trailing_comma_in_list_call' => true,\n    'no_trailing_comma_in_singleline_array' => true,\n    'no_unneeded_control_parentheses' => true,\n    'no_unused_imports' => true,\n    'no_whitespace_before_comma_in_array' => true,\n    'no_whitespace_in_blank_line' => true,\n    'not_operator_with_successor_space' => true,\n    'normalize_index_brace' => true,\n    'object_operator_without_whitespace' => true,\n    'ordered_imports' => true,\n    'phpdoc_align' => false,\n    'phpdoc_annotation_without_dot' => true,\n    'phpdoc_indent' => true,\n    'phpdoc_no_package' => true,\n    'phpdoc_no_useless_inheritdoc' => true,\n    'phpdoc_order' => true,\n    'phpdoc_scalar' => true,\n    'phpdoc_separation' => true,\n    'phpdoc_single_line_var_spacing' => true,\n    'phpdoc_to_comment' => true,\n    'phpdoc_trim' => true,\n    'phpdoc_trim_consecutive_blank_line_separation' => true,\n    'phpdoc_types' => true,\n    'phpdoc_var_without_name' => true,\n    'psr_autoloading' => true,\n    'return_type_declaration' => true,\n    'short_scalar_cast' => true,\n    'single_blank_line_before_namespace' => true,\n    'single_class_element_per_statement' => true,\n    'single_quote' => true,\n    'space_after_semicolon' => true,\n    'standardize_not_equals' => true,\n    'ternary_operator_spaces' => true,\n    'ternary_to_null_coalescing' => true,\n    'trailing_comma_in_multiline' => ['elements' => ['arrays']],\n    'trim_array_spaces' => true,\n    'unary_operator_spaces' => true,\n    'whitespace_after_comma_in_array' => true,\n]);\n\n$finder = PhpCsFixer\\Finder::create();\n$finder->in(__DIR__);\n$config->setFinder($finder);\n\nreturn $config;\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.87109375,
          "content": "# Changes in jean85/pretty-package-versions\n\nAll notable changes of the `jean85/pretty-package-versions` package are documented in this file using the \n[Keep a CHANGELOG](http://keepachangelog.com/) principles.\n\n## [2.1.0] - 2024-11-18\n### Added\n* Add CI tests for PHP 8.4\n### Changed\n* Bump minimum PHP version to 7.4\n* Bump minimum Composer version to 2.1.0\n\n## [2.0.6] - 2024-03-08\n### Added\n* PHP 8.2 and 8.3 support verified\n* Optimized package distribution via .gitattributes (#44 #46, thanks @villfa @VincentLanglet)\n\n## [2.0.5] - 2021-10-08\n### Added\n* PHP 8.1 support verified\n* Added the `Version::NO_VERSION_TEXT` constant to retrieve the string used when no version is available (#41)\n### Fixed\n* Handle with `Version::NO_VERSION_TEXT` constant when no version is available due to replaced package (#41)\n\n## [2.0.4] - 2021-05-26\n### Fixed\n * Handle deprecation of `InstalledVersions::getRawData()` from Composer 2.0.14 (#39, thanks @BramRoets)\n\n## [2.0.3] - 2021-02-22\n### Added\n * Added the `Version::NO_REFERENCE_TEXT` constant to retrieve the string used when no reference is available (#38, thanks @DeyV)\n\n## [2.0.2] - 2021-02-03\n### Changed\n * Retrieve root package information without indirection (a1cfeec)\n### Fixed\n * Handle `null` as reference when constructing `Version` (#36)\n\n## [2.0.1] - 2021-01-28\nThis small patch handles replaced and provided packages, so that consumers of this library can handle bad requests gracefully.\n\n### Added\n * Add `VersionMissingExceptionInterface`, and two exceptions implementing it: `ProvidedPackageException` and `ReplacedPackageException` \n### Fixed\n * Throw explicit `ProvidedPackageException` when asking for the version of a package which is provided (was `\\TypeError` before)\n * Throw explicit `ReplacedPackageException` when asking for the version of a package which is replaced (was `\\TypeError` before)\n\n## [2.0.0] - 2021-01-14\nThis release is aimed to become a bridge for native Composer 2 support. The BC breaks are minimal; if you're using it in a library, you're encouraged to require it  with `^1.5 || ^2.0`, so that your end users will not be constrained to use a specific Composer version. \n\n### Added\n * `Version` methods added: `getReference`, `getShortReference`, `getVersionWithShortReference` (see table below)\n### Changed\n * Use Composer 2 API directly to retrieve versions\n * `Version` methods deprecated; this is a simple rename (`commit` to `reference`), to better reflect the meaning of Composer API data; the old methods are preserved but deprecated to reduce breaking changes:\n\n| New method                                | Old, deprecated method                 |\n|-------------------------------------------|----------------------------------------|\n| `Version::getReference()`                 | `Version::getCommitHash()`             | \n| `Version::getShortReference()`            | `Version::getShortCommitHash()`        | \n| `Version::getVersionWithShortReference()` | `Version::getVersionWithShortCommit()` |\n\n### Removed\n * Drop PHP 7.0 support\n * Drop Composer 1 support\n * Drop dependencies\n * [BC BREAK] Constant `PrettyVersions::SHORT_COMMIT_LENGTH` removed\n * [BC BREAK] Constant `Version::SHORT_COMMIT_LENGTH` made private\n * [BC BREAK] `Version` constructor changed arguments: second argument `string $version` has been split into `string $prettyVersion, string $reference`\n\n## [1.6.0] - 2021-02-04\n### Added\n * Add forward compatibility layer for newer methods in 2.0 (see the [2.0 changelog](https://github.com/Jean85/pretty-package-versions/blob/2.x/CHANGELOG.md#200---2021-01-14))\n\n## [1.5.1] - 2020-09-14\n### Added\n * PHP 8 support (#28)\n\n## [1.5] - 2020-06-23\nThis release is intended to change the future release plan of this package. Please require the package with `^1.5 || ^2.0` to ensure full functionalities and future Composer 2 compatibility.\n\n### Added\n * Add `PrettyVersions::getRootPackageName` as a compatibility layer to be used in place of `PackageVersions\\Versions::ROOT_PACKAGE_NAME`, which would be a transient dependency (#23)\n * Add `PrettyVersions::getRootPackageVersion`, a shortcut to `PrettyVersions::getVersion(PrettyVersions::getRootPackageName())` (#23)\n\n### Changed\n * Roll back to use `composer/package-versions-deprecated` as in 1.3 (see #21 & #22)\n\n## [1.4] - 2020-04-28\n### Removed\n * Drop support for Composer 1\n * Drop dependency on any package\n * Drop Scrutinizer, use Codecov for test coverage\n\n## [1.3] - 2020-04-24\n### Changed\n * Switched dependency from `ocramius/package-versions` to its fork `composer/package-versions-deprecated`, to ensure compatibility with both PHP 7.* and Composer 2 (see #13, thanks @dereuromark and @seldaek)\n\n## [1.2] - 2018-06-13\n### Added\n * Add `Version::__getShortCommitHash()` method (see #8, thanks @emodric)\n\n## [1.1] - 2018-01-21\n### Added\n * Add `Version::__toString()` method (see #5)\n\n## [1.0.3] - 2017-11-30\n### Changed\n * Require at least `ocramius/package-versions` 1.2 to fix root package version (see #3)\n### Known issues\n * Use this package with Composer >= 1.5.3 to fix root package version when in version-branch (see #4)\n\n## [1.0.2] - 2017-09-06\n### Added\n * Add PHP 7.2 to the build matrix for official support\n### Changed\n * Require at least `ocramius/package-versions` 1.1.3 to avoid issues when removing the package (see [this issue](https://github.com/Ocramius/PackageVersions/issues/41))\n\n## [1.0.1] - 2017-07-06\n### Changed\n * Make the package lightweight thanks to the `.gitattributes` file (#1)\n\n## [1.0] - 2017-07-06\nFirst release\n### Changed\n * `Jean85\\PrettyVersions` wraps the `PackageVersions\\Versions` class and returns a `Jean85\\Version` object\n * The `Jean85\\Version` has these methods available:\n    * `public function getPrettyVersion(): string`\n    * `public function getFullVersion(): string`\n    * `public function getVersionWithShortCommit(): string`\n    * `public function getPackageName(): string`\n    * `public function getShortVersion(): string`\n    * `public function getCommitHash(): string`\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0458984375,
          "content": "MIT License\n\nCopyright (c) 2017 Alessandro Lai\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.2685546875,
          "content": "pre-commit-check: composer cs phpstan psalm test\n\ncomposer:\n\tcomposer install\n\ncs:\n\tvendor/bin/php-cs-fixer fix --verbose\n\ncs-dry-run:\n\tvendor/bin/php-cs-fixer fix --verbose --dry-run\n\nphpstan:\n\tvendor/bin/phpstan analyze\n\npsalm:\n\tvendor/bin/psalm\n\ntest:\n\tvendor/bin/phpunit\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.68359375,
          "content": "[![SWUbanner](https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner2-direct.svg)](https://vshymanskyy.github.io/StandWithUkraine)\n\n# jean85/pretty-package-versions\n\n![PHP Version](https://img.shields.io/badge/php-%5E7.1%7C%5E8.0-blue)\n[![Stable release][Last stable image]][Packagist link]\n[![Total Downloads](https://poser.pugx.org/jean85/pretty-package-versions/downloads)](//packagist.org/packages/jean85/pretty-package-versions)\n\n[![Build status](https://img.shields.io/github/actions/workflow/status/Jean85/pretty-package-versions/tests.yaml?branch=2.x)](https://github.com/Jean85/pretty-package-versions/actions)\n[![Codecov](https://codecov.io/gh/Jean85/pretty-package-versions/branch/master/graph/badge.svg)](https://codecov.io/gh/Jean85/pretty-package-versions)\n\nA small, independent wrapper to get pretty versions strings of your dependencies.\n\n## Installation\n* If you use this package in a library, you're encouraged to require it with a constraint of `^1.5 || ^2.0`, to obtain all the functionalities without constraining your end users to upgrade immediately to Composer 2.\n\nTo install, use Composer:\n\n * from CLI: `composer require 'jean85/pretty-package-versions:^1.5 || ^2.0'`\n * or, directly in your `composer.json`:\n\n```json\n{\n    \"require\": {\n        \"jean85/pretty-package-versions\": \"^1.5 || ^2.0\"\n    }\n}\n```\n## Compatibility\nThis package was born as a thin wrapper for [ocramius/package-versions](https://packagist.org/packages/ocramius/package-versions); with the advent of Composer 2, this is no longer needed, since we can use directly `Composer\\InstalledVersions`. This led to this version compatibility chart:\n\n|`pretty-package-versions`| Composer         | Dependency used\n|-------------------------|------------------|-----------------|\n| Up to 1.2               | 1.x only         | `ocramius/package-versions`\n| 1.3                     | Both 1.x and 2.x | `composer/package-versions-deprecated`, fork of `ocramius/package-versions` |\n| 1.4                     | 2.x only         | None            |\n| 1.5+                    | Both 1.x and 2.x | `composer/package-versions-deprecated`, fork of `ocramius/package-versions` |\n| 2.0                     | 2.x only         | None            |\n\nThis means that, with this package, you can obtain pretty versions without tying your user to any specific Composer version, with a smooth upgrade path. The release of 1.4 was reverted due to some discussion in [#21](https://github.com/Jean85/pretty-package-versions/issues/21) and related issues.\n\n## Usage\nThis package should be used with a single class, `Jean85\\PrettyVersions`: it provides a single method that returns a `Jean85\\Version` object for the requested package, like in this example:\n\n```php\nuse Jean85\\PrettyVersions;\n\n$version = PrettyVersions::getVersion('phpunit/phpunit');\n$version->getPrettyVersion(); // '6.0.0'\n$version->getShortVersion(); // '6.0.0'\n$version->getVersionWithShortReference(); // '6.0.0@fa5711'\n\n$version = PrettyVersions::getVersion('roave/security-advisories');\n$version->getPrettyVersion(); // 'dev-master@7cd88c8'\n$version->getShortVersion(); // 'dev-master'\n$version->getVersionWithShortReference(); // 'dev-master@7cd88c8'\n```\n\nThe `Version` class has also a `__toString()` method implemented, so it can be easily cast to a string; the result would be the same as calling the `getPrettyVersion()` method.\n\n### Available methods\n\nThe `Jean85\\Version` class has these public methods available:\n\n * `getPrettyVersion(): string`: if the requested package is a tagged version, it will return just the short version; if not, it will output the same result as `getVersionWithShortCommit()`\n\n * `getShortVersion(): string`: it will return just the version of the package (i.e. `6.0.0`, `v.1.7.0`, `99999-dev` etc...)\n\n* `getReference(): string` will return the reference of the installed package, generally the full Git commit hash\n\n* `getShortReference(): string` will return the shortened version of the reference (i.e. `fa5711`)\n\n * `getVersionWithShortReference(): string`: it will return the version of the package, followed by the short version of the reference (i.e. `6.0.0@fa5711`)\n\n * `getPackageName(): string` will return the original package name\n\n * `getFullVersion(): string` will return the same value as `PackageVersions\\Versions::getVersion()` \n\n * `__toString(): string` will return the same as `getPrettyVersion()`\n\n### Since 1.5\nSince the 1.5 release, there are two additional methods available:\n\n * `PrettyVersions::getRootPackageName` returns the package name of the current (root) project, so basically the `name` property value in your `composer.json`; it is a compatibility layer to be used in place of `PackageVersions\\Versions::ROOT_PACKAGE_NAME`, which would be a transient dependency and it's not guaranteed to be present\n * `PrettyVersions::getRootPackageVersion`, which is a shortcut to `PrettyVersions::getVersion(PrettyVersions::getRootPackageName())`\n\n### Before 2.0\nThe methods with `reference` in the name were introduced in the 2.0 release, to better reflect the meaning of the data retrieved from Composer 2 API. The behavior is the same as the old methods, which are still present but deprecated:\n\n| New method                                | Old, deprecated method                 |\n|-------------------------------------------|----------------------------------------|\n| `Version::getReference()`                 | `Version::getCommitHash()`             |\n| `Version::getShortReference()`            | `Version::getShortCommitHash()`        |\n| `Version::getVersionWithShortReference()` | `Version::getVersionWithShortCommit()` |\n\n[Last stable image]: https://poser.pugx.org/Jean85/pretty-package-versions/version.svg\n[Packagist link]: https://packagist.org/packages/Jean85/pretty-package-versions\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.0146484375,
          "content": "comment: false\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.1611328125,
          "content": "{\n    \"name\": \"jean85/pretty-package-versions\",\n    \"description\": \"A library to get pretty versions strings of installed dependencies\",\n    \"type\": \"library\",\n    \"require\": {\n        \"php\": \"^7.4|^8.0\",\n        \"composer-runtime-api\": \"^2.1.0\"\n    },\n    \"require-dev\": {\n        \"friendsofphp/php-cs-fixer\": \"^3.2\",\n        \"jean85/composer-provided-replaced-stub-package\": \"^1.0\",\n        \"phpstan/phpstan\": \"^1.4\",\n        \"phpunit/phpunit\": \"^7.5|^8.5|^9.6\",\n        \"vimeo/psalm\": \"^4.3 || ^5.0\"\n    },\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Alessandro Lai\",\n            \"email\": \"alessandro.lai85@gmail.com\"\n        }\n    ],\n    \"support\": {\n        \"issues\": \"https://github.com/Jean85/pretty-package-versions/issues\"\n    },\n    \"keywords\": [\n        \"package\",\n        \"versions\",\n        \"composer\",\n        \"release\"\n    ],\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"1.x-dev\"\n        }\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Jean85\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Tests\\\\\": \"tests\"\n        }\n    }\n}\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.06640625,
          "content": "parameters:\n    level: 8\n    paths:\n        - src/\n        - tests/\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.81640625,
          "content": "<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n         backupGlobals=\"false\"\n         colors=\"true\"\n         bootstrap=\"vendor/autoload.php\"\n        >\n    <php>\n        <ini name=\"error_reporting\" value=\"-1\"/>\n        <ini name=\"intl.default_locale\" value=\"en\"/>\n        <ini name=\"intl.error_level\" value=\"0\"/>\n        <ini name=\"memory_limit\" value=\"-1\"/>\n    </php>\n\n    <testsuites>\n        <testsuite name=\"unit\">\n            <directory>./tests/Unit/</directory>\n        </testsuite>\n        <testsuite name=\"functional\">\n            <directory>./tests/Functional/</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist>\n            <directory>./src/</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "psalm.xml",
          "type": "blob",
          "size": 0.4677734375,
          "content": "<?xml version=\"1.0\"?>\n<psalm\n    errorLevel=\"4\"\n    resolveFromConfigFile=\"true\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"https://getpsalm.org/schema/config\"\n    xsi:schemaLocation=\"https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd\"\n>\n    <projectFiles>\n        <directory name=\"src\" />\n        <directory name=\"tests\" />\n        <ignoreFiles>\n            <directory name=\"vendor\" />\n        </ignoreFiles>\n    </projectFiles>\n</psalm>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}