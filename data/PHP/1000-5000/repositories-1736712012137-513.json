{
  "metadata": {
    "timestamp": 1736712012137,
    "page": 513,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nelmio/NelmioCorsBundle",
      "stars": 1892,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.09765625,
          "content": ".* export-ignore\nTests export-ignore\nphpunit.xml.dist export-ignore\nphpstan.neon.dist export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0439453125,
          "content": "vendor/\r\ncomposer.lock\r\n.phpunit.result.cache"
        },
        {
          "name": ".symfony.bundle.yaml",
          "type": "blob",
          "size": 0.1416015625,
          "content": "branches:\n    - master\nmaintained_branches:\n    - master\ncurrent_branch: master\ndev_branch: master\ndoc_dir: Resources/doc/\ndev_branch_alias: 2.x\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.0673828125,
          "content": "Newer changelog entries can be found in the [GitHub Releases](https://github.com/nelmio/NelmioCorsBundle/releases)\n\n### 2.3.0 (2023-02-15)\n\n  * Downgraded `CacheableResponseVaryListener`'s priority from 0 to -10 to ensure it runs after FrameworkExtraBundle listeners have set their cache headers (#179)\n  * Added optional logging support if you inject a Logger into the CorsListener you can get debug info about the whole CORS decision process (#173)\n  * Added support for setting `expose_headers` to a wildcard `'*'` which exposes all headers, this works as long as allow_credentials is not enabled as per the spec (#132)\n  * Added `skip_same_as_origin` flag (default to true which is the old behavior) to allow opting out of skipping the CORS headers in the response if the Origin matches the application's hostname (#178)\n  * Fixed ProviderMock having an invalid return type (#169)\n  * Dropped support for Symfony 4.3 and 5.0 to 5.3\n\n### 2.2.0 (2021-12-01)\n\n  * Added support for Symfony 6\n\n### 2.1.1 (2021-04-20)\n\n  * Fixed response for unauthorized headers containing a reflected XSS (https://github.com/nelmio/NelmioCorsBundle/pull/163)\n\n### 2.1.0 (2020-07-22)\n\n  * Added `Vary: Origin` header to cacheable responses to make sure proxies cache them correctly\n\n### 2.0.1 (2019-11-15)\n\n  * Reverted CorsListener priority change as it was interfering with normal operations. The priority is back at 250.\n\n### 2.0.0 (2019-11-12)\n\n  * BC Break: Downgraded CorsListener priority from 250 to 28, this should not affect anyone but could be a source in case of strange bugs\n  * BC Break: Removed support for Symfony <4.3\n  * BC Break: Removed support for PHP <7.1\n  * Added support for Symfony 5\n  * Added support for configuration via env vars\n  * Changed the code to avoid mutating the EventDispatcher at runtime\n  * Changed the code to avoid returning `Access-Control-Allow-Origin: null` headers to mark blocked requests\n\n### 1.5.6 (2019-06-17)\n\n  * Fixed preflight request handler hijacking regular non-CORS OPTIONS requests.\n\n### 1.5.5 (2019-02-27)\n\n  * Compatibility with Symfony 4.1\n  * Fixed preflight responses to always include `Origin` in the `Vary` HTTP header\n\n### 1.5.4 (2017-12-11)\n\n  * Compatibility with Symfony 4\n\n### 1.5.3 (2017-04-24)\n\n  * Fixed regression in 1.5.2\n\n### 1.5.2 (2017-04-21)\n\n  * Fixed bundle initialization in case paths is empty\n\n### 1.5.1 (2017-01-22)\n\n  * Fixed `forced_allow_origin_value` to always set the header regardless of CORS, so that requests can properly be cached even if they are not always accessed via CORS\n\n### 1.5.0 (2016-12-30)\n\n  * Added an `forced_allow_origin_value` option to force the value that is returned, in case you cache responses and can not have the allowed origin automatically set to the Origin header\n  * Fixed `Access-Control-Allow-Headers` being sent even when it was empty\n  * Fixed listener priority down to 250 (This **may be BREAKING** depending on what you do with your own listeners, but should be fine in most cases, just watch out).\n\n### 1.4.1 (2015-12-09)\n\n  * Fixed requirements to allow Symfony3\n\n### 1.4.0 (2015-01-13)\n\n  * Added an `origin_regex` option to allow defining origins based on regular expressions\n\n### 1.3.3 (2014-12-10)\n\n  * Fixed a security regression in 1.3.2 that allowed GET requests to be executed from any domain\n\n### 1.3.2 (2014-09-18)\n\n  * Removed 403 responses on non-OPTIONS requests that have an invalid origin header\n\n### 1.3.1 (2014-07-21)\n\n  * Fixed path key normalization to allow dashes in paths\n  * Fixed HTTP method case folding to support clients that send non-uppercased method names\n\n### 1.3.0 (2014-02-06)\n\n  * Added support for host-based configuration of the bundle\n\n### 1.2.0 (2013-10-29)\n\n  * Bumped symfony dependency to 2.1.0+\n  * Fixed invalid trigger of the CORS check when the Origin header is present on same-host requests\n  * Fixed fatal error when `allow_methods` was not configured for a given path\n\n### 1.1.1 (2013-08-14)\n\n  * Fixed issue when `allow_origin` is set to `*` and `allow_credentials` to `true`.\n\n### 1.1.0 (2013-07-29)\n\n  * Added ability to set a wildcard on accept_headers\n\n### 1.0.0 (2013-01-07)\n\n  * Initial release\n"
        },
        {
          "name": "DependencyInjection",
          "type": "tree",
          "content": null
        },
        {
          "name": "EventListener",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0244140625,
          "content": "Copyright (c) 2011 Nelmio\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "NelmioCorsBundle.php",
          "type": "blob",
          "size": 0.6552734375,
          "content": "<?php\n\n/*\n * This file is part of the NelmioCorsBundle.\n *\n * (c) Nelmio <hello@nelm.io>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Nelmio\\CorsBundle;\n\nuse Symfony\\Component\\DependencyInjection\\ContainerBuilder;\nuse Symfony\\Component\\HttpKernel\\Bundle\\Bundle;\n\n/**\n * @author Jordi Boggiano <j.boggiano@seld.be>\n */\nclass NelmioCorsBundle extends Bundle\n{\n    public function build(ContainerBuilder $container): void\n    {\n        parent::build($container);\n        $container->addCompilerPass(new DependencyInjection\\Compiler\\CorsConfigurationProviderPass());\n    }\n}\n"
        },
        {
          "name": "Options",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.10546875,
          "content": "# NelmioCorsBundle\n\n## About\n\nThe NelmioCorsBundle allows you to send [Cross-Origin Resource Sharing](http://enable-cors.org/)\nheaders with ACL-style per-URL configuration.\n\n## Features\n\n* Handles CORS preflight OPTIONS requests\n* Adds CORS headers to your responses\n* Configured at the PHP/application level. This is convenient but it also means\n  that any request serving static files and not going through Symfony will not\n  have the CORS headers added, so if you need to serve CORS for static files you\n  probably should rather configure these headers in your web server\n\n## Installation\n\nRequire the `nelmio/cors-bundle` package in your composer.json and update your dependencies:\n\n```bash\ncomposer require nelmio/cors-bundle\n```\n\nThe bundle should be automatically enabled by [Symfony Flex][1]. If you don't use\nFlex, you'll need to enable it manually as explained [in the docs][2].\n\n## Usage\n\nSee [the documentation][2] for usage instructions.\n\n## License\n\nReleased under the MIT License, see LICENSE.\n\n[1]: https://symfony.com/doc/current/setup/flex.html\n[2]: https://symfony.com/bundles/NelmioCorsBundle/current/index.html\n"
        },
        {
          "name": "Resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.0927734375,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nPlease report privately at j.boggiano@seld.be\n"
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.16796875,
          "content": "{\n    \"name\": \"nelmio/cors-bundle\",\n    \"description\": \"Adds CORS (Cross-Origin Resource Sharing) headers support in your Symfony application\",\n    \"keywords\": [\"cors\", \"crossdomain\", \"api\"],\n    \"type\": \"symfony-bundle\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Nelmio\",\n            \"homepage\": \"http://nelm.io\"\n        },\n        {\n            \"name\": \"Symfony Community\",\n            \"homepage\": \"https://github.com/nelmio/NelmioCorsBundle/contributors\"\n        }\n    ],\n    \"require\": {\n        \"symfony/framework-bundle\": \"^5.4 || ^6.0 || ^7.0\",\n        \"psr/log\": \"^1.0 || ^2.0 || ^3.0\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^8\",\n        \"phpstan/phpstan\": \"^1.11.5\",\n        \"phpstan/phpstan-phpunit\": \"^1.4\",\n        \"phpstan/phpstan-deprecation-rules\": \"^1.2.0\",\n        \"phpstan/phpstan-symfony\": \"^1.4.4\"\n    },\n    \"autoload\": {\n        \"psr-4\": { \"Nelmio\\\\CorsBundle\\\\\": \"\" },\n        \"exclude-from-classmap\": [\"/Tests/\"]\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"2.x-dev\"\n        }\n    },\n    \"scripts\": {\n        \"test\": \"@php vendor/bin/phpunit\",\n        \"phpstan\": \"@php vendor/bin/phpstan\"\n    }\n}\n"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.455078125,
          "content": "parameters:\n    level: 8\n    paths:\n        - .\n    excludePaths:\n        - vendor/\n    ignoreErrors:\n\n    reportUnmatchedIgnoredErrors: true\n\n    bootstrapFiles:\n        - vendor/autoload.php\n\nincludes:\n    - vendor/phpstan/phpstan-deprecation-rules/rules.neon\n    - vendor/phpstan/phpstan-symfony/extension.neon\n    - vendor/phpstan/phpstan-symfony/rules.neon\n    - vendor/phpstan/phpstan/conf/bleedingEdge.neon\n    - vendor/phpstan/phpstan-phpunit/extension.neon\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 1.0673828125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit\n    backupGlobals               = \"false\"\n    backupStaticAttributes      = \"false\"\n    colors                      = \"true\"\n    convertErrorsToExceptions   = \"true\"\n    convertNoticesToExceptions  = \"true\"\n    convertWarningsToExceptions = \"true\"\n    processIsolation            = \"false\"\n    stopOnFailure               = \"false\"\n    bootstrap                   = \"Tests/bootstrap.php\">\n\n    <php>\n        <ini name=\"error_reporting\" value=\"-1\" />\n        <server name=\"SHELL_VERBOSITY\" value=\"-1\" />\n        <server name=\"SYMFONY_DEPRECATIONS_HELPER\" value=\"max[direct]=0\" />\n    </php>\n\n    <testsuites>\n        <testsuite name=\"NelmioCorsBundle Test Suite\">\n            <directory>Tests</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist>\n            <directory>.</directory>\n            <exclude>\n                <directory>Resources</directory>\n                <directory>Tests</directory>\n                <directory>vendor</directory>\n            </exclude>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        }
      ]
    }
  ]
}