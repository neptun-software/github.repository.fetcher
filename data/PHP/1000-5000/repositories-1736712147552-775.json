{
  "metadata": {
    "timestamp": 1736712147552,
    "page": 775,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "spatie/eloquent-sortable",
      "stars": 1424,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.21484375,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.173828125,
          "content": ".idea\n.php_cs\n.php_cs.cache\n.phpunit.result.cache\nbuild\ncomposer.lock\ncoverage\ndocs\nphpunit.xml\npsalm.xml\ntestbench.yaml\nvendor\ncomposer.phar\ntests/_output/*\n.php-cs-fixer.cache\n"
        },
        {
          "name": ".php_cs.dist.php",
          "type": "blob",
          "size": 1.251953125,
          "content": "<?php\n\n$finder = Symfony\\Component\\Finder\\Finder::create()\n    ->in([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->name('*.php')\n    ->notName('*.blade.php')\n    ->ignoreDotFiles(true)\n    ->ignoreVCS(true);\n\nreturn (new PhpCsFixer\\Config())\n    ->setRules([\n        '@PSR12' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'ordered_imports' => ['sort_algorithm' => 'alpha'],\n        'no_unused_imports' => true,\n        'not_operator_with_successor_space' => true,\n        'trailing_comma_in_multiline' => true,\n        'phpdoc_scalar' => true,\n        'unary_operator_spaces' => true,\n        'binary_operator_spaces' => true,\n        'blank_line_before_statement' => [\n            'statements' => ['break', 'continue', 'declare', 'return', 'throw', 'try'],\n        ],\n        'phpdoc_single_line_var_spacing' => true,\n        'phpdoc_var_without_name' => true,\n        'class_attributes_separation' => [\n            'elements' => [\n                'method' => 'one',\n            ],\n        ],\n        'method_argument_space' => [\n            'on_multiline' => 'ensure_fully_multiline',\n            'keep_multiple_spaces_after_comma' => true,\n        ],\n        'single_trait_insert_per_statement' => true,\n    ])\n    ->setFinder($finder);\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.6943359375,
          "content": "# Changelog\n\nAll notable changes to `eloquent-sortable` will be documented in this file\n\n## 4.4.1 - 2024-12-23\n\n### What's Changed\n\n* Bump dependabot/fetch-metadata from 1.6.0 to 2.1.0 by @dependabot in https://github.com/spatie/eloquent-sortable/pull/176\n* Bump dependabot/fetch-metadata from 2.1.0 to 2.2.0 by @dependabot in https://github.com/spatie/eloquent-sortable/pull/181\n* Fix PHP 8.4 deprecation notice by @clarkewing in https://github.com/spatie/eloquent-sortable/pull/184\n\n### New Contributors\n\n* @clarkewing made their first contribution in https://github.com/spatie/eloquent-sortable/pull/184\n\n**Full Changelog**: https://github.com/spatie/eloquent-sortable/compare/4.4.0...4.4.1\n\n## 4.4.0 - 2024-06-04\n\n### What's Changed\n\n* Dispatch event after performing a sort by @chrispage1 in https://github.com/spatie/eloquent-sortable/pull/178\n\n### New Contributors\n\n* @chrispage1 made their first contribution in https://github.com/spatie/eloquent-sortable/pull/178\n\n**Full Changelog**: https://github.com/spatie/eloquent-sortable/compare/4.3.0...4.4.0\n\n## 4.3.0 - 2024-05-02\n\n### What's Changed\n\n* Use model's qualified key name for update queries by @JeremyDunn in https://github.com/spatie/eloquent-sortable/pull/175\n\n### New Contributors\n\n* @JeremyDunn made their first contribution in https://github.com/spatie/eloquent-sortable/pull/175\n\n**Full Changelog**: https://github.com/spatie/eloquent-sortable/compare/4.2.0...4.3.0\n\n## 4.2.0 - 2024-02-26\n\n### What's Changed\n\n* Bump stefanzweifel/git-auto-commit-action from 4 to 5 by @dependabot in https://github.com/spatie/eloquent-sortable/pull/162\n* Support laravel 11 by @mokhosh in https://github.com/spatie/eloquent-sortable/pull/171\n* bump min laravel 9 version to support ignore timestamps by @mokhosh in https://github.com/spatie/eloquent-sortable/pull/173\n\n**Full Changelog**: https://github.com/spatie/eloquent-sortable/compare/4.1.1...4.2.0\n\n## 4.1.1 - 2024-02-06\n\n### What's Changed\n\n* Fix typo in eloquent-sortable.php by @dissto in https://github.com/spatie/eloquent-sortable/pull/168\n* Add ignore timestamp by @mokhosh in https://github.com/spatie/eloquent-sortable/pull/169\n\n### New Contributors\n\n* @dissto made their first contribution in https://github.com/spatie/eloquent-sortable/pull/168\n* @mokhosh made their first contribution in https://github.com/spatie/eloquent-sortable/pull/169\n\n**Full Changelog**: https://github.com/spatie/eloquent-sortable/compare/4.1.0...4.1.1\n\n## 4.0.2 - 2023-01-23\n\n### What's Changed\n\n- Update readme about publishing config file by @patrickbrouwers in https://github.com/spatie/eloquent-sortable/pull/120\n- Add Dependabot Automation by @patinthehat in https://github.com/spatie/eloquent-sortable/pull/136\n- Bump actions/checkout from 2 to 3 by @dependabot in https://github.com/spatie/eloquent-sortable/pull/137\n- Add PHP 8.2 Support by @patinthehat in https://github.com/spatie/eloquent-sortable/pull/138\n- Laravel 10 support by @Okipa in https://github.com/spatie/eloquent-sortable/pull/142\n\n### New Contributors\n\n- @patrickbrouwers made their first contribution in https://github.com/spatie/eloquent-sortable/pull/120\n- @dependabot made their first contribution in https://github.com/spatie/eloquent-sortable/pull/137\n- @Okipa made their first contribution in https://github.com/spatie/eloquent-sortable/pull/142\n\n**Full Changelog**: https://github.com/spatie/eloquent-sortable/compare/4.0.1...4.0.2\n\n## 4.1.0 - 2023-01-24\n\n- add support for Laravel 10\n- drop support for Laravel 8\n- drop support for PHP 8.0\n\n## 4.0.1 - 2022-01-21\n\n- support Laravel 9\n\n## 4.0.0 - 2021-03-21\n\n- require PHP 8+\n- drop support for all PHP 7.x versions\n- use PHP 8 syntax\n\n## 3.11.0 - 2021-01-18\n\n- add methods to determine whether element is the last or first in order (#102)\n\n## 3.10.0 - 2020-11-25\n\n- add support for PHP 8.0\n- drop support for Laravel 5.8\n\n## 3.9.0 - 2020-09-16\n\n- add config file\n\n## 3.8.3 - 2020-09-08\n\n- add support for Laravel 8\n\n## 3.8.2 - 2020-07-08\n\n- reduce dependency tree (#89)\n\n## 3.8.1 - 2020-06-26\n\n- models don't always have an id as key, use `getKey` instead\n\n## 3.8.0 - 2020-03-02\n\n- add support for Laravel 7\n\n## 3.7.0 - 2019-09-04\n\n- add support for Laravel 6\n\n## 3.6.0 - 2019-04-01\n\n- allow `setNewOrder` to accept a custom sort column\n\n## 3.5.0 - 2019-02-27\n\n- drop support for L5.7 and below, PHP 7.1 and PHPUnit 7\n\n## 3.4.4 - 2019-02-27\n\n- add support for Laravel 5.8\n\n## 3.4.3 - 2018-08-24\n\n- add support for Laravel 5.7\n\n## 3.4.2 - 2018-02-08\n\n- add support for L5.6\n- drop support for anything lower that L5.5\n\n## 3.4.1\n\n- fix deps\n\n## 3.4.0\n\n- add compatibility with Laravel 5.5\n\n## 3.3.0 - 2017-04-16\n\n- add `buildSortQuery()`\n\n## 3.2.1 - 2017-01-23\n\n- release without changes. Made to kickstart Packagist.\n\n## 3.2.0 - 2017-01-23\n\n- add compatibility with Laravel 5.4\n\n## 3.1.0 - 2016-11-20\n\n- added support for `SoftDeletes`\n\n## 3.0.0 - 2016-10-22\n\n- removed the need for a service provider\n- some cleanup\n\n## 2.3.0 - 2016-10-19\n\n- added support for collections passed to `setNewOrder`\n\n## 2.2.0 - 2016-10-19\n\n- added `moveToStart`, `moveToEnd` and `swapOrder`\n\n## 2.1.1 - 2016-03-21\n\n- Fixed a bug in `moveOrderUp` (see #13)\n\n## 2.1.0\n\n- Added `moveOrderUp`- and `moveOrderDown`-methods\n\n## 2.0.1\n\n- Fixed typehinting on scope\n\n## 2.0.0\n\n- SortableInterface is now Sortable\n- Sortable is now SortableTrait\n- getHighestOrderNumber() now retrieves the highest existing order number (not a new one)\n- setHighestOrderNumber() no longer requires a Sortable object parameter\n- sort_when_creating option\n- Added shouldSortWhenCreating function\n- Added test coverage\n\n## 1.1.2\n\n- Removed typehinting on scope in interface.\n\n## 1.1.1 (non-functional version!)\n\n- Removed typehinting on scope\n\n## 1.1.0\n\n- Added an argument to `setNewOrder` to specify the starting order\n- Adopted psr-2 and psr-4\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0478515625,
          "content": "The MIT License (MIT)\n\nCopyright (c) Spatie bvba\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.7998046875,
          "content": "# Sortable behaviour for Eloquent models\n\n[![Latest Version](https://img.shields.io/github/release/spatie/eloquent-sortable.svg?style=flat-square)](https://github.com/spatie/eloquent-sortable/releases)\n![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/spatie/eloquent-sortable/run-tests.yml?branch=main&label=tests)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE.md)\n[![Total Downloads](https://img.shields.io/packagist/dt/spatie/eloquent-sortable.svg?style=flat-square)](https://packagist.org/packages/spatie/eloquent-sortable)\n\nThis package provides a trait that adds sortable behaviour to an Eloquent model.\n\nThe value of the order column of a new record of a model is determined by the maximum value of the order column of all records of that model + 1.\n\nThe package also provides a query scope to fetch all the records in the right order.\n\nSpatie is a webdesign agency in Antwerp, Belgium. You'll find an overview of all our open source projects [on our website](https://spatie.be/opensource).\n\n## Support us\n\nLearn how to create a package like this one, by watching our premium video course:\n\n[![Laravel Package training](https://spatie.be/github/package-training.jpg)](https://laravelpackage.training)\n\nWe invest a lot of resources into creating [best in class open source packages](https://spatie.be/open-source). You can support us by [buying one of our paid products](https://spatie.be/open-source/support-us).\n\nWe highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using. You'll find our address on [our contact page](https://spatie.be/about-us). We publish all received postcards on [our virtual postcard wall](https://spatie.be/open-source/postcards).\n\n## Installation\n\n> For Laravel 6.x or PHP 7.x, use version 3.x of this package.\n\nThis package can be installed through Composer.\n\n```\ncomposer require spatie/eloquent-sortable\n```\n\nIn Laravel 5.5 and above the service provider will automatically get registered. In older versions of the framework just add the service provider in `config/app.php` file:\n\n```php\n'providers' => [\n    ...\n    Spatie\\EloquentSortable\\EloquentSortableServiceProvider::class,\n];\n```\n\nOptionally you can publish the config file with:\n\n```bash\nphp artisan vendor:publish --tag=eloquent-sortable-config\n```\n\nThis is the content of the file that will be published in `config/eloquent-sortable.php`\n\n```php\nreturn [\n  /*\n   * The name of the column that will be used to sort models.\n   */\n  'order_column_name' => 'order_column',\n\n  /*\n   * Define if the models should sort when creating. When true, the package\n   * will automatically assign the highest order number to a new model\n   */\n  'sort_when_creating' => true,\n\n  /*\n   * Define if the timestamps should be ignored when sorting.\n   * When true, updated_at will not be updated when using setNewOrder\n   */\n  'ignore_timestamps' => false,\n];\n```\n\n## Usage\n\nTo add sortable behaviour to your model you must:\n1. Implement the `Spatie\\EloquentSortable\\Sortable` interface.\n2. Use the trait `Spatie\\EloquentSortable\\SortableTrait`.\n3. Optionally specify which column will be used as the order column. The default is `order_column`.\n\n### Example\n\n```php\nuse Spatie\\EloquentSortable\\Sortable;\nuse Spatie\\EloquentSortable\\SortableTrait;\n\nclass MyModel extends Model implements Sortable\n{\n    use SortableTrait;\n\n    public $sortable = [\n        'order_column_name' => 'order_column',\n        'sort_when_creating' => true,\n    ];\n\n    // ...\n}\n```\n\nIf you don't set a value `$sortable['order_column_name']` the package will assume that your order column name will be named `order_column`.\n\nIf you don't set a value `$sortable['sort_when_creating']` the package will automatically assign the highest order number to a new model;\n\nAssuming that the db-table for `MyModel` is empty:\n\n```php\n$myModel = new MyModel();\n$myModel->save(); // order_column for this record will be set to 1\n\n$myModel = new MyModel();\n$myModel->save(); // order_column for this record will be set to 2\n\n$myModel = new MyModel();\n$myModel->save(); // order_column for this record will be set to 3\n\n\n//the trait also provides the ordered query scope\n$orderedRecords = MyModel::ordered()->get();\n```\n\nYou can set a new order for all the records using the `setNewOrder`-method\n\n```php\n/**\n * the record for model id 3 will have order_column value 1\n * the record for model id 1 will have order_column value 2\n * the record for model id 2 will have order_column value 3\n */\nMyModel::setNewOrder([3,1,2]);\n```\n\nOptionally you can pass the starting order number as the second argument.\n\n```php\n/**\n * the record for model id 3 will have order_column value 11\n * the record for model id 1 will have order_column value 12\n * the record for model id 2 will have order_column value 13\n */\nMyModel::setNewOrder([3,1,2], 10);\n```\n\nYou can modify the query that will be executed by passing a closure as the fourth argument.\n\n```php\n/**\n * the record for model id 3 will have order_column value 11\n * the record for model id 1 will have order_column value 12\n * the record for model id 2 will have order_column value 13\n */\nMyModel::setNewOrder([3,1,2], 10, null, function($query) {\n    $query->withoutGlobalScope(new ActiveScope);\n});\n```\n\n\nTo sort using a column other than the primary key, use the `setNewOrderByCustomColumn`-method.\n\n```php\n/**\n * the record for model uuid '7a051131-d387-4276-bfda-e7c376099715' will have order_column value 1\n * the record for model uuid '40324562-c7ca-4c69-8018-aff81bff8c95' will have order_column value 2\n * the record for model uuid '5dc4d0f4-0c88-43a4-b293-7c7902a3cfd1' will have order_column value 3\n */\nMyModel::setNewOrderByCustomColumn('uuid', [\n   '7a051131-d387-4276-bfda-e7c376099715',\n   '40324562-c7ca-4c69-8018-aff81bff8c95',\n   '5dc4d0f4-0c88-43a4-b293-7c7902a3cfd1'\n]);\n```\n\nAs with `setNewOrder`, `setNewOrderByCustomColumn` will also accept an optional starting order argument.\n\n```php\n/**\n * the record for model uuid '7a051131-d387-4276-bfda-e7c376099715' will have order_column value 10\n * the record for model uuid '40324562-c7ca-4c69-8018-aff81bff8c95' will have order_column value 11\n * the record for model uuid '5dc4d0f4-0c88-43a4-b293-7c7902a3cfd1' will have order_column value 12\n */\nMyModel::setNewOrderByCustomColumn('uuid', [\n   '7a051131-d387-4276-bfda-e7c376099715',\n   '40324562-c7ca-4c69-8018-aff81bff8c95',\n   '5dc4d0f4-0c88-43a4-b293-7c7902a3cfd1'\n], 10);\n```\n\nYou can also move a model up or down with these methods:\n\n```php\n$myModel->moveOrderDown();\n$myModel->moveOrderUp();\n```\n\nYou can also move a model to the first or last position:\n\n```php\n$myModel->moveToStart();\n$myModel->moveToEnd();\n```\n\nYou can determine whether an element is first or last in order:\n\n```php\n$myModel->isFirstInOrder();\n$myModel->isLastInOrder();\n```\n\nYou can swap the order of two models:\n\n```php\nMyModel::swapOrder($myModel, $anotherModel);\n```\n\n### Grouping\n\nIf your model/table has a grouping field (usually a foreign key): `id, `**`user_id`**`, title, order_column`\nand you'd like the above methods to take it into considerations, you can create a `buildSortQuery` method at your model:\n```php\n// MyModel.php\n\npublic function buildSortQuery()\n{\n    return static::query()->where('user_id', $this->user_id);\n}\n```\nThis will restrict the calculations to fields value of the model instance.\n\n### Dispatched events\n\nOnce a sort has been completed, an event (`Spatie\\EloquentSortable\\EloquentModelSortedEvent`) is dispatched that you\ncan listen for. This can be useful for running post-sorting logic such as clearing caches or other actions that\nneed to be taken after a sort.\n\nThe event has an `isFor` helper which allows you to conveniently check the Eloquent class that has been sorted.\n\nBelow is an example of how you can listen for this event:\n\n```php\nuse Spatie\\EloquentSortable\\EloquentModelSortedEvent as SortEvent;\n\nclass SortingListener\n{\n    public function handle(SortEvent $event): void {\n        if ($event->isFor(MyClass::class)) {\n            // ToDo: flush our cache\n        }\n    }\n}\n```\n\n## Tests\n\nThe package contains some integration/smoke tests, set up with Orchestra. The tests can be run via phpunit.\n\n```bash\nvendor/bin/phpunit\n```\n\n## Changelog\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information on what has changed recently.\n\n## Contributing\n\nPlease see [CONTRIBUTING](https://github.com/spatie/.github/blob/main/CONTRIBUTING.md) for details.\n\n## Security Vulnerabilities\n\nPlease review [our security policy](../../security/policy) on how to report security vulnerabilities.\n\n## Credits\n\n- [Freek Van der Herten](https://github.com/freekmurze)\n- [All Contributors](../../contributors)\n\n## Alternatives\n- [Listify](https://github.com/lookitsatravis/listify)\n- [Rutorike-sortable](https://github.com/boxfrommars/rutorika-sortable)\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.3837890625,
          "content": "{\n    \"name\": \"spatie/eloquent-sortable\",\n    \"description\": \"Sortable behaviour for eloquent models\",\n    \"homepage\": \"https://github.com/spatie/eloquent-sortable\",\n    \"authors\": [\n        {\n            \"name\": \"Freek Van der Herten\",\n            \"email\": \"freek@spatie.be\"\n        }\n    ],\n    \"keywords\":\n        [\n            \"sort\",\n            \"sortable\",\n            \"eloquent\",\n            \"model\",\n            \"laravel\",\n            \"behaviour\"\n        ],\n    \"license\": \"MIT\",\n    \"require\": {\n        \"php\": \"^8.1\",\n        \"illuminate/database\": \"^9.31|^10.0|^11.0\",\n        \"illuminate/support\": \"^9.31|^10.0|^11.0\",\n        \"nesbot/carbon\": \"^2.63|^3.0\",\n        \"spatie/laravel-package-tools\": \"^1.9\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\" : \"^9.5|^10.0\",\n        \"orchestra/testbench\": \"^7.0|^8.0|^9.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Spatie\\\\EloquentSortable\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Spatie\\\\EloquentSortable\\\\Test\\\\\": \"tests\"\n        }\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"scripts\": {\n        \"format\": \"vendor/bin/php-cs-fixer fix --allow-risky=yes\",\n        \"test\": \"vendor/bin/phpunit\"\n    },\n    \"extra\": {\n        \"laravel\": {\n            \"providers\": [\n                \"Spatie\\\\EloquentSortable\\\\EloquentSortableServiceProvider\"\n            ]\n        }\n    }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.9326171875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" backupGlobals=\"false\" backupStaticAttributes=\"false\" bootstrap=\"vendor/autoload.php\" colors=\"true\" convertErrorsToExceptions=\"true\" convertNoticesToExceptions=\"true\" convertWarningsToExceptions=\"true\" processIsolation=\"false\" stopOnFailure=\"false\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\">\n  <coverage>\n    <include>\n      <directory suffix=\".php\">app/</directory>\n    </include>\n  </coverage>\n  <testsuites>\n    <testsuite name=\"Package Test Suite\">\n      <directory>./tests/</directory>\n    </testsuite>\n  </testsuites>\n  <php>\n    <env name=\"APP_ENV\" value=\"testing\"/>\n    <env name=\"CACHE_DRIVER\" value=\"array\"/>\n    <env name=\"SESSION_DRIVER\" value=\"array\"/>\n    <env name=\"QUEUE_DRIVER\" value=\"sync\"/>\n    <env name=\"CACHE_DRIVER\" value=\"array\"/>\n    <env name=\"DB_CONNECTION\" value=\"sqlite\"/>\n  </php>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}