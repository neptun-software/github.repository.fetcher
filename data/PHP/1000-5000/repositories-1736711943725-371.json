{
  "metadata": {
    "timestamp": 1736711943725,
    "page": 371,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "paratestphp/paratest",
      "stars": 2335,
      "defaultBranch": "7.x",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.5390625,
          "content": "/.github/                       export-ignore\n/test/                          export-ignore\n/.gitattributes                 export-ignore\n/.gitignore                     export-ignore\n/Makefile                       export-ignore\n/Dockerfile                     export-ignore\n/docker-compose.yml             export-ignore\n/infection.json                 export-ignore\n/phpcs.xml                      export-ignore\n/phpstan.neon                   export-ignore\n/phpstan-baseline.neon          export-ignore\n/phpunit.xml                    export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1484375,
          "content": "/.idea\n/.build-cache\n/coverage\n/test/fixtures/wrapper_batchsize_suite/tmp\n/vendor\n.env\n.phpunit.result.cache\n.php_cs.cache\ncomposer.lock\ninfections.log\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.4541015625,
          "content": "FROM php:8.4\n\n# git needed for Infection\nRUN apt-get update \\\n    && apt-get -y install --no-install-recommends \\\n        git\n\nADD --chmod=0755 https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/\n\nRUN install-php-extensions @composer pcov\n\nARG USER_ID\nARG GROUP_ID\n\nRUN groupadd --gid ${GROUP_ID} code \\\n    && useradd --create-home --shell /bin/bash --uid ${USER_ID} --gid code code\n\nUSER code\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0322265625,
          "content": "Copyright (c) 2013 Brian Scaturro\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.962890625,
          "content": "DOCKER_PHP_EXEC := docker compose run --rm php\n\nSRCS := $(shell find ./src ./test -type f -not -path \"*/tmp/*\")\n\nLOCAL_BASE_BRANCH ?= $(shell git show-branch | sed \"s/].*//\" | grep \"\\*\" | grep -v \"$$(git rev-parse --abbrev-ref HEAD)\" | head -n1 | sed \"s/^.*\\[//\")\nifeq ($(strip $(LOCAL_BASE_BRANCH)),)\n\tLOCAL_BASE_BRANCH := HEAD^\nendif\nBASE_BRANCH ?= $(LOCAL_BASE_BRANCH)\n\n#all: csfix static-analysis code-coverage\nall: csfix static-analysis test\n\t@echo \"Done.\"\n\n.env: /etc/passwd /etc/group Makefile\n\tprintf \"USER_ID=%s\\nGROUP_ID=%s\\n\" `id --user \"${USER}\"` `id --group \"${USER}\"` > .env\n\nvendor: .env docker-compose.yml Dockerfile composer.json\n\tdocker compose build --pull\n\t$(DOCKER_PHP_EXEC) composer update\n\t$(DOCKER_PHP_EXEC) composer bump\n\ttouch --no-create $@\n\tmkdir --parents .build-cache\n\n.PHONY: csfix\ncsfix: vendor\n\t$(DOCKER_PHP_EXEC) vendor/bin/phpcbf || true\n\t$(DOCKER_PHP_EXEC) vendor/bin/phpcs --cache=.build-cache/phpcs\n\n.PHONY: static-analysis\nstatic-analysis: vendor\n\t$(DOCKER_PHP_EXEC) php -d zend.assertions=1 vendor/bin/phpstan --memory-limit=512M $(PHPSTAN_ARGS)\n\ncoverage/junit.xml: vendor $(SRCS)\n\t$(DOCKER_PHP_EXEC) php -d zend.assertions=1 \\\n\t\t-d pcov.enabled=1 \\\n\t\tvendor/bin/phpunit \\\n\t\t--coverage-clover=coverage/clover.xml \\\n\t\t--coverage-xml=coverage/xml \\\n\t\t--coverage-html=coverage/html \\\n\t\t--log-junit=$@ \\\n\t\t$(PHPUNIT_ARGS) \\\n\t\t|| (rm $@ && exit 1)\n\n.PHONY: test\ntest: coverage/junit.xml\n\n.PHONY: code-coverage\ncode-coverage: coverage/junit.xml\n\techo \"Base branch: $(BASE_BRANCH)\"\n\t$(DOCKER_PHP_EXEC) php -d zend.assertions=1 \\\n\t\t-d pcov.enabled=1 \\\n\t\tvendor/bin/infection run \\\n\t\t--threads=$(shell nproc) \\\n\t\t--git-diff-lines \\\n\t\t--git-diff-base=$(BASE_BRANCH) \\\n\t\t--skip-initial-tests \\\n\t\t--initial-tests-php-options=\"'-d' 'pcov.enabled=1'\" \\\n\t\t--coverage=coverage \\\n\t\t--show-mutations \\\n\t\t--verbose \\\n\t\t--ignore-msi-with-no-mutations \\\n\t\t--min-msi=100 \\\n\t\t$(INFECTION_ARGS)\n\n.PHONY: clean\nclean:\n\tgit clean -dfX\n\tdocker compose down --remove-orphans\n\n.PHONY: regenerate-fixture-results\nregenerate-fixture-results: vendor\n\t$(DOCKER_PHP_EXEC) vendor/bin/phpunit \\\n\t\t--log-junit test/fixtures/special_chars/data-provider-with-special-chars.xml \\\n\t\t--no-configuration \\\n\t\ttest/fixtures/special_chars/UnitTestWithDataProviderSpecialCharsTest.php \\\n\t\t> /dev/null || true\n\t$(DOCKER_PHP_EXEC) vendor/bin/phpunit --no-configuration test/fixtures/common_results/ErrorTest.php --log-junit test/fixtures/common_results/junit/ErrorTest.xml > /dev/null || true\n\t$(DOCKER_PHP_EXEC) vendor/bin/phpunit --no-configuration test/fixtures/common_results/FailureTest.php --log-junit test/fixtures/common_results/junit/FailureTest.xml > /dev/null || true\n\t$(DOCKER_PHP_EXEC) vendor/bin/phpunit --no-configuration test/fixtures/common_results/IncompleteTest.php --log-junit test/fixtures/common_results/junit/IncompleteTest.xml > /dev/null || true\n\t$(DOCKER_PHP_EXEC) vendor/bin/phpunit --no-configuration test/fixtures/common_results/RiskyTest.php --log-junit test/fixtures/common_results/junit/RiskyTest.xml > /dev/null || true\n\t$(DOCKER_PHP_EXEC) vendor/bin/phpunit --no-configuration test/fixtures/common_results/SkippedTest.php --log-junit test/fixtures/common_results/junit/SkippedTest.xml > /dev/null || true\n\t$(DOCKER_PHP_EXEC) vendor/bin/phpunit --no-configuration test/fixtures/common_results/SuccessTest.php --log-junit test/fixtures/common_results/junit/SuccessTest.xml > /dev/null || true\n\t$(DOCKER_PHP_EXEC) vendor/bin/phpunit --no-configuration test/fixtures/common_results/WarningTest.php --log-junit test/fixtures/common_results/junit/WarningTest.xml > /dev/null || true\n\t$(DOCKER_PHP_EXEC) vendor/bin/phpunit --no-configuration test/fixtures/common_results/ --log-junit test/fixtures/common_results/combined.xml > /dev/null || true\n\tfind test/fixtures/ -type f -name \"*.xml\" -print0 | xargs -0 sed -i 's#$(PWD)#.#g'\n\tfind test/fixtures/ -type f -name \"*.xml\" -print0 | xargs -0 sed -i 's#time=\"........\"#time=\"1.234567\"#g'\n\tsed -i 's#name=\"./test/fixtures/common_results\"#name=\"\"#g' test/fixtures/common_results/combined.xml\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.6025390625,
          "content": "ParaTest\n========\n\n[![Latest Stable Version](https://img.shields.io/packagist/v/brianium/paratest.svg)](https://packagist.org/packages/brianium/paratest)\n[![Downloads](https://img.shields.io/packagist/dt/brianium/paratest.svg)](https://packagist.org/packages/brianium/paratest)\n[![Integrate](https://github.com/paratestphp/paratest/workflows/CI/badge.svg)](https://github.com/paratestphp/paratest/actions)\n[![Infection MSI](https://img.shields.io/endpoint?style=flat&url=https%3A%2F%2Fbadge-api.stryker-mutator.io%2Fgithub.com%2Fparatestphp%2Fparatest%2F7.x)](https://dashboard.stryker-mutator.io/reports/github.com/paratestphp/paratest/7.x)\n\nThe objective of ParaTest is to support parallel testing in PHPUnit. Provided you have well-written PHPUnit tests, you can drop `paratest` in your project and\nstart using it with no additional bootstrap or configurations!\n\nBenefits:\n\n* Zero configuration. After the installation, run with `vendor/bin/paratest` to parallelize by TestCase or `vendor/bin/paratest --functional` to parallelize by Test. That's it!\n* Code Coverage report combining. Run your tests in N parallel processes and all the code coverage output will be combined into one report.\n\n# Installation\n\nTo install with composer run the following command:\n\n    composer require --dev brianium/paratest\n    \n# Versions\n\nOnly the latest version of PHPUnit is supported, and thus only the latest version of ParaTest is actively maintained.\n\nThis is because of the following reasons:\n\n1. To reduce bugs, code duplication and incompatibilities with PHPUnit, from version 5 ParaTest heavily relies on PHPUnit `@internal` classes\n1. The fast pace both PHP and PHPUnit have taken recently adds too much maintenance burden, which we can only afford for the latest versions to stay up-to-date\n\n# Usage\n\nAfter installation, the binary can be found at `vendor/bin/paratest`. Run it\nwith `--help` option to see a complete list of the available options.\n\n## Test token\n\nThe `TEST_TOKEN` environment variable is guaranteed to have a value that is different\nfrom every other currently running test. This is useful to e.g. use a different database\nfor each test:\n\n```php\nif (getenv('TEST_TOKEN') !== false) {  // Using ParaTest\n    $dbname = 'testdb_' . getenv('TEST_TOKEN');\n} else {\n    $dbname = 'testdb';\n}\n```\n\nA `UNIQUE_TEST_TOKEN` environment variable is also available and guaranteed to have a value that is unique both\nper run and per process.\n\n## Code coverage\n\nThe cache is always warmed up by ParaTest before executing the test suite.\n\n### PCOV\n\nIf you have installed `pcov` but need to enable it only while running tests, you have to pass thru the needed PHP binary\noption:\n\n```\nphp -d pcov.enabled=1 vendor/bin/paratest --passthru-php=\"'-d' 'pcov.enabled=1'\"\n```\n\n### xDebug\n\nIf you have `xDebug` installed, activating it by the environment variable is enough to have it running even in the subprocesses:\n\n```\nXDEBUG_MODE=coverage vendor/bin/paratest\n```\n\n## Initial setup for all tests\n\nBecause ParaTest runs multiple processes in parallel, each with their own instance of the PHP interpreter,\ntechniques used to perform an initialization step exactly once for each test work different from PHPUnit.\nThe following pattern will not work as expected - run the initialization exactly once - and instead run the\ninitialization once per process:\n\n```php\nprivate static bool $initialized = false;\n\npublic function setUp(): void\n{\n    if (! self::$initialized) {\n         self::initialize();\n         self::$initialized = true;\n    }\n}\n```\n\nThis is because static variables persist during the execution of a single process.\nIn parallel testing each process has a separate instance of `$initialized`.\nYou can use the following pattern to ensure your initialization runs exactly once for the entire test invocation:\n\n```php\nstatic bool $initialized = false;\n\npublic function setUp(): void\n{\n    if (! self::$initialized) {\n        // We utilize the filesystem as shared mutable state to coordinate between processes\n        touch('/tmp/test-initialization-lock-file');\n        $lockFile = fopen('/tmp/test-initialization-lock-file', 'r');\n\n        // Attempt to get an exclusive lock - first process wins\n        if (flock($lockFile, LOCK_EX | LOCK_NB)) {\n            // Since we are the single process that has an exclusive lock, we run the initialization\n            self::initialize();\n        } else {\n            // If no exclusive lock is available, block until the first process is done with initialization\n            flock($lockFile, LOCK_SH);\n        }\n\n        self::$initialized = true;\n    }\n}\n```\n\n## Troubleshooting\n\nIf you run into problems with `paratest`, try to get more information about the issue by enabling debug output via\n`--verbose --debug`.\n\nWhen a sub-process fails, the originating command is given in the output and can then be copy-pasted in the terminal\nto be run and debugged. All internal commands run with `--printer [...]\\NullPhpunitPrinter` which silence the original\nPHPUnit output: during a debugging run remove that option to restore the output and see what PHPUnit is doing.\n\n## Caveats\n\n1. Constants, static methods, static variables and everything exposed by test classes consumed by other test classes\n(including Reflection) are not supported. This is due to a limitation of the current implementation of `WrapperRunner`\nand how PHPUnit searches for classes. The fix is to put shared code into classes which are not tests _themselves_.\n\n## Integration with PHPStorm\n\nParaTest provides a dedicated binary to work with PHPStorm; follow these steps to have ParaTest working within it:\n\n1. Be sure you have PHPUnit already configured in PHPStorm: https://www.jetbrains.com/help/phpstorm/using-phpunit-framework.html#php_test_frameworks_phpunit_integrate\n2. Go to `Run` -> `Edit configurations...`\n3. Select `Add new Configuration`, select the `PHPUnit` type and name it `ParaTest`\n4. In the `Command Line` -> `Interpreter options` add `./vendor/bin/paratest_for_phpstorm`\n5. Any additional ParaTest options you want to pass to ParaTest should go within the `Test runner` -> `Test runner options` section\n\nYou should now have a `ParaTest` run within your configurations list.\nIt should natively work with the `Rerun failed tests` and `Toggle auto-test` buttons of the `Run` overlay.\n\n### Run with Coverage\n\nCoverage with one of the [available coverage engines](#code-coverage) must already be [configured in PHPStorm](https://www.jetbrains.com/help/phpstorm/code-coverage.html) \nand working when running tests sequentially in order for the helper binary to correctly handle code coverage\n\n# For Contributors: testing ParaTest itself\n\nBefore creating a Pull Request be sure to run all the necessary checks with `make` command.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.3310546875,
          "content": "{\n    \"name\": \"brianium/paratest\",\n    \"description\": \"Parallel testing for PHP\",\n    \"license\": \"MIT\",\n    \"type\": \"library\",\n    \"keywords\": [\n        \"testing\",\n        \"PHPUnit\",\n        \"concurrent\",\n        \"parallel\"\n    ],\n    \"authors\": [\n        {\n            \"name\": \"Brian Scaturro\",\n            \"email\": \"scaturrob@gmail.com\",\n            \"role\": \"Developer\"\n        },\n        {\n            \"name\": \"Filippo Tessarotto\",\n            \"email\": \"zoeslam@gmail.com\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"homepage\": \"https://github.com/paratestphp/paratest\",\n    \"funding\": [\n        {\n            \"type\": \"github\",\n            \"url\": \"https://github.com/sponsors/Slamdunk\"\n        },\n        {\n            \"type\": \"paypal\",\n            \"url\": \"https://paypal.me/filippotessarotto\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"~8.2.0 || ~8.3.0 || ~8.4.0\",\n        \"ext-dom\": \"*\",\n        \"ext-pcre\": \"*\",\n        \"ext-reflection\": \"*\",\n        \"ext-simplexml\": \"*\",\n        \"fidry/cpu-core-counter\": \"^1.2.0\",\n        \"jean85/pretty-package-versions\": \"^2.1.0\",\n        \"phpunit/php-code-coverage\": \"^11.0.8\",\n        \"phpunit/php-file-iterator\": \"^5.1.0\",\n        \"phpunit/php-timer\": \"^7.0.1\",\n        \"phpunit/phpunit\": \"^11.5.2\",\n        \"sebastian/environment\": \"^7.2.0\",\n        \"symfony/console\": \"^6.4.14 || ^7.2.1\",\n        \"symfony/process\": \"^6.4.14 || ^7.2.0\"\n    },\n    \"require-dev\": {\n        \"ext-pcov\": \"*\",\n        \"ext-posix\": \"*\",\n        \"doctrine/coding-standard\": \"^12.0.0\",\n        \"phpstan/phpstan\": \"^2.1.1\",\n        \"phpstan/phpstan-deprecation-rules\": \"^2.0.1\",\n        \"phpstan/phpstan-phpunit\": \"^2.0.3\",\n        \"phpstan/phpstan-strict-rules\": \"^2.0.1\",\n        \"squizlabs/php_codesniffer\": \"^3.11.2\",\n        \"symfony/filesystem\": \"^6.4.13 || ^7.2.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"ParaTest\\\\\": [\n                \"src/\"\n            ]\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"ParaTest\\\\Tests\\\\\": \"test/\"\n        }\n    },\n    \"bin\": [\n        \"bin/paratest\",\n        \"bin/paratest_for_phpstorm\"\n    ],\n    \"config\": {\n        \"allow-plugins\": {\n            \"composer/package-versions-deprecated\": true,\n            \"dealerdirect/phpcodesniffer-composer-installer\": true,\n            \"infection/extension-installer\": true\n        },\n        \"sort-packages\": true\n    }\n}\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.1650390625,
          "content": "services:\n  php:\n    build:\n      context: .\n      args:\n        USER_ID: ${USER_ID}\n        GROUP_ID: ${GROUP_ID}\n    volumes:\n      - .:${PWD}\n    working_dir: ${PWD}\n"
        },
        {
          "name": "infection.json",
          "type": "blob",
          "size": 0.556640625,
          "content": "{\n    \"$schema\": \"vendor/infection/infection/resources/schema.json\",\n    \"source\": {\n        \"directories\": [\n            \"src\"\n        ]\n    },\n    \"timeout\": 10,\n    \"logs\": {\n        \"text\": \"coverage/infections.log\",\n        \"html\": \"coverage/mutants.html\",\n        \"stryker\": {\n            \"report\": \"/^\\\\d+\\\\.x$/\"\n        }\n    },\n    \"mutators\": {\n        \"@default\": true,\n        \"global-ignoreSourceCodeByRegex\": [\n            \"assert\\\\(.+\\\\);\",\n            \"mkdir\\\\(\\\\$dir, 0777, true\\\\);\",\n            \".+'@see PHPUnit guide, chapter: '.+\"\n        ]\n    }\n}\n"
        },
        {
          "name": "phpcs.xml",
          "type": "blob",
          "size": 1.5712890625,
          "content": "<?xml version=\"1.0\"?>\n<ruleset\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:noNamespaceSchemaLocation=\"vendor/squizlabs/php_codesniffer/phpcs.xsd\"\n    name=\"laminas/automatic-releases CS rules\"\n>\n    <arg value=\"p\"/>\n    <arg value=\"s\"/>\n    <arg name=\"colors\"/>\n\n    <file>src</file>\n    <file>test</file>\n    <exclude-pattern>*/test/fixtures/fatal_tests/*</exclude-pattern>\n    <exclude-pattern>*/test/tmp/*</exclude-pattern>\n\n    <config name=\"php_version\" value=\"70300\"/>\n\n    <rule ref=\"Doctrine\"/>\n\n    <rule ref=\"Generic.Files.LineLength\">\n        <properties>\n            <property name=\"lineLimit\" value=\"320\"/>\n            <property name=\"absoluteLineLimit\" value=\"0\"/>\n        </properties>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.ControlStructures.AssignmentInCondition.AssignmentInCondition\">\n        <severity>0</severity>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming.SuperfluousSuffix\">\n        <severity>0</severity>\n    </rule>\n    <rule ref=\"SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix\">\n        <severity>0</severity>\n    </rule>\n\n    <rule ref=\"Squiz.Strings.DoubleQuoteUsage.ContainsVar\">\n        <severity>0</severity>\n    </rule>\n\n    <rule ref=\"Squiz.NamingConventions.ValidVariableName.NotCamelCaps\">\n        <severity>0</severity>\n    </rule>\n    <rule ref=\"Squiz.NamingConventions.ValidVariableName.MemberNotCamelCaps\">\n        <severity>0</severity>\n    </rule>\n\n    <rule ref=\"Squiz.Functions.FunctionDeclaration.Found\">\n        <severity>0</severity>\n    </rule>\n</ruleset>\n"
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 9.919921875,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: '#^Call to function array_filter\\(\\) requires parameter \\#2 to be passed to avoid loose comparison semantics\\.$#'\n\t\t\tidentifier: arrayFilter.strict\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: '#^Method ParaTest\\\\Options\\:\\:parsePassthru\\(\\) should return list\\<non\\-empty\\-string\\>\\|null but returns non\\-empty\\-array\\<mixed, mixed\\>\\.$#'\n\t\t\tidentifier: return.type\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#2 \\$phpunit of class ParaTest\\\\Options constructor expects non\\-empty\\-string, string given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#7 \\$phpunitOptions of class ParaTest\\\\Options constructor expects array\\<non\\-empty\\-string, list\\<non\\-empty\\-string\\>\\|non\\-empty\\-string\\|true\\>, array\\<''bootstrap''\\|''cache\\-directory''\\|''configuration''\\|''coverage\\-filter''\\|''disallow\\-test\\-output''\\|''dont\\-report\\-useless…''\\|''exclude\\-group''\\|''fail\\-on\\-incomplete''\\|''fail\\-on\\-risky''\\|''fail\\-on\\-skipped''\\|''fail\\-on\\-warning''\\|''filter''\\|''group''\\|''no\\-configuration''\\|''order\\-by''\\|''process\\-isolation''\\|''random\\-order\\-seed''\\|''stop\\-on\\-defect''\\|''stop\\-on\\-error''\\|''stop\\-on\\-incomplete''\\|''stop\\-on\\-risky''\\|''stop\\-on\\-skipped''\\|''stop\\-on\\-warning''\\|''strict\\-coverage''\\|''strict\\-global\\-state'', non\\-empty\\-array\\|float\\|int\\<min, \\-1\\>\\|int\\<1, max\\>\\|non\\-falsy\\-string\\|true\\> given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: '#^Part \\$innerValue \\(mixed\\) of encapsed string cannot be cast to string\\.$#'\n\t\t\tidentifier: encapsedStringPart.nonString\n\t\t\tcount: 1\n\t\t\tpath: src/Options.php\n\n\t\t-\n\t\t\tmessage: '#^Match expression does not handle remaining value\\: string$#'\n\t\t\tidentifier: match.unhandled\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/ResultPrinter.php\n\n\t\t-\n\t\t\tmessage: '#^Cannot cast mixed to string\\.$#'\n\t\t\tidentifier: cast.string\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WorkerCrashedException.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#10 \\$testTriggeredPhpunitDeprecationEvents of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects array\\<string, list\\<PHPUnit\\\\Event\\\\Test\\\\PhpunitDeprecationTriggered\\>\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#11 \\$testTriggeredPhpunitErrorEvents of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects array\\<string, list\\<PHPUnit\\\\Event\\\\Test\\\\PhpunitErrorTriggered\\>\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#12 \\$testTriggeredPhpunitWarningEvents of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects array\\<string, list\\<PHPUnit\\\\Event\\\\Test\\\\PhpunitWarningTriggered\\>\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#13 \\$testRunnerTriggeredDeprecationEvents of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects list\\<PHPUnit\\\\Event\\\\TestRunner\\\\DeprecationTriggered\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#14 \\$testRunnerTriggeredWarningEvents of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects list\\<PHPUnit\\\\Event\\\\TestRunner\\\\WarningTriggered\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#15 \\$errors of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects list\\<PHPUnit\\\\TestRunner\\\\TestResult\\\\Issues\\\\Issue\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#16 \\$deprecations of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects list\\<PHPUnit\\\\TestRunner\\\\TestResult\\\\Issues\\\\Issue\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#17 \\$notices of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects list\\<PHPUnit\\\\TestRunner\\\\TestResult\\\\Issues\\\\Issue\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#18 \\$warnings of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects list\\<PHPUnit\\\\TestRunner\\\\TestResult\\\\Issues\\\\Issue\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#19 \\$phpDeprecations of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects list\\<PHPUnit\\\\TestRunner\\\\TestResult\\\\Issues\\\\Issue\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#20 \\$phpNotices of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects list\\<PHPUnit\\\\TestRunner\\\\TestResult\\\\Issues\\\\Issue\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#21 \\$phpWarnings of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects list\\<PHPUnit\\\\TestRunner\\\\TestResult\\\\Issues\\\\Issue\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#4 \\$testErroredEvents of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects list\\<PHPUnit\\\\Event\\\\Test\\\\BeforeFirstTestMethodErrored\\|PHPUnit\\\\Event\\\\Test\\\\Errored\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#5 \\$testFailedEvents of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects list\\<PHPUnit\\\\Event\\\\Test\\\\Failed\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#6 \\$testConsideredRiskyEvents of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects array\\<string, list\\<PHPUnit\\\\Event\\\\Test\\\\ConsideredRisky\\>\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#7 \\$testSuiteSkippedEvents of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects list\\<PHPUnit\\\\Event\\\\TestSuite\\\\Skipped\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#8 \\$testSkippedEvents of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects list\\<PHPUnit\\\\Event\\\\Test\\\\Skipped\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#9 \\$testMarkedIncompleteEvents of class PHPUnit\\\\TestRunner\\\\TestResult\\\\TestResult constructor expects list\\<PHPUnit\\\\Event\\\\Test\\\\MarkedIncomplete\\>, array given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Property ParaTest\\\\WrapperRunner\\\\WrapperRunner\\:\\:\\$parameters \\(array\\<non\\-empty\\-string\\>\\) does not accept non\\-empty\\-array\\.$#'\n\t\t\tidentifier: assign.propertyType\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperRunner.php\n\n\t\t-\n\t\t\tmessage: '#^Access to an uninitialized readonly property ParaTest\\\\WrapperRunner\\\\WrapperWorker\\:\\:\\$coverageFile\\.$#'\n\t\t\tidentifier: property.uninitializedReadonly\n\t\t\tcount: 2\n\t\t\tpath: src/WrapperRunner/WrapperWorker.php\n\n\t\t-\n\t\t\tmessage: '#^Access to an uninitialized readonly property ParaTest\\\\WrapperRunner\\\\WrapperWorker\\:\\:\\$junitFile\\.$#'\n\t\t\tidentifier: property.uninitializedReadonly\n\t\t\tcount: 2\n\t\t\tpath: src/WrapperRunner/WrapperWorker.php\n\n\t\t-\n\t\t\tmessage: '#^Access to an uninitialized readonly property ParaTest\\\\WrapperRunner\\\\WrapperWorker\\:\\:\\$resultCacheFile\\.$#'\n\t\t\tidentifier: property.uninitializedReadonly\n\t\t\tcount: 2\n\t\t\tpath: src/WrapperRunner/WrapperWorker.php\n\n\t\t-\n\t\t\tmessage: '#^Access to an uninitialized readonly property ParaTest\\\\WrapperRunner\\\\WrapperWorker\\:\\:\\$teamcityFile\\.$#'\n\t\t\tidentifier: property.uninitializedReadonly\n\t\t\tcount: 2\n\t\t\tpath: src/WrapperRunner/WrapperWorker.php\n\n\t\t-\n\t\t\tmessage: '#^Access to an uninitialized readonly property ParaTest\\\\WrapperRunner\\\\WrapperWorker\\:\\:\\$testdoxFile\\.$#'\n\t\t\tidentifier: property.uninitializedReadonly\n\t\t\tcount: 2\n\t\t\tpath: src/WrapperRunner/WrapperWorker.php\n\n\t\t-\n\t\t\tmessage: '#^Class ParaTest\\\\WrapperRunner\\\\WrapperWorker has an uninitialized readonly property \\$coverageFile\\. Assign it in the constructor\\.$#'\n\t\t\tidentifier: property.uninitializedReadonly\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperWorker.php\n\n\t\t-\n\t\t\tmessage: '#^Class ParaTest\\\\WrapperRunner\\\\WrapperWorker has an uninitialized readonly property \\$junitFile\\. Assign it in the constructor\\.$#'\n\t\t\tidentifier: property.uninitializedReadonly\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperWorker.php\n\n\t\t-\n\t\t\tmessage: '#^Class ParaTest\\\\WrapperRunner\\\\WrapperWorker has an uninitialized readonly property \\$resultCacheFile\\. Assign it in the constructor\\.$#'\n\t\t\tidentifier: property.uninitializedReadonly\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperWorker.php\n\n\t\t-\n\t\t\tmessage: '#^Class ParaTest\\\\WrapperRunner\\\\WrapperWorker has an uninitialized readonly property \\$teamcityFile\\. Assign it in the constructor\\.$#'\n\t\t\tidentifier: property.uninitializedReadonly\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperWorker.php\n\n\t\t-\n\t\t\tmessage: '#^Class ParaTest\\\\WrapperRunner\\\\WrapperWorker has an uninitialized readonly property \\$testdoxFile\\. Assign it in the constructor\\.$#'\n\t\t\tidentifier: property.uninitializedReadonly\n\t\t\tcount: 1\n\t\t\tpath: src/WrapperRunner/WrapperWorker.php\n\n\t\t-\n\t\t\tmessage: '#^Unreachable statement \\- code above always terminates\\.$#'\n\t\t\tidentifier: deadCode.unreachable\n\t\t\tcount: 1\n\t\t\tpath: test/Unit/WrapperRunner/WrapperRunnerTest.php\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.4150390625,
          "content": "includes:\n    - vendor/phpstan/phpstan-phpunit/extension.neon\n    - vendor/phpstan/phpstan-deprecation-rules/rules.neon\n    - vendor/phpstan/phpstan-strict-rules/rules.neon\n    - phpstan-baseline.neon\n\nparameters:\n    level: max\n    tipsOfTheDay: false\n    tmpDir: .build-cache/phpstan\n    paths:\n        - src/\n        - test/\n    excludePaths:\n        analyseAndScan:\n            - test/fixtures/*\n            - test/tmp/*\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.974609375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n    bootstrap=\"./test/bootstrap.php\"\n    colors=\"true\"\n    failOnRisky=\"true\"\n    failOnWarning=\"true\"\n    failOnEmptyTestSuite=\"true\"\n    beStrictAboutChangesToGlobalState=\"true\"\n    beStrictAboutOutputDuringTests=\"true\"\n    displayDetailsOnTestsThatTriggerDeprecations=\"true\"\n    displayDetailsOnTestsThatTriggerErrors=\"true\"\n    displayDetailsOnTestsThatTriggerNotices=\"true\"\n    displayDetailsOnTestsThatTriggerWarnings=\"true\"\n    cacheDirectory=\".build-cache/.phpunit\">\n  <source>\n    <include>\n      <directory>src</directory>\n    </include>\n  </source>\n  <coverage>\n    <report>\n      <text outputFile=\"php://stdout\" showOnlySummary=\"true\"/>\n    </report>\n  </coverage>\n  <testsuites>\n    <testsuite name=\"ParaTest Unit Tests\">\n      <directory>./test/Unit/</directory>\n    </testsuite>\n  </testsuites>\n</phpunit>\n"
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.130859375,
          "content": "{\n  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n  \"extends\": [\n    \"local>Slamdunk/.github:renovate-config\"\n  ]\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}