{
  "metadata": {
    "timestamp": 1736711781907,
    "page": 44,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "KnpLabs/snappy",
      "stars": 4407,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.208984375,
          "content": "# http://editorconfig.org\nroot = true\n\n[*]\nindent_style = space\nindent_size = 4\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.228515625,
          "content": "* text=auto\n\n/tests export-ignore\n/.editorconfig export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/.travis.yml export-ignore\n/.php_cs export-ignore\n/.php-cs-fixer.php export-ignore\n/phpunit.xml.dist export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.10546875,
          "content": "phpunit.xml\ncomposer.lock\nvendor\nbin\n.php_cs.cache\n.php-cs-fixer.cache\n.phpunit.result.cache\n.phpunit.cache\n"
        },
        {
          "name": ".php-cs-fixer.php",
          "type": "blob",
          "size": 6.7333984375,
          "content": "<?php\n\n$finder = PhpCsFixer\\Finder::create()\n    ->in(__DIR__.'/src')\n    ->in(__DIR__.'/tests')\n;\n\nreturn (new PhpCsFixer\\Config())\n    ->setFinder($finder)\n    ->setRiskyAllowed(true)\n    ->registerCustomFixers(new PedroTroller\\CS\\Fixer\\Fixers())\n    ->setRules([\n        '@PHP71Migration' => true,\n        '@PSR1' => true,\n        '@PSR2' => true,\n        'array_indentation' => true,\n        'array_syntax' => [ 'syntax' => 'short' ],\n        'align_multiline_comment' => [\n            'comment_type' => 'all_multiline',\n        ],\n        'array_syntax' => [\n            'syntax' => 'short',\n        ],\n        'binary_operator_spaces' => true,\n        'blank_line_after_opening_tag' => true,\n        'blank_line_before_statement' => true,\n        'cast_spaces' => true,\n        'class_attributes_separation' => true,\n        'combine_consecutive_issets' => true,\n        'combine_consecutive_unsets' => true,\n        'compact_nullable_typehint' => true,\n        'concat_space' => ['spacing' => 'one'],\n        'date_time_immutable' => true,\n        'declare_equal_normalize' => [\n            'space' => 'single',\n        ],\n        'dir_constant' => true,\n        'ereg_to_preg' => true,\n        'escape_implicit_backslashes' => true,\n        'explicit_indirect_variable' => true,\n        'explicit_string_variable' => true,\n        'fopen_flag_order' => true,\n        'fopen_flags' => true,\n        'fully_qualified_strict_types' => true,\n        'function_to_constant' => [\n            'functions' => [\n                'get_class',\n                'php_sapi_name',\n                'phpversion',\n                'pi',\n            ]\n        ],\n        'function_typehint_space' => true,\n        'global_namespace_import' => true,\n        'heredoc_to_nowdoc' => true,\n        'implode_call' => true,\n        'include' => true,\n        'is_null' => true,\n        'linebreak_after_opening_tag' => true,\n        'list_syntax' => [\n            'syntax' => 'long',\n        ],\n        'logical_operators' => true,\n        'lowercase_cast' => true,\n        'lowercase_static_reference' => true,\n        'magic_constant_casing' => true,\n        'magic_method_casing' => true,\n        'method_chaining_indentation' => true,\n        'modernize_types_casting' => true,\n        'multiline_comment_opening_closing' => true,\n        'multiline_whitespace_before_semicolons' => [\n            'strategy' => 'new_line_for_chained_calls',\n        ],\n        'native_constant_invocation' => [\n            'include' => ['@internal'],\n            'scope' => 'all',\n        ],\n        'native_function_casing' => true,\n        'native_function_invocation' => ['include' => ['@all']],\n        'native_function_type_declaration_casing' => true,\n        'new_with_braces' => true,\n        'no_alternative_syntax' => true,\n        'no_binary_string' => true,\n        'no_blank_lines_after_class_opening' => true,\n        'no_blank_lines_after_phpdoc' => true,\n        'no_empty_comment' => true,\n        'no_empty_phpdoc' => true,\n        'no_empty_statement' => true,\n        'no_extra_blank_lines' => [\n            'tokens' => ['extra']\n        ],\n        'no_leading_import_slash' => true,\n        'no_leading_namespace_whitespace' => true,\n        'no_mixed_echo_print' => true,\n        'no_multiline_whitespace_around_double_arrow' => true,\n        'no_short_bool_cast' => true,\n        'echo_tag_syntax' => ['format' => 'long'],\n        'no_singleline_whitespace_before_semicolons' => true,\n        'no_spaces_around_offset' => [\n            'positions' => ['inside', 'outside'],\n        ],\n        'no_superfluous_elseif' => true,\n        'no_superfluous_phpdoc_tags' => false,\n        'no_trailing_comma_in_list_call' => true,\n        'no_trailing_comma_in_singleline_array' => true,\n        'no_unneeded_curly_braces' => true,\n        'no_unused_imports' => true,\n        'no_useless_else' => true,\n        'no_useless_return' => true,\n        'no_whitespace_before_comma_in_array' => true,\n        'no_whitespace_in_blank_line' => true,\n        'normalize_index_brace' => true,\n        'object_operator_without_whitespace' => true,\n        'ordered_class_elements' => [\n            'order' => [\n                'use_trait',\n                'constant_public',\n                'constant_protected',\n                'constant_private',\n                'property_public',\n                'property_protected',\n                'property_private',\n                'construct',\n                'destruct',\n                'magic',\n                'phpunit',\n                'method_public',\n                'method_protected',\n                'method_private'\n            ],\n        ],\n        'php_unit_construct' => [\n            'assertions' => [\n                'assertEquals',\n                'assertSame',\n                'assertNotEquals',\n                'assertNotSame'\n            ]\n        ],\n        // Check on other phpunit stuff\n        'phpdoc_align' => [\n            'align' => 'vertical'\n        ],\n        'phpdoc_indent' => true,\n        'general_phpdoc_tag_rename' => ['fix_inline' => true],\n        'phpdoc_no_access' => true,\n        'phpdoc_no_alias_tag' => true,\n        'phpdoc_no_empty_return' => false,\n        'phpdoc_no_package' => true,\n        'phpdoc_no_useless_inheritdoc' => true,\n        'phpdoc_order' => true,\n        'phpdoc_return_self_reference' => true,\n        'phpdoc_scalar' => true,\n        'phpdoc_separation' => true,\n        'phpdoc_single_line_var_spacing' => true,\n        'phpdoc_summary' => true,\n        'phpdoc_to_comment' => true,\n        'phpdoc_trim' => true,\n        'phpdoc_trim_consecutive_blank_line_separation' => true,\n        'phpdoc_types' => true,\n        'phpdoc_types_order' => true,\n        'phpdoc_var_annotation_correct_order' => true,\n        'phpdoc_var_without_name' => true,\n        'psr_autoloading' => ['dir' => './src'],\n        'return_assignment' => true,\n        'return_type_declaration' => true,\n        'semicolon_after_instruction' => true,\n        'short_scalar_cast' => true,\n        'single_blank_line_before_namespace' => true,\n        'single_line_comment_style' => true,\n        'single_line_throw' => true,\n        'single_quote' => true,\n        'single_trait_insert_per_statement' => true,\n        'space_after_semicolon' => true,\n        'standardize_increment' => true,\n        'standardize_not_equals' => true,\n        'strict_comparison' => true,\n        'ternary_operator_spaces' => true,\n        'trailing_comma_in_multiline' => ['elements' => ['arrays']],\n        'trim_array_spaces' => true,\n        'unary_operator_spaces' => true,\n        'whitespace_after_comma_in_array' => true,\n        'PedroTroller/exceptions_punctuation' => true,\n        'PedroTroller/line_break_between_method_arguments' => [\n            'max-args' => 5,\n        ],\n        'PedroTroller/useless_code_after_return' => true,\n    ])\n;\n"
        },
        {
          "name": ".php_cs",
          "type": "blob",
          "size": 6.6376953125,
          "content": "<?php\n\n$finder = PhpCsFixer\\Finder::create()\n    ->in(__DIR__.'/src')\n    ->in(__DIR__.'/tests')\n;\n\nreturn PhpCsFixer\\Config::create()\n    ->setFinder($finder)\n    ->setRiskyAllowed(true)\n    ->registerCustomFixers(new PedroTroller\\CS\\Fixer\\Fixers())\n    ->setRules([\n        '@PHP71Migration' => true,\n        '@PSR1' => true,\n        '@PSR2' => true,\n        'array_indentation' => true,\n        'array_syntax' => [ 'syntax' => 'short' ],\n        'align_multiline_comment' => [\n            'comment_type' => 'all_multiline',\n        ],\n        'array_syntax' => [\n            'syntax' => 'short',\n        ],\n        'binary_operator_spaces' => true,\n        'blank_line_after_opening_tag' => true,\n        'blank_line_before_statement' => true,\n        'cast_spaces' => true,\n        'class_attributes_separation' => true,\n        'combine_consecutive_issets' => true,\n        'combine_consecutive_unsets' => true,\n        'compact_nullable_typehint' => true,\n        'concat_space' => ['spacing' => 'one'],\n        'date_time_immutable' => true,\n        'declare_equal_normalize' => [\n            'space' => 'single',\n        ],\n        'dir_constant' => true,\n        'ereg_to_preg' => true,\n        'escape_implicit_backslashes' => true,\n        'explicit_indirect_variable' => true,\n        'explicit_string_variable' => true,\n        'fopen_flag_order' => true,\n        'fopen_flags' => true,\n        'fully_qualified_strict_types' => true,\n        'function_to_constant' => [\n            'functions' => [\n                'get_class',\n                'php_sapi_name',\n                'phpversion',\n                'pi',\n            ]\n        ],\n        'function_typehint_space' => true,\n        'global_namespace_import' => true,\n        'heredoc_to_nowdoc' => true,\n        'implode_call' => true,\n        'include' => true,\n        'is_null' => true,\n        'linebreak_after_opening_tag' => true,\n        'list_syntax' => [\n            'syntax' => 'long',\n        ],\n        'logical_operators' => true,\n        'lowercase_cast' => true,\n        'lowercase_static_reference' => true,\n        'magic_constant_casing' => true,\n        'magic_method_casing' => true,\n        'method_chaining_indentation' => true,\n        'modernize_types_casting' => true,\n        'multiline_comment_opening_closing' => true,\n        'multiline_whitespace_before_semicolons' => [\n            'strategy' => 'new_line_for_chained_calls',\n        ],\n        'native_constant_invocation' => [\n            'include' => ['@internal'],\n            'scope' => 'all',\n        ],\n        'native_function_casing' => true,\n        'native_function_invocation' => true,\n        'native_function_type_declaration_casing' => true,\n        'new_with_braces' => true,\n        'no_alternative_syntax' => true,\n        'no_binary_string' => true,\n        'no_blank_lines_after_class_opening' => true,\n        'no_blank_lines_after_phpdoc' => true,\n        'no_empty_comment' => true,\n        'no_empty_phpdoc' => true,\n        'no_empty_statement' => true,\n        'no_extra_blank_lines' => [\n            'tokens' => ['extra']\n        ],\n        'no_leading_import_slash' => true,\n        'no_leading_namespace_whitespace' => true,\n        'no_mixed_echo_print' => true,\n        'no_multiline_whitespace_around_double_arrow' => true,\n        'no_short_bool_cast' => true,\n        'no_short_echo_tag' => true,\n        'no_singleline_whitespace_before_semicolons' => true,\n        'no_spaces_around_offset' => [\n            'positions' => ['inside', 'outside'],\n        ],\n        'no_superfluous_elseif' => true,\n        'no_superfluous_phpdoc_tags' => false,\n        'no_trailing_comma_in_list_call' => true,\n        'no_trailing_comma_in_singleline_array' => true,\n        'no_unneeded_curly_braces' => true,\n        'no_unused_imports' => true,\n        'no_useless_else' => true,\n        'no_useless_return' => true,\n        'no_whitespace_before_comma_in_array' => true,\n        'no_whitespace_in_blank_line' => true,\n        'normalize_index_brace' => true,\n        'object_operator_without_whitespace' => true,\n        'ordered_class_elements' => [\n            'order' => [\n                'use_trait',\n                'constant_public',\n                'constant_protected',\n                'constant_private',\n                'property_public',\n                'property_protected',\n                'property_private',\n                'construct',\n                'destruct',\n                'magic',\n                'phpunit',\n                'method_public',\n                'method_protected',\n                'method_private'\n            ],\n        ],\n        'php_unit_construct' => [\n            'assertions' => [\n                'assertEquals',\n                'assertSame',\n                'assertNotEquals',\n                'assertNotSame'\n            ]\n        ],\n        // Check on other phpunit stuff\n        'phpdoc_align' => [\n            'align' => 'vertical'\n        ],\n        'phpdoc_indent' => true,\n        'phpdoc_inline_tag' => true,\n        'phpdoc_no_access' => true,\n        'phpdoc_no_alias_tag' => true,\n        'phpdoc_no_empty_return' => false,\n        'phpdoc_no_package' => true,\n        'phpdoc_no_useless_inheritdoc' => true,\n        'phpdoc_order' => true,\n        'phpdoc_return_self_reference' => true,\n        'phpdoc_scalar' => true,\n        'phpdoc_separation' => true,\n        'phpdoc_single_line_var_spacing' => true,\n        'phpdoc_summary' => true,\n        'phpdoc_to_comment' => true,\n        'phpdoc_trim' => true,\n        'phpdoc_trim_consecutive_blank_line_separation' => true,\n        'phpdoc_types' => true,\n        'phpdoc_types_order' => true,\n        'phpdoc_var_annotation_correct_order' => true,\n        'phpdoc_var_without_name' => true,\n        'psr4' => true,\n        'return_assignment' => true,\n        'return_type_declaration' => true,\n        'semicolon_after_instruction' => true,\n        'short_scalar_cast' => true,\n        'single_blank_line_before_namespace' => true,\n        'single_line_comment_style' => true,\n        'single_line_throw' => true,\n        'single_quote' => true,\n        'single_trait_insert_per_statement' => true,\n        'space_after_semicolon' => true,\n        'standardize_increment' => true,\n        'standardize_not_equals' => true,\n        'strict_comparison' => true,\n        'ternary_operator_spaces' => true,\n        'trailing_comma_in_multiline_array' => true,\n        'trim_array_spaces' => true,\n        'unary_operator_spaces' => true,\n        'whitespace_after_comma_in_array' => true,\n        'PedroTroller/exceptions_punctuation' => true,\n        'PedroTroller/line_break_between_method_arguments' => [\n            'max-args' => 5,\n        ],\n        'PedroTroller/useless_code_after_return' => true,\n    ])\n;\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 2.1962890625,
          "content": "## 1.1.0\n\n* Add bypass-proxy-for option added in 0.12.3 (see [#302](https://github.com/KnpLabs/snappy/pull/302))\n* Fix symfony/process 4.2 deprecation notice (see [#331](https://github.com/KnpLabs/snappy/pull/331))\n* Drop suppor for unmaintained PHP versions (5.6 and 7.0, see [#337](https://github.com/KnpLabs/snappy/pull/337)\n* Drop support for unmaintained symfony/process versions (see [#337](https://github.com/KnpLabs/snappy/pull/337))\n* Pass on error code in checkProcessStatus (see [#328](https://github.com/KnpLabs/snappy/pull/328))\n\nThanks to @joshpme, @drigani, @fbourigault, @NiR- and @leimd for their work.\n\n## 1.0.4\n\n* Support cache-dir for Image generation  (see [#297](https://github.com/KnpLabs/snappy/pull/297)).\n\nThank you @dimitrilahaye for their work.\n\n## 1.0.3\n\n* Add support to Symfony 4 ([#290](https://github.com/KnpLabs/snappy/pull/290))\n* Use PHPUnit\\Framework\\TestCase instead of PHPUnit_Framework_TestCase ([#287](https://github.com/KnpLabs/snappy/pull/287))\n\nCredits go to @michaelperrin and @carusogabriel.\n\n## 1.0.2\n\n*A BC break was introduced in v1.0.0: using objects castable to string with a cyclic dependency to the generator \nas option value would break `setOption()` / `setOptions()` methods.* \n\n* Use logger context rather than `var_export` to log option values (see [#283](https://github.com/KnpLabs/snappy/pull/283))\n\nCredits go to: @barryvdh.\n\n## 1.0.1\n\n* Fix `Call to a member function debug() on null` logger (see [#270](https://github.com/KnpLabs/snappy/pull/270))\n\n## 1.0.0\n\n* Don't check if it's a file when the path is bigger than `PHP_MAXPATHLEN` (see [#224](https://github.com/KnpLabs/snappy/pull/224))\n* Pass `image-dpi` and `image-quality` options as integer (see [#251](https://github.com/KnpLabs/snappy/pull/251))\n* Improve documentation readability (see [#255](https://github.com/KnpLabs/snappy/pull/255))\n* Add logging capabilities to generators (see [#264](https://github.com/KnpLabs/snappy/pull/264))\n* Add some more frequent questions/issues to the FAQ (see [#263](https://github.com/KnpLabs/snappy/pull/263), [#265](https://github.com/KnpLabs/snappy/pull/265), [#266](https://github.com/KnpLabs/snappy/pull/266))\n\nCredits go to: @wouterbulten, @martinssipenko, @Herz3h, @akovalyov, @NiR-.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 2.6337890625,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\n## Contact\nIf you have any questions or feedback, [please ping us](https://twitter.com/KNPLabs) !\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.546875,
          "content": "\n# Thanks for contributing!\n\n:+1: First of all, thanks for contributing! The team is happy to help if you\nhave any questions. Have a look to this contributing guide and also to the\n[FAQ section](https://github.com/KnpLabs/snappy/blob/master/doc/faq.md). :feet:\nThe following is a set of guidelines for contributing to Snappy, which is hosted\nby the [KNP Labs Organization](https://github.com/KnpLabs) on GitHub. These are\nmostly guidelines, not rules. Use your best judgment, and feel free to propose\nchanges to this document opening a pull request. :shipit:\n\n## Code of Conduct\n\nThis project and everyone participating in it is governed by the following\n[Code of Conduct](https://github.com/KnpLabs/snappy/blob/master/CODE_OF_CONDUCT.md).\nBy participating, you are expected to uphold this code.\n\n## Reporting a bug\n\n#### Before submitting a bug\n- Verify that you are using the latest Snappy version;\n- Double-check the [documentation](https://github.com/KnpLabs/snappy/blob/master/README.md)\nand the [FAQ section](https://github.com/KnpLabs/snappy/blob/master/doc/faq.md)\nto see if you're not misusing the library;\n- Check if the issue is a Snappy issue and not a wkhtmltopdf issue (see [how to](#how-to-verify-if-the-issue-is-a-snappy-issue));\n- Check if the issue has already been reported. If it has and the issue is still\nopen, add a comment to the existing issue instead of opening a new one.\n\n##### How to verify if the issue is a Snappy issue\nIn order to verify that the issue is a Snappy issue and not a wkhtmltopdf issue,\nsimply copy paste the command displayed in the error message in your command prompt.\nIf the same error appears on the command line, then it's a wkhtmltopdf issue and\nyou'll have more chance to resolve your issue [there](https://github.com/wkhtmltopdf/wkhtmltopdf/issues).\n\n#### How to submit a (good) bug report\nTo report a Snappy bug please open a [GitHub issue](https://github.com/KnpLabs/snappy/issues)\nfollowing the rules below.\n\n- Use a clear and descriptive title for the issue to identify the problem;\n- Describe the steps needed to reproduce the bug including a code example when\npossible;\n- Give as much detail as possible about your environment (OS, PHP version,\nSnappy configuration, ...);\n\n## Suggesting enhancements\n\nTo suggest Snappy enhancements please open a [GitHub issue](https://github.com/KnpLabs/snappy/issues)\nfollowing the rules below.\n\n- Use a clear and descriptive title for the issue to identify the problem;\n- Provide a step-by-step description of the suggested enhancement in as many\ndetails as possible;\n- Explain why this enhancement would be useful with one or more use cases;\n\n## Contributing to the code\n\nA pull request, is the best way to provide a bug fix or to propose enhancements to Snappy.\n\nWhen submitting a pull request please be sure to follow the same rules described\nabove in [Reporting a bug](#reporting-a-bug) and [Suggesting enhancements](suggesting-enhancements)\nsections depending on the nature of your change.\n\n> Before starting to work on a large change please open an issue to ask the\nmaintainers if they are fine with it (no one likes to work for nothing!).\n\n1. Fork the repository\n2. Once the repository has been forked clone it locally\n```\ngit clone git@github.com:USERNAME/snappy.git\n```\n3. Create a new branch\n```\ngit checkout -b BRANCH_NAME master\n```\n4. Code!!!\n5. Add/Update tests (if needed)\n6. Update documentation (if needed)\n7. Run the tests and make sure that they are passing\n```\ncomposer unit-tests\ncomposer static-analysis\n```\n8. Squash your commits\n9. Rebase your branch on master and fix merge conflicts\n10. Open the pull request\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0517578125,
          "content": "The MIT License\n\nCopyright (c) 2010 Matthieu Bontemps\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.375,
          "content": "# Snappy\n\n![Build Status](https://github.com/KnpLabs/snappy/actions/workflows/build.yaml/badge.svg)\n[![AppVeyor CI Build Status](https://ci.appveyor.com/api/projects/status/github/KnpLabs/snappy?branch=master&svg=true)](https://ci.appveyor.com/project/NiR-/snappy)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/KnpLabs/Gaufrette/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/KnpLabs/Gaufrette/?branch=master)\n\nSnappy is a PHP library allowing thumbnail, snapshot or PDF generation from a url or a html page.\nIt uses the excellent webkit-based [wkhtmltopdf and wkhtmltoimage](http://wkhtmltopdf.org/)\navailable on OSX, linux, windows.\n\nYou will have to download wkhtmltopdf `0.12.x` in order to use Snappy.\n\nPlease, check [FAQ](doc/faq.md) before opening a new issue. Snappy is a tiny wrapper around wkhtmltox, so lots of issues are already answered, resolved or wkhtmltox ones.\n\nFollowing integrations are available:\n* [`knplabs/knp-snappy-bundle`](https://github.com/KnpLabs/KnpSnappyBundle), for Symfony\n* [`barryvdh/laravel-snappy`](https://github.com/barryvdh/laravel-snappy), for Laravel\n* [`mvlabs/mvlabs-snappy`](https://github.com/mvlabs/MvlabsSnappy), for Zend Framework\n\n## Installation using [Composer](http://getcomposer.org/)\n\n```bash\ncomposer require knplabs/knp-snappy\n```\n\n## Usage\n\n### Initialization\n```php\n<?php\n\nrequire __DIR__ . '/vendor/autoload.php';\n\nuse Knp\\Snappy\\Pdf;\n\n$snappy = new Pdf('/usr/local/bin/wkhtmltopdf');\n\n// or you can do it in two steps\n$snappy = new Pdf();\n$snappy->setBinary('/usr/local/bin/wkhtmltopdf');\n```\n\n### Display the pdf in the browser\n\n```php\n$snappy = new Pdf('/usr/local/bin/wkhtmltopdf');\nheader('Content-Type: application/pdf');\necho $snappy->getOutput('http://www.github.com');\n```\n\n### Download the pdf from the browser\n\n```php\n$snappy = new Pdf('/usr/local/bin/wkhtmltopdf');\nheader('Content-Type: application/pdf');\nheader('Content-Disposition: attachment; filename=\"file.pdf\"');\necho $snappy->getOutput('http://www.github.com');\n```\n\n### Merge multiple urls into one pdf\n```php\n$snappy = new Pdf('/usr/local/bin/wkhtmltopdf');\nheader('Content-Type: application/pdf');\nheader('Content-Disposition: attachment; filename=\"file.pdf\"');\necho $snappy->getOutput(array('http://www.github.com','http://www.knplabs.com','http://www.php.net'));\n```\n\n### Generate local pdf file\n```php\n$snappy = new Pdf('/usr/local/bin/wkhtmltopdf');\n$snappy->generateFromHtml('<h1>Bill</h1><p>You owe me money, dude.</p>', '/tmp/bill-123.pdf');\n```\n\n### Pass options to snappy\n```php\n// Type wkhtmltopdf -H to see the list of options\n$snappy = new Pdf('/usr/local/bin/wkhtmltopdf');\n$snappy->setOption('disable-javascript', true);\n$snappy->setOption('no-background', true);\n$snappy->setOption('allow', array('/path1', '/path2'));\n$snappy->setOption('cookie', array('key' => 'value', 'key2' => 'value2'));\n$snappy->setOption('post', array('key' => 'value'));\n$snappy->setOption('cover', 'pathToCover.html');\n// .. or pass a cover as html\n$snappy->setOption('cover', '<h1>Bill cover</h1>');\n$snappy->setOption('toc', true);\n$snappy->setOption('cache-dir', '/path/to/cache/dir');\n```\n\n### Reset options\nOptions can be reset to their initial values with `resetOptions()` method.\n```php\n$snappy = new Pdf('/usr/local/bin/wkhtmltopdf');\n// Set some options\n$snappy->setOption('copies' => 4);\n// ..\n// Reset options\n$snappy->resetOptions();\n```\n\n## wkhtmltopdf binary as composer dependencies\n\nIf you want to download wkhtmltopdf and wkhtmltoimage with composer you add to `composer.json`:\n\n```bash\ncomposer require h4cc/wkhtmltopdf-i386 0.12.x\ncomposer require h4cc/wkhtmltoimage-i386 0.12.x\n```\n\nor this if you are in 64 bit based system:\n\n```bash\ncomposer require h4cc/wkhtmltopdf-amd64 0.12.x\ncomposer require h4cc/wkhtmltoimage-amd64 0.12.x\n```\n\nAnd then you can use it\n\n```php\n<?php\n\nuse Knp\\Snappy\\Pdf;\n\n$myProjectDirectory = '/path/to/my/project';\n\n$snappy = new Pdf($myProjectDirectory . '/vendor/h4cc/wkhtmltopdf-i386/bin/wkhtmltopdf-i386');\n\n// or\n\n$snappy = new Pdf($myProjectDirectory . '/vendor/h4cc/wkhtmltopdf-amd64/bin/wkhtmltopdf-amd64');\n```\n\n*N.B.* These static binaries are extracted from  [Debian7 packages](https://github.com/h4cc/wkhtmltopdf-amd64/issues/13#issuecomment-150948179), so it might not be compatible with non-debian based linux distros\n## Some use cases\n\nIf you want to generate table of contents and you want to use custom XSL stylesheet, do the following:\n\n```php\n<?php\n$snappy = new Pdf('/path/to/binary');\n\n$snappy->setOption('toc', true);\n$snappy->setOption('xsl-style-sheet', 'http://path/to/stylesheet.xsl') //or local file;\n\n$snappy->generateFromHtml('<p>Some content</p>', 'test.pdf');\n```\n\n## Bugs & Support\n\nIf you found a bug please fill a detailed issue with all the following points.\nIf you need some help, please at least provide a complete reproducer so we could help you based on facts rather than assumptions.\n\n* OS and its version\n* Wkhtmltopdf, its version and how you installed it\n* A complete reproducer with relevant php and html/css/js code\n\nIf your reproducer is big, please try to shrink it. It will help everyone to narrow the bug.\n\n## Maintainers\n\nKNPLabs is looking for maintainers ([see why](https://knplabs.com/en/blog/news-for-our-foss-projects-maintenance)).\n\nIf you are interested, feel free to open a PR to ask to be added as a maintainer.\n\nWe’ll be glad to hear from you :)\n\n## Credits\n\nSnappy has been originally developed by the [KnpLabs](http://knplabs.com) team.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.2939453125,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 1.4.x   | :white_check_mark: |\n| 1.3.x   | :x:                |\n\n## Reporting a Vulnerability\n\nYou can send an email to <security@knplabs.com> if you spot any security issue in this library.\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 2.3056640625,
          "content": "build: false\nplatform: x64\nclone_folder:  c:\\projects\\snappy\n\nenvironment:\n  matrix:\n    - dependencies: lowest\n      php_ver_target: 7.1\n    - dependencies: current\n      php_ver_target: 7.2\n    - dependencies: highest\n      php_ver_target: 7.3\n\ncache:\n  - composer.phar\n  - c:\\ProgramData\\chocolatey\\bin -> appveyor.yml\n  - c:\\ProgramData\\chocolatey\\lib -> appveyor.yml\n  - c:\\php -> appveyor.yml\n\ninit:\n  - SET PATH=c:\\Program Files\\OpenSSL;c:\\tools\\php;%PATH%\n  - SET COMPOSER_NO_INTERACTION=1\n  - SET PHP=1\n  - SET ANSICON=121x90 (121x90)\n\ninstall:\n  - IF EXIST c:\\tools\\php (SET PHP=0)\n  - ps: Set-Service wuauserv -StartupType Manual\n  # In order to be able to list all the avialable PHP packages we have to\n  # downgrade Chocolatey to version 0.10.13.\n  # See https://github.com/chocolatey/choco/issues/1843\n  - ps: choco install chocolatey -y --version 0.10.13 --allow-downgrade --force\n  - ps: choco search php --exact --all-versions -r\n  - ps: echo ((choco search php --exact --all-versions -r | select-string -pattern $env:php_ver_target | sort { [version]($_ -split '\\|' | select -last 1) } -Descending | Select-Object -first 1) -replace '[php|]','')\n  - ps: appveyor-retry cinst php --params '\"\"/InstallDir:c:\\tools\\php\"\"' --ignore-checksums -y --force --version ((choco search php --exact --all-versions -r | select-string -pattern $env:php_ver_target | sort { [version]($_ -split '\\|' | select -last 1) } -Descending | Select-Object -first 1) -replace '[php|]','')\n  - cd c:\\tools\\php\n  - IF %PHP%==1 copy php.ini-production php.ini /Y\n  - IF %PHP%==1 echo date.timezone=\"UTC\" >> php.ini\n  - IF %PHP%==1 echo extension_dir=ext >> php.ini\n  - IF %PHP%==1 echo extension=php_openssl.dll >> php.ini\n  - IF %PHP%==1 echo extension=php_mbstring.dll >> php.ini\n  - IF %PHP%==1 echo extension=php_fileinfo.dll >> php.ini\n  - IF %PHP%==1 echo @php %%~dp0composer.phar %%* > composer.bat\n  - appveyor-retry appveyor DownloadFile https://getcomposer.org/composer.phar\n  - cd c:\\projects\\snappy\n  - IF %dependencies%==lowest appveyor-retry composer update --prefer-lowest --no-progress --profile -n\n  - IF %dependencies%==current appveyor-retry composer install --no-progress --profile\n  - IF %dependencies%==highest appveyor-retry composer update --no-progress --profile -n\n  - composer show\n\ntest_script:\n  - cd c:\\projects\\snappy\n  - vendor/bin/phpunit\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.5087890625,
          "content": "{\n    \"name\": \"knplabs/knp-snappy\",\n    \"type\": \"library\",\n    \"description\": \"PHP library allowing thumbnail, snapshot or PDF generation from a url or a html page. Wrapper for wkhtmltopdf/wkhtmltoimage.\",\n    \"keywords\": [\"pdf\", \"thumbnail\", \"snapshot\", \"knplabs\", \"knp\", \"wkhtmltopdf\"],\n    \"homepage\": \"http://github.com/KnpLabs/snappy\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"KNP Labs Team\",\n            \"homepage\": \"http://knplabs.com\"\n        },\n        {\n            \"name\": \"Symfony Community\",\n            \"homepage\": \"http://github.com/KnpLabs/snappy/contributors\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=8.1\",\n        \"symfony/process\": \"^5.0||^6.0||^7.0\",\n        \"psr/log\": \"^2.0||^3.0\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^8.5\",\n        \"phpstan/phpstan\": \"^1.0.0\",\n        \"phpstan/phpstan-phpunit\": \"^1.0.0\",\n        \"friendsofphp/php-cs-fixer\": \"^3.0\",\n        \"pedrotroller/php-cs-custom-fixer\": \"^2.19\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Knp\\\\Snappy\\\\\": \"src/Knp/Snappy\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Tests\\\\\": \"tests/\"\n        }\n    },\n    \"scripts\": {\n        \"unit-tests\": \"vendor/bin/phpunit\",\n        \"static-analysis\": \"vendor/bin/phpstan analyse --ansi\",\n        \"check-cs\": \"vendor/bin/php-cs-fixer fix --diff --dry-run --verbose\",\n        \"fix-cs\": \"vendor/bin/php-cs-fixer fix --verbose\"\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"1.x-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.45703125,
          "content": "includes:\n    - vendor/phpstan/phpstan-phpunit/extension.neon\n\nparameters:\n    level: 8\n    paths:\n        - src/\n        - tests/\n    inferPrivatePropertyTypeFromConstructor: true\n    reportUnmatchedIgnoredErrors: false\n    checkMissingIterableValueType: false\n    ignoreErrors:\n        - \"#^Call to an undefined static method #\"\n        - \"#^Parameter \\\\#1 \\\\$command of class Symfony\\\\\\\\Component\\\\\\\\Process\\\\\\\\Process constructor expects array, string given\\\\.$#\"\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.513671875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\"\n         bootstrap=\"vendor/autoload.php\"\n>\n    <testsuites>\n        <testsuite name=\"Snappy Test Suite\">\n            <directory>./tests</directory>\n        </testsuite>\n    </testsuites>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}