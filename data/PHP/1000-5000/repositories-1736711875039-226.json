{
  "metadata": {
    "timestamp": 1736711875039,
    "page": 226,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thiagoalessio/tesseract-ocr-for-php",
      "stars": 2907,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 0.275390625,
          "content": "---\nbuild: false\n\ninstall:\n  - ps: Set-Service wuauserv -StartupType Manual\n  - choco install php\n  - choco install capture2text --version 3.9\n  - choco install composer\n  - refreshenv\n  - cd %APPVEYOR_BUILD_FOLDER%\n  - composer install\n\ntest_script:\n  - php tests\\run.php unit e2e\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1220703125,
          "content": "/.gitattributes export-ignore\n/.github export-ignore\n/.gitignore export-ignore\n/phpcs.xml export-ignore\n/tests export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.048828125,
          "content": "composer.lock\ncoverage-report\ncoverage.xml\nvendor\n"
        },
        {
          "name": "MIT-LICENSE",
          "type": "blob",
          "size": 1.0458984375,
          "content": "Copyright (c) 2012-2021 Thiago Alessio Pereira\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.3193359375,
          "content": "<img src=\"https://thiagoalessio.github.io/tesseract-ocr-for-php/images/logo.png\" alt=\"Tesseract OCR for PHP\" align=\"right\" width=\"320px\"/>\n\n# Tesseract OCR for PHP\n\nA wrapper to work with Tesseract OCR inside PHP.\n\n[![CI][ci_badge]][ci]\n[![AppVeyor][appveyor_badge]][appveyor]\n[![Codacy][codacy_badge]][codacy]\n[![Test Coverage][test_coverage_badge]][test_coverage]\n<br/>\n[![Latest Stable Version][stable_version_badge]][packagist]\n[![Total Downloads][total_downloads_badge]][packagist]\n[![Monthly Downloads][monthly_downloads_badge]][packagist]\n\n## Installation\n\nVia [Composer][]:\n\n    $ composer require thiagoalessio/tesseract_ocr\n\n:bangbang: **This library depends on [Tesseract OCR][], version _3.02_ or later.**\n\n<br/>\n\n### ![][windows_icon] Note for Windows users\n\nThere are [many ways][tesseract_installation_on_windows] to install\n[Tesseract OCR][] on your system, but if you just want something quick to\nget up and running, I recommend installing the [Capture2Text][] package with\n[Chocolatey][].\n\n    choco install capture2text --version 3.9\n\n:warning: Recent versions of [Capture2Text][] stopped shipping the `tesseract` binary.\n\n<br/>\n\n### ![][macos_icon] Note for macOS users\n\nWith [MacPorts][] you can install support for individual languages, like so:\n\n    $ sudo port install tesseract-<langcode>\n\nBut that is not possible with [Homebrew][]. It comes only with **English** support\nby default, so if you intend to use it for other language, the quickest solution\nis to install them all:\n\n    $ brew install tesseract tesseract-lang\n\n<br/>\n\n## Usage\n\n### Basic usage\n\n<img align=\"right\" width=\"50%\" title=\"The quick brown fox jumps over the lazy dog.\" src=\"./tests/EndToEnd/images/text.png\"/>\n\n```php\nuse thiagoalessio\\TesseractOCR\\TesseractOCR;\necho (new TesseractOCR('text.png'))\n    ->run();\n```\n\n```\nThe quick brown fox\njumps over\nthe lazy dog.\n```\n\n<br/>\n\n### Other languages\n\n<img align=\"right\" width=\"50%\" title=\"Bülowstraße\" src=\"./tests/EndToEnd/images/german.png\"/>\n\n```php\nuse thiagoalessio\\TesseractOCR\\TesseractOCR;\necho (new TesseractOCR('german.png'))\n    ->lang('deu')\n    ->run();\n```\n\n```\nBülowstraße\n```\n\n<br/>\n\n### Multiple languages\n\n<img align=\"right\" width=\"50%\" title=\"I eat すし y Pollo\" src=\"./tests/EndToEnd/images/mixed-languages.png\"/>\n\n```php\nuse thiagoalessio\\TesseractOCR\\TesseractOCR;\necho (new TesseractOCR('mixed-languages.png'))\n    ->lang('eng', 'jpn', 'spa')\n    ->run();\n```\n\n```\nI eat すし y Pollo\n```\n\n<br/>\n\n### Inducing recognition\n\n<img align=\"right\" width=\"50%\" title=\"8055\" src=\"./tests/EndToEnd/images/8055.png\"/>\n\n```php\nuse thiagoalessio\\TesseractOCR\\TesseractOCR;\necho (new TesseractOCR('8055.png'))\n    ->allowlist(range('A', 'Z'))\n    ->run();\n```\n\n```\nBOSS\n```\n\n<br/>\n\n### Breaking CAPTCHAs\n\nYes, I know some of you might want to use this library for the *noble* purpose\nof breaking CAPTCHAs, so please take a look at this comment:\n\n<https://github.com/thiagoalessio/tesseract-ocr-for-php/issues/91#issuecomment-342290510>\n\n## API\n\n### run\n\nExecutes a `tesseract` command, optionally receiving an integer as `timeout`,\nin case you experience stalled tesseract processes.\n\n```php\n$ocr = new TesseractOCR();\n$ocr->run();\n```\n```php\n$ocr = new TesseractOCR();\n$timeout = 500;\n$ocr->run($timeout);\n```\n\n### image\n\nDefine the path of an image to be recognized by `tesseract`.\n\n```php\n$ocr = new TesseractOCR();\n$ocr->image('/path/to/image.png');\n$ocr->run();\n```\n\n### imageData\n\nSet the image to be recognized by `tesseract` from a string, with its size.\nThis can be useful when dealing with files that are already loaded in memory.\nYou can easily retrieve the image data and size of an image object :\n```php\n//Using Imagick\n$data = $img->getImageBlob();\n$size = $img->getImageLength();\n//Using GD\nob_start();\n// Note that you can use any format supported by tesseract\nimagepng($img, null, 0);\n$size = ob_get_length();\n$data = ob_get_clean();\n\n$ocr = new TesseractOCR();\n$ocr->imageData($data, $size);\n$ocr->run();\n```\n\n### executable\n\nDefine a custom location of the `tesseract` executable,\nif by any reason it is not present in the `$PATH`.\n\n```php\necho (new TesseractOCR('img.png'))\n    ->executable('/path/to/tesseract')\n    ->run();\n```\n\n### version\n\nReturns the current version of `tesseract`.\n\n```php\necho (new TesseractOCR())->version();\n```\n\n### availableLanguages\n\nReturns a list of available languages/scripts.\n\n```php\nforeach((new TesseractOCR())->availableLanguages() as $lang) echo $lang;\n```\n\n__More info:__ <https://github.com/tesseract-ocr/tesseract/blob/master/doc/tesseract.1.asc#languages-and-scripts>\n\n### tessdataDir\n\nSpecify a custom location for the tessdata directory.\n\n```php\necho (new TesseractOCR('img.png'))\n    ->tessdataDir('/path')\n    ->run();\n```\n\n### userWords\n\nSpecify the location of user words file.\n\nThis is a plain text file containing a list of words that you want to be\nconsidered as a normal dictionary words by `tesseract`.\n\nUseful when dealing with contents that contain technical terminology, jargon,\netc.\n\n```\n$ cat /path/to/user-words.txt\nfoo\nbar\n```\n\n```php\necho (new TesseractOCR('img.png'))\n    ->userWords('/path/to/user-words.txt')\n    ->run();\n```\n\n### userPatterns\n\nSpecify the location of user patterns file.\n\nIf the contents you are dealing with have known patterns, this option can help\na lot tesseract's recognition accuracy.\n\n```\n$ cat /path/to/user-patterns.txt'\n1-\\d\\d\\d-GOOG-441\nwww.\\n\\\\\\*.com\n```\n\n```php\necho (new TesseractOCR('img.png'))\n    ->userPatterns('/path/to/user-patterns.txt')\n    ->run();\n```\n\n### lang\n\nDefine one or more languages to be used during the recognition.\nA complete list of available languages can be found at:\n<https://github.com/tesseract-ocr/tesseract/blob/master/doc/tesseract.1.asc#languages>\n\n__Tip from [@daijiale][]:__ Use the combination `->lang('chi_sim', 'chi_tra')`\nfor proper recognition of Chinese.\n\n```php\n echo (new TesseractOCR('img.png'))\n     ->lang('lang1', 'lang2', 'lang3')\n     ->run();\n```\n\n### psm\n\nSpecify the Page Segmentation Method, which instructs `tesseract` how to\ninterpret the given image.\n\n__More info:__ <https://github.com/tesseract-ocr/tesseract/wiki/ImproveQuality#page-segmentation-method>\n\n```php\necho (new TesseractOCR('img.png'))\n    ->psm(6)\n    ->run();\n```\n\n### oem\n\nSpecify the OCR Engine Mode. (see `tesseract --help-oem`)\n\n```php\necho (new TesseractOCR('img.png'))\n    ->oem(2)\n    ->run();\n```\n\n### dpi\n\nSpecify the image DPI. It is useful if your image does not contain this information in its metadata.\n\n```php\necho (new TesseractOCR('img.png'))\n    ->dpi(300)\n    ->run();\n```\n\n### allowlist\n\nThis is a shortcut for `->config('tessedit_char_whitelist', 'abcdef....')`.\n\n```php\necho (new TesseractOCR('img.png'))\n    ->allowlist(range('a', 'z'), range(0, 9), '-_@')\n    ->run();\n```\n\n### configFile\n\nSpecify a config file to be used. It can either be the path to your own\nconfig file or the name of one of the predefined config files:\n<https://github.com/tesseract-ocr/tesseract/tree/master/tessdata/configs>\n\n```php\necho (new TesseractOCR('img.png'))\n    ->configFile('hocr')\n    ->run();\n```\n\n### setOutputFile\n\nSpecify an Outputfile to be used. Be aware: If you set an outputfile then\nthe option `withoutTempFiles` is ignored.\nTempfiles are written (and deleted) even if `withoutTempFiles = true`.\n\nIn combination with `configFile` you are able to get the `hocr`, `tsv` or\n`pdf` files.\n\n```php\necho (new TesseractOCR('img.png'))\n    ->configFile('pdf')\n    ->setOutputFile('/PATH_TO_MY_OUTPUTFILE/searchable.pdf')\n    ->run();\n```\n\n### digits\n\nShortcut for `->configFile('digits')`.\n\n```php\necho (new TesseractOCR('img.png'))\n    ->digits()\n    ->run();\n```\n\n### hocr\n\nShortcut for `->configFile('hocr')`.\n\n```php\necho (new TesseractOCR('img.png'))\n    ->hocr()\n    ->run();\n```\n\n### pdf\n\nShortcut for `->configFile('pdf')`.\n\n```php\necho (new TesseractOCR('img.png'))\n    ->pdf()\n    ->run();\n```\n\n### quiet\n\nShortcut for `->configFile('quiet')`.\n\n```php\necho (new TesseractOCR('img.png'))\n    ->quiet()\n    ->run();\n```\n\n### tsv\n\nShortcut for `->configFile('tsv')`.\n\n```php\necho (new TesseractOCR('img.png'))\n    ->tsv()\n    ->run();\n```\n\n### txt\n\nShortcut for `->configFile('txt')`.\n\n```php\necho (new TesseractOCR('img.png'))\n    ->txt()\n    ->run();\n```\n\n### tempDir\n\nDefine a custom directory to store temporary files generated by tesseract.\nMake sure the directory actually exists and the user running `php` is allowed\nto write in there.\n\n```php\necho (new TesseractOCR('img.png'))\n    ->tempDir('./my/custom/temp/dir')\n    ->run();\n```\n\n### withoutTempFiles\n\nSpecify that `tesseract` should output the recognized text without writing to temporary files.\nThe data is gathered from the standard output of `tesseract` instead.\n\n```php\necho (new TesseractOCR('img.png'))\n    ->withoutTempFiles()\n    ->run();\n```\n\n### Other options\n\nAny configuration option offered by Tesseract can be used like that:\n\n```php\necho (new TesseractOCR('img.png'))\n    ->config('config_var', 'value')\n    ->config('other_config_var', 'other value')\n    ->run();\n```\n\nOr like that:\n\n```php\necho (new TesseractOCR('img.png'))\n    ->configVar('value')\n    ->otherConfigVar('other value')\n    ->run();\n```\n\n__More info:__ <https://github.com/tesseract-ocr/tesseract/wiki/ControlParams>\n\n### Thread-limit\n\nSometimes, it may be useful to limit the number of threads that tesseract is\nallowed to use (e.g. in [this case](https://github.com/tesseract-ocr/tesseract/issues/898)).\nSet the maxmium number of threads as param for the `run` function:\n\n```php\necho (new TesseractOCR('img.png'))\n    ->threadLimit(1)\n    ->run();\n```\n\n## How to contribute\n\nYou can contribute to this project by:\n\n* Opening an [Issue][] if you found a bug or wish to propose a new feature;\n* Placing a [Pull Request][] with code that fix a bug, missing/wrong documentation\n  or implement a new feature;\n\nJust make sure you take a look at our [Code of Conduct][] and [Contributing][]\ninstructions.\n\n## License\n\ntesseract-ocr-for-php is released under the [MIT License][].\n\n\n<h2></h2><p align=\"center\"><sub>Made with <sub><a href=\"#\"><img src=\"https://thiagoalessio.github.io/tesseract-ocr-for-php/images/heart.svg\" alt=\"love\" width=\"14px\"/></a></sub> in Berlin</sub></p>\n\n[ci_badge]: https://github.com/thiagoalessio/tesseract-ocr-for-php/workflows/CI/badge.svg?event=push&branch=main\n[ci]: https://github.com/thiagoalessio/tesseract-ocr-for-php/actions?query=workflow%3ACI\n[appveyor_badge]: https://ci.appveyor.com/api/projects/status/xwy5ls0798iwcim3/branch/main?svg=true\n[appveyor]: https://ci.appveyor.com/project/thiagoalessio/tesseract-ocr-for-php/branch/main\n[codacy_badge]: https://app.codacy.com/project/badge/Grade/a81aa10012874f23a57df5b492d835f2\n[codacy]: https://app.codacy.com/gh/thiagoalessio/tesseract-ocr-for-php/dashboard\n[test_coverage_badge]: https://codecov.io/gh/thiagoalessio/tesseract-ocr-for-php/branch/main/graph/badge.svg?token=Y0VnrqiSIf\n[test_coverage]: https://codecov.io/gh/thiagoalessio/tesseract-ocr-for-php\n[stable_version_badge]: https://img.shields.io/packagist/v/thiagoalessio/tesseract_ocr.svg\n[packagist]: https://packagist.org/packages/thiagoalessio/tesseract_ocr\n[total_downloads_badge]: https://img.shields.io/packagist/dt/thiagoalessio/tesseract_ocr.svg\n[monthly_downloads_badge]: https://img.shields.io/packagist/dm/thiagoalessio/tesseract_ocr.svg\n[Tesseract OCR]: https://github.com/tesseract-ocr/tesseract\n[Composer]: http://getcomposer.org/\n[windows_icon]: https://thiagoalessio.github.io/tesseract-ocr-for-php/images/windows-18.svg\n[macos_icon]: https://thiagoalessio.github.io/tesseract-ocr-for-php/images/apple-18.svg\n[tesseract_installation_on_windows]: https://github.com/tesseract-ocr/tesseract/wiki#windows\n[Capture2Text]: https://chocolatey.org/packages/capture2text\n[Chocolatey]: https://chocolatey.org\n[MacPorts]: https://www.macports.org\n[Homebrew]: https://brew.sh\n[@daijiale]: https://github.com/daijiale\n[HOCR]: https://github.com/tesseract-ocr/tesseract/wiki/Command-Line-Usage#hocr-output\n[TSV]: https://github.com/tesseract-ocr/tesseract/wiki/Command-Line-Usage#tsv-output-currently-available-in-305-dev-in-master-branch-on-github\n[Issue]: https://github.com/thiagoalessio/tesseract-ocr-for-php/issues\n[Pull Request]: https://github.com/thiagoalessio/tesseract-ocr-for-php/pulls\n[Code of Conduct]: https://github.com/thiagoalessio/tesseract-ocr-for-php/blob/main/.github/CODE_OF_CONDUCT.md\n[Contributing]: https://github.com/thiagoalessio/tesseract-ocr-for-php/blob/main/.github/CONTRIBUTING.md\n[MIT License]: https://github.com/thiagoalessio/tesseract-ocr-for-php/blob/main/MIT-LICENSE\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.185546875,
          "content": "fixes:\n- \"/home/runner/work/tesseract-ocr-for-php/tesseract-ocr-for-php/::\"\n- \"/Users/runner/work/tesseract-ocr-for-php/tesseract-ocr-for-php/::\"\n- \"C:\\\\projects\\\\tesseract-ocr-for-php\\\\::\"\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.810546875,
          "content": "{\n\t\"name\": \"thiagoalessio/tesseract_ocr\",\n\t\"description\": \"A wrapper to work with Tesseract OCR inside PHP.\",\n\t\"version\": \"2.13.0\",\n\t\"type\": \"library\",\n\t\"keywords\": [\"Tesseract\", \"OCR\", \"text recognition\"],\n\t\"license\": \"MIT\",\n\t\"authors\": [\n\t\t{\n\t\t\t\"name\": \"thiagoalessio\",\n\t\t\t\"email\": \"thiagoalessio@me.com\"\n\t\t}\n\t],\n\t\"support\": {\n\t\t\"issues\": \"https://github.com/thiagoalessio/tesseract-ocr-for-php/issues\",\n\t\t\"irc\": \"irc://irc.freenode.net/tesseract-ocr-for-php\",\n\t\t\"source\": \"https://github.com/thiagoalessio/tesseract-ocr-for-php\"\n\t},\n\t\"require\": {\n\t\t\"php\": \"^5.5 || ^7.0 || ^8.0\"\n\t},\n\t\"require-dev\": {\n\t\t\"phpunit/php-code-coverage\": \"^2.2.4 || ^9.0.0\"\n\t},\n\t\"autoload\": {\n\t\t\"psr-4\": {\n\t\t\t\"thiagoalessio\\\\TesseractOCR\\\\\": \"src/\"\n\t\t}\n\t},\n\t\"autoload-dev\": {\n\t\t\"psr-4\": {\n\t\t\t\"thiagoalessio\\\\TesseractOCR\\\\Tests\\\\\": \"tests/\"\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "phpcs.xml",
          "type": "blob",
          "size": 0.4580078125,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\"MyStandard\">\n\t<rule ref=\"PSR2\">\n\t\t<exclude name=\"Generic.ControlStructures.InlineControlStructure.NotAllowed\"/>\n\t\t<exclude name=\"Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine\"/>\n\t\t<exclude name=\"Generic.WhiteSpace.DisallowTabIndent\"/>\n\t\t<exclude name=\"PSR1.Classes.ClassDeclaration.MultipleClasses\"/>\n\t\t<exclude name=\"PSR2.Classes.ClassDeclaration.OpenBraceNewLine\"/>\n\t\t<exclude name=\"Squiz\"/>\n\t</rule>\n</ruleset>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}