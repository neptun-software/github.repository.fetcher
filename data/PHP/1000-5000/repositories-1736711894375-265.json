{
  "metadata": {
    "timestamp": 1736711894375,
    "page": 265,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "symfony/polyfill",
      "stars": 2713,
      "defaultBranch": "1.x",
      "files": [
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.0400390625,
          "content": "aaaa1c99e3c9e40b26c9177a6d018d5a2aad8360\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.115234375,
          "content": ".php-cs-fixer.php\n.php-cs-fixer.cache\n.phpunit.result.cache\ncomposer.lock\nphpunit.xml\n.phpunit\nvendor/\n/tests/unicode\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 1.4775390625,
          "content": "<?php\n\n/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nif (!file_exists(__DIR__.'/src')) {\n    exit(0);\n}\n\n$fileHeaderComment = <<<'EOF'\nThis file is part of the Symfony package.\n\n(c) Fabien Potencier <fabien@symfony.com>\n\nFor the full copyright and license information, please view the LICENSE\nfile that was distributed with this source code.\nEOF;\n\nreturn (new PhpCsFixer\\Config())\n    ->setRules([\n        '@PHP71Migration' => true,\n        '@PHPUnit75Migration:risky' => true,\n        '@Symfony' => true,\n        '@Symfony:risky' => true,\n        'protected_to_private' => false,\n        'native_constant_invocation' => ['strict' => false],\n        'no_superfluous_phpdoc_tags' => ['remove_inheritdoc' => true],\n        'nullable_type_declaration_for_default_null_value' => ['use_nullable_type_declaration' => true],\n        'header_comment' => ['header' => $fileHeaderComment],\n    ])\n    ->setRiskyAllowed(true)\n    ->setFinder(\n        (new PhpCsFixer\\Finder())\n            ->in(__DIR__)\n            ->append([__FILE__])\n            ->exclude([\n                'src/Iconv/Resources',\n                'src/Intl/Icu/Resources',\n                'src/Intl/Idn/Resources',\n                'src/Mbstring/Resources',\n                'src/Intl/Normalizer/Resources',\n            ])\n    )\n    ->setCacheFile('.php-cs-fixer.cache')\n;\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 7.82421875,
          "content": "# 1.31.0\n\n  * Bump minimum PHP version to 7.2\n  * Polyfill `mb_trim`, `mb_ltrim` and `mb_rtrim`\n  * Polyfill `CURL_HTTP_VERSION_3(ONLY)` constants\n\n# 1.30.0\n\n  * Polyfill `array_find`, `array_find_key`, `array_any` and `array_all`\n  * Polyfill `mb_ucfirst` and `mb_lcfirst`\n  * Fix `mb_convert_encoding` to accept an array of strings\n  * Update nullable types for PHP 8.4\n\n# 1.29.0\n\n  * Fix the `ini_parse_quantity()` polyfill\n  * Add `str_increment` and `str_decrement` functions\n  * Add `SQLite3Exception` class\n\n# 1.28.0\n\n  * Polyfill `ldap_exop_sync()`\n  * Polyfill `ldap_connect_wallet()`\n  * Polyfill `stream_context_set_options()`\n  * Polyfill `odbc_connection_string_is_quoted()`\n  * Polyfill `odbc_connection_string_should_quote()`\n  * Polyfill `odbc_connection_string_quote()`\n  * Polyfill `ini_parse_quantity()`\n  * Polyfill `mb_str_pad()`\n  * Polyfill `#[\\Override]` attribute\n  * Use full case folding when using `MB_CASE_FOLD`\n  * Add `CURLStringFile` class introduced in PHP 8.1 (but only if PHP >= 7.4 is used)\n  * Add `Date*Exception/Error` classes introduced in PHP 8.3 for the Date/Time extension\n\n# 1.27.0\n\n  * Add PHP 8.3 polyfill for `json_validate()`\n  * Add polyfill for PHP 8.2's `Random` interfaces, exceptions and `Secure` engine\n  * Fix `IntlDateFormatter::formatObject()` signature\n\n# 1.26.0\n\n  * Add PHP 8.2 polyfill with SensitiveParameter, SensitiveParameterValue and AllowDynamicProperties\n  * Fix QQQQQ date format\n  * Fix passing null to `preg_split()`, throwing a deprecation on PHP 8.1\n\n# 1.25.0\n\n  * Add `PhpToken` to the PHP 8.0 polyfill when the tokenizer extension is enabled\n  * Fix `str_ends_with()` when needle is longer than haystack\n\n# 1.24.0\n\n  * Indicates that polyfills provides corresponding extensions\n  * Add `IntlDateFormatter::RELATIVE_*` constants\n  * Mimic deprecation from PHP 8.1 in IntlDateFormatter\n  * Optimize `array_is_list`\n  * Workaround buggy PCRE versions\n  * Fix `iconv_mime_decode()` while using mbstring extension\n  * Fix deprecations on PHP 8.1\n  * Fix Intl Grapheme `PCRE_VERSION` comparison when version has a timestamp\n  * Fix throwing from `mb_substitute_character` on PHP >= 8\n\n# 1.23.1\n\n  * Allow null in str_*() functions\n  * Fix `grapheme_str(r)ipos()`\n\n# 1.23.0\n\n  * added `CURLStringFile` to the PHP 8.1 polyfill\n  * added `enum_exists()` to the PHP 8.1 polyfill\n  * added `MYSQLI_REFRESH_REPLICA` constant to PHP 8.1 polyfill\n  * added `ReturnTypeWillChange` to PHP 8.1 polyfill\n  * updated Unicode maps to v13\n  * removed `INTL_IDNA_VARIANT_2003` on PHP 8\n  * fixed return value of `mb_parse_str()`\n  * fixed `IntlDateFormatter::format()` on 32b platforms\n  * fixed `mb_chr()` in the PHP 7.2 polyfill\n  * fixed `mb_strrchr()`, `mb_detect_order()`, `iconv_substr()`, `grapheme_substr()` on PHP 8\n\n# 1.22.1\n\n  * always accept null values on PHP 8, as native functions do\n\n# 1.22.0\n\n  * added PHP 8.1 polyfill\n  * fixed signatures on PHP 8\n  * fixed behaviors on PHP 8\n  * synced values of `Normalizer::*` consts\n\n# 1.21.0\n\n  * made symfony/polyfill-intl-icu independent of symfony/intl\n  * made polyfills for PHP <= 7.1 independent of symfony/polyfill\n  * optimize grapheme polyfill\n\n# 1.20.0\n\n  * Bump minimum PHP version to 7.1\n\n# 1.19.0\n\n  * Add a polyfill for the `Attribute` class\n  * Fix the name of arguments for PHP 8\n  * Improve performances of `array_key_last()`\n  * Fix polyfill for `mb_strrchr()`\n  * Skip loading `Stringable` on PHP 8\n  * Fix passing `$length=null` to `grapheme_substr()`\n  * Fix `iconv_substr()` and `grapheme_substr()` on PHP 8\n  * Fix using any IDNA constants\n\n# 1.18.1\n\n  * Don't force labels containing URL delimiters to stay in their Unicode form when using `idn_to_ascii()`\n\n# 1.18.0\n\n  * improve polyfill-idn to make it compliant with latest Unicode specs\n  * added `UnhandledMatchError` to the PHP 8 polyfill\n\n# 1.17.1\n\n  * fix accuracy of `Normalizer::isNormalized()`\n\n# 1.17.0\n\n  * added `get_resource_id()` to the PHP 8 polyfill\n  * fix declaring extra constants when `intl` is loaded\n\n# 1.16.0\n\n  * added `str_starts_with()` and `str_ends_with()` to the PHP 8 polyfill\n  * added polyfill for `PHP_FLOAT_*` constants\n  * fixed `spl_object_id()` on 32-bit systems\n  * fixed `idn_to_ascii()` not failing on leading or trailing hyphen-minus\n\n# 1.15.0\n\n  * added interface `Stringable` to the PHP 8 polyfill\n  * added `get_debug_type()` to the PHP 8 polyfill\n  * added `str_contains()` to the PHP 8 polyfill\n  * added `preg_last_error_msg()` to the PHP 8 polyfill\n  * added support for UUID V3 and V5\n  * added support for UUID on 32-bit systems\n  * fixed support for preloading\n\n# 1.14.0\n\n  * added PHP 8.0 polyfill\n\n# 1.13.2\n\n  * use correct block size for SHA1 in `hash_pbkdf2()` polyfill\n  * fixed `mb_str_split()` ignoring new-line characters\n  * updated Unicode maps\n\n# 1.13.1\n\n  * fixed issues with the uuid polyfill\n\n# 1.13.0\n\n  * added polyfills for `uuid_*` functions\n  * optimized `mb_str_split()`\n  * fixed handling negative offsets for grapheme and mbstring functions\n\n# 1.12.0\n\n  * added PHP 7.4 polyfill\n\n# 1.11.0\n\n  * fixed support for IDN with trailing dot\n  * added missing polyfill for `JsonException`\n\n# 1.10.0\n\n  * added polyfill for `idn_to_ascii()` and `idn_to_utf8()`\n  * added polyfill for intl's `MessageFormatter`\n  * prevented DoS via long passwords when using `hash_pbkdf2()` polyfill\n  * duplicated `mb_ord()`, `mb_chr()` and `mb_scrub()` polyfills in the `php72` one\n\n# 1.9.0\n\n  * added polyfill for `hrtime()`\n  * added polyfills for `array_key_first()` and `array_key_last()`\n  * fixed infinite loop in `iconv()` polyfill when using translit mode\n  * fixed converting to title case with mbstring polyfill\n\n# 1.8.0\n\n  * added PHP 7.3 polyfill\n  * added polyfills for `ctype_*` functions\n\n# 1.7.0\n\n  * added logic to new stream functions on Windows (sapi_windows_vt100_support)\n  * added polyfills for mb_*_numericentity\n  * made translit/ignore flags order-insensitive\n\n# 1.6.0\n\n  * add `SessionUpdateTimestampHandlerInterface` in PHP 7.0 polyfill\n  * fixed loading of Apcu polyfill when Zend Server's Data Cache is used\n\n# 1.5.0\n\n  * added polyfill for spl_object_id()\n  * fixed apcu function when apc ones are polyfilled with Zend Server's Data Cache\n  * added `PHP_OS_FAMILY` polyfill\n\n# 1.4.0\n\n  * added PHP 7.2 polyfill\n\n# 1.3.1\n\n  * added missing validation to mb_convert_case()\n  * added missing PHP_INT_MIN constant\n  * fixed iconv_substr(): Detected an illegal character in input string\n  * provided APCUIterator for APCu 4.x users\n\n# 1.3.0\n\n  * added polyfill for `is_iterable()`\n  * added polyfills for `mb_chr()`, `mb_ord()` and `mb_scrub()`\n  * added support for PHP 7.1\n  * silenced `iconv_strlen()` in `mb_strlen()` polyfill\n  * bypassed iconv for some charsets in mb_strlen\n  * fixed `mb_convert_variables()` poylfill\n\n# 1.2.0\n\n  * bug #61 Normalizer::decompose() should reorder \"recursive\" combining chars (nicolas-grekas)\n  * bug #59 Normalizer::recompose() should reset the last combining class on ASCII (nicolas-grekas)\n  * bug #59 Normalizer::isNormalized() should fail with Normalizer::NONE (nicolas-grekas)\n  * bug #59 Normalizer::isNormalized() and ::normalize() should check for multibyte string function overload (nicolas-grekas)\n  * feature #44/#53 allow paragonie/random_compat 2.0 (ickbinhier)\n  * feature #51 Use plain PHP for data maps to benefit from OPcache on PHP 5.6+ (nicolas-grekas)\n  * bug #49 Fix hex2bin return null (fuhry, binwiederhier)\n\n# 1.1.1\n\n  * bug #40 [Apcu] Load APCUIterator only when APCIterator exists (nicolas-grekas)\n  * bug #37 [Iconv] Fix wrong use in bootstrap.php (tucksaun)\n  * bug #31 Fix class_uses polyfill (WouterJ)\n\n# 1.1.0\n\n  * feature #22 [APCu] A new polyfill for the legacy APC users (nicolas-grekas)\n  * bug #28 [Php70] Workaround https://bugs.php.net/63206 (nicolas-grekas)\n\n# 1.0.1\n\n  * bug #14 ldap_escape does not encode leading/trailing spaces. (ChadSikorra)\n  * bug #17 Fix #16 - gzopen() / gzopen64() - 32 bit builds of Ubuntu 14.04 (fisharebest)\n\n# 1.0.0\n\n  * Hello symfony/polyfill\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "Copyright (c) 2015-present Fabien Potencier\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.8330078125,
          "content": "Symfony Polyfill\n================\n\nThis project backports features found in the latest PHP versions and provides\ncompatibility layers for some extensions and functions. It is intended to be\nused when portability across PHP versions and extensions is desired.\n\nPolyfills are provided for:\n- the `apcu` extension when the legacy `apc` extension is installed;\n- the `ctype` extension when PHP is compiled without ctype;\n- the `mbstring` and `iconv` extensions;\n- the `uuid` extension;\n- the `MessageFormatter` class and the `msgfmt_format_message` functions;\n- the `Normalizer` class and the `grapheme_*` functions;\n- the `utf8_encode` and `utf8_decode` functions from the `xml` extension or PHP-7.2 core;\n- the `Collator`, `NumberFormatter`, `Locale` and `IntlDateFormatter` classes,\n  limited to the \"en\" locale;\n- the `intl_error_name`, `intl_get_error_code`, `intl_get_error_message` and\n  `intl_is_failure` functions;\n- the `idn_to_ascii` and `idn_to_utf8` functions;\n- a `Binary` utility class to be used when compatibility with\n  `mbstring.func_overload` is required;\n- the `spl_object_id` and `stream_isatty` functions introduced in PHP 7.2;\n- the `mb_ord`, `mb_chr` and `mb_scrub` functions introduced in PHP 7.2 from the `mbstring` extension\n- the `sapi_windows_vt100_support` function (Windows only) introduced in PHP 7.2;\n- the `PHP_FLOAT_*` constant introduced in PHP 7.2;\n- the `PHP_OS_FAMILY` constant introduced in PHP 7.2;\n- the `is_countable` function introduced in PHP 7.3;\n- the `array_key_first` and `array_key_last` functions introduced in PHP 7.3;\n- the `hrtime` function introduced in PHP 7.3;\n- the `JsonException` class introduced in PHP 7.3;\n- the `get_mangled_object_vars`, `mb_str_split` and `password_algos` functions\n  introduced in PHP 7.4;\n- the `fdiv` function introduced in PHP 8.0;\n- the `get_debug_type` function introduced in PHP 8.0;\n- the `preg_last_error_msg` function introduced in PHP 8.0;\n- the `str_contains` function introduced in PHP 8.0;\n- the `str_starts_with` and `str_ends_with` functions introduced in PHP 8.0;\n- the `ValueError` class introduced in PHP 8.0;\n- the `UnhandledMatchError` class introduced in PHP 8.0;\n- the `FILTER_VALIDATE_BOOL` constant introduced in PHP 8.0;\n- the `get_resource_id` function introduced in PHP 8.0;\n- the `Attribute` class introduced in PHP 8.0;\n- the `Stringable` interface introduced in PHP 8.0;\n- the `PhpToken` class introduced in PHP 8.0 when the tokenizer extension is enabled;\n- the `array_is_list` function introduced in PHP 8.1;\n- the `enum_exists` function introduced in PHP 8.1;\n- the `MYSQLI_REFRESH_REPLICA` constant introduced in PHP 8.1;\n- the `ReturnTypeWillChange` attribute introduced in PHP 8.1;\n- the `CURLStringFile` class introduced in PHP 8.1 (but only if PHP >= 7.4 is used);\n- the `AllowDynamicProperties` attribute introduced in PHP 8.2;\n- the `SensitiveParameter` attribute introduced in PHP 8.2;\n- the `SensitiveParameterValue` class introduced in PHP 8.2;\n- the `Random\\Engine` interface introduced in PHP 8.2;\n- the `Random\\CryptoSafeEngine` interface introduced in PHP 8.2;\n- the `Random\\Engine\\Secure` class introduced in PHP 8.2 (check [arokettu/random-polyfill](https://packagist.org/packages/arokettu/random-polyfill) for more engines);\n- the `odbc_connection_string_is_quoted` function introduced in PHP 8.2;\n- the `odbc_connection_string_should_quote` function introduced in PHP 8.2;\n- the `odbc_connection_string_quote` function introduced in PHP 8.2;\n- the `ini_parse_quantity` function introduced in PHP 8.2;\n- the `json_validate` function introduced in PHP 8.3;\n- the `Override` attribute introduced in PHP 8.3;\n- the `mb_str_pad` function introduced in PHP 8.3;\n- the `ldap_exop_sync` function introduced in PHP 8.3;\n- the `ldap_connect_wallet` function introduced in PHP 8.3;\n- the `stream_context_set_options` function introduced in PHP 8.3;\n- the `str_increment` and `str_decrement` functions introduced in PHP 8.3;\n- the `Date*Exception/Error` classes introduced in PHP 8.3;\n- the `SQLite3Exception` class introduced in PHP 8.3;\n- the `mb_ucfirst` and `mb_lcfirst` functions introduced in PHP 8.4;\n- the `array_find`, `array_find_key`, `array_any` and `array_all` functions introduced in PHP 8.4;\n- the `Deprecated` attribute introduced in PHP 8.4;\n- the `mb_trim`, `mb_ltrim` and `mb_rtrim` functions introduced in PHP 8.4;\n- the `CURL_HTTP_VERSION_3` and `CURL_HTTP_VERSION_3ONLY` constants introduced in PHP 8.4;\n\nIt is strongly recommended to upgrade your PHP version and/or install the missing\nextensions whenever possible. This polyfill should be used only when there is no\nbetter choice or when portability is a requirement.\n\nCompatibility notes\n===================\n\nTo write portable code between PHP5 and PHP7, some care must be taken:\n- `\\*Error` exceptions must be caught before `\\Exception`;\n- after calling `error_clear_last()`, the result of `$e = error_get_last()` must be\n  verified using `isset($e['message'][0])` instead of `null !== $e`.\n\nUsage\n=====\n\nWhen using [Composer](https://getcomposer.org/) to manage your dependencies, you\nshould **not** `require` the `symfony/polyfill` package, but the standalone ones:\n- `symfony/polyfill-apcu` for using the `apcu_*` functions,\n- `symfony/polyfill-ctype` for using the ctype functions,\n- `symfony/polyfill-php54` for using the PHP 5.4 functions,\n- `symfony/polyfill-php55` for using the PHP 5.5 functions,\n- `symfony/polyfill-php56` for using the PHP 5.6 functions,\n- `symfony/polyfill-php70` for using the PHP 7.0 functions,\n- `symfony/polyfill-php71` for using the PHP 7.1 functions,\n- `symfony/polyfill-php72` for using the PHP 7.2 functions,\n- `symfony/polyfill-php73` for using the PHP 7.3 functions,\n- `symfony/polyfill-php74` for using the PHP 7.4 functions,\n- `symfony/polyfill-php80` for using the PHP 8.0 functions,\n- `symfony/polyfill-php81` for using the PHP 8.1 functions,\n- `symfony/polyfill-php82` for using the PHP 8.2 functions,\n- `symfony/polyfill-php83` for using the PHP 8.3 functions,\n- `symfony/polyfill-php84` for using the PHP 8.4 functions,\n- `symfony/polyfill-iconv` for using the iconv functions,\n- `symfony/polyfill-intl-grapheme` for using the `grapheme_*` functions,\n- `symfony/polyfill-intl-idn` for using the `idn_to_ascii` and `idn_to_utf8` functions,\n- `symfony/polyfill-intl-icu` for using the intl functions and classes,\n- `symfony/polyfill-intl-messageformatter` for using the intl messageformatter,\n- `symfony/polyfill-intl-normalizer` for using the intl normalizer,\n- `symfony/polyfill-mbstring` for using the mbstring functions,\n- `symfony/polyfill-util` for using the polyfill utility helpers.\n- `symfony/polyfill-uuid` for using the `uuid_*` functions,\n\nRequiring `symfony/polyfill` directly would prevent Composer from sharing\ncorrectly polyfills in dependency graphs. As such, it would likely install\nmore code than required.\n\nDesign\n======\n\nThis package is designed for low overhead and high quality polyfilling.\n\nIt adds only a few lightweight `require` statements to the bootstrap process\nto support all polyfills. Implementations are then loaded on-demand when\nneeded during code execution.\n\nIf your project requires a minimum PHP version it is advisable to add polyfills\nfor lower PHP versions to the `replace` section of your `composer.json`.\nThis removes any overhead from these polyfills as they are no longer part of your project.\nThe same can be done for polyfills for extensions that you require.\n\nIf your project requires php 7.0, and needs the mb extension, the replace section would look\nsomething like this:\n\n```json\n{\n    \"replace\": {\n        \"symfony/polyfill-php54\": \"*\",\n        \"symfony/polyfill-php55\": \"*\",\n        \"symfony/polyfill-php56\": \"*\",\n        \"symfony/polyfill-php70\": \"*\",\n        \"symfony/polyfill-mbstring\": \"*\"\n    }\n}\n```\n\nPolyfills are unit-tested alongside their native implementation so that\nfeature and behavior parity can be proven and enforced in the long run.\n\nLicense\n=======\n\nThis library is released under the [MIT license](LICENSE).\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 2.029296875,
          "content": "build: false\nshallow_clone: true\nplatform: x86\nclone_folder: c:\\projects\\polyfill\n\ncache:\n    - c:\\php -> appveyor.yml\n    - vendor -> appveyor.yml\n\ninit:\n    - SET PATH=c:\\php;%PATH%\n    - SET COMPOSER_NO_INTERACTION=1\n    - SET COMPOSER_ROOT_VERSION=1.x-dev\n    - SET PHP=1\n\ninstall:\n    - cinst wget\n    - IF EXIST c:\\php (SET PHP=0) ELSE (mkdir c:\\php)\n    - cd c:\\php\n    - appveyor DownloadFile https://github.com/symfony/binary-utils/releases/download/v0.1/php-7.2.5-Win32-VC15-x86.zip\n    - IF %PHP%==1 appveyor DownloadFile https://github.com/symfony/binary-utils/releases/download/v0.1/php-7.2.5-Win32-VC15-x86.zip\n    - IF %PHP%==1 7z x php-7.2.5-Win32-VC15-x86.zip -y >nul\n    - IF %PHP%==1 del /Q *.zip\n    - IF %PHP%==1 cd ext\n    - IF %PHP%==1 appveyor DownloadFile https://github.com/symfony/binary-utils/releases/download/v0.1/php_apcu-5.1.19-7.2-ts-vc15-x86.zip\n    - IF %PHP%==1 7z x php_apcu-5.1.19-7.2-ts-vc15-x86.zip -y >nul\n    - IF %PHP%==1 del /Q *.zip\n    - IF %PHP%==1 cd ..\n    - IF %PHP%==1 echo @php %%~dp0composer.phar %%* > composer.bat\n    - IF %PHP%==1 copy /Y php.ini-development php.ini\n    - IF %PHP%==1 echo max_execution_time=1200 >> php.ini\n    - IF %PHP%==1 echo date.timezone=\"UTC\" >> php.ini\n    - IF %PHP%==1 echo memory_limit=-1 >> php.ini\n    - IF %PHP%==1 echo extension_dir=ext >> php.ini\n    - IF %PHP%==1 echo extension=php_openssl.dll >> php.ini\n    - IF %PHP%==1 echo extension=php_apcu.dll >> php.ini\n    - IF %PHP%==1 echo apc.enable_cli=1 >> php.ini\n    - IF %PHP%==1 echo extension=php_intl.dll >> php.ini\n    - IF %PHP%==1 echo extension=php_mbstring.dll >> php.ini\n    - IF %PHP%==1 echo extension=php_ldap.dll >> php.ini\n    - appveyor DownloadFile https://github.com/composer/composer/releases/download/2.7.9/composer.phar\n    - cd c:\\projects\\polyfill\n    - mkdir %APPDATA%\\Composer && copy /Y .github\\composer-config.json %APPDATA%\\Composer\\config.json\n    - composer update --prefer-source --no-progress --ansi\n    - php -d allow_url_fopen=0 ./phpunit install\n\ntest_script:\n    - php -d allow_url_fopen=0 ./phpunit\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.640625,
          "content": "{\n    \"name\": \"symfony/polyfill\",\n    \"type\": \"library\",\n    \"description\": \"Symfony polyfills backporting features to lower PHP versions\",\n    \"keywords\": [\"polyfill\", \"shim\", \"compat\", \"compatibility\", \"dev\"],\n    \"homepage\": \"https://symfony.com\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Nicolas Grekas\",\n            \"email\": \"p@tchwork.com\"\n        },\n        {\n            \"name\": \"Symfony Community\",\n            \"homepage\": \"https://symfony.com/contributors\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=7.2\"\n    },\n    \"require-dev\": {\n        \"symfony/intl\": \"^5.4|^6.4\",\n        \"symfony/phpunit-bridge\": \"^6.4\",\n        \"symfony/var-dumper\": \"^5.4|^6.4\"\n    },\n    \"replace\": {\n        \"symfony/polyfill-apcu\": \"self.version\",\n        \"symfony/polyfill-ctype\": \"self.version\",\n        \"symfony/polyfill-php73\": \"self.version\",\n        \"symfony/polyfill-php74\": \"self.version\",\n        \"symfony/polyfill-php80\": \"self.version\",\n        \"symfony/polyfill-php81\": \"self.version\",\n        \"symfony/polyfill-php82\": \"self.version\",\n        \"symfony/polyfill-php83\": \"self.version\",\n        \"symfony/polyfill-php84\": \"self.version\",\n        \"symfony/polyfill-iconv\": \"self.version\",\n        \"symfony/polyfill-intl-grapheme\": \"self.version\",\n        \"symfony/polyfill-intl-icu\": \"self.version\",\n        \"symfony/polyfill-intl-messageformatter\": \"self.version\",\n        \"symfony/polyfill-intl-idn\": \"self.version\",\n        \"symfony/polyfill-intl-normalizer\": \"self.version\",\n        \"symfony/polyfill-mbstring\": \"self.version\",\n        \"symfony/polyfill-util\": \"self.version\",\n        \"symfony/polyfill-uuid\": \"self.version\"\n    },\n    \"autoload\": {\n        \"psr-4\": { \"Symfony\\\\Polyfill\\\\\": \"src/\" },\n        \"files\": [\n            \"src/bootstrap.php\",\n            \"src/Apcu/bootstrap.php\",\n            \"src/Ctype/bootstrap.php\",\n            \"src/Uuid/bootstrap.php\",\n            \"src/Iconv/bootstrap.php\",\n            \"src/Intl/Grapheme/bootstrap.php\",\n            \"src/Intl/Idn/bootstrap.php\",\n            \"src/Intl/Icu/bootstrap.php\",\n            \"src/Intl/MessageFormatter/bootstrap.php\",\n            \"src/Intl/Normalizer/bootstrap.php\",\n            \"src/Mbstring/bootstrap.php\"\n        ],\n        \"classmap\": [\n            \"src/Intl/Icu/Resources/stubs\",\n            \"src/Intl/MessageFormatter/Resources/stubs\",\n            \"src/Intl/Normalizer/Resources/stubs\",\n            \"src/Php84/Resources/stubs\",\n            \"src/Php83/Resources/stubs\",\n            \"src/Php82/Resources/stubs\",\n            \"src/Php81/Resources/stubs\",\n            \"src/Php80/Resources/stubs\",\n            \"src/Php73/Resources/stubs\"\n        ]\n    },\n    \"minimum-stability\": \"dev\"\n}\n"
        },
        {
          "name": "phpunit",
          "type": "blob",
          "size": 0.4765625,
          "content": "#!/usr/bin/env php\n<?php\n\nif (!file_exists(__DIR__.'/vendor/symfony/phpunit-bridge/bin/simple-phpunit')) {\n    echo \"Unable to find the `simple-phpunit` script in `vendor/symfony/phpunit-bridge/bin/`.\\nPlease run `composer update` before running this command.\\n\";\n    exit(1);\n}\nif (!getenv('SYMFONY_PHPUNIT_VERSION')) {\n    putenv('SYMFONY_PHPUNIT_VERSION=8.5');\n}\n\nputenv('SYMFONY_PHPUNIT_DIR='.__DIR__.'/.phpunit');\nrequire __DIR__.'/vendor/symfony/phpunit-bridge/bin/simple-phpunit';\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.83984375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/5.3/phpunit.xsd\"\n         colors=\"true\"\n         bootstrap=\"vendor/autoload.php\"\n>\n    <php>\n        <ini name=\"error_reporting\" value=\"-1\" />\n    </php>\n\n    <testsuites>\n        <testsuite name=\"Symfony Polyfill Test Suite\">\n            <directory>./tests/</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist>\n            <directory>./src/</directory>\n            <exclude>\n                <directory>./src/*/Resources</directory>\n                <directory>./src/*/*/Resources</directory>\n            </exclude>\n        </whitelist>\n    </filter>\n\n    <listeners>\n        <listener class=\"Symfony\\Polyfill\\Util\\TestListener\" />\n    </listeners>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}