{
  "metadata": {
    "timestamp": 1736711924406,
    "page": 330,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mewebstudio/captcha",
      "stars": 2479,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3525390625,
          "content": "# Path-based git attributes\n# https://www.kernel.org/pub/software/scm/git/docs/gitattributes.html\n\n# Ignore all test and documentation with \"export-ignore\".\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/.travis.yml        export-ignore\n/Makefile           export-ignore\n/phpunit.xml        export-ignore\n/tests              export-ignore\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0908203125,
          "content": "/bootstrap/compiled.php\n.env.*.php\n.env.php\ncomposer.lock\nvendor\n/.idea\n/.settings\n.DS_Store\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.4658203125,
          "content": "language: php\n\nphp:\n  - 7.2\n  - 7.3\n  - 7.4\n\n# This triggers builds to run on the new TravisCI infrastructure.\n# See: http://docs.travis-ci.com/user/workers/container-based-infrastructure/\nsudo: false\n\n## Cache composer\ncache:\n  directories:\n    - $HOME/.composer/cache\n\nbefore_script:\n  - travis_retry composer self-update\n  - travis_retry composer update ${COMPOSER_FLAGS} --no-interaction --prefer-dist\n\nscript:\n  - phpunit --coverage-text --coverage-clover=coverage.clover\n"
        },
        {
          "name": "LICENCE.md",
          "type": "blob",
          "size": 0.1201171875,
          "content": "Copyright (c) 2015 Muharrem ERİN (me@mewebstudio.com)\n\nhttp://www.opensource.org/licenses/mit-license.php The MIT License\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0703125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 MeWebStudio - Muharrem ERİN\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.40234375,
          "content": "test: remove-deps\n\tmake test-laravel\n\tmake test-lumen\n\ntest-laravel:\n\tcomposer require laravel/framework\n\tvendor/bin/phpunit\n\tmake uninstall-laravel\n\ntest-lumen:\n\tcomposer require laravel/lumen-framework\n\tvendor/bin/phpunit\n\tmake uninstall-lumen\n\nremove-deps:\n\trm -rf vendor\n\nuninstall-laravel: remove-deps\n\tcomposer remove laravel/framework\n\nuninstall-lumen: remove-deps\n\tcomposer remove laravel/lumen-framework"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.044921875,
          "content": "# Captcha for Laravel 10/11\n\n[![Build Status](https://travis-ci.org/mewebstudio/captcha.svg?branch=master)](https://travis-ci.org/mewebstudio/captcha) [![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/mewebstudio/captcha/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/mewebstudio/captcha/?branch=master)\n[![Latest Stable Version](https://poser.pugx.org/mews/captcha/v/stable.svg)](https://packagist.org/packages/mews/captcha)\n[![Latest Unstable Version](https://poser.pugx.org/mews/captcha/v/unstable.svg)](https://packagist.org/packages/mews/captcha)\n[![License](https://poser.pugx.org/mews/captcha/license.svg)](https://packagist.org/packages/mews/captcha)\n[![Total Downloads](https://poser.pugx.org/mews/captcha/downloads.svg)](https://packagist.org/packages/mews/captcha)\n\nA simple [Laravel 5/6](http://www.laravel.com/) service provider for including the [Captcha for Laravel](https://github.com/mewebstudio/captcha).\n\nfor Laravel 4 [Captcha for Laravel Laravel 4](https://github.com/mewebstudio/captcha/tree/master-l4)\n\nfor Laravel 5 to 9 [Captcha for Laravel Laravel 4](https://github.com/mewebstudio/captcha/tree/master-l5-l9)\n\n## Preview\n![Preview](https://image.ibb.co/kZxMLm/image.png)\n\n- [Captcha for Laravel 5/6/7](#captcha-for-laravel-5-6-7)\n  * [Preview](#preview)\n  * [Installation](#installation)\n  * [Usage](#usage)\n  * [Configuration](#configuration)\n    + [Custom settings:](#custom-settings)\n    + [Disable validation:](#disable-validation)\n  * [Example Usage](#example-usage)\n    + [Session Mode:](#session-mode)\n    + [Stateless Mode:](#stateless-mode)\n- [Return Image](#return-image)\n- [Return URL](#return-url)\n- [Return HTML](#return-html)\n- [To use different configurations](#to-use-different-configurations)\n  * [Links](#links)\n  \n## Installation\n\nThe Captcha Service Provider can be installed via [Composer](http://getcomposer.org) by requiring the\n`mews/captcha` package and setting the `minimum-stability` to `dev` (required for Laravel 5) in your\nproject's `composer.json`.\n\n```json\n{\n    \"require\": {\n        \"laravel/framework\": \"5.0.*\",\n        \"mews/captcha\": \"~3.0\"\n    },\n    \"minimum-stability\": \"stable\"\n}\n```\n\nor\n\nRequire this package with composer:\n```\ncomposer require mews/captcha\n```\n\nUpdate your packages with ```composer update``` or install with ```composer install```.\n\nIn Windows, you'll need to include the GD2 DLL `php_gd2.dll` in php.ini. And you also need include `php_fileinfo.dll` and `php_mbstring.dll` to fit the requirements of `mews/captcha`'s dependencies.\n\n\n\n\n## Usage\n\nTo use the Captcha Service Provider, you must register the provider when bootstrapping your Laravel application. There are\nessentially two ways to do this.\n\nFind the `providers` key in `config/app.php` and register the Captcha Service Provider.\n\n```php\n    'providers' => [\n        // ...\n        'Mews\\Captcha\\CaptchaServiceProvider',\n    ]\n```\nfor Laravel 5.1+\n```php\n    'providers' => [\n        // ...\n        Mews\\Captcha\\CaptchaServiceProvider::class,\n    ]\n```\n\nFind the `aliases` key in `config/app.php`.\n\n```php\n    'aliases' => [\n        // ...\n        'Captcha' => 'Mews\\Captcha\\Facades\\Captcha',\n    ]\n```\nfor Laravel 5.1+\n```php\n    'aliases' => [\n        // ...\n        'Captcha' => Mews\\Captcha\\Facades\\Captcha::class,\n    ]\n```\n\nFor Laravel 11 : you do not need to add the alias, it will be added automatically.\n\n\n## Configuration\n### Custom settings:\nTo use your own settings, publish config.\n\n```$ php artisan vendor:publish```\n\n`config/captcha.php`\n\n```php\nreturn [\n    'default'   => [\n        'length'    => 5,\n        'width'     => 120,\n        'height'    => 36,\n        'quality'   => 90,\n        'math'      => true,  //Enable Math Captcha\n        'expire'    => 60,    //Captcha expiration\n    ],\n    // ...\n];\n```\n### Disable validation:\nTo disable the captcha validation use `CAPTCHA_DISABLE` environment variable. e.g. **.env** config:\n\n```php\nCAPTCHA_DISABLE=true\n```\n\n\n## Example Usage\n### Session Mode:\n```php\n    // [your site path]/Http/routes.php\n    Route::any('captcha-test', function() {\n        if (request()->getMethod() == 'POST') {\n            $rules = ['captcha' => 'required|captcha'];\n            $validator = validator()->make(request()->all(), $rules);\n            if ($validator->fails()) {\n                echo '<p style=\"color: #ff0000;\">Incorrect!</p>';\n            } else {\n                echo '<p style=\"color: #00ff30;\">Matched :)</p>';\n            }\n        }\n    \n        $form = '<form method=\"post\" action=\"captcha-test\">';\n        $form .= '<input type=\"hidden\" name=\"_token\" value=\"' . csrf_token() . '\">';\n        $form .= '<p>' . captcha_img() . '</p>';\n        $form .= '<p><input type=\"text\" name=\"captcha\"></p>';\n        $form .= '<p><button type=\"submit\" name=\"check\">Check</button></p>';\n        $form .= '</form>';\n        return $form;\n    });\n```\nDetailed Example in Laravel way\nview files\n```html\n    //register.blade.php\n    <img src=\"{{ captcha_src() }}\" alt=\"captcha\">\n        <div class=\"mt-2\"></div>\n        <input \n            type=\"text\" name=\"captcha\" class=\"form-control @error('captcha') is-invalid @enderror\" placeholder=\"Please Insert Captch\"\n            >\n         @error('captcha') \n         <div class=\"invalid-feedback\">{{ $message }}</div> @enderror \n```\ncontroller files\n```php\n        Validator::make($input, [\n            'name' => ['required', 'string', 'max:255'],\n            'email' => [\n                'required',\n                'string',\n                'email',\n                'max:255',\n                Rule::unique(User::class),\n            ],\n            'password' => $this->passwordRules(),\n            'captcha' => 'required|captcha'\n        ])->validate();\n```\n### Stateless Mode:\nYou get key and img from this url\n`http://localhost/captcha/api/math`\nand verify the captcha using this method:\n```php\n    //key is the one that you got from json response\n    // fix validator\n    // $rules = ['captcha' => 'required|captcha_api:'. request('key')];\n    $rules = ['captcha' => 'required|captcha_api:'. request('key') . ',math'];\n    $validator = validator()->make(request()->all(), $rules);\n    if ($validator->fails()) {\n        return response()->json([\n            'message' => 'invalid captcha',\n        ]);\n\n    } else {\n        //do the job\n    }\n```\n\n# Return Image\n```php\ncaptcha();\n```\nor\n```php\nCaptcha::create();\n```\n\n\n# Return URL\n```php\ncaptcha_src();\n```\nor\n```\nCaptcha::src('default');\n```\n\n# Return HTML\n```php\ncaptcha_img();\n```\nor\n```php\nCaptcha::img();\n```\n\n# To use different configurations\n```php\ncaptcha_img('flat');\n\nCaptcha::img('inverse');\n```\netc.\n\nBased on [Intervention Image](https://github.com/Intervention/image)\n\n^_^\n\n## Links\n* [Intervention Image](https://github.com/Intervention/image)\n* [L5 Captcha on Github](https://github.com/mewebstudio/captcha)\n* [L5 Captcha on Packagist](https://packagist.org/packages/mews/captcha)\n* [For L4 on Github](https://github.com/mewebstudio/captcha/tree/master-l4)\n* [License](http://www.opensource.org/licenses/mit-license.php)\n* [Laravel website](http://laravel.com)\n* [Laravel Turkiye website](http://www.laravel.gen.tr)\n* [mewebstudio](https://github.com/mewebstudio/captcha)\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.2724609375,
          "content": "{\n\t\"name\": \"mews/captcha\",\n\t\"type\": \"package\",\n\t\"description\": \"Laravel 5/6/7/8/9/10/11 Captcha Package\",\n\t\"keywords\": [\"laravel6 Captcha\", \"laravel6 Security\", \"laravel6 Captcha\", \"laravel5 Security\", \"Captcha\"],\n\t\"homepage\": \"https://github.com/mewebstudio/captcha\",\n\t\"license\": \"MIT\",\n\t\"authors\": [\n\t\t{\n\t\t\t\"name\": \"Muharrem ERİN\",\n\t\t\t\"email\": \"me@mewebstudio.com\",\n\t\t\t\"homepage\": \"https://github.com/mewebstudio\",\n\t\t\t\"role\": \"Developer\"\n\t\t}\n\t],\n\t\"require\": {\n    \"php\": \"^7.2|^8.1|^8.2|^8.3\",\n\t\t\"ext-gd\": \"*\",\n\t\t\"illuminate/config\": \"~5|^6|^7|^8|^9|^10|^11\",\n\t\t\"illuminate/filesystem\": \"~5|^6|^7|^8|^9|^10|^11\",\n\t\t\"illuminate/support\": \"~5|^6|^7|^8|^9|^10|^11\",\n\t\t\"illuminate/hashing\": \"~5|^6|^7|^8|^9|^10|^11\",\n\t\t\"illuminate/session\": \"~5|^6|^7|^8|^9|^10|^11\",\n\t\t\"intervention/image\": \"^3.7\"\n\t},\n\t\"require-dev\": {\n\t\t\"phpunit/phpunit\": \"^8.5|^9.5.10|^10.5\",\n\t\t\"mockery/mockery\": \"^1.0\"\n\t},\n\t\"autoload\": {\n\t\t\"psr-4\": {\n\t\t\t\"Mews\\\\Captcha\\\\\": \"src/\"\n\t\t},\n\t\t\"files\": [\n\t\t\t\"src/helpers.php\"\n\t\t]\n\t},\n\t\"autoload-dev\": {\n\t\t\"classmap\": [\n\t\t\t\"tests\"\n\t\t],\n\t\t\"psr-4\": {\n\t\t\t\"Mews\\\\Test\\\\\": \"tests/\"\n\t\t}\n\t},\n\t\"minimum-stability\": \"stable\",\n\t\"extra\": {\n\t\t\"laravel\": {\n\t\t\t\"providers\": [\n\t\t\t\t\"Mews\\\\Captcha\\\\CaptchaServiceProvider\"\n\t\t\t],\n\t\t\t\"aliases\": {\n\t\t\t\t\"Captcha\": \"Mews\\\\Captcha\\\\Facades\\\\Captcha\"\n\t\t\t}\n\t\t}\n\t}\n}"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.556640625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\"\n         syntaxCheck=\"false\"\n>\n    <testsuites>\n        <testsuite name=\"Package Test Suite\">\n            <directory suffix=\".php\">./tests/</directory>\n        </testsuite>\n    </testsuites>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}