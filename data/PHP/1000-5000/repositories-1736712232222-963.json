{
  "metadata": {
    "timestamp": 1736712232222,
    "page": 963,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lucb1e/cookielesscookies",
      "stars": 1190,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".htaccess",
          "type": "blob",
          "size": 0.05859375,
          "content": "RewriteEngine On\nRewriteRule ^tracker.jpg$ index.php?tracker"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.4716796875,
          "content": "            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n                    Version 2, December 2004\n\n Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>\n\n Everyone is permitted to copy and distribute verbatim or modified\n copies of this license document, and changing it is allowed as long\n as the name is changed.\n\n            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. You just DO WHAT THE FUCK YOU WANT TO.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.4443359375,
          "content": "Cookieless cookies\n=================\n\nThis repository is a demonstration of tracking users by using etags instead of cookies (or localstorage or anything else).\n\nhttp://lucb1e.com/rp/cookielesscookies\n\nLicense\n-------\n\nCopyright Â© 2013 lucb1e.\n\nThis work is free. You can redistribute it and/or modify it under the\nterms of the Do What The Fuck You Want To Public License, Version 2,\nas published by Sam Hocevar. See the `LICENSE` file for more details.\n"
        },
        {
          "name": "config.php",
          "type": "blob",
          "size": 0.0654296875,
          "content": "<?php \n\t$secret = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";\n"
        },
        {
          "name": "etags.jpg",
          "type": "blob",
          "size": 24.3798828125,
          "content": null
        },
        {
          "name": "fingerprinting.jpg",
          "type": "blob",
          "size": 2.47265625,
          "content": null
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 9.64453125,
          "content": "<?php \n\tif (isset($_GET[\"source\"]))\n\t\tdie(\"See <a href='https://github.com/lucb1e/cookielesscookies'>github.com/lucb1e/cookielesscookies</a>\");\n\t\n\trequire(\"config.php\"); // for $secret.\n\t\n\t$sessionsdir = \"sessions/\";\n\t\n\t// An ETag was sent to the webserver\n\tif (!empty($_SERVER[\"HTTP_IF_NONE_MATCH\"])) {\n\t\t// This is what you would normally do\n\t\t$etag = substr(str_replace(\".\", \"\", str_replace(\"/\", \"\", str_replace(\"\\\\\", \"\", $_SERVER[\"HTTP_IF_NONE_MATCH\"]))), 0, 18);\n\t}\n\telse { // No etag was sent. We need to generate one. Normally you would derive this from randomness.\n\t\t$etag = substr(sha1($secret . sha1($_SERVER[\"REMOTE_ADDR\"]) . sha1($_SERVER[\"HTTP_USER_AGENT\"])), 0, 18);\n\t}\n\t\n\t// Initialize a new or existing session given any etag.\n\tfunction initsession($etag, $force_reinit = false) {\n\t\tglobal $session, $sessionsdir;\n\t\tif (!$force_reinit && file_exists($sessionsdir . $etag)) {\n\t\t\t$session = unserialize(file_get_contents($sessionsdir . $etag));\n\t\t}\n\t\telse {\n\t\t\t$session = array(\"visits\" => 1, \"last_visit\" => time(), \"your_string\" => \"\");\n\t\t}\n\t}\n\t\n\tfunction updatesession() {\n\t\tglobal $session;\n\t\t$session[\"visits\"] += 1;\n\t\t$session[\"last_visit\"] = time();\n\t}\n\t\n\t// Write any changes to the disk\n\tfunction storesession($etag) {\n\t\tglobal $session, $sessionsdir;\n\t\t$fid = fopen($sessionsdir . $etag, \"w\");\n\t\tfwrite($fid, serialize($session));\n\t\tfclose($fid);\n\t}\n\t\n\tinitsession($etag);\n\t\n\t// .htaccess rewrites to ?tracker if the 'tracker.jpg' file is requested.\n\tif (isset($_GET[\"tracker\"])) {\n\t\t// No ETag sent? Make sure we use a new session.\n\t\tif (empty($_SERVER[\"HTTP_IF_NONE_MATCH\"])) {\n\t\t\t@unlink($sessionsdir . $etag); // may or may not exist\n\t\t\tunset($session);\n\t\t\tinitsession($etag);\n\t\t}\n\t\tupdatesession();\n\t\tstoresession($etag);\n\t\theader(\"Cache-Control: private, must-revalidate, proxy-revalidate\");\n\t\theader(\"ETag: \" . substr($etag, 0, 18)); // our \"cookie\"\n\t\theader(\"Content-type: image/jpeg\");\n\t\theader(\"Content-length: \" . filesize(\"fingerprinting.jpg\"));\n\t\treadfile(\"fingerprinting.jpg\");\n\t\texit;\n\t}\n\t\n\t// Vulnerable to CSRF attacks, I know. I didn't think it really mattered\n\t// since XSS is impossible and no important data is stored.\n\tif (isset($_POST[\"newstring\"])) {\n\t\t$session[\"your_string\"] = substr(htmlentities($_POST[\"newstring\"]), 0, 500);\n\t\tstoresession($etag);\n\t\theader(\"Location: ./\");\n\t\texit;\n\t}\n\t\n?>\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Lucb1e.com :: Cookieless Cookies</title>\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: Arial;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div style=\"width: 632px; font-size: 1em; margin: 0 auto 0 auto; margin-top: 40px;\">\n\t\t\t<div style=\"float: right; margin-left: 15px;\">\n\t\t\t\t<img src=\"tracker.jpg\" />\n\t\t\t</div>\n\t\t\t<h2>Cookieless cookies</h2>\n\t\t\t\n\t\t\tThere is another obscure way of tracking users without using cookies or even Javascript. It has already being\n\t\t\tused by numerous websites but few people know of it. This page explains how it works and how to protect yourself.<br/>\n\t\t\t<br/>\n\t\t\t<br/>\n\t\t\tThis tracking method works <b>without</b> needing to use:<br/>\n\t\t\t<ul>\n\t\t\t\t<li>Cookies</li>\n\t\t\t\t<li>Javascript</li>\n\t\t\t\t<li>LocalStorage/SessionStorage/GlobalStorage</li>\n\t\t\t\t<li>Flash, Java or other plugins</li>\n\t\t\t\t<li>Your IP address or user agent string</li>\n\t\t\t\t<li>Any methods employed by <a href=\"https://panopticlick.eff.org\" target=\"_blank\">Panopticlick</a></li>\n\t\t\t</ul>\n\n\t\t\tInstead it uses another type of storage that is persistent between browser restarts: <b>caching</b>.<br/>\n\t\t\t<br/>\n\t\t\tEven when you disabled cookies entirely, have Javascript turned off and use a VPN service, this technique will\n\t\t\tstill be able to track you.<br/>\n\t\t\t<br/>\n\t\t\t<hr/>\n\t\t\t\n\t\t\t<a name=\"demo\"></a>\n\t\t\t<h3>Demonstration</h3>\n\t\t\tAs you read this, you have already been tagged. Sorry. The good news is that I don't link your session id to any\n\t\t\tpersonally identifiable information. Here is everything I store about you right now:<br/>\n\t\t\t<br/>\n\t\t\t<form method=\"POST\" action=\"./\">\n\t\t\t\t<b>Number of visits:</b> <?php echo $session[\"visits\"]; ?><br/>\n\t\t\t\t<br/>\n\t\t\t\t<b>Last visit:</b> <?php echo date(\"r\", $session[\"last_visit\"]); ?><br/>\n\t\t\t\t<br/>\n\t\t\t\t<b>Want to store some text here?</b><br/>\n\t\t\t\t<textarea name=newstring style=\"width: 632px;\" rows=4><?php echo $session[\"your_string\"]; ?></textarea><br/>\n\t\t\t\t(max. 350 characters)<br/>\n\t\t\t\t<input type=submit value=Store />\n\t\t\t</form>\n\t\t\t<br/>\n\t\t\tGo ahead, type something and store it. Then close your browser and open this page again. Is it still there?<br/>\n\t\t\t<br/>\n\t\t\tCheck your cookies, is anything there? Nope, it's all in a fake image checksum that almost noone is aware of.\n\t\t\tSaw that eye on the right top of the page? That's our tracker.<br/>\n\t\t\t<br/>\n\t\t\t<hr/>\n\t\t\t\n\t\t\t<a name=\"how\"></a>\n\t\t\t<h3>So how does this work?</h3>\n\t\t\tThis is a general overview:<br/>\n\t\t\t<br/>\n\t\t\t<img src=\"etags.jpg\"/><br/>\n\t\t\t<br/>\n\t\t\tThe ETag shown in the image is a sort of checksum. When the image changes, the checksum changes. So when the browser\n\t\t\thas the image and knows the checksum, it can send it to the webserver for verification. The webserver then checks\n\t\t\twhether the image has changed. If it hasn't, the image does not need to be retransmitted and lots of data is saved.<br/>\n\t\t\t<br/>\n\t\t\tAttentive readers might have noticed already how you can use this to track people: the browser sends the information back\n\t\t\tto the server that it previously received (the ETag). That sounds an awful lot like cookies, doesn't it? The server can\n\t\t\tsimply give each browser an unique ETag, and when they connect again it can look it up in its database.<br/>\n\t\t\t<br/>\n\t\t\t<a name=\"#demotech\"></a>\n\t\t\t<b>Technical stuff (and bugs) specifically about this demo</b><br/>\n\t\t\tTo demonstrate how this works without having to use Javascript, I had to find a piece of information that's relatively\n\t\t\tunique to you besides this ETag. The image is loaded <i>after</i> the page is loaded, but only the image contains the\n\t\t\tETag. How can I display up to date info on the page? Turns out I can't really do that without dynamically updating the\n\t\t\tpage, which requires javascript, which I wanted to avoid to show that it can be done without.<br/>\n\t\t\t<br/>\n\t\t\tThis chicken and egg problem introduces a few bugs:<br/>\n\t\t\t- All information you see was from your previous pageload. Press F5 to see updated data.<br/>\n\t\t\t- When you visit a page where you don't have an ETag (like incognito mode), your session will be emptied. Again, this\n\t\t\tis only visible when you reload the page.<br/>\n\t\t\t<br/>\n\t\t\tI did not see a simple solution to these issues. Sure some things can be done, but nothing that other websites would use,\n\t\t\tand I wanted to keep the code as simple and as close to reality as possible.<br/>\n\t\t\t<br/>\n\t\t\tNote that these bugs normally don't exist when you really want to track someone because then you don't intend to show users\n\t\t\tthat they are being tracked.<br/>\n\t\t\t<br/>\n\t\t\t<b>Source code</b><br/>\n\t\t\tWhat's a project without source code? <span style=\"color: #666; font-size: 0.9em;\">Oh right, Microsoft Windows.</span><br/>\n\t\t\t<br/>\n\t\t\t<a href=\"https://github.com/lucb1e/cookielesscookies\" target=\"_blank\">https://github.com/lucb1e/cookielesscookies</a><br/>\n\t\t\t<br/>\n\t\t\t<hr/>\n\t\t\t\n\t\t\t<a name=\"whatdowedo\"></a>\n\t\t\t<h3>What can we do to stop it?</h3>\n\t\t\tOne thing I would strongly recommend you to do anytime you visit a page where you want a little more\n\t\t\tsecurity, is opening a private navigation window and using https exclusively. Doing this single-handedly\n\t\t\teliminates attacks like BREACH (the latest https hack), disables any and all tracking cookies that you\n\t\t\tmight have, and also eliminates cache tracking issues like I'm demonstrating on this page. I use this\n\t\t\tprivate navigation mode when I do online banking. In Firefox (and I think MSIE too) it's Ctrl+Shift+P,\n\t\t\tin Chrome it's Ctrl+Shift+N.<br/>\n\t\t\t<br/>\n\t\t\tBesides that, it depends on your level of paranoia.<br/>\n\t\t\t<br/>\n\t\t\tI currently have no straightforward answer since cache tracking is virtually undetectable, but also because caching\n\t\t\titself is useful and saves people (including you) time and money. Website admins will consume less bandwidth (and\n\t\t\tif you think about it, in the end users are the ones that will have to pay the bill), your pages will load faster,\n\t\t\tand especially on mobile devices it makes a big difference if you don't have an unlimited 4G plan. It's even\n\t\t\tworse when you have a high-latency or low-bandwidth connection because you live in a rural area.<br/>\n\t\t\t<br/>\n\t\t\tIf you're very paranoid, it's best to just disable caching altogether. This will stop any such tracking from\n\t\t\thappening, but I personally don't believe it's worth the downsides.<br/>\n\t\t\t<br/>\n\t\t\tThe Firefox add-on Self-Destructing Cookies has the ability to empty your cache when you're not using your\n\t\t\tbrowser for a while. This might be an okay alternative to disabling caching; you can <i>only</i> be tracked during\n\t\t\tyour visit, and they can already do that anyway by following which pages were visited by which IP address, so\n\t\t\tthat's no big deal. Any later visits will appear as from a different user, assuming all other tracking\n\t\t\tmethods have already been prevented.<br/>\n\t\t\t<br/>\n\t\t\tI'm not aware of any add-on that periodically removes your cache (e.g. once per 72 hours), but there might be.\n\t\t\tThis would be another good alternative for 99% of the users because it has a relatively low performance impact\n\t\t\twhile still limiting the tracking capabilities.<br/>\n\t\t\t<br/>\n\t\t\t\n\t\t\t<div style=\"margin-top: 20px; color: #888; font-size: 0.9em;\">\n\t\t\t\tWritten by lucb1e in 2013.<br/>\n\t\t\t\tAll text, resources and methods on this page are hereby released as WTFPL - <a rel='license' href='http://www.wtfpl.net'>www.wtfpl.net</a>\n\t\t\t</div>\n\t\t</div>\n\t\t<div style=\"height: 500px;\">&nbsp;</div> <!-- I often scroll past the end of the document, it's nicer to read I think -->\n\t</body>\n</html>\n"
        },
        {
          "name": "sessions",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}