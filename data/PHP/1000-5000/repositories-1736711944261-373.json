{
  "metadata": {
    "timestamp": 1736711944261,
    "page": 373,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "d13r/laravel-breadcrumbs",
      "stars": 2334,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.353515625,
          "content": "# https://editorconfig.org/\n\nroot = true\n\n# Defaults - Linux style, 4 spaces\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n# Markdown uses trailing whitespace to indicate continuation lines\n[*.{markdown,md}]\ntrim_trailing_whitespace = false\n\n# YAML\n[*.yml]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3408203125,
          "content": "# Exclude development files from exported zip files\n# To test this, commit the changes then run:\n# scripts/list-production-files.sh\n\n/.editorconfig export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n\n/*.md export-ignore\n/*.svg export-ignore\n/*.xml export-ignore\n/*.yml export-ignore\n\n/scripts/ export-ignore\n/tests/ export-ignore\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1494140625,
          "content": "# PHP packages\n/composer.lock\n/vendor/\n\n# Test output\n/.phpunit.result.cache\n/build/\n/test-coverage/\n/tests/storage/\n\n# Operating system files\n.DS_Store\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.591796875,
          "content": "dist: bionic\nsudo: false\nlanguage: php\n\ncache:\n  directories:\n    - $HOME/.composer/cache/files\n\nphp:\n  - 7.4\n  - 7.3\n  - 7.2\n  - 7.1\n\nenv:\n  matrix:\n    - Laravel=7.x\n    - Laravel=6.x\n    - Laravel=5.8.x\n    - Laravel=5.7.x\n    - Laravel=5.6.x\n\nmatrix:\n  exclude:\n    # Unsupported combinations\n    - { env: Laravel=7.x, php: 7.1 }\n    - { env: Laravel=6.x, php: 7.1 }\n\ninstall:\n  - travis_retry composer require --dev \"laravel/framework:${Laravel}\" --no-interaction\n\nscript:\n  - vendor/bin/phpunit --coverage-clover build/logs/clover.xml\n\nafter_success:\n  - travis_retry php vendor/bin/php-coveralls -v\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 46.822265625,
          "content": "**Update: 18 October 2020**\n\nThere is now an official fork of Laravel Breadcrumbs:  \nhttps://github.com/diglactic/laravel-breadcrumbs\n\nBlog post:  \nhttps://newsroom.diglactic.com/laravel-breadcrumbs/\n\nThanks to Sheng Slogar of Diglactic for volunteering to take this project forward.\n\n— *Dave*\n\n---\n\n**As of 18 April 2020, Laravel Breadcrumbs is not being maintained.**\n\nIt will probably keep working for a while - I [removed the version constraint](#v532-mon-30-dec-2019) from `composer.json`, so it will keep working until a future version of Laravel makes breaking changes.\n\nIf you want to create your own fork, to fix bugs or add new features, please see [the instructions below](#creating-a-pull-request). The [MIT license](#license) requires you to keep the copyright notice and license information, but otherwise you can do what you like with the code and documentation.\n\nThanks to the [contributors](https://github.com/davejamesmiller/laravel-breadcrumbs/graphs/contributors) who helped maintain it and add features over the last 7 years - I just don't have the energy for maintaining open source projects (or writing blog posts, or for social media) that I did in 2013, and I've decided it's time to focus on new projects instead.\n\n— *Dave*\n\n---\n\n ![](logo.svg)  \n Laravel Breadcrumbs\n================================================================================\n\n[![Latest Stable Version](https://poser.pugx.org/davejamesmiller/laravel-breadcrumbs/v/stable)](https://packagist.org/packages/davejamesmiller/laravel-breadcrumbs)\n[![Total Downloads](https://poser.pugx.org/davejamesmiller/laravel-breadcrumbs/downloads)](https://packagist.org/packages/davejamesmiller/laravel-breadcrumbs)\n[![Monthly Downloads](https://poser.pugx.org/davejamesmiller/laravel-breadcrumbs/d/monthly)](https://packagist.org/packages/davejamesmiller/laravel-breadcrumbs)\n[![License](https://poser.pugx.org/davejamesmiller/laravel-breadcrumbs/license)](https://packagist.org/packages/davejamesmiller/laravel-breadcrumbs)<br>\n[![Latest Unstable Version](https://poser.pugx.org/davejamesmiller/laravel-breadcrumbs/v/unstable)](https://packagist.org/packages/davejamesmiller/laravel-breadcrumbs)\n[![Build Status](https://travis-ci.com/davejamesmiller/laravel-breadcrumbs.svg?branch=master)](https://travis-ci.com/davejamesmiller/laravel-breadcrumbs)\n[![Coverage Status](https://coveralls.io/repos/github/davejamesmiller/laravel-breadcrumbs/badge.svg?branch=master)](https://coveralls.io/github/davejamesmiller/laravel-breadcrumbs?branch=master)\n\nA simple [Laravel](https://laravel.com/)-style way to create breadcrumbs.\n\n\n Table of Contents\n--------------------------------------------------------------------------------\n\n- [Compatibility Chart](#compatibility-chart)\n- [Getting Started](#getting-started)\n- [Defining Breadcrumbs](#defining-breadcrumbs)\n- [Custom Templates](#custom-templates)\n- [Outputting Breadcrumbs](#outputting-breadcrumbs)\n- [Structured Data](#structured-data)\n- [Route-Bound Breadcrumbs](#route-bound-breadcrumbs)\n- [Advanced Usage](#advanced-usage)\n- [API Reference](#api-reference)\n- [FAQ](#faq)\n- [Troubleshooting](#troubleshooting)\n- [Contributing](#contributing)\n- [No Technical Support](#no-technical-support)\n- [Changelog](#changelog)\n- [License](#license)\n\n\n Compatibility Chart\n--------------------------------------------------------------------------------\n\n| Laravel Breadcrumbs                                                    | Laravel      | PHP  |\n|------------------------------------------------------------------------|--------------|------|\n| **5.3.2**                                                              | 5.6+         | 7.1+ |\n| 5.3.0 – 5.3.1                                                          | 5.6 – 6.x    | 7.1+ |\n| 5.2.1                                                                  | 5.6 – 5.8    | 7.1+ |\n| 5.1.1 – 5.2.0                                                          | 5.6 – 5.7    | 7.1+ |\n| 5.0.0 – 5.1.0                                                          | 5.6          | 7.1+ |\n| [4.x](https://github.com/davejamesmiller/laravel-breadcrumbs/tree/4.x) | 5.5          | 7.0+ |\n| [3.x](https://github.com/davejamesmiller/laravel-breadcrumbs/tree/3.x) | 5.0 – 5.4    | 5.4+ |\n| [2.x](https://github.com/davejamesmiller/laravel-breadcrumbs/tree/2.x) | 4.0 – 4.2    | 5.3+ |\n\n\n Getting Started\n--------------------------------------------------------------------------------\n\n***Note:** If you are using an older version, click it in the table above to see the documentation for that version.*\n\n***Note 2:** If you think this documentation can be improved in any way, please [edit this file](https://github.com/davejamesmiller/laravel-breadcrumbs/edit/master/README.md) and make a pull request.*\n\n### 1. Install Laravel Breadcrumbs\n\nRun this at the command line:\n\n```bash\ncomposer require davejamesmiller/laravel-breadcrumbs:5.x\n```\n\nThis will update `composer.json` and install the package into the `vendor/` directory.\n\n\n### 2. Define your breadcrumbs\n\nCreate a file called `routes/breadcrumbs.php` that looks like this:\n\n```php\n<?php\n\n// Home\nBreadcrumbs::for('home', function ($trail) {\n    $trail->push('Home', route('home'));\n});\n\n// Home > About\nBreadcrumbs::for('about', function ($trail) {\n    $trail->parent('home');\n    $trail->push('About', route('about'));\n});\n\n// Home > Blog\nBreadcrumbs::for('blog', function ($trail) {\n    $trail->parent('home');\n    $trail->push('Blog', route('blog'));\n});\n\n// Home > Blog > [Category]\nBreadcrumbs::for('category', function ($trail, $category) {\n    $trail->parent('blog');\n    $trail->push($category->title, route('category', $category->id));\n});\n\n// Home > Blog > [Category] > [Post]\nBreadcrumbs::for('post', function ($trail, $post) {\n    $trail->parent('category', $post->category);\n    $trail->push($post->title, route('post', $post->id));\n});\n```\n\nSee the [Defining Breadcrumbs](#defining-breadcrumbs) section for more details.\n\n\n### 3. Choose a template\n\nBy default a [Bootstrap](https://getbootstrap.com/docs/4.0/components/breadcrumb/)-compatible ordered list will be rendered, so if you're using Bootstrap 4 you can skip this step.\n\nFirst initialise the config file by running this command:\n\n```bash\nphp artisan vendor:publish --tag=breadcrumbs-config\n```\n\nThen open `config/breadcrumbs.php` and edit this line:\n\n```php\n    'view' => 'breadcrumbs::bootstrap4',\n```\n\nThe possible values are:\n\n- `breadcrumbs::bootstrap4` – [Bootstrap 4](https://getbootstrap.com/docs/4.0/components/breadcrumb/)\n- `breadcrumbs::bootstrap3` – [Bootstrap 3](https://getbootstrap.com/docs/3.4/components/#breadcrumbs)\n- `breadcrumbs::bootstrap2` – [Bootstrap 2](http://getbootstrap.com/2.3.2/components.html#breadcrumbs)\n- `breadcrumbs::bulma` – [Bulma](https://bulma.io/documentation/components/breadcrumb/)\n- `breadcrumbs::foundation6` – [Foundation 6](https://get.foundation/sites/docs/breadcrumbs.html)\n- `breadcrumbs::materialize` – [Materialize](https://materializecss.com/breadcrumbs.html)\n- `breadcrumbs::uikit` – [UIkit](https://getuikit.com/docs/breadcrumb)\n- `breadcrumbs::json-ld` – [JSON-LD Structured Data](https://developers.google.com/search/docs/data-types/breadcrumbs) (&lt;script&gt; tag, no visible output)\n- The path to a custom view: e.g. `partials.breadcrumbs`\n\nSee the [Custom Templates](#custom-templates) section for more details.\n\n\n### 4. Output the breadcrumbs\n\nFinally, call `Breadcrumbs::render()` in the view for each page, passing it the name of the breadcrumb to use and any additional parameters – for example:\n\n```blade\n{{ Breadcrumbs::render('home') }}\n\n{{ Breadcrumbs::render('category', $category) }}\n```\n\nSee the [Outputting Breadcrumbs](#outputting-breadcrumbs) section for other output options, and see [Route-Bound Breadcrumbs](#route-bound-breadcrumbs) for a way to link breadcrumb names to route names automatically.\n\n\n Defining Breadcrumbs\n--------------------------------------------------------------------------------\n\nBreadcrumbs will usually correspond to actions or types of page. For each breadcrumb you specify a name, the breadcrumb title and the URL to link it to. Since these are likely to change dynamically, you do this in a closure, and you pass any variables you need into the closure.\n\nThe following examples should make it clear:\n\n### Static pages\n\nThe most simple breadcrumb is probably going to be your homepage, which will look something like this:\n\n```php\nBreadcrumbs::for('home', function ($trail) {\n     $trail->push('Home', route('home'));\n});\n```\n\nAs you can see, you simply call `$trail->push($title, $url)` inside the closure.\n\nFor generating the URL, you can use any of the standard Laravel URL-generation methods, including:\n\n- `url('path/to/route')` (`URL::to()`)\n- `secure_url('path/to/route')`\n- `route('routename')` or `route('routename', 'param')` or `route('routename', ['param1', 'param2'])` (`URL::route()`)\n- ``action('controller@action')`` (``URL::action()``)\n- Or just pass a string URL (`'http://www.example.com/'`)\n\nThis example would be rendered like this:\n\n```blade\n{{ Breadcrumbs::render('home') }}\n```\n\nAnd results in this output:\n\n> Home\n\n### Parent links\n\nThis is another static page, but this has a parent link before it:\n\n```php\nBreadcrumbs::for('blog', function ($trail) {\n    $trail->parent('home');\n    $trail->push('Blog', route('blog'));\n});\n```\n\nIt works by calling the closure for the `home` breadcrumb defined above.\n\nIt would be rendered like this:\n\n```blade\n{{ Breadcrumbs::render('blog') }}\n```\n\nAnd results in this output:\n\n> [Home](#) / Blog\n\nNote that the default templates do not create a link for the last breadcrumb (the one for the current page), even when a URL is specified. You can override this by creating your own template – see [Custom Templates](#custom-templates) for more details.\n\n\n### Dynamic titles and links\n\nThis is a dynamically generated page pulled from the database:\n\n```php\nBreadcrumbs::for('post', function ($trail, $post) {\n    $trail->parent('blog');\n    $trail->push($post->title, route('post', $post));\n});\n```\n\nThe `$post` object (probably an [Eloquent](https://laravel.com/docs/5.7/eloquent) model, but could be anything) would simply be passed in from the view:\n\n```blade\n{{ Breadcrumbs::render('post', $post) }}\n```\n\nIt results in this output:\n\n> [Home](#) / [Blog](#) / Post Title\n\n**Tip:** You can pass multiple parameters if necessary.\n\n\n### Nested categories\n\nFinally, if you have nested categories or other special requirements, you can call `$trail->push()` multiple times:\n\n```php\nBreadcrumbs::for('category', function ($trail, $category) {\n    $trail->parent('blog');\n\n    foreach ($category->ancestors as $ancestor) {\n        $trail->push($ancestor->title, route('category', $ancestor->id));\n    }\n\n    $trail->push($category->title, route('category', $category->id));\n});\n```\n\nAlternatively you could make a recursive function such as this:\n\n```php\nBreadcrumbs::for('category', function ($trail, $category) {\n    if ($category->parent) {\n        $trail->parent('category', $category->parent);\n    } else {\n        $trail->parent('blog');\n    }\n\n    $trail->push($category->title, route('category', $category->slug));\n});\n```\n\nBoth would be rendered like this:\n\n```blade\n{{ Breadcrumbs::render('category', $category) }}\n```\n\nAnd result in this:\n\n> [Home](#) / [Blog](#) / [Grandparent Category](#) / [Parent Category](#) / Category Title\n\n\n Custom Templates\n--------------------------------------------------------------------------------\n\n### Create a view\n\nTo customise the HTML, create your own view file (e.g. `resources/views/partials/breadcrumbs.blade.php`) like this:\n\n```blade\n@if (count($breadcrumbs))\n\n    <ol class=\"breadcrumb\">\n        @foreach ($breadcrumbs as $breadcrumb)\n\n            @if ($breadcrumb->url && !$loop->last)\n                <li class=\"breadcrumb-item\"><a href=\"{{ $breadcrumb->url }}\">{{ $breadcrumb->title }}</a></li>\n            @else\n                <li class=\"breadcrumb-item active\">{{ $breadcrumb->title }}</li>\n            @endif\n\n        @endforeach\n    </ol>\n\n@endif\n```\n\n(See the [views/ directory](https://github.com/davejamesmiller/laravel-breadcrumbs/tree/master/views) for the built-in templates.)\n\n\n#### View data\n\nThe view will receive an array called `$breadcrumbs`.\n\nEach breadcrumb is an object with the following keys:\n\n- `title` – The breadcrumb title\n- `url` – The breadcrumb URL, or `null` if none was given\n- Plus additional keys for each item in `$data` (see [Custom data](#custom-data))\n\n\n### Update the config\n\nThen update your config file (`config/breadcrumbs.php`) with the custom view name, e.g.:\n\n```php\n    'view' => 'partials.breadcrumbs', #--> resources/views/partials/breadcrumbs.blade.php\n```\n\n\n### Skipping the view\n\nAlternatively you can skip the custom view and call `Breadcrumbs::generate()` to get the breadcrumbs [Collection](https://laravel.com/docs/5.5/collections) directly:\n\n```blade\n@foreach (Breadcrumbs::generate('post', $post) as $breadcrumb)\n    {{-- ... --}}\n@endforeach\n```\n\n\n Outputting Breadcrumbs\n--------------------------------------------------------------------------------\n\nCall `Breadcrumbs::render()` in the view for each page, passing it the name of the breadcrumb to use and any additional parameters.\n\n\n### With Blade\n\nIn the page (e.g. `resources/views/home.blade.php`):\n\n```blade\n{{ Breadcrumbs::render('home') }}\n```\n\nOr with a parameter:\n\n```blade\n{{ Breadcrumbs::render('category', $category) }}\n```\n\n\n### With Blade layouts and @section\n\nIn the page (e.g. `resources/views/home.blade.php`):\n\n```blade\n@extends('layout.name')\n\n@section('breadcrumbs')\n    {{ Breadcrumbs::render('home') }}\n@endsection\n```\n\nOr using the shorthand syntax:\n\n```blade\n@extends('layout.name')\n\n@section('breadcrumbs', Breadcrumbs::render('home'))\n```\n\nAnd in the layout (e.g. `resources/views/layout/name.blade.php`):\n\n```blade\n@yield('breadcrumbs')\n```\n\n\n### Pure PHP (without Blade)\n\nIn the page (e.g. `resources/views/home.php`):\n\n```blade\n<?= Breadcrumbs::render('home') ?>\n```\n\nOr use the longhand syntax if you prefer:\n\n```blade\n<?php echo Breadcrumbs::render('home') ?>\n```\n\n\n Structured Data\n--------------------------------------------------------------------------------\n\nTo render breadcrumbs as JSON-LD [structured data](https://developers.google.com/search/docs/data-types/breadcrumbs) (usually for SEO reasons), use `Breadcrumbs::view()` to render the `breadcrumbs::json-ld` template in addition to the normal one. For example:\n\n```blade\n<html>\n    <head>\n        ...\n        {{ Breadcrumbs::view('breadcrumbs::json-ld', 'category', $category) }}\n        ...\n    </head>\n    <body>\n        ...\n        {{ Breadcrumbs::render('category', $category) }}\n        ...\n    </body>\n</html>\n```\n\n(Note: If you use [Laravel Page Speed](https://github.com/renatomarinho/laravel-page-speed) you may need to [disable the `TrimUrls` middleware](https://github.com/renatomarinho/laravel-page-speed/issues/66).)\n\nTo specify an image, add it to the `$data` parameter in `push()`:\n\n```php\nBreadcrumbs::for('post', function ($trail, $post) {\n    $trail->parent('home');\n    $trail->push($post->title, route('post', $post), ['image' => asset($post->image)]);\n});\n```\n\n(If you prefer to use Microdata or RDFa you will need to create a [custom template](#custom-templates).)\n\n\n Route-Bound Breadcrumbs\n--------------------------------------------------------------------------------\n\nIn normal usage you must call `Breadcrumbs::render($name, $params...)` to render the breadcrumbs on every page. If you prefer, you can name your breadcrumbs the same as your routes and avoid this duplication...\n\n\n### Name your routes\n\nMake sure each of your routes has a name. For example (`routes/web.php`):\n\n```php\n// Home\nRoute::name('home')->get('/', 'HomeController@index');\n\n// Home > [Post]\nRoute::name('post')->get('/post/{id}', 'PostController@show');\n```\n\nFor more details see [Named Routes](https://laravel.com/docs/5.5/routing#named-routes) in the Laravel documentation.\n\n\n### Name your breadcrumbs to match\n\nFor each route, create a breadcrumb with the same name and parameters. For example (`routes/breadcrumbs.php`):\n\n```php\n// Home\nBreadcrumbs::for('home', function ($trail) {\n     $trail->push('Home', route('home'));\n});\n\n// Home > [Post]\nBreadcrumbs::for('post', function ($trail, $id) {\n    $post = Post::findOrFail($id);\n    $trail->parent('home');\n    $trail->push($post->title, route('post', $post));\n});\n```\n\nTo add breadcrumbs to a [custom 404 Not Found page](https://laravel.com/docs/5.5/errors#custom-http-error-pages), use the name `errors.404`:\n\n```php\n// Error 404\nBreadcrumbs::for('errors.404', function ($trail) {\n    $trail->parent('home');\n    $trail->push('Page Not Found');\n});\n```\n\n\n### Output breadcrumbs in your layout\n\nCall `Breadcrumbs::render()` with no parameters in your layout file (e.g. `resources/views/app.blade.php`):\n\n```blade\n{{ Breadcrumbs::render() }}\n```\n\nThis will automatically output breadcrumbs corresponding to the current route. The same applies to `Breadcrumbs::generate()`:\n\n```php\n$breadcrumbs = Breadcrumbs::generate();\n```\n\nAnd to `Breadcrumbs::view()`:\n\n```blade\n{{ Breadcrumbs::view('breadcrumbs::json-ld') }}\n```\n\n\n### Route binding exceptions\n\nIt will throw an `InvalidBreadcrumbException` if the breadcrumb doesn't exist, to remind you to create one. To disable this (e.g. if you have some pages with no breadcrumbs), first initialise the config file, if you haven't already:\n\n```bash\nphp artisan vendor:publish --tag=breadcrumbs-config\n```\n\nThen open `config/breadcrumbs.php` and set this value:\n\n```php\n    'missing-route-bound-breadcrumb-exception' => false,\n```\n\nSimilarly, to prevent it throwing an `UnnamedRouteException` if the current route doesn't have a name, set this value:\n\n```php\n    'unnamed-route-exception' => false,\n```\n\n\n### Route model binding\n\nLaravel Breadcrumbs uses the same model binding as the controller. For example:\n\n```php\n// routes/web.php\nRoute::name('post')->get('/post/{post}', 'PostController@show');\n```\n\n```php\n// app/Http/Controllers/PostController.php\nuse App\\Post;\n\nclass PostController extends Controller\n{\n    public function show(Post $post) // <-- Implicit model binding happens here\n    {\n        return view('post/show', ['post' => $post]);\n    }\n}\n```\n\n```php\n// routes/breadcrumbs.php\nBreadcrumbs::for('post', function ($trail, $post) { // <-- The same Post model is injected here\n    $trail->parent('home');\n    $trail->push($post->title, route('post', $post));\n});\n```\n\nThis makes your code less verbose and more efficient by only loading the post from the database once.\n\nFor more details see [Route Model Binding](https://laravel.com/docs/5.5/routing#route-model-binding) in the Laravel documentation.\n\n\n### Resourceful controllers\n\nLaravel automatically creates route names for resourceful controllers, e.g. `photo.index`, which you can use when defining your breadcrumbs. For example:\n\n```php\n// routes/web.php\nRoute::resource('photo', PhotoController::class);\n```\n\n```\n$ php artisan route:list\n+--------+----------+--------------------+---------------+-------------------------+------------+\n| Domain | Method   | URI                | Name          | Action                  | Middleware |\n+--------+----------+--------------------+---------------+-------------------------+------------+\n|        | GET|HEAD | photo              | photo.index   | PhotoController@index   |            |\n|        | GET|HEAD | photo/create       | photo.create  | PhotoController@create  |            |\n|        | POST     | photo              | photo.store   | PhotoController@store   |            |\n|        | GET|HEAD | photo/{photo}      | photo.show    | PhotoController@show    |            |\n|        | GET|HEAD | photo/{photo}/edit | photo.edit    | PhotoController@edit    |            |\n|        | PUT      | photo/{photo}      | photo.update  | PhotoController@update  |            |\n|        | PATCH    | photo/{photo}      |               | PhotoController@update  |            |\n|        | DELETE   | photo/{photo}      | photo.destroy | PhotoController@destroy |            |\n+--------+----------+--------------------+---------------+-------------------------+------------+\n```\n\n```php\n// routes/breadcrumbs.php\n\n// Photos\nBreadcrumbs::for('photo.index', function ($trail) {\n    $trail->parent('home');\n    $trail->push('Photos', route('photo.index'));\n});\n\n// Photos > Upload Photo\nBreadcrumbs::for('photo.create', function ($trail) {\n    $trail->parent('photo.index');\n    $trail->push('Upload Photo', route('photo.create'));\n});\n\n// Photos > [Photo Name]\nBreadcrumbs::for('photo.show', function ($trail, $photo) {\n    $trail->parent('photo.index');\n    $trail->push($photo->title, route('photo.show', $photo->id));\n});\n\n// Photos > [Photo Name] > Edit Photo\nBreadcrumbs::for('photo.edit', function ($trail, $photo) {\n    $trail->parent('photo.show', $photo);\n    $trail->push('Edit Photo', route('photo.edit', $photo->id));\n});\n```\n\nFor more details see [Resource Controllers](https://laravel.com/docs/5.5/controllers#resource-controllers) in the Laravel documentation.\n\n(Related FAQ: [Why is there no Breadcrumbs::resource() method?](#why-is-there-no-breadcrumbsresource-method).)\n\n\n Advanced Usage\n--------------------------------------------------------------------------------\n\n### Breadcrumbs with no URL\n\nThe second parameter to `push()` is optional, so if you want a breadcrumb with no URL you can do so:\n\n```php\n$trail->push('Sample');\n```\n\nThe `$breadcrumb->url` value will be `null`.\n\nThe default Bootstrap templates provided render this with a CSS class of \"active\", the same as the last breadcrumb, because otherwise they default to black text not grey which doesn't look right.\n\n\n### Custom data\n\nThe `push()` method accepts an optional third parameter, `$data` – an array of arbitrary data to be passed to the breadcrumb, which you can use in your custom template. For example, if you wanted each breadcrumb to have an icon, you could do:\n\n```php\n$trail->push('Home', '/', ['icon' => 'home.png']);\n```\n\nThe `$data` array's entries will be merged into the breadcrumb as properties, so you would access the icon as `$breadcrumb->icon` in your template, like this:\n\n```blade\n<li><a href=\"{{ $breadcrumb->url }}\">\n    <img src=\"/images/icons/{{ $breadcrumb->icon }}\">\n    {{ $breadcrumb->title }}\n</a></li>\n```\n\nDo not use the keys `title` or `url` as they will be overwritten.\n\n\n### Before and after callbacks\n\nYou can register \"before\" and \"after\" callbacks to add breadcrumbs at the start/end of the trail. For example, to automatically add the current page number at the end:\n\n```php\nBreadcrumbs::after(function ($trail) {\n    $page = (int) request('page', 1);\n    if ($page > 1) {\n        $trail->push(\"Page $page\");\n    }\n});\n```\n\n\n### Getting the current page breadcrumb\n\nTo get the last breadcrumb for the current page, use `Breadcrumb::current()`. For example, you could use this to output the current page title:\n\n```blade\n<title>{{ ($breadcrumb = Breadcrumbs::current()) ? $breadcrumb->title : 'Fallback Title' }}</title>\n```\n\nTo ignore a breadcrumb, add `'current' => false` to the `$data` parameter in `push()`. This can be useful to ignore pagination breadcrumbs:\n\n```php\nBreadcrumbs::after(function ($trail) {\n    $page = (int) request('page', 1);\n    if ($page > 1) {\n        $trail->push(\"Page $page\", null, ['current' => false]);\n    }\n});\n```\n\n```blade\n<title>\n    {{ ($breadcrumb = Breadcrumbs::current()) ? \"$breadcrumb->title –\" : '' }}\n    {{ ($page = (int) request('page')) > 1 ? \"Page $page –\" : '' }}\n    Demo App\n</title>\n```\n\nFor more advanced filtering, use `Breadcrumbs::generate()` and Laravel's [Collection class](https://laravel.com/docs/5.5/collections) methods instead:\n\n```php\n$current = Breadcrumbs::generate()->where('current', '!==', 'false)->last();\n```\n\n\n### Switching views at runtime\n\nYou can use `Breadcrumbs::view()` in place of `Breadcrumbs::render()` to render a template other than the [default one](#3-choose-a-template):\n\n```blade\n{{ Breadcrumbs::view('partials.breadcrumbs2', 'category', $category) }}\n```\n\nOr you can override the config setting to affect all future `render()` calls:\n\n```php\nConfig::set('breadcrumbs.view', 'partials.breadcrumbs2');\n```\n\n```blade\n{{ Breadcrumbs::render('category', $category) }}\n```\n\nOr you could call `Breadcrumbs::generate()` to get the breadcrumbs Collection and load the view manually:\n\n```blade\n@include('partials.breadcrumbs2', ['breadcrumbs' => Breadcrumbs::generate('category', $category)])\n```\n\n\n### Overriding the \"current\" route\n\nIf you call `Breadcrumbs::render()` or `Breadcrumbs::generate()` with no parameters, it will use the current route name and parameters by default (as returned by Laravel's `Route::current()` method).\n\nYou can override this by calling `Breadcrumbs::setCurrentRoute($name, $param1, $param2...)`.\n\n\n### Checking if a breadcrumb exists\n\nTo check if a breadcrumb with a given name exists, call `Breadcrumbs::exists('name')`, which returns a boolean.\n\n\n### Defining breadcrumbs in a different file\n\nIf you don't want to use `routes/breadcrumbs.php`, you can change it in the config file. First initialise the config file, if you haven't already:\n\n```bash\nphp artisan vendor:publish --tag=breadcrumbs-config\n```\n\nThen open `config/breadcrumbs.php` and edit this line:\n\n```php\n    'files' => base_path('routes/breadcrumbs.php'),\n```\n\nIt can be an absolute path, as above, or an array:\n\n```php\n    'files' => [\n        base_path('breadcrumbs/admin.php'),\n        base_path('breadcrumbs/frontend.php'),\n    ],\n```\n\nSo you can use `glob()` to automatically find files using a wildcard:\n\n```php\n    'files' => glob(base_path('breadcrumbs/*.php')),\n```\n\nOr return an empty array `[]` to disable loading.\n\n\n### Defining/using breadcrumbs in another package\n\nIf you are creating your own package, simply load your breadcrumbs file from your service provider's `boot()` method:\n\n```php\nuse Illuminate\\Support\\ServiceProvider;\n\nclass MyServiceProvider extends ServiceProvider\n{\n    public function register() {}\n\n    public function boot()\n    {\n        if (class_exists('Breadcrumbs')) {\n            require __DIR__ . '/breadcrumbs.php';\n        }\n    }\n}\n```\n\n\n### Dependency injection\n\nYou can use [dependency injection](https://laravel.com/docs/5.5/providers#the-boot-method) to access the `BreadcrumbsManager` instance if you prefer, instead of using the `Breadcrumbs::` facade:\n\n```php\nuse DaveJamesMiller\\Breadcrumbs\\BreadcrumbsManager;\nuse Illuminate\\Support\\ServiceProvider;\n\nclass MyServiceProvider extends ServiceProvider\n{\n    public function register() {}\n\n    public function boot(BreadcrumbsManager $breadcrumbs)\n    {\n        $breadcrumbs->register(...);\n    }\n}\n```\n\n\n### Macros\n\nThe BreadcrumbsManager class is [macroable](https://unnikked.ga/understanding-the-laravel-macroable-trait-dab051f09172), so you can add your own methods. For example:\n\n```php\nBreadcrumbs::macro('pageTitle', function () {\n    $title = ($breadcrumb = Breadcrumbs::current()) ? \"{$breadcrumb->title} – \" : '';\n\n    if (($page = (int) request('page')) > 1) {\n        $title .= \"Page $page – \";\n    }\n\n    return $title . 'Demo App';\n});\n```\n\n```blade\n<title>{{ Breadcrumbs::pageTitle() }}</title>\n```\n\n\n### Advanced customisations\n\nFor more advanced customisations you can subclass BreadcrumbsManager and/or BreadcrumbsGenerator, then update the config file with the new class name:\n\n```php\n    // Manager\n    'manager-class' => DaveJamesMiller\\Breadcrumbs\\BreadcrumbsManager::class,\n\n    // Generator\n    'generator-class' => DaveJamesMiller\\Breadcrumbs\\BreadcrumbsGenerator::class,\n```\n\n(**Note:** Anything that's not part of the public API (see below) may change between releases, so I suggest you write unit tests to ensure it doesn't break when upgrading.)\n\n\n API Reference\n--------------------------------------------------------------------------------\n\n### `Breadcrumbs` Facade\n\n| Method                                                              | Returns    | Added in |\n|---------------------------------------------------------------------|------------|----------|\n| `Breadcrumbs::for(string $name, closure $callback)`                 | void       | 5.1.0    |\n| `Breadcrumbs::register(string $name, closure $callback)`            | void       | 1.0.0    |\n| `Breadcrumbs::before(closure $callback)`                            | void       | 4.0.0    |\n| `Breadcrumbs::after(closure $callback)`                             | void       | 4.0.0    |\n| `Breadcrumbs::exists()`                                             | boolean    | 2.2.0    |\n| `Breadcrumbs::exists(string $name)`                                 | boolean    | 2.2.0    |\n| `Breadcrumbs::generate()`                                           | Collection | 2.2.3    |\n| `Breadcrumbs::generate(string $name)`                               | Collection | 1.0.0    |\n| `Breadcrumbs::generate(string $name, mixed $param1, ...)`           | Collection | 1.0.0    |\n| `Breadcrumbs::render()`                                             | string     | 2.2.0    |\n| `Breadcrumbs::render(string $name)`                                 | string     | 1.0.0    |\n| `Breadcrumbs::render(string $name, mixed $param1, ...)`             | string     | 1.0.0    |\n| `Breadcrumbs::view(string $view)`                                   | string     | 4.0.0    |\n| `Breadcrumbs::view(string $view, string $name)`                     | string     | 4.0.0    |\n| `Breadcrumbs::view(string $view, string $name, mixed $param1, ...)` | string     | 4.0.0    |\n| `Breadcrumbs::setCurrentRoute(string $name)`                        | void       | 2.2.0    |\n| `Breadcrumbs::setCurrentRoute(string $name, mixed $param1, ...)`    | void       | 2.2.0    |\n| `Breadcrumbs::clearCurrentRoute()`                                  | void       | 2.2.0    |\n\n[Source](classes/BreadcrumbsManager.php)\n\n\n### Defining breadcrumbs\n\n```php\nuse App\\Models\\Post;\nuse DaveJamesMiller\\Breadcrumbs\\BreadcrumbsGenerator;\n\nBreadcrumbs::before(function (BreadcrumbsGenerator $trail) {\n    // ...\n});\n\nBreadcrumbs::for('name', function (BreadcrumbsGenerator $trail, Post $post) {\n    // ...\n});\n\nBreadcrumbs::after(function (BreadcrumbsGenerator $trail) {\n    // ...\n});\n```\n\n\n| Method                                                  | Returns | Added in |\n|---------------------------------------------------------|---------|----------|\n| `$trail->push(string $title)`                           | void    | 1.0.0    |\n| `$trail->push(string $title, string $url)`              | void    | 1.0.0    |\n| `$trail->push(string $title, string $url, array $data)` | void    | 2.3.0    |\n| `$trail->parent(string $name)`                          | void    | 1.0.0    |\n| `$trail->parent(string $name, mixed $param1, ...)`      | void    | 1.0.0    |\n\n[Source](classes/BreadcrumbsGenerator.php)\n\n\n### In the view (template)\n\n```blade\n@foreach ($breadcrumbs as $breadcrumb)\n    {{-- ... --}}\n@endforeach\n```\n\n| Variable                             | Type          | Added in |\n|--------------------------------------|---------------|----------|\n| `$breadcrumb->title`                 | string        | 1.0.0    |\n| `$breadcrumb->url`                   | string / null | 1.0.0    |\n| `$breadcrumb->custom_attribute_name` | mixed         | 2.3.0    |\n\n[Source](classes/BreadcrumbsGenerator.php#L96)\n\n\n### Configuration file\n\n`config/breadcrumbs.php`\n\n| Setting                                    | Type           | Added in |\n|--------------------------------------------|----------------|----------|\n| `view`                                     | string         | 2.0.0    |\n| `files`                                    | string / array | 4.0.0    |\n| `unnamed-route-exception`                  | boolean        | 4.0.0    |\n| `missing-route-bound-breadcrumb-exception` | boolean        | 4.0.0    |\n| `invalid-named-breadcrumb-exception`       | boolean        | 4.0.0    |\n| `manager-class`                            | string         | 4.2.0    |\n| `generator-class`                          | string         | 4.2.0    |\n\n[Source](config/breadcrumbs.php)\n\n\n FAQ\n--------------------------------------------------------------------------------\n\n### There's a new version of Laravel - can you add support for it?\n\nSince version 5.3.2, there is no maximum version of Laravel specified in [composer.json](composer.json), so most of the time it will just work.\n\nIf it breaks for any reason, it will be fixed when (1) someone [submits a pull request](#new-version-of-laravel) to fix it, or (2) I decide to upgrade my own applications - whichever comes first. In practice it's usually the former because I don't generally upgrade on day 1.\n\n\n### Why is there no Breadcrumbs::resource() method?\n\nA few people have suggested adding `Breadcrumbs::resource()` to match [`Route::resource()`](https://laravel.com/docs/5.7/controllers#resource-controllers), but no-one has come up with a good implementation that (a) is flexible enough to deal with translations, nested resources, etc., and (b) isn't overly complex as a result.\n\nPersonally I don't think there is a good all-round solution, so instead I recommend adding your own using `Breadcrumbs::macro()`. Here's a starting point:\n\n```php\nBreadcrumbs::macro('resource', function ($name, $title) {\n    // Home > Blog\n    Breadcrumbs::for(\"$name.index\", function ($trail) use ($name, $title) {\n        $trail->parent('home');\n        $trail->push($title, route(\"$name.index\"));\n    });\n\n    // Home > Blog > New\n    Breadcrumbs::for(\"$name.create\", function ($trail) use ($name) {\n        $trail->parent(\"$name.index\");\n        $trail->push('New', route(\"$name.create\"));\n    });\n\n    // Home > Blog > Post 123\n    Breadcrumbs::for(\"$name.show\", function ($trail, $model) use ($name) {\n        $trail->parent(\"$name.index\");\n        $trail->push($model->title, route(\"$name.show\", $model));\n    });\n\n    // Home > Blog > Post 123 > Edit\n    Breadcrumbs::for(\"$name.edit\", function ($trail, $model) use ($name) {\n        $trail->parent(\"$name.show\", $model);\n        $trail->push('Edit', route(\"$name.edit\", $model));\n    });\n});\n\nBreadcrumbs::resource('blog', 'Blog');\nBreadcrumbs::resource('photos', 'Photos');\nBreadcrumbs::resource('users', 'Users');\n```\n\nNote that this *doesn't* deal with translations or nested resources, and it assumes that all models have a `title` attribute (which users probably don't). Adapt it however you see fit.\n\n\n Troubleshooting\n--------------------------------------------------------------------------------\n\n#### General\n\n- Re-read the instructions and make sure you did everything correctly.\n- Start with the simple options and only use the advanced options (e.g. Route-Bound Breadcrumbs) once you understand how it works.\n\n#### Class 'Breadcrumbs' not found\n\n- Try running `composer update davejamesmiller/laravel-breadcrumbs` to upgrade.\n- Try running `php artisan package:discover` to ensure the service provider is detected by Laravel.\n\n#### Breadcrumb not found with name ...\n\n- Make sure you register the breadcrumbs in the right place (`routes/breadcrumbs.php` by default).\n    - Try putting `dd(__FILE__)` in the file to make sure it's loaded.\n    - Try putting `dd($files)` in `BreadcrumbsServiceProvider::registerBreadcrumbs()` to check the path is correct.\n    - If not, try running `php artisan config:clear` (or manually delete `bootstrap/cache/config.php`) or update the path in `config/breadcrumbs.php`.\n- Make sure the breadcrumb name is correct.\n    - If using Route-Bound Breadcrumbs, make sure it matches the route name exactly.\n- To suppress these errors when using Route-Bound Breadcrumbs (if you don't want breadcrumbs on some pages), either:\n    - Register them with an empty closure (no push/parent calls), or\n    - Set [`missing-route-bound-breadcrumb-exception` to `false`](#route-binding-exceptions) in the config file to disable the check (but you won't be warned if you miss any pages).\n\n#### BreadcrumbsServiceProvider::registerBreadcrumbs(): Failed opening required ...\n\n- Make sure the path is correct.\n- If so, check the file ownership & permissions are correct.\n- If not, try running `php artisan config:clear` (or manually delete `bootstrap/cache/config.php`) or update the path in `config/breadcrumbs.php`.\n\n#### Undefined variable: breadcrumbs\n\n- Make sure you use `{{ Breadcrumbs::render() }}` or `{{ Breadcrumbs::view() }}`, not `@include()`.\n\n#### Method for does not exist\n\n- You're probably using a version [older than 5.1](#v510-sat-5-may-2018) - use `Breadcrumbs::register()` instead of `Breadcrumbs::for()` (or upgrade).\n\n#### Something else\n\nSorry I wasn't able to help this time, but once you have solved your problem, please [edit this file](https://github.com/davejamesmiller/laravel-breadcrumbs/edit/master/README.md) with the solution to help the next person!\n\n\n Contributing\n--------------------------------------------------------------------------------\n\n**Documentation:** If you think the documentation can be improved in any way, please do [edit this file](https://github.com/davejamesmiller/laravel-breadcrumbs/edit/master/README.md) and make a pull request.\n\n**Bug fixes:** Please fix it and open a [pull request](https://github.com/davejamesmiller/laravel-breadcrumbs/pulls). ([See below](#creating-a-pull-request) for more detailed instructions.) Bonus points if you add a unit test to make sure it doesn't happen again!\n\n**New features:** Only features with a clear use case and well-considered API will be accepted. They must be documented and include unit tests. If in doubt, make a proof-of-concept (either code or documentation) and open a [pull request](https://github.com/davejamesmiller/laravel-breadcrumbs/pulls) to discuss the details. (Tip: If you want a feature that's too specific to be included by default, see [Macros](#macros) or [Advanced customisations](#advanced-customisations) for ways to add them.)\n\n\n### Creating a pull request\n\nThe easiest way to work on Laravel Breadcrumbs is to tell Composer to install it from source (Git) using the `--prefer-source` flag:\n\n```bash\nrm -rf vendor/davejamesmiller/laravel-breadcrumbs\ncomposer install --prefer-source\n```\n\nThen checkout the master branch and create your own local branch to work on:\n\n```bash\ncd vendor/davejamesmiller/laravel-breadcrumbs\ngit checkout -t origin/master\ngit checkout -b YOUR_BRANCH\n```\n\nNow make your changes, including unit tests and documentation (if appropriate). Run the unit tests to make sure everything is still working:\n\n```bash\nscripts/test.sh\n```\n\nThen commit the changes. [Fork the repository on GitHub](https://github.com/davejamesmiller/laravel-breadcrumbs/fork) if you haven't already, and push your changes to it:\n\n```bash\ngit remote add YOUR_USERNAME git@github.com:YOUR_USERNAME/laravel-breadcrumbs.git\ngit push -u YOUR_USERNAME YOUR_BRANCH\n```\n\nFinally, browse to the repository on GitHub and create a pull request.\n\n(Alternatively, there is a [test app](https://github.com/davejamesmiller/laravel-packages-test) that you can use.)\n\n\n### Using your fork in a project\n\nTo use your own fork in a project, update the `composer.json` in your main project as follows:\n\n```json5\n{\n    // ADD THIS:\n    \"repositories\": [\n        {\n            \"type\": \"vcs\",\n            \"url\": \"https://github.com/YOUR_USERNAME/laravel-breadcrumbs.git\"\n        }\n    ],\n    \"require\": {\n        // UPDATE THIS:\n        \"davejamesmiller/laravel-breadcrumbs\": \"dev-YOUR_BRANCH\"\n    }\n}\n```\n\nReplace `YOUR_USERNAME` with your GitHub username and `YOUR_BRANCH` with the branch name (e.g. `develop`). This tells Composer to use your repository instead of the default one.\n\n\n### Unit tests\n\nTo run the unit tests:\n\n```bash\nscripts/test.sh\n```\n\nTo check code coverage:\n\n```bash\nscripts/test-coverage.sh\n```\n\nThen open `test-coverage/index.html` to view the results. Be aware of the [edge cases](https://phpunit.de/manual/current/en/code-coverage-analysis.html#code-coverage-analysis.edge-cases) in PHPUnit that can make it not-quite-accurate.\n\n\n### New version of Laravel\n\nThere is no maximum version specified in [`composer.json`](composer.json), so there is no need for a new version of Laravel Breadcrumbs to be released every 6 months. However, this file will need to be updated to run tests against the new version:\n\n- [`.travis.yml`](.travis.yml)\n    - `matrix` (Laravel versions)\n    - `php` (PHP versions)\n    - `exclude` (Unsupported combinations)\n\nIf changes are required, also update:\n\n- [`README.md`](README.md)\n    - [Compatibility Chart](README.md#compatibility-chart)\n    - [Changelog](README.md#changelog)\n\nIf backwards-incompatible changes cause the **minimum** supported versions of Laravel or PHP to change, update:\n\n- [`composer.json`](composer.json)\n    - `php/*`\n    - `illuminate/*`\n\n### Releasing a new version\n\n*This section is for maintainers only.*\n\n- Ensure the unit tests are updated and have 100% coverage\n- Update the [test app](https://github.com/davejamesmiller/laravel-packages-test), if appropriate, and test it manually\n- Ensure the [README](README.md) is up to date, including:\n    - Document any new features\n    - [Compatibility Chart](README.md#compatibility-chart)\n    - [Changelog](README.md#changelog)\n- Merge the changes into the `master` branch (if necessary)\n- Push the code changes to GitHub (`git push`)\n- Make sure [all tests are passing](https://travis-ci.org/davejamesmiller/laravel-breadcrumbs)\n- Tag the release (`git tag 1.2.3`)\n- Push the tag (`git push --tag`)\n\n\n No Technical Support\n--------------------------------------------------------------------------------\n\nSorry, I don't offer any technical support, and GitHub Issues are disabled. That means I won't figure out why it's not working for you, I won't fix bugs for you, and I won't write new features on request - this is **free** software after all.\n\n**But** the beauty of open source is you can do whatever you want with it! You can fork it, fix it, improve it and extend it. If you don't want to maintain your own fork, and you think other people would benefit from your changes, you can submit a [pull request](https://github.com/davejamesmiller/laravel-breadcrumbs/pulls) to have your changes included in the next release.\n\nIf you get really stuck, I suggest you:\n\n1. Read and re-read both this file and the [Laravel documentation](https://laravel.com/docs) to see if you missed something.\n2. Dive into the source code and spend some time figuring out how it's meant to work and what's actually happening.\n3. Try to reproduce the problem on a brand new Laravel project, in case it's an incompatibility with another package or your other code.\n4. Ask your colleagues to help you debug it, if you work in a team.\n5. Pay someone more experienced to help you (or if you work for a company, ask your boss to pay them).\n6. Try posting on [Stack Overflow](https://stackoverflow.com/search?q=laravel+breadcrumbs), [Laravel.io Forum](https://laravel.io/forum) or [Laracasts Forum](https://laracasts.com/discuss) (but I can't promise anyone will answer - they don't get paid either).\n7. Use a different package instead.\n8. Write your own.\n\n\n Changelog\n--------------------------------------------------------------------------------\n\n*Laravel Breadcrumbs uses [Semantic Versioning](http://semver.org/).*\n\n\n### [v5.3.2](https://github.com/davejamesmiller/laravel-breadcrumbs/tree/5.3.2) (Mon 30 Dec 2019)\n\n- Remove the maximum Laravel version constraint from composer.json, to support Laravel 7+ without requiring a new release every 6 months\n\n\n### [v5.3.1](https://github.com/davejamesmiller/laravel-breadcrumbs/tree/5.3.1) (Sun 20 Oct 2019)\n\n- Add a docblock to the `Breadcrumbs` facade (alternative to [IDE Helper](https://github.com/barryvdh/laravel-ide-helper) – thanks to [Alexandr Chernyaev](https://github.com/davejamesmiller/laravel-breadcrumbs/pull/206))\n\n\n### [v5.3.0](https://github.com/davejamesmiller/laravel-breadcrumbs/tree/5.3.0) (Tue 3 Sep 2019)\n\n- Add Laravel 6.x support\n- Add [Laravel Ignition](https://freek.dev/1441-ignition-a-new-error-page-for-laravel) suggested solutions\n- Change `vendor:publish` tag from `config` to `breadcrumbs-config` to match Horizon & Telescope and simplify the command\n\n\n### [v5.2.1](https://github.com/davejamesmiller/laravel-breadcrumbs/tree/5.2.1) (Wed 27 Feb 2019)\n\n- Add Laravel 5.8 support (thanks to [Andrew Dabich](https://github.com/davejamesmiller/laravel-breadcrumbs/pull/203))\n\n\n### [v5.2.0](https://github.com/davejamesmiller/laravel-breadcrumbs/tree/5.2.0) (Tue 30 Oct 2018)\n\n- Add [UIkit](https://getuikit.com/docs/breadcrumb) template (`breadcrumbs::uikit`)\n  ([#198](https://github.com/davejamesmiller/laravel-breadcrumbs/pull/198) by [PieterHollevoet](https://github.com/PieterHollevoet))\n\n\n### [v5.1.2](https://github.com/davejamesmiller/laravel-breadcrumbs/tree/5.1.2) (Fri 14 Sep 2018)\n\n- Update [default config file](config/breadcrumbs.php) with the full list of available views\n\n\n### [v5.1.1](https://github.com/davejamesmiller/laravel-breadcrumbs/tree/5.1.1) (Wed 5 Sep 2018)\n\n- Add Laravel 5.7 support\n\n\n### [v5.1.0](https://github.com/davejamesmiller/laravel-breadcrumbs/tree/5.1.0) (Sat 5 May 2018)\n\n- Add `Breadcrumbs::for($name, $callback)` as an alias for `Breadcrumbs::register($name, $callback)`\n- Renamed `$breadcrumbs` to `$trail` in documentation (this doesn't affect the code)\n\nThese changes were inspired by (read: taken directly from) [Dwight Watson's Breadcrumbs package](https://github.com/dwightwatson/breadcrumbs).\n\n#### Upgrading from 5.0.0 to 5.1.0\n\nNo changes are required, but I recommend updating your `routes/breadcrumbs.php` to match the new documentation:\n\n- Replace `Breadcrumbs::register` with `Breadcrumbs::for`\n- Replace `$breadcrumbs` with `$trail`\n\n\n### [v5.0.0](https://github.com/davejamesmiller/laravel-breadcrumbs/tree/5.0.0) (Sat 10 Feb 2018)\n\n- Add Laravel 5.6 support, and drop support for Laravel 5.5\n- Drop PHP 7.0 support (add `void` return type hint, and use `[]` instead of `list()`)\n- Fix class names in PhpDoc for `Breadcrumbs` facade when using [IDE Helper](https://github.com/barryvdh/laravel-ide-helper)\n\n#### Upgrading from 4.x to 5.x\n\n- [Upgrade to Laravel 5.6](https://laravel.com/docs/5.6/upgrade) (requires PHP 7.1.3+)\n- If you are extending any classes, add `: void` return type hints where needed.\n\n\n### Older versions\n\n- [Changelog for v4.x](https://github.com/davejamesmiller/laravel-breadcrumbs/tree/4.x#changelog)\n- [Changelog for v3.x](https://github.com/davejamesmiller/laravel-breadcrumbs/tree/3.x#changelog)\n- [Changelog for v2.x and below](https://github.com/davejamesmiller/laravel-breadcrumbs/blob/2.x/CHANGELOG.md)\n\n\n License\n--------------------------------------------------------------------------------\n\n*[MIT License](https://choosealicense.com/licenses/mit/)*\n\n**Copyright © 2013-2019 Dave James Miller**\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "classes",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.3017578125,
          "content": "{\n    \"name\": \"davejamesmiller/laravel-breadcrumbs\",\n    \"description\": \"A simple Laravel-style way to create breadcrumbs.\",\n    \"keywords\": [\n        \"laravel\"\n    ],\n    \"homepage\": \"https://github.com/davejamesmiller/laravel-breadcrumbs\",\n    \"authors\": [\n        {\n            \"name\": \"Dave James Miller\",\n            \"email\": \"dave@davejamesmiller.com\"\n        }\n    ],\n    \"license\": \"MIT\",\n    \"require\": {\n        \"php\": \">=7.1.3\",\n        \"facade/ignition-contracts\": \"^1.0\",\n        \"laravel/framework\": \">=5.6\"\n    },\n    \"require-dev\": {\n        \"orchestra/testbench\": \">=3.6\",\n        \"phpunit/phpunit\": \"^7.0|^8.0\",\n        \"php-coveralls/php-coveralls\": \"^2.0\",\n        \"spatie/phpunit-snapshot-assertions\": \"^2.0\"\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"autoload\": {\n        \"psr-4\": {\n            \"DaveJamesMiller\\\\Breadcrumbs\\\\\": \"classes/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"App\\\\\": \"tests/\",\n            \"BreadcrumbsTests\\\\\": \"tests/\"\n        }\n    },\n    \"extra\": {\n        \"laravel\": {\n            \"providers\": [\n                \"DaveJamesMiller\\\\Breadcrumbs\\\\BreadcrumbsServiceProvider\"\n            ],\n            \"aliases\": {\n                \"Breadcrumbs\": \"DaveJamesMiller\\\\Breadcrumbs\\\\Facades\\\\Breadcrumbs\"\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.svg",
          "type": "blob",
          "size": 5.078125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n   xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   version=\"1.1\"\n   viewBox=\"0 0 147 22\"\n   height=\"44\"\n   width=\"294\"\n   id=\"Logo\">\n  <metadata\n     id=\"metadata20\">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about=\"\">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n        <dc:title></dc:title>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <defs\n     id=\"defs3\">\n    <style\n       id=\"style5\">\n      .cls-1 {\n        fill: #e1f5fe;\n      }\n\n      .cls-1, .cls-2, .cls-3, .cls-4, .cls-5, .cls-6 {\n        fill-rule: evenodd;\n      }\n\n      .cls-2 {\n        fill: #fff;\n      }\n\n      .cls-3 {\n        fill: #b3e5fc;\n      }\n\n      .cls-4 {\n        fill: #0288d1;\n      }\n\n      .cls-5 {\n        fill: #0277bd;\n      }\n\n      .cls-6 {\n        fill: #01579b;\n      }\n\n      .cls-7 {\n        opacity: 0.4;\n      }\n    </style>\n    <clipPath\n       clipPathUnits=\"userSpaceOnUse\"\n       id=\"clipPath3373\">\n      <path\n         d=\"M 0,700 700,700 700,0 0,0 0,700 Z\"\n         id=\"path3375\" />\n    </clipPath>\n    <mask\n       id=\"mask4876\"\n       maskUnits=\"userSpaceOnUse\">\n      <path\n         clip-path=\"none\"\n         d=\"m 24.828764,8.048586 c -0.221988,0.04855 -3.856268,0.950197 -3.856268,0.950197 L 18.000133,4.9206058 c -0.08326,-0.1178799 -0.152583,-0.2358376 0.05548,-0.2635375 0.20806,-0.027778 3.585728,-0.6381855 3.73831,-0.6728102 0.152583,-0.034625 0.284391,-0.076252 0.471676,0.1803601 0.187207,0.2566125 2.7573,3.5094751 2.854405,3.6342801 0.0971,0.124883 -0.06925,0.2011347 -0.291237,0.2496877 m -0.634528,7.027354 c 0.09072,0.142701 0.181449,0.233503 -0.103797,0.337222 -0.285246,0.103719 -9.622346,3.254964 -9.803874,3.332773 -0.181527,0.07781 -0.32415,0.103718 -0.557575,-0.233426 -0.233426,-0.337144 -3.271226,-5.594433 -3.271226,-5.594433 l 9.897866,-2.575462 c 0.24642,-0.07781 0.324228,-0.129706 0.479845,0.116713 0.155617,0.24642 3.268036,4.473912 3.358761,4.616613 M 8.164124,12.071364 c -0.121381,0.02599 -5.8068373,1.386704 -6.1102127,1.456109 -0.3033755,0.06933 -0.3033755,0.03463 -0.3380002,-0.0694 -0.034703,-0.10403 -6.7599283,-13.9712203 -6.8532984,-14.1445777 -0.093448,-0.1733574 -0.088546,-0.3106894 0,-0.3106894 0.088468,0 5.3694121,-0.4720643 5.5562303,-0.4818682 0.1868961,-0.00988 0.1672105,0.029489 0.2359933,0.1474472 0,0 7.4485977,12.8570021 7.5786157,13.0823351 0.130018,0.225256 0.05198,0.294661 -0.06933,0.320649 M 26.618127,8.298273 C 26.396217,8.048586 23.326671,4.2062458 22.785746,3.5542882 22.244821,2.9023306 21.981206,3.0202105 21.648263,3.068763 21.31532,3.117315 17.43143,3.7692731 16.980608,3.8455255 c -0.450823,0.07633 -0.735135,0.2566903 -0.457748,0.6450326 0.246731,0.345392 2.800018,3.9652779 3.362417,4.7625039 L 9.7343,11.684811 1.6612895,-1.8120877 C 1.3399403,-2.288587 1.2731806,-2.4550972 0.5417805,-2.4217952 c -0.7314001,0.033224 -6.3329922,0.4985969 -6.7319162,0.5318989 -0.3990016,0.033302 -0.8369076,0.2108611 -0.4379837,1.1528111 0.3990018,0.94195 6.7605493,14.6504882 6.9377971,15.0494122 0.1773256,0.398925 0.6383411,1.046136 1.7177787,0.7868 1.1058925,-0.265716 4.9409876,-1.266723 7.0365236,-1.815506 1.107293,2.005125 3.365529,6.072566 3.783128,6.655352 0.557576,0.778085 0.941327,0.64939 1.797299,0.390054 0.668297,-0.202536 10.457543,-3.722827 10.898484,-3.904354 0.44094,-0.181527 0.71327,-0.311234 0.414952,-0.752175 -0.219342,-0.32415 -2.801729,-3.783751 -4.154352,-5.593654 0.926388,-0.246576 4.220645,-1.123556 4.571873,-1.218793 0.409195,-0.110955 0.46475,-0.31209 0.242763,-0.561778\"\n         style=\"opacity:0.4;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none\"\n         id=\"path4878\" />\n    </mask>\n  </defs>\n  <g\n     style=\"display:inline\"\n     id=\"layer2\">\n    <path\n       style=\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd\"\n       id=\"breadcrumb-1-2\"\n       d=\"m 0.03124998,0.03125 137.18750002,0 L 147,12 137,22 0.03124998,21.96875 Z\"\n       class=\"cls-6\" />\n  </g>\n  <g\n     id=\"layer1\">\n    <path\n       id=\"breadcrumb-5\"\n       d=\"m 110,1 9,11 -9,9 26,0 9,-9 -9,-11 -26,0 z\"\n       style=\"fill:#ffcdd2;fill-opacity:1;fill-rule:evenodd\" />\n    <path\n       id=\"breadcrumb-4\"\n       d=\"m 82,1 9,11 -9,9 26,0 9,-9 -9,-11 -26,0 z\"\n       style=\"fill:#ef9a9a;fill-opacity:1;fill-rule:evenodd\" />\n    <path\n       id=\"breadcrumb-3\"\n       d=\"m 54,1 9,11 -9,9 26,0 9,-9 L 80,1 54,1 Z\"\n       style=\"fill:#e57373;fill-opacity:1;fill-rule:evenodd\" />\n    <path\n       id=\"breadcrumb-2\"\n       d=\"m 26,1 9,11 -9,9 26,0 9,-9 L 52,1 26,1 Z\"\n       style=\"fill:#ef5350;fill-opacity:1;fill-rule:evenodd\" />\n    <path\n       style=\"fill:#e53935;fill-opacity:1;fill-rule:evenodd\"\n       id=\"breadcrumb-1\"\n       d=\"M 1,1 24,1 33,12 24,21 1,21 1,1 Z\"\n       class=\"cls-6\" />\n    <path\n       mask=\"url(#mask4876)\"\n       style=\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd\"\n       id=\"breadcrumb-1-1\"\n       d=\"M 1,1 24,1 33,12 24,21 1,21 1,1 Z\"\n       class=\"cls-6\" />\n  </g>\n</svg>\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.9365234375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit\n    backupGlobals=\"false\"\n    backupStaticAttributes=\"false\"\n    beStrictAboutChangesToGlobalState=\"true\"\n    beStrictAboutOutputDuringTests=\"true\"\n    beStrictAboutTestsThatDoNotTestAnything=\"true\"\n    bootstrap=\"vendor/autoload.php\"\n    cacheResult=\"true\"\n    colors=\"true\"\n    convertErrorsToExceptions=\"true\"\n    convertNoticesToExceptions=\"true\"\n    convertWarningsToExceptions=\"true\"\n    processIsolation=\"false\"\n    stopOnFailure=\"false\"\n    verbose=\"true\"\n>\n\n    <!-- List of files with tests inside -->\n    <testsuites>\n        <testsuite name=\"Package Test Suite\">\n            <directory suffix=\"Test.php\">tests/</directory>\n        </testsuite>\n    </testsuites>\n\n    <!-- List of source files for code coverage checker -->\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">src/</directory>\n        </whitelist>\n    </filter>\n\n</phpunit>\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "views",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}