{
  "metadata": {
    "timestamp": 1736712238799,
    "page": 980,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wizwizdev/wizwizxui-timebot",
      "stars": 1175,
      "defaultBranch": "main",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "MIT License\n\nCopyright (c) 2023 WizWiz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README-fa.md",
          "type": "blob",
          "size": 8.3232421875,
          "content": "<p align=\"center\">\n  <a href=\"https://github.com/wizwizdev/wizwizxui-timebot\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://user-images.githubusercontent.com/27927279/227711552-d2bc1089-5666-477b-9be7-d7e50a5286dc.png\">\n      <img width=\"200\" height=\"200\" src=\"https://user-images.githubusercontent.com/27927279/227711552-d2bc1089-5666-477b-9be7-d7e50a5286dc.png\">\n    </picture>\n  </a>\n</p>\n\n<p align=\"center\">\n\t<a href=\"./README.md\">\n\tEnglish\n\t</a>\n\t/\n\t<a href=\"./README-fa.md\">\n\tفارسی\n\t</a>\n\n</p>\n\n<h1 align=\"center\"/>ویزویز</h1>\n\n<p align=\"center\">\nفروش آسان با <a href=\"https://github.com/wizwizdev/wizwizxui-timebot\">ویزویز</a> نصب فقط با یک دستور\n</p>\n\n<p align=\"center\">\nویزویز یک ربات قدرتمند و حرفه ای است که از چندین نوع پنل پشتیبانی می کند و بهترین گزینه برای فروش است، اکثر پروتکل ها را پشتیبانی می کند و نصب آسانی دارد. این ربات برای مردم عزیز ایران آماده شده است. یک جایگزین عالی برای فروش است تا بتوانید به راحتی کار خود را مدیریت کنید.\n</p>\n\n\n<div align=center>\n\n[![Telegram Channel](https://img.shields.io/endpoint?label=Channel&style=flat-square&url=https%3A%2F%2Ftg.sumanjay.workers.dev%2Fwizwizch&color=blue)](https://telegram.dog/wizwizch)\n[![Telegram Group](https://img.shields.io/endpoint?color=neon&label=Support%20Group&style=flat-square&url=https%3A%2F%2Ftg.sumanjay.workers.dev%2Fwizwizdev)](https://telegram.dog/wizwizdev)\n<img src=\"https://img.shields.io/github/license/wizwizdev/wizwizxui-timebot?style=flat-square\" />\n<img src=\"https://img.shields.io/github/v/release/wizwizdev/wizwizxui-timebot.svg\" />\n<!-- <img src=\"https://visitor-badge.glitch.me/badge?page_id=wizwizdev.wizwizdev\" />\n -->\n</div>\n\n<br>\n<br>\n    <a align=\"center\">\n        <img src=\"https://github.com/wizwizdev/wizwizxui-timebot/assets/27927279/f6635ea5-ab26-4c64-a7b8-952203f79763\" />\n    </a>     \n<br>\n<br>\n\n\n\n\n\n\n\n# دستور نصب روی Ubuntu-20.4\n\n\n- اگر سرور شما دسترسی روت ندارد، لطفا با دستور sudo -i دسترسی روت بدهید و سپس نصب کنید\n- یک ربات در @botfather ایجاد کنید و آن را استارت کنید\n- قبل از نصب حتما ip سرور را روی دامنه تنظیم کنید \n> دستور نصب را در کنسول وارد کرده و موارد مورد نیاز را برای تکمیل نصب وارد کنید.\n```\nbash <(curl -s https://raw.githubusercontent.com/wizwizdev/wizwizxui-timebot/main/wizwiz.sh)\n```\n- در مرحله اول «sub.domain.com» یا «domain.com» را بدون https وارد کنید\n- ایمیل را وارد کنید\n- کلمه y را وارد کنید\n- عدد 2 را وارد کنید\n- نام کاربری برای دیتابیس را وارد کنید\n- رمز عبور برای دیتابیس را وارد کنید\n- توکن ربات را وارد کنید\n- آیدی عددی ادمین را از @userinfobot بگیرید و وارد کنید\n- مجدد «sub.domain.com» یا «domain.com» را بدون https وارد کنید\n- بسیار خوب، پیام نصب ( ✅ ربات wizwiz با موفقیت نصب شد! ) به ربات ارسال می شود.\n\n<br>\n<br>\n\n## دستور آپدیت ربات - آپدیت پنل - بک آپ - حذف ویزویز\n\n- با هر به روز رسانی و بک آپ، یک اعلان برای ربات مدیر ارسال می شود\n\n\n```\nbash <(curl -s https://raw.githubusercontent.com/wizwizdev/wizwizxui-timebot/main/update.sh)\n```\n\n<br>\n<hr>\n<br>\n<br>\n\n\n\n# پنل های پشتیبانی شده\n\n- (Marzban)\n````\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install\n````\n- (Niduka Akalanka)\n````\nbash <(curl -Ls https://raw.githubusercontent.com/NidukaAkalanka/x-ui-english/master/install.sh) 0.2.1.2\n````\n- (Sanaei)\n````\nbash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh) v1.7.9\n````\n- (Alireza)\n````\nbash <(curl -Ls https://raw.githubusercontent.com/alireza0/x-ui/master/install.sh) 1.5.5\n````\n- (Vaxilu)\n````\nbash <(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)\n````\n\n\n\n<br>\n<hr>\n<br>\n\n\n# حمایت\n\n- Tron (TRX): `TY8j7of18gbMtneB8bbL7SZk5gcntQEemG`\n- Bitcoin: `bc1qcnkjnqvs7kyxvlfrns8t4ely7x85dhvz5gqge4`\n- Dogecoin: `DMyGMghEh4W55P3VeVHntCN3vYAFtshvVH`\n\n\n\n<br>\n<hr>\n<br>\n\n\n# امکانات\n\n- درگاه nowpayments - zarinpal - nextpay و ارزی ریالی\n- پشتیبانی از - xtls - tls - reality - Grpc - ws - tcp\n- پشتیبانی vless - vmess - trojan\n- امکان تمدید سرویس\n- نمایش مشخصات کانفیگ به صورت ساب ( داخل نرم افزار v2ray )\n- نمایندگی ( خرید تکی و انبوه - مدیریت کانفیگ - آمار فروش و ... )\n- قابلیت جست و جو کانفیگ های خریداری شده برای دسترسی راحت ( نماینده )\n- نمایش مشخصات  کانفیگ به صورت وب\n- دکمه ثبت لینک برای تمدید و به روزرسانی کانفیگ ( از بات خرید نشده )\n- دکمه دریافت QRcode کانفیگ \n- حذف کانفیگ توسط کاربر ( حذف از پنل x-ui و دیتابیس + اعلان حذف )\n- قابلیت اضافه کردن حجم و زمان روی سرور دلخواه + اعلان\n- قابلیت کسر موجودی از اعتبار کاربر\n- قابلیت قطع و دریافت لینک جدید توسط کاربر ( تغییر uuid )\n- قابلیت به روزرسانی کانکشن ( با توجه به تغییرات شما در پنل )\n- قابلیت تغییر نام کانفیگ ( رندم و عادی )\n- تعیین نام کانفیگ هنگام خرید توسط کاربر ( پلن دلخواه )\n- اشتراک هوشمند\n- وضعیت فیلتر شدن سرورها\n- تغییر مکان خودکار\n- افزایش حجم و زمان سرویس دهی\n- قابلیت پاس کردن\n- امکان سفارش طرح مورد نظر توسط کاربر\n- احراز هویت شماره تماس ایرانی و خارجی\n- پشتیبان گیری از پنل x-ui\n- زیر مجموعه و کمیسیون\n- کدهای تخفیف و هدیه ایجاد کنید\n- امکان ردیابی کاربر\n- ایجاد دکمه و پاسخ برای آن\n- خروجی پیکربندی با IP یا دامنه های مختلف\n- امکان تغییر پروتکل و نوع شبکه\n- تنظیم پورت پیکربندی به صورت تصادفی یا خودکار\n- کیف پول (امکان شارژ - انتقال موجودی)\n- ارسال اعلان عضو جدید در ربات به (ادمین)\n- نمایش اطلاعات کاربر (user-admin)\n- امکان ارسال پیام خصوصی از ادمین به کاربر\n- امکان مدیریت و مشاهده سرورها - دسته بندی ها - پلن ها\n- قابلیت مسدود کردن و آزادسازی\n- امکان اضافه کردن ادمین\n- نمایش موجودی سرورها\n- امکان ارسال گزارش درآمد به کانال\n- ارسال پیام های عمومی\n- پیکربندی های فروخته شده را دریافت کنید\n- ایجاد پورت مشترک و پیکربندی پورت اختصاصی\n- تست حساب برای کاربران\n- قابلیت کارت به کارت\n- نمایش حساب های فروخته شده هر طرح\n- قابلیت نمایش (لینک نرم افزار)\n- ارسال پیام های عمومی با CronJob\n- اعلام پایان حجم و زمان پیکربندی (به کاربر)\n- قفل اجباری کانال\n- امکان دریافت جزئیات لینک\n- قابلیت خاموش/روشن (همه ویژگی های ربات)\n- اطلاع رسانی اطلاعات خرید + تمدید و ... به صورت کامل به ربات ادمین\n\n\n\n<br>\n<hr>\n<br>\n\n\nحتما به گروه و کانال بپیوندید و از ما حمایت کنید\n\n## Contact Developer\n💎 Group: https://t.me/wizwizdev\n💎 Channel: https://t.me/wizwizch\n\n<br>\n<br>\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/wizwizdev/wizwizxui-timebot.svg)](https://starchart.cc/wizwizdev/wizwizxui-timebot)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.6416015625,
          "content": "<p align=\"center\">\n  <a href=\"https://github.com/wizwizdev/wizwizxui-timebot\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://user-images.githubusercontent.com/27927279/227711552-d2bc1089-5666-477b-9be7-d7e50a5286dc.png\">\n      <img width=\"200\" height=\"200\" src=\"https://user-images.githubusercontent.com/27927279/227711552-d2bc1089-5666-477b-9be7-d7e50a5286dc.png\">\n    </picture>\n  </a>\n</p> \n\n<p align=\"center\">\n\t<a href=\"./README.md\">\n\tEnglish\n\t</a>\n\t/\n\t<a href=\"./README-fa.md\">\n\tفارسی\n\t</a>\n\n</p>\n\n<h1 align=\"center\"/>Welcome to wizwiz</h1>\n\n<p align=\"center\">\nEasy to sell with <a href=\"https://github.com/wizwizdev/wizwizxui-timebot\">wizwizxui-timebot</a> easy install with few clicks\n</p>\n\n<p align=\"center\">\nwizwiz is a powerful and professional robot that supports several types of panels and is the best option for sale, supports most protocols and has easy installation. This robot is optimized for the dear people of Iran. It is a great alternative to selling so that you can get to work.\n</p>\n\n\n<div align=center>\n\n[![Telegram Channel](https://img.shields.io/endpoint?label=Channel&style=flat-square&url=https%3A%2F%2Ftg.sumanjay.workers.dev%2Fwizwizch&color=blue)](https://telegram.dog/wizwizch)\n[![Telegram Group](https://img.shields.io/endpoint?color=neon&label=Support%20Group&style=flat-square&url=https%3A%2F%2Ftg.sumanjay.workers.dev%2Fwizwizdev)](https://telegram.dog/wizwizdev)\n<img src=\"https://img.shields.io/github/license/wizwizdev/wizwizxui-timebot?style=flat-square\" />\n<img src=\"https://img.shields.io/github/v/release/wizwizdev/wizwizxui-timebot.svg\" />\n<!-- <img src=\"https://visitor-badge.glitch.me/badge?page_id=wizwizdev.wizwizdev\" />\n -->\n</div>\n\n<br>\n<br>\n    <a align=\"center\">\n        <img src=\"https://github.com/wizwizdev/wizwizxui-timebot/assets/27927279/f6635ea5-ab26-4c64-a7b8-952203f79763\" />\n    </a>     \n<br>\n<br>\n\n# Installation Ubuntu-20.4 \n\n\n- If your server does not have root access, please grant root access with \"sudo -i\" command and then install\n- Create a bot in @botfather and /start it\n- The first option asks you for a domain, you must set the ip server for the domain and then enter it according to the example\n> Enter the installation command in the console and enter the required items to complete the installation.\n```\nbash <(curl -s https://raw.githubusercontent.com/wizwizdev/wizwizxui-timebot/main/wizwiz.sh)\n```\n- First enter \"sub.domain.com\" or \"domain.com\" without https\n- Enter email\n- Enter y\n- Enter 2\n- Enter username database\n- Enter password database\n- Enter token\n- Enter Numerical ID of admin from @userinfobot\n- Re-enter \"sub.domain.com\" or \"domain.com\" without https\n- Very good, the installation message ( ✅ The wizwiz bot has been successfully installed! ) is sent to the bot\n\n<br>\n<br>\n\n## Update bot - Update panel - backup - remove wizwiz\n\n- With every update and backup, a notification is sent to the manager robot\n```\nbash <(curl -s https://raw.githubusercontent.com/wizwizdev/wizwizxui-timebot/main/update.sh)\n```\n\n<br>\n\n<hr>\n\n<br>\n\n\n# Supported Panels\n\n\n- (Marzban)\n````\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install\n````\n- (Niduka Akalanka)\n````\nbash <(curl -Ls https://raw.githubusercontent.com/NidukaAkalanka/x-ui-english/master/install.sh) 0.2.1.2\n````\n- (Sanaei)\n````\nbash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh) v1.7.9\n````\n- (Alireza)\n````\nbash <(curl -Ls https://raw.githubusercontent.com/alireza0/x-ui/master/install.sh) 1.5.5\n````\n- (Vaxilu)\n````\nbash <(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)\n````\n\n\n\n\n<br>\n<hr>\n<br>\n\n\n\n# Donation\n\n- Tron (TRX): `TY8j7of18gbMtneB8bbL7SZk5gcntQEemG`\n- Bitcoin: `bc1qcnkjnqvs7kyxvlfrns8t4ely7x85dhvz5gqge4`\n- Dogecoin: `DMyGMghEh4W55P3VeVHntCN3vYAFtshvVH`\n\n<br>\n<hr>\n<br>\n\n# Features\n\n- nowpayments - zarinpal - nextpay portal and rial currency\n- Support for - xtls - tls - reality - Grpc - ws - tcp\n- vless - vmess - trojan support\n- The possibility of extending the service\n- Display the configuration profile as a sub (in the v2ray software)\n- Representation (individual and mass purchase - configuration management - sales statistics, etc.)\n- Ability to search purchased configurations for easy access (representative)\n- View configuration information on the web\n- Button to register the link to renew and update the config (not purchased from bot)\n- Config QRcode button\n- Delete configuration by user (delete from x-ui panel and database + delete notification)\n- Ability to add volume and time on desired server + notification\n- Ability to deduct balance from user credit\n- Ability to disconnect and receive a new link by the user (change uuid)\n- Ability to update the connection (according to your changes in the panel)\n- The ability to change the config name (random and normal)\n- Determining the configuration name when purchasing by the user (custom plan)\n- Smart subscription\n- Filtering status of servers\n- Automatic relocation\n- Increasing volume and service time\n- ability to pass\n- The possibility of ordering the desired design by the user\n- Authentication of Iranian and foreign contact numbers\n- Backup x-ui panel\n- Subcommittee and commission\n- Create discount and gift codes\n- Ability to track the user\n- Create button and answer for it\n- Configuration output with different IP or domains\n- Ability to change protocol and network type\n- Set configuration port randomly or automatically\n- Wallet (possibility of charging - balance transfer)\n- Send notification of new member in robot to (admin)\n- Display user information (user-admin)\n- Ability to send private messages from the admin to the user\n- Ability to manage and view servers - categories - plans\n- Ability to block and release\n- Ability to add admin\n- Show the inventory of servers\n- Ability to send income reports to the channel\n- Send public messages\n- Get sold configurations\n- Create a shared port and configure a dedicated port\n- Account testing for users\n- Card to card functionality\n- Display the sold accounts of each plan\n- Display capability (software link)\n- Send public messages with CronJob\n- Announcing the end of volume and configuration time (to the user)\n- Forced channel lock\n- Ability to get link details\n- Off/on capability (all robot features)\n- Notification of purchase information + renewal etc. in full to the admin robot\n\n\n<br>\n<hr>\n<br>\n\nBe sure to join the group and channel and support us\n\n## Contact Developer\n💎 Group: https://t.me/wizwizdev\n💎 Channel: https://t.me/wizwizch\n\n<br>\n<br>\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/wizwizdev/wizwizxui-timebot.svg)](https://starchart.cc/wizwizdev/wizwizxui-timebot)\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "bot.php",
          "type": "blob",
          "size": 441.7333984375,
          "content": "<?php\ninclude_once 'config.php';\ncheck();\n\n$robotState = $botState['botState']??\"on\";\n\nGOTOSTART:\nif ($userInfo['step'] == \"banned\" && $from_id != $admin && $userInfo['isAdmin'] != true) {\n    sendMessage($mainValues['banned']);\n    exit();\n}\n$checkSpam = checkSpam();\nif(is_numeric($checkSpam)){\n    $time = jdate(\"Y-m-d H:i:s\", $checkSpam);\n    sendMessage(\"اکانت شما به دلیل اسپم مسدود شده است\\nزمان آزادسازی اکانت شما: \\n$time\");\n    exit();\n}\nif(preg_match(\"/^haveJoined(.*)/\",$data,$match)){\n    if ($joniedState== \"kicked\" || $joniedState== \"left\"){\n        alert($mainValues['not_joine_yet']);\n        exit();\n    }else{\n        delMessage();\n        $text = $match[1];\n    }\n}\nif (($joniedState== \"kicked\" || $joniedState== \"left\") && $from_id != $admin){\n    sendMessage(str_replace(\"CHANNEL-ID\", $channelLock, $mainValues['join_channel_message']), json_encode(['inline_keyboard'=>[\n        [['text'=>$buttonValues['join_channel'],'url'=>\"https://t.me/\" . str_replace(\"@\", \"\", $botState['lockChannel'])]],\n        [['text'=>$buttonValues['have_joined'],'callback_data'=>'haveJoined' . $text]],\n        ]]),\"HTML\");\n    exit;\n}\nif($robotState == \"off\" && $from_id != $admin){\n    sendMessage($mainValues['bot_is_updating']);\n    exit();\n}\nif(strstr($text, \"/start \")){\n    $inviter = str_replace(\"/start \", \"\", $text);\n    if($inviter < 0) exit();\n    if($uinfo->num_rows == 0 && $inviter != $from_id){\n        $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid` = ?\");\n        $stmt->bind_param(\"i\", $inviter);\n        $stmt->execute();\n        $inviterInfo = $stmt->get_result();\n        $stmt->close();\n        \n        if($inviterInfo->num_rows > 0){\n            $first_name = !empty($first_name)?$first_name:\" \";\n            $username = !empty($username)?$username:\" \";\n            if($uinfo->num_rows == 0){\n                $sql = \"INSERT INTO `users` (`userid`, `name`, `username`, `refcode`, `wallet`, `date`, `refered_by`)\n                                    VALUES (?,?,?, 0,0,?,?)\";\n                $stmt = $connection->prepare($sql);\n                $time = time();\n                $stmt->bind_param(\"issii\", $from_id, $first_name, $username, $time, $inviter);\n                $stmt->execute();\n                $stmt->close();\n            }else{\n                $refcode = time();\n                $sql = \"UPDATE `users` SET `refered_by` = ? WHERE `userid` = ?\";\n                $stmt = $connection->prepare($sql);\n                $stmt->bind_param(\"si\", $inviter, $from_id);\n                $stmt->execute();\n                $stmt->close();\n            }\n            $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid`=?\");\n            $stmt->bind_param(\"i\", $from_id);\n            $stmt->execute();\n            $uinfo = $stmt->get_result();\n            $userInfo = $uinfo->fetch_assoc();\n            $stmt->close();\n            \n            setUser(\"referedBy\" . $inviter);\n            $userInfo['step'] = \"referedBy\" . $inviter;\n            sendMessage($mainValues['invited_user_joined_message'],null,null, $inviter);\n        }\n    }\n    \n    $text = \"/start\";\n}\nif($userInfo['phone'] == null && $from_id != $admin && $userInfo['isAdmin'] != true && $botState['requirePhone'] == \"on\"){\n    if(isset($update->message->contact)){\n        $contact = $update->message->contact;\n        $phone_number = $contact->phone_number;\n        $phone_id = $contact->user_id;\n        if($phone_id != $from_id){\n            sendMessage($mainValues['please_select_from_below_buttons']);\n            exit();\n        }else{\n            if(!preg_match('/^\\+98(\\d+)/',$phone_number) && !preg_match('/^98(\\d+)/',$phone_number) && !preg_match('/^0098(\\d+)/',$phone_number) && $botState['requireIranPhone'] == 'on'){\n                sendMessage($mainValues['use_iranian_number_only']);\n                exit();\n            }\n            setUser($phone_number, 'phone');\n            \n            sendMessage($mainValues['phone_confirmed'],$removeKeyboard);\n            $text = \"/start\";\n            \n            $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid`=?\");\n            $stmt->bind_param(\"i\", $from_id);\n            $stmt->execute();\n            $uinfo = $stmt->get_result();\n            $userInfo = $uinfo->fetch_assoc();\n            $stmt->close();\n        }\n    }else{\n        sendMessage($mainValues['send_your_phone_number'], json_encode([\n\t\t\t'keyboard' => [[[\n\t\t\t\t\t'text' => $buttonValues['send_phone_number'],\n\t\t\t\t\t'request_contact' => true,\n\t\t\t\t]]],\n\t\t\t'resize_keyboard' => true\n\t\t]));\n\t\texit();\n    }\n}\nif(preg_match('/^\\/([Ss]tart)/', $text) or $text == $buttonValues['back_to_main'] or $data == 'mainMenu') {\n    setUser();\n    setUser(\"\", \"temp\"); \n    if(isset($data) and $data == \"mainMenu\"){\n        $res = editText($message_id, $mainValues['start_message'], getMainKeys());\n        if(!$res->ok){\n            sendMessage($mainValues['start_message'], getMainKeys());\n        }\n    }else{\n        if($from_id != $admin && empty($userInfo['first_start'])){\n            setUser('sent','first_start');\n            $keys = json_encode(['inline_keyboard'=>[\n                [['text'=>$buttonValues['send_message_to_user'],'callback_data'=>'sendMessageToUser' . $from_id]]\n            ]]);\n    \n            sendMessage(str_replace([\"FULLNAME\", \"USERNAME\", \"USERID\"], [\"<a href='tg://user?id=$from_id'>$first_name</a>\", $username, $from_id], $mainValues['new_member_joined'])\n                ,$keys, \"html\",$admin);\n        }\n        sendMessage($mainValues['start_message'],getMainKeys());\n    }\n}\nif(preg_match('/^sendMessageToUser(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    editText($message_id,'🔘|لطفا پیامت رو بفرست');\n    setUser($data);\n}\nif(preg_match('/^sendMessageToUser(\\d+)/',$userInfo['step'],$match) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    sendMessage($text,null,null,$match[1]);\n    sendMessage(\"پیامت به کاربر ارسال شد\",$removeKeyboard);\n    sendMessage($mainValues['reached_main_menu'],getAdminKeys());\n    setUser();\n}\nif($data=='botReports' && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    editText($message_id, \"آمار ربات در این لحظه\",getBotReportKeys());\n}\nif($data==\"adminsList\" && $from_id == $admin){\n    editText($message_id, \"لیست ادمین ها\",getAdminsKeys());\n}\nif(preg_match('/^delAdmin(\\d+)/',$data,$match) && $from_id === $admin){\n    $stmt = $connection->prepare(\"UPDATE `users` SET `isAdmin` = false WHERE `userid` = ?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n    editText($message_id, \"لیست ادمین ها\",getAdminsKeys());\n\n}\nif($data==\"addNewAdmin\" && $from_id === $admin){\n    delMessage();\n    sendMessage(\"🧑‍💻| کسی که میخوای ادمین کنی رو آیدی عددیشو بفرست ببینم:\",$cancelKey);\n    setUser($data);\n}\nif($userInfo['step'] == \"addNewAdmin\" && $from_id === $admin && $text != $buttonValues['cancel']){\n    if(is_numeric($text)){\n        $stmt = $connection->prepare(\"UPDATE `users` SET `isAdmin` = true WHERE `userid` = ?\");\n        $stmt->bind_param(\"i\", $text);\n        $stmt->execute();\n        $stmt->close();\n        \n        sendMessage(\"✅ | 🥳 خب کاربر الان ادمین شد تبریک میگم\",$removeKeyboard);\n        setUser();\n        \n        sendMessage(\"لیست ادمین ها\",getAdminsKeys());\n    }else{\n        sendMessage($mainValues['send_only_number']);\n    }\n}\nif(($data==\"botSettings\" or preg_match(\"/^changeBot(\\w+)/\",$data,$match)) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if($data!=\"botSettings\"){\n        if($match[1] == \"cartToCartAutoAcceptType\") $newValue = $botState[$match[1]] == \"0\"?\"1\":($botState[$match[1]] == \"1\"?\"2\":0);\n        else $newValue = $botState[$match[1]]==\"on\"?\"off\":\"on\";\n        setSettings($match[1], $newValue);\n    }\n    editText($message_id,$mainValues['change_bot_settings_message'],getBotSettingKeys());\n}\nif($data==\"changeUpdateConfigLinkState\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $newValue = $botState['updateConnectionState']==\"robot\"?\"site\":\"robot\";\n    setSettings('updateConnectionState', $newValue);\n    editText($message_id,$mainValues['change_bot_settings_message'],getBotSettingKeys());\n}\nif(($data==\"gateWays_Channels\" or preg_match(\"/^changeGateWays(\\w+)/\",$data,$match)) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if($data!=\"gateWays_Channels\"){\n        $newValue = $botState[$match[1]]==\"on\"?\"off\":\"on\";\n        setSettings($match[1], $newValue);\n    }\n    editText($message_id,$mainValues['change_bot_settings_message'],getGateWaysKeys());\n}\nif($data==\"changeConfigRemarkType\"){\n    switch($botState['remark']){\n        case \"digits\":\n            $newValue = \"manual\";\n            break;\n        case \"manual\":\n            $newValue = \"idanddigits\";\n            break;\n        default:\n            $newValue = \"digits\";\n            break;\n    }\n    setSettings('remark', $newValue);\n    editText($message_id,$mainValues['change_bot_settings_message'],getBotSettingKeys());\n}\nif(preg_match('/^changePaymentKeys(\\w+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    switch($match[1]){\n        case \"nextpay\":\n            $gate = \"کد جدید درگاه نکست پی\";\n            break;\n        case \"nowpayment\":\n            $gate = \"کد جدید درگاه nowPayment\";\n            break;\n        case \"zarinpal\":\n            $gate = \"کد جدید درگاه زرین پال\";\n            break;\n        case \"bankAccount\":\n            $gate = \"شماره حساب جدید\";\n            break;\n        case \"holderName\":\n            $gate = \"اسم دارنده حساب\";\n            break;\n        case \"tronwallet\":\n            $gate = \"آدرس والت ترون\";\n            break;\n    }\n    sendMessage(\"🔘|لطفا $gate را وارد کنید\", $cancelKey);\n    setUser($data);\n}\nif(preg_match('/^changePaymentKeys(\\w+)/',$userInfo['step'],$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n\n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'PAYMENT_KEYS'\");\n    $stmt->execute();\n    $paymentInfo = $stmt->get_result();\n    $stmt->close();\n    $paymentKeys = json_decode($paymentInfo->fetch_assoc()['value'],true)??array();\n    $paymentKeys[$match[1]] = $text;\n    $paymentKeys = json_encode($paymentKeys);\n    \n    if($paymentInfo->num_rows > 0) $stmt = $connection->prepare(\"UPDATE `setting` SET `value` = ? WHERE `type` = 'PAYMENT_KEYS'\");\n    else $stmt = $connection->prepare(\"INSERT INTO `setting` (`type`, `value`) VALUES ('PAYMENT_KEYS', ?)\");\n    $stmt->bind_param(\"s\", $paymentKeys);\n    $stmt->execute(); \n    $stmt->close();\n    \n\n    sendMessage($mainValues['saved_successfuly'],$removeKeyboard);\n    sendMessage($mainValues['change_bot_settings_message'],getGateWaysKeys());\n    setUser();\n}\nif(($data == \"agentsList\" || preg_match('/^nextAgentList(\\d+)/',$data,$match)) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $keys = getAgentsList($match[1]??0);\n    if($keys != null) editText($message_id,$mainValues['agents_list'], $keys);\n    else alert(\"نماینده ای یافت نشد\");\n}\nif(preg_match('/^agentDetails(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $userDetail = bot('getChat',['chat_id'=>$match[1]])->result;\n    $userUserName = $userDetail->username;\n    $fullName = $userDetail->first_name . \" \" . $userDetail->last_name;\n\n    editText($message_id,str_replace(\"AGENT-NAME\", $fullName, $mainValues['agent_details']), getAgentDetails($match[1]));\n}\nif(preg_match('/^removeAgent(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"UPDATE `users` SET `is_agent` = 0 WHERE `userid` = ?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n    alert($mainValues['agent_deleted_successfuly']);\n    $keys = getAgentsList();\n    if($keys != null) editKeys($keys);\n    else editKeys(json_encode(['inline_keyboard'=>[[['text'=>$buttonValues['back_button'],'callback_data'=>\"managePanel\"]]]]));\n}\nif(preg_match('/^agentPercentDetails(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid` = ?\");\n    $stmt->bind_param('i',$match[1]);\n    $stmt->execute();\n    $info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $userName = $info['name'];\n    editText($message_id, str_replace(\"AGENT-NAME\", $userName, $mainValues['agent_discount_settings']), getAgentDiscounts($match[1]));\n}\nif(preg_match('/^addDiscount(Server|Plan)Agent(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid` = ?\");\n    $stmt->bind_param('i',$match[2]);\n    $stmt->execute();\n    $info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $userName = $info['name'];\n    \n    if($match[1] == \"Plan\"){\n        $offset = 0;\n        $limit = 20;\n        \n        $condition = array_values(array_keys(json_decode($info['discount_percent'],true)['plans']??array()));\n        $condition = count($condition) > 0? \"WHERE `id` NOT IN (\" . implode(\",\", $condition) . \")\":\"\";\n        $stmt = $connection->prepare(\"SELECT * FROM `server_plans` $condition LIMIT ? OFFSET ?\");\n        $stmt->bind_param(\"ii\", $limit, $offset);\n        $stmt->execute();\n        $list = $stmt->get_result();\n        $stmt->close();\n        \n        if($list->num_rows > 0){\n            $keys = array();\n            while($row = $list->fetch_assoc()){\n                $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `id` = ?\");\n                $stmt->bind_param(\"i\", $row['catid']);\n                $stmt->execute();\n                $catInfo = $stmt->get_result()->fetch_assoc();\n                $stmt->close();\n                \n                $keys[] = [['text'=>$row['title'] . \" \" . $catInfo['title'],'callback_data'=>\"editAgentDiscountPlan\" . $match[2] . \"_\" . $row['id']]];\n            }\n            \n            if($list->num_rows >= $limit){\n                $keys[] = [['text'=>\"▶️\",'callback_data'=>\"nextAgentDiscountPlan\" . $match[2] . \"_\" . ($offset + $limit)]];\n            }\n            $keys[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"agentPercentDetails\" . $match[2]]];\n            $keys = json_encode(['inline_keyboard'=>$keys]);\n            \n            editText($message_id,\"لطفا سرور مورد نظر را برای افزودن تخفیف به نماینده $userName انتخاب کنید\",$keys);\n        }else alert(\"سروری باقی نمانده است\");\n    }else{\n        $condition = array_values(array_keys(json_decode($info['discount_percent'],true)['servers']??array()));\n        $condition = count($condition) > 0? \"WHERE `id` NOT IN (\" . implode(\",\", $condition) . \")\":\"\";\n        $stmt = $connection->prepare(\"SELECT * FROM `server_info` $condition\");\n        $stmt->execute();\n        $list = $stmt->get_result();\n        $stmt->close();\n        \n        if($list->num_rows > 0){\n            $keys = array();\n            while($row = $list->fetch_assoc()){\n                $keys[] = [['text'=>$row['title'],'callback_data'=>\"editAgentDiscountServer\" . $match[2] . \"_\" . $row['id']]];\n            }\n            \n            $keys[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"agentPercentDetails\" . $match[2]]];\n            $keys = json_encode(['inline_keyboard'=>$keys]);\n            \n            editText($message_id,\"لطفا سرور مورد نظر را برای افزودن تخفیف به نماینده $userName انتخاب کنید\",$keys);\n        }else alert(\"سروری باقی نمانده است\");\n    }\n}\nif(preg_match('/^nextAgentDiscountPlan(?<agentId>\\d+)_(?<offset>\\d+)/',$data,$match) &&($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid` = ?\");\n    $stmt->bind_param('i',$match['agentId']);\n    $stmt->execute();\n    $info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $userName = $info['name'];\n    \n    $offset = $match['offset'];\n    $limit = 20;\n    \n    $condition = array_values(array_keys(json_decode($info['discount_percent'],true)['plans']??array()));\n    $condition = count($condition) > 0? \"WHERE `id` NOT IN (\" . implode(\",\", $condition) . \")\":\"\";\n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` $condition LIMIT ? OFFSET ?\");\n    $stmt->bind_param(\"ii\", $limit, $offset);\n    $stmt->execute();\n    $list = $stmt->get_result();\n    $stmt->close();\n    \n    if($list->num_rows > 0){\n        $keys = array();\n        while($row = $list->fetch_assoc()){\n            $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `id` = ?\");\n            $stmt->bind_param(\"i\", $row['catid']);\n            $stmt->execute();\n            $catInfo = $stmt->get_result()->fetch_assoc();\n            $stmt->close();\n            \n            $keys[] = [['text'=>$row['title'] . \" \" . $catInfo['title'],'callback_data'=>\"editAgentDiscountPlan\" . $match['agentId'] . \"_\" . $row['id']]];\n        }\n        \n        if($list->num_rows >= $limit && $offset == 0){\n            $keys[] = [['text'=>\"▶️\",'callback_data'=>\"nextAgentDiscountPlan\" . $match['agentId'] . \"_\" . ($offset + $limit)]];\n        }\n        elseif($list->num_rows >= $limit && $offset != 0){\n            $keys[] = [\n                ['text'=>\"◀️️\",'callback_data'=>\"nextAgentDiscountPlan\" . $match['agentId'] . \"_\" . ($offset - $limit)],\n                ['text'=>\"▶️\",'callback_data'=>\"nextAgentDiscountPlan\" . $match['agentId'] . \"_\" . ($offset + $limit)]\n                ];\n        }\n        elseif($offset != 0){\n            $keys[] = [\n                ['text'=>\"◀️️\",'callback_data'=>\"nextAgentDiscountPlan\" . $match['agentId'] . \"_\" . ($offset - $limit)]\n                ];\n        }\n        $keys[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"agentPercentDetails\" . $match['agentId']]];\n        $keys = json_encode(['inline_keyboard'=>$keys]);\n        \n        editText($message_id,\"لطفا سرور مورد نظر را برای افزودن تخفیف به نماینده $userName انتخاب کنید\",$keys);\n    }else alert(\"سروری باقی نمانده است\");\n}\nif(preg_match('/^removePercentOfAgent(?<type>Server|Plan)(?<agentId>\\d+)_(?<serverId>\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid` = ?\");\n    $stmt->bind_param('i',$match['agentId']);\n    $stmt->execute();\n    $info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $discounts = json_decode($info['discount_percent'],true);\n    if($match['type'] == \"Server\") unset($discounts['servers'][$match['serverId']]);\n    elseif($match['type'] == \"Plan\") unset($discounts['plans'][$match['serverId']]);\n    \n    $discounts = json_encode($discounts,488);\n    $stmt = $connection->prepare(\"UPDATE `users` SET `discount_percent` = ? WHERE `userid` = ?\");\n    $stmt->bind_param(\"si\", $discounts, $match['agentId']);\n    $stmt->execute();\n    $stmt->close();\n    \n    alert('با موفقیت حذف شد');\n    editText($message_id, str_replace(\"AGENT-NAME\", $userName, $mainValues['agent_discount_settings']), getAgentDiscounts($match['agentId']));\n}\nif(preg_match('/^editAgentDiscount(Server|Plan|Normal)(\\d+)_(.*)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage($mainValues['send_agent_discount_percent'], $cancelKey);\n    setUser($data);\n}\nif(preg_match('/^editAgentDiscount(Server|Plan|Normal)(\\d+)_(.*)/',$userInfo['step'],$match) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    if(is_numeric($text)){\n        $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid` = ?\");\n        $stmt->bind_param('i',$match[2]);\n        $stmt->execute();\n        $info = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        \n        $discountInfo = json_decode($info['discount_percent'],true);\n        if($match[1] == \"Server\") $discountInfo['servers'][$match[3]] = $text;\n        elseif($match[1] == \"Plan\") $discountInfo['plans'][$match[3]] = $text;\n        elseif($match[1] == \"Normal\") $discountInfo['normal'] = $text;\n        $text = json_encode($discountInfo);\n        \n        sendMessage($mainValues['saved_successfuly'],$removeKeyboard);\n        \n        $stmt = $connection->prepare(\"UPDATE `users` SET `discount_percent` = ? WHERE `userid` = ?\");\n        $stmt->bind_param(\"si\", $text, $match[2]);\n        $stmt->execute();\n        $stmt->close();\n        sendMessage(str_replace(\"AGENT-NAME\", $userName, $mainValues['agent_discount_settings']), getAgentDiscounts($match[2]));\n        setUser();\n    }else sendMessage($mainValues['send_only_number']);\n}\nif(preg_match('/^edit(RewaredTime|cartToCartAutoAcceptTime)/', $data, $match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    if($match[1] == \"RewaredTime\") $txt = \"🙃 | لطفا زمان تأخیر در ارسال گزارش رو به ساعت وارد کن\\n\\nنکته: هر n ساعت گزارش به ربات ارسال میشه! \";\n    else $txt = \"لطفا زمان مورد نظر را به دقیقه وارد کنید\";\n    \n    sendMessage($txt,$cancelKey);\n    setUser($data);\n}\nif($data==\"userReports\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage(\"🙃 | لطفا آیدی عددی کاربر رو وارد کن\",$cancelKey);\n    setUser($data);\n}\nif($userInfo['step'] == \"userReports\" && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(is_numeric($text)){\n        sendMessage($mainValues['please_wait_message'],$removeKeyboard);\n        $keys = getUserInfoKeys($text);\n        if($keys != null){\n            sendMessage(\"اطلاعات کاربر <a href='tg://user?id=$text'>$fullName</a>\",$keys,\"html\");\n            setUser();\n        }else sendMessage(\"کاربری با این آیدی یافت نشد\");\n    }else{\n        sendMessage(\"😡|لطفا فقط عدد ارسال کن\");\n    }\n}\nif($data==\"inviteSetting\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'INVITE_BANNER_AMOUNT'\");\n    $stmt->execute();\n    $inviteAmount = number_format($stmt->get_result()->fetch_assoc()['value']??0) . \" تومان\";\n    $stmt->close();\n    setUser();\n    $keys = json_encode(['inline_keyboard'=>[\n        [['text'=>\"❗️بنر دعوت\",'callback_data'=>\"inviteBanner\"]],\n        [\n            ['text'=>$inviteAmount,'callback_data'=>\"editInviteAmount\"],\n            ['text'=>\"مقدار پورسانت\",'callback_data'=>\"wizwizch\"]\n            ],\n        [\n            ['text'=>$buttonValues['back_button'],'callback_data'=>\"botSettings\"]\n            ],\n        ]]); \n    $res = editText($message_id,\"✅ تنظیمات بازاریابی\",$keys);\n    if(!$res->ok){\n        delMessage();\n        sendMessage(\"✅ تنظیمات بازاریابی\",$keys);\n    }\n} \nif($data==\"inviteBanner\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'INVITE_BANNER_TEXT'\");\n    $stmt->execute();\n    $inviteText = $stmt->get_result()->fetch_assoc()['value'];\n    $inviteText = $inviteText != null?json_decode($inviteText,true):array('type'=>'text');\n    $stmt->close();\n    $keys = json_encode(['inline_keyboard'=>[\n        [['text'=>\"ویرایش\",'callback_data'=>'editInviteBannerText']],\n        [['text'=>$buttonValues['back_button'],'callback_data'=>'inviteSetting']]\n        ]]);\n    if($inviteText['type'] == \"text\"){\n        editText($message_id,\"بنر فعلی: \\n\" . $inviteText['text'],$keys);\n    }else{\n        delMessage();\n        $res = sendPhoto($inviteText['file_id'], $inviteText['caption'], $keys,null);\n        if(!$res->ok){\n            sendMessage(\"تصویر فعلی یافت نشد، لطفا اقدام به ویرایش بنر کنید\",$keys);\n        }\n    }\n    setUser();\n}\nif($data==\"editInviteBannerText\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage(\"🤖 | لطفا بنر جدید را بفرستید از متن  LINK برای نمایش لینک دعوت استفاده کنید)\",$cancelKey);\n    setUser($data);\n}\nif($userInfo['step']==\"editInviteBannerText\" && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    $data = array();\n    if(isset($update->message->photo)){\n        $data['type'] = 'photo';\n        $data['caption'] = $caption;\n        $data['file_id'] = $fileid;\n    }\n    elseif(isset($update->message->text)){\n        $data['type'] = 'text';\n        $data['text'] = $text;\n    }else{\n        sendMessage(\"🥺 | بنر ارسال شده پشتیبانی نمی شود\");\n        exit();\n    }\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'INVITE_BANNER_TEXT'\");\n    $stmt->execute();\n    $checkExist = $stmt->get_result();\n    $stmt->close();\n    $data = json_encode($data);\n    if($checkExist->num_rows > 0){\n        $stmt = $connection->prepare(\"UPDATE `setting` SET `value` = ? WHERE `type` = 'INVITE_BANNER_TEXT'\");\n        $stmt->bind_param(\"s\", $data);\n        $stmt->execute();\n        $checkExist = $stmt->get_result();\n        $stmt->close();\n    }else{\n        $stmt = $connection->prepare(\"INSERT INTO `setting` (`value`, `type`) VALUES (?, 'INVITE_BANNER_TEXT')\");\n        $stmt->bind_param(\"s\", $data);\n        $stmt->execute();\n        $checkExist = $stmt->get_result();\n        $stmt->close();\n    }\n    \n    sendMessage($mainValues['saved_successfuly'],$removeKeyboard);\n    $keys = json_encode(['inline_keyboard'=>[\n        [['text'=>\"ویرایش\",'callback_data'=>'editInviteBannerText']],\n        [['text'=>$buttonValues['back_button'],'callback_data'=>'inviteSetting']]\n        ]]);\n    if(isset($update->message->text)){\n        sendMessage(\"بنر فعلی: \\n\" . $text,$keys);\n    }else{\n        sendPhoto($fileid, $caption, $keys);\n    }\n    setUser();\n}\nif($data==\"editInviteAmount\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage(\"لطفا مبلغ پورسانت رو به تومان وارد کن\",$cancelKey);\n    setUser($data);\n} \nif($userInfo['step'] == \"editInviteAmount\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(is_numeric($text)){\n        $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'INVITE_BANNER_AMOUNT'\");\n        $stmt->execute();\n        $checkExist = $stmt->get_result();\n        $stmt->close();\n        \n        if($checkExist->num_rows > 0){\n            $stmt = $connection->prepare(\"UPDATE `setting` SET `value` = ? WHERE `type` = 'INVITE_BANNER_AMOUNT'\");\n            $stmt->bind_param(\"s\", $text);\n            $stmt->execute();\n            $checkExist = $stmt->get_result();\n            $stmt->close();\n        }else{\n            $stmt = $connection->prepare(\"INSERT INTO `setting` (`value`, `type`) VALUES (?, 'INVITE_BANNER_AMOUNT')\");\n            $stmt->bind_param(\"s\", $text);\n            $stmt->execute();\n            $checkExist = $stmt->get_result();\n            $stmt->close();\n        }\n        sendMessage($mainValues['saved_successfuly'],$removeKeyboard);\n        \n        $keys = json_encode(['inline_keyboard'=>[\n            [['text'=>\"❗️بنر دعوت\",'callback_data'=>\"inviteBanner\"]],\n            [\n                ['text'=>number_format($text) . \" تومان\",'callback_data'=>\"editInviteAmount\"],\n                ['text'=>\"مقدار پورسانت\",'callback_data'=>\"wizwizch\"]\n                ], \n            [\n                ['text'=>$buttonValues['back_button'],'callback_data'=>\"botSettings\"]\n                ],\n            ]]); \n        sendMessage(\"✅ تنظیمات بازاریابی\",$keys);\n        setUser();\n    }else sendMessage($mainValues['send_only_number']);\n}\nif(preg_match('/^edit(RewaredTime|cartToCartAutoAcceptTime)/', $userInfo['step'], $match) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    if(!is_numeric($text)){\n        sendMessage(\"لطفا عدد بفرستید\");\n        exit();\n    }\n    elseif($text <0 ){\n        sendMessage(\"مقدار وارد شده معتبر نیست\");\n        exit();\n    }\n    \n    setSettings(lcfirst($match[1]), $text);\n    sendMessage($mainValues['change_bot_settings_message'],getBotSettingKeys());\n    setUser();\n    exit();\n}\nif($data==\"inviteFriends\"){\n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'INVITE_BANNER_TEXT'\");\n    $stmt->execute();\n    $inviteText = $stmt->get_result()->fetch_assoc()['value'];\n    if($inviteText != null){\n        delMessage();\n        $inviteText = json_decode($inviteText,true);\n    \n        $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'INVITE_BANNER_AMOUNT'\");\n        $stmt->execute();\n        $inviteAmount = number_format($stmt->get_result()->fetch_assoc()['value']??0) . \" تومان\";\n        $stmt->close();\n        \n        $getBotInfo = json_decode(file_get_contents(\"http://api.telegram.org/bot\" . $botToken . \"/getMe\"),true);\n        $botId = $getBotInfo['result']['username'];\n        \n        $link = \"t.me/$botId?start=\" . $from_id;\n        if($inviteText['type'] == \"text\"){\n            $txt = str_replace('LINK',\"<code>$link</code>\",$inviteText['text']);\n            $res = sendMessage($txt,null,\"HTML\");\n        } \n        else{\n            $txt = str_replace('LINK',\"$link\",$inviteText['caption']);\n            $res = sendPhoto($inviteText['file_id'],$txt,null,\"HTML\");\n        }\n        $msgId = $res->result->message_id;\n        sendMessage(\"با لینک بالا دوستاتو به ربات دعوت کن و با هر خرید $inviteAmount بدست بیار\",json_encode(['inline_keyboard'=>[[['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]]]]),null,null,$msgId);\n    }\n    else alert(\"این قسمت غیر فعال است\");\n}\nif($data==\"myInfo\"){\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `userid` = ?\");\n    $stmt->bind_param(\"i\", $from_id);\n    $stmt->execute();\n    $totalBuys = $stmt->get_result()->num_rows;\n    $stmt->close();\n    \n    $myWallet = number_format($userInfo['wallet']) . \" تومان\";\n    \n    $keys = json_encode(['inline_keyboard'=>[\n        [\n            ['text'=>\"شارژ کیف پول 💰\",'callback_data'=>\"increaseMyWallet\"],\n            ['text'=>\"انتقال موجودی\",'callback_data'=>\"transferMyWallet\"]\n        ],\n        [\n            ['text'=>$buttonValues['back_button'],'callback_data'=>\"mainMenu\"]\n            ]\n        ]]);\n    editText($message_id, \"\n💞 اطلاعات حساب شما:\n    \n🔰 شناسه کاربری: <code> $from_id </code>\n🍄 یوزرنیم: <code> @$username </code>\n👤 اسم:  <code> $first_name </code>\n💰 موجودی: <code> $myWallet </code>\n\n☑️ کل سرویس ها : <code> $totalBuys </code> عدد\n⁮⁮ ⁮⁮ ⁮⁮ ⁮⁮\n\",\n            $keys,\"html\");\n}\nif($data==\"transferMyWallet\"){\n    if($userInfo['wallet'] > 0 ){\n        delMessage();\n        sendMessage(\"لطفا آیدی عددی کاربر مورد نظر رو وارد کن\",$cancelKey);\n        setUser($data);\n    }else alert(\"موجودی حساب شما کم است\");\n}\nif($userInfo['step'] ==\"transferMyWallet\" && $text != $buttonValues['cancel']){\n    if(is_numeric($text)){\n        if($text != $from_id){\n            $stmt= $connection->prepare(\"SELECT * FROM `users` WHERE `userid` = ?\");\n            $stmt->bind_param(\"i\", $text);\n            $stmt->execute();\n            $checkExist = $stmt->get_result();\n            $stmt->close();\n            \n            if($checkExist->num_rows > 0){\n                setUser(\"tranfserUserAmount\" . $text);\n                sendMessage(\"لطفا مبلغ مورد نظر رو وارد کن\");\n            }else sendMessage(\"کاربری با این آیدی یافت نشد\");\n        }else sendMessage(\"میخای به خودت انتقال بدی ؟؟\");\n    }else sendMessage($mainValues['send_only_number']);\n}\nif(preg_match('/^tranfserUserAmount(\\d+)/',$userInfo['step'],$match) && $text != $buttonValues['cancel']){\n    if(is_numeric($text)){\n        if($text > 0){\n            if($userInfo['wallet'] >= $text){\n                $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` + ? WHERE `userid` = ?\");\n                $stmt->bind_param(\"ii\", $text, $match[1]);\n                $stmt->execute();\n                $stmt->close();\n                \n                $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` - ? WHERE `userid` = ?\");\n                $stmt->bind_param(\"ii\", $text, $from_id);\n                $stmt->execute();\n                $stmt->close();\n                \n                sendMessage(\"✅|مبلغ \" . number_format($text) . \" تومان به کیف پول شما توسط کاربر $from_id انتقال یافت\",null,null,$match[1]);\n                setUser();\n                sendMessage(\"✅|مبلغ \" . number_format($text) . \" تومان به کیف پول کاربر مورد نظر شما انتقال یافت\",$removeKeyboard);\n                sendMessage(\"لطفا یکی از کلید های زیر را انتخاب کنید\",getMainKeys());\n            }else sendMessage(\"موجودی حساب شما کم است\");\n        }else sendMessage(\"لطفا عددی بزرگتر از صفر وارد کنید\");\n    }else sendMessage($mainValues['send_only_number']);\n}\nif($data==\"increaseMyWallet\"){\n    delMessage();\n    sendMessage(\"🙂 عزیزم مقدار شارژ مورد نظر خود را به تومان وارد کن (بیشتر از 5000 تومان)\",$cancelKey);\n    setUser($data);\n}\nif($userInfo['step'] == \"increaseMyWallet\" && $text != $buttonValues['cancel']){\n    if(!is_numeric($text)){\n        sendMessage($mainValues['send_only_number']);\n        exit();\n    }\n    elseif($text < 5000){\n        sendMessage(\"لطفا مقداری بیشتر از 5000 وارد کن\");\n        exit();\n    }\n    sendMessage(\"🪄 لطفا صبور باشید ...\",$removeKeyboard);\n    $hash_id = RandomString();\n    $stmt = $connection->prepare(\"DELETE FROM `pays` WHERE `user_id` = ? AND `type` = 'INCREASE_WALLET' AND `state` = 'pending'\");\n    $stmt->bind_param(\"i\", $from_id);\n    $stmt->execute();\n    $stmt->close();\n    \n    $time = time();\n    $stmt = $connection->prepare(\"INSERT INTO `pays` (`hash_id`, `user_id`, `type`, `plan_id`, `volume`, `day`, `price`, `request_date`, `state`)\n                                VALUES (?, ?, 'INCREASE_WALLET', '0', '0', '0', ?, ?, 'pending')\");\n    $stmt->bind_param(\"siii\", $hash_id, $from_id, $text, $time);\n    $stmt->execute();\n    $stmt->close();\n    \n    \n    $keyboard = array();\n    if($botState['cartToCartState'] == \"on\") $keyboard[] = [['text' => $buttonValues['cart_to_cart'],  'callback_data' => \"increaseWalletWithCartToCart\" . $hash_id]];\n    if($botState['nowPaymentWallet'] == \"on\") $keyboard[] = [['text' => $buttonValues['now_payment_gateway'],  'url' => $botUrl . \"pay/?nowpayment&hash_id=\" . $hash_id]];\n    if($botState['zarinpal'] == \"on\") $keyboard[] = [['text' => $buttonValues['zarinpal_gateway'],  'url' => $botUrl . \"pay/?zarinpal&hash_id=\" . $hash_id]];\n    if($botState['nextpay'] == \"on\") $keyboard[] = [['text' => $buttonValues['nextpay_gateway'],  'url' => $botUrl . \"pay/?nextpay&hash_id=\" . $hash_id]];\n    if($botState['weSwapState'] == \"on\") $keyboard[] = [['text' => $buttonValues['weswap_gateway'],  'callback_data' => \"payWithWeSwap\" . $hash_id]];\n    if($botState['tronWallet'] == \"on\") $keyboard[] = [['text' => $buttonValues['tron_gateway'],  'callback_data' => \"payWithTronWallet\" . $hash_id]];\n\n    $keyboard[] = [['text'=>$buttonValues['cancel'], 'callback_data'=> \"mainMenu\"]];\n\n    \n\t$keys = json_encode(['inline_keyboard'=>$keyboard]);\n    sendMessage(\"اطلاعات شارژ:\\nمبلغ \". number_format($text) . \" تومان\\n\\nلطفا روش پرداخت را انتخاب کنید\",$keys);\n    setUser();\n}\nif(preg_match('/increaseWalletWithCartToCart(?<hashId>.*)/',$data, $match)) {\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param('s', $match['hashId']);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n    if($payInfo->num_rows == 0){\n        $text = \"/start\";\n        $data = \"\";\n        delMessage();\n        goto GOTOSTART;\n    }\n    \n    delMessage();  \n    setUser($data);\n\n    sendMessage(str_replace([\"ACCOUNT-NUMBER\", \"HOLDER-NAME\"],[$paymentKeys['bankAccount'],$paymentKeys['holderName']], $mainValues['increase_wallet_cart_to_cart']),$cancelKey, \"HTML\");\n    exit;\n}\nif(preg_match('/increaseWalletWithCartToCart(.*)/',$userInfo['step'], $match) and $text != $buttonValues['cancel']){\n    if(isset($update->message->photo)){\n        setUser();\n        $uid = $userInfo['userid'];\n        $name = $userInfo['name'];\n        $username = $userInfo['username'];\n    \n        $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n        $stmt->bind_param(\"s\", $match[1]);\n        $stmt->execute();\n        $payInfo = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        $price = number_format($payInfo['price']);\n\n    \n\n        sendMessage($mainValues['order_increase_sent'],$removeKeyboard);\n        sendMessage($mainValues['reached_main_menu'],getMainKeys());\n        $msg = str_replace(['PRICE', 'USERNAME', 'NAME', 'USER-ID'],[$price, $username, $name, $from_id], $mainValues['increase_wallet_request_message']);\n        \n        $keyboard = json_encode([\n            'inline_keyboard' => [\n                [\n                    ['text' => $buttonValues['approve'], 'callback_data' => \"approvePayment{$match[1]}\"],\n                    ['text' => $buttonValues['decline'], 'callback_data' => \"decPayment{$match[1]}\"]\n                ]\n            ]\n        ]);\n        $res = sendPhoto($fileid, $msg,$keyboard, \"HTML\", $admin);\n        $msgId = $res->result->message_id;\n        \n        $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'have_sent', `message_id` = ?, `chat_id` = ? WHERE `hash_id` = ?\");\n        $stmt->bind_param(\"iis\", $msgId, $admin, $match[1]);\n        $stmt->execute();\n        $stmt->close();\n    }else{\n        sendMessage($mainValues['please_send_only_image']);\n    }\n}\nif(preg_match('/^approvePayment(.*)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $price = $payInfo['price'];\n    $userId = $payInfo['user_id'];\n    \n    if($payInfo['state'] == \"approved\") exit();\n    \n    $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'approved' WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n\n    $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` + ? WHERE `userid` = ?\");\n    $stmt->bind_param(\"ii\", $price, $userId);\n    $stmt->execute();\n    $stmt->close();\n\n    sendMessage(\"افزایش حساب شما با موفقیت تأیید شد\\n✅ مبلغ \" . number_format($price). \" تومان به حساب شما اضافه شد\",null,null,$userId);\n    \n    unset($markup[count($markup)-1]);\n    $markup[] = [['text' => '✅', 'callback_data' => \"dontsendanymore\"]];\n    $keys = json_encode(['inline_keyboard'=>array_values($markup)],488);\n\n    editKeys($keys);\n}\nif(preg_match('/^decPayment(.*)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    unset($markup[count($markup)-1]);\n    $markup[] = [['text' => '❌', 'callback_data' => \"dontsendanymore\"]];\n    $keys = json_encode(['inline_keyboard'=>array_values($markup)],488);\n    file_put_contents(\"temp\" . $from_id . \".txt\", $keys);\n    sendMessage(\"لطفا دلیل عدم تأیید افزایش موجودی را وارد کنید\",$cancelKey);\n    setUser(\"decPayment\" . $message_id . \"_\" . $match[1]);\n}\nif(preg_match('/^decPayment(\\d+)_(.*)/',$userInfo['step'],$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[2]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $price = $payInfo['price'];\n    $userId = $payInfo['user_id'];\n    \n    $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'declined' WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[2]);\n    $stmt->execute();\n    $stmt->close();\n    \n    sendMessage(\"💔 افزایش موجودی شما به مبلغ \"  . number_format($price) . \" به دلیل زیر رد شد\\n\\n$text\",null,null,$userId);\n\n\n    editKeys(file_get_contents(\"temp\" . $from_id . \".txt\"), $match[1]);\n    setUser();\n    sendMessage('پیامت رو براش ارسال کردم ... 🤝',$removeKeyboard);\n    unlink(\"temp\" . $from_id . \".txt\");\n}\nif($data==\"increaseUserWallet\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage($mainValues['send_user_id'],$cancelKey);\n    setUser($data);\n}\nif($userInfo['step'] == \"increaseUserWallet\" && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    if(is_numeric($text)){\n        $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid` = ?\");\n        $stmt->bind_param(\"i\", $text);\n        $stmt->execute();\n        $userCount = $stmt->get_result()->num_rows;\n        $stmt->close();\n        if($userCount > 0){\n            setUser(\"increaseWalletUser\" . $text);\n            sendMessage($mainValues['enter_increase_amount']);\n        }\n        else{\n            setUser();\n            sendMessage($mainValues['user_not_found'], $removeKeyboard);\n            sendMessage($mainValues['reached_main_menu'],getMainKeys());\n        }\n    }else{\n        sendMessage($mainValues['send_only_number']);\n    }\n}\nif(preg_match('/^increaseWalletUser(\\d+)/',$userInfo['step'], $match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(is_numeric($text)){\n        $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` + ? WHERE `userid` = ?\");\n        $stmt->bind_param(\"ii\", $text, $match[1]);\n        $stmt->execute();\n        $stmt->close();\n    \n        sendMessage(\"✅ مبلغ \" . number_format($text). \" تومان به حساب شما اضافه شد\",null,null,$match[1]);\n        sendMessage(\"✅ مبلغ \" . number_format($text) . \" تومان به کیف پول کاربر مورد نظر اضافه شد\",$removeKeyboard);\n        sendMessage($mainValues['reached_main_menu'],getMainKeys());\n        setUser();\n    }else{\n        sendMessage($mainValues['send_only_number']);\n    }\n}\nif($data==\"decreaseUserWallet\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage($mainValues['send_user_id'],$cancelKey);\n    setUser($data);\n}\nif($userInfo['step'] == \"decreaseUserWallet\" && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    if(is_numeric($text)){\n        $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid` = ?\");\n        $stmt->bind_param(\"i\", $text);\n        $stmt->execute();\n        $userCount = $stmt->get_result()->num_rows;\n        $stmt->close();\n        if($userCount > 0){\n            setUser(\"decreaseWalletUser\" . $text);\n            sendMessage($mainValues['enter_decrease_amount']);\n        }\n        else{\n            setUser();\n            sendMessage($mainValues['user_not_found'], $removeKeyboard);\n            sendMessage($mainValues['reached_main_menu'],getMainKeys());\n        }\n    }else{\n        sendMessage($mainValues['send_only_number']);\n    }\n}\nif(preg_match('/^decreaseWalletUser(\\d+)/',$userInfo['step'], $match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(is_numeric($text)){\n        $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` - ? WHERE `userid` = ?\");\n        $stmt->bind_param(\"ii\", $text, $match[1]);\n        $stmt->execute();\n        $stmt->close();\n    \n        sendMessage(str_replace(\"AMOUNT\", number_format($text), $mainValues['amount_decreased_from_your_wallet']),null,null,$match[1]);\n        sendMessage(str_replace(\"AMOUNT\", number_format($text), $mainValues['amount_decreased_from_user_wallet']),$removeKeyboard);\n        sendMessage($mainValues['reached_main_menu'],getMainKeys());\n        setUser();\n    }else{\n        sendMessage($mainValues['send_only_number']);\n    }\n}\nif($data==\"editRewardChannel\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage(\"🤗|لطفا ربات رو در کانال ادمین کن و آیدی کانال رو بفرست\",$cancelKey);\n    setUser($data);\n}\nif($userInfo['step'] == \"editRewardChannel\" && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    $botId = json_decode(file_get_contents(\"https://api.telegram.org/bot$botToken/getme\"))->result->id;\n    $result = json_decode(file_get_contents(\"https://api.telegram.org/bot$botToken/getChatMember?chat_id=$text&user_id=$botId\"));\n    if($result->ok){\n        if($result->result->status == \"administrator\"){\n            setSettings('rewardChannel', $text);\n            sendMessage($mainValues['change_bot_settings_message'],getGateWaysKeys());\n            setUser();\n            exit();\n        }\n    }\n    sendMessage(\"😡|ای بابا ،ربات هنوز تو کانال عضو نشده، اول ربات رو تو کانال ادمین کن و آیدیش رو بفرست\");\n}\nif($data==\"editLockChannel\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage(\"🤗|لطفا ربات رو در کانال ادمین کن و آیدی کانال رو بفرست\",$cancelKey);\n    setUser($data);\n}\nif($userInfo['step'] == \"editLockChannel\" && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    $botId = json_decode(file_get_contents(\"https://api.telegram.org/bot$botToken/getme\"))->result->id;\n    $result = json_decode(file_get_contents(\"https://api.telegram.org/bot$botToken/getChatMember?chat_id=$text&user_id=$botId\"));\n    if($result->ok){\n        if($result->result->status == \"administrator\"){\n            setSettings(\"lockChannel\", $text);\n            sendMessage($mainValues['change_bot_settings_message'],getGateWaysKeys());\n            setUser();\n            exit();\n        }\n    }\n    sendMessage($mainValues['the_bot_in_not_admin']);\n}\nif(($data == \"agentOneBuy\" || $data=='buySubscription' || $data == \"agentMuchBuy\") && ($botState['sellState']==\"on\" || ($from_id == $admin || $userInfo['isAdmin'] == true))){\n    if($botState['cartToCartState'] == \"off\" && $botState['walletState'] == \"off\"){\n        alert($mainValues['selling_is_off']);\n        exit();\n    }\n    if($data==\"buySubscription\") $buyType = \"none\";\n    elseif($data==\"agentOneBuy\") $buyType = \"one\";\n    elseif($data== \"agentMuchBuy\") $buyType = \"much\";\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `active`=1 and `state` = 1 and `ucount` > 0 ORDER BY `id` ASC\");\n    $stmt->execute();\n    $respd = $stmt->get_result();\n    $stmt->close();\n    if($respd->num_rows==0){\n        alert($mainValues['no_server_available']);\n        exit;\n    }\n    $keyboard = [];\n    while($cat = $respd->fetch_assoc()){\n        $id = $cat['id'];\n        $name = $cat['title'];\n        $flag = $cat['flag'];\n        $keyboard[] = ['text' => \"$flag $name\", 'callback_data' => \"selectServer{$id}_{$buyType}\"];\n    }\n    $keyboard = array_chunk($keyboard,1);\n    $keyboard[] = [['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]];\n    editText($message_id, $mainValues['buy_sub_select_location'], json_encode(['inline_keyboard'=>$keyboard]));\n}\nif($data=='createMultipleAccounts' && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `active`=1 and `ucount` > 0 ORDER BY `id` ASC\");\n    $stmt->execute();\n    $respd = $stmt->get_result();\n    $stmt->close();\n    if($respd->num_rows==0){\n        sendMessage($mainValues['no_server_available']);\n        exit;\n    }\n    $keyboard = [];\n    while($cat = $respd->fetch_assoc()){\n        $id = $cat['id'];\n        $name = $cat['title'];\n        $flag = $cat['flag'];\n        $keyboard[] = ['text' => \"$flag $name\", 'callback_data' => \"createAccServer$id\"];\n    }\n    $keyboard[] = ['text'=>$buttonValues['back_to_main'],'callback_data'=>\"managePanel\"];\n    $keyboard = array_chunk($keyboard,1);\n    editText($message_id, $mainValues['buy_sub_select_location'], json_encode(['inline_keyboard'=>$keyboard]));\n    \n\n}\nif(preg_match('/createAccServer(\\d+)/',$data, $match) && ($from_id == $admin || $userInfo['isAdmin'] == true) ) {\n    $sid = $match[1];\n        \n    $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `parent`=0 order by `id` asc\");\n    $stmt->execute();\n    $respd = $stmt->get_result();\n    $stmt->close();\n    if($respd->num_rows == 0){\n        alert(\"هیچ دسته بندی برای این سرور وجود ندارد\");\n    }else{\n        \n        $keyboard = [];\n        while ($file = $respd->fetch_assoc()){\n            $id = $file['id'];\n            $name = $file['title'];\n            $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `server_id`=? and `catid`=? and `active`=1\");\n            $stmt->bind_param(\"ii\", $sid, $id);\n            $stmt->execute();\n            $rowcount = $stmt->get_result()->num_rows; \n            $stmt->close();\n            if($rowcount>0) $keyboard[] = ['text' => \"$name\", 'callback_data' => \"createAccCategory{$id}_{$sid}\"];\n        }\n        if(empty($keyboard)){\n            alert(\"هیچ دسته بندی برای این سرور وجود ندارد\");exit;\n        }\n        alert(\"♻️ | دریافت دسته بندی ...\");\n        $keyboard[] = ['text' => $buttonValues['back_to_main'], 'callback_data' => \"createMultipleAccounts\"];\n        $keyboard = array_chunk($keyboard,1);\n        editText($message_id, \"2️⃣ مرحله دو:\n\nدسته بندی مورد نظرت رو انتخاب کن 🤭\", json_encode(['inline_keyboard'=>$keyboard]));\n    }\n\n}\nif(preg_match('/createAccCategory(\\d+)_(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $call_id = $match[1];\n    $sid = $match[2];\n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `server_id`=? and `catid`=? and `active`=1 order by `id` asc\");\n    $stmt->bind_param(\"ii\", $sid, $call_id);\n    $stmt->execute();\n    $respd = $stmt->get_result();\n    $stmt->close();\n    if($respd->num_rows==0){\n        alert(\"💡پلنی در این دسته بندی وجود ندارد \");\n    }else{\n        alert(\"📍در حال دریافت لیست پلن ها\");\n        $keyboard = [];\n        while($file = $respd->fetch_assoc()){\n            $id = $file['id'];\n            $name = $file['title'];\n            $keyboard[] = ['text' => \"$name\", 'callback_data' => \"createAccPlan{$id}\"];\n        }\n        $keyboard[] = ['text' => $buttonValues['back_to_main'], 'callback_data' => \"createAccServer$sid\"];\n        $keyboard = array_chunk($keyboard,1);\n        editText($message_id, \"3️⃣ مرحله سه:\n\nیکی از پلن هارو انتخاب کن و برو برای پرداختش 🤲 🕋\", json_encode(['inline_keyboard'=>$keyboard]));\n    }\n\n}\nif(preg_match('/^createAccPlan(\\d+)/',$data,$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage(\"❗️لطفا مدت زمان اکانت را به ( روز ) وارد کن:\",$cancelKey);\n    setUser('createAccDate' . $match[1]);\n}\nif(preg_match('/^createAccDate(\\d+)/',$userInfo['step'],$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(is_numeric($text)){\n        if($text >0){\n            sendMessage(\"❕حجم اکانت ها رو به گیگابایت ( GB ) وارد کن:\");\n            setUser('createAccVolume' . $match[1] . \"_\" . $text);\n        }else{\n            sendMessage(\"عدد باید بیشتر از 0 باشه\");\n        }\n    }else{\n        sendMessage('😡 | مگه نمیگم فقط عدد بفرس نمیفهمی؟ یا خودتو زدی به نفهمی؟');\n    }\n}\nif(preg_match('/^createAccVolume(\\d+)_(\\d+)/',$userInfo['step'],$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(!is_numeric($text)){\n        sendMessage($mainValues['send_only_number']);\n        exit();\n    }elseif($text <=0){\n        sendMessage(\"مقداری بزرگتر از 0 وارد کن\");\n        exit();\n    }\n    sendMessage($mainValues['enter_account_amount']);\n    setUser(\"createAccAmount\" . $match[1] . \"_\" . $match[2] . \"_\" . $text);\n}\nif(preg_match('/^createAccAmount(\\d+)_(\\d+)_(\\d+)/',$userInfo['step'], $match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(!is_numeric($text)){\n        sendMessage($mainValues['send_only_number']);\n        exit();\n    }elseif($text <=0){\n        sendMessage(\"مقداری بزرگتر از 0 وارد کن\");\n        exit();\n    }\n    $uid = $from_id;\n    $fid = $match[1];\n    $acctxt = '';\n    \n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $file_detail = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $days = $match[2];\n    $date = time();\n    $expire_microdate = floor(microtime(true) * 1000) + (864000 * $days * 100);\n    $expire_date = $date + (86400 * $days);\n    $type = $file_detail['type'];\n    $volume = $match[3];\n    $protocol = $file_detail['protocol'];\n    $price = $file_detail['price'];\n    $rahgozar = $file_detail['rahgozar'];\n    $customPath = $file_detail['custom_path'];\n    $customPort = $file_detail['custom_port'];\n    $customSni = $file_detail['custom_sni'];\n    \n    \n    \n    $server_id = $file_detail['server_id'];\n    $netType = $file_detail['type'];\n    $acount = $file_detail['acount'];\n    $inbound_id = $file_detail['inbound_id'];\n    $limitip = $file_detail['limitip'];\n\n\n    if($acount == 0 and $inbound_id != 0){\n        alert($mainValues['out_of_connection_capacity']);\n        exit;\n    }\n    if($inbound_id == 0) {\n        $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $server_info = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n\n        if($server_info['ucount'] <= 0) {\n            alert($mainValues['out_of_server_capacity']);\n            exit;\n        }\n    }else{\n        if($acount < $text) {\n            sendMessage(str_replace(\"AMOUNT\", $acount, $mainValues['can_create_specific_account']));\n            exit();\n        }\n    }\n\n    $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $serverInfo = $stmt->get_result()->fetch_assoc();\n    $srv_remark = $serverInfo['remark'];\n    $stmt->close();\n    $savedinfo = file_get_contents('settings/temp.txt');\n    $savedinfo = explode('-',$savedinfo);\n    $port = $savedinfo[0];\n    $last_num = $savedinfo[1];\n    include 'phpqrcode/qrlib.php';\n    $ecc = 'L';\n    $pixel_Size = 11;\n    $frame_Size = 0;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $serverConfig = $stmt->get_result()->fetch_assoc();\n    $serverType = $serverConfig['type'];\n    $portType = $serverConfig['port_type'];\n    $panelUrl = $serverConfig['panel_url'];\n    $stmt->close();\n\n\n\t$stmt = $connection->prepare(\"INSERT INTO `orders_list` \n\t    (`userid`, `token`, `transid`, `fileid`, `server_id`, `inbound_id`, `remark`, `uuid`, `protocol`, `expire_date`, `link`, `amount`, `status`, `date`, `notif`, `rahgozar`)\n\t    VALUES (?, ?, '', ?, ?, ?, ?, ?, ?, ?, ?, ?,1, ?, 0, ?);\");\n    define('IMAGE_WIDTH',540);\n    define('IMAGE_HEIGHT',540);\n    for($i = 1; $i<= $text; $i++){\n        $uniqid = generateRandomString(42,$protocol); \n        if($portType == \"auto\"){\n            $port++;\n        }else{\n            $port = rand(1111,65000);\n        }\n        $last_num++;\n        \n        if($botState['remark'] == \"digits\"){\n            $rnd = rand(10000,99999);\n            $remark = \"{$srv_remark}-{$rnd}\";\n        }else{\n            $rnd = rand(1111,99999);\n            $remark = \"{$srv_remark}-{$from_id}-{$rnd}\";\n        }\n    \n        if($inbound_id == 0){                    \n            if($serverType == \"marzban\"){\n                $response = addMarzbanUser($server_id, $remark, $volume, $days, $fid);\n                if(!$response->success){\n                    if($response->msg == \"User already exists\"){\n                        $remark .= rand(1111,99999);\n                        $response = addMarzbanUser($server_id, $remark, $volume, $days, $fid);\n                    }\n                }\n            }\n            else{\n                $response = addUser($server_id, $uniqid, $protocol, $port, $expire_microdate, $remark, $volume, $netType, 'none', $rahgozar, $fid); \n                \n                if(!$response->success){\n                    if(strstr($response->msg, \"Duplicate email\")) $remark .= RandomString();\n                    elseif(strstr($response->msg, \"Port already exists\")) $port = rand(1111,65000);\n    \n                    $response = addUser($server_id, $uniqid, $protocol, $port, $expire_microdate, $remark, $volume, $netType, 'none', $rahgozar, $fid); \n                }\n            }\n        }else {\n            $response = addInboundAccount($server_id, $uniqid, $inbound_id, $expire_microdate, $remark, $volume, $limitip, null, $fid); \n            if(!$response->success){\n                if(strstr($response->msg, \"Duplicate email\")) $remark .= RandomString();\n                \n                $response = addInboundAccount($server_id, $uniqid, $inbound_id, $expire_microdate, $remark, $volume, $limitip, null, $fid); \n            }\n        }\n        \n        if(is_null($response)){\n            sendMessage('❌ | 🥺 گلم ، اتصال به سرور برقرار نیست لطفا مدیر رو در جریان بزار ...');\n            break;\n        }\n    \tif($response == \"inbound not Found\"){\n            sendMessage(\"❌ | 🥺 سطر (inbound) با آیدی $inbound_id تو این سرور وجود نداره ، مدیر رو در جریان بزار ...\");\n            break;\n    \t}\n    \tif(!$response->success){\n            sendMessage('❌ | 😮 وای خطا داد لطفا سریع به مدیر بگو ...');\n            sendMessage(\"خطای سرور {$serverInfo['title']}:\\n\\n\" . ($response->msg), null, null, $admin);\n            break;\n        }\n    \n        if($serverType == \"marzban\"){\n            $uniqid = $token = str_replace(\"/sub/\", \"\", $response->sub_link);\n            $subLink = $botState['subLinkState'] == \"on\"?$panelUrl . $response->sub_link:\"\";\n            $vraylink = [$subLink];\n            $vray_link = json_encode($response->vray_links);\n        }\n        else{\n            $token = RandomString(30);\n            $vraylink = getConnectionLink($server_id, $uniqid, $protocol, $remark, $port, $netType, $inbound_id, $rahgozar, $customPath, $customPort, $customSni);\n            $subLink = $botState['subLinkState']==\"on\"?$botUrl . \"settings/subLink.php?token=\" . $token:\"\";\n            $vray_link = json_encode($vraylink);\n        }\n        foreach($vraylink as $link){\n            $acc_text = \"\n    \n        🔮 $remark \\n \" . ($botState['configLinkState'] != \"off\" && $serverType != \"marzban\"?\"<code>$link</code>\":\"\");\n            if($botState['subLinkState'] == \"on\") $acc_text .= \n            \" \\n🌐 subscription : <code>$subLink</code>\";\n        \n            $file = RandomString() .\".png\";\n            \n            QRcode::png($link, $file, $ecc, $pixel_Size, $frame_Size);\n        \taddBorderImage($file);\n        \t\n        \t\n        \t$backgroundImage = imagecreatefromjpeg(\"settings/QRCode.jpg\");\n            $qrImage = imagecreatefrompng($file);\n            \n            $qrSize = array('width' => imagesx($qrImage), 'height' => imagesy($qrImage));\n            imagecopy($backgroundImage, $qrImage, 300, 300 , 0, 0, $qrSize['width'], $qrSize['height']);\n            imagepng($backgroundImage, $file);\n            imagedestroy($backgroundImage);\n            imagedestroy($qrImage);\n\n\n        \tsendPhoto($botUrl . $file, $acc_text,json_encode(['inline_keyboard'=>[[['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]]]]),\"HTML\", $uid);\n            unlink($file);\n        }\n        $stmt->bind_param(\"ssiiisssisiii\", $uid, $token, $fid, $server_id, $inbound_id, $remark, $uniqid, $protocol, $expire_date, $vray_link, $price, $date, $rahgozar);\n        $stmt->execute();\n    }\n    $stmt->close();\n    if($portType == \"auto\"){\n        file_put_contents('settings/temp.txt',$port.'-'.$last_num);\n    }\n    if($inbound_id == 0) {\n        $stmt = $connection->prepare(\"UPDATE `server_info` SET `ucount` = `ucount` - 1 WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $stmt->close();\n    }else{\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `acount` = `acount` - ? WHERE id=?\");\n        $stmt->bind_param(\"ii\", $text, $fid);\n        $stmt->execute();\n        $stmt->close();\n    }\n    sendMessage(\"☑️|❤️ اکانت های جدید با موفقیت ساخته شد\",getMainKeys());\n    setUser();\n}\nif(preg_match('/payWithTronWallet(.*)/',$data,$match)) {\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n\n    if($payInfo->num_rows == 0){\n        $text = \"/start\";\n        $data = \"\";\n        delMessage();\n        goto GOTOSTART;\n    }\n    $payInfo = $payInfo->fetch_assoc();\n\n    $fid = $payInfo['plan_id'];\n    $type = $payInfo['type'];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $file_detail = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $server_id = $file_detail['server_id'];\n    $acount = $file_detail['acount'];\n    $inbound_id = $file_detail['inbound_id'];\n\n    if($type != \"INCREASE_WALLET\" && $type != \"RENEW_ACCOUNT\"){\n        if($acount <= 0 and $inbound_id != 0){\n            alert($mainValues['out_of_connection_capacity']);\n            exit;\n        }\n        if($inbound_id == 0) {\n            $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n            $stmt->bind_param(\"i\", $server_id);\n            $stmt->execute();\n            $server_info = $stmt->get_result()->fetch_assoc();\n            $stmt->close();\n    \n            if($server_info['ucount'] <= 0) {\n                alert($mainValues['out_of_server_capacity']);\n                exit; \n            }\n        }else{\n            if($acount <= 0){\n                alert($mainValues['out_of_server_capacity']);\n                exit();\n            }\n        }\n    }\n    \n    if($type == \"RENEW_ACCOUNT\"){\n        $oid = $payInfo['plan_id'];\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $oid);\n        $stmt->execute();\n        $order = $stmt->get_result();\n        $stmt->close();\n        if($order->num_rows == 0){\n            delMessage();\n            sendMessage($mainValues['config_not_found'], getMainKeys());\n            exit();\n        }\n\n    }\n    \n    delMessage();\n    \n    $price = $payInfo['price'];\n    $priceInTrx = round($price / $botState['TRXRate'],2);\n    \n    $stmt = $connection->prepare(\"UPDATE `pays` SET `tron_price` = ? WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"ds\", $priceInTrx, $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n    sendMessage(str_replace([\"AMOUNT\", \"TRON-WALLET\"], [$priceInTrx, $paymentKeys['tronwallet']], $mainValues['pay_with_tron_wallet']), $cancelKey, \"html\");\n    setUser($data);\n}\nif(preg_match('/^payWithTronWallet(.*)/',$userInfo['step'], $match) && $text != $buttonValues['cancel']){\n    if(!preg_match('/^[0-9a-f]{64}$/i',$text)){\n        sendMessage($mainValues['incorrect_tax_id']);\n        exit(); \n    }else{\n        $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `payid` = ?\");\n        $stmt->bind_param(\"s\", $text);\n        $stmt->execute();\n        $checkExist = $stmt->get_result();\n        $stmt->close();\n        \n        if($checkExist->num_rows == 0){\n            $stmt = $connection->prepare(\"UPDATE `pays` SET `payid` = ?, `state` = '0' WHERE `hash_id` = ?\");\n            $stmt->bind_param(\"ss\", $text, $match[1]);\n            $stmt->execute();\n            $stmt->close();\n            \n            sendMessage($mainValues['in_review_tax_id'], $removeKeyboard);\n            setUser();\n            sendMessage($mainValues['reached_main_menu'],getMainKeys());\n        }else sendMessage($mainValues['used_tax_id']);\n    }\n\n}\nif(preg_match('/payWithWeSwap(.*)/',$data,$match)) {\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n\n    if($payInfo->num_rows == 0){\n        $text = \"/start\";\n        $data = \"\";\n        delMessage();\n        goto GOTOSTART;\n    }\n    $payInfo = $payInfo->fetch_assoc();\n\n    $fid = $payInfo['plan_id'];\n    $type = $payInfo['type'];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $file_detail = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $server_id = $file_detail['server_id'];\n    $acount = $file_detail['acount'];\n    $inbound_id = $file_detail['inbound_id'];\n\n    if($type != \"INCREASE_WALLET\" && $type != \"RENEW_ACCOUNT\"){\n        if($acount <= 0 and $inbound_id != 0){\n            alert($mainValues['out_of_connection_capacity']);\n            exit;\n        }\n        if($inbound_id == 0) {\n            $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n            $stmt->bind_param(\"i\", $server_id);\n            $stmt->execute();\n            $server_info = $stmt->get_result()->fetch_assoc();\n            $stmt->close();\n    \n            if($server_info['ucount'] <= 0) {\n                alert($mainValues['out_of_server_capacity']);\n                exit; \n            }\n        }else{\n            if($acount <= 0){\n                alert($mainValues['out_of_server_capacity']);\n                exit();\n            }\n        }\n    }\n    \n    if($type == \"RENEW_ACCOUNT\"){\n        $oid = $payInfo['plan_id'];\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $oid);\n        $stmt->execute();\n        $order = $stmt->get_result();\n        $stmt->close();\n        if($order->num_rows == 0){\n            delMessage();\n            sendMessage($mainValues['config_not_found'], getMainKeys());\n            exit();\n        }\n\n    }\n    \n    delMessage();\n    sendMessage($mainValues['please_wait_message'],$removeKeyboard);\n    \n    \n    $price = $payInfo['price'];\n    $priceInUSD = round($price / $botState['USDRate'],2);\n    $priceInTrx = round($price / $botState['TRXRate'],2);\n    $pay = NOWPayments('POST', 'payment', [\n        'price_amount' => $priceInUSD,\n        'price_currency' => 'usd',\n        'pay_currency' => 'trx'\n    ]);\n    if(isset($pay->pay_address)){\n        $payAddress = $pay->pay_address;\n        \n        $payId = $pay->payment_id;\n        \n        $stmt = $connection->prepare(\"UPDATE `pays` SET `payid` = ? WHERE `hash_id` = ?\");\n        $stmt->bind_param(\"is\", $payId, $match[1]);\n        $stmt->execute();\n        $stmt->close();\n        \n        $keys = json_encode(['inline_keyboard'=>[\n            [['text'=>\"پرداخت با درگاه ارزی ریالی\",'url'=>\"https://changeto.technology/quick?amount=$priceInTrx&currency=TRX&address=$payAddress\"]],\n            [['text'=>\"پرداخت کردم ✅\",'callback_data'=>\"havePaiedWeSwap\" . $match[1]]]\n            ]]);\nsendMessage(\"\n✅ لینک پرداخت با موفقیت ایجاد شد\n\n💰مبلغ : \" . $priceInTrx . \" ترون\n\n✔️ بعد از پرداخت حدود 1 الی 15 دقیقه صبر کنید تا پرداخت به صورت کامل انجام شود سپس روی پرداخت کردم کلیک کنید\n⁮⁮ ⁮⁮\n\",$keys);\n    }else{\n        if($pay->statusCode == 400){\n            sendMessage(\"مقدار انتخاب شده کمتر از حد مجاز است\");\n        }else{\n            sendMessage(\"مشکلی رخ داده است، لطفا به پشتیبانی اطلاع بدهید\");\n        }\n        sendMessage(\"لطفا یکی از کلید های زیر را انتخاب کنید\",getMainKeys());\n    }\n}\nif(preg_match('/havePaiedWeSwap(.*)/',$data,$match)) {\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n\n    if($payInfo->num_rows == 0){\n        $text = \"/start\";\n        $data = \"\";\n        delMessage();\n        goto GOTOSTART;\n    }\n    $payInfo = $payInfo->fetch_assoc();\n\n    if($payInfo['state'] == \"pending\"){\n    $payid = $payInfo['payid'];\n    $payType = $payInfo['type'];\n    $price = $payInfo['price'];\n\n    $request_json = NOWPayments('GET', 'payment', $payid);\n    if($request_json->payment_status == 'finished' or $request_json->payment_status == 'confirmed' or $request_json->payment_status == 'sending'){\n    $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'approved' WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n        \n    if($payType == \"INCREASE_WALLET\"){\n        $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` + ? WHERE `userid` = ?\");\n        $stmt->bind_param(\"ii\", $price, $from_id);\n        $stmt->execute();\n        $stmt->close();\n        \n        sendMessage(\"افزایش حساب شما با موفقیت تأیید شد\\n✅ مبلغ \" . number_format($price). \" تومان به حساب شما اضافه شد\");\n        sendMessage(\"✅ مبلغ \" . number_format($price) . \" تومان به کیف پول کاربر $from_id توسط درگاه ارزی ریالی اضافه شد\",null,null,$admin);                \n    }\n    elseif($payType == \"BUY_SUB\"){\n    $uid = $from_id;\n    $fid = $payInfo['plan_id']; \n    $volume = $payInfo['volume'];\n    $days = $payInfo['day'];\n    $description = $payInfo['description'];\n    \n    \n    $acctxt = '';\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $file_detail = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    if($volume == 0 && $days == 0){\n        $volume = $file_detail['volume'];\n        $days = $file_detail['days'];\n    }\n    \n    $date = time();\n    $expire_microdate = floor(microtime(true) * 1000) + (864000 * $days * 100);\n    $expire_date = $date + (86400 * $days);\n    $type = $file_detail['type'];\n    $protocol = $file_detail['protocol'];\n    $price = $payInfo['price'];   \n    \n    $server_id = $file_detail['server_id'];\n    $netType = $file_detail['type'];\n    $acount = $file_detail['acount'];\n    $inbound_id = $file_detail['inbound_id'];\n    $limitip = $file_detail['limitip'];\n    $rahgozar = $file_detail['rahgozar'];\n    $customPath = $file_detail['custom_path'];\n    $customPort = $file_detail['custom_port'];\n    $customSni = $file_detail['custom_sni'];\n    \n    $accountCount = $payInfo['agent_count']!=0?$payInfo['agent_count']:1;\n    $eachPrice = $price / $accountCount;\n    if($acount == 0 and $inbound_id != 0){\n        alert($mainValues['out_of_connection_capacity']);\n        exit;\n    }\n    if($inbound_id == 0) {\n        $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $server_info = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n    \n        if($server_info['ucount'] <= 0) {\n            alert($mainValues['out_of_server_capacity']);\n            exit;\n        }\n    }\n\n    $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $serverInfo = $stmt->get_result()->fetch_assoc();\n    $serverTitle = $serverInfo['title'];\n    $srv_remark = $serverInfo['remark'];\n    $stmt->close();\n\n    $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $serverConfig = $stmt->get_result()->fetch_assoc();\n    $serverType = $serverConfig['type'];\n    $portType = $serverConfig['port_type'];\n    $panelUrl = $serverConfig['panel_url'];\n    $stmt->close();\n    include 'phpqrcode/qrlib.php';\n\n    alert($mainValues['sending_config_to_user']);\n    define('IMAGE_WIDTH',540);\n    define('IMAGE_HEIGHT',540);\n    for($i = 1; $i <= $accountCount; $i++){\n        $uniqid = generateRandomString(42,$protocol);\n        \n        $savedinfo = file_get_contents('settings/temp.txt');\n        $savedinfo = explode('-',$savedinfo);\n        $port = $savedinfo[0] + 1;\n        $last_num = $savedinfo[1] + 1;\n        \n        if($botState['remark'] == \"digits\"){\n            $rnd = rand(10000,99999);\n            $remark = \"{$srv_remark}-{$rnd}\";\n        }\n        elseif($botState['remark'] == \"manual\"){\n            $remark = $payInfo['description'];\n        }\n        else{\n            $rnd = rand(1111,99999);\n            $remark = \"{$srv_remark}-{$from_id}-{$rnd}\";\n        }\n        if(!empty($description)) $remark = $description;\n        if($portType == \"auto\"){\n            file_put_contents('settings/temp.txt',$port.'-'.$last_num);\n        }else{\n            $port = rand(1111,65000);\n        }\n        \n        if($inbound_id == 0){    \n            if($serverType == \"marzban\"){\n                $response = addMarzbanUser($server_id, $remark, $volume, $days, $fid);\n                if(!$response->success){\n                    if($response->msg == \"User already exists\"){\n                        $remark .= rand(1111,99999);\n                        $response = addMarzbanUser($server_id, $remark, $volume, $days, $fid);\n                    }\n                }\n            }else{\n                $response = addUser($server_id, $uniqid, $protocol, $port, $expire_microdate, $remark, $volume, $netType, 'none', $rahgozar, $fid); \n                if(!$response->success){\n                    if(strstr($response->msg, \"Duplicate email\")) $remark .= RandomString();\n                    elseif(strstr($response->msg, \"Port already exists\")) $port = rand(1111,65000);\n                    \n                    $response = addUser($server_id, $uniqid, $protocol, $port, $expire_microdate, $remark, $volume, $netType, 'none', $rahgozar, $fid);\n                } \n            }\n        }else {\n            $response = addInboundAccount($server_id, $uniqid, $inbound_id, $expire_microdate, $remark, $volume, $limitip, null, $fid); \n            if(!$response->success){\n                if(strstr($response->msg, \"Duplicate email\")) $remark .= RandomString();\n\n                $response = addInboundAccount($server_id, $uniqid, $inbound_id, $expire_microdate, $remark, $volume, $limitip, null, $fid);\n            } \n        }\n        \n        if(is_null($response)){\n            sendMessage('❌ | 🥺 گلم ، اتصال به سرور برقرار نیست لطفا مدیر رو در جریان بزار ...');\n            exit;\n        }\n        if($response == \"inbound not Found\"){\n            sendMessage(\"❌ | 🥺 سطر (inbound) با آیدی $inbound_id تو این سرور وجود نداره ، مدیر رو در جریان بزار ...\");\n        \texit;\n        }\n        if(!$response->success){\n            sendMessage('❌ | 😮 وای خطا داد لطفا سریع به مدیر بگو ...');\n            sendMessage(\"خطای سرور {$serverInfo['title']}:\\n\\n\" . ($response->msg), null, null, $admin);\n            exit;\n        }\n        \n        if($serverType == \"marzban\"){\n            $uniqid = $token = str_replace(\"/sub/\", \"\", $response->sub_link);\n            $subLink = $botState['subLinkState'] == \"on\"?$panelUrl . $response->sub_link:\"\";\n            $vraylink = [$subLink];\n            $vray_link = json_encode($response->vray_links);\n        }else{\n            $token = RandomString(30);\n            $subLink = $botState['subLinkState']==\"on\"?$botUrl . \"settings/subLink.php?token=\" . $token:\"\";\n    \n            $vraylink = getConnectionLink($server_id, $uniqid, $protocol, $remark, $port, $netType, $inbound_id, $rahgozar, $customPath, $customPort, $customSni);\n            $vray_link = json_encode($vraylink);\n        }\n        foreach($vraylink as $link){\n        $acc_text = \"\n        \n😍 سفارش جدید شما\n📡 پروتکل: $protocol\n🔮 نام سرویس: $remark\n🔋حجم سرویس: $volume گیگ\n⏰ مدت سرویس: $days روز⁮⁮ ⁮⁮\n\" . ($botState['configLinkState'] != \"off\" && $serverType != \"marzban\"?\"\n💝 config : <code>$link</code>\":\"\");\n\nif($botState['subLinkState'] == \"on\") $acc_text .= \"\n\n🔋 Volume web: <code> $botUrl\".\"search.php?id=\".$uniqid.\"</code>\n\n\n🌐 subscription : <code>$subLink</code>\n        \n        \";\n              \n            $file = RandomString() .\".png\";\n            $ecc = 'L';\n            $pixel_Size = 11;\n            $frame_Size = 0;\n            \n            QRcode::png($link, $file, $ecc, $pixel_Size, $frame_Size);\n        \taddBorderImage($file);\n        \t\n        \t$backgroundImage = imagecreatefromjpeg(\"settings/QRCode.jpg\");\n            $qrImage = imagecreatefrompng($file);\n            \n            $qrSize = array('width' => imagesx($qrImage), 'height' => imagesy($qrImage));\n            imagecopy($backgroundImage, $qrImage, 300, 300 , 0, 0, $qrSize['width'], $qrSize['height']);\n            imagepng($backgroundImage, $file);\n            imagedestroy($backgroundImage);\n            imagedestroy($qrImage);\n\n        \tsendPhoto($botUrl . $file, $acc_text,json_encode(['inline_keyboard'=>[[['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]]]]),\"HTML\", $uid);\n            unlink($file);\n        }\n        \n        $agentBought = $payInfo['agent_bought'];\n        \n        $stmt = $connection->prepare(\"INSERT INTO `orders_list` \n            (`userid`, `token`, `transid`, `fileid`, `server_id`, `inbound_id`, `remark`, `uuid`, `protocol`, `expire_date`, `link`, `amount`, `status`, `date`, `notif`, `rahgozar`, `agent_bought`)\n            VALUES (?, ?, '', ?, ?, ?, ?, ?, ?, ?, ?, ?,1, ?, 0, ?, ?);\");\n        $stmt->bind_param(\"ssiiisssisiiii\", $uid, $token, $fid, $server_id, $inbound_id, $remark, $uniqid, $protocol, $expire_date, $vray_link, $eachPrice, $date, $rahgozar, $agentBought);\n        $stmt->execute();\n        $order = $stmt->get_result(); \n        $stmt->close();\n    }\n    \n    if($userInfo['refered_by'] != null){\n        $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'INVITE_BANNER_AMOUNT'\");\n        $stmt->execute();\n        $inviteAmount = $stmt->get_result()->fetch_assoc()['value']??0;\n        $stmt->close();\n        $inviterId = $userInfo['refered_by'];\n        \n        $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` + ? WHERE `userid` = ?\");\n        $stmt->bind_param(\"ii\", $inviteAmount, $inviterId);\n        $stmt->execute();\n        $stmt->close();\n         \n        sendMessage(\"تبریک یکی از زیر مجموعه های شما خرید انجام داد شما مبلغ \" . number_format($inviteAmount) . \" تومان جایزه دریافت کردید\",null,null,$inviterId);\n    }\n    $keys = json_encode(['inline_keyboard'=>[\n        [\n            ['text'=>\"بنازم خرید جدید ❤️\",'callback_data'=>\"wizwizch\"]\n        ],\n        ]]);\n        \n    if($inbound_id == 0) {\n        $stmt = $connection->prepare(\"UPDATE `server_info` SET `ucount` = `ucount` - ? WHERE `id`=?\");\n        $stmt->bind_param(\"ii\", $accountCount, $server_id);\n        $stmt->execute();\n        $stmt->close();\n    }else{\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `acount` = `acount` - ? WHERE id=?\");\n        $stmt->bind_param(\"ii\", $accountCount, $fid);\n        $stmt->execute();\n        $stmt->close();\n    }\n    $msg = str_replace(['SERVERNAME', 'TYPE', 'USER-ID', 'USERNAME', 'NAME', 'PRICE', 'REMARK', 'VOLUME', 'DAYS'],\n                [$serverTitle, 'ارزی ریالی', $from_id, $username, $first_name, $price, $remark,$volume, $days], $mainValues['buy_new_account_request']);\n    \n    sendMessage($msg,$keys,\"html\", $admin);\n}\n    elseif($payType == \"RENEW_ACCOUNT\"){\n        $oid = $payInfo['plan_id'];\n        $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $oid);\n        $stmt->execute();\n        $order = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        $fid = $order['fileid'];\n        $remark = $order['remark'];\n        $uuid = $order['uuid']??\"0\";\n        $server_id = $order['server_id'];\n        $inbound_id = $order['inbound_id'];\n        $expire_date = $order['expire_date'];\n        $expire_date = ($expire_date > $time) ? $expire_date : $time;\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id` = ? AND `active` = 1\");\n        $stmt->bind_param(\"i\", $fid);\n        $stmt->execute();\n        $respd = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        $name = $respd['title'];\n        $days = $respd['days'];\n        $volume = $respd['volume'];\n        $price = $payInfo['price'];\n        \n        $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $server_info = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        $serverType = $server_info['type'];\n    \n        if($serverType == \"marzban\"){\n            $response = editMarzbanConfig($server_id, ['remark'=>$remark, 'days'=>$days, 'volume' => $volume]);\n        }else{\n            if($inbound_id > 0)\n                $response = editClientTraffic($server_id, $inbound_id, $uuid, $volume, $days, \"renew\");\n            else\n                $response = editInboundTraffic($server_id, $uuid, $volume, $days, \"renew\");\n        }\n        \n        if(is_null($response)){\n        \talert('🔻مشکل فنی در اتصال به سرور. لطفا به مدیریت اطلاع بدید',true);\n        \texit;\n        }\n        $stmt = $connection->prepare(\"UPDATE `orders_list` SET `expire_date` = ?, `notif` = 0 WHERE `id` = ?\");\n        $newExpire = $time + $days * 86400;\n        $stmt->bind_param(\"ii\", $newExpire, $oid);\n        $stmt->execute();\n        $stmt->close();\n        $stmt = $connection->prepare(\"INSERT INTO `increase_order` VALUES (NULL, ?, ?, ?, ?, ?, ?);\");\n        $stmt->bind_param(\"iiisii\", $uid, $server_id, $inbound_id, $remark, $price, $time);\n        $stmt->execute();\n        $stmt->close();\n    \n    sendMessage(\"✅سرویس $remark با موفقیت تمدید شد\",getMainKeys());\n    $keys = json_encode(['inline_keyboard'=>[\n        [\n            ['text'=>\"به به تمدید 😍\",'callback_data'=>\"wizwizch\"]\n            ],\n        ]]);\n    \n        $msg = str_replace(['TYPE', \"USER-ID\", \"USERNAME\", \"NAME\", \"PRICE\", \"REMARK\", \"VOLUME\", \"DAYS\"],['کیف پول', $from_id, $username, $first_name, $price, $remark, $volume, $days], $mainValues['renew_account_request_message']);\n    \n    sendMessage($msg, $keys,\"html\", $admin);\n    }\n    elseif(preg_match('/^INCREASE_DAY_(\\d+)_(\\d+)/',$payType, $increaseInfo)){\n        $orderId = $increaseInfo[1];\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $orderId);\n        $stmt->execute();\n        $orderInfo = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        \n        $server_id = $orderInfo['server_id'];\n        $inbound_id = $orderInfo['inbound_id'];\n        $remark = $orderInfo['remark'];\n        $uuid = $orderInfo['uuid']??\"0\";\n        \n        $planid = $increaseInfo[2];\n    \n        \n        \n        $stmt = $connection->prepare(\"SELECT * FROM `increase_day` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $planid);\n        $stmt->execute();\n        $res = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        $price = $payInfo['price'];\n        $volume = $res['volume'];\n    \n        $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $server_info = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        $serverType = $server_info['type'];\n    \n        if($serverType == \"marzban\"){\n            $response = editMarzbanConfig($server_id, ['remark'=>$remark, 'plus_day'=>$volume]);\n        }else{\n            if($inbound_id > 0)\n                $response = editClientTraffic($server_id, $inbound_id, $uuid, 0, $volume);\n            else\n                $response = editInboundTraffic($server_id, $uuid, 0, $volume);\n        }\n        \n    if($response->success){\n        $stmt = $connection->prepare(\"UPDATE `orders_list` SET `expire_date` = `expire_date` + ?, `notif` = 0 WHERE `uuid` = ?\");\n        $newVolume = $volume * 86400;\n        $stmt->bind_param(\"is\", $newVolume, $uuid);\n        $stmt->execute();\n        $stmt->close();\n        \n        $stmt = $connection->prepare(\"INSERT INTO `increase_order` VALUES (NULL, ?, ?, ?, ?, ?, ?);\");\n        $newVolume = $volume * 86400;\n        $stmt->bind_param(\"iiisii\", $from_id, $server_id, $inbound_id, $remark, $price, $time);\n        $stmt->execute();\n        $stmt->close();\n        \n        sendMessage(\"✅$volume روز به مدت زمان سرویس شما اضافه شد\",getMainKeys());\n        \n        $keys = json_encode(['inline_keyboard'=>[\n            [\n                ['text'=>\"اخیش یکی زمان زد 😁\",'callback_data'=>\"wizwizch\"]\n                ],\n            ]]);\n    sendMessage(\"\n    🔋|💰 افزایش زمان با ( کیف پول )\n    \n    ▫️آیدی کاربر: $from_id\n    👨‍💼اسم کاربر: $first_name\n    ⚡️ نام کاربری: $username\n    🎈 نام سرویس: $remark\n    ⏰ مدت افزایش: $volume روز\n    💰قیمت: $price تومان\n    ⁮⁮ ⁮⁮\n    \",$keys,\"html\", $admin);\n    \n        exit;\n    }else {\n        alert(\"به دلیل مشکل فنی امکان افزایش حجم نیست. لطفا به مدیریت اطلاع بدید یا 5دقیقه دیگر دوباره تست کنید\", true);\n        exit;\n    }\n    }\n    elseif(preg_match('/^INCREASE_VOLUME_(\\d+)_(\\d+)/',$payType, $increaseInfo)){\n    $orderId = $increaseInfo[1];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $orderId);\n    $stmt->execute();\n    $orderInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $server_id = $orderInfo['server_id'];\n    $inbound_id = $orderInfo['inbound_id'];\n    $remark = $orderInfo['remark'];\n    $uuid = $orderInfo['uuid']??\"0\";\n    \n    $planid = $increaseInfo[2];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `increase_plan` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $planid);\n    $stmt->execute();\n    $res = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $price = $payInfo['price'];\n    $volume = $res['volume'];\n    \n        $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $server_info = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        $serverType = $server_info['type'];\n    \n        if($serverType == \"marzban\"){\n            $response = editMarzbanConfig($server_id, ['remark'=>$remark, 'plus_volume'=>$volume]);\n        }else{\n            if($inbound_id > 0)\n                $response = editClientTraffic($server_id, $inbound_id, $uuid, $volume, 0);\n            else\n                $response = editInboundTraffic($server_id, $uuid, $volume, 0);\n        }\n        \n    if($response->success){\n        $stmt = $connection->prepare(\"UPDATE `orders_list` SET `notif` = 0 WHERE `uuid` = ?\");\n        $stmt->bind_param(\"s\", $uuid);\n        $stmt->execute();\n        $stmt->close();\n        $keys = json_encode(['inline_keyboard'=>[\n            [\n                ['text'=>\"اخیش یکی حجم زد 😁\",'callback_data'=>\"wizwizch\"]\n                ],\n            ]]);\n    sendMessage(\"\n    🔋|💰 افزایش حجم با ( کیف پول )\n    \n    ▫️آیدی کاربر: $from_id\n    👨‍💼اسم کاربر: $first_name\n    ⚡️ نام کاربری: $username\n    🎈 نام سرویس: $remark\n    ⏰ مدت افزایش: $volume گیگ\n    💰قیمت: $price تومان\n    ⁮⁮ ⁮⁮\n    \",$keys,\"html\", $admin);\n        sendMessage( \"✅$volume گیگ به حجم سرویس شما اضافه شد\",getMainKeys());exit;\n        \n    \n    }else {\n        alert(\"به دلیل مشکل فنی امکان افزایش حجم نیست. لطفا به مدیریت اطلاع بدید یا 5دقیقه دیگر دوباره تست کنید\",true);\n        exit;\n    }\n    }\n    elseif($payType == \"RENEW_SCONFIG\"){\n        $uid = $from_id;\n        $fid = $payInfo['plan_id']; \n    \n        $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $fid);\n        $stmt->execute();\n        $file_detail = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        \n        $volume = $file_detail['volume'];\n        $days = $file_detail['days'];\n        \n        $price = $payInfo['price'];   \n        $server_id = $file_detail['server_id'];\n        $configInfo = json_decode($payInfo['description'],true);\n        $remark = $configInfo['remark'];\n        $uuid = $configInfo['uuid'];\n        $isMarzban = $configInfo['marzban'];\n        \n        $remark = $payInfo['description'];\n        $inbound_id = $payInfo['volume']; \n        \n        if($isMarzban){\n            $response = editMarzbanConfig($server_id, ['remark'=>$remark, 'days'=>$days, 'volume' => $volume]);\n        }else{\n            if($inbound_id > 0)\n                $response = editClientTraffic($server_id, $inbound_id, $uuid, $volume, $days, \"renew\");\n            else\n                $response = editInboundTraffic($server_id, $uuid, $volume, $days, \"renew\");\n        }\n        \n    \tif(is_null($response)){\n    \t\talert('🔻مشکل فنی در اتصال به سرور. لطفا به مدیریت اطلاع بدید',true);\n    \t\texit;\n    \t}\n    \t$stmt = $connection->prepare(\"INSERT INTO `increase_order` VALUES (NULL, ?, ?, ?, ?, ?, ?);\");\n    \t$stmt->bind_param(\"iiisii\", $uid, $server_id, $inbound_id, $remark, $price, $time);\n    \t$stmt->execute();\n    \t$stmt->close();\n    \n        sendMessage(\"\n        🔋|💰 تمدید مشخصات کانفیگ با ( کیف پول )\n        \n        ▫️آیدی کاربر: $from_id\n        👨‍💼اسم کاربر: $first_name\n        ⚡️ نام کاربری: $username\n        🎈 نام سرویس: $remark\n        ⏰ مدت کانفیگ: $volume گیگ\n        حجم کانفیگ:  $days روز\n        💰قیمت: $price تومان\n        ⁮⁮ ⁮⁮\n        \",$keys,\"html\", $admin);\n    \n    }\n        \n    editKeys(json_encode(['inline_keyboard'=>[\n\t\t    [['text'=>\"پرداخت انجام شد\",'callback_data'=>\"wizwizch\"]]\n\t\t    ]]));\n}else{\n    if($request_json->payment_status == 'partially_paid'){\n        $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'partiallyPaied' WHERE `hash_id` = ?\");\n        $stmt->bind_param(\"s\", $match[1]);\n        $stmt->execute();\n        $stmt->close();\n        alert(\"شما هزینه کمتری پرداخت کردید، لطفا به پشتیبانی پیام بدهید\");\n    }else{\n        alert(\"پرداخت مورد نظر هنوز تکمیل نشده!\");\n    }\n}\n}else alert(\"این لینک پرداخت منقضی شده است\");\n}\nif($data==\"messageToSpeceficUser\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage($mainValues['send_user_id'], $cancelKey);\n    setUser($data);\n}\nif($userInfo['step'] == \"messageToSpeceficUser\" && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(!is_numeric($text)){\n        sendMessage($mainValues['send_only_number']);\n        exit();\n    }\n    $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid` = ?\");\n    $stmt->bind_param(\"i\", $text);\n    $stmt->execute();\n    $usersCount = $stmt->get_result()->num_rows;\n    $stmt->close();\n\n    if($usersCount > 0 ){\n        sendMessage(\"👀| خصوصی میخوای بهش پیام بدی شیطون، پیامت رو بفرس تا در گوشش بگم:\");\n        setUser(\"sendMessageToUser\" . $text);\n    }else{\n        sendMessage($mainValues['user_not_found']);\n    }\n}\nif($data == 'message2All' and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `send_list` WHERE `state` = 1\");\n    $stmt->execute();\n    $info = $stmt->get_result();\n    $stmt->close();\n    \n    if($info->num_rows > 0){\n        $sendInfo = $info->fetch_assoc();\n        \n        $offset = $sendInfo['offset']??0;\n        $type = $sendInfo['type'];\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `users`\");\n        $stmt->execute();\n        $usersCount = $stmt->get_result()->num_rows;\n        $stmt->close();\n\n        $leftMessages = $usersCount - $offset;\n        \n        if($type == \"forwardall\"){\n            sendMessage(\"\n            ❗️ یک فروارد همگانی در صف انتشار می باشد لطفا صبور باشید ...\n            \n            🔰 تعداد کاربران : $usersCount\n            ☑️ فروارد شده : $offset\n            📣 باقیمانده : $leftMessages\n            ⁮⁮ ⁮⁮ ⁮⁮ ⁮⁮\n            \");\n        }else{\n            sendMessage(\"\n            ❗️ یک پیام همگانی در صف انتشار می باشد لطفا صبور باشید ...\n            \n            🔰 تعداد کاربران : $usersCount\n            ☑️ ارسال شده : $offset\n            📣 باقیمانده : $leftMessages\n            ⁮⁮ ⁮⁮ ⁮⁮ ⁮⁮\n            \");\n        }\n    }else{\n        setUser('s2a');\n        sendMessage(\"لطفا پیامت رو بنویس ، میخوام برا همه بفرستمش: 🙂\",$cancelKey);\n    }\n}\nif($userInfo['step'] == 's2a' and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    setUser();\n\n    if($fileid !== null) {\n        $stmt = $connection->prepare(\"INSERT INTO `send_list` (`type`, `text`, `file_id`) VALUES (?, ?, ?)\");\n        $stmt->bind_param('sss', $filetype, $caption, $fileid);\n    }\n    else{\n        $stmt = $connection->prepare(\"INSERT INTO `send_list` (`type`, `text`) VALUES ('text', ?)\");\n        $stmt->bind_param(\"s\", $text);\n    }\n    $stmt->execute();\n    $id = $stmt->insert_id;\n    $stmt->close();\n    \n    sendMessage('⏳ مرسی از پیامت  ...  ',$removeKeyboard);\n    sendMessage(\"برای همه بفرستم؟\",json_encode(['inline_keyboard'=>[\n    [['text'=>\"بفرست\",'callback_data'=>\"yesSend2All\" . $id],['text'=>\"نه نفرست\",'callback_data'=>\"noDontSend2all\" . $id]]\n    ]]));\n}\nif(preg_match('/^noDontSend2all(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"DELETE FROM `send_list` WHERE `id` = ?\");\n    $stmt->bind_param('i', $match[1]);\n    $stmt->exeucte();\n    $stmt->close();\n    \n    editText($message_id,'ارسال پیام همگانی لغو شد',getMainKeys());\n}\nif(preg_match('/^yesSend2All(\\d+)/', $data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"UPDATE `send_list` SET `state` = 1 WHERE `id` = ?\") ;\n    $stmt->bind_param('i', $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n    editText($message_id,'⏳ کم کم برا همه ارسال میشه ...  ',getMainKeys());\n}\nif($data==\"forwardToAll\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `send_list` WHERE `state` = 1\");\n    $stmt->execute();\n    $info = $stmt->get_result();\n    $stmt->close();\n    \n    if($info->num_rows > 0){\n        $sendInfo = $info->fetch_assoc();\n        $offset = $sendInfo['offset']??0;\n        $type = $sendInfo['type'];\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `users`\");\n        $stmt->execute();\n        $usersCount = $stmt->get_result()->num_rows;\n        $stmt->close();\n        \n        $leftMessages = $usersCount - $offset;\n        \n        if($type == \"forwardall\"){\n            sendMessage(\"\n            ❗️ یک فروارد همگانی در صف انتشار می باشد لطفا صبور باشید ...\n            \n            🔰 تعداد کاربران : $usersCount\n            ☑️ فروارد شده : $offset\n            📣 باقیمانده : $leftMessages\n            ⁮⁮ ⁮⁮ ⁮⁮ ⁮⁮\n            \");\n        }else{\n            sendMessage(\"\n            ❗️ یک پیام همگانی در صف انتشار می باشد لطفا صبور باشید ...\n            \n            🔰 تعداد کاربران : $usersCount\n            ☑️ ارسال شده : $offset\n            📣 باقیمانده : $leftMessages\n            ⁮⁮ ⁮⁮ ⁮⁮ ⁮⁮\n            \");\n        }\n    }else{\n        delMessage();\n        sendMessage($mainValues['forward_your_message'], $cancelKey);\n        setUser($data);\n    }\n}\nif($userInfo['step'] == \"forwardToAll\" && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    $stmt = $connection->prepare(\"INSERT INTO `send_list` (`type`, `message_id`, `chat_id`) VALUES ('forwardall', ?, ?)\");\n    $stmt->bind_param('ss', $message_id, $chat_id);\n    $stmt->execute();\n    $id = $stmt->insert_id;\n    $stmt->close();\n\n    setUser();\n    sendMessage('⏳ مرسی از پیامت  ...  ',$removeKeyboard);\n    sendMessage(\"برای همه فروارد کنم؟\",json_encode(['inline_keyboard'=>[\n    [['text'=>\"بفرست\",'callback_data'=>\"yesSend2All\" . $id],['text'=>\"نه نفرست\",'callback_data'=>\"noDontSend2all\" . $id]]\n    ]]));\n}\nif(preg_match('/selectServer(?<serverId>\\d+)_(?<buyType>\\w+)/',$data, $match) && ($botState['sellState']==\"on\" || ($from_id == $admin || $userInfo['isAdmin'] == true)) ) {\n    $sid = $match['serverId'];\n        \n    $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `parent`=0 order by `id` asc\");\n    $stmt->execute();\n    $respd = $stmt->get_result();\n    $stmt->close();\n    if($respd->num_rows == 0){\n        alert($mainValues['category_not_avilable']);\n    }else{\n        \n        $keyboard = [];\n        while ($file = $respd->fetch_assoc()){\n            $id = $file['id'];\n            $name = $file['title'];\n            $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `server_id`=? and `catid`=? and `active`=1\");\n            $stmt->bind_param(\"ii\", $sid, $id);\n            $stmt->execute();\n            $rowcount = $stmt->get_result()->num_rows; \n            $stmt->close();\n            if($rowcount>0) $keyboard[] = ['text' => \"$name\", 'callback_data' => \"selectCategory{$id}_{$sid}_{$match['buyType']}\"];\n        }\n        if(empty($keyboard)){\n            alert($mainValues['category_not_avilable']);exit;\n        }\n        alert($mainValues['receive_categories']);\n\n        $keyboard[] = ['text' => $buttonValues['back_to_main'], 'callback_data' => \n        ($match['buyType'] == \"one\"?\"agentOneBuy\":($match['buyType'] == \"much\"?\"agentMuchBuy\":\"buySubscription\"))];\n        $keyboard = array_chunk($keyboard,1);\n        editText($message_id,$mainValues['buy_sub_select_category'], json_encode(['inline_keyboard'=>$keyboard]));\n    }\n\n}\nif(preg_match('/selectCategory(?<categoryId>\\d+)_(?<serverId>\\d+)_(?<buyType>\\w+)/',$data,$match) && ($botState['sellState']==\"on\" || $from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $call_id = $match['categoryId'];\n    $sid = $match['serverId'];\n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `server_id`=? and `price` != 0 and `catid`=? and `active`=1 order by `id` asc\");\n    $stmt->bind_param(\"ii\", $sid, $call_id);\n    $stmt->execute();\n    $respd = $stmt->get_result();\n    $stmt->close();\n    if($respd->num_rows==0){\n        alert($mainValues['no_plan_available']); \n    }else{\n        alert($mainValues['receive_plans']);\n        $keyboard = [];\n        while($file = $respd->fetch_assoc()){\n            $id = $file['id'];\n            $name = $file['title'];\n            $price = $file['price'];\n            if($userInfo['is_agent'] == true && ($match['buyType'] == \"one\" || $match['buyType'] == \"much\")){\n                $discounts = json_decode($userInfo['discount_percent'],true);\n                if($botState['agencyPlanDiscount']==\"on\") $discount = $discounts['plans'][$id]?? $discounts['normal'];\n                else $discount = $discounts['servers'][$sid]?? $discounts['normal'];\n                \n                $price -= floor($price * $discount / 100);\n            }\n            $price = ($price == 0) ? 'رایگان' : number_format($price).' تومان ';\n            $keyboard[] = ['text' => \"$name - $price\", 'callback_data' => \"selectPlan{$id}_{$call_id}_{$match['buyType']}\"];\n        }\n        if($botState['plandelkhahState'] == \"on\" && $match['buyType'] != \"much\"){\n\t        $keyboard[] = ['text' => $mainValues['buy_custom_plan'], 'callback_data' => \"selectCustomPlan{$call_id}_{$sid}_{$match['buyType']}\"];\n        }\n        $keyboard[] = ['text' => $buttonValues['back_to_main'], 'callback_data' => \"selectServer{$sid}_{$match['buyType']}\"];\n        $keyboard = array_chunk($keyboard,1);\n        editText($message_id,$mainValues['buy_sub_select_plan'], json_encode(['inline_keyboard'=>$keyboard]));\n    }\n\n}\nif(preg_match('/selectCustomPlan(?<categoryId>\\d+)_(?<serverId>\\d+)_(?<buyType>\\w+)/',$data,$match) && ($botState['sellState']==\"on\" || $from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $call_id = $match['categoryId'];\n    $sid = $match['serverId'];\n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `server_id`=? and `catid`=? and `active`=1 order by `id` asc\");\n    $stmt->bind_param(\"ii\", $sid, $call_id);\n    $stmt->execute();\n    $respd = $stmt->get_result();\n    $stmt->close();\n    alert($mainValues['receive_plans']);\n    $keyboard = [];\n    while($file = $respd->fetch_assoc()){\n        $id = $file['id'];\n        $name = preg_replace(\"/پلن\\s(\\d+)\\sگیگ\\s/\",\"\",$file['title']);\n        $keyboard[] = ['text' => \"$name\", 'callback_data' => \"selectCustomePlan{$id}_{$call_id}_{$match['buyType']}\"];\n    }\n    $keyboard[] = ['text' => $buttonValues['back_to_main'], 'callback_data' => \"selectServer{$sid}_{$match['buyType']}\"];\n    $keyboard = array_chunk($keyboard,1);\n    editText($message_id, $mainValues['select_one_plan_to_edit'], json_encode(['inline_keyboard'=>$keyboard]));\n\n}\nif(preg_match('/selectCustomePlan(?<planId>\\d+)_(?<categoryId>\\d+)_(?<buyType>\\w+)/',$data, $match) && ($botState['sellState']==\"on\" ||$from_id == $admin)){\n\tdelMessage();\n\t$price = $botState['gbPrice'];\n\tif($match['buyType'] == \"one\" && $userInfo['is_agent'] == true){ \n        $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $match[1]);\n        $stmt->execute();\n        $serverId = $stmt->get_result()->fetch_assoc()['server_id'];\n        $stmt->close();\n\n        $discounts = json_decode($userInfo['discount_percent'],true);\n        if($botState['agencyPlanDiscount']==\"on\") $discount = $discounts['plans'][$match[1]]?? $discounts['normal'];\n        else $discount = $discounts['servers'][$serverId]?? $discounts['normal'];\n        $price -= floor($price * $discount / 100);\n\t}\n\tsendMessage(str_replace(\"VOLUME-PRICE\", $price, $mainValues['customer_custome_plan_volume']),$cancelKey);\n\tsetUser(\"selectCustomPlanGB\" . $match[1] . \"_\" . $match[2] . \"_\" . $match['buyType']);\n}\nif(preg_match('/selectCustomPlanGB(?<planId>\\d+)_(?<categoryId>\\d+)_(?<buyType>\\w+)/',$userInfo['step'], $match) && ($botState['sellState']==\"on\" ||$from_id == $admin) && $text != $buttonValues['cancel']){\n    if(!is_numeric($text)){\n        sendMessage(\"😡|لطفا فقط عدد ارسال کن\");\n        exit();\n    }\n    elseif($text <1){\n        sendMessage(\"لطفا عددی بزرگتر از 0 وارد کن\");\n        exit();\n    }\n    elseif(strstr($text,\".\")){\n        sendMessage(\" عدد اعشاری مجاز نیست\");\n        exit();\n    }\n    elseif(substr($text, 0, 1) == '0'){\n        sendMessage(\"❌عدد وارد شده نمیتواند با 0 شروع شود!\");\n        exit();\n    }\n    \n    $id = $match['planId'];\n    $price = $botState['dayPrice'];\n\tif($match['buyType'] == \"one\" && $userInfo['is_agent'] == true){\n        $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $id);\n        $stmt->execute();\n        $serverId = $stmt->get_result()->fetch_assoc()['server_id'];\n        $stmt->close();\n\n        $discounts = json_decode($userInfo['discount_percent'],true);\n        if($botState['agencyPlanDiscount']==\"on\") $discount = $discounts['plans'][$id]?? $discounts['normal'];\n        else $discount = $discounts['servers'][$serverId]?? $discounts['normal'];\n        $price -= floor($price * $discount / 100);\n\t}\n    \n\tsendMessage(str_replace(\"DAY-PRICE\", $price, $mainValues['customer_custome_plan_day']));\n\tsetUser(\"selectCustomPlanDay\" . $id . \"_\" . $match['categoryId'] . \"_\" . $text . \"_\" . $match['buyType']);\n}\nif((preg_match('/selectCustomPlanDay(?<planId>\\d+)_(?<categoryId>\\d+)_(?<accountCount>\\d+)_(?<buyType>\\w+)/',$userInfo['step'], $match)) && ($botState['sellState']==\"on\" ||$from_id == $admin) && $text != $buttonValues['cancel']){\n    if(!is_numeric($text)){\n        sendMessage(\"😡|لطفا فقط عدد ارسال کن\");\n        exit();\n    }\n    elseif($text <1){\n        sendMessage(\"لطفا عددی بزرگتر از 0 وارد کن\");\n        exit();\n    }\n    elseif(strstr($text,\".\")){\n        sendMessage(\"عدد اعشاری مجاز نیست\");\n        exit();\n    }\n    elseif(substr($text, 0, 1) == '0'){\n        sendMessage(\"❌عدد وارد شده نمیتواند با 0 شروع شود!\");\n        exit();\n    }\n\n\tsendMessage($mainValues['customer_custome_plan_name']);\n\tsetUser(\"enterCustomPlanName\" . $match['planId'] . \"_\" . $match['categoryId'] . \"_\" . $match['accountCount'] . \"_\" . $text . \"_\" . $match['buyType']);\n}\nif((preg_match('/^discountCustomPlanDay(\\d+)/',$userInfo['step'], $match) || preg_match('/enterCustomPlanName(\\d+)_(\\d+)_(\\d+)_(\\d+)_(?<buyType>\\w+)/',$userInfo['step'], $match)) && ($botState['sellState']==\"on\" ||$from_id ==$admin) && $text != $buttonValues['cancel']){\n    if(preg_match('/^discountCustomPlanDay/', $userInfo['step'])){\n        $rowId = $match[1];\n\n        $time = time();\n        $stmt = $connection->prepare(\"SELECT * FROM `discounts` WHERE (`expire_date` > $time OR `expire_date` = 0) AND (`expire_count` > 0 OR `expire_count` = -1) AND `hash_id` = ?\");\n        $stmt->bind_param(\"s\", $text);\n        $stmt->execute();\n        $list = $stmt->get_result();\n        $stmt->close();\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $rowId);\n        $stmt->execute();\n        $payInfo = $stmt->get_result()->fetch_assoc();\n        $hash_id = $payInfo['hash_id'];\n        $price = $payInfo['price'];\n        $id = $payInfo['type'];\n    \t$volume = $payInfo['volume'];\n        $days = $payInfo['day'];\n        $stmt->close();\n            \n        if($list->num_rows>0){\n            $discountInfo = $list->fetch_assoc();\n            $amount = $discountInfo['amount'];\n            $type = $discountInfo['type'];\n            $count = $discountInfo['expire_count'];\n            $usedBy = !is_null($discountInfo['used_by'])?json_decode($discountInfo['used_by'],true):array();\n            \n            $canUse = $discountInfo['can_use'];\n            $userUsedCount = array_count_values($usedBy)[$from_id];\n            if($canUse > $userUsedCount){\n                $usedBy[] = $from_id;\n                $encodeUsedBy = json_encode($usedBy);\n                \n                if ($count != -1) $query = \"UPDATE `discounts` SET `expire_count` = `expire_count` - 1, `used_by` = ? WHERE `id` = ?\";\n                else $query = \"UPDATE `discounts` SET `used_by` = ? WHERE `id` = ?\";\n            \n                $stmt = $connection->prepare($query);\n                $stmt->bind_param(\"si\", $encodeUsedBy, $discountInfo['id']);\n                $stmt->execute();\n                $stmt->close();\n                \n                if($type == \"percent\"){\n                    $discount = $price * $amount / 100;\n                    $price -= $discount;\n                    $discount = number_format($discount) . \" تومان\";\n                }else{\n                    $price -= $amount;\n                    $discount = number_format($amount) . \" تومان\";\n                }\n                if($price < 0) $price = 0;\n                \n                $stmt = $connection->prepare(\"UPDATE `pays` SET `price` = ? WHERE `id` = ?\");\n                $stmt->bind_param(\"ii\", $price, $rowId);\n                $stmt->execute();\n                $stmt->close();\n                sendMessage(str_replace(\"AMOUNT\", $discount, $mainValues['valid_discount_code']));\n                $keys = json_encode(['inline_keyboard'=>[\n                    [\n                        ['text'=>\"❤️\", \"callback_data\"=>\"wizwizch\"]\n                        ],\n                    ]]);\n            sendMessage(\n                str_replace(['USERID', 'USERNAME', \"NAME\", \"AMOUNT\", \"DISCOUNTCODE\"], [$from_id, $username, $first_name, $discount, $text], $mainValues['used_discount_code'])\n                ,$keys,null,$admin);\n                }else sendMessage($mainValues['not_valid_discount_code']);\n        }else sendMessage($mainValues['not_valid_discount_code']);\n    }else{\n        $id = $match[1];\n    \t$call_id = $match[2];\n    \t$volume = $match[3];\n        $days = $match[4];\n        if($match['buyType'] != \"much\"){\n            if(preg_match('/^[a-z]+[0-9]+$/',$text)){} else{\n                sendMessage($mainValues['incorrect_config_name']);\n                exit();\n            }\n        }\n    }\n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=? and `active`=1\");\n    $stmt->bind_param(\"i\", $id);\n    $stmt->execute();\n    $respd = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $respd['catid']);\n    $stmt->execute();\n    $catname = $stmt->get_result()->fetch_assoc()['title'];\n    $stmt->close();\n    \n    $name = $catname.\" \".$respd['title'];\n    $desc = $respd['descr'];\n\t$sid = $respd['server_id'];\n\t$keyboard = array();\n    $token = base64_encode(\"{$from_id}.{$id}\");\n\n    if(!preg_match('/^discountCustomPlanDay/', $userInfo['step'])){\n        $discountPrice = 0;\n        $gbPrice = $botState['gbPrice'];\n        $dayPrice = $botState['dayPrice'];\n        \n        if($userInfo['is_agent'] == true && $match['buyType'] == \"one\") {\n            $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id` = ?\");\n            $stmt->bind_param(\"i\", $match[1]);\n            $stmt->execute();\n            $serverId = $stmt->get_result()->fetch_assoc()['server_id'];\n            $stmt->close();\n            \n            $discounts = json_decode($userInfo['discount_percent'],true);\n            if($botState['agencyPlanDiscount']==\"on\") $discount = $discounts['plans'][$id]?? $discounts['normal'];\n            else $discount = $discounts['servers'][$sid]?? $discounts['normal'];\n            \n            $gbPrice -= floor($gbPrice * $discount /100);\n            $dayPrice -= floor($dayPrice * $discount / 100);\n        }\n        \n        $agentBought = false;\n        if($userInfo['is_agent'] == 1 && ($match['buyType'] == \"one\" || $match['buyType'] == \"much\")) {\n            $agentBought = true;\n        }\n        \n        $price =  ($volume * $gbPrice) + ($days * $dayPrice);\n        $hash_id = RandomString();\n        $stmt = $connection->prepare(\"DELETE FROM `pays` WHERE `user_id` = ? AND `type` = 'BUY_SUB' AND `state` = 'pending'\");\n        $stmt->bind_param(\"i\", $from_id);\n        $stmt->execute();\n        $stmt->close();\n        \n        $time = time();\n        $stmt = $connection->prepare(\"INSERT INTO `pays` (`hash_id`, `description`, `user_id`, `type`, `plan_id`, `volume`, `day`, `price`, `request_date`, `state`, `agent_bought`)\n                                    VALUES (?, ?, ?, 'BUY_SUB', ?, ?, ?, ?, ?, 'pending', ?)\");\n        $stmt->bind_param(\"ssiiiiiii\", $hash_id, $text, $from_id, $id, $volume, $days, $price, $time, $agentBought);\n        $stmt->execute();\n        $rowId = $stmt->insert_id;\n        $stmt->close();\n    }\n    \n    \n    if($botState['cartToCartState'] == \"on\") $keyboard[] = [['text' => $buttonValues['cart_to_cart'],  'callback_data' => \"payCustomWithCartToCart$hash_id\"]];\n    if($botState['nowPaymentOther'] == \"on\") $keyboard[] = [['text' => $buttonValues['now_payment_gateway'],  'url' => $botUrl . \"pay/?nowpayment&hash_id=\" . $hash_id]];\n    if($botState['zarinpal'] == \"on\") $keyboard[] = [['text' => $buttonValues['zarinpal_gateway'],  'url' => $botUrl . \"pay/?zarinpal&hash_id=\" . $hash_id]];\n    if($botState['nextpay'] == \"on\") $keyboard[] = [['text' => $buttonValues['nextpay_gateway'],  'url' => $botUrl . \"pay/?nextpay&hash_id=\" . $hash_id]];\n    if($botState['weSwapState'] == \"on\") $keyboard[] = [['text' => $buttonValues['weswap_gateway'],  'callback_data' => \"payWithWeSwap\" . $hash_id]];\n    if($botState['walletState'] == \"on\") $keyboard[] = [['text' => $buttonValues['pay_with_wallet'],  'callback_data' => \"payCustomWithWallet$hash_id\"]];\n    if($botState['tronWallet'] == \"on\") $keyboard[] = [['text' => $buttonValues['tron_gateway'],  'callback_data' => \"payWithTronWallet\" . $hash_id]];\n\n    if(!preg_match('/^discountCustomPlanDay/', $userInfo['step'])) $keyboard[] = [['text' => \" 🎁 نکنه کد تخفیف داری؟ \",  'callback_data' => \"haveDiscountCustom_\" . $rowId]];\n\t$keyboard[] = [['text' => $buttonValues['cancel'], 'callback_data' => \"mainMenu\"]];\n    $price = ($price == 0) ? 'رایگان' : number_format($price).' تومان ';\n    sendMessage(str_replace(['VOLUME', 'DAYS', 'PLAN-NAME', 'PRICE', 'DESCRIPTION'], [$volume, $days, $name, $price, $desc], $mainValues['buy_subscription_detail']),json_encode(['inline_keyboard'=>$keyboard]), \"HTML\");\n    setUser();\n}\nif(preg_match('/^haveDiscount(.+?)_(.*)/',$data,$match)){\n    delMessage();\n    sendMessage($mainValues['insert_discount_code'],$cancelKey);\n    if($match[1] == \"Custom\") setUser('discountCustomPlanDay' . $match[2]);\n    elseif($match[1] == \"SelectPlan\") setUser('discountSelectPlan' . $match[2]);\n    elseif($match[1] == \"Renew\") setUser('discountRenew' . $match[2]);\n}\nif($data==\"getTestAccount\"){\n    if($userInfo['freetrial'] != null && $from_id != $admin && $userInfo['isAdmin'] != true){\n        alert(\"شما اکانت تست را قبلا استفاده کرده اید\");\n        exit();\n    }\n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `price`=0\");\n    $stmt->execute();\n    $respd = $stmt->get_result();\n    $stmt->close();\n    \n    if($respd->num_rows > 0){\n        alert($mainValues['receving_information']);\n    \t$keyboard = array();\n        while ($row = $respd->fetch_assoc()){\n            $id = $row['id'];\n            $catInfo = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `id`=?\");\n            $catInfo->bind_param(\"i\", $row['catid']);\n            $catInfo->execute();\n            $catname = $catInfo->get_result()->fetch_assoc()['title'];\n            $catInfo->close();\n            \n            $name = $catname.\" \".$row['title'];\n            $price =  $row['price'];\n            $desc = $row['descr'];\n        \t$sid = $row['server_id'];\n\n            $keyboard[] = [['text' => $name, 'callback_data' => \"freeTrial{$id}_normal\"]];\n\n        }\n    \t$keyboard[] = [['text' => $buttonValues['back_to_main'], 'callback_data' => \"mainMenu\"]];\n        editText($message_id,\"لطفا یکی از کلید های زیر را انتخاب کنید\", json_encode(['inline_keyboard'=>$keyboard]), \"HTML\");\n    }else alert(\"این بخش موقتا غیر فعال است\");\n}\nif((preg_match('/^discountSelectPlan(\\d+)_(\\d+)_(\\d+)/',$userInfo['step'],$match) || \n    preg_match('/selectPlan(\\d+)_(\\d+)_(?<buyType>\\w+)/',$userInfo['step'], $match) || \n    preg_match('/enterAccountName(\\d+)_(\\d+)_(?<buyType>\\w+)/',$userInfo['step'], $match) || \n    preg_match('/selectPlan(\\d+)_(\\d+)_(?<buyType>\\w+)/',$data, $match)) && \n    ($botState['sellState']==\"on\" ||$from_id ==$admin) && \n    $text != $buttonValues['cancel']){\n    if(preg_match('/^discountSelectPlan/', $userInfo['step'])){\n        $rowId = $match[3];\n        \n        $time = time();\n        $stmt = $connection->prepare(\"SELECT * FROM `discounts` WHERE (`expire_date` > $time OR `expire_date` = 0) AND (`expire_count` > 0 OR `expire_count` = -1) AND `hash_id` = ?\");\n        $stmt->bind_param(\"s\", $text);\n        $stmt->execute();\n        $list = $stmt->get_result();\n        $stmt->close();\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $rowId);\n        $stmt->execute();\n        $payInfo = $stmt->get_result()->fetch_assoc();\n        $hash_id = $payInfo['hash_id'];\n        $afterDiscount = $payInfo['price'];\n        $stmt->close();\n        \n        if($list->num_rows>0){\n            $discountInfo = $list->fetch_assoc();\n            $amount = $discountInfo['amount'];\n            $type = $discountInfo['type'];\n            $count = $discountInfo['expire_count'];\n            $canUse = $discountInfo['can_use'];\n            $usedBy = !is_null($discountInfo['used_by'])?json_decode($discountInfo['used_by'],true):array();\n            $userUsedCount = array_count_values($usedBy)[$from_id];\n            if($canUse > $userUsedCount){\n                $usedBy[] = $from_id;\n                $encodeUsedBy = json_encode($usedBy);\n                \n                if ($count != -1) $query = \"UPDATE `discounts` SET `expire_count` = `expire_count` - 1, `used_by` = ? WHERE `id` = ?\";\n                else $query = \"UPDATE `discounts` SET `used_by` = ? WHERE `id` = ?\";\n    \n                $stmt = $connection->prepare($query);\n                $stmt->bind_param(\"si\", $encodeUsedBy, $discountInfo['id']);\n                $stmt->execute();\n                $stmt->close();\n                \n                if($type == \"percent\"){\n                    $discount = $afterDiscount * $amount / 100;\n                    $afterDiscount -= $discount;\n                    $discount = number_format($discount) . \" تومان\";\n                }else{\n                    $afterDiscount -= $amount;\n                    $discount = number_format($amount) . \" تومان\";\n                }\n                if($afterDiscount < 0) $afterDiscount = 0;\n                \n                $stmt = $connection->prepare(\"UPDATE `pays` SET `price` = ? WHERE `id` = ?\");\n                $stmt->bind_param(\"ii\", $afterDiscount, $rowId);\n                $stmt->execute();\n                $stmt->close();\n                sendMessage(str_replace(\"AMOUNT\", $discount, $mainValues['valid_discount_code']));\n                $keys = json_encode(['inline_keyboard'=>[\n                    [\n                        ['text'=>\"❤️\", \"callback_data\"=>\"wizwizch\"]\n                        ],\n                    ]]);\n                sendMessage(\n                    str_replace(['USERID', 'USERNAME', \"NAME\", \"AMOUNT\", \"DISCOUNTCODE\"], [$from_id, $username, $first_name, $discount, $text], $mainValues['used_discount_code'])\n                    ,$keys,null,$admin);\n            }else sendMessage($mainValues['not_valid_discount_code']);\n        }else sendMessage($mainValues['not_valid_discount_code']);\n        setUser();\n    }elseif(isset($data)) delMessage();\n\n\n    if($botState['remark'] ==  \"manual\" && preg_match('/^selectPlan/',$data) && $match['buyType'] != \"much\"){\n        sendMessage($mainValues['customer_custome_plan_name'], $cancelKey);\n        setUser('enterAccountName' . $match[1] . \"_\" . $match[2] . \"_\" . $match['buyType']);\n        exit();\n    }\n\n    $remark = \"\";\n    if(preg_match(\"/selectPlan(\\d+)_(\\d+)_(\\w+)/\",$userInfo['step'])){\n        if($match['buyType'] == \"much\"){\n            if(is_numeric($text)){\n                if($text > 0){\n                    $accountCount = $text;\n                    setUser();\n                }else{sendMessage( $mainValues['send_positive_number']); exit(); }\n            }else{ sendMessage($mainValues['send_only_number']); exit(); }\n        }        \n    }\n    elseif(preg_match(\"/enterAccountName(\\d+)_(\\d+)/\",$userInfo['step'])){\n        if(preg_match('/^[a-z]+[0-9]+$/',$text)){\n            $remark = $text;\n            setUser();\n        } else{\n            sendMessage($mainValues['incorrect_config_name']);\n            exit();\n        }\n    }\n    else{\n        if($match['buyType'] == \"much\"){\n            setUser($data);\n            sendMessage($mainValues['enter_account_amount'], $cancelKey);\n            exit();\n        }\n    }\n    \n    \n    $id = $match[1];\n\t$call_id = $match[2];\n    alert($mainValues['receving_information']);\n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=? and `active`=1\");\n    $stmt->bind_param(\"i\", $id);\n    $stmt->execute();\n    $respd = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $respd['catid']);\n    $stmt->execute();\n    $catname = $stmt->get_result()->fetch_assoc()['title'];\n    $stmt->close();\n    \n    $name = $catname.\" \".$respd['title'];\n    $desc = $respd['descr'];\n\t$sid = $respd['server_id'];\n\t$keyboard = array();\n    $price =  $respd['price'];\n    if(isset($accountCount)) $price *= $accountCount;\n    \n    $agentBought = false;\n    if($userInfo['is_agent'] == true && ($match['buyType'] == \"one\" || $match['buyType'] == \"much\")){\n        $discounts = json_decode($userInfo['discount_percent'],true);\n        if($botState['agencyPlanDiscount']==\"on\") $discount = $discounts['plans'][$id]?? $discounts['normal'];\n        else $discount = $discounts['servers'][$sid]?? $discounts['normal'];\n        $price -= floor($price * $discount / 100);\n\n        $agentBought = true;\n    }\n    if($price == 0 or ($from_id == $admin)){\n        $keyboard[] = [['text' => '📥 دریافت رایگان', 'callback_data' => \"freeTrial{$id}_{$match['buyType']}\"]];\n        setUser($remark, 'temp');\n    }else{\n        $token = base64_encode(\"{$from_id}.{$id}\");\n        \n        if(!preg_match('/^discountSelectPlan/', $userInfo['step'])){\n            $hash_id = RandomString();\n            $stmt = $connection->prepare(\"DELETE FROM `pays` WHERE `user_id` = ? AND `type` = 'BUY_SUB' AND `state` = 'pending'\");\n            $stmt->bind_param(\"i\", $from_id);\n            $stmt->execute();\n            $stmt->close();\n            \n            $time = time();\n            if(isset($accountCount)){\n                $stmt = $connection->prepare(\"INSERT INTO `pays` (`hash_id`, `user_id`, `type`, `plan_id`, `volume`, `day`, `price`, `request_date`, `state`, `agent_bought`, `agent_count`)\n                                            VALUES (?, ?, 'BUY_SUB', ?, '0', '0', ?, ?, 'pending', ?, ?)\");\n                $stmt->bind_param(\"siiiiii\", $hash_id, $from_id, $id, $price, $time, $agentBought, $accountCount);\n            }else{\n                $stmt = $connection->prepare(\"INSERT INTO `pays` (`hash_id`, `description`, `user_id`, `type`, `plan_id`, `volume`, `day`, `price`, `request_date`, `state`, `agent_bought`)\n                                            VALUES (?, ?, ?, 'BUY_SUB', ?, '0', '0', ?, ?, 'pending', ?)\");\n                $stmt->bind_param(\"ssiiiii\", $hash_id, $remark, $from_id, $id, $price, $time, $agentBought);\n            }\n            $stmt->execute();\n            $rowId = $stmt->insert_id;\n            $stmt->close();\n        }else{\n            $price = $afterDiscount;\n        }\n        \n        if($botState['cartToCartState'] == \"on\") $keyboard[] = [['text' => $buttonValues['cart_to_cart'],  'callback_data' => \"payWithCartToCart$hash_id\"]];\n        if($botState['nowPaymentOther'] == \"on\") $keyboard[] = [['text' => $buttonValues['now_payment_gateway'],  'url' => $botUrl . \"pay/?nowpayment&hash_id=\" . $hash_id]];\n        if($botState['zarinpal'] == \"on\") $keyboard[] = [['text' => $buttonValues['zarinpal_gateway'],  'url' => $botUrl . \"pay/?zarinpal&hash_id=\" . $hash_id]];\n        if($botState['nextpay'] == \"on\") $keyboard[] = [['text' => $buttonValues['nextpay_gateway'],  'url' => $botUrl . \"pay/?nextpay&hash_id=\" . $hash_id]];\n        if($botState['weSwapState'] == \"on\") $keyboard[] = [['text' => $buttonValues['weswap_gateway'],  'callback_data' => \"payWithWeSwap\" . $hash_id]];\n        if($botState['walletState'] == \"on\") $keyboard[] = [['text' => $buttonValues['pay_with_wallet'],  'callback_data' => \"payWithWallet$hash_id\"]];\n        if($botState['tronWallet'] == \"on\") $keyboard[] = [['text' => $buttonValues['tron_gateway'],  'callback_data' => \"payWithTronWallet\" . $hash_id]];\n        \n        if(!preg_match('/^discountSelectPlan/', $userInfo['step'])) $keyboard[] = [['text' => \" 🎁 نکنه کد تخفیف داری؟ \",  'callback_data' => \"haveDiscountSelectPlan_\" . $match[1] . \"_\" . $match[2] . \"_\" . $rowId]];\n\n    }\n\t$keyboard[] = [['text' => $buttonValues['back_to_main'], 'callback_data' => \"selectCategory{$call_id}_{$sid}_{$match['buyType']}\"]];\n    $priceC = ($price == 0) ? 'رایگان' : number_format($price).' تومان ';\n    if(isset($accountCount)){\n        $eachPrice = number_format($price / $accountCount) . \" تومان\";\n        $msg = str_replace(['ACCOUNT-COUNT', 'TOTAL-PRICE', 'PLAN-NAME', 'PRICE', 'DESCRIPTION'], [$accountCount, $priceC, $name, $eachPrice, $desc], $mainValues['buy_much_subscription_detail']);\n    }\n    else $msg = str_replace(['PLAN-NAME', 'PRICE', 'DESCRIPTION'], [$name, $priceC, $desc], $mainValues['buy_subscription_detail']);\n    sendMessage($msg, json_encode(['inline_keyboard'=>$keyboard]), \"HTML\");\n}\nif(preg_match('/payCustomWithWallet(.*)/',$data, $match)){\n    setUser();\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n\n    if($payInfo->num_rows == 0){\n        $text = \"/start\";\n        $data = \"\";\n        delMessage();\n        goto GOTOSTART;\n    }\n    $payInfo = $payInfo->fetch_assoc();\n    \n    if($payInfo['state'] == \"paid_with_wallet\") exit();\n\n    $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'paid_with_wallet' WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n    $uid = $from_id;\n    $fid = $payInfo['plan_id']; \n    $volume = $payInfo['volume'];\n    $days = $payInfo['day'];\n    \n    $acctxt = '';\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $file_detail = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $date = time();\n    $expire_microdate = floor(microtime(true) * 1000) + (864000 * $days * 100);\n    $expire_date = $date + (86400 * $days);\n    $type = $file_detail['type'];\n    $protocol = $file_detail['protocol'];\n    $price = $payInfo['price'];\n\n    if($userInfo['wallet'] < $price){\n        alert(\"موجودی حساب شما کم است\");\n        exit();\n    }\n    \n    \n    $server_id = $file_detail['server_id'];\n    $netType = $file_detail['type'];\n    $acount = $file_detail['acount'];\n    $inbound_id = $file_detail['inbound_id'];\n    $limitip = $file_detail['limitip'];\n    $rahgozar = $file_detail['rahgozar'];\n    $customPath = $file_detail['custom_path'];\n    $customPort = $file_detail['custom_port'];\n    $customSni = $file_detail['custom_sni'];\n\n\n    if($acount == 0 and $inbound_id != 0){\n        alert($mainValues['out_of_connection_capacity']);\n        exit;\n    }\n    if($inbound_id == 0) {\n        $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $server_info = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n\n        if($server_info['ucount'] <= 0) {\n            alert($mainValues['out_of_server_capacity']);\n            exit;\n        }\n    }\n\n    $uniqid = generateRandomString(42,$protocol); \n\n    $savedinfo = file_get_contents('settings/temp.txt');\n    $savedinfo = explode('-',$savedinfo);\n    $port = $savedinfo[0] + 1;\n    $last_num = $savedinfo[1] + 1;\n\n    $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $serverInfo = $stmt->get_result()->fetch_assoc();\n    $srv_remark = $serverInfo['remark'];\n    $stmt->close();\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $serverConfig = $stmt->get_result()->fetch_assoc();\n    $serverType = $serverConfig['type'];\n    $portType = $serverConfig['port_type'];\n    $panelUrl = $serverConfig['panel_url'];\n    $stmt->close();\n\n    // $rnd = rand(1111,99999);\n    // $remark = \"{$srv_remark}-{$from_id}-{$rnd}\";\n    $remark = $payInfo['description']; \n    \n    if($portType == \"auto\"){\n        file_put_contents('settings/temp.txt',$port.'-'.$last_num);\n    }else{\n        $port = rand(1111,65000);\n    }\n    \n    if($inbound_id == 0){    \n        if($serverType == \"marzban\"){\n            $response = addMarzbanUser($server_id, $remark, $volume, $days, $fid);\n            if(!$response->success){\n                if($response->msg == \"User already exists\"){\n                    $remark .= rand(1111,99999);\n                    $response = addMarzbanUser($server_id, $remark, $volume, $days, $fid);\n                }\n            }\n        }else{\n            $response = addUser($server_id, $uniqid, $protocol, $port, $expire_microdate, $remark, $volume, $netType, 'none', $rahgozar, $fid); \n            if(!$response->success){\n                if(strstr($response->msg, \"Duplicate email\")) $remark .= RandomString();\n                elseif(strstr($response->msg, \"Port already exists\")) $port = rand(1111,65000);\n                \n                $response = addUser($server_id, $uniqid, $protocol, $port, $expire_microdate, $remark, $volume, $netType, 'none', $rahgozar, $fid);\n            }\n        }\n    }else {\n        $response = addInboundAccount($server_id, $uniqid, $inbound_id, $expire_microdate, $remark, $volume, $limitip, null, $fid); \n        if(!$response->success){\n            if(strstr($response->msg, \"Duplicate email\")) $remark .= RandomString();\n\n            $response = addInboundAccount($server_id, $uniqid, $inbound_id, $expire_microdate, $remark, $volume, $limitip, null, $fid);\n        } \n    }\n    \n    if(is_null($response)){\n        alert('❌ | 🥺 گلم ، اتصال به سرور برقرار نیست لطفا مدیر رو در جریان بزار ...');\n        exit;\n    }\n\tif($response == \"inbound not Found\"){\n        alert(\"❌ | 🥺 سطر (inbound) با آیدی $inbound_id تو این سرور وجود نداره ، مدیر رو در جریان بزار ...\");\n\t\texit;\n\t}\n\tif(!$response->success){\n        alert('❌ | 😮 وای خطا داد لطفا سریع به مدیر بگو ...');\n        sendMessage(\"خطای سرور {$serverInfo['title']}:\\n\\n\" . ($response->msg), null, null, $admin);\n        exit;\n    }\n    alert($mainValues['sending_config_to_user']);\n    \n    $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` - ? WHERE `userid` = ?\");\n    $stmt->bind_param(\"ii\", $price, $uid);\n    $stmt->execute();\n    include 'phpqrcode/qrlib.php';\n    \n    if($serverType == \"marzban\"){\n        $uniqid = $token = str_replace(\"/sub/\", \"\", $response->sub_link);\n        $subLink = $botState['subLinkState'] == \"on\"?$panelUrl . $response->sub_link:\"\";\n        $vraylink = [$subLink];\n        $vray_link = json_encode($response->vray_links);\n    }\n    else{\n        $token = RandomString(30);\n        $subLink = $botState['subLinkState']==\"on\"?$botUrl . \"settings/subLink.php?token=\" . $token:\"\";\n    \n        $vraylink = getConnectionLink($server_id, $uniqid, $protocol, $remark, $port, $netType, $inbound_id, $rahgozar, $customPath, $customPort, $customSni);\n        $vray_link = json_encode($vraylink);\n    }\n    delMessage();\n    define('IMAGE_WIDTH',540);\n    define('IMAGE_HEIGHT',540);\n    foreach($vraylink as $link){\n        $acc_text = \"\n😍 سفارش جدید شما\n📡 پروتکل: $protocol\n🔮 نام سرویس: $remark\n🔋حجم سرویس: $volume گیگ\n⏰ مدت سرویس: $days روز⁮⁮ ⁮⁮\n\" . ($botState['configLinkState'] != \"off\" && $serverType != \"marzban\"?\"\n💝 config : <code>$link</code>\":\"\");\nif($botState['subLinkState'] == \"on\") $acc_text .= \"\n\n🔋 Volume web: <code> $botUrl\".\"search.php?id=\".$uniqid.\"</code>\n\n\n🌐 subscription : <code>$subLink</code>\"; \n    \n        $file = RandomString() .\".png\";\n        $ecc = 'L';\n        $pixel_Size = 11;\n        $frame_Size = 0;\n        \n        QRcode::png($link, $file, $ecc, $pixel_Size, $frame_Size);\n    \taddBorderImage($file);\n    \t\n        $backgroundImage = imagecreatefromjpeg(\"settings/QRCode.jpg\");\n        $qrImage = imagecreatefrompng($file);\n        \n        $qrSize = array('width' => imagesx($qrImage), 'height' => imagesy($qrImage));\n        imagecopy($backgroundImage, $qrImage, 300, 300 , 0, 0, $qrSize['width'], $qrSize['height']);\n        imagepng($backgroundImage, $file);\n        imagedestroy($backgroundImage);\n        imagedestroy($qrImage);\n\n    \tsendPhoto($botUrl . $file, $acc_text,json_encode(['inline_keyboard'=>[[['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]]]]),\"HTML\", $uid);\n        unlink($file);\n    }\n\n    \n    if($userInfo['refered_by'] != null){\n        $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'INVITE_BANNER_AMOUNT'\");\n        $stmt->execute();\n        $inviteAmount = $stmt->get_result()->fetch_assoc()['value']??0;\n        $stmt->close();\n        $inviterId = $userInfo['refered_by'];\n        \n        $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` + ? WHERE `userid` = ?\");\n        $stmt->bind_param(\"ii\", $inviteAmount, $inviterId);\n        $stmt->execute();\n        $stmt->close();\n         \n        sendMessage(\"تبریک یکی از زیر مجموعه های شما خرید انجام داد شما مبلغ \" . number_format($inviteAmount) . \" تومان جایزه دریافت کردید\",null,null,$inviterId);\n    }\n    \n    $agentBought = $payInfo['agent_bought'];\n\t$stmt = $connection->prepare(\"INSERT INTO `orders_list` \n\t    (`userid`, `token`, `transid`, `fileid`, `server_id`, `inbound_id`, `remark`, `uuid`, `protocol`, `expire_date`, `link`, `amount`, `status`, `date`, `notif`, `rahgozar`, `agent_bought`)\n\t    VALUES (?, ?, '', ?, ?, ?, ?, ?, ?, ?, ?, ?,1, ?, 0, ?, ?);\");\n    $stmt->bind_param(\"ssiiisssisiiii\", $uid, $token, $fid, $server_id, $inbound_id, $remark, $uniqid, $protocol, $expire_date, $vray_link, $price, $date, $rahgozar, $agentBought);\n    $stmt->execute();\n    $order = $stmt->get_result(); \n    $stmt->close();\n    \n    if($inbound_id == 0) {\n        $stmt = $connection->prepare(\"UPDATE `server_info` SET `ucount` = `ucount` - 1 WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $stmt->close();\n    }else{\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `acount` = `acount` - 1 WHERE id=?\");\n        $stmt->bind_param(\"i\", $fid);\n        $stmt->execute();\n        $stmt->close();\n    }\n\n    $keys = json_encode(['inline_keyboard'=>[\n        [\n            ['text'=>\"بنازم خرید جدید ❤️\",'callback_data'=>\"wizwizch\"]\n        ],\n        ]]);\n    $msg = str_replace(['TYPE', 'USER-ID', 'USERNAME', 'NAME', 'PRICE', 'REMARK', 'VOLUME', 'DAYS'],\n                ['کیف پول', $from_id, $username, $first_name, $price, $remark,$volume, $days], $mainValues['buy_custom_account_request']);\n    sendMessage($msg,$keys,\"html\", $admin);\n}\nif(preg_match('/^showQr(Sub|Config)(\\d+)/',$data,$match)){\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `userid`=? AND `id`=?\");\n    $stmt->bind_param(\"ii\", $from_id, $match[2]);\n    $stmt->execute();\n    $order = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    include 'phpqrcode/qrlib.php';\n    define('IMAGE_WIDTH',540);\n    define('IMAGE_HEIGHT',540);\n    if($match[1] == \"Sub\"){\n        $subLink = $botUrl . \"settings/subLink.php?token=\" . $order['token'];\n        $file = RandomString() .\".png\";\n        $ecc = 'L';\n        $pixel_Size = 11;\n        $frame_Size = 0;\n        \n        QRcode::png($subLink, $file, $ecc, $pixel_Size, $frame_Size);\n    \taddBorderImage($file);\n    \t\n    \t$backgroundImage = imagecreatefromjpeg(\"settings/QRCode.jpg\");\n        $qrImage = imagecreatefrompng($file);\n        \n        $qrSize = array('width' => imagesx($qrImage), 'height' => imagesy($qrImage));\n        imagecopy($backgroundImage, $qrImage, 300, 300 , 0, 0, $qrSize['width'], $qrSize['height']);\n        imagepng($backgroundImage, $file);\n        imagedestroy($backgroundImage);\n        imagedestroy($qrImage);\n\n    \tsendPhoto($botUrl . $file, $acc_text,json_encode(['inline_keyboard'=>[[['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]]]]),\"HTML\", $uid);\n        unlink($file);\n    }\n    elseif($match[1] == \"Config\"){\n\n        \n        \n        $vraylink = json_decode($order['link'],true);\n        define('IMAGE_WIDTH',540);\n        define('IMAGE_HEIGHT',540);\n        foreach($vraylink as $vray_link){\n            $file = RandomString() .\".png\";\n            $ecc = 'L';\n            $pixel_Size = 11;\n            $frame_Size = 0;\n            \n            QRcode::png($vray_link, $file, $ecc, $pixel_Size, $frame_Size);\n        \taddBorderImage($file);\n            \t\n        \t$backgroundImage = imagecreatefromjpeg(\"settings/QRCode.jpg\");\n            $qrImage = imagecreatefrompng($file);\n            \n            $qrSize = array('width' => imagesx($qrImage), 'height' => imagesy($qrImage));\n            imagecopy($backgroundImage, $qrImage, 300, 300 , 0, 0, $qrSize['width'], $qrSize['height']);\n            imagepng($backgroundImage, $file);\n            imagedestroy($backgroundImage);\n            imagedestroy($qrImage);\n            \n        \tsendPhoto($botUrl . $file, $acc_text,json_encode(['inline_keyboard'=>[[['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]]]]),\"HTML\", $uid);\n            unlink($file);\n        }\n    }\n}\nif(preg_match('/payCustomWithCartToCart(.*)/',$data, $match)) {\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n\n    if($payInfo->num_rows == 0){\n        $text = \"/start\";\n        $data = \"\";\n        delMessage();\n        goto GOTOSTART;\n    }\n    $payInfo = $payInfo->fetch_assoc();\n    \n    $fid = $payInfo['plan_id'];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $file_detail = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $server_id = $file_detail['server_id'];\n    $acount = $file_detail['acount'];\n    $inbound_id = $file_detail['inbound_id'];\n\n\n    if($acount == 0 and $inbound_id != 0){\n        alert($mainValues['out_of_connection_capacity']);\n        exit;\n    }\n    if($inbound_id == 0) {\n        $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $server_info = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n\n        if($server_info['ucount'] <= 0) {\n            alert($mainValues['out_of_server_capacity']);\n            exit;\n        }\n    }else{\n        if($acount != 0 && $acount <= 0){\n            sendMessage(str_replace(\"AMOUNT\", $acount, $mainValues['can_create_specific_account']));\n            exit();\n        }\n    }\n    \n    setUser($data);\n    delMessage();\n    sendMessage(str_replace([\"ACCOUNT-NUMBER\", \"HOLDER-NAME\"],[$paymentKeys['bankAccount'],$paymentKeys['holderName']], $mainValues['buy_account_cart_to_cart']),$cancelKey, \"HTML\");\n    exit;\n}\nif(preg_match('/payCustomWithCartToCart(.*)/',$userInfo['step'], $match) and $text != $buttonValues['cancel']){\n    if(isset($update->message->photo)){\n        $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n        $stmt->bind_param(\"s\", $match[1]);\n        $stmt->execute();\n        $payInfo = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        \n        $fid = $payInfo['plan_id'];\n        $volume = $payInfo['volume'];\n        $days = $payInfo['day'];\n        \n        setUser();\n        $uid = $userInfo['userid'];\n        $name = $userInfo['name'];\n        $username = $userInfo['username'];\n    \n        $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $fid);\n        $stmt->execute();\n        $res = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n    \n        $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $res['catid']);\n        $stmt->execute();\n        $catname = $stmt->get_result()->fetch_assoc()['title'];\n        $stmt->close();\n        $filename = $catname.\" \".$res['title']; \n        $fileprice = $payInfo['price'];\n        $remark = $payInfo['description'];\n        \n        sendMessage($mainValues['order_buy_sent'],$removeKeyboard);\n        sendMessage($mainValues['reached_main_menu'],getMainKeys());\n    \n        $msg = str_replace(['TYPE', 'USER-ID', 'USERNAME', 'NAME', 'PRICE', 'REMARK', 'VOLUME', 'DAYS'],\n                            [\"کارت به کارت\", $from_id, $username, $first_name, $fileprice, $remark,$volume, $days], $mainValues['buy_custom_account_request']);\n        $keyboard = json_encode([\n            'inline_keyboard' => [\n                [\n                    ['text' => $buttonValues['approve'], 'callback_data' => \"accCustom\" . $match[1]],\n                    ['text' => $buttonValues['decline'], 'callback_data' => \"decline$uid\"]\n                ]\n            ]\n        ]);\n        $res = sendPhoto($fileid, $msg,$keyboard, \"HTML\", $admin);\n        $msgId = $res->result->message_id;\n        \n        $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'have_sent', `message_id` = ?, `chat_id` = ? WHERE `hash_id` = ?\");\n        $stmt->bind_param(\"iis\", $msgId, $admin, $match[1]);\n        $stmt->execute();\n        $stmt->execute();\n    }else{\n        sendMessage($mainValues['please_send_only_image']);\n    }\n}\nif(preg_match('/accCustom(.*)/',$data, $match) and $text != $buttonValues['cancel']){\n    setUser();\n\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    if($payInfo['state'] == \"approved\") exit();\n\n    $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'approved' WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n    $fid = $payInfo['plan_id'];\n    $volume = $payInfo['volume'];\n    $days = $payInfo['day'];\n    $uid = $payInfo['user_id'];\n\n    $acctxt = '';\n    \n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $file_detail = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $date = time();\n    $expire_microdate = floor(microtime(true) * 1000) + (864000 * $days * 100);\n    $expire_date = $date + (86400 * $days);\n    $type = $file_detail['type'];\n    $protocol = $file_detail['protocol'];\n    $price = $payInfo['price'];\n    $server_id = $file_detail['server_id'];\n    $netType = $file_detail['type'];\n    $acount = $file_detail['acount'];\n    $inbound_id = $file_detail['inbound_id'];\n    $limitip = $file_detail['limitip'];\n    $rahgozar = $file_detail['rahgozar'];\n\n    if($acount == 0 and $inbound_id != 0){\n        alert($mainValues['out_of_connection_capacity']);\n        exit;\n    }\n    if($inbound_id == 0) {\n        $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $server_info = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n\n        if($server_info['ucount'] <= 0) {\n            alert($mainValues['out_of_server_capacity']);\n            exit;\n        }\n    }\n\n    $uniqid = generateRandomString(42,$protocol); \n\n    $savedinfo = file_get_contents('settings/temp.txt');\n    $savedinfo = explode('-',$savedinfo);\n    $port = $savedinfo[0] + 1;\n    $last_num = $savedinfo[1] + 1;\n\n    $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $serverInfo = $stmt->get_result()->fetch_assoc();\n    $srv_remark = $serverInfo['remark'];\n    $stmt->close();\n\n    $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $serverConfig = $stmt->get_result()->fetch_assoc();\n    $serverType = $serverConfig['type'];\n    $portType = $serverConfig['port_type'];\n    $panelUrl = $serverConfig['panel_url'];\n    $stmt->close();\n\n    // $rnd = rand(1111,99999);\n    // $remark = \"{$srv_remark}-{$uid}-{$rnd}\";\n    $remark = $payInfo['description'];\n    \n    if($portType == \"auto\"){\n        file_put_contents('settings/temp.txt',$port.'-'.$last_num);\n    }else{\n        $port = rand(1111,65000);\n    }\n    \n    if($inbound_id == 0){    \n        if($serverType == \"marzban\"){\n            $response = addMarzbanUser($server_id, $remark, $volume, $days, $fid);\n            if(!$response->success){\n                if($response->msg == \"User already exists\"){\n                    $remark .= rand(1111,99999);\n                    $response = addMarzbanUser($server_id, $remark, $volume, $days, $fid);\n                }\n            }\n        }else{\n            $response = addUser($server_id, $uniqid, $protocol, $port, $expire_microdate, $remark, $volume, $netType, 'none', $rahgozar, $fid); \n            if(!$response->success){\n                if(strstr($response->msg, \"Duplicate email\")) $remark .= RandomString();\n                elseif(strstr($response->msg, \"Port already exists\")) $port = rand(1111,65000);\n\n                $response = addUser($server_id, $uniqid, $protocol, $port, $expire_microdate, $remark, $volume, $netType, 'none', $rahgozar, $fid);\n            }\n        }\n    }else {\n        $response = addInboundAccount($server_id, $uniqid, $inbound_id, $expire_microdate, $remark, $volume, $limitip, null, $fid); \n        if(!$response->success){\n            if(strstr($response->msg, \"Duplicate email\")) $remark .= RandomString();\n\n            $response = addInboundAccount($server_id, $uniqid, $inbound_id, $expire_microdate, $remark, $volume, $limitip, null, $fid);\n        } \n    }\n    \n    if(is_null($response)){\n        alert('❌ | 🥺 گلم ، اتصال به سرور برقرار نیست لطفا مدیر رو در جریان بزار ...');\n        exit;\n    }\n\tif($response == \"inbound not Found\"){\n        alert(\"❌ | 🥺 سطر (inbound) با آیدی $inbound_id تو این سرور وجود نداره ، مدیر رو در جریان بزار ...\");\n\t\texit;\n\t}\n\tif(!$response->success){\n        alert('❌ | 😮 وای خطا داد لطفا سریع به مدیر بگو ...');\n        sendMessage(\"خطای سرور {$serverInfo['title']}:\\n\\n\" . ($response->msg), null, null, $admin);\n        exit;\n    }\n    alert($mainValues['sending_config_to_user']);\n    \n    include 'phpqrcode/qrlib.php';\n    \n    if($serverType == \"marzban\"){\n        $uniqid = $token = str_replace(\"/sub/\", \"\", $response->sub_link);\n        $subLink = $botState['subLinkState'] == \"on\"?$panelUrl . $response->sub_link:\"\";\n        $vraylink = [$subLink];\n        $vray_link= json_encode($response->vray_links);\n    }\n    else{\n        $token = RandomString(30);\n        $subLink = $botState['subLinkState']==\"on\"?$botUrl . \"settings/subLink.php?token=\" . $token:\"\";\n    \n        $vraylink = getConnectionLink($server_id, $uniqid, $protocol, $remark, $port, $netType, $inbound_id);\n        $vray_link= json_encode($vraylink);\n    }\n    define('IMAGE_WIDTH',540);\n    define('IMAGE_HEIGHT',540);\n\n    foreach($vraylink as $vray_link){\n        $acc_text = \"\n😍 سفارش جدید شما\n📡 پروتکل: $protocol\n🔮 نام سرویس: $remark\n🔋حجم سرویس: $volume گیگ\n⏰ مدت سرویس: $days روز⁮⁮ ⁮⁮\n\" . ($botState['configLinkState'] != \"off\" && $serverType != \"marzban\"?\"\n💝 config : <code>$vray_link</code>\":\"\");\nif($botState['subLinkState'] == \"on\") $acc_text .= \"\n\n🔋 Volume web: <code> $botUrl\".\"search.php?id=\".$uniqid.\"</code>\n\n\\n🌐 subscription : <code>$subLink</code>\";\n    \n        $file = RandomString() .\".png\";\n        $ecc = 'L';\n        $pixel_Size = 11;\n        $frame_Size = 0;\n    \n        QRcode::png($vray_link, $file, $ecc, $pixel_Size, $frame_Size);\n    \taddBorderImage($file);\n    \t\n    \t$backgroundImage = imagecreatefromjpeg(\"settings/QRCode.jpg\");\n        $qrImage = imagecreatefrompng($file);\n        \n        $qrSize = array('width' => imagesx($qrImage), 'height' => imagesy($qrImage));\n        imagecopy($backgroundImage, $qrImage, 300, 300 , 0, 0, $qrSize['width'], $qrSize['height']);\n        imagepng($backgroundImage, $file);\n        imagedestroy($backgroundImage);\n        imagedestroy($qrImage);\n\n    \tsendPhoto($botUrl . $file, $acc_text,json_encode(['inline_keyboard'=>[[['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]]]]),\"HTML\", $uid);\n        unlink($file);\n    }\n    sendMessage('✅ کانفیگ و براش ارسال کردم', getMainKeys());\n    \n    $agentBought = $payInfo['agent_bought'];\n\t$stmt = $connection->prepare(\"INSERT INTO `orders_list` \n\t    (`userid`, `token`, `transid`, `fileid`, `server_id`, `inbound_id`, `remark`, `uuid`, `protocol`, `expire_date`, `link`, `amount`, `status`, `date`, `notif`, `rahgozar`, `agent_bought`)\n\t    VALUES (?, ?, '', ?, ?, ?, ?, ?, ?, ?, ?, ?,1, ?, 0, ?, ?);\");\n    $stmt->bind_param(\"ssiiisssisiiii\", $uid, $token, $fid, $server_id, $inbound_id, $remark, $uniqid, $protocol, $expire_date, $vray_link, $price, $date, $rahgozar, $agentBought);\n    $stmt->execute();\n    $order = $stmt->get_result();\n    $stmt->close();\n\n\n    unset($markup[count($markup)-1]);\n    $markup[] = [['text'=>\"✅\",'callback_data'=>\"wizwizch\"]];\n    $keys = json_encode(['inline_keyboard'=>array_values($markup)],488);\n\n\n    editKeys($keys);\n    \n    $filename = $file_detail['title'];\n    $fileprice = number_format($file_detail['price']);\n    $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid`=?\");\n    $stmt->bind_param(\"i\", $uid);\n    $stmt->execute();\n    $user_detail= $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n\n    if($user_detail['refered_by'] != null){\n        $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'INVITE_BANNER_AMOUNT'\");\n        $stmt->execute();\n        $inviteAmount = $stmt->get_result()->fetch_assoc()['value']??0;\n        $stmt->close();\n        $inviterId = $user_detail['refered_by'];\n        \n        $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` + ? WHERE `userid` = ?\");\n        $stmt->bind_param(\"ii\", $inviteAmount, $inviterId);\n        $stmt->execute();\n        $stmt->close();\n         \n        sendMessage(\"تبریک یکی از زیر مجموعه های شما خرید انجام داد شما مبلغ \" . number_format($inviteAmount) . \" تومان جایزه دریافت کردید\",null,null,$inviterId);\n    }\n\n    if($inbound_id == 0) {\n        $stmt = $connection->prepare(\"UPDATE `server_info` SET `ucount` = `ucount` - 1 WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $stmt->close();\n    }else{\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `acount` = `acount` - 1 WHERE id=?\");\n        $stmt->bind_param(\"i\", $fid);\n        $stmt->execute();\n        $stmt->close();\n    }\n\n    $uname = $user_detail['name'];\n    $user_name = $user_detail['username'];\n    \n    if($admin != $from_id){ \n        $keys = json_encode(['inline_keyboard'=>[\n            [\n                ['text'=>\"به به 🛍\",'callback_data'=>\"wizwizch\"]\n            ],\n            ]]);\n        $msg = str_replace(['USER-ID', 'USERNAME', 'NAME', 'PRICE', 'REMARK', 'FILENAME'],\n            [$uid, $user_name, $uname, $price, $remark,$filename], $mainValues['invite_buy_new_account']);\n        sendMessage($msg,null,null,$admin);\n    }\n    \n}\nif(preg_match('/payWithWallet(.*)/',$data, $match)){\n    setUser();\n\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n\n    if($payInfo->num_rows == 0){\n        $text = \"/start\";\n        $data = \"\";\n        delMessage();\n        goto GOTOSTART;\n    }\n    $payInfo = $payInfo->fetch_assoc();\n    \n    $uid = $from_id;\n    $fid = $payInfo['plan_id'];\n    $acctxt = '';\n    \n    if($payInfo['state'] == \"paid_with_wallet\") exit();\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $file_detail = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $days = $file_detail['days'];\n    $date = time();\n    $expire_microdate = floor(microtime(true) * 1000) + (864000 * $days * 100);\n    $expire_date = $date + (86400 * $days);\n    $type = $file_detail['type'];\n    $volume = $file_detail['volume'];\n    $protocol = $file_detail['protocol'];\n    $rahgozar = $file_detail['rahgozar'];\n    $customPath = $file_detail['custom_path'];\n    $price = $payInfo['price'];\n    $customPort = $file_detail['custom_port'];\n    $customSni = $file_detail['custom_sni'];\n    \n    if($userInfo['wallet'] < $price){\n        alert(\"موجودی حساب شما کم است\");\n        exit();\n    }\n\n    $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'paid_with_wallet' WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n    \n    \n    $server_id = $file_detail['server_id'];\n    $netType = $file_detail['type'];\n    $acount = $file_detail['acount'];\n    $inbound_id = $file_detail['inbound_id'];\n    $limitip = $file_detail['limitip'];\n\n\n    if($payInfo['type'] == \"RENEW_SCONFIG\"){\n        $configInfo = json_decode($payInfo['description'],true);\n        $uuid = $configInfo['uuid'];\n        $remark = $configInfo['remark'];\n        $isMarzban = $configInfo['marzban'];\n        \n        $inbound_id = $payInfo['volume']; \n        \n        if($isMarzban){\n            $response = editMarzbanConfig($server_id, ['remark'=>$remark, 'days'=>$days, 'volume' => $volume]);\n        }else{\n            if($inbound_id > 0)\n                $response = editClientTraffic($server_id, $inbound_id, $uuid, $volume, $days, \"renew\");\n            else\n                $response = editInboundTraffic($server_id, $uuid, $volume, $days, \"renew\");\n        }\n        \n    \tif(is_null($response)){\n    \t\talert('🔻مشکل فنی در اتصال به سرور. لطفا به مدیریت اطلاع بدید',true);\n    \t\texit;\n    \t}\n    \t$stmt = $connection->prepare(\"INSERT INTO `increase_order` VALUES (NULL, ?, ?, ?, ?, ?, ?);\");\n    \t$stmt->bind_param(\"iiisii\", $uid, $server_id, $inbound_id, $remark, $price, $time);\n    \t$stmt->execute();\n    \t$stmt->close();\n        $keys = json_encode(['inline_keyboard'=>[\n            [\n                ['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]\n            ],\n            ]]);\n        editText($message_id,\"✅سرویس $remark با موفقیت تمدید شد\",$keys);\n    }else{\n        $accountCount = $payInfo['agent_count']!=0?$payInfo['agent_count']:1;\n        \n        if($acount == 0 and $inbound_id != 0){\n            alert($mainValues['out_of_connection_capacity']);\n            exit;\n        }\n        if($inbound_id == 0) {\n            $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n            $stmt->bind_param(\"i\", $server_id);\n            $stmt->execute();\n            $server_info = $stmt->get_result()->fetch_assoc();\n            $stmt->close();\n    \n            if($server_info['ucount'] <= 0) {\n                alert($mainValues['out_of_server_capacity']);\n                exit;\n            }\n        }        \n    \n        $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $serverInfo = $stmt->get_result()->fetch_assoc();\n        $srv_remark = $serverInfo['remark'];\n        $serverTitle = $serverInfo['title'];\n        $stmt->close();\n    \n        $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $serverConfig = $stmt->get_result()->fetch_assoc();\n        $portType = $serverConfig['port_type'];\n        $serverType = $serverConfig['type'];\n        $panelUrl = $serverConfig['panel_url'];\n        $stmt->close();\n\n        include 'phpqrcode/qrlib.php';\n        $msg = $message_id;\n\n        $agent_bought = $payInfo['agent_bought'];\n\t    $eachPrice = $price / $accountCount;\n\n        alert($mainValues['sending_config_to_user']);\n        define('IMAGE_WIDTH',540);\n        define('IMAGE_HEIGHT',540);\n        for($i = 1; $i <= $accountCount; $i++){\n            $uniqid = generateRandomString(42,$protocol); \n        \n            $savedinfo = file_get_contents('settings/temp.txt');\n            $savedinfo = explode('-',$savedinfo);\n            $port = $savedinfo[0] + 1;\n            $last_num = $savedinfo[1] + 1;\n        \n        \n            if($botState['remark'] == \"digits\"){\n                $rnd = rand(10000,99999);\n                $remark = \"{$srv_remark}-{$rnd}\";\n            }\n            elseif($botState['remark'] == \"manual\"){\n                $remark = $payInfo['description'];\n            }\n            else{\n                $rnd = rand(1111,99999);\n                $remark = \"{$srv_remark}-{$from_id}-{$rnd}\";\n            }\n        \n            if($portType == \"auto\"){\n                file_put_contents('settings/temp.txt',$port.'-'.$last_num);\n            }else{\n                $port = rand(1111,65000);\n            }\n        \n            if($inbound_id == 0){    \n                if($serverType == \"marzban\"){\n                    $response = addMarzbanUser($server_id, $remark, $volume, $days, $fid);\n                    if(!$response->success){\n                        if($response->msg == \"User already exists\"){\n                            $remark .= rand(1111,99999);\n                            $response = addMarzbanUser($server_id, $remark, $volume, $days, $fid);\n                        }\n                    }\n                }\n                else{\n                    $response = addUser($server_id, $uniqid, $protocol, $port, $expire_microdate, $remark, $volume, $netType, 'none', $rahgozar, $fid); \n                    if(!$response->success){\n                        if(strstr($response->msg, \"Duplicate email\")) $remark .= RandomString();\n                        elseif(strstr($response->msg, \"Port already exists\")) $port = rand(1111,65000);\n\n                        $response = addUser($server_id, $uniqid, $protocol, $port, $expire_microdate, $remark, $volume, $netType, 'none', $rahgozar, $fid);\n                    }\n                }\n            }else {\n                $response = addInboundAccount($server_id, $uniqid, $inbound_id, $expire_microdate, $remark, $volume, $limitip, null, $fid); \n                if(!$response->success){\n                    if(strstr($response->msg, \"Duplicate email\")) $remark .= RandomString();\n\n                    $response = addInboundAccount($server_id, $uniqid, $inbound_id, $expire_microdate, $remark, $volume, $limitip, null, $fid);\n                } \n            }\n            if(is_null($response)){\n                sendMessage('❌ | 🥺 گلم ، اتصال به سرور برقرار نیست لطفا مدیر رو در جریان بزار ...');\n                exit;\n            }\n        \tif($response == \"inbound not Found\"){\n                sendMessage(\"❌ | 🥺 سطر (inbound) با آیدی $inbound_id تو این سرور وجود نداره ، مدیر رو در جریان بزار ...\");\n        \t\texit;\n        \t}\n        \tif(!$response->success){\n                sendMessage('❌ | 😮 وای خطا داد لطفا سریع به مدیر بگو ...');\n                sendMessage(\"خطای سرور {$serverInfo['title']}:\\n\\n\" . ($response->msg), null, null, $admin);\n                exit;\n            }\n        \n        \n            if($serverType == \"marzban\"){\n                $uniqid = $token = str_replace(\"/sub/\", \"\", $response->sub_link);\n                $subLink = $botState['subLinkState'] == \"on\"?$panelUrl . $response->sub_link:\"\";\n                $vraylink = [$subLink];\n                $vray_link= json_encode($response->vray_links);\n            }\n            else{\n                $token = RandomString(30);\n                $vraylink = getConnectionLink($server_id, $uniqid, $protocol, $remark, $port, $netType, $inbound_id, $rahgozar, $customPath, $customPort, $customSni);\n                $vray_link= json_encode($vraylink);\n                $subLink = $botState['subLinkState']==\"on\"?$botUrl . \"settings/subLink.php?token=\" . $token:\"\";\n            }\n\n            foreach($vraylink as $link){\n                $acc_text = \"\n😍 سفارش جدید شما\n📡 پروتکل: $protocol\n🔮 نام سرویس: $remark\n🔋حجم سرویس: $volume گیگ\n⏰ مدت سرویس: $days روز⁮⁮ ⁮⁮\n\" . ($botState['configLinkState'] != \"off\" && $serverType != \"marzban\"?\"\n💝 config : <code>$link</code>\":\"\");\nif($botState['subLinkState'] == \"on\") $acc_text .= \"\n\n🔋 Volume web: <code> $botUrl\".\"search.php?id=\".$uniqid.\"</code>\n\n\\n🌐 subscription : <code>$subLink</code>\";\n            \n                $file = RandomString() .\".png\";\n                $ecc = 'L';\n                $pixel_Size = 11;\n                $frame_Size = 0;\n                \n                QRcode::png($link, $file, $ecc, $pixel_Size, $frame_Size);\n            \taddBorderImage($file);\n            \t\n\t        \t$backgroundImage = imagecreatefromjpeg(\"settings/QRCode.jpg\");\n                $qrImage = imagecreatefrompng($file);\n                \n                $qrSize = array('width' => imagesx($qrImage), 'height' => imagesy($qrImage));\n                imagecopy($backgroundImage, $qrImage, 300, 300 , 0, 0, $qrSize['width'], $qrSize['height']);\n                imagepng($backgroundImage, $file);\n                imagedestroy($backgroundImage);\n                imagedestroy($qrImage);\n\n            \tsendPhoto($botUrl . $file, $acc_text,json_encode(['inline_keyboard'=>[[['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]]]]),\"HTML\", $uid);\n                unlink($file);\n            }\n            \n        \t$stmt = $connection->prepare(\"INSERT INTO `orders_list` \n        \t    (`userid`, `token`, `transid`, `fileid`, `server_id`, `inbound_id`, `remark`, `uuid`, `protocol`, `expire_date`, `link`, `amount`, `status`, `date`, `notif`, `rahgozar`, `agent_bought`)\n        \t    VALUES (?, ?, '', ?, ?, ?, ?, ?, ?, ?, ?, ?,1, ?, 0, ?, ?);\");\n            $stmt->bind_param(\"ssiiisssisiiii\", $uid, $token, $fid, $server_id, $inbound_id, $remark, $uniqid, $protocol, $expire_date, $vray_link, $eachPrice, $date, $rahgozar, $agent_bought);\n            $stmt->execute();\n            $order = $stmt->get_result(); \n            $stmt->close();\n        }\n    \n        delMessage($msg);\n        if($userInfo['refered_by'] != null){\n            $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'INVITE_BANNER_AMOUNT'\");\n            $stmt->execute();\n            $inviteAmount = $stmt->get_result()->fetch_assoc()['value']??0;\n            $stmt->close();\n            $inviterId = $userInfo['refered_by'];\n            \n            $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` + ? WHERE `userid` = ?\");\n            $stmt->bind_param(\"ii\", $inviteAmount, $inviterId);\n            $stmt->execute();\n            $stmt->close();\n             \n            sendMessage(\"تبریک یکی از زیر مجموعه های شما خرید انجام داد شما مبلغ \" . number_format($inviteAmount) . \" تومان جایزه دریافت کردید\",null,null,$inviterId);\n        }\n        if($inbound_id == 0) {\n            $stmt = $connection->prepare(\"UPDATE `server_info` SET `ucount` = `ucount` - ? WHERE `id`=?\");\n            $stmt->bind_param(\"ii\", $accountCount, $server_id);\n            $stmt->execute();\n            $stmt->close();\n        }else{\n            $stmt = $connection->prepare(\"UPDATE `server_plans` SET `acount` = `acount` - ? WHERE id=?\");\n            $stmt->bind_param(\"ii\", $accountCount, $fid);\n            $stmt->execute();\n            $stmt->close();\n        }\n    }\n    $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` - ? WHERE `userid` = ?\");\n    $stmt->bind_param(\"ii\", $price, $uid);\n    $stmt->execute();\n    $stmt->close();\n    \n    $keys = json_encode(['inline_keyboard'=>[\n        [\n            ['text'=>\"بنازم خرید جدید ❤️\",'callback_data'=>\"wizwizch\"]\n        ],\n        ]]);\n    if($payInfo['type'] == \"RENEW_SCONFIG\"){$msg = str_replace(['TYPE', 'USER-ID', 'USERNAME', 'NAME', 'PRICE', 'REMARK', 'VOLUME', 'DAYS'],\n                ['کیف پول', $from_id, $username, $first_name, $price, $remark,$volume, $days], $mainValues['renew_account_request_message']);}\n    else{$msg = str_replace(['SERVERNAME', 'TYPE', 'USER-ID', 'USERNAME', 'NAME', 'PRICE', 'REMARK', 'VOLUME', 'DAYS'],\n                [$serverTitle, 'کیف پول', $from_id, $username, $first_name, $price, $remark,$volume, $days], $mainValues['buy_new_account_request']);}\n\n    sendMessage($msg,$keys,\"html\", $admin);\n}\nif(preg_match('/payWithCartToCart(.*)/',$data,$match)) {\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n\n    if($payInfo->num_rows == 0){\n        $text = \"/start\";\n        $data = \"\";\n        delMessage();\n        goto GOTOSTART;\n    }\n    $payInfo = $payInfo->fetch_assoc();\n    \n    $fid = $payInfo['plan_id'];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $file_detail = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $server_id = $file_detail['server_id'];\n    $acount = $file_detail['acount'];\n    $inbound_id = $file_detail['inbound_id'];\n\n    if($payInfo['type'] != \"RENEW_SCONFIG\"){\n        if($acount == 0 and $inbound_id != 0){\n            alert($mainValues['out_of_connection_capacity']);\n            exit;\n        }\n        if($inbound_id == 0) {\n            $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n            $stmt->bind_param(\"i\", $server_id);\n            $stmt->execute();\n            $server_info = $stmt->get_result()->fetch_assoc();\n            $stmt->close();\n    \n            if($server_info['ucount'] <= 0) {\n                alert($mainValues['out_of_server_capacity']);\n                exit;\n            }\n        }else{\n            if($acount <= 0){\n                alert(str_replace(\"AMOUNT\", $acount, $mainValues['can_create_specific_account']));\n                exit();\n            }\n        }\n    }\n    \n    setUser($data);\n    delMessage();\n    sendMessage(str_replace([\"ACCOUNT-NUMBER\", \"HOLDER-NAME\"],[$paymentKeys['bankAccount'],$paymentKeys['holderName']], $mainValues['buy_account_cart_to_cart']),$cancelKey, \"HTML\");\n    exit;\n}\nif(preg_match('/payWithCartToCart(.*)/',$userInfo['step'], $match) and $text != $buttonValues['cancel']){\n    if(isset($update->message->photo)){\n        $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n        $stmt->bind_param(\"s\", $match[1]);\n        $stmt->execute();\n        $payInfo = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        \n        \n        $fid = $payInfo['plan_id'];\n        setUser();\n        $uid = $userInfo['userid'];\n        $name = $userInfo['name'];\n        $username = $userInfo['username'];\n    \n        $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $fid);\n        $stmt->execute();\n        $res = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        $days = $res['days'];\n        $volume = $res['volume'];\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $res['server_id']);\n        $stmt->execute();\n        $serverInfo = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        $serverTitle = $serverInfo['title'];\n    \n        if($payInfo['type'] == \"RENEW_SCONFIG\"){\n            $configInfo = json_decode($payInfo['description'],true);\n            $filename = $configInfo['remark'];\n        }else{\n            $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `id`=?\");\n            $stmt->bind_param(\"i\", $res['catid']);\n            $stmt->execute();\n            $catname = $stmt->get_result()->fetch_assoc()['title'];\n            $stmt->close();\n            $filename = $catname.\" \".$res['title']; \n        }\n        $fileprice = $payInfo['price'];\n    \n        sendMessage($mainValues['order_buy_sent'],$removeKeyboard);\n        sendMessage($mainValues['reached_main_menu'],getMainKeys());\n    \n        if($payInfo['agent_count'] != 0) $msg = str_replace(['ACCOUNT-COUNT', 'TYPE', 'USER-ID', \"USERNAME\", \"NAME\", \"PRICE\", \"REMARK\"],[$payInfo['agent_count'], 'کارت به کارت', $from_id, $username, $name, $fileprice, $filename], $mainValues['buy_new_much_account_request']);\n        else $msg = str_replace(['SERVERNAME', 'TYPE', 'USER-ID', \"USERNAME\", \"NAME\", \"PRICE\", \"REMARK\", \"VOLUME\", \"DAYS\"],[$serverTitle, 'کارت به کارت', $from_id, $username, $name, $fileprice, $filename, $volume, $days], $mainValues['buy_new_account_request']);\n\n        $keyboard = json_encode([\n            'inline_keyboard' => [\n                [\n                    ['text' => $buttonValues['approve'], 'callback_data' => \"accept\" . $match[1] ],\n                    ['text' => $buttonValues['decline'], 'callback_data' => \"decline$uid\"]\n                ]\n            ]\n        ]);\n        setUser('', 'temp');\n        $res = sendPhoto($fileid, $msg,$keyboard, \"HTML\", $admin);\n        $msgId = $res->result->message_id;\n        \n        $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'have_sent', `message_id` = ?, `chat_id` = ? WHERE `hash_id` = ?\");\n        $stmt->bind_param(\"iis\", $msgId, $admin, $match[1]);\n        $stmt->execute();\n        $stmt->close();\n    }else{\n        sendMessage($mainValues['please_send_only_image']);\n    }\n}\nif($data==\"availableServers\"){\n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `acount` != 0 AND `inbound_id` != 0\");\n    $stmt->execute();\n    $serversList = $stmt->get_result();\n    $stmt->close();\n\n    $keys = array();\n    $keys[] = [\n        ['text'=>\"تعداد باقیمانده\",'callback_data'=>\"wizwizch\"],\n        ['text'=>\"پلن\",'callback_data'=>\"wizwizch\"],\n        ['text'=>'سرور','callback_data'=>\"wizwizch\"]\n        ];\n    while($file_detail = $serversList->fetch_assoc()){\n        $days = $file_detail['days'];\n        $title = $file_detail['title'];\n        $server_id = $file_detail['server_id'];\n        $acount = $file_detail['acount'];\n        $inbound_id = $file_detail['inbound_id'];\n        $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $name = $stmt->get_result();\n        $stmt->close();\n\n        if($name->num_rows>0){\n            $name = $name->fetch_assoc()['title'];\n            \n            $keys[] = [\n                ['text'=>$acount . \" اکانت\",'callback_data'=>\"wizwizch\"],\n                ['text'=>$title??\" \",'callback_data'=>\"wizwizch\"],\n                ['text'=>$name??\" \",'callback_data'=>\"wizwizch\"]\n                ];\n        }\n    }\n    $keys[] = [['text'=>$buttonValues['back_button'],'callback_data'=>\"mainMenu\"]];\n    $keys = json_encode(['inline_keyboard'=>$keys]);\n    editText($message_id, \"🟢 | موجودی پلن اشتراکی:\", $keys);\n}\nif($data==\"availableServers2\"){\n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `inbound_id` = 0\");\n    $stmt->execute();\n    $serversList = $stmt->get_result();\n    $stmt->close();\n\n    $keys = array();\n    $keys[] = [\n        ['text'=>\"تعداد باقیمانده\",'callback_data'=>\"wizwizch\"],\n        ['text'=>'سرور','callback_data'=>\"wizwizch\"]\n        ];\n    while($file_detail2 = $serversList->fetch_assoc()){\n        $days2 = $file_detail2['days'];\n        $title2 = $file_detail2['title'];\n        $server_id2 = $file_detail2['server_id'];\n        $inbound_id2 = $file_detail2['inbound_id'];\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $server_id2);\n        $stmt->execute();\n        $name = $stmt->get_result();\n        $stmt->close();\n\n        if($name->num_rows>0){\n            $sInfo = $name->fetch_assoc();\n            $name = $sInfo['title'];\n            $acount2 = $sInfo['ucount'];\n            \n            $keys[] = [\n                ['text'=>$acount2 . \" اکانت\",'callback_data'=>\"wizwizch\"],\n                ['text'=>$title2??\" \",'callback_data'=>\"wizwizch\"],\n                ];\n        }\n    }\n    $keys[] = [['text'=>$buttonValues['back_button'],'callback_data'=>\"mainMenu\"]];\n    $keys = json_encode(['inline_keyboard'=>$keys]);\n    editText($message_id, \"🟢 | موجودی پلن اختصاصی:\", $keys);\n}\nif($data==\"agencySettings\" && $userInfo['is_agent'] == 1){\n    editText($message_id, $mainValues['agent_setting_message'] ,getAgentKeys());\n}\nif($data==\"requestAgency\"){\n    if($userInfo['is_agent'] == 2){\n        alert($mainValues['agency_request_already_sent']);\n    }elseif($userInfo['is_agent'] == 0){\n        $msg = str_replace([\"USERNAME\", \"NAME\", \"USERID\"], [$username, $first_name, $from_id], $mainValues['request_agency_message']);\n        sendMessage($msg, json_encode(['inline_keyboard'=>[\n            [\n                ['text' => $buttonValues['approve'], 'callback_data' => \"agencyApprove\" . $from_id ],\n                ['text' => $buttonValues['decline'], 'callback_data' => \"agencyDecline\" . $from_id]\n            ]\n            ]]), null, $admin);\n        setUser(2, 'is_agent');\n        alert($mainValues['agency_request_sent']);\n    }elseif($userInfo['is_agent'] == -1) alert($mainValues['agency_request_declined']);\n    elseif($userInfo['is_agent'] == 1) editText($message_id,\"لطفا یکی از کلید های زیر را انتخاب کنید\",getMainKeys());\n}\nif(preg_match('/^agencyDecline(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    editKeys(json_encode(['inline_keyboard'=>[\n        [['text'=>$buttonValues['declined'],'callback_data'=>\"wizwizch\"]]\n        ]]));\n    sendMessage($mainValues['agency_request_declined'], null,null,$match[1]);\n    setUser(-1, 'is_agent', $match[1]);\n}\nif(preg_match('/^agencyApprove(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    setUser($data . \"_\" . $message_id);\n    sendMessage($mainValues['send_agent_discount_percent'], $cancelKey);\n}\nif(preg_match('/^agencyApprove(\\d+)_(\\d+)/',$userInfo['step'],$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(is_numeric($text)){\n        editKeys(json_encode(['inline_keyboard'=>[\n            [['text'=>$buttonValues['approved'],'callback_data'=>\"wizwizch\"]]\n            ]]), $match[2]);\n        sendMessage($mainValues['saved_successfuly']);\n        setUser();\n        $discount = json_encode(['normal'=>$text]);\n        $stmt = $connection->prepare(\"UPDATE `users` SET `is_agent` = 1, `discount_percent` = ?, `agent_date` = ? WHERE `userid` = ?\");\n        $stmt->bind_param(\"sii\", $discount, $time, $match[1]);\n        $stmt->execute();\n        $stmt->close();\n        sendMessage($mainValues['agency_request_approved'], null,null,$match[1]);\n    }else sendMessage($mainValues['send_only_number']);\n}\nif(preg_match('/accept(.*)/',$data, $match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    setUser();\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    if($payInfo['state'] == \"approved\") exit();\n\n    $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'approved' WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n    $uid = $payInfo['user_id'];\n    $fid = $payInfo['plan_id'];\n    $acctxt = '';\n    \n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $file_detail = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $days = $file_detail['days'];\n    $date = time();\n    $expire_microdate = floor(microtime(true) * 1000) + (864000 * $days * 100);\n    $expire_date = $date + (86400 * $days);\n    $type = $file_detail['type'];\n    $volume = $file_detail['volume'];\n    $protocol = $file_detail['protocol'];\n    $price = $payInfo['price'];\n    $server_id = $file_detail['server_id'];\n    $netType = $file_detail['type'];\n    $acount = $file_detail['acount'];\n    $inbound_id = $file_detail['inbound_id'];\n    $limitip = $file_detail['limitip'];\n    $rahgozar = $file_detail['rahgozar'];\n    $customPath = $file_detail['custom_path'];\n    $customPort = $file_detail['custom_port'];\n    $customSni = $file_detail['custom_sni'];\n\n    \n    if($payInfo['type'] == \"RENEW_SCONFIG\"){\n        $configInfo = json_decode($payInfo['description'],true);\n        $uuid = $configInfo['uuid'];\n        $remark = $configInfo['remark'];\n        $isMarzban = $configInfo['marzban'];\n        \n        $inbound_id = $payInfo['volume']; \n        \n        if($isMarzban){\n            $response = editMarzbanConfig($server_id, ['remark'=>$remark, 'days'=>$days, 'volume' => $volume]);\n        }else{\n            if($inbound_id > 0)\n                $response = editClientTraffic($server_id, $inbound_id, $uuid, $volume, $days, \"renew\");\n            else\n                $response = editInboundTraffic($server_id, $uuid, $volume, $days, \"renew\");\n        }\n        \n    \tif(is_null($response)){\n    \t\talert('🔻مشکل فنی در اتصال به سرور. لطفا به مدیریت اطلاع بدید',true);\n    \t\texit;\n    \t}\n    \t$stmt = $connection->prepare(\"INSERT INTO `increase_order` VALUES (NULL, ?, ?, ?, ?, ?, ?);\");\n    \t$stmt->bind_param(\"iiisii\", $uid, $server_id, $inbound_id, $remark, $price, $time);\n    \t$stmt->execute();\n    \t$stmt->close();\n        sendMessage(str_replace([\"REMARK\", \"VOLUME\", \"DAYS\"],[$remark, $volume, $days], $mainValues['renewed_config_to_user']), getMainKeys(),null,null);\n        sendMessage(\"✅سرویس $remark با موفقیت تمدید شد\",null,null,$uid);\n    }else{\n        $accountCount = $payInfo['agent_count'] != 0? $payInfo['agent_count']:1;\n        $eachPrice = $price / $accountCount;\n        \n        if($acount == 0 and $inbound_id != 0){\n            alert($mainValues['out_of_connection_capacity']);\n            exit;\n        }\n        if($inbound_id == 0) {\n            $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n            $stmt->bind_param(\"i\", $server_id);\n            $stmt->execute();\n            $server_info = $stmt->get_result()->fetch_assoc();\n            $stmt->close();\n    \n            if($server_info['ucount'] <= 0){\n                alert($mainValues['out_of_server_capacity']);\n                exit;\n            }\n        }\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $serverInfo = $stmt->get_result()->fetch_assoc();\n        $srv_remark = $serverInfo['remark'];\n        $stmt->close();\n    \n        $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $serverConfig = $stmt->get_result()->fetch_assoc();\n        $serverType = $serverConfig['type'];\n        $portType = $serverConfig['port_type'];\n        $panelUrl = $serverConfig['panel_url'];\n        $stmt->close();\n    \n    \n        alert($mainValues['sending_config_to_user']);\n        include 'phpqrcode/qrlib.php';\n        define('IMAGE_WIDTH',540);\n        define('IMAGE_HEIGHT',540);\n        for($i = 1; $i <= $accountCount; $i++){\n            $uniqid = generateRandomString(42,$protocol); \n        \n            $savedinfo = file_get_contents('settings/temp.txt');\n            $savedinfo = explode('-',$savedinfo);\n            $port = $savedinfo[0] + 1;\n            $last_num = $savedinfo[1] + 1;\n    \n    \n            if($botState['remark'] == \"digits\"){\n                $rnd = rand(10000,99999);\n                $remark = \"{$srv_remark}-{$rnd}\";\n            }\n            elseif($botState['remark'] == \"manual\"){\n                $remark = $payInfo['description'];\n            }\n            else{\n                $rnd = rand(1111,99999);\n                $remark = \"{$srv_remark}-{$uid}-{$rnd}\";\n            }\n        \n            if($portType == \"auto\"){\n                file_put_contents('settings/temp.txt',$port.'-'.$last_num);\n            }else{\n                $port = rand(1111,65000);\n            }\n        \n            if($inbound_id == 0){   \n                if($serverType == \"marzban\"){\n                    $response = addMarzbanUser($server_id, $remark, $volume, $days, $fid);\n                    if(!$response->success){\n                        if($response->msg == \"User already exists\"){\n                            $remark .= rand(1111,99999);\n                            $response = addMarzbanUser($server_id, $remark, $volume, $days, $fid);\n                        }\n                    }\n                }\n                else{\n                    $response = addUser($server_id, $uniqid, $protocol, $port, $expire_microdate, $remark, $volume, $netType, 'none', $rahgozar, $fid); \n                    if(!$response->success){\n                        if(strstr($response->msg, \"Duplicate email\")) $remark .= RandomString();\n                        elseif(strstr($response->msg, \"Port already exists\")) $port = rand(1111,65000);\n\n                        $response = addUser($server_id, $uniqid, $protocol, $port, $expire_microdate, $remark, $volume, $netType, 'none', $rahgozar, $fid);\n                    }\n                }\n            }else {\n                $response = addInboundAccount($server_id, $uniqid, $inbound_id, $expire_microdate, $remark, $volume, $limitip, null, $fid); \n                if(!$response->success){\n                    if(strstr($response->msg, \"Duplicate email\")) $remark .= RandomString();\n\n                    $response = addInboundAccount($server_id, $uniqid, $inbound_id, $expire_microdate, $remark, $volume, $limitip, null, $fid);\n                } \n            }\n            if(is_null($response)){\n                sendMessage('❌ | 🥺 گلم ، اتصال به سرور برقرار نیست لطفا مدیر رو در جریان بزار ...');\n                exit;\n            }\n        \tif($response == \"inbound not Found\"){\n                sendMessage(\"❌ | 🥺 سطر (inbound) با آیدی $inbound_id تو این سرور وجود نداره ، مدیر رو در جریان بزار ...\");\n        \t\texit;\n        \t}\n        \tif(!$response->success){\n                sendMessage('❌ | 😮 وای خطا داد لطفا سریع به مدیر بگو ...');\n                sendMessage(\"خطای سرور {$serverInfo['title']}:\\n\\n\" . ($response->msg), null, null, $admin);\n                exit;\n            }\n                \n            if($serverType == \"marzban\"){\n                $uniqid = $token = str_replace(\"/sub/\", \"\", $response->sub_link);\n                $subLink = $botState['subLinkState'] == \"on\"?$panelUrl .$response->sub_link:\"\";\n                $vraylink = [$subLink];\n                $vray_link = json_encode($response->vray_links);\n            }\n            else{\n                $token = RandomString(30);\n                $subLink = $botState['subLinkState']==\"on\"?$botUrl . \"settings/subLink.php?token=\" . $token:\"\";\n        \n                $vraylink = getConnectionLink($server_id, $uniqid, $protocol, $remark, $port, $netType, $inbound_id, $rahgozar, $customPath, $customPort, $customSni);\n                $vray_link = json_encode($vraylink);\n            }\n            foreach($vraylink as $link){\n                $acc_text = \"\n😍 سفارش جدید شما\n📡 پروتکل: $protocol\n🔮 نام سرویس: $remark\n🔋حجم سرویس: $volume گیگ\n⏰ مدت سرویس: $days روز\n\" . ($botState['configLinkState'] != \"off\" && $serverType != \"marzban\"?\"\n💝 config : <code>$link</code>\":\"\");\nif($botState['subLinkState'] == \"on\") $acc_text .= \"\n\n🔋 Volume web: <code> $botUrl\".\"search.php?id=\".$uniqid.\"</code>\n\n\\n🌐 subscription : <code>$subLink</code>\";\n            \n                $file = RandomString() .\".png\";\n                $ecc = 'L';\n                $pixel_Size = 11;\n                $frame_Size = 0;\n            \n                QRcode::png($link, $file, $ecc, $pixel_Size, $frame_Size);\n            \taddBorderImage($file);\n            \t\n            \t\n\t        \t$backgroundImage = imagecreatefromjpeg(\"settings/QRCode.jpg\");\n                $qrImage = imagecreatefrompng($file);\n                \n                $qrSize = array('width' => imagesx($qrImage), 'height' => imagesy($qrImage));\n                imagecopy($backgroundImage, $qrImage, 300, 300 , 0, 0, $qrSize['width'], $qrSize['height']);\n                imagepng($backgroundImage, $file);\n                imagedestroy($backgroundImage);\n                imagedestroy($qrImage);\n\n            \tsendPhoto($botUrl . $file, $acc_text,json_encode(['inline_keyboard'=>[[['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]]]]),\"HTML\", $uid);\n                unlink($file);\n            }\n            $agent_bought = $payInfo['agent_bought'];\n    \n        \t$stmt = $connection->prepare(\"INSERT INTO `orders_list` \n        \t    (`userid`, `token`, `transid`, `fileid`, `server_id`, `inbound_id`, `remark`, `uuid`, `protocol`, `expire_date`, `link`, `amount`, `status`, `date`, `notif`, `rahgozar`, `agent_bought`)\n        \t    VALUES (?, ?, '', ?, ?, ?, ?, ?, ?, ?, ?, ?,1, ?, 0, ?, ?);\");\n            $stmt->bind_param(\"ssiiisssisiiii\", $uid, $token, $fid, $server_id, $inbound_id, $remark, $uniqid, $protocol, $expire_date, $vray_link, $eachPrice, $date, $rahgozar, $agent_bought);\n            $stmt->execute();\n            $order = $stmt->get_result();\n            $stmt->close();\n        }\n        sendMessage(str_replace([\"REMARK\", \"VOLUME\", \"DAYS\"],[$remark, $volume, $days], $mainValues['sent_config_to_user']), getMainKeys());\n        if($inbound_id == 0) {\n            $stmt = $connection->prepare(\"UPDATE `server_info` SET `ucount` = `ucount` - ? WHERE `id`=?\");\n            $stmt->bind_param(\"ii\", $accountCount, $server_id);\n            $stmt->execute();\n            $stmt->close();\n        }else{\n            $stmt = $connection->prepare(\"UPDATE `server_plans` SET `acount` = `acount` - ? WHERE id=?\");\n            $stmt->bind_param(\"ii\", $accountCount, $fid);\n            $stmt->execute();\n            $stmt->close();\n        }\n\n    }\n\n    unset($markup[count($markup)-1]);\n    $markup[] = [['text'=>\"✅\",'callback_data'=>\"wizwizch\"]];\n    $keys = json_encode(['inline_keyboard'=>array_values($markup)],488);\n\n    editKeys($keys);\n    if($payInfo['type'] != \"RENEW_SCONFIG\"){\n        $filename = $file_detail['title'];\n        $fileprice = number_format($file_detail['price']);\n        $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid`=?\");\n        $stmt->bind_param(\"i\", $uid);\n        $stmt->execute();\n        $user_detail= $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n    \n        if($user_detail['refered_by'] != null){\n            $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'INVITE_BANNER_AMOUNT'\");\n            $stmt->execute();\n            $inviteAmount = $stmt->get_result()->fetch_assoc()['value']??0;\n            $stmt->close();\n            $inviterId = $user_detail['refered_by'];\n            \n            $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` + ? WHERE `userid` = ?\");\n            $stmt->bind_param(\"ii\", $inviteAmount, $inviterId);\n            $stmt->execute();\n            $stmt->close();\n             \n            sendMessage(\"تبریک یکی از زیر مجموعه های شما خرید انجام داد شما مبلغ \" . number_format($inviteAmount) . \" تومان جایزه دریافت کردید\",null,null,$inviterId);\n        }\n    \n    \n        $uname = $user_detail['name'];\n        $user_name = $user_detail['username'];\n        \n        if($admin != $from_id){\n            $keys = json_encode(['inline_keyboard'=>[\n                [\n                    ['text'=>\"به به 🛍\",'callback_data'=>\"wizwizch\"]\n                ],\n                ]]);\n                \n        $msg = str_replace(['USER-ID', 'USERNAME', 'NAME', 'PRICE', 'REMARK', 'FILENAME'],\n                    [$uid, $user_name, $uname, $price, $remark,$filename], $mainValues['invite_buy_new_account']);\n            \n            sendMessage($msg,null,null,$admin);\n        }\n    }\n}\nif(preg_match('/decline/',$data) and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    setUser($data . \"_\" . $message_id);\n    sendMessage('دلیلت از عدم تایید چیه؟ ( بفرس براش ) 😔 ',$cancelKey);\n}\nif(preg_match('/decline(\\d+)_(\\d+)/',$userInfo['step'],$match) && ($from_id == $admin || $userInfo['isAdmin'] == true) and $text != $buttonValues['cancel']){\n    setUser();\n    $uid = $match[1];\n    editKeys(\n        json_encode(['inline_keyboard'=>[\n\t    [['text'=>\"لغو شد ❌\",'callback_data'=>\"wizwizch\"]]\n\t    ]]) ,$match[2]);\n\n    sendMessage('پیامت رو براش ارسال کردم ... 🤝',$removeKeyboard);\n    sendMessage($mainValues['reached_main_menu'],getMainKeys());\n    \n    sendMessage($text, null, null, $uid);\n}\nif($data==\"supportSection\"){\n    editText($message_id,\"به بخش پشتیبانی خوش اومدی🛂\\nلطفا، یکی از دکمه های زیر را انتخاب نمایید.\",\n        json_encode(['inline_keyboard'=>[\n        [['text'=>\"✉️ ثبت تیکت\",'callback_data'=>\"usersNewTicket\"]],\n        [['text'=>\"تیکت های باز 📨\",'callback_data'=>\"usersOpenTickets\"],['text'=>\"📮 لیست تیکت ها\", 'callback_data'=>\"userAllTickets\"]],\n        [['text'=>$buttonValues['back_button'],'callback_data'=>\"mainMenu\"]]\n        ]]));\n}\nif($data== \"usersNewTicket\"){\n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'TICKETS_CATEGORY'\");\n    $stmt->execute();\n    $ticketCategory = $stmt->get_result();\n    $stmt->close();\n    $keys = array();\n    $temp = array();\n    if($ticketCategory->num_rows >0){\n        while($row = $ticketCategory->fetch_assoc()){\n            $ticketName = $row['value'];\n            $temp[] = ['text'=>$ticketName,'callback_data'=>\"supportCat$ticketName\"];\n            \n            if(count($temp) == 2){\n                array_push($keys,$temp);\n                $temp = null;\n            }\n        }\n        \n        if($temp != null){\n            if(count($temp)>0){\n                array_push($keys,$temp);\n                $temp = null;\n            }\n        }\n        $temp[] = ['text'=>$buttonValues['back_button'],'callback_data'=>\"mainMenu\"];\n        array_push($keys,$temp);\n        editText($message_id,\"💠لطفا واحد مورد نظر خود را انتخاب نمایید!\",json_encode(['inline_keyboard'=>$keys]));\n    }else{\n        alert(\"ای وای، ببخشید الان نیستم\");\n    }\n}\nif($data == 'dayPlanSettings' and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `increase_day`\");\n    $stmt->execute();\n    $res = $stmt->get_result();\n    $stmt->close();\n\n    if($res->num_rows == 0){\n       editText($message_id, 'لیست پلن های زمانی خالی است ',json_encode([\n                'inline_keyboard' => [\n                    [['text' => \"افزودن پلن زمانی جدید\", 'callback_data' =>\"addNewDayPlan\"]],\n                    [['text'=>$buttonValues['back_button'],'callback_data'=>\"backplan\"]]\n                ]\n            ]));\n        exit;\n    }\n    $keyboard = [];\n    $keyboard[] = [['text'=>\"حذف\",'callback_data'=>\"wizwizch\"],['text'=>\"قیمت\",'callback_data'=>\"wizwizch\"],['text'=>\"تعداد روز\",'callback_data'=>\"wizwizch\"]];\n    while($cat = $res->fetch_assoc()){\n        $id = $cat['id'];\n        $title = $cat['volume'];\n        $price=number_format($cat['price']) . \" تومان\";\n        $acount =$cat['acount'];\n\n        $keyboard[] = [['text'=>\"❌\",'callback_data'=>\"deleteDayPlan\" . $id],['text'=>$price,'callback_data'=>\"changeDayPlanPrice\" . $id],['text'=>$title,'callback_data'=>\"changeDayPlanDay\" . $id]];\n    }\n    $keyboard[] = [['text' => \"افزودن پلن زمانی جدید\", 'callback_data' =>\"addNewDayPlan\"]];\n    $keyboard[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"backplan\"]];\n    $msg = ' 📍 برای دیدن جزییات پلن زمانی روی آن بزنید👇';\n    \n    editText($message_id,$msg,json_encode([\n            'inline_keyboard' => $keyboard\n        ]));\n\n    exit;\n}\nif($data=='addNewDayPlan' and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    setUser($data);\n    delMessage();\n    sendMessage(\"تعداد روز و قیمت آن را بصورت زیر وارد کنید :\n10-30000\n\nمقدار اول مدت زمان (10) روز\nمقدار دوم قیمت (30000) تومان\n \",$cancelKey);exit;\n}\nif($userInfo['step'] == \"addNewDayPlan\" and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $input = explode('-',$text); \n    $volume = $input[0];\n    $price = $input[1];\n    $stmt = $connection->prepare(\"INSERT INTO `increase_day` VALUES (NULL, ?, ?)\");\n    $stmt->bind_param(\"ii\", $volume, $price);\n    $stmt->execute();\n    $stmt->close();\n    \n    sendMessage(\"پلن زمانی جدید با موفقیت اضافه شد\",$removeKeyboard);\n    sendMessage($mainValues['reached_main_menu'],getAdminKeys());\n    setUser();\n}\nif(preg_match('/^deleteDayPlan(\\d+)/',$data,$match) and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"DELETE FROM `increase_day` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    alert(\"پلن موردنظر با موفقیت حذف شد\");\n    \n    \n    $stmt = $connection->prepare(\"SELECT * FROM `increase_day`\");\n    $stmt->execute();\n    $res = $stmt->get_result();\n    $stmt->close();\n\n    if($res->num_rows == 0){\n       editText($message_id, 'لیست پلن های زمانی خالی است ',json_encode([\n                'inline_keyboard' => [\n                    [['text' => \"افزودن پلن زمانی جدید\", 'callback_data' =>\"addNewDayPlan\"]],\n                    [['text'=>$buttonValues['back_button'],'callback_data'=>\"managePanel\"]]\n                ]\n            ]));\n        exit;\n    }\n    $keyboard = [];\n    $keyboard[] = [['text'=>\"حذف\",'callback_data'=>\"wizwizch\"],['text'=>\"قیمت\",'callback_data'=>\"wizwizch\"],['text'=>\"تعداد روز\",'callback_data'=>\"wizwizch\"]];\n    while($cat = $res->fetch_assoc()){\n        $id = $cat['id'];\n        $title = $cat['volume'];\n        $price=number_format($cat['price']) . \" تومان\";\n        $acount =$cat['acount'];\n\n        $keyboard[] = [['text'=>\"❌\",'callback_data'=>\"deleteDayPlan\" . $id],['text'=>$price,'callback_data'=>\"changeDayPlanPrice\" . $id],['text'=>$title,'callback_data'=>\"changeDayPlanDay\" . $id]];\n    }\n    $keyboard[] = [['text' => \"افزودن پلن زمانی جدید\", 'callback_data' =>\"addNewDayPlan\"]];\n    $keyboard[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"managePanel\"]];\n    $msg = ' 📍 برای دیدن جزییات پلن زمانی روی آن بزنید👇';\n    \n    editText($message_id,$msg,json_encode([\n            'inline_keyboard' => $keyboard\n        ]));\n\n    exit;\n}\nif(preg_match('/^changeDayPlanPrice(\\d+)/',$data,$match) and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    setUser($data);\n    delMessage();\n    sendMessage(\"قیمت جدید را وارد کنید:\", $cancelKey);\n    exit;\n}\nif(preg_match('/^changeDayPlanPrice(\\d+)/',$userInfo['step'],$match) and $text != $buttonValues['cancel']){\n    if(is_numeric($text)){\n        setUser();\n        $stmt = $connection->prepare(\"UPDATE `increase_day` SET `price` = ? WHERE `id` = ?\");\n        $stmt->bind_param(\"ii\", $text, $match[1]);\n        $stmt->execute();\n        $stmt->close();\n        \n        sendMessage(\"✅عملیات با موفقیت انجام شد\",$removeKeyboard);\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `increase_day`\");\n        $stmt->execute();\n        $res = $stmt->get_result();\n        $stmt->close();\n    \n        if($res->num_rows == 0){\n           sendMessage( 'لیست پلن های زمانی خالی است ',json_encode([\n                    'inline_keyboard' => [\n                        [['text' => \"افزودن پلن زمانی جدید\", 'callback_data' =>\"addNewDayPlan\"]],\n                        [['text'=>$buttonValues['back_button'],'callback_data'=>\"managePanel\"]]\n                    ]\n                ]));\n            exit;\n        }\n        $keyboard = [];\n        $keyboard[] = [['text'=>\"حذف\",'callback_data'=>\"wizwizch\"],['text'=>\"قیمت\",'callback_data'=>\"wizwizch\"],['text'=>\"تعداد روز\",'callback_data'=>\"wizwizch\"]];\n        while($cat = $res->fetch_assoc()){\n            $id = $cat['id'];\n            $title = $cat['volume'];\n            $price=number_format($cat['price']) . \" تومان\";\n            $acount =$cat['acount'];\n    \n            $keyboard[] = [['text'=>\"❌\",'callback_data'=>\"deleteDayPlan\" . $id],['text'=>$price,'callback_data'=>\"changeDayPlanPrice\" . $id],['text'=>$title,'callback_data'=>\"changeDayPlanDay\" . $id]];\n        }\n        $keyboard[] = [['text' => \"افزودن پلن زمانی جدید\", 'callback_data' =>\"addNewDayPlan\"]];\n        $keyboard[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"managePanel\"]];\n        $msg = ' 📍 برای دیدن جزییات پلن زمانی روی آن بزنید👇';\n        \n        sendMessage($msg,json_encode([\n                'inline_keyboard' => $keyboard\n            ]));\n    \n        \n    }else{\n        sendMessage(\"یک مقدار عددی و صحیح وارد کنید\");\n    }\n}\nif(preg_match('/^changeDayPlanDay(\\d+)/',$data,$match) and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    setUser($data);\n    delMessage();\n    sendMessage(\"روز جدید را وارد کنید:\", $cancelKey);\n    exit;\n}\nif(preg_match('/^changeDayPlanDay(\\d+)/',$userInfo['step'],$match) && ($from_id == $admin || $userInfo['isAdmin'] == true) and $text != $buttonValues['cancel']) {\n    setUser();\n    $stmt = $connection->prepare(\"UPDATE `increase_day` SET `volume` = ? WHERE `id` = ?\");\n    $stmt->bind_param(\"ii\", $text, $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n    sendMessage(\"✅عملیات با موفقیت انجام شد\",$removeKeyboard);\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `increase_day`\");\n    $stmt->execute();\n    $res = $stmt->get_result();\n    $stmt->close();\n\n    if($res->num_rows == 0){\n       sendMessage( 'لیست پلن های زمانی خالی است ',json_encode([\n                'inline_keyboard' => [\n                    [['text' => \"افزودن پلن زمانی جدید\", 'callback_data' =>\"addNewDayPlan\"]],\n                    [['text'=>$buttonValues['back_button'],'callback_data'=>\"managePanel\"]]\n                ]\n            ]));\n        exit;\n    }\n    $keyboard = [];\n    $keyboard[] = [['text'=>\"حذف\",'callback_data'=>\"wizwizch\"],['text'=>\"قیمت\",'callback_data'=>\"wizwizch\"],['text'=>\"تعداد روز\",'callback_data'=>\"wizwizch\"]];\n    while($cat = $res->fetch_assoc()){\n        $id = $cat['id'];\n        $title = $cat['volume'];\n        $price=number_format($cat['price']) . \" تومان\";\n        $acount =$cat['acount'];\n\n        $keyboard[] = [['text'=>\"❌\",'callback_data'=>\"deleteDayPlan\" . $id],['text'=>$price,'callback_data'=>\"changeDayPlanPrice\" . $id],['text'=>$title,'callback_data'=>\"changeDayPlanDay\" . $id]];\n    }\n    $keyboard[] = [['text' => \"افزودن پلن زمانی جدید\", 'callback_data' =>\"addNewDayPlan\"]];\n    $keyboard[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"managePanel\"]];\n    $msg = ' 📍 برای دیدن جزییات پلن زمانی روی آن بزنید👇';\n    \n    sendMessage($msg,json_encode([\n            'inline_keyboard' => $keyboard\n        ]));\n\n    \n}\nif($data == 'volumePlanSettings' and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `increase_plan`\");\n    $stmt->execute();\n    $plans = $stmt->get_result();\n    $stmt->close();\n    \n    if($plans->num_rows == 0){\n       editText($message_id, 'لیست پلن های حجمی خالی است ',json_encode([\n                'inline_keyboard' => [\n                    [['text' => \"افزودن پلن حجمی جدید\", 'callback_data' =>\"addNewVolumePlan\"]],\n                    [['text' => $buttonValues['back_button'],'callback_data'=>\"backplan\"]]\n                    ]]));\n        exit;\n    }\n    $keyboard = [];\n    $keyboard[] = [['text'=>\"حذف\",'callback_data'=>\"wizwizch\"],['text'=>\"قیمت\",'callback_data'=>\"wizwizch\"],['text'=>\"مقدار حجم\",'callback_data'=>\"wizwizch\"]];\n    while ($cat = $plans->fetch_assoc()){\n        $id = $cat['id'];\n        $title = $cat['volume'];\n        $price=number_format($cat['price']) . \" تومان\";\n        \n        $keyboard[] = [['text'=>\"❌\",'callback_data'=>\"deleteVolumePlan\" . $id],['text'=>$price,'callback_data'=>\"changeVolumePlanPrice\" . $id],['text'=>$title,'callback_data'=>\"changeVolumePlanVolume\" . $id]];\n    }\n    $keyboard[] = [['text' => \"افزودن پلن حجمی جدید\", 'callback_data' =>\"addNewVolumePlan\"]];\n    $keyboard[] = [['text' =>$buttonValues['back_button'], 'callback_data' => \"backplan\"]];\n    $msg = ' 📍 برای دیدن جزییات پلن حجمی روی آن بزنید👇';\n    \n    $res = editText($message_id, $msg,json_encode([\n            'inline_keyboard' => $keyboard\n        ]));\n    exit;\n}\nif($data=='addNewVolumePlan' and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    setUser($data);\n    delMessage();\n    sendMessage(\"حجم و قیمت آن را بصورت زیر وارد کنید :\n10-30000\n\nمقدار اول حجم (10) گیگابایت\nمقدار دوم قیمت (30000) تومان\n \",$cancelKey);\n exit;\n}\nif($userInfo['step'] == \"addNewVolumePlan\" and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $input = explode('-',$text); \n    $volume = $input[0];\n    $price = $input[1];\n    $stmt = $connection->prepare(\"INSERT INTO `increase_plan` VALUES (NULL, ? ,?)\");\n    $stmt->bind_param(\"ii\",$volume,$price);\n    $stmt->execute();\n    $stmt->close();\n    \n    sendMessage(\"پلن حجمی جدید با موفقیت اضافه شد\",$removeKeyboard);\n    sendMessage($mainValues['reached_main_menu'],getAdminKeys());\n    setUser();\n}\nif(preg_match('/^deleteVolumePlan(\\d+)/',$data,$match) and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"DELETE FROM `increase_plan` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    alert(\"پلن موردنظر با موفقیت حذف شد\");\n    \n    \n    $stmt = $connection->prepare(\"SELECT * FROM `increase_plan`\");\n    $stmt->execute();\n    $plans = $stmt->get_result();\n    $stmt->close();\n    \n    if($plans->num_rows == 0){\n       editText($message_id, 'لیست پلن های حجمی خالی است ',json_encode([\n                'inline_keyboard' => [\n                    [['text' => \"افزودن پلن حجمی جدید\", 'callback_data' =>\"addNewVolumePlan\"]],\n                    [['text' => $buttonValues['back_button'],'callback_data'=>\"managePanel\"]]\n                    ]]));\n        exit;\n    }\n    $keyboard = [];\n    $keyboard[] = [['text'=>\"حذف\",'callback_data'=>\"wizwizch\"],['text'=>\"قیمت\",'callback_data'=>\"wizwizch\"],['text'=>\"مقدار حجم\",'callback_data'=>\"wizwizch\"]];\n    while ($cat = $plans->fetch_assoc()){\n        $id = $cat['id'];\n        $title = $cat['volume'];\n        $price=number_format($cat['price']) . \" تومان\";\n        \n        $keyboard[] = [['text'=>\"❌\",'callback_data'=>\"deleteVolumePlan\" . $id],['text'=>$price,'callback_data'=>\"changeVolumePlanPrice\" . $id],['text'=>$title,'callback_data'=>\"changeVolumePlanVolume\" . $id]];\n    }\n    $keyboard[] = [['text' => \"افزودن پلن حجمی جدید\", 'callback_data' =>\"addNewVolumePlan\"]];\n    $keyboard[] = [['text' =>$buttonValues['back_button'], 'callback_data' => \"managePanel\"]];\n    $msg = ' 📍 برای دیدن جزییات پلن حجمی روی آن بزنید👇';\n    \n    $res = editText($message_id, $msg,json_encode([\n            'inline_keyboard' => $keyboard\n        ]));\n}\nif(preg_match('/^changeVolumePlanPrice(\\d+)/',$data,$match) and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    setUser($data);\n    delMessage();\n    sendMessage(\"قیمت جدید را وارد کنید:\", $cancelKey);\n    exit;\n}\nif(preg_match('/^changeVolumePlanPrice(\\d+)/',$userInfo['step'],$match) and $text != $buttonValues['cancel'] and ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $pid=$match[1];\n    if(is_numeric($text)){\n        $stmt = $connection->prepare(\"UPDATE `increase_plan` SET `price` = ? WHERE `id` = ?\");\n        $stmt->bind_param(\"ii\", $text, $pid);\n        $stmt->execute();\n        $stmt->close();\n        sendMessage(\"عملیات با موفقیت انجام شد\",$removeKeyboard);\n        \n        setUser();\n        $stmt = $connection->prepare(\"SELECT * FROM `increase_plan`\");\n        $stmt->execute();\n        $plans = $stmt->get_result();\n        $stmt->close();\n        \n        if($plans->num_rows == 0){\n           sendMessage( 'لیست پلن های حجمی خالی است ',json_encode([\n                    'inline_keyboard' => [\n                        [['text' => \"افزودن پلن حجمی جدید\", 'callback_data' =>\"addNewVolumePlan\"]],\n                        [['text' => $buttonValues['back_button'],'callback_data'=>\"managePanel\"]]\n                        ]]));\n            exit;\n        }\n        $keyboard = [];\n        $keyboard[] = [['text'=>\"حذف\",'callback_data'=>\"wizwizch\"],['text'=>\"قیمت\",'callback_data'=>\"wizwizch\"],['text'=>\"مقدار حجم\",'callback_data'=>\"wizwizch\"]];\n        while ($cat = $plans->fetch_assoc()){\n            $id = $cat['id'];\n            $title = $cat['volume'];\n            $price=number_format($cat['price']) . \" تومان\";\n            \n            $keyboard[] = [['text'=>\"❌\",'callback_data'=>\"deleteVolumePlan\" . $id],['text'=>$price,'callback_data'=>\"changeVolumePlanPrice\" . $id],['text'=>$title,'callback_data'=>\"changeVolumePlanVolume\" . $id]];\n        }\n        $keyboard[] = [['text' => \"افزودن پلن حجمی جدید\", 'callback_data' =>\"addNewVolumePlan\"]];\n        $keyboard[] = [['text' =>$buttonValues['back_button'], 'callback_data' => \"managePanel\"]];\n        $msg = ' 📍 برای دیدن جزییات پلن حجمی روی آن بزنید👇';\n        \n        $res = sendMessage($msg,json_encode([\n                'inline_keyboard' => $keyboard\n            ]));\n    }else{\n        sendMessage(\"یک مقدار عددی و صحیح وارد کنید\");\n    }\n}\nif(preg_match('/^changeVolumePlanVolume(\\d+)/',$data) and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    setUser($data);\n    delMessage();\n    sendMessage(\"حجم جدید را وارد کنید:\", $cancelKey);\n    exit;\n}\nif(preg_match('/^changeVolumePlanVolume(\\d+)/',$userInfo['step'], $match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $pid=$match[1];\n    $stmt = $connection->prepare(\"UPDATE `increase_plan` SET `volume` = ? WHERE `id` = ?\");\n    $stmt->bind_param(\"ii\", $text, $pid);\n    $stmt->execute();\n    $stmt->close();\n    sendMessage(\"✅عملیات با موفقیت انجام شد\",$removeKeyboard);\n    setUser();\n\n    $stmt = $connection->prepare(\"SELECT * FROM `increase_plan`\");\n    $stmt->execute();\n    $plans = $stmt->get_result();\n    $stmt->close();\n    \n    if($plans->num_rows == 0){\n       sendMessage( 'لیست پلن های حجمی خالی است ',json_encode([\n                'inline_keyboard' => [\n                    [['text' => \"افزودن پلن حجمی جدید\", 'callback_data' =>\"addNewVolumePlan\"]],\n                    [['text' => $buttonValues['back_button'],'callback_data'=>\"managePanel\"]]\n                    ]]));\n        exit;\n    }\n    $keyboard = [];\n    $keyboard[] = [['text'=>\"حذف\",'callback_data'=>\"wizwizch\"],['text'=>\"قیمت\",'callback_data'=>\"wizwizch\"],['text'=>\"مقدار حجم\",'callback_data'=>\"wizwizch\"]];\n    while ($cat = $plans->fetch_assoc()){\n        $id = $cat['id'];\n        $title = $cat['volume'];\n        $price=number_format($cat['price']) . \" تومان\";\n        \n        $keyboard[] = [['text'=>\"❌\",'callback_data'=>\"deleteVolumePlan\" . $id],['text'=>$price,'callback_data'=>\"changeVolumePlanPrice\" . $id],['text'=>$title,'callback_data'=>\"changeVolumePlanVolume\" . $id]];\n    }\n    $keyboard[] = [['text' => \"افزودن پلن حجمی جدید\", 'callback_data' =>\"addNewVolumePlan\"]];\n    $keyboard[] = [['text' =>$buttonValues['back_button'], 'callback_data' => \"managePanel\"]];\n    $msg = ' 📍 برای دیدن جزییات پلن حجمی روی آن بزنید👇';\n    \n    $res = sendMessage( $msg,json_encode([\n            'inline_keyboard' => $keyboard\n        ]));\n    \n}\nif(preg_match('/^supportCat(.*)/',$data,$match)){\n    delMessage();\n    sendMessage($mainValues['enter_ticket_title'], $cancelKey);\n    setUser(\"newTicket_\" . $match[1]);\n}\nif(preg_match('/^newTicket_(.*)/',$userInfo['step'],$match)  and $text!=$buttonValues['cancel']){\n    setUser($text, 'temp');\n\tsetUser(\"sendTicket_\" . $match[1]);\n    sendMessage($mainValues['enter_ticket_description']);\n}\nif(preg_match('/^sendTicket_(.*)/',$userInfo['step'],$match)  and $text!=$buttonValues['cancel']){\n    if(isset($text) || isset($update->message->photo)){\n        $ticketCat = $match[1];\n        \n        $ticketTitle = $userInfo['temp'];\n        $time = time();\n    \n        $ticketTitle = str_replace([\"/\",\"'\",\"#\"],['\\/',\"\\'\",\"\\#\"],$ticketTitle);\n        $stmt = $connection->prepare(\"INSERT INTO `chats` (`user_id`,`create_date`, `title`,`category`,`state`,`rate`) VALUES \n                            (?,?,?,?,'0','0')\");\n        $stmt->bind_param(\"iiss\", $from_id, $time, $ticketTitle, $ticketCat);\n        $stmt->execute();\n        $inserId = $stmt->get_result();\n        $chatRowId = $stmt->insert_id;\n        $stmt->close();\n        \n        $keys = json_encode(['inline_keyboard'=>[\n            [['text'=>\"پاسخ\",'callback_data'=>\"reply_{$chatRowId}\"]]\n            ]]);\n        if(isset($text)){\n            $txt = \"تیکت جدید:\\n\\nکاربر: <a href='tg://user?id=$from_id'>$first_name</a>\\nنام کاربری: @$username\\nآیدی عددی: $from_id\\n\\nموضوع تیکت: $ticketCat\\n\\nعنوان تیکت: \" .$ticketTitle . \"\\nمتن تیکت: $text\";\n            $text = str_replace([\"/\",\"'\",\"#\"],['\\/',\"\\'\",\"\\#\"],$text);\n            $stmt = $connection->prepare(\"INSERT INTO `chats_info` (`chat_id`,`sent_date`,`msg_type`,`text`) VALUES\n                        (?,?,'USER',?)\");\n            $stmt->bind_param(\"iis\", $chatRowId, $time, $text);\n            sendMessage($txt,$keys,\"html\", $admin);\n        }else{\n            $txt = \"تیکت جدید:\\n\\nکاربر: <a href='tg://user?id=$from_id'>$first_name</a>\\nنام کاربری: @$username\\nآیدی عددی: $from_id\\n\\nموضوع تیکت: $ticketCat\\n\\nعنوان تیکت: \" .$ticketTitle . \"\\nمتن تیکت: $caption\";\n            $stmt = $connection->prepare(\"INSERT INTO `chats_info` (`chat_id`,`sent_date`,`msg_type`,`text`) VALUES\n                        (?,?,'USER',?)\");\n            $text = json_encode(['file_id'=>$fileid, 'caption'=>$caption]);\n            $stmt->bind_param(\"iis\", $chatRowId, $time, $text);\n            sendPhoto($fileid, $txt,$keys, \"HTML\", $admin);\n        }\n        $stmt->execute();\n        $stmt->close();\n        \n        sendMessage(\"پیام شما با موفقیت ثبت شد\",$removeKeyboard,\"HTML\");\n        sendMessage(\"لطفا یکی از کلید های زیر را انتخاب کنید\",getMainKeys());\n            \n        setUser(NULL,'temp');\n    \tsetUser(\"none\");\n    }else{\n        sendMessage(\"پیام مورد نظر پشتیبانی نمی شود\");\n    }\n    \n}\nif($data== \"usersOpenTickets\" || $data == \"userAllTickets\"){\n    if($data== \"usersOpenTickets\"){\n        $stmt = $connection->prepare(\"SELECT * FROM `chats` WHERE `state` != 2 AND `user_id` = ? ORDER BY `state` ASC, `create_date` DESC\");\n        $stmt->bind_param(\"i\", $from_id);\n        $stmt->execute();\n        $ticketList = $stmt->get_result();\n        $stmt->close();\n        $type = 2;\n    }elseif($data == \"userAllTickets\"){\n        $stmt = $connection->prepare(\"SELECT * FROM `chats` WHERE `user_id` = ? ORDER BY `state` ASC, `create_date` DESC\");\n        $stmt->bind_param(\"i\", $from_id);\n        $stmt->execute();\n        $ticketList = $stmt->get_result();\n        $stmt->close();\n        $type = \"all\";\n    }\n\t$allList = $ticketList->num_rows;\n\t$cont = 5;\n\t$current = 0;\n\t$keys = array();\n\tsetUser(\"none\");\n\n\n\tif($allList>0){\n        while($row = $ticketList->fetch_assoc()){\n\t\t    $current++;\n\t\t    \n            $rowId = $row['id'];\n            $title = $row['title'];\n            $category = $row['category'];\n\t        $state = $row['state'];\n\n            $stmt = $connection->prepare(\"SELECT * FROM `chats_info` WHERE `chat_id` = ? ORDER BY `sent_date` DESC\");\n            $stmt->bind_param(\"i\", $rowId);\n            $stmt->execute();\n            $ticketInfo = $stmt->get_result()->fetch_assoc();\n            $stmt->close();\n            \n            $lastmsg = $ticketInfo['text'];\n            $sentType = $ticketInfo['msg_type']==\"ADMIN\"?\"ادمین\":\"کاربر\";\n            if($state !=2){\n                $keys = [\n                        [['text'=>\"بستن تیکت 🗳\",'callback_data'=>\"closeTicket_$rowId\"],['text'=>\"پاسخ به تیکت 📝\",'callback_data'=>\"replySupport_{$rowId}\"]],\n                        [['text'=>\"آخرین پیام ها 📩\",'callback_data'=>\"latestMsg_$rowId\"]]\n                        ];\n            }\n            else{\n                $keys = [\n                    [['text'=>\"آخرین پیام ها 📩\",'callback_data'=>\"latestMsg_$rowId\"]]\n                    ];\n            }\n                \n            if(isset(json_decode($lastmsg,true)['file_id'])){\n                $info = json_decode($lastmsg,true);\n                $fileid = $info['file_id'];\n                $caption = $info['caption'];\n                $txt =\"🔘 موضوع: $title\n            \t\t💭 دسته بندی:  {$category}\n            \t\t\\n\n            \t\t$sentType : $caption\";\n                sendPhoto($fileid, $txt,json_encode(['inline_keyboard'=>$keys]), \"HTML\");\n            }else{\n                sendMessage(\" 🔘 موضوع: $title\n            \t\t💭 دسته بندی:  {$category}\n            \t\t\\n\n            \t\t$sentType : $lastmsg\",json_encode(['inline_keyboard'=>$keys]),\"HTML\");\n            }\n\n\t\t\tif($current>=$cont){\n\t\t\t    break;\n\t\t\t}\n        }\n        \n\t\tif($allList > $cont){\n\t\t    sendmessage(\"موارد بیشتر\",json_encode(['inline_keyboard'=>[\n                \t\t        [['text'=>\"دریافت\",'callback_data'=>\"moreTicket_{$type}_{$cont}\"]]\n                \t\t        ]]),\"HTML\");\n\t\t}\n\t}else{\n\t    alert(\"تیکتی یافت نشد\");\n        exit();\n\t}\n}\nif(preg_match('/^closeTicket_(\\d+)/',$data,$match) and  $from_id != $admin){\n    $chatRowId = $match[1];\n    $stmt = $connection->prepare(\"SELECT * FROM `chats` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $chatRowId);\n    $stmt->execute();\n    $ticketInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $from_id = $ticketInfo['user_id'];\n    $title = $ticketInfo['title'];\n    $category = $ticketInfo['category'];\n        \n\n    $stmt = $connection->prepare(\"UPDATE `chats` SET `state` = 2 WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $chatRowId);\n    $stmt->execute();\n    $stmt->close();\n    \n    editKeys();\n\n    $ticketClosed = \" $title : $category \\n\\n\" . \"این تیکت بسته شد\\n به این تیکت رأی بدهید\";;\n    \n    $keys = json_encode(['inline_keyboard'=>[\n        [['text'=>\"بسیار بد 😠\",'callback_data'=>\"rate_{$chatRowId}_1\"]],\n        [['text'=>\"بد 🙁\",'callback_data'=>\"rate_{$chatRowId}_2\"]],\n        [['text'=>\"خوب 😐\",'callback_data'=>\"rate_{$chatRowId}_3\"]],\n        [['text'=>\"بسیار خوب 😃\",'callback_data'=>\"rate_{$chatRowId}_4\"]],\n        [['text'=>\"عالی 🤩\",'callback_data'=>\"rate_{$chatRowId}_5\"]]\n        ]]);\n    sendMessage($ticketClosed,$keys,'html');\n    \n    $keys = json_encode(['inline_keyboard'=>[\n        [\n            ['text'=>\"$from_id\",'callback_data'=>\"wizwizch\"],\n            ['text'=>\"آیدی کاربر\",'callback_data'=>'wizwizch']\n        ],\n        [\n            ['text'=>$first_name??\" \",'callback_data'=>\"wizwizch\"],\n            ['text'=>\"اسم کاربر\",'callback_data'=>'wizwizch']\n        ],\n        [\n            ['text'=>\"$title\",'callback_data'=>'wizwizch'],\n            ['text'=>\"عنوان\",'callback_data'=>'wizwizch']\n        ],\n        [\n            ['text'=>\"$category\",'callback_data'=>'wizwizch'],\n            ['text'=>\"دسته بندی\",'callback_data'=>'wizwizch']\n        ],\n        ]]);\n    sendMessage(\"☑️| تیکت توسط کاربر بسته شد\",$keys,\"HTML\",$admin);\n\n}\nif(preg_match('/^replySupport_(.*)/',$data,$match)){\n    delMessage();\n    sendMessage(\"💠لطفا متن پیام خود را بصورت ساده و مختصر ارسال کنید!\",$cancelKey);\n\tsetUser(\"sendMsg_\" . $match[1]);\n}\nif(preg_match('/^sendMsg_(.*)/',$userInfo['step'],$match)  and $text!=$buttonValues['cancel']){\n    $ticketRowId = $match[1];\n\n    $stmt = $connection->prepare(\"SELECT * FROM `chats` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $ticketRowId);\n    $stmt->execute();\n    $ticketInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $ticketTitle = $ticketInfo['title'];\n    $ticketCat = $ticketInfo['category'];\n\n\n\n    $time = time();\n    if(isset($text)){\n        $txt = \"پیام جدید:\\n[$ticketTitle] <i>{$ticketCat}</i>\\n\\nکاربر: <a href='tg://user?id=$from_id'>$first_name</a>\\nنام کاربری: $username\\nآیدی عددی: $from_id\\n\" . \"\\nمتن پیام: $text\";\n    \n        $text = str_replace([\"/\",\"'\",\"#\"],['\\/',\"\\'\",\"\\#\"],$text);\n        $stmt = $connection->prepare(\"INSERT INTO `chats_info` (`chat_id`,`sent_date`,`msg_type`,`text`) VALUES\n                    (?,?,'USER',?)\");\n        $stmt->bind_param(\"iis\",$ticketRowId, $time, $text);\n        sendMessage($txt,json_encode(['inline_keyboard'=>[\n            [['text'=>\"پاسخ\",'callback_data'=>\"reply_{$ticketRowId}\"]]\n            ]]),\"HTML\",$admin);\n    }else{\n        $txt = \"پیام جدید:\\n[$ticketTitle] <i>{$ticketCat}</i>\\n\\nکاربر: <a href='tg://user?id=$from_id'>$first_name</a>\\nنام کاربری: $username\\nآیدی عددی: $from_id\\n\" . \"\\nمتن پیام: $caption\";\n        \n        $stmt = $connection->prepare(\"INSERT INTO `chats_info` (`chat_id`,`sent_date`,`msg_type`,`text`) VALUES\n                    (?,?,'USER',?)\");\n        $text = json_encode(['file_id'=>$fileid, 'caption'=>$caption]);\n        $stmt->bind_param(\"iis\", $ticketRowId, $time, $text);\n        $keys = json_encode(['inline_keyboard'=>[\n            [['text'=>\"پاسخ\",'callback_data'=>\"reply_{$ticketRowId}\"]]\n            ]]);\n        sendPhoto($fileid, $txt,$keys, \"HTML\", $admin);\n    }\n    $stmt->execute();\n    $stmt->close();\n                \n    sendMessage(\"پیام شما با موفقیت ثبت شد\",getMainKeys(),\"HTML\");\n\tsetUser(\"none\");\n}\nif(preg_match(\"/^rate_+([0-9])+_+([0-9])/\",$data,$match)){\n    $rowChatId = $match[1];\n    $rate = $match[2];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `chats` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\",$rowChatId);\n    $stmt->execute();\n    $ticketInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $title = $ticketInfo['title'];\n    $category = $ticketInfo['category'];\n    \n    \n    $stmt = $connection->prepare(\"UPDATE `chats` SET `rate` = $rate WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $rowChatId);\n    $stmt->execute();\n    $stmt->close();\n    editText($message_id,\"✅\");\n    \n    $keys = json_encode(['inline_keyboard'=>[\n        [\n            ['text'=>\"رای تیکت\",'callback_data'=>\"wizwizch\"]\n            ],\n        ]]);\n\n    sendMessage(\"\n📨|رأی به تیکت \n\n👤 آیدی عددی: $from_id\n❕نام کاربر: $first_name\n❗️نام کاربری: $username\n〽️ عنوان: $title\n⚜️ دسته بندی: $category\n❤️ رای: $rate\n ⁮⁮\n    \",$keys,\"HTML\",$admin);\n}\nif($data==\"ticketsList\" and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $ticketSection = json_encode(['inline_keyboard'=>[\n        [\n            ['text'=>\"تیکت های باز\",'callback_data'=>\"openTickets\"],\n            ['text'=>\"تیکت های جدید\",'callback_data'=>\"newTickets\"]\n            ],\n        [\n            ['text'=>\"همه ی تیکت ها\",'callback_data'=>\"allTickets\"],\n            ['text'=>\"دسته بندی تیکت ها\",'callback_data'=>\"ticketsCategory\"]\n            ],\n        [['text' => $buttonValues['back_button'], 'callback_data' => \"managePanel\"]]\n        ]]);\n    editText($message_id, \"به بخش تیکت ها خوش اومدید، \n    \n🚪 /start\n    \",$ticketSection);\n}\nif($data=='ticketsCategory' and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'TICKETS_CATEGORY'\");\n    $stmt->execute();\n    $ticketCategory = $stmt->get_result();\n    $stmt->close();\n    $keys = array();\n    $keys[] = [['text'=>\"حذف\",'callback_data'=>\"wizwizch\"],['text'=>\"دسته بندی\",'callback_data'=>\"wizwizch\"]];\n    \n    if($ticketCategory->num_rows>0){\n        while($row = $ticketCategory->fetch_assoc()){\n            $rowId = $row['id'];\n            $ticketName = $row['value'];\n            $keys[] = [['text'=>\"❌\",'callback_data'=>\"delTicketCat_$rowId\"],['text'=>$ticketName,'callback_data'=>\"wizwizch\"]];\n        }\n    }else{\n        $keys[] = [['text'=>\"دسته بندی یافت نشد\",'callback_data'=>\"wizwizch\"]];\n    }\n    $keys[] = [['text'=>\"افزودن دسته بندی\",'callback_data'=>\"addTicketCategory\"]];\n    $keys[] = [['text'=>$buttonValues['back_button'],'callback_data'=>\"ticketsList\"]];\n    \n    $keys =  json_encode(['inline_keyboard'=>$keys]);\n    editText($message_id,\"دسته بندی تیکت ها\",$keys);\n}\nif($data==\"addTicketCategory\" and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    setUser('addTicketCategory');\n    editText($message_id,\"لطفا اسم دسته بندی را وارد کنید\");\n}\nif ($userInfo['step']==\"addTicketCategory\" and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n\t$stmt = $connection->prepare(\"INSERT INTO `setting` (`type`, `value`) VALUES ('TICKETS_CATEGORY', ?)\");\t\n\t$stmt->bind_param(\"s\", $text);\n\t$stmt->execute();\n\t$stmt->close();\n    setUser();\n    sendMessage($mainValues['saved_successfuly']);\n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'TICKETS_CATEGORY'\");\n    $stmt->execute();\n    $ticketCategory = $stmt->get_result();\n    $stmt->close();\n    \n    $keys = array();\n    $keys[] = [['text'=>\"حذف\",'callback_data'=>\"wizwizch\"],['text'=>\"دسته بندی\",'callback_data'=>\"wizwizch\"]];\n    \n    if($ticketCategory->num_rows>0){\n        while ($row = $ticketCategory->fetch_assoc()){\n            \n            $rowId = $row['id'];\n            $ticketName = $row['value'];\n            $keys[] = [['text'=>\"❌\",'callback_data'=>\"delTicketCat_$rowId\"],['text'=>$ticketName,'callback_data'=>\"wizwizch\"]];\n        }\n    }else{\n        $keys[] = [['text'=>\"دسته بندی یافت نشد\",'callback_data'=>\"wizwizch\"]];\n    }\n    $keys[] = [['text'=>\"افزودن دسته بندی\",'callback_data'=>\"addTicketCategory\"]];\n    $keys[] = [['text'=>$buttonValues['back_button'],'callback_data'=>\"ticketsList\"]];\n    \n    $keys =  json_encode(['inline_keyboard'=>$keys]);\n    sendMessage(\"دسته بندی تیکت ها\",$keys);\n}\nif(preg_match(\"/^delTicketCat_(\\d+)/\",$data,$match) and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"DELETE FROM `setting` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n    alert(\"با موفقیت حذف شد\");\n        \n\n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'TICKETS_CATEGORY'\");\n    $stmt->execute();\n    $ticketCategory = $stmt->get_result();\n    $stmt->close();\n    \n    $keys = array();\n    $keys[] = [['text'=>\"حذف\",'callback_data'=>\"wizwizch\"],['text'=>\"دسته بندی\",'callback_data'=>\"wizwizch\"]];\n    \n    if($ticketCategory->num_rows>0){\n        while ($row = $ticketCategory->fetch_assoc()){\n            \n            $rowId = $row['id'];\n            $ticketName = $row['value'];\n            $keys[] = [['text'=>\"❌\",'callback_data'=>\"delTicketCat_$rowId\"],['text'=>$ticketName,'callback_data'=>\"wizwizch\"]];\n        }\n    }else{\n        $keys[] = [['text'=>\"دسته بندی یافت نشد\",'callback_data'=>\"wizwizch\"]];\n    }\n    $keys[] = [['text'=>\"افزودن دسته بندی\",'callback_data'=>\"addTicketCategory\"]];\n    $keys[] = [['text'=>$buttonValues['back_button'],'callback_data'=>\"ticketsList\"]];\n    \n    $keys =  json_encode(['inline_keyboard'=>$keys]);\n    editText($message_id, \"دسته بندی تیکت ها\",$keys);\n}\nif(($data==\"openTickets\" or $data==\"newTickets\" or $data == \"allTickets\")  and  $from_id ==$admin){\n    if($data==\"openTickets\"){\n        $stmt = $connection->prepare(\"SELECT * FROM `chats` WHERE `state` != 2 ORDER BY `state` ASC, `create_date` DESC\");\n        $type = 2;\n    }elseif($data==\"newTickets\"){\n        $stmt = $connection->prepare(\"SELECT * FROM `chats` WHERE `state` = 0 ORDER BY `create_date` DESC\");\n        $type = 0;\n    }elseif($data==\"allTickets\"){\n        $stmt = $connection->prepare(\"SELECT * FROM `chats` ORDER BY `state` ASC, `create_date` DESC\");\n        $type = \"all\";\n    }\n    $stmt->execute();\n    $ticketList = $stmt->get_result();\n    $stmt->close();\n\t$allList =$ticketList->num_rows;\n\t$cont = 5;\n\t$current = 0;\n\t$keys = array();\n\tif($allList>0){\n        while ($row = $ticketList->fetch_assoc()){\n\t\t    $current++;\n\t\t    \n            $rowId = $row['id'];\n            $admin = $row['user_id'];\n            $title = $row['title'];\n            $category = $row['category'];\n\t        $state = $row['state'];\n\t        $username = bot('getChat',['chat_id'=>$admin])->result->first_name ?? \" \";\n\n            $stmt = $connection->prepare(\"SELECT * FROM `chats_info` WHERE `chat_id` = ? ORDER BY `sent_date` DESC\");\n            $stmt->bind_param(\"i\",$rowId);\n            $stmt->execute();\n            $ticketInfo = $stmt->get_result()->fetch_assoc();\n            $stmt->close();\n            $lastmsg = $ticketInfo['text'];\n            $sentType = $ticketInfo['msg_type']==\"USER\"?\"کاربر\":\"ادمین\";\n            \n            if($state !=2){\n                $keys = [\n                        [['text'=>\"بستن تیکت\",'callback_data'=>\"closeTicket_$rowId\"],['text'=>\"پاسخ\",'callback_data'=>\"reply_{$rowId}\"]],\n                        [['text'=>\"آخرین پیام ها\",'callback_data'=>\"latestMsg_$rowId\"]]\n                        ];\n            }\n            else{\n                $keys = [[['text'=>\"آخرین پیام ها\",'callback_data'=>\"latestMsg_$rowId\"]]];\n                $rate = \"\\nرأی: \". $row['rate'];\n            }\n            \n            sendMessage(\"آیدی کاربر: $admin\\nنام کاربر: $username\\nدسته بندی: $category $rate\\n\\nموضوع: $title\\nآخرین پیام:\\n[$sentType] $lastmsg\",\n                json_encode(['inline_keyboard'=>$keys]),\"html\");\n\n\t\t\tif($current>=$cont){\n\t\t\t    break;\n\t\t\t}\n        }\n        \n\t\tif($allList > $cont){\n\t\t    $keys = json_encode(['inline_keyboard'=>[\n\t\t        [['text'=>\"دریافت\",'callback_data'=>\"moreTicket_{$type}_{$cont}\"]]\n\t\t        ]]);\n            sendMessage(\"موارد بیشتر\",$keys,\"html\");\n\t\t}\n\t}else{\n        alert(\"تیکتی یافت نشد\");\n\t}\n}\nif(preg_match('/^moreTicket_(.+)_(.+)/',$data, $match) and  ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    editText($message_id,$mainValues['please_wait_message']);\n    $type = $match[1];\n    $offset = $match[2];\n    if($type==\"2\") $stmt = $connection->prepare(\"SELECT * FROM `chats` WHERE `state` != 2 ORDER BY `state` ASC, `create_date` DESC\");\n    elseif($type==\"0\") $stmt = $connection->prepare(\"SELECT * FROM `chats` WHERE `state` = 0 ORDER BY `create_date` DESC\");\n    elseif($type==\"all\") $stmt = $connection->prepare(\"SELECT * FROM `chats` ORDER BY `state` ASC, `create_date` DESC\");\n    \n    $stmt->execute();\n    $ticketList = $stmt->get_result();\n    $stmt->close();\n\n\t$allList =$ticketList->num_rows;\n\t$cont = 5 + $offset;\n\t$current = 0;\n\t$keys = array();\n\t$rowCont = 0;\n\tif($allList>0){\n        while ($row = $ticketList->fetch_assoc()){\n            $rowCont++;\n            if($rowCont>$offset){\n    \t\t    $current++;\n    \t\t    \n                $rowId = $row['id'];\n                $admin = $row['user_id'];\n                $title = $row['title'];\n                $category = $row['category'];\n    \t        $state = $row['state'];\n    \t        $username = bot('getChat',['chat_id'=>$admin])->result->first_name ?? \" \";\n    \n                $stmt = $connection->prepare(\"SELECT * FROM `chats_info` WHERE `chat_id` = ? ORDER BY `sent_date` DESC\");\n                $stmt->bind_param(\"i\",$rowId);\n                $stmt->execute();\n                $ticketInfo = $stmt->get_result()->fetch_assoc();\n                $stmt->close();\n                $lastmsg = $ticketInfo['text'];\n                $sentType = $ticketInfo['msg_type']==\"USER\"?\"کاربر\":\"ادمین\";\n                \n                if($state !=2){\n                    $keys = [\n                            [['text'=>\"بستن تیکت\",'callback_data'=>\"closeTicket_$rowId\"],['text'=>\"پاسخ\",'callback_data'=>\"reply_{$rowId}\"]],\n                            [['text'=>\"آخرین پیام ها\",'callback_data'=>\"latestMsg_$rowId\"]]\n                            ];\n                }\n                else{\n                    $keys = [[['text'=>\"آخرین پیام ها\",'callback_data'=>\"latestMsg_$rowId\"]]];\n                    $rate = \"\\nرأی: \". $row['rate'];\n                }\n                \n                sendMessage(\"آیدی کاربر: $admin\\nنام کاربر: $username\\nدسته بندی: $category $rate\\n\\nموضوع: $title\\nآخرین پیام:\\n[$sentType] $lastmsg\",\n                    json_encode(['inline_keyboard'=>$keys]),\"html\");\n\n\n    \t\t\tif($current>=$cont){\n    \t\t\t    break;\n    \t\t\t}\n            }\n        }\n        \n\t\tif($allList > $cont){\n\t\t    $keys = json_encode(['inline_keyboard'=>[\n\t\t        [['text'=>\"دریافت\",'callback_data'=>\"moreTicket_{$type}_{$cont}\"]]\n\t\t        ]]);\n            sendMessage(\"موارد بیشتر\",$keys);\n\t\t}\n\t}else{\n        alert(\"تیکتی یافت نشد\");\n\t}\n}\nif(preg_match('/^closeTicket_(\\d+)/',$data,$match) and  ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $chatRowId = $match[1];\n    $stmt = $connection->prepare(\"SELECT * FROM `chats` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $chatRowId);\n    $stmt->execute();\n    $ticketInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $userId = $ticketInfo['user_id'];\n    $title = $ticketInfo['title'];\n    $category = $ticketInfo['category'];\n        \n\n    $stmt = $connection->prepare(\"UPDATE `chats` SET `state` = 2 WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $chatRowId);\n    $stmt->execute();\n    $stmt->close();\n    \n    $ticketClosed = \"[$title] <i>$category</i> \\n\\n\" . \"این تیکت بسته شد\\n به این تیکت رأی بدهید\";;\n    \n    $keys = json_encode(['inline_keyboard'=>[\n        [['text'=>\"بسیار بد 😠\",'callback_data'=>\"rate_{$chatRowId}_1\"]],\n        [['text'=>\"بد 🙁\",'callback_data'=>\"rate_{$chatRowId}_2\"]],\n        [['text'=>\"خوب 😐\",'callback_data'=>\"rate_{$chatRowId}_3\"]],\n        [['text'=>\"بسیار خوب 😃\",'callback_data'=>\"rate_{$chatRowId}_4\"]],\n        [['text'=>\"عالی 🤩\",'callback_data'=>\"rate_{$chatRowId}_5\"]]\n        ]]);\n    sendMessage($ticketClosed,$keys,'html', $userId);\n    editKeys(json_encode(['inline_keyboard'=>[\n        [['text'=>\"تیکت بسته شد\",'callback_data'=>\"wizwizch\"]]\n        ]]));\n\n}\nif(preg_match('/^latestMsg_(.*)/',$data,$match)){\n    $stmt = $connection->prepare(\"SELECT * FROM `chats_info` WHERE `chat_id` = ? ORDER BY `sent_date` DESC LIMIT 10\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $chatList = $stmt->get_result();\n    $stmt->close();\n    $output = \"\";\n    while($row = $chatList->fetch_assoc()){\n        $rowId = $row['id'];\n        $type = $row['msg_type'] == \"USER\" ?\"کاربر\":\"ادمین\";\n        $text = $row['text'];\n        if(isset(json_decode($text,true)['file_id'])) $text = \"تصویر /dlPic\" . $rowId; \n\n        $output .= \"<i>[$type]</i>\\n$text\\n\\n\";\n    }\n    sendMessage($output, null, \"html\");\n}\nif(preg_match('/^\\/dlPic(\\d+)/',$text,$match)){\n     $stmt = $connection->prepare(\"SELECT * FROM `chats_info` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $chatList = $stmt->get_result();\n    $stmt->close();\n    $output = \"\";\n    while($row = $chatList->fetch_assoc()){\n        $text = json_decode($row['text'],true);\n        $fileid = $text['file_id'];\n        $caption = $text['caption'];\n        $chatInfoId = $row['chat_id'];\n        $stmt = $connection->prepare(\"SELECT * FROM `chats` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $chatInfoId);\n        $stmt->execute();\n        $info = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        \n        $userid = $info['user_id'];\n        \n        if($userid == $from_id || $from_id == $admin || $userInfo['isAdmin'] == true) sendPhoto($fileid, $caption);\n    }\n}\nif($data == \"banUser\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage(\"😡 | کی باز شلوغی کرده آیدی عددی شو بفرس تا برم ...... آرهههه:\", $cancelKey);\n    setUser($data);\n}\nif($data==\"unbanUser\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage(\"آیدی عددیشو بفرست تا آزادش کنم\", $cancelKey);\n    setUser($data);\n}\nif($userInfo['step'] == \"banUser\" && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    if(is_numeric($text)){\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid` = ?\");\n        $stmt->bind_param(\"i\", $text);\n        $stmt->execute();\n        $usersList = $stmt->get_result();\n        $stmt->close();\n        \n        if($usersList->num_rows >0){\n            $userState = $usersList->fetch_assoc();\n            if($userState['step'] != \"banned\"){\n                $stmt = $connection->prepare(\"UPDATE `users` SET `step` = 'banned' WHERE `userid` = ?\");\n                $stmt->bind_param(\"i\", $text);\n                $stmt->execute();\n                $stmt->close();\n                \n                sendMessage(\"❌ | خب خب برید کنار که مسدودش کردم 😎😂\",$removeKeyboard);\n            }else{\n                sendMessage(\"☑️ | این کاربر که از قبل مسدود بود چیکارش داری بدبخت و 😂🤣\",$removeKeyboard);\n            }\n        }else sendMessage(\"کاربری با این آیدی یافت نشد\");\n        setUser();\n        sendMessage($mainValues['reached_main_menu'],getAdminKeys());\n    }else{\n        sendMessage($mainValues['send_only_number']);\n    }\n}\nif($data==\"mainMenuButtons\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    editText($message_id,\"مدیریت دکمه های صفحه اصلی\",getMainMenuButtonsKeys());\n}\nif(preg_match('/^delMainButton(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"DELETE FROM `setting` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n    alert(\"با موفقیت حذف شد\");\n    editText($message_id,\"مدیریت دکمه های صفحه اصلی\",getMainMenuButtonsKeys());\n}\nif($data == \"addNewMainButton\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage(\"لطفا اسم دکمه را وارد کنید\",$cancelKey);\n    setUser($data);\n}\nif($userInfo['step'] == \"addNewMainButton\" && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(!isset($update->message->text)){\n        sendMessage(\"لطفا فقط متن بفرستید\");\n        exit();\n    }\n    sendMessage(\"لطفا پاسخ دکمه را وارد کنید\");\n    setUser(\"setMainButtonAnswer\" . $text);\n}\nif(preg_match('/^setMainButtonAnswer(.*)/',$userInfo['step'],$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(!isset($update->message->text)){\n        sendMessage(\"لطفا فقط متن بفرستید\");\n        exit();\n    }\n    setUser();\n    \n    $stmt = $connection->prepare(\"INSERT INTO `setting` (`type`, `value`) VALUES (?, ?)\");\n    $btn = \"MAIN_BUTTONS\" . $match[1];\n    $stmt->bind_param(\"ss\", $btn, $text); \n    $stmt->execute();\n    $stmt->close();\n    \n    sendMessage(\"مدیریت دکمه های صفحه اصلی\",getMainMenuButtonsKeys());\n}\nif($userInfo['step'] == \"unbanUser\" && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    if(is_numeric($text)){\n        $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid` = ?\");\n        $stmt->bind_param(\"i\", $text);\n        $stmt->execute();\n        $usersList = $stmt->get_result();\n        $stmt->close();\n\n        if($usersList->num_rows >0){\n            $userState = $usersList->fetch_assoc();\n            if($userState['step'] == \"banned\"){\n                $stmt = $connection->prepare(\"UPDATE `users` SET `step` = 'none' WHERE `userid` = ?\");\n                $stmt->bind_param(\"i\", $text);\n                $stmt->execute();\n                $stmt->close();\n\n                sendMessage(\"✅ | آزاد شدم خوشحالم ننه ، ایشالا آزادی همه 😂\",$removeKeyboard);\n            }else{\n                sendMessage(\"☑️ | این کاربری که فرستادی از قبل آزاد بود 🙁\",$removeKeyboard);\n            }\n        }else sendMessage(\"کاربری با این آیدی یافت نشد\");\n        setUser();\n        sendMessage($mainValues['reached_main_menu'],getAdminKeys());\n    }else{\n        sendMessage($mainValues['send_only_number']);\n    }\n}\nif(preg_match(\"/^reply_(.*)/\",$data,$match) and  ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    setUser(\"answer_\" . $match[1]);\n    sendMessage(\"لطفا پیام خود را ارسال کنید\",$cancelKey);\n}\nif(preg_match('/^answer_(.*)/',$userInfo['step'],$match) and  $from_id ==$admin  and $text!=$buttonValues['cancel']){\n    $chatRowId = $match[1];\n    $stmt = $connection->prepare(\"SELECT * FROM `chats` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $chatRowId);\n    $stmt->execute();\n    $ticketInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $userId = $ticketInfo['user_id'];\n    $ticketTitle = $ticketInfo['title'];\n    $ticketCat = $ticketInfo['category'];\n    \n    $time = time();\n\n    \n    if(isset($text)){\n        $ticketTitle = str_replace([\"/\",\"'\",\"#\"],['\\/',\"\\'\",\"\\#\"],$ticketTitle);\n        $text = str_replace([\"/\",\"'\",\"#\"],['\\/',\"\\'\",\"\\#\"],$text);\n        $stmt = $connection->prepare(\"INSERT INTO `chats_info` (`chat_id`,`sent_date`,`msg_type`,`text`) VALUES\n                    (?,?,'ADMIN',?)\");\n        $stmt->bind_param(\"iis\", $chatRowId, $time, $text);\n        \n        sendMessage(\"\\[$ticketTitle] _{$ticketCat}_\\n\\n\" . $text,json_encode(['inline_keyboard'=>[\n            [\n                ['text'=>'پاسخ به تیکت 📝','callback_data'=>\"replySupport_$chatRowId\"],\n                ['text'=>\"بستن تیکت 🗳\",'callback_data'=>\"closeTicket_$chatRowId\"]\n                ]\n            ]]),\"MarkDown\", $userId);        \n    }else{\n        $text = json_encode(['file_id'=>$fileid, 'caption'=>$caption]);\n        $stmt = $connection->prepare(\"INSERT INTO `chats_info` (`chat_id`,`sent_date`,`msg_type`,`text`) VALUES\n                    (?,?,'ADMIN',?)\");\n        $stmt->bind_param(\"iis\", $chatRowId, $time, $text);\n        \n        $keyboard = json_encode(['inline_keyboard'=>[\n            [\n                ['text'=>'پاسخ به تیکت 📝','callback_data'=>\"replySupport_$chatRowId\"],\n                ['text'=>\"بستن تیکت 🗳\",'callback_data'=>\"closeTicket_$chatRowId\"]\n                ]\n            ]]);\n            \n        sendPhoto($fileid, \"\\[$ticketTitle] _{$ticketCat}_\\n\\n\" . $caption,$keyboard, \"MarkDown\", $userId);\n    }\n    $stmt->execute();\n    $stmt->close();\n    \n    $stmt = $connection->prepare(\"UPDATE `chats` SET `state` = 1 WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $chatRowId);\n    $stmt->execute();\n    $stmt->close();\n    \n    setUser();\n    sendMessage(\"پیام شما با موفقیت ارسال شد ✅\",$removeKeyboard);\n}\nif(preg_match('/freeTrial(\\d+)_(?<buyType>\\w+)/',$data,$match)) {\n    $id = $match[1];\n \n    if($userInfo['freetrial'] == 'used' and !($from_id == $admin) && json_decode($userInfo['discount_percent'],true)['normal'] != \"100\"){\n        alert('⚠️شما قبلا هدیه رایگان خود را دریافت کردید');\n        exit;\n    }\n    delMessage();\n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $id);\n    $stmt->execute();\n    $file_detail = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $days = $file_detail['days'];\n    $date = time();\n    $expire_microdate = floor(microtime(true) * 1000) + (864000 * $days * 100);\n    $expire_date = $date + (86400 * $days);\n    $type = $file_detail['type'];\n    $volume = $file_detail['volume'];\n    $protocol = $file_detail['protocol'];\n    $price = $file_detail['price'];\n    $server_id = $file_detail['server_id'];\n    $acount = $file_detail['acount'];\n    $inbound_id = $file_detail['inbound_id'];\n    $limitip = $file_detail['limitip'];\n    $netType = $file_detail['type'];\n    $rahgozar = $file_detail['rahgozar'];\n    $customPath = $file_detail['custom_path'];\n    $customPort = $file_detail['custom_port'];\n    $customSni = $file_detail['custom_sni'];\n    \n    $agentBought = false;\n    if($match['buyType'] == \"one\" || $match['buyType'] == \"much\"){\n        $agentBought = true;\n        \n        \n        $discounts = json_decode($userInfo['discount_percent'],true);\n        if($botState['agencyPlanDiscount']==\"on\") $discount = $discounts['plans'][$id]?? $discounts['normal'];\n        else $discount = $discounts['servers'][$server_id]?? $discounts['normal'];\n        $price -= floor($price * $discount / 100);\n    }\n    \n    if($acount == 0 and $inbound_id != 0){\n        alert($mainValues['out_of_connection_capacity']);\n        exit;\n    }\n    if($inbound_id == 0) {\n        $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $server_info = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n\n        if($server_info['ucount'] <= 0){\n            alert($mainValues['out_of_server_capacity']);\n            exit;\n        }\n    }\n    \n    $uniqid = generateRandomString(42,$protocol); \n\n    $savedinfo = file_get_contents('settings/temp.txt');\n    $savedinfo = explode('-',$savedinfo);\n    $port = $savedinfo[0] + 1;\n    $last_num = $savedinfo[1] + 1;\n\n    $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $serverInfo = $stmt->get_result()->fetch_assoc();\n    $srv_remark = $serverInfo['remark'];\n    $stmt->close();\n\n    $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $serverConfig = $stmt->get_result()->fetch_assoc();\n    $serverType = $serverConfig['type'];\n    $portType = $serverConfig['port_type'];\n    $panelUrl = $serverConfig['panel_url'];\n    $stmt->close();\n\n    if($from_id == $admin && !empty($userInfo['temp'])){\n        $remark = $userInfo['temp'];\n        setUser('','temp');\n    }else{\n        if($botState['remark'] == \"digits\"){\n            $rnd = rand(10000,99999);\n            $remark = \"{$srv_remark}-{$rnd}\";\n        }else{\n            $rnd = rand(1111,99999);\n            $remark = \"{$srv_remark}-{$from_id}-{$rnd}\";\n        }\n    }\n    \n    if($portType == \"auto\"){\n        file_put_contents('settings/temp.txt',$port.'-'.$last_num);\n    }else{\n        $port = rand(1111,65000);\n    }\n    if($inbound_id == 0){    \n        if($serverType == \"marzban\"){\n            $response = addMarzbanUser($server_id, $remark, $volume, $days, $id);\n            if(!$response->success){\n                if($response->msg == \"User already exists\"){\n                    $remark .= rand(1111,99999);\n                    $response = addMarzbanUser($server_id, $remark, $volume, $days, $id);\n                }\n            }\n        }else{\n            $response = addUser($server_id, $uniqid, $protocol, $port, $expire_microdate, $remark, $volume, $netType, 'none', $rahgozar, $id); \n            if(!$response->success){\n                if(strstr($response->msg, \"Duplicate email\")) $remark .= RandomString();\n                elseif(strstr($response->msg, \"Port already exists\")) $port = rand(1111,65000);\n\n                $response = addUser($server_id, $uniqid, $protocol, $port, $expire_microdate, $remark, $volume, $netType, 'none', $rahgozar, $id);\n            }\n        }\n    }else {\n        $response = addInboundAccount($server_id, $uniqid, $inbound_id, $expire_microdate, $remark, $volume, $limitip, null, $id); \n        if(!$response->success){\n            if(strstr($response->msg, \"Duplicate email\")) $remark .= RandomString();\n\n            $response = addInboundAccount($server_id, $uniqid, $inbound_id, $expire_microdate, $remark, $volume, $limitip, null, $id);\n        }\n    }\n    if(is_null($response)){\n        alert('❌ | 🥺 گلم ، اتصال به سرور برقرار نیست لطفا مدیر رو در جریان بزار ...');\n        exit;\n    }\n\tif($response == \"inbound not Found\"){\n        alert(\"❌ | 🥺 سطر (inbound) با آیدی $inbound_id تو این سرور وجود نداره ، مدیر رو در جریان بزار ...\");\n\t\texit;\n\t}\n\tif(!$response->success){\n        alert('❌ | 😮 وای خطا داد لطفا سریع به مدیر بگو ...');\n        sendMessage(\"خطای سرور {$serverInfo['title']}:\\n\\n\" . ($response->msg), null, null, $admin);\n        exit;\n    }\n    alert($mainValues['sending_config_to_user']);\n\tinclude 'phpqrcode/qrlib.php';\n\t\n    if($serverType == \"marzban\"){\n        $uniqid = $token = str_replace(\"/sub/\", \"\", $response->sub_link);\n        $subLink = $botState['subLinkState'] == \"on\"?$panelUrl . $response->sub_link:\"\";\n        $vraylink = [$subLink];\n        $vray_link = json_encode($response->vray_links);\n    }else{\n        $token = RandomString(30);\n        $subLink = $botState['subLinkState']==\"on\"?$botUrl . \"settings/subLink.php?token=\" . $token:\"\";\n        $vraylink = getConnectionLink($server_id, $uniqid, $protocol, $remark, $port, $netType, $inbound_id, $rahgozar, $customPath, $customPort, $customSni);\n        $vray_link = json_encode($vraylink);\n    }\n    define('IMAGE_WIDTH',540);\n    define('IMAGE_HEIGHT',540);\n    foreach($vraylink as $link){\n        $acc_text = \"\n😍 سفارش جدید شما\n📡 پروتکل: $protocol\n🔮 نام سرویس: $remark\n🔋حجم سرویس: $volume گیگ\n⏰ مدت سرویس: $days روز\n\" . ($botState['configLinkState'] != \"off\" && $serverType != \"marzban\"?\"\n💝 config : <code>$link</code>\":\"\");\nif($botState['subLinkState'] == \"on\") $acc_text .= \"\n\n🔋 Volume web: <code> $botUrl\".\"search.php?id=\".$uniqid.\"</code>\n\n\\n🌐 subscription : <code>$subLink</code>\";\n    \n        $file = RandomString().\".png\";\n        $ecc = 'L'; \n        $pixel_Size = 11;\n        $frame_Size = 0;\n        QRcode::png($link, $file, $ecc, $pixel_Size, $frame_size);\n    \taddBorderImage($file);\n    \t\n    \t\n        $backgroundImage = imagecreatefromjpeg(\"settings/QRCode.jpg\");\n        $qrImage = imagecreatefrompng($file);\n        \n        $qrSize = array('width' => imagesx($qrImage), 'height' => imagesy($qrImage));\n        imagecopy($backgroundImage, $qrImage, 300, 300 , 0, 0, $qrSize['width'], $qrSize['height']);\n        imagepng($backgroundImage, $file);\n        imagedestroy($backgroundImage);\n        imagedestroy($qrImage);\n\n        sendPhoto($botUrl . $file, $acc_text,json_encode(['inline_keyboard'=>[[['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]]]]),\"HTML\");\n        unlink($file);\n    }\n\t$stmt = $connection->prepare(\"INSERT INTO `orders_list` \n\t    (`userid`, `token`, `transid`, `fileid`, `server_id`, `inbound_id`, `remark`, `uuid`, `protocol`, `expire_date`, `link`, `amount`, `status`, `date`, `notif`, `rahgozar`, `agent_bought`)\n\t    VALUES (?, ?, '', ?, ?, ?, ?, ?, ?, ?, ?, ?,1, ?, 0, ?, ?)\");\n\t$stmt->bind_param(\"isiiisssisiiii\", $from_id, $token, $id, $server_id, $inbound_id, $remark, $uniqid, $protocol, $expire_date, $vray_link, $price, $date, $rahgozar, $agentBought);\n    $stmt->execute();\n    $order = $stmt->get_result();\n    $stmt->close();\n    \n    if($inbound_id == 0) {\n        $stmt = $connection->prepare(\"UPDATE `server_info` SET `ucount` = `ucount` - 1 WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $stmt->close();\n    }else{\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `acount` = `acount` - 1 WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $id);\n        $stmt->execute();\n        $stmt->close();\n    }\n\n    setUser('used','freetrial');    \n}\nif(preg_match('/^showMainButtonAns(\\d+)/',$data,$match)){\n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    editText($message_id,$info['value'],json_encode(['inline_keyboard'=>[\n        [['text'=>$buttonValues['back_button'],'callback_data'=>\"mainMenu\"]]\n        ]]));\n}\nif(preg_match('/^marzbanHostSettings(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id` = ?\");\n    $stmt->bind_param('i', $match[1]);\n    $stmt->execute();\n    $serverId = $stmt->get_result()->fetch_assoc()['server_id'];\n    $stmt->close();\n    \n    $hosts = getMarzbanHosts($serverId)->inbounds;\n    $networkType = array();\n    foreach($hosts as $key => $inbound){\n        $networkType[] = [['text'=>$inbound->tag, 'callback_data'=>\"selectHost{$match[1]}*_*{$inbound->protocol}*_*{$inbound->tag}\"]];\n    }\n    $networkType[] = [['text'=>$buttonValues['cancel'], 'callback_data'=>\"planDetails\" . $match[1]]];\n    $networkType = json_encode(['inline_keyboard'=>$networkType]);\n    editText($message_id, \"لطفا نوع شبکه های این پلن را انتخاب کنید\",$networkType);\n}\nif(preg_match('/^selectHost(?<planId>\\d+)\\*_\\*(?<protocol>.+)\\*_\\*(?<tag>.*)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $saveBtn = \"ذخیره ✅\";\n    unset($markup[count($markup)-1]);\n    if($markup[count($markup)-1][0]['text'] == $saveBtn) unset($markup[count($markup)-1]);\n    foreach($markup as $key => $keyboard){\n        if($keyboard[0]['callback_data'] == $data) $markup[$key][0]['text'] = $keyboard['0']['text'] == $match['tag'] . \" ✅\" ? $match['tag']:$match['tag'] . \" ✅\";\n    }\n        \n    if(strstr(json_encode($markup,JSON_UNESCAPED_UNICODE), \"✅\") && !strstr(json_encode($markup,JSON_UNESCAPED_UNICODE), $saveBtn)){\n        $markup[] = [['text'=>$saveBtn,'callback_data'=>\"saveServerHost\" . $match['planId']]];\n    }\n    $markup[] = [['text'=>$buttonValues['cancel'], 'callback_data'=>\"planDetails\" . $match['planId']]];\n    $markup = json_encode(['inline_keyboard'=>array_values($markup)]);\n    editKeys($markup);\n}\nif(preg_match('/^saveServerHost(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $inbounds = array();\n    $proxies = array();\n    unset($markup[count($markup)-1]);\n    unset($markup[count($markup)-1]);\n    \n    foreach($markup as $key=>$value){\n        $tag = trim(str_replace(\"✅\", \"\", $value[0]['text'], $state));\n        if($state > 0){\n            preg_match('/^selectHost(?<serverId>\\d+)\\*_\\*(?<protocol>.+)\\*_\\*(?<tag>.*)/',$value[0]['callback_data'],$info);\n            $inbounds[$info['protocol']][] = $tag;\n            $proxies[$info['protocol']] = array();\n\n            if($info['protocol'] == \"vless\"){\n                $proxies[\"vless\"] = [\"flow\" => \"\"];\n            }\n            elseif($info['protocol'] == \"shadowsocks\"){\n                $proxies[\"shadowsocks\"] = ['method' => \"chacha20-ietf-poly1305\"];\n            }\n        }\n    }\n    $info = json_encode(['inbounds'=>$inbounds, 'proxies'=>$proxies]);\n    $stmt = $connection->prepare(\"UPDATE `server_plans` SET `custom_sni`=? WHERE `id`=?\");\n    $stmt->bind_param(\"si\", $info, $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n    editText($message_id, \"با موفقیت ذخیره شد\",getPlanDetailsKeys($match[1]));\n    setUser();\n}\nif($data==\"rejectedAgentList\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $keys = getRejectedAgentList();\n    if($keys != null){\n        editText($message_id,\"لیست کاربران رد شده از نمایندگی\",$keys);\n    }else alert(\"کاربری یافت نشد\");\n}\nif(preg_match('/^releaseRejectedAgent(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"UPDATE `users` SET `is_agent` = 0 WHERE `userid` = ?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n    alert($mainValues['saved_successfuly']);\n    $keys = getRejectedAgentList();\n    if($keys != null){\n        editText($message_id,\"لیست کاربران رد شده از نمایندگی\",$keys);\n    }else editText($message_id,\"کاربری یافت نشد\",json_encode(['inline_keyboard'=>[[['text'=>$buttonValues['back_to_main'],'callback_data'=>\"managePanel\"]]]]));\n}\nif($data==\"showUUIDLeft\" && ($botState['searchState']==\"on\" || $from_id== $admin)){\n    delMessage();\n    sendMessage($mainValues['send_config_uuid'],$cancelKey);\n    setUser('showAccount');\n}\nif($userInfo['step'] == \"showAccount\" and $text != $buttonValues['cancel']){\n    if(preg_match('/^vmess:\\/\\/(.*)/',$text,$match)){\n        $jsonDecode = json_decode(base64_decode($match[1]),true);\n        $text = $jsonDecode['id'];\n        $marzbanText = $match[1];\n    }elseif(preg_match('/^vless:\\/\\/(.*?)\\@/',$text,$match)){\n        $marzbanText = $text = $match[1];\n    }elseif(preg_match('/^trojan:\\/\\/(.*?)\\@/',$text,$match)){\n        $marzbanText = $text = $match[1];\n    }elseif(!preg_match('/[a-f0-9]{8}\\-[a-f0-9]{4}\\-4[a-f0-9]{3}\\-(8|9|a|b)[a-f0-9]{3}\\-[a-f0-9]{12}/', $text)){\n        sendMessage($mainValues['not_correct_text']);\n        exit();\n    }\n    $text = htmlspecialchars(stripslashes(trim($text)));\n    sendMessage($mainValues['please_wait_message'], $removeKeyboard);\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_config`\");\n    $stmt->execute();\n    $serversList = $stmt->get_result();\n    $stmt->close();\n    $found = false; \n    $isMarzban = false;\n    while($row = $serversList->fetch_assoc()){\n        $serverId = $row['id'];\n        $serverType = $row['type'];\n        \n        if($serverType == \"marzban\"){\n            $usersList = getMarzbanJson($serverId)->users;\n            if(strstr(json_encode($usersList, JSON_UNESCAPED_UNICODE), $marzbanText) && !empty($marzbanText)){\n                $found = true;\n                $isMarzban = true;\n                foreach($usersList as $key => $config){\n                    if(strstr(json_encode($config->links, JSON_UNESCAPED_UNICODE), $marzbanText)){\n                \t    $remark = $config->username;\n                        $total = $config->data_limit!=0?sumerize($config->data_limit):\"نامحدود\";\n                        $totalUsed = sumerize($config->used_traffic);\n                        $state = $config->status == \"active\"?$buttonValues['active']:$buttonValues['deactive'];\n                        $expiryTime = $config->expire != 0?jdate(\"Y-m-d H:i:s\",$config->expire):\"نامحدود\";\n                        $leftMb = $config->data_limit!=0?$config->data_limit - $config->used_traffic:\"نامحدود\";\n                        \n                        if(is_numeric($leftMb)){\n                            if($leftMb<0) $leftMb = 0;\n                            else $leftMb = sumerize($leftMb);\n                        }\n                        \n                        $expiryDay = $config->expire != 0?\n                            floor(\n                                ($config->expire - time())/(60 * 60 * 24)\n                                ):\n                                \"نامحدود\";    \n                        if(is_numeric($expiryDay)){\n                            if($expiryDay<0) $expiryDay = 0;\n                        }\n                \t    $configLocation = [\"remark\" => $remark ,\"uuid\" =>$text, \"marzban\"=>true];\n                        break;\n                    }\n                }\n                break;\n            }\n        }else{\n            $response = getJson($serverId);\n            if($response->success){\n                if(strstr(json_encode($response->obj), $text)){\n                    $found = true;\n                    $list = $response->obj;\n                    if(!isset($list[0]->clientStats)){\n                        foreach($list as $keys=>$packageInfo){\n                        \tif(strstr($packageInfo->settings, $text)){\n                        \t    $configLocation = [\"remark\"=> $packageInfo->remark, \"uuid\" =>$text];\n                        \t    $remark = $packageInfo->remark;\n                                $upload = sumerize($packageInfo->up);\n                                $download = sumerize($packageInfo->down);\n                                $state = $packageInfo->enable == true?$buttonValues['active']:$buttonValues['deactive'];\n                                $totalUsed = sumerize($packageInfo->up + $packageInfo->down);\n                                $total = $packageInfo->total!=0?sumerize($packageInfo->total):\"نامحدود\";\n                                $expiryTime = $packageInfo->expiryTime != 0?jdate(\"Y-m-d H:i:s\",substr($packageInfo->expiryTime,0,-3)):\"نامحدود\";\n                                $leftMb = $packageInfo->total!=0?sumerize($packageInfo->total - $packageInfo->up - $packageInfo->down):\"نامحدود\";\n                                $expiryDay = $packageInfo->expiryTime != 0?\n                                    floor(\n                                        (substr($packageInfo->expiryTime,0,-3)-time())/(60 * 60 * 24))\n                                        :\n                                        \"نامحدود\";\n                                if(is_numeric($expiryDay)){\n                                    if($expiryDay<0) $expiryDay = 0;\n                                }\n                                break;\n                        \t}\n                        }\n                    }\n                    else{\n                        $keys = -1;\n                        $settings = array_column($list,'settings');\n                        foreach($settings as $key => $value){\n                        \tif(strstr($value, $text)){\n                        \t\t$keys = $key;\n                        \t\tbreak;\n                        \t}\n                        }\n                        if($keys == -1){\n                            $found = false;\n                            break;\n                        }\n                        $clientsSettings = json_decode($list[$keys]->settings,true)['clients'];\n                        if(!is_array($clientsSettings)){\n                            sendMessage(\"با عرض پوزش، متأسفانه مشکلی رخ داده است، لطفا مجدد اقدام کنید\");\n                            exit();\n                        }\n                        $settingsId = array_column($clientsSettings,'id');\n                        $settingKey = array_search($text,$settingsId);\n                        \n                        if(!isset($clientsSettings[$settingKey]['email'])){\n                            $packageInfo = $list[$keys];\n                    \t    $configLocation = [\"remark\" => $packageInfo->remark ,\"uuid\" =>$text];\n                    \t    $remark = $packageInfo->remark;\n                            $upload = sumerize($packageInfo->up);\n                            $download = sumerize($packageInfo->down);\n                            $state = $packageInfo->enable == true?$buttonValues['active']:$buttonValues['deactive'];\n                            $totalUsed = sumerize($packageInfo->up + $packageInfo->down);\n                            $total = $packageInfo->total!=0?sumerize($packageInfo->total):\"نامحدود\";\n                            $expiryTime = $packageInfo->expiryTime != 0?jdate(\"Y-m-d H:i:s\",substr($packageInfo->expiryTime,0,-3)):\"نامحدود\";\n                            $leftMb = $packageInfo->total!=0?sumerize($packageInfo->total - $packageInfo->up - $packageInfo->down):\"نامحدود\";\n                            if(is_numeric($leftMb)){\n                                if($leftMb<0){\n                                    $leftMb = 0;\n                                }else{\n                                    $leftMb = sumerize($packageInfo->total - $packageInfo->up - $packageInfo->down);\n                                }\n                            }\n    \n                            \n                            $expiryDay = $packageInfo->expiryTime != 0?\n                                floor(\n                                    (substr($packageInfo->expiryTime,0,-3)-time())/(60 * 60 * 24)\n                                    ):\n                                    \"نامحدود\";    \n                            if(is_numeric($expiryDay)){\n                                if($expiryDay<0) $expiryDay = 0;\n                            }\n                        }else{\n                            $email = $clientsSettings[$settingKey]['email'];\n                            $clientState = $list[$keys]->clientStats;\n                            $emails = array_column($clientState,'email');\n                            $emailKey = array_search($email,$emails);                    \n                 \n                            // if($clientState[$emailKey]->total != 0 || $clientState[$emailKey]->up != 0  ||  $clientState[$emailKey]->down != 0 || $clientState[$emailKey]->expiryTime != 0){\n                            if(count($clientState) > 1){\n                        \t    $configLocation = [\"id\" => $list[$keys]->id, \"remark\"=>$email, \"uuid\"=>$text];\n                                $upload = sumerize($clientState[$emailKey]->up);\n                                $download = sumerize($clientState[$emailKey]->down);\n                                $total = $clientState[$emailKey]->total==0 && $list[$keys]->total !=0?$list[$keys]->total:$clientState[$emailKey]->total;\n                                $leftMb = $total!=0?($total - $clientState[$emailKey]->up - $clientState[$emailKey]->down):\"نامحدود\";\n                                if(is_numeric($leftMb)){\n                                    if($leftMb<0){\n                                        $leftMb = 0;\n                                    }else{\n                                        $leftMb = sumerize($total - $clientState[$emailKey]->up - $clientState[$emailKey]->down);\n                                    }\n                                }\n                                $totalUsed = sumerize($clientState[$emailKey]->up + $clientState[$emailKey]->down);\n                                $total = $total!=0?sumerize($total):\"نامحدود\";\n                                $expTime = $clientState[$emailKey]->expiryTime == 0 && $list[$keys]->expiryTime?$list[$keys]->expiryTime:$clientState[$emailKey]->expiryTime;\n                                $expiryTime = $expTime != 0?jdate(\"Y-m-d H:i:s\",substr($expTime,0,-3)):\"نامحدود\";\n                                $expiryDay = $expTime != 0?\n                                    floor(\n                                        ((substr($expTime,0,-3)-time())/(60 * 60 * 24))\n                                        ):\n                                        \"نامحدود\";\n                                if(is_numeric($expiryDay)){\n                                    if($expiryDay<0) $expiryDay = 0;\n                                }\n                                $state = $clientState[$emailKey]->enable == true?$buttonValues['active']:$buttonValues['deactive'];\n                                $remark = $email;\n                            }\n                            else{\n                                $clientUpload = $clientState[$emailKey]->up;\n                                $clientDownload = $clientState[$emailKey]->down;\n                                $clientTotal = $clientState[$emailKey]->total;\n                                $clientExpTime = $clientState[$emailKey]->expiryTime;\n                                \n                                $up = $list[$keys]->up;\n                                $down = $list[$keys]->down;\n                                $total = $list[$keys]->total;\n                                $expiry = $list[$keys]->expiryTime;\n                                \n                                if(($clientTotal != 0 || $clientTotal != null) && ($clientExpTime != 0 || $clientExpTime != null)){\n                                    $up = $clientUpload;\n                                    $down = $clientDownload;\n                                    $total = $clientTotal;\n                                    $expiry = $clientExpTime;\n                                }\n    \n                                $upload = sumerize($up);\n                                $download = sumerize($down);\n                                $configLocation = [\"uuid\" => $text, \"remark\"=>$list[$keys]->remark];\n                                $leftMb = $total!=0?($total - $up - $down):\"نامحدود\";\n                                if(is_numeric($leftMb)){\n                                    if($leftMb<0){\n                                        $leftMb = 0;\n                                    }else{\n                                        $leftMb = sumerize($total - $up - $down);\n                                    }\n                                }\n                                $totalUsed = sumerize($up + $down);\n                                $total = $total!=0?sumerize($total):\"نامحدود\";\n                                \n                                \n                                $expiryTime = $expiry != 0?jdate(\"Y-m-d H:i:s\",substr($expiry,0,-3)):\"نامحدود\";\n                                $expiryDay = $expiry != 0?\n                                    floor(\n                                        ((substr($expiry,0,-3)-time())/(60 * 60 * 24))\n                                        ):\n                                        \"نامحدود\";\n                                if(is_numeric($expiryDay)){\n                                    if($expiryDay<0) $expiryDay = 0;\n                                }\n                                $state = $list[$keys]->enable == true?$buttonValues['active']:$buttonValues['deactive'];\n                                $remark = $list[$keys]->remark;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n    }\n    if(!$found){\n         sendMessage(\"ای وای ، اطلاعاتت اشتباهه 😔\",$cancelKey);\n    }else{\n        setUser();\n        $keys = json_encode(['inline_keyboard'=>array_merge([\n        [\n            ['text'=>$state??\" \",'callback_data'=>\"wizwizch\"],\n            ['text'=>\"🔘 وضعیت اکانت 🔘\",'callback_data'=>\"wizwizch\"],\n            ],\n        [\n    \t\t['text'=>$remark??\" \",'callback_data'=>\"wizwizch\"],\n            ['text'=>\"« نام اکانت »\",'callback_data'=>\"wizwizch\"],\n            ]],(!$isMarzban?[\n        [\n            ['text'=>$upload?? \" \",'callback_data'=>\"wizwizch\"],\n            ['text'=>\"√ آپلود √\",'callback_data'=>\"wizwizch\"],\n            ],\n        [\n            ['text'=>$download??\" \",'callback_data'=>\"wizwizch\"],\n            ['text'=>\"√ دانلود √\",'callback_data'=>\"wizwizch\"],\n            ]]:[\n        [\n            ['text'=>$totalUsed?? \" \",'callback_data'=>\"wizwizch\"],\n            ['text'=>\"√ آپلود + دانلود √\",'callback_data'=>\"wizwizch\"],\n            ]]),[\n        [\n            ['text'=>$total??\" \",'callback_data'=>\"wizwizch\"],\n            ['text'=>\"† حجم کلی †\",'callback_data'=>\"wizwizch\"],\n            ],\n        [\n            ['text'=>$leftMb??\" \",'callback_data'=>\"wizwizch\"],\n            ['text'=>\"~ حجم باقیمانده ~\",'callback_data'=>\"wizwizch\"],\n            ],\n        [\n            ['text'=>$expiryTime??\" \",'callback_data'=>\"wizwizch\"],\n            ['text'=>\"تاریخ اتمام\",'callback_data'=>\"wizwizch\"],\n            ],\n        [\n            ['text'=>$expiryDay??\" \",'callback_data'=>\"wizwizch\"],\n            ['text'=>\"تعداد روز باقیمانده\",'callback_data'=>\"wizwizch\"],\n            ],\n        (($botState['renewAccountState'] == \"on\" && $botState['updateConfigLinkState'] == \"on\")?\n            [\n                ['text'=>$buttonValues['renew_config'],'callback_data'=>\"sConfigRenew\" . $serverId],\n                ['text'=>$buttonValues['update_config_connection'],'callback_data'=>\"sConfigUpdate\" . $serverId],\n                ]:[]\n                ),\n        (($botState['renewAccountState'] != \"on\" && $botState['updateConfigLinkState'] == \"on\")?\n            [\n                ['text'=>$buttonValues['update_config_connection'],'callback_data'=>\"sConfigUpdate\" . $serverId]\n                ]:[]\n                ),\n        (($botState['renewAccountState'] == \"on\" && $botState['updateConfigLinkState'] != \"on\")?\n            [\n                ['text'=>$buttonValues['renew_config'],'callback_data'=>\"sConfigRenew\" . $serverId]\n                ]:[]\n                ),\n        [['text'=>\"صفحه اصلی\",'callback_data'=>\"mainMenu\"]]\n        ])]);\n        setUser(json_encode($configLocation,488), \"temp\");\n        sendMessage(\"🔰مشخصات حسابت:\",$keys,\"MarkDown\");\n    }\n}\n\nif(preg_match('/sConfigRenew(\\d+)/', $data,$match)){\n    if($botState['sellState']==\"off\" && $from_id !=$admin){ alert($mainValues['bot_is_updating']); exit(); }\n    \n    alert($mainValues['please_wait_message']);\n    $server_id = $match[1];\n    if(empty($userInfo['temp'])){delMessage(); exit();}\n    \n    $configInfo = json_decode($userInfo['temp'],true);\n    $inboundId = $configInfo['id']??0;\n    $uuid = $configInfo['uuid'];\n    $remark = $configInfo['remark'];\n\n    if(isset($configInfo['marzban'])){\n        $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `server_id` = ? AND `custom_sni` LIKE '%inbounds%' AND `active` = 1 AND `price` != 0\");\n        $stmt->bind_param(\"i\", $server_id);\n    }else{\n        $response = getJson($server_id)->obj;\n        if($response == null){delMessage(); exit();}\n        if($inboundId == 0){\n            foreach($response as $row){\n                $clients = json_decode($row->settings)->clients;\n                if($clients[0]->id == $uuid || $clients[0]->password == $uuid) {\n                    $port = $row->port;\n                    $protocol = $row->protocol;\n                    $configReality = json_decode($row->streamSettings)->security == \"reality\"?\"true\":\"false\";\n                    break;\n                }\n            }\n            $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `server_id` = ? AND `inbound_id` = 0 AND `protocol` = ? AND `active` = 1 AND `price` != 0 AND `rahgozar` = 0\");\n        }else{\n            foreach($response as $row){\n                if($row->id == $inboundId) {\n                    $port = $row->port;\n                    $protocol = $row->protocol;\n                    $configReality = json_decode($row->streamSettings)->security == \"reality\"?\"true\":\"false\";\n                    break;\n                }\n            }\n            $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `server_id` = ? AND `inbound_id` != 0 AND `protocol` = ? AND `active` = 1 AND `price` != 0 AND `rahgozar` = 0\");\n        }\n        $stmt->bind_param(\"is\", $server_id, $protocol);\n    }\n    \n    $stmt->execute();\n    $plans = $stmt->get_result();\n    $stmt->close();\n    if($plans->num_rows > 0){\n        $keyboard = [];\n        while($file = $plans->fetch_assoc()){ \n            $add = false;\n            \n            if(isset($configInfo['marzban'])) $add = true;\n            else{\n                $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id` = ?\");\n                $stmt->bind_param(\"i\", $server_id);\n                $stmt->execute();\n                $isReality = $stmt->get_result()->fetch_assoc()['reality'];\n                $stmt->close();\n                \n                if($isReality == $configReality) $add = true;\n            }\n            \n            if($add){\n                $id = $file['id'];\n                $name = $file['title'];\n                $price = $file['price'];\n                $price = ($price == 0) ? 'رایگان' : number_format($price).' تومان ';\n                $keyboard[] = ['text' => \"$name - $price\", 'callback_data' => \"sConfigRenewPlan{$id}_{$inboundId}\"];\n            }\n        }\n        $keyboard[] = ['text' => $buttonValues['back_to_main'], 'callback_data' => \"mainMenu\"];\n        $keyboard = array_chunk($keyboard,1);\n        editText($message_id, \"3️⃣ مرحله سه:\n\nیکی از پلن هارو انتخاب کن و برو برای پرداختش 🤲 🕋\", json_encode(['inline_keyboard'=>$keyboard]));\n    }else sendMessage(\"💡پلنی در این دسته بندی وجود ندارد \");\n}\nif(preg_match('/sConfigRenewPlan(\\d+)_(\\d+)/',$data, $match) && ($botState['sellState']==\"on\" ||$from_id ==$admin) && $text != $buttonValues['cancel']){\n    $id = $match[1];\n\t$inbound_id = $match[2];\n\n\n    if(empty($userInfo['temp'])){delMessage(); exit();}\n    \n    $configInfo = json_decode($userInfo['temp'],true);\n    $uuid = $configInfo['uuid'];\n    $remark = $configInfo['remark'];\n\n    alert($mainValues['receving_information']);\n    delMessage();\n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=? and `active`=1\");\n    $stmt->bind_param(\"i\", $id);\n    $stmt->execute();\n    $respd = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $respd['catid']);\n    $stmt->execute();\n    $catname = $stmt->get_result()->fetch_assoc()['title'];\n    $stmt->close();\n    \n    $name = $catname.\" \".$respd['title'];\n    $desc = $respd['descr'];\n\t$sid = $respd['server_id'];\n\t$keyboard = array();\n    $price =  $respd['price'];\n    $token = base64_encode(\"{$from_id}.{$id}\");\n    \n    $hash_id = RandomString();\n    $stmt = $connection->prepare(\"DELETE FROM `pays` WHERE `user_id` = ? AND `type` = 'RENEW_SCONFIG' AND `state` = 'pending'\");\n    $stmt->bind_param(\"i\", $from_id);\n    $stmt->execute();\n    $stmt->close();\n\n    setUser('', 'temp');\n    $description = json_encode([\"uuid\"=>$uuid, \"remark\"=>$remark, 'marzban' => isset($configInfo['marzban'])],488);\n    $time = time();\n    $stmt = $connection->prepare(\"INSERT INTO `pays` (`hash_id`, `description`, `user_id`, `type`, `plan_id`, `volume`, `day`, `price`, `request_date`, `state`)\n                                VALUES (?, ?, ?, 'RENEW_SCONFIG', ?, ?, '0', ?, ?, 'pending')\");\n    $stmt->bind_param(\"ssiiiii\", $hash_id, $description, $from_id, $id, $inbound_id, $price, $time);\n    $stmt->execute();\n    $rowId = $stmt->insert_id;\n    $stmt->close();\n\n    \n    if($botState['cartToCartState'] == \"on\") $keyboard[] = [['text' => $buttonValues['cart_to_cart'],  'callback_data' => \"payWithCartToCart$hash_id\"]];\n    if($botState['nowPaymentOther'] == \"on\") $keyboard[] = [['text' => $buttonValues['now_payment_gateway'],  'url' => $botUrl . \"pay/?nowpayment&hash_id=\" . $hash_id]];\n    if($botState['zarinpal'] == \"on\") $keyboard[] = [['text' => $buttonValues['zarinpal_gateway'],  'url' => $botUrl . \"pay/?zarinpal&hash_id=\" . $hash_id]];\n    if($botState['nextpay'] == \"on\") $keyboard[] = [['text' => $buttonValues['nextpay_gateway'],  'url' => $botUrl . \"pay/?nextpay&hash_id=\" . $hash_id]];\n    if($botState['weSwapState'] == \"on\") $keyboard[] = [['text' => $buttonValues['weswap_gateway'],  'callback_data' => \"payWithWeSwap\" . $hash_id]];\n    if($botState['walletState'] == \"on\") $keyboard[] = [['text' => $buttonValues['pay_with_wallet'],  'callback_data' => \"payWithWallet$hash_id\"]];\n    if($botState['tronWallet'] == \"on\") $keyboard[] = [['text' => $buttonValues['tron_gateway'],  'callback_data' => \"payWithTronWallet\" . $hash_id]];\n\n\t$keyboard[] = [['text' => $buttonValues['back_to_main'], 'callback_data' => \"mainMenu\"]];\n    sendMessage(str_replace(['PLAN-NAME', 'PRICE', 'DESCRIPTION'], [$name, $price, $desc], $mainValues['buy_subscription_detail']), json_encode(['inline_keyboard'=>$keyboard]), \"HTML\");\n}\nif(preg_match('/sConfigUpdate(\\d+)/', $data,$match)){\n    alert($mainValues['please_wait_message']);\n    $server_id = $match[1];\n    if(empty($userInfo['temp'])){delMessage(); exit();}\n    \n    $configInfo = json_decode($userInfo['temp'],true);\n    $inboundId = $configInfo['id']??0;\n    $uuid = $configInfo['uuid'];\n    $remark = $configInfo['remark'];\n\n\n    if(isset($configInfo['marzban'])){\n        $info = getMarzbanUserInfo($server_id, $remark);\n        $vraylink = $info->links;\n    }else{\n        $response = getJson($server_id)->obj;\n        if($response == null){delMessage(); exit();}\n        \n        if($inboundId == 0){\n            foreach($response as $row){\n                $clients = json_decode($row->settings)->clients;\n                if($clients[0]->id == $uuid || $clients[0]->password == $uuid) {\n                    $port = $row->port;\n                    $protocol = $row->protocol;\n                    $netType = json_decode($row->streamSettings)->network;\n                    break;\n                }\n            }\n        }else{\n            foreach($response as $row){\n                if($row->id == $inboundId) {\n                    $port = $row->port;\n                    $protocol = $row->protocol;\n                    $netType = json_decode($row->streamSettings)->network;\n                    break;\n                }\n            }\n        }\n        \n        if($uuid == null){delMessage(); exit();}\n        $vraylink = getConnectionLink($server_id, $uuid, $protocol, $remark, $port, $netType, $inboundId);\n    }\n    \n    if($vraylink == null){delMessage(); exit();}\n    include 'phpqrcode/qrlib.php';  \n    define('IMAGE_WIDTH',540);\n    define('IMAGE_HEIGHT',540);\n    foreach($vraylink as $vray_link){\n        $acc_text = $botState['configLinkState'] != \"off\"?\"<code>$vray_link</code>\":\".\";\n    \n        $ecc = 'L';\n        $pixel_Size = 11;\n        $frame_Size = 0;\n        \n        $file = RandomString() .\".png\";\n        QRcode::png($vray_link, $file, $ecc, $pixel_Size, $frame_Size);\n    \taddBorderImage($file);\n    \t\n        $backgroundImage = imagecreatefromjpeg(\"settings/QRCode.jpg\");\n        $qrImage = imagecreatefrompng($file);\n        \n        $qrSize = array('width' => imagesx($qrImage), 'height' => imagesy($qrImage));\n        imagecopy($backgroundImage, $qrImage, 300, 300 , 0, 0, $qrSize['width'], $qrSize['height']);\n        imagepng($backgroundImage, $file);\n        imagedestroy($backgroundImage);\n        imagedestroy($qrImage);\n\n        sendPhoto($botUrl . $file, $acc_text,null,\"HTML\");\n        unlink($file);\n    }\n}\n\nif (($data == 'addNewPlan' || $data==\"addNewRahgozarPlan\" || $data == \"addNewMarzbanPlan\") and (($from_id == $admin || $userInfo['isAdmin'] == true))){\n    setUser($data);\n    $stmt = $connection->prepare(\"DELETE FROM `server_plans` WHERE `active`=0\");\n    $stmt->execute();\n    $stmt->close();\n    if($data==\"addNewPlan\" || $data == \"addNewMarzbanPlan\"){\n        $sql = \"INSERT INTO `server_plans` (`fileid`, `catid`, `server_id`, `inbound_id`, `acount`, `limitip`, `title`, `protocol`, `days`, `volume`, `type`, `price`, `descr`, `pic`, `active`, `step`, `date`)\n                                            VALUES ('', 0,0,0,0, 1, '', '', 0, 0, '', 0, '', '',0,1, ?);\";\n    }elseif($data==\"addNewRahgozarPlan\"){\n        $sql = \"INSERT INTO `server_plans` (`fileid`, `catid`, `server_id`, `inbound_id`, `acount`, `limitip`, `title`, `protocol`, `days`, `volume`, `type`, `price`, `descr`, `pic`, `active`, `step`, `date`, `rahgozar`)\n                    VALUES ('', 0,0,0,0, 1, '', '', 0, 0, '', 0, '', '',0,1, ?, 1);\";\n    }\n    $stmt = $connection->prepare($sql);\n    $stmt->bind_param(\"i\", $time);\n    $stmt->execute();\n    $stmt->close();\n    delMessage();\n    $msg = '❗️یه عنوان برا پلن انتخاب کن:';\n    sendMessage($msg,$cancelKey);\n    exit;\n}\nif(preg_match('/(addNewRahgozarPlan|addNewPlan|addNewMarzbanPlan)/',$userInfo['step']) and $text!=$buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $catkey = [];\n    $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `parent` =0 and `active`=1\");\n    $stmt->execute();\n    $cats = $stmt->get_result();\n    $stmt->close();\n\n    while ($cat = $cats->fetch_assoc()){\n        $id = $cat['id'];\n        $name = $cat['title'];\n        $catkey[] = [\"$id - $name\"];\n    }\n    $catkey[] = [$buttonValues['cancel']];\n\n    $step = checkStep('server_plans');\n\n    if($step==1 and $text!=$buttonValues['cancel']){\n        $msg = '🔰 لطفا قیمت پلن رو به تومان وارد کنید!';\n        if(strlen($text)>1){\n            $stmt = $connection->prepare(\"UPDATE `server_plans` SET `title`=?,`step`=2 WHERE `active`=0 and `step`=1\");\n            $stmt->bind_param(\"s\", $text);\n            $stmt->execute();\n            $stmt->close();\n            sendMessage($msg,$cancelKey);\n        }\n    } \n    if($step==2 and $text!=$buttonValues['cancel']){\n        $msg = '🔰لطفا یه دسته از لیست زیر برا پلن انتخاب کن ';\n        if(is_numeric($text)){\n            $stmt = $connection->prepare(\"UPDATE `server_plans` SET `price`=?,`step`=3 WHERE `active`=0\");\n            $stmt->bind_param(\"s\", $text);\n            $stmt->execute();\n            $stmt->close();\n            sendMessage($msg,json_encode(['keyboard'=>$catkey,'resize_keyboard'=>true]));\n        }else{\n            $msg = '‼️ لطفا یک مقدار عددی وارد کنید';\n            sendMessage($msg,$cancelKey);\n        }\n    } \n    if($step==3 and $text!=$buttonValues['cancel']){\n        $srvkey = [];\n\n        $stmt = $connection->prepare(\"SELECT `id` FROM `server_config` WHERE `type` = 'marzban'\");\n        $stmt->execute();\n        $info = $stmt->get_result()->fetch_all();\n        $stmt->close();\n        \n        \n        \n        $marzbanList = array_column($info, 0); \n        if(count($marzbanList) > 0) $condition  = \" AND `id` \" .($userInfo['step'] == \"addNewMarzbanPlan\"?\"IN\":\"NOT IN\") . \" (\" . implode(\", \", $marzbanList) . \")\";\n        else $condition = \"\";\n\n\n        $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `active`=1 $condition\");\n        $stmt->execute();\n        \n        $srvs = $stmt->get_result();\n        $stmt->close();\n        sendMessage($mainValues['please_wait_message'],$cancelKey);\n        while($srv = $srvs->fetch_assoc()){\n            $id = $srv['id'];\n            $title = $srv['title'];\n            $srvkey[] = ['text' => \"$title\", 'callback_data' => \"selectNewPlanServer$id\"];\n        }\n        $srvkey = array_chunk($srvkey,2);\n        sendMessage(\"لطفا یکی از سرورها رو انتخاب کن 👇 \", json_encode([\n                'inline_keyboard' => $srvkey]), \"HTML\");\n        $inarr = 0;\n        foreach ($catkey as $op) {\n            if (in_array($text, $op) and $text != $buttonValues['cancel']) {\n                $inarr = 1;\n            }\n        }\n        if( $inarr==1 ){\n            $input = explode(' - ',$text);\n            $catid = $input[0];\n            $stmt = $connection->prepare(\"UPDATE `server_plans` SET `catid`=?,`step`=50 WHERE `active`=0\");\n            $stmt->bind_param(\"i\", $catid);\n            $stmt->execute();\n            $stmt->close();\n\n            sendMessage($msg,$cancelKey);\n        }else{\n            $msg = '‼️ لطفا فقط یکی از گزینه های پیشنهادی زیر را انتخاب کنید';\n            sendMessage($msg,$catkey);\n        }\n    } \n    if($step==50 and $text!=$buttonValues['cancel'] and preg_match('/selectNewPlanServer(\\d+)/', $data,$match)){\n        $newStep = $userInfo['step'] == \"addNewMarzbanPlan\"?53:51;\n        \n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `server_id`=?,`step`=? WHERE `active`=0\");\n        $stmt->bind_param(\"ii\", $match[1], $newStep);\n        $stmt->execute();\n        $stmt->close();\n\n        $keys = json_encode(['inline_keyboard'=>[\n            [['text'=>\"🎖پورت اختصاصی\",'callback_data'=>\"withSpecificPort\"]],\n            [['text'=>\"🎗پورت اشتراکی\",'callback_data'=>\"withSharedPort\"]]\n            ]]);\n        if($userInfo['step'] != \"addNewMarzbanPlan\") editText($message_id, \"لطفا نوعیت پورت پنل رو انتخاب کنید\", $keys);\n        else editText($message_id, \"📅 | لطفا تعداد روز های اعتبار این پلن را وارد کنید:\");\n    }\n    if($step==51 and $text!=$buttonValues['cancel'] and preg_match('/^with(Specific|Shared)Port/',$data,$match)){\n        if($userInfo['step'] == \"addNewRahgozarPlan\") $msg =  \"📡 | لطفا پروتکل پلن مورد نظر را وارد کنید (vless | vmess)\";\n        else $msg =  \"📡 | لطفا پروتکل پلن مورد نظر را وارد کنید (vless | vmess | trojan)\";\n        editText($message_id,$msg);\n        if($match[1] == \"Shared\"){\n            $stmt = $connection->prepare(\"UPDATE `server_plans` SET `step`=60 WHERE `active`=0\");\n            $stmt->execute();\n            $stmt->close();\n        }\n        elseif($match[1] == \"Specific\"){\n            $stmt = $connection->prepare(\"UPDATE server_plans SET step=52 WHERE active=0\");\n            $stmt->execute();\n            $stmt->close();\n        }\n    }\n    if($step==60 and $text!=$buttonValues['cancel']){\n        if($text != \"vless\" && $text != \"vmess\" && $text != \"trojan\" && $userInfo['step'] == \"addNewPlan\"){\n            sendMessage(\"لطفا فقط پروتکل های vless و vmess را وارد کنید\",$cancelKey);\n            exit();\n        }\n        elseif($text != \"vless\" && $text != \"vmess\" && $userInfo['step'] == \"addNewRahgozarPlan\"){\n            sendMessage(\"لطفا فقط پروتکل های vless و vmess را وارد کنید\",$cancelKey);\n            exit();\n        }\n        \n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `protocol`=?,`step`=61 WHERE `active`=0\");\n        $stmt->bind_param(\"s\", $text);\n        $stmt->execute();\n        $stmt->close();\n        sendMessage(\"📅 | لطفا تعداد روز های اعتبار این پلن را وارد کنید:\");\n    }\n    if($step==61 and $text!=$buttonValues['cancel']){\n        if(!is_numeric($text)){\n            sendMessage($mainValues['send_only_number']);\n            exit();\n        }\n        \n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `days`=?,`step`=62 WHERE `active`=0\");\n        $stmt->bind_param(\"i\", $text);\n        $stmt->execute();\n        $stmt->close();\n\n        sendMessage(\"🔋 | لطفا مقدار حجم به GB این پلن را وارد کنید:\");\n    }\n    if($step==62 and $text!=$buttonValues['cancel']){\n        if(!is_numeric($text)){\n            sendMessage($mainValues['send_only_number']);\n            exit();\n        }\n        \n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `volume`=?,`step`=63 WHERE `active`=0\");\n        $stmt->bind_param(\"d\", $text);\n        $stmt->execute();\n        $stmt->close();\n        sendMessage(\"🛡 | لطفا آیدی سطر کانکشن در پنل را وارد کنید:\");\n    }\n    if($step==63 and $text!=$buttonValues['cancel']){\n        if(!is_numeric($text)){\n            sendMessage($mainValues['send_only_number']);\n            exit();\n        }\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `active` = 0\");\n        $stmt->execute();\n        $res = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n\n        \n        $response = getJson($res['server_id'])->obj;\n        foreach($response as $row){\n            if($row->id == $text) {\n                $netType = json_decode($row->streamSettings)->network;\n            }\n        }        \n        if(is_null($netType)){\n            sendMessage(\"کانفیگی با این سطر آیدی یافت نشد\");\n            exit();\n        }\n        \n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `type` = ?, `inbound_id`=?,`step`=64 WHERE `active`=0\");\n        $stmt->bind_param(\"si\", $netType, $text);\n        $stmt->execute();\n        $stmt->close();\n\n        sendMessage(\"لطفا ظرفیت تعداد اکانت رو پورت مورد نظر را وارد کنید\");\n    }\n    if($step==64 and $text!=$buttonValues['cancel']){\n        if(!is_numeric($text)){\n            sendMessage($mainValues['send_only_number']);\n            exit();\n        }\n        \n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `acount`=?,`step`=65 WHERE `active`=0\");\n        $stmt->bind_param(\"i\", $text);\n        $stmt->execute();\n        $stmt->close();\n\n        sendMessage(\"🧲 | لطفا تعداد چند کاربره این پلن را وارد کنید ( 0 نامحدود است )\");\n    }\n    if($step==65 and $text!=$buttonValues['cancel']){\n        if(!is_numeric($text)){\n            sendMessage($mainValues['send_only_number']);\n            exit();\n        }\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `limitip`=?,`step`=4 WHERE `active`=0\");\n        $stmt->bind_param(\"s\", $text);\n        $stmt->execute();\n        $stmt->close();\n\n        $msg = '🔻یه توضیح برای پلن مورد نظرت بنویس:';\n        sendMessage($msg,$cancelKey); \n    }\n    if($step==52 and $text!=$buttonValues['cancel']){\n        if($userInfo['step'] == \"addNewPlan\" && $text != \"vless\" && $text != \"vmess\" && $text != \"trojan\"){\n            sendMessage(\"لطفا فقط پروتکل های vless و vmess را وارد کنید\",$cancelKey);\n            exit();\n        }elseif($userInfo['step'] == \"addNewRahgozarPlan\" && $text != \"vless\" && $text != \"vmess\"){\n            sendMessage(\"لطفا فقط پروتکل های vless و vmess را وارد کنید\",$cancelKey);\n            exit();\n        }\n        \n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `protocol`=?,`step`=53 WHERE `active`=0\");\n        $stmt->bind_param(\"s\", $text);\n        $stmt->execute();\n        $stmt->close();\n\n        sendMessage(\"📅 | لطفا تعداد روز های اعتبار این پلن را وارد کنید:\");\n    }\n    if($step==53 and $text!=$buttonValues['cancel']){\n        if(!is_numeric($text)){\n            sendMessage($mainValues['send_only_number']);\n            exit();\n        }\n        \n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `days`=?,`step`=54 WHERE `active`=0\");\n        $stmt->bind_param(\"i\", $text);\n        $stmt->execute();\n        $stmt->close();\n\n        sendMessage(\"🔋 | لطفا مقدار حجم به GB این پلن را وارد کنید:\");\n    }\n    if($step==54 and $text!=$buttonValues['cancel']){\n        if(!is_numeric($text)){\n            sendMessage($mainValues['send_only_number']);\n            exit();\n        }\n        \n        if($userInfo['step'] == \"addNewPlan\"){\n            $sql = (\"UPDATE `server_plans` SET `volume`=?,`step`=55 WHERE `active`=0\");\n            $msg = \"🔉 | لطفا نوع شبکه این پلن را در انتخاب کنید  (ws | tcp | grpc) :\";\n        }elseif($userInfo['step'] == \"addNewRahgozarPlan\" || $userInfo['step'] == \"addNewMarzbanPlan\"){\n            $sql = (\"UPDATE `server_plans` SET `volume`=?, `type`='ws', `step`=4 WHERE `active`=0\");\n            $msg = '🔻یه توضیح برای پلن مورد نظرت بنویس:';\n        }\n        $stmt = $connection->prepare($sql);\n        $stmt->bind_param(\"d\", $text);\n        $stmt->execute();\n        $stmt->close();\n\n        sendMessage($msg);\n    }\n    if($step==55 and $text!=$buttonValues['cancel']){\n        if($text != \"tcp\" && $text != \"ws\" && $text != \"grpc\"){\n            sendMessage(\"لطفا فقط نوع (ws | tcp | grpc) را وارد کنید\");\n            exit();\n        }\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `type`=?,`step`=4 WHERE `active`=0\");\n        $stmt->bind_param(\"s\", $text);\n        $stmt->execute();\n        $stmt->close();\n\n\n        $msg = '🔻یه توضیح برای پلن مورد نظرت بنویس:';\n        sendMessage($msg,$cancelKey); \n    }\n    \n    if($step==4 and $text!=$buttonValues['cancel']){\n        \n        if($userInfo['step'] == \"addNewMarzbanPlan\"){\n            $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `active` = 0 AND `step` = 4\");\n            $stmt->execute();\n            $serverId = $stmt->get_result()->fetch_assoc()['server_id'];\n            $stmt->close();\n        \n            $hosts = getMarzbanHosts($serverId)->inbounds;\n            $networkType = array();\n            foreach($hosts as $key => $inbound){\n                $networkType[] = [['text'=>$inbound->tag, 'callback_data'=>\"planNetworkType{$inbound->protocol}*_*{$inbound->tag}\"]];\n            }\n            $networkType = json_encode(['inline_keyboard'=>$networkType]);\n\n            $stmt = $connection->prepare(\"UPDATE `server_plans` SET `descr`=?, `step` = 5 WHERE `step` = 4\");\n            sendMessage(\"لطفا نوع شبکه های این پلن را انتخاب کنید\",$networkType);\n        }\n        else{\n            $stmt = $connection->prepare(\"UPDATE `server_plans` SET `descr`=?, `active`=1,`step`=10 WHERE `step`=4\");\n            $imgtxt = '☑️ | پنل با موفقیت ثبت و ایجاد شد ( لذت ببرید ) ';\n            \n            sendMessage($imgtxt,$removeKeyboard);\n            sendMessage($mainValues['reached_main_menu'],getAdminKeys());\n            setUser();\n        }\n        $stmt->bind_param(\"s\", $text);\n        $stmt->execute();\n        $stmt->close();\n\n    } \n    elseif($step == 5 and $text != $buttonValues['cancel'] && preg_match('/^planNetworkType(?<protocol>.+)\\*_\\*(?<tag>.*)/',$data,$match)){\n        $saveBtn = \"ذخیره ✅\";\n        if($markup[count($markup)-1][0]['text'] == $saveBtn) unset($markup[count($markup)-1]);\n\n        foreach($markup as $key => $keyboard){\n            if($keyboard[0]['callback_data'] == $data) $markup[$key][0]['text'] = $keyboard['0']['text'] == $match['tag'] . \" ✅\" ? $match['tag']:$match['tag'] . \" ✅\";\n        }\n\n        if(strstr(json_encode($markup,JSON_UNESCAPED_UNICODE), \"✅\") && !strstr(json_encode($markup,JSON_UNESCAPED_UNICODE), $saveBtn)){\n            $markup[] = [['text'=>$saveBtn,'callback_data'=>\"savePlanNetworkType\"]];\n        }\n        $markup = json_encode(['inline_keyboard'=>array_values($markup)]);\n        \n        editKeys($markup);\n    }\n    elseif($step == 5 && $text != $buttonValues['cancel'] && $data == \"savePlanNetworkType\"){\n        delMessage();\n        $inbounds = array();\n        $proxies = array();\n        unset($markup[count($markup)-1]);\n\n        foreach($markup as $key=>$value){\n            $tag = trim(str_replace(\"✅\", \"\", $value[0]['text'], $state));\n            if($state > 0){\n                preg_match('/^planNetworkType(?<protocol>.+)\\*_\\*(?<tag>.*)/',$value[0]['callback_data'],$info);\n                $inbounds[$info['protocol']][] = $tag;\n                $proxies[$info['protocol']] = array();\n    \n                if($info['protocol'] == \"vless\"){\n                    $proxies[\"vless\"] = [\"flow\" => \"\"];\n                }\n                elseif($info['protocol'] == \"shadowsocks\"){\n                    $proxies[\"shadowsocks\"] = ['method' => \"chacha20-ietf-poly1305\"];\n                }\n            }\n        }\n        \n        $info = json_encode(['inbounds'=>$inbounds, 'proxies'=>$proxies]);\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `custom_sni`=?, `active`=1,`step`=10 WHERE `step`=5\");\n        $stmt->bind_param(\"s\", $info);\n        $stmt->execute();\n        $stmt->close();\n        \n        $imgtxt = '☑️ | پنل با موفقیت ثبت و ایجاد شد ( لذت ببرید ) ';\n        sendMessage($imgtxt,$removeKeyboard);\n        sendMessage($mainValues['reached_main_menu'],getAdminKeys());\n        setUser();\n    }\n}\nif($data == 'backplan' and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `active`=1\");\n    $stmt->execute();\n    $res = $stmt->get_result();\n    $stmt->close();\n\n    $keyboard = [];\n    while($cat = $res->fetch_assoc()){\n        $id = $cat['id'];\n        $title = $cat['title'];\n        $keyboard[] = ['text' => \"$title\", 'callback_data' => \"plansList$id\"];\n    }\n    $keyboard = array_chunk($keyboard,2);\n    $keyboard[] = [['text'=>\"➖➖➖\",'callback_data'=>\"wizwizch\"]];\n    $keyboard[] = [['text'=>'➕ افزودن پلن اختصاصی و اشتراکی','callback_data'=>\"addNewPlan\"]];\n    $keyboard[] = [\n        ['text'=>'➕ افزودن پلن رهگذر','callback_data'=>\"addNewRahgozarPlan\"],\n        ['text'=>\"افزودن پلن مرزبان\",'callback_data'=>\"addNewMarzbanPlan\"]\n                    ];\n    $keyboard[] = [['text'=>'➕ افزودن پلن حجمی','callback_data'=>\"volumePlanSettings\"],['text'=>'➕ افزودن پلن زمانی','callback_data'=>\"dayPlanSettings\"]];\n    $keyboard[] = [['text' => \"➕ افزودن پلن دلخواه\", 'callback_data' => \"editCustomPlan\"]];\n    $keyboard[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"managePanel\"]];\n\n    $msg = ' ☑️ مدیریت پلن ها:';\n    \n    if(isset($data) and $data=='backplan') {\n        editText($message_id, $msg, json_encode(['inline_keyboard'=>$keyboard]));\n    }else { sendAction('typing');\n        sendmessage($msg, json_encode(['inline_keyboard'=>$keyboard]));\n    }\n    \n    \n    exit;\n}\nif(($data==\"editCustomPlan\" || preg_match('/^editCustom(gbPrice|dayPrice)/',$userInfo['step'],$match)) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    if(!isset($data)){\n        if(is_numeric($text)){\n            setSettings($match[1], $text);\n            sendMessage($mainValues['saved_successfuly'],$removeKeyboard); \n        }else{\n            sendMessage(\"فقط عدد ارسال کن\");\n            exit();\n        }\n    }\n    $gbPrice=number_format($botState['gbPrice']??0) . \" تومان\";\n    $dayPrice=number_format($botState['dayPrice']??0) . \" تومان\";\n    \n    $keys = json_encode(['inline_keyboard'=>[\n        [\n            ['text'=>$gbPrice,'callback_data'=>\"editCustomgbPrice\"],\n            ['text'=>\"هزینه هر گیگ\",'callback_data'=>\"wizwizch\"]\n            ],\n        [\n            ['text'=>$dayPrice,'callback_data'=>\"editCustomdayPrice\"],\n            ['text'=>\"هزینه هر روز\",'callback_data'=>\"wizwizch\"]\n            ],\n        [\n            ['text'=>$buttonValues['back_button'],'callback_data'=>\"backplan\"]\n            ]\n            \n        ]]);\n    if(!isset($data)){\n        sendMessage(\"تنظیمات پلن دلخواه\",$keys);\n        setUser();\n    }else{\n        editText($message_id,\"تنظیمات پلن دلخواه\",$keys);\n    }\n}\nif(preg_match('/^editCustom(gbPrice|dayPrice)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    $title = $match[1] == \"dayPrice\"?\"هر روز\":\"هر گیگ\";\n    sendMessage(\"لطفا هزینه \" . $title . \" را به تومان وارد کنید\",$cancelKey);\n    setUser($data);\n}\nif(preg_match('/plansList(\\d+)/', $data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `server_id`=? ORDER BY`id` ASC\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $res = $stmt->get_result();\n    $stmt->close();\n\n    if($res->num_rows==0){\n        alert(\"متاسفانه، هیچ پلنی براش انتخاب نکردی 😑\");\n        exit;\n    }else {\n        $keyboard = [];\n        while($cat = $res->fetch_assoc()){\n            $id = $cat['id'];\n            $title = $cat['title'];\n            $keyboard[] = ['text' => \"#$id $title\", 'callback_data' => \"planDetails$id\"];\n        }\n        $keyboard = array_chunk($keyboard,2);\n        $keyboard[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"backplan\"],];\n        $msg = ' ▫️ یه پلن رو انتخاب کن بریم برای ادیت:';\n        editText($message_id, $msg, json_encode(['inline_keyboard'=>$keyboard]), \"HTML\");\n    }\n    exit();\n}\nif(preg_match('/planDetails(\\d+)/', $data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $keys = getPlanDetailsKeys($match[1]);\n    if($keys == null){\n        alert(\"موردی یافت نشد\");\n        exit;\n    }else editText($message_id, \"ویرایش تنظیمات پلن\", $keys, \"HTML\");\n}\nif(preg_match('/^wizwizplanacclist(\\d+)/',$data,$match) and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `status`=1 AND `fileid`=?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $res = $stmt->get_result();\n    $stmt->close();\n\n    if($res->num_rows == 0){\n        alert('لیست خالی است');\n        exit;\n    }\n    $txt = '';\n    while($order = $res->fetch_assoc()){\n\t\t$suid = $order['userid'];\n\t\t$stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid`=?\");\n        $stmt->bind_param(\"i\", $suid);\n        $stmt->execute();\n        $ures = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n\n\n        $date = $order['date'];\n        $remark = $order['remark'];\n        $date = jdate('Y-m-d H:i', $date);\n        $uname = $ures['name'];\n        $sold = \" 🚀 \".$uname. \" ($date)\";\n        $accid = $order['id'];\n        $orderLink = json_decode($order['link'],true);\n        $txt = \"$sold \\n  ☑️ $remark \";\n        foreach($orderLink as $link){\n            $txt .= $botState['configLinkState'] != \"off\"?\"<code>\".$link.\"</code> \\n\":\"\";\n        }\n        $txt .= \"\\n ❗ $channelLock \\n\";\n        sendMessage($txt, null, \"HTML\");\n    }\n}\nif(preg_match('/^wizwizplandelete(\\d+)/',$data,$match) and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"DELETE FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    alert(\"پلن رو برات حذفش کردم ☹️☑️\");\n    \n    editText($message_id,\"لطفا یکی از کلید های زیر را انتخاب کنید\",getMainKeys());\n}\nif(preg_match('/^wizwizplanname(\\d+)/',$data) and ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    setUser($data);\n    delMessage();\n    sendMessage(\"🔅 یه اسم برا پلن جدید انتخاب کن:\",$cancelKey);exit;\n}\nif(preg_match('/^wizwizplanname(\\d+)/',$userInfo['step'], $match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"UPDATE `server_plans` SET `title`=? WHERE `id`=?\");\n    $stmt->bind_param(\"si\", $text, $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n    sendMessage(\"با موفقیت برات تغییر دادم ☺️☑️\");\n    setUser();\n    \n    $keys = getPlanDetailsKeys($match[1]);\n    if($keys == null){\n        alert(\"موردی یافت نشد\");\n        exit;\n    }else sendMessage(\"ویرایش تنظیمات پلن\", $keys);\n}\nif(preg_match('/^wizwizplanslimit(\\d+)/',$data) and ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    setUser($data);\n    delMessage();\n    sendMessage(\"🔅 ظرفیت جدید برای پلن انتخاب کن:\",$cancelKey);exit;\n}\nif(preg_match('/^wizwizplanslimit(\\d+)/',$userInfo['step'], $match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"UPDATE `server_plans` SET `acount`=? WHERE `id`=?\");\n    $stmt->bind_param(\"ii\", $text, $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n    sendMessage(\"با موفقیت برات تغییر دادم ☺️☑️\");\n    setUser();\n    \n    $keys = getPlanDetailsKeys($match[1]);\n    if($keys == null){\n        alert(\"موردی یافت نشد\");\n        exit;\n    }else sendMessage(\"ویرایش تنظیمات پلن\", $keys, \"HTML\");\n}\nif(preg_match('/^wizwizplansinobundid(\\d+)/',$data) and ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    setUser($data);\n    delMessage();\n    sendMessage(\"🔅 سطر جدید برای پلن انتخاب کن:\",$cancelKey);exit;\n}\nif(preg_match('/^wizwizplansinobundid(\\d+)/',$userInfo['step'], $match) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    $stmt = $connection->prepare(\"UPDATE `server_plans` SET `inbound_id`=? WHERE `id`=?\");\n    $stmt->bind_param(\"ii\", $text, $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n    sendMessage(\"با موفقیت برات تغییر دادم ☺️☑️\");\n    setUser();\n    \n    $keys = getPlanDetailsKeys($match[1]);\n    if($keys == null){\n        alert(\"موردی یافت نشد\");\n        exit;\n    }else sendMessage(\"ویرایش تنظیمات پلن\", $keys, \"HTML\");\n}\nif(preg_match('/^wizwizplaneditdes(\\d+)/',$data) and ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    setUser($data);\n    delMessage();\n    sendMessage(\"🎯 توضیحاتت رو برام وارد کن:\",$cancelKey);exit;\n}\nif(preg_match('/^wizwizplaneditdes(\\d+)/',$userInfo['step'], $match) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    $stmt = $connection->prepare(\"UPDATE `server_plans` SET `descr`=? WHERE `id`=?\");\n    $stmt->bind_param(\"si\", $text, $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n\n    sendMessage(\"با موفقیت برات تغییر دادم ☺️☑️\");\n    setUser();\n    \n    $keys = getPlanDetailsKeys($match[1]);\n    if($keys == null){\n        alert(\"موردی یافت نشد\");\n        exit;\n    }else sendMessage(\"ویرایش تنظیمات پلن\", $keys, \"HTML\");\n}\nif(preg_match('/^editDestName(\\d+)/',$data) and ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    setUser($data);\n    delMessage();\n    sendMessage(\"🎯 dest رو برام وارد کن:\\nبرای حذف کردن متن /empty رو وارد کن\",$cancelKey);exit;\n}\nif(preg_match('/^editDestName(\\d+)/',$userInfo['step'], $match) && ($from_id == $admin || $userInfo['isAdmin'] == true) &&  $text != $buttonValues['cancel']){\n    if($text == \"/empty\"){\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `dest` = NULL WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $match[1]);\n    }else{\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `dest`=? WHERE `id`=?\");\n        $stmt->bind_param(\"si\", $text, $match[1]);\n    }\n    $stmt->execute();\n    $stmt->close();\n\n\n    sendMessage(\"با موفقیت برات تغییر دادم ☺️☑️\");\n    setUser();\n    \n    $keys = getPlanDetailsKeys($match[1]);\n    if($keys == null){\n        alert(\"موردی یافت نشد\");\n        exit;\n    }else sendMessage(\"ویرایش تنظیمات پلن\", $keys, \"HTML\");\n}\nif(preg_match('/^editSpiderX(\\d+)/',$data) and ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    setUser($data);\n    delMessage();\n    sendMessage(\"🎯 spiderX رو برام وارد کن\\nبرای حذف کردن متن /empty رو وارد کن\",$cancelKey);exit;\n}\nif(preg_match('/^editSpiderX(\\d+)/',$userInfo['step'], $match) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    if($text == \"/empty\"){\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `spiderX`=NULL WHERE `id`=?\");\n        $stmt->bind_param(\"s\", $match[1]);\n    }else{\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `spiderX`=? WHERE `id`=?\");\n        $stmt->bind_param(\"si\", $text, $match[1]);\n    }\n    $stmt->execute();\n    $stmt->close();\n\n\n    sendMessage(\"با موفقیت برات تغییر دادم ☺️☑️\");\n    setUser();\n    \n    $keys = getPlanDetailsKeys($match[1]);\n    if($keys == null){\n        alert(\"موردی یافت نشد\");\n        exit;\n    }else sendMessage(\"ویرایش تنظیمات پلن\", $keys, \"HTML\");\n}\nif(preg_match('/^editServerNames(\\d+)/',$data) and ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    setUser($data);\n    delMessage();\n    sendMessage(\"🎯 serverNames رو به صورت زیر برام وارد کن:\\n\n`[\n  \\\"yahoo.com\\\",\n  \\\"www.yahoo.com\\\"\n]`\n    \\n\\nبرای حذف کردن متن /empty رو وارد کن\",$cancelKey);exit;\n}\nif(preg_match('/^editServerNames(\\d+)/',$userInfo['step'], $match) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    if($text == \"/empty\"){\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `serverNames`=NULL WHERE `id`=?\");\n        $stmt->bind_param(\"s\", $match[1]);\n    }else{\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `serverNames`=? WHERE `id`=?\");\n        $stmt->bind_param(\"si\", $text, $match[1]);\n    }\n    $stmt->execute();\n    $stmt->close();\n\n\n    sendMessage(\"با موفقیت برات تغییر دادم ☺️☑️\");\n    setUser();\n    \n    $keys = getPlanDetailsKeys($match[1]);\n    if($keys == null){\n        alert(\"موردی یافت نشد\");\n        exit;\n    }else sendMessage(\"ویرایش تنظیمات پلن\", $keys, \"HTML\");\n}\nif(preg_match('/^editFlow(\\d+)/',$data, $match) and ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    setUser($data);\n    delMessage();\n    $keys = json_encode(['inline_keyboard'=>[\n        [['text'=>\"None\", 'callback_data'=>\"editPFlow\" . $match[1] . \"_None\"]],\n        [['text'=>\"xtls-rprx-vision\", 'callback_data'=>\"editPFlow\" . $match[1] . \"_xtls-rprx-vision\"]],\n        ]]);\n    sendMessage(\"🎯 لطفا یکی از موارد زیر رو انتخاب کن\",$keys);exit;\n}\nif(preg_match('/^editPFlow(\\d+)_(.*)/',$data, $match) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    $stmt = $connection->prepare(\"UPDATE `server_plans` SET `flow`=? WHERE `id`=?\");\n    $stmt->bind_param(\"si\", $match[2], $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n    alert(\"با موفقیت برات تغییر دادم ☺️☑️\");\n    setUser();\n    \n    $keys = getPlanDetailsKeys($match[1]);\n    editText($message_id, \"ویرایش تنظیمات پلن\", $keys, \"HTML\");\n}\nif(preg_match('/^wizwizplanrial(\\d+)/',$data) and ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    setUser($data);\n    delMessage();\n    sendMessage(\"🎯 شیطون قیمت و گرون کردی 😂 ، خب قیمت جدید و بزن ببینم :\",$cancelKey);exit;\n}\nif(preg_match('/^wizwizplanrial(\\d+)/',$userInfo['step'], $match) && ($from_id == $admin || $userInfo['isAdmin'] == true)&& $text != $buttonValues['cancel']){\n    if(is_numeric($text)){\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `price`=? WHERE `id`=?\");\n        $stmt->bind_param(\"ii\", $text, $match[1]);\n        $stmt->execute();\n        $stmt->close();\n\n        sendMessage(\"با موفقیت برات تغییر دادم ☺️☑️\");\n        setUser();\n        \n        $keys = getPlanDetailsKeys($match[1]);\n        if($keys == null){\n            alert(\"موردی یافت نشد\");\n            exit;\n        }else sendMessage(\"ویرایش تنظیمات پلن\", $keys, \"HTML\");\n    }else{\n        sendMessage(\"بهت میگم قیمت وارد کن برداشتی یه چیز دیگه نوشتی 🫤 ( عدد وارد کن ) عجبا\");\n    }\n}\nif(($data == 'mySubscriptions' || $data == \"agentConfigsList\" or preg_match('/(changeAgentOrder|changeOrdersPage)(\\d+)/',$data, $match) )&& ($botState['sellState']==\"on\" || $from_id ==$admin)){\n    $results_per_page = 50;\n    if($data == \"agentConfigsList\" || $match[1] == \"changeAgentOrder\") $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `userid`=? AND `status`=1\");  \n    else $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `userid`=? AND `status`=1 AND `agent_bought` = 0\");  \n    $stmt->bind_param(\"i\", $from_id);\n    $stmt->execute();\n    $number_of_result= $stmt->get_result()->num_rows;\n    $stmt->close();\n\n    $number_of_page = ceil ($number_of_result / $results_per_page);\n    $page = $match[2] ??1;\n    $page_first_result = ($page-1) * $results_per_page;  \n    \n    if($data == \"agentConfigsList\" || $match[1] == \"changeAgentOrder\") $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `userid`=? AND `status`=1 ORDER BY `id` DESC LIMIT ?, ?\");\n    else $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `userid`=? AND `status`=1 AND `agent_bought` = 0 ORDER BY `id` DESC LIMIT ?, ?\");\n    $stmt->bind_param(\"iii\", $from_id, $page_first_result, $results_per_page);\n    $stmt->execute();\n    $orders = $stmt->get_result();\n    $stmt->close();\n\n\n    if($orders->num_rows==0){\n        alert($mainValues['you_dont_have_config']);\n        exit;\n    }\n    $keyboard = [];\n    while($cat = $orders->fetch_assoc()){\n        $id = $cat['id'];\n        $remark = $cat['remark'];\n        $keyboard[] = ['text' => \"$remark\", 'callback_data' => \"orderDetails$id\"];\n    }\n    $keyboard = array_chunk($keyboard,1);\n    \n    $prev = $page - 1;\n    $next = $page + 1;\n    $lastpage = ceil($number_of_page/$results_per_page);\n    $lpm1 = $lastpage - 1;\n    \n    $buttons = [];\n    if ($prev > 0) $buttons[] = ['text' => \"◀\", 'callback_data' => (($data==\"agentConfigsList\" || $match[1] == \"changeAgentOrder\") ? \"changeAgentOrder$prev\":\"changeOrdersPage$prev\")];\n\n    if ($next > 0 and $page != $number_of_page) $buttons[] = ['text' => \"➡\", 'callback_data' => (($data==\"agentConfigsList\" || $match[1] == \"changeAgentOrder\")?\"changeAgentOrder$next\":\"changeOrdersPage$next\")];   \n    $keyboard[] = $buttons;\n    if($data == \"agentConfigsList\" || $match[1] == \"changeAgentOrder\") $keyboard[] = [['text'=>$buttonValues['search_agent_config'],'callback_data'=>\"searchAgentConfig\"]];\n    else $keyboard[] = [['text'=>$buttonValues['search_agent_config'],'callback_data'=>\"searchMyConfig\"]];\n    $keyboard[] = [['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]];\n    \n    if(isset($data)) {\n        editText($message_id, $mainValues['select_one_to_show_detail'], json_encode(['inline_keyboard'=>$keyboard]));\n    }else { sendAction('typing');\n        sendMessage($mainValues['select_one_to_show_detail'], json_encode(['inline_keyboard'=>$keyboard]));\n    }\n    exit;\n}\nif($data==\"searchAgentConfig\" || $data == \"searchMyConfig\" || $data==\"searchUsersConfig\"){\n    delMessage();\n    sendMessage($mainValues['send_config_remark'],$cancelKey);\n    setUser($data);\n}\nif(($userInfo['step'] == \"searchAgentConfig\" || $userInfo['step'] == \"searchMyConfig\") && $text != $buttonValues['cancel']){\n    sendMessage($mainValues['please_wait_message'], $removeKeyboard);\n    if($userInfo['step'] == \"searchMyConfig\") $condition = \"AND `agent_bought` = 0\";\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `userid` = ? AND `remark` LIKE CONCAT('%', ?, '%') $condition\");\n    $stmt->bind_param(\"is\", $from_id, $text);\n    $stmt->execute();\n    $orderId = $stmt->get_result()->fetch_assoc()['id'];\n    $stmt->close();\n    \n    $keys = getOrderDetailKeys($from_id, $orderId);\n    if($keys == null) sendMessage($mainValues['no_order_found']); \n    else {\n        sendMessage($keys['msg'], $keys['keyboard'], \"HTML\");\n        setUser();\n    }\n}\nif(($userInfo['step'] == \"searchUsersConfig\" && $text != $buttonValues['cancel']) || preg_match('/^userOrderDetails(\\d+)_(\\d+)/',$data,$match)){\n    if(isset($data)){\n        $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $match[1]);\n    }\n    else{\n        sendMessage($mainValues['please_wait_message'], $removeKeyboard); \n        $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `remark` LIKE CONCAT('%', ?, '%')\");\n        $stmt->bind_param(\"s\", $text);\n    }\n    $stmt->execute();\n    $orderInfo = $stmt->get_result();\n    $stmt->close();\n    \n\n    if($orderInfo->num_rows == 0) sendMessage($mainValues['no_order_found']); \n    else {\n        $orderId = $orderInfo->fetch_assoc()['id'];\n        $keys = getUserOrderDetailKeys($orderId, isset($data)?$match[2]:0);\n        if($keys == null) sendMessage($mainValues['no_order_found']); \n        else{\n            if(!isset($data)) sendMessage($keys['msg'], $keys['keyboard'], \"HTML\");\n            else editText($message_id, $keys['msg'], $keys['keyboard'], \"HTML\");\n            setUser();\n        }\n    }\n}\nif(preg_match('/^orderDetails(\\d+)(_|)(?<offset>\\d+|)/', $data, $match) && ($botState['sellState']==\"on\" || ($from_id == $admin || $userInfo['isAdmin'] == true))){\n    $keys = getOrderDetailKeys($from_id, $match[1], !empty($match['offset'])?$match['offset']:0);\n    if($keys == null){\n        alert($mainValues['no_order_found']);exit;\n    }else editText($message_id, $keys['msg'], $keys['keyboard'], \"HTML\");\n}\nif($data==\"cantEditGrpc\"){\n    alert(\"نوعیت این کانفیگ رو تغییر داده نمیتونید!\");\n    exit();\n}\nif(preg_match('/^changeCustomPort(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage(\"لطفا پورت مورد نظر خود را وارد کنید\\nبرای حذف پورت دلخواه عدد 0 را وارد کنید\", $cancelKey);\n    setUser($data);\n}\nif(preg_match('/^changeCustomPort(\\d+)/',$userInfo['step'],$match) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    if(is_numeric($text)){\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `custom_port`= ? WHERE `id` = ?\");\n        $stmt->bind_param(\"ii\", $text, $match[1]);\n        $stmt->execute();\n        $stmt->close();  \n        sendMessage($mainValues['saved_successfuly'],$removeKeyboard);\n         \n        sendMessage(\"ویرایش تنظیمات پلن\", getPlanDetailsKeys($match[1]));\n        setUser();\n    }else sendMessage($mainValues['send_only_number']);\n}\nif(preg_match('/^changeCustomSni(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage(\"لطفا sni مورد نظر خود را وارد کنید\\nبرای حذف متن /empty را وارد کنید\", $cancelKey);\n    setUser($data);\n}\nif(preg_match('/^changeCustomSni(\\d+)/',$userInfo['step'],$match) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    if($text == \"/empty\"){\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `custom_sni`= NULL WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $match[1]);\n    }\n    else {\n        $stmt = $connection->prepare(\"UPDATE `server_plans` SET `custom_sni`= ? WHERE `id` = ?\");\n        $stmt->bind_param(\"si\", $text, $match[1]);\n    }\n    $stmt->execute();\n    $stmt->close();  \n    sendMessage($mainValues['saved_successfuly'],$removeKeyboard);\n     \n    sendMessage(\"ویرایش تنظیمات پلن\", getPlanDetailsKeys($match[1]));\n    setUser();\n}\nif(preg_match('/^changeCustomPath(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"UPDATE `server_plans` SET `custom_path` = IF(`custom_path` = 1, 0, 1) WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n    editKeys(getPlanDetailsKeys($match[1]));\n}\nif(preg_match('/changeNetworkType(\\d+)_(\\d+)/', $data, $match)){\n    $fid = $match[1];\n    $oid = $match[2];\n    \n\t$stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=? AND `active`=1\"); \n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $respd = $stmt->get_result();\n    $stmt->close();\n\n\n\tif($respd){\n\t\t$respd = $respd->fetch_assoc(); \n\t\t$stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $respd['catid']);\n        $stmt->execute();\n        $cadquery = $stmt->get_result();\n        $stmt->close();\n\n\n\t\tif($cadquery) {\n\t\t\t$catname = $cadquery->fetch_assoc()['title'];\n\t\t\t$name = $catname.\" \".$respd['title'];\n\t\t}else $name = \"$oid\";\n\t\t\n\t}else $name = \"$oid\";\n\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $order = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n\n    $date = jdate(\"Y-m-d H:i\",$order['date']);\n    $expire_date = jdate(\"Y-m-d H:i\",$order['expire_date']);\n    $remark = $order['remark'];\n    $uuid = $order['uuid']??\"0\";\n    $acc_link = $order['link'];\n    $protocol = $order['protocol'];\n    $server_id = $order['server_id'];\n    $price = $order['amount'];\n    \n    $response = getJson($server_id)->obj;\n    foreach($response as $row){\n        $clients = json_decode($row->settings)->clients;\n        if($clients[0]->id == $uuid || $clients[0]->password == $uuid) {\n            $total = $row->total;\n            $up = $row->up;\n            $down = $row->down;\n            $port = $row->port;\n            $netType = json_decode($row->streamSettings)->network; \n            $security = json_decode($row->streamSettings)->security;\n            $netType = ($netType == 'tcp') ? 'ws' : 'tcp';\n        break;\n        }\n    }\n\n    if($protocol == 'trojan') $netType = 'tcp';\n\n    $update_response = editInbound($server_id, $uuid, $uuid, $protocol, $netType);\n    $vraylink = getConnectionLink($server_id, $uuid, $protocol, $remark, $port, $netType);\n\n    $vray_link = json_encode($vraylink);\n    $stmt = $connection->prepare(\"UPDATE `orders_list` SET `protocol`=?,`link`=? WHERE `id`=?\");\n    $stmt->bind_param(\"ssi\", $protocol, $vray_link, $oid);\n    $stmt->execute();\n    $stmt->close();\n    \n    $keys = getOrderDetailKeys($from_id, $oid);\n    editText($message_id, $keys['msg'], $keys['keyboard'], \"HTML\");\n}\nif($data==\"changeProtocolIsDisable\"){\n    alert(\"تغییر پروتکل غیر فعال است\");\n}\nif(preg_match('/updateConfigConnectionLink(\\d+)/', $data,$match)){\n    alert($mainValues['please_wait_message']);\n    $oid = $match[1];\n\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $order = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n\n    $remark = $order['remark'];\n    $uuid = $order['uuid']??\"0\";\n    $inboundId = $order['inbound_id'];\n    $server_id = $order['server_id'];\n    $file_id = $order['fileid'];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $file_id);\n    $stmt->execute();\n    $file_detail = $stmt->get_result()->fetch_assoc();\n\n    $rahgozar = $order['rahgozar'];\n    $customPath = $file_detail['custom_path'];\n    $customPort = $file_detail['custom_port'];\n    $customSni = $file_detail['custom_sni'];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_config = $stmt->get_result()->fetch_assoc();\n    $serverType = $server_config['type'];\n    $netType = $file_detail['type'];\n    $protocol = $file_detail['protocol'];\n    $security = $server_config['security'];\n    \n    if($serverType == \"marzban\"){\n        $info = getMarzbanUser($server_id, $remark);\n        $vraylink = $info->links;\n    }else{\n        $response = getJson($server_id)->obj;\n        if($inboundId == 0){\n            foreach($response as $row){\n                $clients = json_decode($row->settings)->clients;\n                if($clients[0]->id == $uuid || $clients[0]->password == $uuid) {\n                    $inboundRemark = $row->remark;\n                    $iId = $row->id;\n                    $port = $row->port;\n                    $protocol = $row->protocol;\n                    $netType = json_decode($row->streamSettings)->network;\n                    break;\n                }\n            }\n        }else{\n            foreach($response as $row){\n                if($row->id == $inboundId) {\n                    $iId = $row->id;\n                    $inboundRemark = $row->remark;\n                    $port = $row->port;\n                    $protocol = $row->protocol;\n                    $netType = json_decode($row->streamSettings)->network;\n                    break;\n                }\n            }\n        }\n    \n        if($botState['updateConnectionState'] == \"robot\"){\n            updateConfig($server_id, $iId, $protocol, $netType, $security, $rahgozar);\n        }\n        $vraylink = getConnectionLink($server_id, $uuid, $protocol, $remark, $port, $netType, $inboundId, $rahgozar, $customPath, $customPort, $customSni);\n        \n    }\n    $vray_link = json_encode($vraylink);\n    $stmt = $connection->prepare(\"UPDATE `orders_list` SET `link`=? WHERE `id`=?\");\n    $stmt->bind_param(\"si\", $vray_link, $oid);\n    $stmt->execute();\n    $stmt->close();\n    $keys = getOrderDetailKeys($from_id, $oid);\n    editText($message_id, $keys['msg'], $keys['keyboard'],\"HTML\");\n}\nif(preg_match('/changAccountConnectionLink(\\d+)/', $data,$match)){\n    alert($mainValues['please_wait_message']);\n    $oid = $match[1];\n\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $order = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n\n    $date = jdate(\"Y-m-d H:i\",$order['date']);\n    $expire_date = jdate(\"Y-m-d H:i\",$order['expire_date']);\n    $remark = $order['remark'];\n    $uuid = $order['uuid']??\"0\";\n    $inboundId = $order['inbound_id'];\n    $acc_link = $order['link'];\n    $server_id = $order['server_id'];\n    $rahgozar = $order['rahgozar'];\n    \n    $file_id = $order['fileid'];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $file_id);\n    $stmt->execute();\n    $file_detail = $stmt->get_result()->fetch_assoc();\n    $customPath = $file_detail['custom_path'];\n    $customPort = $file_detail['custom_port'];\n    $customSni = $file_detail['custom_sni'];\n    \n    \n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $serverType = $server_info['type'];\n\n    if($serverType == \"marzban\"){\n        $res = renewMarzbanUUID($server_id, $remark);\n        $vraylink = $res->links;\n        $newUuid = $newToken = str_replace(\"/sub/\", \"\", $res->subscription_url);\n    }else{\n        $response = getJson($server_id)->obj;\n        if($inboundId == 0){\n            foreach($response as $row){\n                $clients = json_decode($row->settings)->clients;\n                if($clients[0]->id == $uuid || $clients[0]->password == $uuid) {\n                    $port = $row->port;\n                    $protocol = $row->protocol;\n                    $netType = json_decode($row->streamSettings)->network;\n                    break;\n                }\n            }\n            \n            $update_response = renewInboundUuid($server_id, $uuid);\n        }else{\n            foreach($response as $row){\n                if($row->id == $inboundId) {\n                    $port = $row->port; \n                    $protocol = $row->protocol;\n                    $netType = json_decode($row->streamSettings)->network;\n                    break;\n                }\n            }\n            $update_response = renewClientUuid($server_id, $inboundId, $uuid);\n        }\n        $newUuid = $update_response->newUuid;\n        $vraylink = getConnectionLink($server_id, $newUuid, $protocol, $remark, $port, $netType, $inboundId, $rahgozar, $customPath, $customPort, $customSni);\n        $newToken = RandomString(30);\n    }\n\n    \n    $vray_link = json_encode($vraylink);\n    $stmt = $connection->prepare(\"UPDATE `orders_list` SET `link`=?, `uuid` = ?, `token` = ? WHERE `id`=?\");\n    $stmt->bind_param(\"sssi\", $vray_link, $newUuid, $newToken, $oid);\n    $stmt->execute();\n    $stmt->close();\n    $keys = getOrderDetailKeys($from_id, $oid);\n    editText($message_id, $keys['msg'], $keys['keyboard'],\"HTML\");\n}\nif(preg_match('/changeUserConfigState(\\d+)/', $data,$match)){\n    alert($mainValues['please_wait_message']);\n    $oid = $match[1];\n\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $order = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $userId = $order['userid'];\n    $uuid = $order['uuid']??\"0\";\n    $inboundId = $order['inbound_id'];\n    $server_id = $order['server_id'];\n    $remark = $order['remark'];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $serverType = $server_info['type'];\n\n    \n    if($inboundId == 0){\n        if($serverType == \"marzban\") $update_response = changeMarzbanState($server_id, $remark);\n        else $update_response = changeInboundState($server_id, $uuid);\n    }else{\n        $update_response = changeClientState($server_id, $inboundId, $uuid);\n    }\n    \n    if($update_response->success){\n        alert($mainValues['please_wait_message']);\n    \n        $keys = getUserOrderDetailKeys($oid);\n        editText($message_id, $keys['msg'], $keys['keyboard'], \"HTML\");\n    }else sendMessage(\"عملیه مورد نظر با مشکل روبرو شد\\n\" . $update_response->msg);\n}\n\nif(preg_match('/changeAccProtocol(\\d+)_(\\d+)_(.*)/', $data,$match)){\n    $fid = $match[1];\n    $oid = $match[2];\n    $protocol = $match[3];\n\n\t$stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=? AND `active`=1\"); \n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $respd = $stmt->get_result();\n    $stmt->close();\n\n\n\tif($respd){\n\t\t$respd = $respd->fetch_assoc(); \n\t\t$stmt= $connection->prepare(\"SELECT * FROM `server_categories` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $respd['catid']);\n        $stmt->execute();\n        $cadquery = $stmt->get_result();\n        $stmt->close();\n\n\n\t\tif($cadquery) {\n\t\t\t$catname = $cadquery->fetch_assoc()['title'];\n\t\t\t$name = $catname.\" \".$respd['title'];\n\t\t}else $name = \"$id\";\n\t\t\n\t}else $name = \"$id\";\n\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $order = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n\n    $date = jdate(\"Y-m-d H:i\",$order['date']);\n    $expire_date = jdate(\"Y-m-d H:i\",$order['expire_date']);\n    $remark = $order['remark'];\n    $uuid = $order['uuid']??\"0\";\n    $acc_link = $order['link'];\n    $server_id = $order['server_id'];\n    $price = $order['amount'];\n    $rahgozar = $order['rahgozar'];\n    $file_id = $order['fileid'];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $file_id);\n    $stmt->execute();\n    $file_detail = $stmt->get_result()->fetch_assoc();\n    $customPath = $file_detail['custom_path'];\n    $customPort = $file_detail['custom_port'];\n    $customSni = $file_detail['custom_sni'];\n    \n    $response = getJson($server_id)->obj;\n    foreach($response as $row){\n        $clients = json_decode($row->settings)->clients;\n        if($clients[0]->id == $uuid || $clients[0]->password == $uuid) {\n            $total = $row->total;\n            $up = $row->up;\n            $down = $row->down;\n            $port = $row->port;\n            $netType = json_decode($row->streamSettings)->network;\n            $security = json_decode($row->streamSettings)->security;\n            break;\n        }\n    }\n    if($protocol == 'trojan') $netType = 'tcp';\n    $uniqid = generateRandomString(42,$protocol); \n    $leftgb = round( ($total - $up - $down) / 1073741824, 2) . \" GB\"; \n    $update_response = editInbound($server_id, $uniqid, $uuid, $protocol, $netType, $security, $rahgozar);\n    $vraylink = getConnectionLink($server_id, $uniqid, $protocol, $remark, $port, $netType, 0, $rahgozar, $customPath, $customPort, $customSni);\n    \n    $vray_link = json_encode($vraylink);\n    $stmt = $connection->prepare(\"UPDATE `orders_list` SET `protocol`=?,`link`=?, `uuid` = ? WHERE `id`=?\");\n    $stmt->bind_param(\"sssi\", $protocol, $vray_link, $uniqid, $oid);\n    $stmt->execute();\n    $stmt->close();\n    $keys = getOrderDetailKeys($from_id, $oid);\n    editText($message_id, $keys['msg'], $keys['keyboard'],\"HTML\");\n}\nif(preg_match('/^discountRenew(\\d+)_(\\d+)/',$userInfo['step'], $match) || preg_match('/renewAccount(\\d+)/',$data,$match) && $text != $buttonValues['cancel']){\n    if(preg_match('/^discountRenew/', $userInfo['step'])){\n        $rowId = $match[2];\n        \n        $time = time();\n        $stmt = $connection->prepare(\"SELECT * FROM `discounts` WHERE (`expire_date` > $time OR `expire_date` = 0) AND (`expire_count` > 0 OR `expire_count` = -1) AND `hash_id` = ?\");\n        $stmt->bind_param(\"s\", $text);\n        $stmt->execute();\n        $list = $stmt->get_result();\n        $stmt->close();\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $rowId);\n        $stmt->execute();\n        $payInfo = $stmt->get_result()->fetch_assoc();\n        $hash_id = $payInfo['hash_id'];\n        $afterDiscount = $payInfo['price'];\n        $stmt->close();\n        \n        if($list->num_rows>0){\n            $discountInfo = $list->fetch_assoc();\n            $amount = $discountInfo['amount'];\n            $type = $discountInfo['type'];\n            $count = $discountInfo['expire_count'];\n            $usedBy = !is_null($discountInfo['used_by'])?json_decode($discountInfo['used_by'],true):array();            \n            \n            $canUse = $discountInfo['can_use'];\n            $userUsedCount = array_count_values($usedBy)[$from_id];\n            if($canUse > $userUsedCount){\n                $usedBy[] = $from_id;\n                $encodeUsedBy = json_encode($usedBy);\n                \n                if ($count != -1) $query = \"UPDATE `discounts` SET `expire_count` = `expire_count` - 1, `used_by` = ? WHERE `id` = ?\";\n                else $query = \"UPDATE `discounts` SET `used_by` = ? WHERE `id` = ?\";\n    \n                $stmt = $connection->prepare($query);\n                $stmt->bind_param(\"si\", $encodeUsedBy, $discountInfo['id']);\n                $stmt->execute();\n                $stmt->close();\n                \n                if($type == \"percent\"){\n                    $discount = $afterDiscount * $amount / 100;\n                    $afterDiscount -= $discount;\n                    $discount = number_format($discount) . \" تومان\";\n                }else{\n                    $afterDiscount -= $amount;\n                    $discount = number_format($amount) . \" تومان\";\n                }\n                if($afterDiscount < 0) $afterDiscount = 0;\n                \n                $stmt = $connection->prepare(\"UPDATE `pays` SET `price` = ? WHERE `id` = ?\");\n                $stmt->bind_param(\"ii\", $afterDiscount, $rowId);\n                $stmt->execute();\n                $stmt->close();\n                sendMessage(str_replace(\"AMOUNT\", $discount, $mainValues['valid_discount_code']));\n                $keys = json_encode(['inline_keyboard'=>[\n                    [\n                        ['text'=>\"❤️\", \"callback_data\"=>\"wizwizch\"]\n                        ],\n                    ]]);\n                sendMessage(\n                    str_replace(['USERID', 'USERNAME', \"NAME\", \"AMOUNT\", \"DISCOUNTCODE\"], [$from_id, $username, $first_name, $discount, $text], $mainValues['used_discount_code'])\n                    ,$keys,null,$admin);\n            }else sendMessage($mainValues['not_valid_discount_code']);\n        }else sendMessage($mainValues['not_valid_discount_code']);\n        setUser();\n    }else delMessage();\n\n    $oid = $match[1];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $order = $stmt->get_result();\n    $stmt->close();\n    if($order->num_rows == 0){\n        delMessage();\n        sendMessage($mainValues['config_not_found'], getMainKeys());\n        exit();\n    }\n    $order = $order->fetch_assoc();\n    $serverId = $order['server_id'];\n    $fid = $order['fileid'];\n    $agentBought = $order['agent_bought'];\n    \n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id` = ? AND `active` = 1\");\n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $respd = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $price = $respd['price'];\n    if($agentBought == true){\n        $discounts = json_decode($userInfo['discount_percent'],true);\n        if($botState['agencyPlanDiscount']==\"on\") $discount = $discounts['plans'][$fid]?? $discounts['normal'];\n        else $discount = $discounts['servers'][$serverId]?? $discounts['normal'];\n        $price -= floor($price * $discount / 100);\n    }\n    if(!preg_match('/^discountRenew/', $userInfo['step'])){\n        $hash_id = RandomString();\n        $stmt = $connection->prepare(\"DELETE FROM `pays` WHERE `user_id` = ? AND `type` = 'RENEW_ACCOUNT' AND `state` = 'pending'\");\n        $stmt->bind_param(\"i\", $from_id);\n        $stmt->execute();\n        $stmt->close();\n        \n        $time = time();\n        $stmt = $connection->prepare(\"INSERT INTO `pays` (`hash_id`, `user_id`, `type`, `plan_id`, `volume`, `day`, `price`, `request_date`, `state`)\n                                    VALUES (?, ?, 'RENEW_ACCOUNT', ?, '0', '0', ?, ?, 'pending')\");\n        $stmt->bind_param(\"siiii\", $hash_id, $from_id, $oid, $price, $time);\n        $stmt->execute();\n        $rowId = $stmt->insert_id;\n        $stmt->close();\n    }else $price = $afterDiscount;\n\n    if($price == 0) $price = \"رایگان\";\n    else $price .= \" تومان\";\n    $keyboard = array();\n    if($botState['cartToCartState'] == \"on\") $keyboard[] = [['text' => \"💳 کارت به کارت مبلغ $price\",  'callback_data' => \"payRenewWithCartToCart$hash_id\"]];\n    if($botState['nowPaymentOther'] == \"on\") $keyboard[] = [['text' => $buttonValues['now_payment_gateway'],  'url' => $botUrl . \"pay/?nowpayment&hash_id=\" . $hash_id]];\n    if($botState['zarinpal'] == \"on\") $keyboard[] = [['text' => $buttonValues['zarinpal_gateway'],  'url' => $botUrl . \"pay/?zarinpal&hash_id=\" . $hash_id]];\n    if($botState['nextpay'] == \"on\") $keyboard[] = [['text' => $buttonValues['nextpay_gateway'],  'url' => $botUrl . \"pay/?nextpay&hash_id=\" . $hash_id]];\n    if($botState['weSwapState'] == \"on\") $keyboard[] = [['text' => $buttonValues['weswap_gateway'],  'callback_data' => \"payWithWeSwap\" . $hash_id]];\n    if($botState['walletState'] == \"on\") $keyboard[] = [['text' => \"پرداخت با موجودی مبلغ $price\",  'callback_data' => \"payRenewWithWallet$hash_id\"]];\n    if($botState['tronWallet'] == \"on\") $keyboard[] = [['text' => $buttonValues['tron_gateway'],  'callback_data' => \"payWithTronWallet\" . $hash_id]];\n\n    if(!preg_match('/^discountRenew/', $userInfo['step'])) $keyboard[] = [['text' => \" 🎁 نکنه کد تخفیف داری؟ \",  'callback_data' => \"haveDiscountRenew_\" . $match[1] . \"_\" . $rowId]];\n\n    $keyboard[] = [['text'=>$buttonValues['cancel'], 'callback_data'=> \"mainMenu\"]];\n\n\n\n    sendMessage(\"لطفا با یکی از روش های زیر اکانت خود را تمدید کنید :\",json_encode([\n            'inline_keyboard' => $keyboard\n        ]));\n}\nif(preg_match('/payRenewWithCartToCart(.*)/',$data,$match)) {\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n\n    if($payInfo->num_rows == 0){\n        $text = \"/start\";\n        $data = \"\";\n        delMessage();\n        goto GOTOSTART;\n    }\n    $payInfo = $payInfo->fetch_assoc();\n\n    $oid = $payInfo['plan_id'];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $order = $stmt->get_result();\n    $stmt->close();\n    if($order->num_rows == 0){\n        delMessage();\n        sendMessage($mainValues['config_not_found'], getMainKeys());\n        exit();\n    }\n    \n    setUser($data);\n    delMessage();\n\n    sendMessage(str_replace(['ACCOUNT-NUMBER', 'HOLDER-NAME'],[$paymentKeys['bankAccount'], $paymentKeys['holderName']], $mainValues['renew_ccount_cart_to_cart']),$cancelKey,\"html\");\n    exit;\n}\nif(preg_match('/payRenewWithCartToCart(.*)/',$userInfo['step'],$match) and $text != $buttonValues['cancel']){\n    if(isset($update->message->photo)){\n        $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n        $stmt->bind_param(\"s\", $match[1]);\n        $stmt->execute();\n        $payInfo = $stmt->get_result()->fetch_assoc();\n        $hash_id = $payInfo['hash_id'];\n        $stmt->close();\n        \n        $oid = $payInfo['plan_id'];\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $oid);\n        $stmt->execute();\n        $order = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        $fid = $order['fileid'];\n        $remark = $order['remark'];\n        $uid = $order['userid'];\n        $userName = $userInfo['username'];\n        $uname = $userInfo['name'];\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id` = ? AND `active` = 1\");\n        $stmt->bind_param(\"i\", $fid);\n        $stmt->execute();\n        $respd = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        $price = $payInfo['price'];\n        $volume = $respd['volume'];\n        $days = $respd['days'];\n        \n        sendMessage($mainValues['renew_order_sent'],$removeKeyboard);\n        sendMessage($mainValues['reached_main_menu'],getMainKeys());\n        // notify admin\n        \n        $msg = str_replace(['TYPE', \"USER-ID\", \"USERNAME\", \"NAME\", \"PRICE\", \"REMARK\", \"VOLUME\", \"DAYS\"],['کارت به کارت', $from_id, $username, $first_name, $price, $remark, $volume, $days], $mainValues['renew_account_request_message']);\n    \n        $keyboard = json_encode([\n            'inline_keyboard' => [\n                [\n                    ['text' => $buttonValues['approve'], 'callback_data' => \"approveRenewAcc$hash_id\"],\n                    ['text' => $buttonValues['decline'], 'callback_data' => \"decRenewAcc$hash_id\"]\n                ]\n            ]\n        ]);\n    \n        $res = sendPhoto($fileid, $msg,$keyboard, \"HTML\", $admin);\n        $msgId = $res->result->message_id;\n        setUser();\n        \n        $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'have_sent', `message_id` = ?, `chat_id` = ? WHERE `hash_id` = ?\");\n        $stmt->bind_param(\"iis\", $msgId, $admin, $match[1]);\n        $stmt->execute();\n        $stmt->close();\n    }else{\n        sendMessage($mainValues['please_send_only_image']);\n    }\n}\nif(preg_match('/approveRenewAcc(.*)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result()->fetch_assoc();\n    $hash_id = $payInfo['hash_id'];\n    $stmt->close();\n    \n    if($payInfo['state'] == \"approved\") exit();\n\n    $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'approved' WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n    \n    $uid = $payInfo['user_id'];\n    $oid = $payInfo['plan_id'];\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $order = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $fid = $order['fileid'];\n    $remark = $order['remark'];\n    $uuid = $order['uuid']??\"0\";\n    $server_id = $order['server_id'];\n    $inbound_id = $order['inbound_id'];\n    $expire_date = $order['expire_date'];\n    $expire_date = ($expire_date > $time) ? $expire_date : $time;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id` = ? AND `active` = 1\");\n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $respd = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $name = $respd['title'];\n    $days = $respd['days'];\n    $volume = $respd['volume'];\n    $price = $payInfo['price'];\n\n\n    unset($markup[count($markup)-1]);\n    $markup[] = [['text'=>\"✅\",'callback_data'=>\"wizwizch\"]];\n    $keys = json_encode(['inline_keyboard'=>array_values($markup)],488);\n\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $serverType = $server_info['type'];\n\n\n    editKeys($keys);\n\n    if($serverType == \"marzban\"){\n        $response = editMarzbanConfig($server_id, ['remark'=>$remark, 'days'=>$days, 'volume' => $volume]);\n    }else{\n        if($inbound_id > 0)\n            $response = editClientTraffic($server_id, $inbound_id, $uuid, $volume, $days, \"renew\");\n        else\n            $response = editInboundTraffic($server_id, $uuid, $volume, $days, \"renew\");\n    }\n    \n\tif(is_null($response)){\n\t\talert('🔻مشکل فنی در اتصال به سرور. لطفا به مدیریت اطلاع بدید',true);\n\t\texit;\n\t}\n\t$stmt = $connection->prepare(\"UPDATE `orders_list` SET `expire_date` = ?, `notif` = 0 WHERE `id` = ?\");\n\t$newExpire = $time + $days * 86400;\n\t$stmt->bind_param(\"ii\", $newExpire, $oid);\n\t$stmt->execute();\n\t$stmt->close();\n\t$stmt = $connection->prepare(\"INSERT INTO `increase_order` VALUES (NULL, ?, ?, ?, ?, ?, ?);\");\n\t$stmt->bind_param(\"iiisii\", $uid, $server_id, $inbound_id, $remark, $price, $time);\n\t$stmt->execute();\n\t$stmt->close();\n    sendMessage(str_replace([\"REMARK\", \"VOLUME\", \"DAYS\"],[$remark, $volume, $days], $mainValues['renewed_config_to_user']), getMainKeys(),null,null);\n    sendMessage(\"✅سرویس $remark با موفقیت تمدید شد\",null,null,$uid);\n    exit;\n}\nif(preg_match('/decRenewAcc(.*)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result()->fetch_assoc();\n    $hash_id = $payInfo['hash_id'];\n    $stmt->close();\n    \n    $uid = $payInfo['user_id'];\n    $oid = $payInfo['plan_id'];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $order = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $fid = $order['fileid'];\n    $remark = $order['remark'];\n    $server_id = $order['server_id'];\n    $inbound_id = $order['inbound_id'];\n    $expire_date = $order['expire_date'];\n    $expire_date = ($expire_date > $time) ? $expire_date : $time;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id` = ? AND `active` = 1\");\n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $respd = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $name = $respd['title'];\n    $days = $respd['days'];\n    $volume = $respd['volume'];\n    $price = $respd['price'];\n\n\n    unset($markup[count($markup)-1]);\n    $markup[] = [['text' => '❌', 'callback_data' => \"dontsendanymore\"]];\n    $keys = json_encode(['inline_keyboard'=>array_values($markup)],488);\n\n    editKeys($keys);\n    sendMessage(\"😖|تمدید سرویس $remark لغو شد\",null,null,$uid);\n    exit;\n}\nif(preg_match('/payRenewWithWallet(.*)/', $data,$match)){\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n\n    if($payInfo->num_rows == 0){\n        $text = \"/start\";\n        $data = \"\";\n        delMessage();\n        goto GOTOSTART;\n    }\n    $payInfo = $payInfo->fetch_assoc();\n    $hash_id = $payInfo['hash_id'];\n    \n    if($payInfo['state'] == \"paid_with_wallet\") exit();\n\n    $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'paid_with_wallet' WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n    $oid = $payInfo['plan_id'];\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $order = $stmt->get_result();\n    $stmt->close();\n\n    if($order->num_rows == 0){\n        delMessage();\n        sendMessage($mainValues['config_not_found'], getMainKeys());\n        exit();\n    }\n    $order = $order->fetch_assoc();\n    \n    $fid = $order['fileid'];\n    $remark = $order['remark'];\n    $uuid = $order['uuid']??\"0\";\n    $server_id = $order['server_id'];\n    $inbound_id = $order['inbound_id'];\n    $expire_date = $order['expire_date'];\n    $expire_date = ($expire_date > $time) ? $expire_date : $time;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id` = ? AND `active` = 1\");\n    $stmt->bind_param(\"i\", $fid);\n    $stmt->execute();\n    $respd = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $name = $respd['title'];\n    $days = $respd['days'];\n    $volume = $respd['volume'];\n    $price = $payInfo['price'];\n\n    $userwallet = $userInfo['wallet'];\n\n    if($userwallet < $price) {\n        $needamount = $price - $userwallet;\n        alert(\"💡موجودی کیف پول (\".number_format($userwallet).\" تومان) کافی نیست لطفا به مقدار \".number_format($needamount).\" تومان شارژ کنید \",true);\n        exit;\n    }\n\n\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $serverType = $server_info['type'];\n\n    if($serverType == \"marzban\"){\n        $response = editMarzbanConfig($server_id, ['remark'=>$remark, 'days'=>$days, 'volume' => $volume]);\n    }else{\n        if($inbound_id > 0)\n            $response = editClientTraffic($server_id, $inbound_id, $uuid, $volume, $days, \"renew\");\n        else\n            $response = editInboundTraffic($server_id, $uuid, $volume, $days, \"renew\");\n    }\n\n\tif(is_null($response)){\n\t\talert('🔻مشکل فنی در اتصال به سرور. لطفا به مدیریت اطلاع بدید',true);\n\t\texit;\n\t}\n\t$stmt = $connection->prepare(\"UPDATE `orders_list` SET `expire_date` = ?, `notif` = 0 WHERE `id` = ?\");\n\t$newExpire = $time + $days * 86400;\n\t$stmt->bind_param(\"ii\", $newExpire, $oid);\n\t$stmt->execute();\n\t$stmt->close();\n\t$stmt = $connection->prepare(\"INSERT INTO `increase_order` VALUES (NULL, ?, ?, ?, ?, ?, ?);\");\n\t$stmt->bind_param(\"iiisii\", $from_id, $server_id, $inbound_id, $remark, $price, $time);\n\t$stmt->execute();\n\t$stmt->close();\n\t\n\t$stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` - ? WHERE `userid` = ?\");\n\t$stmt->bind_param(\"ii\", $price, $from_id);\n\t$stmt->execute();\n\t$stmt->close();\n    editText($message_id, \"✅سرویس $remark با موفقیت تمدید شد\",getMainKeys());\n    $keys = json_encode(['inline_keyboard'=>[\n        [\n            ['text'=>\"به به تمدید 😍\",'callback_data'=>\"wizwizch\"]\n            ],\n        ]]);\n    $msg = str_replace(['TYPE', \"USER-ID\", \"USERNAME\", \"NAME\", \"PRICE\", \"REMARK\", \"VOLUME\", \"DAYS\"],['کیف پول', $from_id, $username, $first_name, $price, $remark, $volume, $days], $mainValues['renew_account_request_message']);\n\n    sendMessage($msg, $keys,\"html\", $admin);\n    exit;\n}\nif(preg_match('/switchLocation(.+)_(.+)_(.+)_(.+)/', $data,$match)){\n    $order_id = $match[1];\n    $server_id = $match[2];\n    $leftgp = $match[3];\n    $expire = $match[4]; \n    if($expire < time() or $leftgp <= 0) {\n        alert(\"سرویس شما غیرفعال است.لطفا ابتدا آن را تمدید کنید\",true);exit;\n    }\n    $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `active` = 1 and `state` = 1 and ucount > 0 AND `id` != ?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $respd = $stmt->get_result();\n    $stmt->close();\n    if($respd->num_rows == 0){\n        alert('در حال حاضر هیچ سرور فعالی برای تغییر لوکیشن وجود ندارد',true);\n        exit;\n    }\n    $keyboard = [];\n    while($cat = $respd->fetch_assoc()){\n        $sid = $cat['id'];\n        $name = $cat['title'];\n        $keyboard[] = ['text' => \"$name\", 'callback_data' => \"switchServer{$sid}_{$order_id}\"];\n    }\n    $keyboard = array_chunk($keyboard,2);\n    $keyboard[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"mainMenu\"]];\n    editText($message_id, ' 📍 لطفا برای تغییر لوکیشن سرویس فعلی, یکی از سرورها را انتخاب کنید👇',json_encode([\n            'inline_keyboard' => $keyboard\n        ]));\n}\nif($data==\"giftVolumeAndDay\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `active` = 1 and `state` = 1\");\n    $stmt->execute();\n    $respd = $stmt->get_result();\n    $stmt->close();\n    if($respd->num_rows == 0){\n        alert('در حال حاضر هیچ سرور فعالی برای هدیه دادن وجود ندارد',true);\n        exit;\n    }\n    $keyboard = [];\n    while($cat = $respd->fetch_assoc()){\n        $sid = $cat['id'];\n        $name = $cat['title'];\n        $keyboard[] = ['text' => \"$name\", 'callback_data' => \"giftToServer{$sid}\"];\n    }\n    $keyboard = array_chunk($keyboard,2);\n    $keyboard[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"managePanel\"]];\n    editText($message_id, ' 📍 لطفا برای هدیه دادن, یکی از سرورها را انتخاب کنید👇',json_encode([\n            'inline_keyboard' => $keyboard\n        ]));\n}\nif(preg_match('/^giftToServer(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage(\"لطفا مدت زمان هدیه را به روز وارد کنید\\nبرای اضافه نشدن زمان 0 را وارد کنید\", $cancelKey);\n    setUser('giftServerDay' . $match[1]);\n}\nif(preg_match('/^giftServerDay(\\d+)/',$userInfo['step'], $match) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    if(is_numeric($text)){\n        if($text >= 0){\n            sendMessage(\"لطفا حجم هدیه را به مگابایت وارد کنید\\nبرای اضافه نشدن حجم 0 را وارد کنید\");\n            setUser('giftServerVolume' . $match[1] . \"_\" . $text);\n        }else sendMessage(\"عددی بزرگتر و یا مساوی به 0 واردکنید\");\n    }else sendMessage($mainValues['send_only_number']);\n}\nif(preg_match('/^giftServerVolume(\\d+)_(\\d+)/',$userInfo['step'],$match) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    if(is_numeric($text)){\n        if($text >= 0){\n            $stmt = $connection->prepare(\"INSERT INTO `gift_list` (`server_id`, `volume`, `day`) VALUES (?, ?, ?)\");\n            $stmt->bind_param(\"iii\", $match[1], $text, $match[2]);\n            $stmt->execute();\n            $stmt->close();\n            \n            sendMessage($mainValues['saved_successfuly'],$removeKeyboard);\n            sendMessage($mainValues['reached_main_menu'],getMainKeys());\n\n            setUser();\n        }else sendMessage(\"عددی بزرگتر و یا مساوی به 0 واردکنید\");\n    }else sendMessage($mainValues['send_only_number']);\n}\nif(preg_match('/switchLocation(.+)_(.+)_(.+)_(.+)/', $data,$match)){\n    $order_id = $match[1];\n    $server_id = $match[2];\n    $leftgp = $match[3];\n    $expire = $match[4]; \n    if($expire < time() or $leftgp <= 0) {\n        alert(\"سرویس شما غیرفعال است.لطفا ابتدا آن را تمدید کنید\",true);exit;\n    }\n    $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `active` = 1 and `state` = 1 and ucount > 0 AND `id` != ?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $respd = $stmt->get_result();\n    $stmt->close();\n    if($respd->num_rows == 0){\n        alert('در حال حاضر هیچ سرور فعالی برای تغییر لوکیشن وجود ندارد',true);\n        exit;\n    }\n    $keyboard = [];\n    while($cat = $respd->fetch_assoc()){\n        $sid = $cat['id'];\n        $name = $cat['title'];\n        $keyboard[] = ['text' => \"$name\", 'callback_data' => \"switchServer{$sid}_{$order_id}\"];\n    }\n    $keyboard = array_chunk($keyboard,2);\n    $keyboard[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"mainMenu\"]];\n    editText($message_id, ' 📍 لطفا برای تغییر لوکیشن سرویس فعلی, یکی از سرورها را انتخاب کنید👇',json_encode([\n            'inline_keyboard' => $keyboard\n        ]));\n}\nif(preg_match('/switchServer(.+)_(.+)/',$data,$match)){\n    $sid = $match[1];\n    $oid = $match[2];\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $order = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $inbound_id = $order['inbound_id'];\n    $server_id = $order['server_id'];\n    $remark = $order['remark'];\n    $uuid = $order['uuid']??\"0\";\n    $fid = $order['fileid'];\n    $protocol = $order['protocol'];\n\t$link = json_decode($order['link'])[0];\n\t\n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $fid); \n    $stmt->execute();\n    $file_detail = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $flow = $file_detail['flow'] == \"None\"?\"\":$file_detail['flow'];\n\t\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $reality = $server_info['reality'];\n    $serverType = $server_info['type'];\n    $panelUrl = $server_info['panel_url'];\n\n    $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $sid);\n    $stmt->execute();\n    $srv_remark = $stmt->get_result()->fetch_assoc()['remark'];\n\n\n    if($botState['remark'] == \"digits\"){\n        $rnd = rand(10000,99999);\n        $newRemark = \"{$srv_remark}-{$rnd}\";\n    }else{\n        $rnd = rand(1111,99999);\n        $newRemark = \"{$srv_remark}-{$from_id}-{$rnd}\";\n    }\n\t\n    if(preg_match('/vmess/',$link)){\n        $link_info = json_decode(base64_decode(str_replace('vmess://','',$link)));\n        $uniqid = $link_info->id;\n        $port = $link_info->port;\n        $netType = $link_info->net;\n    }else{\n        $link_info = parse_url($link);\n        $panel_ip = $link_info['host'];\n        $uniqid = $link_info['user'];\n        $protocol = $link_info['scheme'];\n        $port = $link_info['port'];\n        $netType = explode('type=',$link_info['query'])[1]; \n        $netType = explode('&',$netType)[0];\n    }\n\n    if($inbound_id > 0) {\n        $remove_response = deleteClient($server_id, $inbound_id, $uuid);\n\t\tif(is_null($remove_response)){\n\t\t\talert('🔻اتصال به سرور برقرار نیست. لطفا به مدیریت اطلاع بدید',true);\n\t\t\texit;\n\t\t}\n        if($remove_response){\n            $total = $remove_response['total'];\n            $up = $remove_response['up'];\n            $down = $remove_response['down'];\n\t\t\t$id_label = $protocol == 'trojan' ? 'password' : 'id';\n\t\t\tif($serverType == \"sanaei\" || $serverType == \"alireza\"){\n\t\t\t    if($reality == \"true\"){\n                    $newArr = [\n                      \"$id_label\" => $uniqid,\n                      \"email\" => $newRemark,\n                      \"enable\" => true,\n                      \"flow\" => $flow,\n                      \"limitIp\" => $remove_response['limitIp'],\n                      \"totalGB\" => $total - $up - $down,\n                      \"expiryTime\" => $remove_response['expiryTime'],\n                      \"subId\" => RandomString(16)\n                    ];\t\t\t        \n\t\t\t    }else{\n                    $newArr = [\n                      \"$id_label\" => $uniqid,\n                      \"email\" => $newRemark,\n                      \"enable\" => true,\n                      \"limitIp\" => $remove_response['limitIp'],\n                      \"totalGB\" => $total - $up - $down,\n                      \"expiryTime\" => $remove_response['expiryTime'],\n                      \"subId\" => RandomString(16)\n                    ];\n\t\t\t    }\n\t\t\t}else{\n                $newArr = [\n                  \"$id_label\" => $uniqid,\n                  \"flow\" => $remove_response['flow'],\n                  \"email\" => $newRremark,\n                  \"limitIp\" => $remove_response['limitIp'],\n                  \"totalGB\" => $total - $up - $down,\n                  \"expiryTime\" => $remove_response['expiryTime']\n                ];\n\t\t\t}\n            \n            $response = addInboundAccount($sid, '', $inbound_id, 1, $newRemark, 0, 1, $newArr); \n            if(is_null($response)){\n                alert('🔻اتصال به سرور برقرار نیست. لطفا به مدیریت اطلاع بدید',true);\n                exit;\n            }\n\t\t\tif($response == \"inbound not Found\"){\n                alert(\"🔻سطر (inbound) با آیدی $inbound_id در این سرور یافت نشد. لطفا به مدیریت اطلاع بدید\",true);\n                exit;\n            }\n\t\t\tif(!$response->success){\n\t\t\t\talert('🔻خطا در ساخت کانفیگ. لطفا به مدیریت اطلاع بدید',true);\n\t\t\t\texit;\n\t\t\t}\n\t\t\t$vray_link = getConnectionLink($sid, $uniqid, $protocol, $newRemark, $port, $netType, $inbound_id);\n\t\t\tdeleteClient($server_id, $inbound_id, $uuid, 1);\n        }\n    }else{\n        $response = deleteInbound($server_id, $uuid);\n\t\tif(is_null($response)){\n\t\t\talert('🔻اتصال به سرور برقرار نیست. لطفا به مدیریت اطلاع بدید',true);\n\t\t\texit;\n\t\t}\n        if($response){\n            if($serverType == \"marzban\"){\n                $response = addMarzbanUser($server_id, $newRemark, $volume, $days, $fid);\n                if(!$response->success){\n                    if($response->msg == \"User already exists\"){\n                        $newRemark .= rand(1111,99999);\n                        $response = addMarzbanUser($server_id, $newRemark, $volume, $days, $fid);\n                    }\n                }\n                $uniqid = $token = str_replace(\"/sub/\", \"\", $response->sub_link);\n                $subLink = $botState['subLinkState'] == \"on\"?$panelUrl . $response->sub_link:\"\";\n                $vraylink = $response->vray_links;\n\n                $stmt = $connection->prepare(\"UPDATE `orders_list` SET `token` = ?, `uuid` =? WHERE `id` = ?\");\n                $stmt->bind_param(\"ssi\", $token, $uniqid, $oid);\n                $stmt->execute();\n                $stmt->close();\n\n            }else{\n                $res = addUser($sid, $response['uniqid'], $response['protocol'], $response['port'], $response['expiryTime'], $newRemark, $response['volume'] / 1073741824, $response['netType'], $response['security']);\n                $vray_link = getConnectionLink($sid, $response['uniqid'], $response['protocol'], $newRemark, $response['port'], $response['netType'], $inbound_id);\n            }\n            deleteInbound($server_id, $uuid, 1);\n        }\n    }\n    $stmt = $connection->prepare(\"UPDATE `server_info` SET `ucount` = `ucount` + 1 WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $stmt->close();\n\n    $stmt = $connection->prepare(\"UPDATE `server_info` SET `ucount` = `ucount` - 1 WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $sid);\n    $stmt->execute();\n    $stmt->close();\n\n    $vray_link = json_encode($vray_link);\n    $stmt = $connection->prepare(\"UPDATE `orders_list` SET `server_id` = ?, `link`=?, `remark` = ? WHERE `id` = ?\");\n    $stmt->bind_param(\"issi\", $sid, $vray_link, $newRemark, $oid);\n    $stmt->execute();\n    $stmt->close();\n\n    $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $sid);\n    $stmt->execute();\n    $server_title = $stmt->get_result()->fetch_assoc()['title'];\n    $stmt->close();\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `userid` = ? AND `status` = 1 ORDER BY `id` DESC\");\n    $stmt->bind_param(\"i\", $from_id);\n    $stmt->execute();\n    $orders = $stmt->get_result();\n    $stmt->close();\n    \n    $keyboard = [];\n    while($cat = $orders->fetch_assoc()){\n        $id = $cat['id'];\n        $cremark = $cat['remark'];\n        $keyboard[] = ['text' => \"$cremark\", 'callback_data' => \"orderDetails$id\"];\n    }\n    $keyboard = array_chunk($keyboard,2);\n    $keyboard[] = [['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]];\n    $msg = \" 📍لوکیشن سرویس $remark به $server_title با ریمارک $newRemark تغییر یافت.\\n لطفا برای مشاهده مشخصات, روی آن بزنید👇\";\n    \n    editText($message_id, $msg,json_encode([\n            'inline_keyboard' => $keyboard\n        ]));\n    exit();\n}\nelseif(preg_match('/^deleteMyConfig(\\d+)/',$data,$match)){\n    $oid = $match[1];\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $order = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $remark = $order['remark'];\n\n    editText($message_id, \"آیا از حذف کانفیگ $remark مطمئن هستید؟\",json_encode([\n        'inline_keyboard' => [\n            [['text'=>\"بلی\",'callback_data'=>\"yesDeleteConfig\" . $match[1]],['text'=>\"نخیر\",'callback_data'=>\"noDontDelete\"]]\n            ]\n    ]));\n}\nelseif($data==\"noDontDelete\"){\n    editText($message_id, \"عملیه مورد نظر لغو شد\",json_encode([\n        'inline_keyboard' => [\n            [['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]]\n            ]\n    ]));\n}\nelseif(preg_match('/^yesDeleteConfig(\\d+)/',$data,$match)){\n    $oid = $match[1];\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $order = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $inbound_id = $order['inbound_id'];\n    $server_id = $order['server_id'];\n    $remark = $order['remark'];\n    $uuid = $order['uuid']??\"0\";\n    $fileid = $order['fileid'];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $fileid);\n    $stmt->execute();\n    $planDetail = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\t$volume = $planDetail['volume'];\n\t$days = $planDetail['days'];\n\t\n    $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id` = ?\");\n    $stmt->bind_param('i', $server_id);\n    $stmt->execute();\n    $serverConfig = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $serverType = $serverConfig['type'];\n\n\t\n\tif($serverType != \"marzban\"){\n        if($inbound_id > 0) $res = deleteClient($server_id, $inbound_id, $uuid, 1);\n        else $res = deleteInbound($server_id, $uuid, 1);\n        \n        $leftMb = sumerize($res['total'] - $res['up'] - $res['down']);\n        $expiryDay = $res['expiryTime'] != 0?\n            floor(\n                (substr($res['expiryTime'],0,-3)-time())/(60 * 60 * 24))\n                :\n                \"نامحدود\";\n\t}else{\n\t    $configInfo = getMarzbanUser($server_id, $remark);\n\t    deleteMarzban($server_id, $remark);\n\t    $leftMb = sumerize($configInfo->data_limit - $configInfo->used_traffic);\n\t    $expiryDay = $configInfo->expire != 0?\n\t        floor(($configInfo->expire - time())/ 86400):\"نامحدود\";\n\t}\n\n    \n    if(is_numeric($expiryDay)){\n        if($expiryDay<0) $expiryDay = 0;\n    }\n\n    $stmt = $connection->prepare(\"UPDATE `server_info` SET `ucount` = `ucount` + 1 WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $stmt->close();\n\n    $vray_link = json_encode($vray_link);\n    $stmt = $connection->prepare(\"DELETE FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $stmt->close();\n\n    editText($message_id, \"کانفیگ $remark با موفقیت حذف شد\",json_encode([\n            'inline_keyboard' => [\n                [['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]]\n                ]\n        ]));\n        \nsendMessage(\"\n🔋|💰 حذف کانفیگ\n\n▫️آیدی کاربر: $from_id\n👨‍💼اسم کاربر: $first_name\n⚡️ نام کاربری: $username\n🎈 نام سرویس: $remark\n🔋حجم سرویس: $volume گیگ\n⏰ مدت زمان سرویس: $days روز\n❌ حجم باقی مانده: $leftMb\n📆 روز باقیمانده: $expiryDay روز\n\",null,\"html\", $admin);\n    exit();\n}\nelseif(preg_match('/^delUserConfig(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $oid = $match[1];\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $order = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $remark = $order['remark'];\n\n    editText($message_id, \"آیا از حذف کانفیگ $remark مطمئن هستید؟\",json_encode([\n        'inline_keyboard' => [\n            [['text'=>\"بلی\",'callback_data'=>\"yesDeleteUserConfig\" . $match[1]],['text'=>\"نخیر\",'callback_data'=>\"noDontDelete\"]]\n            ]\n    ]));\n}\nelseif(preg_match('/^yesDeleteUserConfig(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $oid = $match[1];\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $order = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $userId = $order['userid'];\n    $inbound_id = $order['inbound_id'];\n    $server_id = $order['server_id'];\n    $remark = $order['remark'];\n    $uuid = $order['uuid']??\"0\";\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id` = ?\");\n    $stmt->bind_param('i', $server_id);\n    $stmt->execute();\n    $serverConfig = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $serverType = $serverConfig['type'];\n    \n\t\n\tif($serverType != \"marzban\"){\n        if($inbound_id > 0) $res = deleteClient($server_id, $inbound_id, $uuid, 1);\n        else $res = deleteInbound($server_id, $uuid, 1);\n\t}else{\n\t    $res = deleteMarzban($server_id, $remark);\n\t}\n    \n\n    $stmt = $connection->prepare(\"UPDATE `server_info` SET `ucount` = `ucount` + 1 WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $stmt->close();\n\n    $vray_link = json_encode($vray_link);\n    $stmt = $connection->prepare(\"DELETE FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $oid);\n    $stmt->execute();\n    $stmt->close();\n\n    editText($message_id, \"کانفیگ $remark با موفقیت حذف شد\",json_encode([\n            'inline_keyboard' => [\n                [['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]]\n                ]\n        ]));\n        \n    exit();\n}\nif(preg_match('/increaseADay(.*)/', $data, $match)){\n    $stmt = $connection->prepare(\"SELECT * FROM `increase_day`\");\n    $stmt->execute();\n    $res = $stmt->get_result();\n    $stmt->close();\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $orderInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $agentBought = $orderInfo['agent_bought'];\n\n    if($res->num_rows == 0){\n        alert(\"در حال حاضر هیچ پلنی برای افزایش مدت زمان سرویس وجود ندارد\");\n        exit;\n    }\n    $keyboard = [];\n    while ($cat = $res->fetch_assoc()){\n        $id = $cat['id'];\n        $title = $cat['volume'];\n        $price = $cat['price'];\n        if($agentBought == true){\n            $discounts = json_decode($userInfo['discount_percent'],true);\n            if($botState['agencyPlanDiscount']==\"on\") $discount = $discounts['plans'][$orderInfo['fileid']]?? $discounts['normal'];\n            else $discount = $discounts['servers'][$orderInfo['server_id']]?? $discounts['normal'];\n            $price -= floor($price * $discount / 100);\n        }\n        if($price == 0) $price = \"رایگان\";\n        else $price = number_format($price) . \" تومان\";\n        $keyboard[] = ['text' => \"$title روز $price\", 'callback_data' => \"selectPlanDayIncrease{$match[1]}_$id\"];\n    }\n    $keyboard = array_chunk($keyboard,2);\n    $keyboard[] = [['text' => $buttonValues['back_to_main'], 'callback_data' => \"mainMenu\"]];\n    editText($message_id, \"لطفا یکی از پلن های افزایشی را انتخاب کنید :\", json_encode([\n            'inline_keyboard' => $keyboard\n        ]));\n}\nif(preg_match('/selectPlanDayIncrease(?<orderId>.+)_(?<dayId>.+)/',$data,$match)){\n    $data = str_replace('selectPlanDayIncrease','',$data);\n    $pid = $match['dayId'];\n    $stmt = $connection->prepare(\"SELECT * FROM `increase_day` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $pid);\n    $stmt->execute();\n    $res = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $planprice = $res['price'];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $match['orderId']);\n    $stmt->execute();\n    $orderInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $agentBought = $orderInfo['agent_bought'];\n    \n    if($agentBought == true){\n        $discounts = json_decode($userInfo['discount_percent'],true);\n        if($botState['agencyPlanDiscount']==\"on\") $discount = $discounts['plans'][$orderInfo['fileid']]?? $discounts['normal'];\n        else $discount = $discounts['servers'][$orderInfo['server_id']]?? $discounts['normal'];\n\n        $planprice -= floor($planprice * $discount / 100);\n    }\n    \n    \n    $hash_id = RandomString();\n    $stmt = $connection->prepare(\"DELETE FROM `pays` WHERE `user_id` = ? AND `type` LIKE '%INCREASE_DAY%' AND `state` = 'pending'\");\n    $stmt->bind_param(\"i\", $from_id);\n    $stmt->execute();\n    $stmt->close();\n    \n    $time = time();\n    $stmt = $connection->prepare(\"INSERT INTO `pays` (`hash_id`, `user_id`, `type`, `plan_id`, `volume`, `day`, `price`, `request_date`, `state`)\n                                VALUES (?, ?, ?, '0', '0', '0', ?, ?, 'pending')\");\n    $type = \"INCREASE_DAY_$data\";\n    $stmt->bind_param(\"sisii\", $hash_id, $from_id,$type, $planprice, $time);\n    $stmt->execute();\n    $stmt->close();\n\n    \n    $keyboard = array();\n    if($botState['cartToCartState'] == \"on\") $keyboard[] = [['text' => $buttonValues['cart_to_cart'],  'callback_data' => \"payIncreaseDayWithCartToCart$hash_id\"]];\n    if($botState['nowPaymentOther'] == \"on\") $keyboard[] = [['text' => $buttonValues['now_payment_gateway'],  'url' => $botUrl . \"pay/?nowpayment&hash_id=\" . $hash_id]];\n    if($botState['zarinpal'] == \"on\") $keyboard[] = [['text' => $buttonValues['zarinpal_gateway'],  'url' => $botUrl . \"pay/?zarinpal&hash_id=\" . $hash_id]];\n    if($botState['nextpay'] == \"on\") $keyboard[] = [['text' => $buttonValues['nextpay_gateway'],  'url' => $botUrl . \"pay/?nextpay&hash_id=\" . $hash_id]];\n    if($botState['weSwapState'] == \"on\") $keyboard[] = [['text' => $buttonValues['weswap_gateway'],  'callback_data' => \"payWithWeSwap\" . $hash_id]];\n    if($botState['walletState'] == \"on\") $keyboard[] = [['text' => $buttonValues['pay_with_wallet'],  'callback_data' => \"payIncraseDayWithWallet$hash_id\"]];\n    if($botState['tronWallet'] == \"on\") $keyboard[] = [['text' => $buttonValues['tron_gateway'],  'callback_data' => \"payWithTronWallet\" . $hash_id]];\n\n    $keyboard[] = [['text'=>$buttonValues['cancel'], 'callback_data'=> \"mainMenu\"]];\n    editText($message_id, \"لطفا با یکی از روش های زیر پرداخت خود را تکمیل کنید :\",json_encode(['inline_keyboard' => $keyboard]));\n}\nif(preg_match('/payIncreaseDayWithCartToCart(.*)/',$data,$match)) {\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n    if($payInfo->num_rows == 0){\n        $text = \"/start\";\n        $data = \"\";\n        delMessage();\n        goto GOTOSTART;\n    }\n\n    delMessage();\n    setUser($data);\n    sendMessage(str_replace(['ACCOUNT-NUMBER', 'HOLDER-NAME'],[$paymentKeys['bankAccount'], $paymentKeys['holderName']], $mainValues['renew_ccount_cart_to_cart']),$cancelKey,\"html\");\n\n    exit;\n}\nif(preg_match('/payIncreaseDayWithCartToCart(.*)/',$userInfo['step'], $match) and $text != $buttonValues['cancel']){\n    if(isset($update->message->photo)){\n        $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n        $stmt->bind_param(\"s\", $match[1]);\n        $stmt->execute();\n        $payInfo = $stmt->get_result();\n        $stmt->close();\n        \n        $payParam = $payInfo->fetch_assoc();\n        $payType = $payParam['type'];\n    \n    \n        preg_match('/^INCREASE_DAY_(\\d+)_(\\d+)/',$payType,$increaseInfo);\n        $orderId = $increaseInfo[1];\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $orderId);\n        $stmt->execute();\n        $orderInfo = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        \n        $server_id = $orderInfo['server_id'];\n        $inbound_id = $orderInfo['inbound_id'];\n        $remark = $orderInfo['remark'];\n        \n        $planid = $increaseInfo[2];\n\n        $stmt = $connection->prepare(\"SELECT * FROM `increase_day` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $planid);\n        $stmt->execute();\n        $res = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        $price = $payParam['price'];\n        $volume = $res['volume'];\n    \n        sendMessage($mainValues['renew_order_sent'],$removeKeyboard);\n        sendMessage($mainValues['reached_main_menu'],getMainKeys());\n    \n        // notify admin   \n        $msg = str_replace(['INCREASE', 'TYPE', \"USER-ID\", \"USERNAME\", \"NAME\", \"PRICE\", \"REMARK\"],[$volume, 'زمان', $from_id, $username, $first_name, $price, $remark], $mainValues['increase_account_request_message']);\n    \n        $keyboard = json_encode([\n            'inline_keyboard' => [\n                [\n                    ['text' => $buttonValues['approve'], 'callback_data' => \"approveIncreaseDay{$match[1]}\"],\n                    ['text' => $buttonValues['decline'], 'callback_data' => \"decIncreaseDay{$match[1]}\"]\n                ]\n            ]\n        ]);\n\n\n        $res = sendPhoto($fileid, $msg,$keyboard, \"HTML\", $admin);\n        $msgId = $res->result->message_id;\n        setUser();\n        \n        $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'have_sent', `message_id` = ?, `chat_id` = ? WHERE `hash_id` = ?\");\n        $stmt->bind_param(\"iis\", $msgId, $admin, $match[1]);\n        $stmt->execute();\n        $stmt->close();\n    }else{ \n        sendMessage($mainValues['please_send_only_image']);\n    }\n\n}\nif(preg_match('/approveIncreaseDay(.*)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n    $payParam = $payInfo->fetch_assoc();\n    $payType = $payParam['type'];\n    \n    if($payParam['state'] == \"approved\") exit();\n    \n    $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'approved' WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n\n\n    preg_match('/^INCREASE_DAY_(\\d+)_(\\d+)/',$payType,$increaseInfo);\n    $orderId = $increaseInfo[1];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $orderId);\n    $stmt->execute();\n    $orderInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $server_id = $orderInfo['server_id'];\n    $inbound_id = $orderInfo['inbound_id'];\n    $remark = $orderInfo['remark'];\n    $uuid = $orderInfo['uuid']??\"0\";\n    \n    $planid = $increaseInfo[2];\n\n    \n    $uid = $payParam['user_id'];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `increase_day` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $planid);\n    $stmt->execute();\n    $res = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $price = $res['price'];\n    $volume = $res['volume'];\n\n    $acctxt = '';\n    \n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $serverType = $server_info['type'];\n    \n    unset($markup[count($markup)-1]);\n\n    if($serverType == \"marzban\"){\n        $response = editMarzbanConfig($server_id, ['remark'=>$remark, 'plus_day'=>$volume]);\n    }else{\n        if($inbound_id > 0) $response = editClientTraffic($server_id, $inbound_id, $uuid, 0, $volume);\n        else $response = editInboundTraffic($server_id, $uuid, 0, $volume);\n    }\n    \n    if($response->success){\n        $stmt = $connection->prepare(\"UPDATE `orders_list` SET `expire_date` = `expire_date` + ?, `notif` = 0 WHERE `uuid` = ?\");\n        $newVolume = $volume * 86400;\n        $stmt->bind_param(\"is\", $newVolume, $uuid);\n        $stmt->execute();\n        $stmt->close();\n        \n        $stmt = $connection->prepare(\"INSERT INTO `increase_order` VALUES (NULL, ?, ?, ?, ?, ?, ?);\");\n        $newVolume = $volume * 86400;\n        $stmt->bind_param(\"iiisii\", $uid, $server_id, $inbound_id, $remark, $price, $time);\n        $stmt->execute();\n        $stmt->close();\n        $markup[] = [['text' => '✅', 'callback_data' => \"dontsendanymore\"]];\n        $keys = json_encode(['inline_keyboard'=>array_values($markup)],488);\n    \n        editKeys($keys);\n        sendMessage(\"✅$volume روز به مدت زمان سرویس شما اضافه شد\",null,null,$uid);\n    }else {\n        alert(\"مشکل فنی در ارتباط با سرور. لطفا سلامت سرور را بررسی کنید\",true);\n        exit;\n    }\n}\nif(preg_match('/payIncraseDayWithWallet(.*)/', $data,$match)){\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n    \n    if($payInfo->num_rows == 0){\n        $text = \"/start\";\n        $data = \"\";\n        delMessage();\n        goto GOTOSTART;\n    }\n    $payParam = $payInfo->fetch_assoc();\n    $payType = $payParam['type'];\n\n    $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'paid_with_wallet' WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n    preg_match('/^INCREASE_DAY_(\\d+)_(\\d+)/',$payType, $increaseInfo);\n    $orderId = $increaseInfo[1];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $orderId);\n    $stmt->execute();\n    $orderInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $server_id = $orderInfo['server_id'];\n    $inbound_id = $orderInfo['inbound_id'];\n    $remark = $orderInfo['remark'];\n    $uuid = $orderInfo['uuid']??\"0\";\n    \n    $planid = $increaseInfo[2];\n\n    $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id` = ?\");\n    $stmt->bind_param('i', $server_id);\n    $stmt->execute();\n    $serverConfig = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $serverType = $serverConfig['type'];\n\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `increase_day` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $planid);\n    $stmt->execute();\n    $res = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $price = $payParam['price'];\n    $volume = $res['volume'];\n    \n    $userwallet = $userInfo['wallet'];\n\n    if($userwallet < $price) {\n        $needamount = $price - $userwallet;\n        alert(\"💡موجودی کیف پول (\".number_format($userwallet).\" تومان) کافی نیست لطفا به مقدار \".number_format($needamount).\" تومان شارژ کنید \",true);\n        exit;\n    }\n\n    \n    \n    if($serverType == \"marzban\"){\n        $response = editMarzbanConfig($server_id, ['remark'=>$remark, 'plus_day'=>$volume]);\n    }else{\n        if($inbound_id > 0)\n            $response = editClientTraffic($server_id, $inbound_id, $uuid, 0, $volume);\n        else\n            $response = editInboundTraffic($server_id, $uuid, 0, $volume);\n    }\n        \n    if($response->success){\n        $stmt = $connection->prepare(\"UPDATE `orders_list` SET `expire_date` = `expire_date` + ?, `notif` = 0 WHERE `uuid` = ?\");\n        $newVolume = $volume * 86400;\n        $stmt->bind_param(\"is\", $newVolume, $uuid);\n        $stmt->execute();\n        $stmt->close();\n        \n        $stmt = $connection->prepare(\"INSERT INTO `increase_order` VALUES (NULL, ?, ?, ?, ?, ?, ?);\");\n        $newVolume = $volume * 86400;\n        $stmt->bind_param(\"iiisii\", $from_id, $server_id, $inbound_id, $remark, $price, $time);\n        $stmt->execute();\n        $stmt->close();\n        \n        $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` - ? WHERE `userid` = ?\");\n        $stmt->bind_param(\"ii\", $price, $from_id);\n        $stmt->execute();\n        $stmt->close();\n        editText($message_id, \"✅$volume روز به مدت زمان سرویس شما اضافه شد\",getMainKeys());\n        \n        $keys = json_encode(['inline_keyboard'=>[\n            [\n                ['text'=>\"اخیش یکی زمان زد 😁\",'callback_data'=>\"wizwizch\"]\n                ],\n            ]]);\n        sendMessage(\"\n🔋|💰 افزایش زمان با ( کیف پول )\n\n▫️آیدی کاربر: $from_id\n👨‍💼اسم کاربر: $first_name\n⚡️ نام کاربری: $username\n🎈 نام سرویس: $remark\n⏰ مدت افزایش: $volume روز\n💰قیمت: $price تومان\n⁮⁮ ⁮⁮\n        \",$keys,\"html\", $admin);\n\n        exit;\n    }else {\n        alert(\"به دلیل مشکل فنی امکان افزایش حجم نیست. لطفا به مدیریت اطلاع بدید یا 5دقیقه دیگر دوباره تست کنید\", true);\n        exit;\n    }\n}\nif(preg_match('/^increaseAVolume(.*)/', $data, $match)){\n    $stmt = $connection->prepare(\"SELECT * FROM `increase_plan`\");\n    $stmt->execute();\n    $res = $stmt->get_result();\n    $stmt->close();\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $orderInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $agentBought = $orderInfo['agent_bought'];\n    \n    if($res->num_rows==0){\n        alert(\"در حال حاضر هیچ پلن حجمی وجود ندارد\");\n        exit;\n    }\n    $keyboard = [];\n    while($cat = $res->fetch_assoc()){\n        $id = $cat['id'];\n        $title = $cat['volume'];\n        $price = $cat['price'];\n        if($agentBought == true){\n            $discounts = json_decode($userInfo['discount_percent'],true);\n            if($botState['agencyPlanDiscount']==\"on\") $discount = $discounts['plans'][$orderInfo['fileid']]?? $discounts['normal'];\n            else $discount = $discounts['servers'][$orderInfo['server_id']]?? $discounts['normal'];\n            $price -= floor($price * $discount / 100);\n        }\n        if($price == 0) $price = \"رایگان\";\n        else $price = number_format($price) .  ' تومان';\n        \n        $keyboard[] = ['text' => \"$title گیگ $price\", 'callback_data' => \"increaseVolumePlan{$match[1]}_{$id}\"];\n    }\n    $keyboard = array_chunk($keyboard,2);\n    $keyboard[] = [['text'=>\"صفحه ی اصلی 🏘\",'callback_data'=>\"mainMenu\"]];\n    $res = editText($message_id, \"لطفا یکی از پلن های حجمی را انتخاب کنید :\",json_encode([\n            'inline_keyboard' => $keyboard\n        ]));\n}\nif(preg_match('/increaseVolumePlan(?<orderId>.+)_(?<volumeId>.+)/',$data,$match)){\n    $data = str_replace('increaseVolumePlan','',$data);\n    $stmt = $connection->prepare(\"SELECT * FROM `increase_plan` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $match['volumeId']);\n    $stmt->execute();\n    $res = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $planprice = $res['price'];\n    $plangb = $res['volume'];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $match['orderId']);\n    $stmt->execute();\n    $orderInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $agentBought = $orderInfo['agent_bought'];\n \n    if($agentBought == true){\n        $discounts = json_decode($userInfo['discount_percent'],true);\n        if($botState['agencyPlanDiscount']==\"on\") $discount = $discounts['plans'][$orderInfo['fileid']]?? $discounts['normal'];\n        else $discount = $discounts['servers'][$orderInfo['server_id']]?? $discounts['normal'];\n        \n        $planprice -= floor($planprice * $discount / 100);\n    }\n\n    $hash_id = RandomString();\n    $stmt = $connection->prepare(\"DELETE FROM `pays` WHERE `user_id` = ? AND `type` LIKE '%INCREASE_VOLUME%' AND `state` = 'pending'\");\n    $stmt->bind_param(\"i\", $from_id);\n    $stmt->execute();\n    $stmt->close();\n    \n    $time = time();\n    $stmt = $connection->prepare(\"INSERT INTO `pays` (`hash_id`, `user_id`, `type`, `plan_id`, `volume`, `day`, `price`, `request_date`, `state`)\n                                VALUES (?, ?, ?, '0', '0', '0', ?, ?, 'pending')\");\n    $type = \"INCREASE_VOLUME_$data\";\n    $stmt->bind_param(\"sisii\", $hash_id, $from_id,$type, $planprice, $time);\n    $stmt->execute();\n    $stmt->close();\n    \n    $keyboard = array();\n    \n    if($planprice == 0) $planprice = ' رایگان';\n    else $planprice = \" \" . number_format($planprice) . \" تومان\";\n    \n    \n    if($botState['cartToCartState'] == \"on\") $keyboard[] = [['text' => $buttonValues['cart_to_cart'] . $planprice,  'callback_data' => \"payIncreaseWithCartToCart$hash_id\"]];\n    if($botState['nowPaymentOther'] == \"on\") $keyboard[] = [['text' => $buttonValues['now_payment_gateway'],  'url' => $botUrl . \"pay/?nowpayment&hash_id=\" . $hash_id]];\n    if($botState['zarinpal'] == \"on\") $keyboard[] = [['text' => $buttonValues['zarinpal_gateway'],  'url' => $botUrl . \"pay/?zarinpal&hash_id=\" . $hash_id]];\n    if($botState['nextpay'] == \"on\") $keyboard[] = [['text' => $buttonValues['nextpay_gateway'],  'url' => $botUrl . \"pay/?nextpay&hash_id=\" . $hash_id]];\n    if($botState['weSwapState'] == \"on\") $keyboard[] = [['text' => $buttonValues['weswap_gateway'],  'callback_data' => \"payWithWeSwap\" . $hash_id]];\n    if($botState['walletState'] == \"on\") $keyboard[] = [['text' => \"💰پرداخت با موجودی  \" . $planprice,  'callback_data' => \"payIncraseWithWallet$hash_id\"]];\n    if($botState['tronWallet'] == \"on\") $keyboard[] = [['text' => $buttonValues['tron_gateway'],  'callback_data' => \"payWithTronWallet\" . $hash_id]];\n\n    $keyboard[] = [['text'=>$buttonValues['cancel'], 'callback_data'=> \"mainMenu\"]];\n    editText($message_id, \"لطفا با یکی از روش های زیر پرداخت خود را تکمیل کنید :\",json_encode(['inline_keyboard' => $keyboard]));\n} \nif(preg_match('/payIncreaseWithCartToCart(.*)/',$data, $match)) {\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n    if($payInfo->num_rows == 0){\n        $text = \"/start\";\n        $data = \"\";\n        delMessage();\n        goto GOTOSTART;\n    }\n\n    setUser($data);\n    delMessage();\n    \n    sendMessage(str_replace(['ACCOUNT-NUMBER', 'HOLDER-NAME'],[$paymentKeys['bankAccount'], $paymentKeys['holderName']], $mainValues['renew_ccount_cart_to_cart']),$cancelKey,\"html\");\n    exit;\n}\nif(preg_match('/payIncreaseWithCartToCart(.*)/',$userInfo['step'],$match) and $text != $buttonValues['cancel']){\n    if(isset($update->message->photo)){\n        $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n        $stmt->bind_param(\"s\", $match[1]);\n        $stmt->execute();\n        $payInfo = $stmt->get_result();\n        $stmt->close();\n        \n        $payParam = $payInfo->fetch_assoc();\n        $payType = $payParam['type'];\n    \n    \n        preg_match('/^INCREASE_VOLUME_(\\d+)_(\\d+)/',$payType, $increaseInfo);\n        $orderId = $increaseInfo[1];\n        \n        $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $orderId);\n        $stmt->execute();\n        $orderInfo = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        \n        $server_id = $orderInfo['server_id'];\n        $inbound_id = $orderInfo['inbound_id'];\n        $remark = $orderInfo['remark'];\n        \n        $planid = $increaseInfo[2];\n    \n        $stmt = $connection->prepare(\"SELECT * FROM `increase_plan` WHERE `id` = ?\");\n        $stmt->bind_param(\"i\", $planid);\n        $stmt->execute();\n        $res = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        $price = $payParam['price'];\n        $volume = $res['volume'];\n        $state = str_replace('payIncreaseWithCartToCart','',$userInfo['step']);\n        sendMessage($mainValues['renew_order_sent'],$removeKeyboard);\n        sendMessage($mainValues['reached_main_menu'],getMainKeys());\n    \n        // notify admin\n\n        $msg = str_replace(['INCREASE', 'TYPE', \"USER-ID\", \"USERNAME\", \"NAME\", \"PRICE\", \"REMARK\"],[$volume, 'حجم', $from_id, $username, $first_name, $price, $remark], $mainValues['increase_account_request_message']);\n\n         $keyboard = json_encode([\n            'inline_keyboard' => [\n                [\n                    ['text' => $buttonValues['approve'], 'callback_data' => \"approveIncreaseVolume{$match[1]}\"],\n                    ['text' => $buttonValues['decline'], 'callback_data' => \"decIncreaseVolume{$match[1]}\"]\n                ]\n            ]\n        ]);\n\n        $res = sendPhoto($fileid, $msg,$keyboard, \"HTML\", $admin);\n        $msgId = $res->result->message_id;\n        setUser();\n        \n        $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'have_sent', `message_id` = ?, `chat_id` = ? WHERE `hash_id` = ?\");\n        $stmt->bind_param(\"iis\", $msgId, $admin, $match[1]);\n        $stmt->execute();\n        $stmt->close();\n    }else{\n        sendMessage($mainValues['please_send_only_image']);\n    }\n}\nif(preg_match('/approveIncreaseVolume(.*)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n    \n    $payParam = $payInfo->fetch_assoc();\n    $payType = $payParam['type'];\n\n    if($payParam['state'] == \"approved\") exit();\n\n    $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'approved' WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n\n    preg_match('/^INCREASE_VOLUME_(\\d+)_(\\d+)/',$payType, $increaseInfo);\n    $orderId = $increaseInfo[1];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $orderId);\n    $stmt->execute();\n    $orderInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $server_id = $orderInfo['server_id'];\n    $inbound_id = $orderInfo['inbound_id'];\n    $remark = $orderInfo['remark'];\n    $uuid = $orderInfo['uuid']??\"0\";\n    $planid = $increaseInfo[2];\n\n    $uid = $payParam['user_id'];\n    $stmt = $connection->prepare(\"SELECT * FROM `increase_plan` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\",$planid);\n    $stmt->execute();\n    $res = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $price = $res['price'];\n    $volume = $res['volume'];\n\n    $acctxt = '';\n    \n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $serverType = $server_info['type'];\n\n    if($serverType == \"marzban\"){\n        $response = editMarzbanConfig($server_id, ['remark'=>$remark, 'plus_volume'=>$volume]);\n    }else{\n        if($inbound_id > 0) $response = editClientTraffic($server_id, $inbound_id, $uuid, $volume, 0);\n        else $response = editInboundTraffic($server_id, $uuid, $volume, 0);\n    }\n    \n    if($response->success){\n        $stmt = $connection->prepare(\"UPDATE `orders_list` SET `notif` = 0 WHERE `uuid` = ?\");\n        $stmt->bind_param(\"s\", $uuid);\n        $stmt->execute();\n        $stmt->close();\n        unset($markup[count($markup)-1]);\n        $markup[] = [['text' => '✅', 'callback_data' => \"dontsendanymore\"]];\n        $keys = json_encode(['inline_keyboard'=>array_values($markup)],488);\n    \n        editKeys($keys);\n        sendMessage(\"✅$volume گیگ به حجم سرویس شما اضافه شد\",null,null,$uid);\n    }else {\n        alert(\"مشکل فنی در ارتباط با سرور. لطفا سلامت سرور را بررسی کنید\",true);\n        exit;\n    }\n}\nif(preg_match('/decIncreaseVolume(.*)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n    \n    $payParam = $payInfo->fetch_assoc();\n    $payType = $payParam['type'];\n\n\n    preg_match('/^INCREASE_VOLUME_(\\d+)_(\\d+)/',$payType, $increaseInfo);\n    $orderId = $increaseInfo[1];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $orderId);\n    $stmt->execute();\n    $orderInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $server_id = $orderInfo['server_id'];\n    $inbound_id = $orderInfo['inbound_id'];\n    $remark = $orderInfo['remark'];\n    \n    $planid = $increaseInfo[2];\n\n\n    $uid = $payParam['user_id'];\n    $stmt = $connection->prepare(\"SELECT * FROM `increase_plan` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\",$planid);\n    $stmt->execute();\n    $res = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $price = $res['price'];\n    $volume = $res['volume'];\n\n    $acctxt = '';\n    editKeys(json_encode(['inline_keyboard'=>[\n\t\t    [['text'=>\"لغو شد ❌\",'callback_data'=>\"wizwizch\"]]\n\t\t    ]]));\n    \n    sendMessage(\"افزایش حجم $volume گیگ اشتراک $remark لغو شد\",null,null,$uid);\n}\nif(preg_match('/decIncreaseDay(.*)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n    \n    $payParam = $payInfo->fetch_assoc();\n    $payType = $payParam['type'];\n\n\n    preg_match('/^INCREASE_DAY_(\\d+)_(\\d+)/',$payType, $increaseInfo);\n    $orderId = $increaseInfo[1];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $orderId);\n    $stmt->execute();\n    $orderInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $server_id = $orderInfo['server_id'];\n    $inbound_id = $orderInfo['inbound_id'];\n    $remark = $orderInfo['remark'];\n    \n    $planid = $increaseInfo[2];\n\n\n    $uid = $payParam['user_id'];\n    $stmt = $connection->prepare(\"SELECT * FROM `increase_day` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\",$planid);\n    $stmt->execute();\n    $res = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $price = $res['price'];\n    $volume = $res['volume'];\n\n    $acctxt = '';\n    editKeys(json_encode(['inline_keyboard'=>[\n\t\t    [['text'=>\"لغو شد ❌\",'callback_data'=>\"wizwizch\"]]\n\t\t    ]]));\n    \n    sendMessage(\"افزایش زمان $volume روز اشتراک $remark لغو شد\",null,null,$uid);\n}\nif(preg_match('/payIncraseWithWallet(.*)/', $data,$match)){\n    $stmt = $connection->prepare(\"SELECT * FROM `pays` WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $payInfo = $stmt->get_result();\n    $stmt->close();\n    \n    if($payInfo->num_rows == 0){\n        $text = \"/start\";\n        $data = \"\";\n        delMessage();\n        goto GOTOSTART;\n    }\n\n    $payParam = $payInfo->fetch_assoc();\n    $payType = $payParam['type'];\n\n    $stmt = $connection->prepare(\"UPDATE `pays` SET `state` = 'paid_with_wallet' WHERE `hash_id` = ?\");\n    $stmt->bind_param(\"s\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n\n    preg_match('/^INCREASE_VOLUME_(\\d+)_(\\d+)/',$payType, $increaseInfo);\n    $orderId = $increaseInfo[1];\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $orderId);\n    $stmt->execute();\n    $orderInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $server_id = $orderInfo['server_id'];\n    $inbound_id = $orderInfo['inbound_id'];\n    $remark = $orderInfo['remark'];\n    $uuid = $orderInfo['uuid']??\"0\";\n    \n    $planid = $increaseInfo[2];\n\n\n    $stmt = $connection->prepare(\"SELECT * FROM `increase_plan` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $planid);\n    $stmt->execute();\n    $res = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $price = $payParam['price'];\n    $volume = $res['volume'];\n    \n    $userwallet = $userInfo['wallet'];\n\n    if($userwallet < $price) {\n        $needamount = $price - $userwallet;\n        alert(\"💡موجودی کیف پول (\".number_format($userwallet).\" تومان) کافی نیست لطفا به مقدار \".number_format($needamount).\" تومان شارژ کنید \",true);\n        exit;\n    }\n    \n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $serverType = $server_info['type'];\n\n    if($serverType == \"marzban\"){\n        $response = editMarzbanConfig($server_id, ['remark'=>$remark, 'plus_volume'=>$volume]);\n    }else{\n        if($inbound_id > 0)\n            $response = editClientTraffic($server_id, $inbound_id, $uuid, $volume, 0);\n        else\n            $response = editInboundTraffic($server_id, $uuid, $volume, 0);\n    }\n        \n    if($response->success){\n        $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = `wallet` - ? WHERE `userid` = ?\");\n        $stmt->bind_param(\"ii\", $price, $from_id);\n        $stmt->execute();\n        $stmt->close();\n        $stmt = $connection->prepare(\"UPDATE `orders_list` SET `notif` = 0 WHERE `uuid` = ?\");\n        $stmt->bind_param(\"s\", $uuid);\n        $stmt->execute();\n        $stmt->close();\n        $keys = json_encode(['inline_keyboard'=>[\n            [\n                ['text'=>\"اخیش یکی حجم زد 😁\",'callback_data'=>\"wizwizch\"]\n                ],\n            ]]);\n        sendMessage(\"\n🔋|💰 افزایش حجم با ( کیف پول )\n\n▫️آیدی کاربر: $from_id\n👨‍💼اسم کاربر: $first_name\n⚡️ نام کاربری: $username\n🎈 نام سرویس: $remark\n⏰ مدت افزایش: $volume گیگ\n💰قیمت: $price تومان\n⁮⁮ ⁮⁮\n        \",$keys,\"html\", $admin);\n        editText($message_id, \"✅$volume گیگ به حجم سرویس شما اضافه شد\",getMainKeys());exit;\n        \n\n    }else {\n        alert(\"به دلیل مشکل فنی امکان افزایش حجم نیست. لطفا به مدیریت اطلاع بدید یا 5دقیقه دیگر دوباره تست کنید\",true);\n        exit;\n    }\n}\nif($data == 'cantEditTrojan'){\n    alert(\"پروتکل تروجان فقط نوع شبکه TCP را دارد\");\n    exit;\n}\nif(($data=='categoriesSetting' || preg_match('/^nextCategoryPage(\\d+)/',$data,$match)) and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(isset($match[1])) $keys = getCategoriesKeys($match[1]);\n    else $keys = getCategoriesKeys();\n    \n    editText($message_id,\"☑️ مدیریت دسته ها:\", $keys);\n}\nif($data=='addNewCategory' and (($from_id == $admin || $userInfo['isAdmin'] == true))){\n    setUser($data);\n    delMessage();\n    $stmt = $connection->prepare(\"DELETE FROM `server_categories` WHERE `active`=0\");\n    $stmt->execute();\n    $stmt->close();\n\n\n    $sql = \"INSERT INTO `server_categories` VALUES (NULL, 0, '', 0,2,0);\";\n    $stmt = $connection->prepare($sql);\n    $stmt->execute();\n    $stmt->close();\n\n\n    $msg = '▪️یه اسم برای دسته بندی وارد کن:';\n    sendMessage($msg,$cancelKey);\n    exit;\n}\nif(preg_match('/^addNewCategory/',$userInfo['step']) and $text!=$buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $step = checkStep('server_categories');\n    if($step==2 and $text!=$buttonValues['cancel'] ){\n        \n        $stmt = $connection->prepare(\"UPDATE `server_categories` SET `title`=?,`step`=4,`active`=1 WHERE `active`=0\");\n        $stmt->bind_param(\"s\", $text);\n        $stmt->execute();\n        $stmt->close();\n\n\n        $msg = 'یه دسته بندی جدید برات ثبت کردم 🙂☑️';\n        sendMessage($msg,$removeKeyboard);\n        sendMessage($mainValues['reached_main_menu'],getCategoriesKeys());\n    }\n}\nif(preg_match('/^wizwizcategorydelete(\\d+)_(\\d+)/',$data, $match) and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"DELETE FROM `server_categories` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n    alert(\"دسته بندی رو برات حذفش کردم ☹️☑️\");\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `active`=1 AND `parent`=0\");\n    $stmt->execute();\n    $cats = $stmt->get_result();\n    $stmt->close();\n\n    $keys = getCategoriesKeys($match[2]);\n    editText($message_id,\"☑️ مدیریت دسته ها:\", $keys);\n}\nif(preg_match('/^wizwizcategoryedit/',$data) and ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    setUser($data);\n    delMessage();\n    sendMessage(\"〽️ یه اسم جدید برا دسته بندی انتخاب کن:\",$cancelKey);exit;\n}\nif(preg_match('/wizwizcategoryedit(\\d+)_(\\d+)/',$userInfo['step'], $match) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    $stmt = $connection->prepare(\"UPDATE `server_categories` SET `title`=? WHERE `id`=?\");\n    $stmt->bind_param(\"si\", $text, $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n    sendMessage(\"با موفقیت برات تغییر دادم ☺️☑️\");\n    setUser();\n    \n    sendMessage(\"☑️ مدیریت دسته ها:\", getCategoriesKeys($match[2]));\n}\nif(($data=='serversSetting' || preg_match('/^nextServerPage(\\d+)/',$data,$match)) and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(isset($match[1])) $keys = getServerListKeys($match[1]);\n    else $keys = getServerListKeys();\n    \n    editText($message_id,\"☑️ مدیریت سرور ها:\",$keys);\n}\nif(preg_match('/^toggleServerState(\\d+)_(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"UPDATE `server_info` SET `state` = IF(`state` = 0,1,0) WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $cats= $stmt->get_result();\n    $stmt->close();\n    \n    alert(\"وضعیت سرور با موفقیت تغییر کرد\");\n    \n    $keys = getServerListKeys($match[2]);\n    editText($message_id,\"☑️ مدیریت سرور ها:\",$keys);\n}\nif(preg_match('/^showServerSettings(\\d+)_(\\d+)/',$data,$match) and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $keys = getServerConfigKeys($match[1], $match[2]);\n    editText($message_id,\"☑️ مدیریت سرور ها: $cname\",$keys);\n}\nif(preg_match('/^changesServerIp(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $serverIp= $stmt->get_result()->fetch_assoc()['ip']??\"اطلاعاتی یافت نشد\";\n    $stmt->close();\n    \n    delMessage();\n    sendMessage(\"لیست آیپی های فعلی: \\n$serverIp\\nلطفا آیپی های جدید را در خط های جدا بفرستید\\n\\nبرای خالی کردن متن /empty را وارد کنید\",$cancelKey,null,null,null);\n    setUser($data);\n    exit();\n}\nif(preg_match('/^changesServerIp(\\d+)/',$userInfo['step'],$match) && ($from_id == $admin || $userInfo['isAdmin'] == true) && $text != $buttonValues['cancel']){\n    $stmt = $connection->prepare(\"UPDATE `server_config` SET `ip` = ? WHERE `id`=?\");\n    if($text == \"/empty\") $text = \"\";\n    $stmt->bind_param(\"si\", $text, $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    sendMessage($mainValues['saved_successfuly'],$removeKeyboard);\n    setUser();\n    \n    $keys = getServerConfigKeys($match[1]);\n    sendMessage(\"☑️ مدیریت سرور ها: $cname\",$keys);\n    exit();\n}\nif(preg_match('/^changePortType(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"UPDATE `server_config` SET `port_type` = IF(`port_type` = 'auto', 'random', 'auto') WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    alert(\"نوعیت پورت سرور مورد نظر با موفقیت تغییر کرد\");\n    \n    $keys = getServerConfigKeys($match[1]);\n    editText($message_id,\"☑️ مدیریت سرور ها: $cname\",$keys);\n    \n    exit();\n}\nif(preg_match('/^changeRealityState(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"UPDATE `server_config` SET `reality` = IF(`reality` = 'true', 'false', 'true') WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n    $keys = getServerConfigKeys($match[1]);\n    editText($message_id,\"☑️ مدیریت سرور ها: $cname\",$keys);\n    \n    exit();\n}\nif(preg_match('/^changeServerType(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    editText($message_id,\"\n    \n🔰 نکته مهم: ( پنل x-ui خود را به آخرین نسخه آپدیت کنید ) \n\n❤️ اگر از پنل سنایی استفاده میکنید لطفا نوع پنل را ( سنایی ) انتخاب کنید\n🧡 اگر از پنل علیرضا استفاده میکنید لطفا نوع پنل را ( علیرضا ) انتخاب کنید\n💚 اگر از پنل نیدوکا استفاده میکنید لطفا نوع پنل را ( ساده ) انتخاب کنید \n💙 اگر از پنل چینی استفاده میکنید لطفا نوع پنل را ( ساده ) انتخاب کنید \n⁮⁮ ⁮⁮ ⁮⁮ ⁮⁮\n📣 حتما نوع پنل را انتخاب کنید وگرنه براتون مشکل ساز میشه !\n⁮⁮ ⁮⁮ ⁮⁮ ⁮⁮\n\",json_encode(['inline_keyboard'=>[\n        [['text'=>\"ساده\",'callback_data'=>\"chhangeServerTypenormal_\" . $match[1]],['text'=>\"سنایی\",'callback_data'=>\"chhangeServerTypesanaei_\" . $match[1]]],\n        [['text'=>\"علیرضا\",'callback_data'=>\"chhangeServerTypealireza_\" . $match[1]]]\n        ]]));\n    exit();\n}\nif(preg_match('/^chhangeServerType(\\w+)_(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    alert($mainValues['saved_successfuly']);\n    $stmt = $connection->prepare(\"UPDATE `server_config` SET `type` = ? WHERE `id`=?\");\n    $stmt->bind_param(\"si\",$match[1], $match[2]);\n    $stmt->execute();\n    $stmt->close();\n    \n    $keys = getServerConfigKeys($match[2]);\n    editText($message_id, \"☑️ مدیریت سرور ها: $cname\",$keys);\n}\nif(($data == \"addNewMarzbanPanel\" || $data=='addNewServer') and ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    setUser($data, 'temp');\n    setUser('addserverName');\n    sendMessage(\"مرحله اول: \n▪️یه اسم برا سرورت انتخاب کن:\",$cancelKey);\n    exit();\n}\nif($userInfo['step'] == 'addserverName' and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n\tsendMessage('مرحله دوم: \n▪️ظرفیت تعداد ساخت کانفیگ رو برای سرورت مشخص کن ( عدد باشه )');\n    $data = array();\n    $data['title'] = $text;\n\n    setUser('addServerUCount' . json_encode($data,JSON_UNESCAPED_UNICODE));\n    exit();\n}\nif(preg_match('/^addServerUCount(.*)/',$userInfo['step'],$match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $data = json_decode($match[1],true);\n    $data['ucount'] = $text;\n\n    sendMessage(\"مرحله سوم: \n▪️یه اسم ( ریمارک ) برا کانفیگ انتخاب کن:\n ( به صورت انگیلیسی و بدون فاصله )\n\");\n    setUser('addServerRemark' . json_encode($data,JSON_UNESCAPED_UNICODE));\n    exit();\n}\nif(preg_match('/^addServerRemark(.*)/',$userInfo['step'], $match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $data = json_decode($match[1], true);\n    $data['remark'] = $text;\n\n    sendMessage(\"مرحله چهارم:\n▪️لطفا یه ( ایموجی پرچم 🇮🇷 ) برا سرورت انتخاب کن:\");\n    setUser('addServerFlag' . json_encode($data,JSON_UNESCAPED_UNICODE));\n    exit();\n}\nif(preg_match('/^addServerFlag(.*)/',$userInfo['step'], $match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $data = json_decode($match[1],true);\n    $data['flag'] = $text;\n    sendMessage(\"مرحله پنجم:\n\n▪️لطفا آدرس پنل x-ui رو به صورت مثال زیر وارد کن:\n\n❕https://yourdomain.com:54321\n❕https://yourdomain.com:54321/path\n❗️http://125.12.12.36:54321\n❗️http://125.12.12.36:54321/path\n\nاگر سرور مورد نظر با دامنه و ssl هست از مثال ( ❕) استفاده کنید\nاگر سرور مورد نظر با ip و بدون ssl هست از مثال ( ❗️) استفاده کنید\n⁮⁮ ⁮⁮ ⁮⁮ ⁮⁮\n\");\n    setUser('addServerPanelUrl' . json_encode($data,JSON_UNESCAPED_UNICODE));\n    exit();\n}\nif(preg_match('/^addServerPanelUrl(.*)/',$userInfo['step'],$match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $data = json_decode($match[1],true);\n    $data['panel_url'] = $text;\n    if($userInfo['temp'] == \"addNewMarzbanPanel\"){\n        $data['panel_ip'] = \"/empty\";\n        $data['sni'] = \"/empty\";\n        $data['header_type'] = \"/empty\";\n        $data['response_header'] = \"/empty\";\n        $data['request_header'] = \"/empty\";\n        $data['security'] = \"/empty\";\n        $data['tls_setting'] = \"/empty\";\n        \n        setUser('addServerPanelUser' . json_encode($data, JSON_UNESCAPED_UNICODE));\n        sendMessage( \"مرحله ششم: \n    ▪️لطفا یوزر پنل را وارد کنید:\");\n    \n        exit();\n    }else{\n        setUser('addServerIp' . json_encode($data,JSON_UNESCAPED_UNICODE));\n        sendMessage( \"🔅 لطفا ip یا دامنه تانل شده پنل را وارد کنید:\n    \n    نمونه: \n    91.257.142.14\n    sub.domain.com\n    ❗️در صورتی که میخواید چند دامنه یا ip کانفیگ بگیرید باید زیر هم بنویسید و برای ربات بفرستین:\n        \\n\\n🔻برای خالی گذاشتن متن /empty را وارد کنید\");\n        exit();\n    }\n}\nif(preg_match('/^addServerIp(.*)/',$userInfo['step'],$match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $data = json_decode($match[1],true);\n    $data['panel_ip'] = $text;\n    setUser('addServerSni' . json_encode($data, JSON_UNESCAPED_UNICODE));\n    sendMessage( \"🔅 لطفا sni پنل را وارد کنید\\n\\n🔻برای خالی گذاشتن متن /empty را وارد کنید\");\n    exit();\n}\nif(preg_match('/^addServerSni(.*)/',$userInfo['step'],$match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $data = json_decode($match[1],true);\n    $data['sni'] = $text;\n    setUser('addServerHeaderType' . json_encode($data, JSON_UNESCAPED_UNICODE));\n    sendMessage( \"🔅 اگر  از header type استفاده میکنید لطفا http را تایپ کنید:\\n\\n🔻برای خالی گذاشتن متن /empty را وارد کنید\");\n    exit();\n}\nif(preg_match('/^addServerHeaderType(.*)/',$userInfo['step'],$match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $data = json_decode($match[1],true);\n    $data['header_type'] = $text;\n    setUser('addServerRequestHeader' . json_encode($data, JSON_UNESCAPED_UNICODE));\n    sendMessage( \"🔅اگر از هدر استفاده میکنید لطفا آدرس رو به این صورت Host:test.com وارد کنید و به جای test.com آدرس دلخواه بزنید:\\n\\n🔻برای خالی گذاشتن متن /empty را وارد کنید\");\n    exit();\n}\nif(preg_match('/^addServerRequestHeader(.*)/',$userInfo['step'],$match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $data = json_decode($match[1],true);\n    $data['request_header'] = $text;\n    setUser('addServerResponseHeader' . json_encode($data, JSON_UNESCAPED_UNICODE));\n    sendMessage( \"🔅 لطفا response header پنل را وارد کنید\\n\\n🔻برای خالی گذاشتن متن /empty را وارد کنید\");\n    exit();\n}\nif(preg_match('/^addServerResponseHeader(.*)/',$userInfo['step'],$match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $data = json_decode($match[1],true);\n    $data['response_header'] = $text;\n    setUser('addServerSecurity' . json_encode($data, JSON_UNESCAPED_UNICODE));\n    sendMessage( \"🔅 لطفا security پنل را وارد کنید\n\n⚠️ توجه: برای استفاده از tls یا xtls لطفا کلمه tls یا xtls رو تایپ کنید در غیر این صورت 👇\n\\n🔻برای خالی گذاشتن متن /empty را وارد کنید\");\nexit();\n}\nif(preg_match('/^addServerSecurity(.*)/',$userInfo['step'],$match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $data = json_decode($match[1],true);\n    $data['security'] = $text;\n    setUser('addServerTlsSetting' . json_encode($data, JSON_UNESCAPED_UNICODE));\n    sendMessage(\"\n    🔅 لطفا tls|xtls setting پنل را وارد کنید🔻برای خالی گذاشتن متن /empty را وارد کنید \n\n⚠️ لطفا تنظیمات سرتیفیکیت رو با دقت انجام بدید مثال:\n▫️serverName: yourdomain\n▫️certificateFile: /root/cert.crt\n▫️keyFile: /root/private.key\n\\n\n\"\n        .'<b>tls setting:</b> <code>{\"serverName\": \"\",\"certificates\": [{\"certificateFile\": \"\",\"keyFile\": \"\"}]}</code>' . \"\\n\"\n        .'<b>xtls setting:</b> <code>{\"serverName\": \"\",\"certificates\": [{\"certificateFile\": \"\",\"keyFile\": \"\"}],\"alpn\": []}</code>', null, \"HTML\");\n\n    exit();\n}\nif(preg_match('/^addServerTlsSetting(.*)/',$userInfo['step'],$match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $data = json_decode($match[1],true);\n    $data['tls_setting'] = $text;\n    setUser('addServerPanelUser' . json_encode($data, JSON_UNESCAPED_UNICODE));\n    sendMessage( \"مرحله ششم: \n▪️لطفا یوزر پنل را وارد کنید:\");\n\n    exit();\n}\nif(preg_match('/^addServerPanelUser(.*)/',$userInfo['step'],$match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $data = json_decode($match[1],true);\n    $data['panel_user'] = $text;\n    setUser('addServerPanePassword' . json_encode($data, JSON_UNESCAPED_UNICODE));\n    sendMessage( \"مرحله هفتم: \n▪️لطفا پسورد پنل را وارد کنید:\");\nexit();\n}\nif(preg_match('/^addServerPanePassword(.*)/',$userInfo['step'],$match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    sendMessage(\"⏳ در حال ورود به اکانت ...\");\n    $data = json_decode($match[1],true);\n    $title = $data['title'];\n    $ucount = $data['ucount'];\n    $remark = $data['remark'];\n    $flag = $data['flag'];\n\n    $panel_url = $data['panel_url'];\n    $ip = $data['panel_ip']!=\"/empty\"?$data['panel_ip']:\"\";\n    $sni = $data['sni']!=\"/empty\"?$data['sni']:\"\";\n    $header_type = $data['header_type']!=\"/empty\"?$data['header_type']:\"none\";\n    $request_header = $data['request_header']!=\"/empty\"?$data['request_header']:\"\";\n    $response_header = $data['response_header']!=\"/empty\"?$data['response_header']:\"\";\n    $security = $data['security']!=\"/empty\"?$data['security']:\"none\";\n    $tlsSettings = $data['tls_setting']!=\"/empty\"?$data['tls_setting']:\"\";\n    $serverName = $data['panel_user'];\n    $serverPass = $text;\n    \n    \n    $loginResponse['success'] = false;\n    if($userInfo['temp'] == \"addNewMarzbanPanel\"){\n        $loginUrl = $panel_url .'/api/admin/token';\n        $postFields = array(\n            'username' => $serverName,\n            'password' => $serverPass\n        );\n        \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL, $loginUrl);\n        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($curl, CURLOPT_POST, 1);\n        curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n        curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n        curl_setopt($curl, CURLOPT_HTTPHEADER, array(\n                'Content-Type: application/x-www-form-urlencoded',\n                'accept: application/json'\n            ));\n        $response = json_decode(curl_exec($curl),true);\n        \n        if(curl_error($curl)){\n            $loginResponse = ['success' => false, 'error'=>curl_error($curl)];\n        }\n        curl_close($curl);\n    \n        if(isset($response['access_token'])){\n            $loginResponse['success'] = true;\n        }\n    }else{\n        $loginUrl = $panel_url . '/login';\n        $postFields = array(\n            \"username\" => $serverName,\n            \"password\" => $serverPass\n            );\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $loginUrl);\n        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_POST, 1);\n        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 15);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 15); \n        curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postFields));\n        $loginResponse = json_decode(curl_exec($ch),true);\n        curl_close($ch);\n        \n    }\n    if(!$loginResponse['success']){\n        setUser('addServerPanelUser' . json_encode($data, JSON_UNESCAPED_UNICODE));\n        sendMessage( \"\n⚠️ با خطا مواجه شدی ! \n\nبرای رفع این مشکل روی لینک زیر بزن و ویس رو با دقت گوش کن 👇\n\n⛔️🔗 https://t.me/wizwizch/186\n\nمجدد نام کاربری پنل را وارد کنید:\n⁮⁮ ⁮⁮\n        \");\n        exit();\n    }\n    $stmt = $connection->prepare(\"INSERT INTO `server_info` (`title`, `ucount`, `remark`, `flag`, `active`)\n                                                    VALUES (?,?,?,?,1)\");\n    $stmt->bind_param(\"siss\", $title, $ucount, $remark, $flag);\n    $stmt->execute();\n    $rowId = $stmt->insert_id;\n    $stmt->close();\n\n    $stmt = $connection->prepare(\"INSERT INTO `server_config` (`id`, `panel_url`, `ip`, `sni`, `header_type`, `request_header`, `response_header`, `security`, `tlsSettings`, `username`, `password`)\n                                           VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\");\n    $stmt->bind_param(\"issssssssss\", $rowId, $panel_url, $ip, $sni, $header_type, $request_header, $response_header, $security, $tlsSettings, $serverName, $serverPass);\n    $stmt->execute();\n    $rowId = $stmt->insert_id;\n    $stmt->close();\n\n    sendMessage(\" تبریک ; سرورت رو ثبت کردی 🥹\",$removeKeyboard);\n    if($userInfo['temp'] == \"addNewMarzbanPanel\"){\n        $stmt = $connection->prepare(\"UPDATE `server_config` SET `type` = 'marzban' WHERE `id`=?\");\n        $stmt->bind_param(\"i\",$rowId);\n        $stmt->execute();\n        $stmt->close();\n        \n        $keys = getServerListKeys();\n        sendMessage(\"☑️ مدیریت سرور ها\",$keys);\n    }else{\n        sendMessage(\"\n    \n🔰 نکته مهم: ( پنل x-ui خود را به آخرین نسخه آپدیت کنید ) \n\n❤️ اگر از پنل سنایی استفاده میکنید لطفا نوع پنل را ( سنایی ) انتخاب کنید\n🧡 اگر از پنل علیرضا استفاده میکنید لطفا نوع پنل را ( علیرضا ) انتخاب کنید\n💚 اگر از پنل نیدوکا استفاده میکنید لطفا نوع پنل را ( ساده ) انتخاب کنید \n💙 اگر از پنل چینی استفاده میکنید لطفا نوع پنل را ( ساده ) انتخاب کنید \n⁮⁮ ⁮⁮ ⁮⁮ ⁮⁮\n📣 حتما نوع پنل را انتخاب کنید وگرنه براتون مشکل ساز میشه !\n⁮⁮ ⁮⁮ ⁮⁮ ⁮⁮\n    \",json_encode(['inline_keyboard'=>[\n            [['text'=>\"ساده\",'callback_data'=>\"chhangeServerTypenormal_\" . $rowId],['text'=>\"سنایی\",'callback_data'=>\"chhangeServerTypesanaei_\" . $rowId]],\n            [['text'=>\"علیرضا\",'callback_data'=>\"chhangeServerTypealireza_\" . $rowId]]\n            ]]));\n    }\n    setUser();\n    exit();\n}\nif(preg_match('/^changesServerLoginInfo(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    delMessage();\n    setUser($data);\n    sendMessage( \"▪️لطفا آدرس پنل را وارد کنید:\",$cancelKey);\n}\nif(preg_match('/^changesServerLoginInfo(\\d+)/',$userInfo['step'],$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $data = array();\n    $data['rowId'] = $match[1];\n    $data['panel_url'] = $text;\n    setUser('editServerPaneUser' . json_encode($data, JSON_UNESCAPED_UNICODE));\n    sendMessage( \"▪️لطفا یوزر پنل را وارد کنید:\",$cancelKey);\n    exit();\n}\nif(preg_match('/^editServerPaneUser(.*)/',$userInfo['step'],$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)) {\n    $data = json_decode($match[1],true);\n    $data['panel_user'] = $text;\n    setUser('editServerPanePassword' . json_encode($data, JSON_UNESCAPED_UNICODE));\n    sendMessage( \"▪️لطفا پسورد پنل را وارد کنید:\");\n    exit();\n}\nif(preg_match('/^editServerPanePassword(.*)/',$userInfo['step'],$match) and $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    sendMessage(\"⏳ در حال ورود به اکانت ...\");\n    $data = json_decode($match[1],true);\n\n    $rowId = $data['rowId'];\n    $panel_url = $data['panel_url'];\n    $serverName = $data['panel_user'];\n    $serverPass = $text;\n    \n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id` = ?\");\n    $stmt->bind_param('i', $rowId);\n    $stmt->execute();\n    $serverInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $serverType = $serverInfo['type'];\n    $loginResponse['success'] = false;\n    \n    if($serverType == \"marzban\"){\n        $loginUrl = $panel_url .'/api/admin/token';\n        $postFields = array(\n            'username' => $serverName,\n            'password' => $serverPass\n        );\n        \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL, $loginUrl);\n        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($curl, CURLOPT_POST, 1);\n        curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n        curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n        curl_setopt($curl, CURLOPT_HTTPHEADER, array(\n                'Content-Type: application/x-www-form-urlencoded',\n                'accept: application/json'\n            ));\n        $response = json_decode(curl_exec($curl),true);\n        \n        if(curl_error($curl)){\n            $loginResponse = ['success' => false, 'error'=>curl_error($curl)];\n        }\n        curl_close($curl);\n    \n        if(isset($response['access_token'])){\n            $loginResponse['success'] = true;\n        }\n    }else{\n        $loginUrl = $panel_url . '/login';\n        $postFields = array(\n            \"username\" => $serverName,\n            \"password\" => $serverPass\n            );\n    \n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $loginUrl);\n        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_POST, 1);\n        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 15);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 15); \n        curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postFields));\n        $loginResponse = json_decode(curl_exec($ch),true);\n        curl_close($ch);\n    }\n    \n    if(!$loginResponse['success']) sendMessage( \"اطلاعاتی که وارد کردی اشتباهه 😂\");\n    else{\n        $stmt = $connection->prepare(\"UPDATE `server_config` SET `panel_url` = ?, `username` = ?, `password` = ? WHERE `id` = ?\");\n        $stmt->bind_param(\"sssi\", $panel_url, $serverName, $serverPass, $rowId);\n        $stmt->execute();\n        $stmt->close();\n        \n        sendMessage(\"اطلاعات ورود سرور با موفقیت عوض شد\",$removeKeyboard);\n    }\n    $keys = getServerConfigKeys($rowId);\n    sendMessage('☑️ مدیریت سرور ها:',$keys);\n    setUser();\n}\nif(preg_match('/^wizwizdeleteserver(\\d+)/',$data,$match) and ($from_id == $admin || ($userInfo['isAdmin'] == true && $permissions['servers']))){\n    editText($message_id,\"از حذف سرور مطمئنی؟\",json_encode(['inline_keyboard'=>[\n        [['text'=>\"بله\",'callback_data'=>\"yesDeleteServer\" . $match[1]],['text'=>\"نخير\",'callback_data'=>\"showServerSettings\" . $match[1] . \"_0\"]]\n        ]]));\n}\nif(preg_match('/^yesDeleteServer(\\d+)/',$data,$match) && ($from_id == $admin || ($userInfo['isAdmin'] == true && $permissions['servers']))){\n    $stmt = $connection->prepare(\"DELETE FROM `server_info` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n    $stmt = $connection->prepare(\"DELETE FROM `server_config` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n\n    alert(\"🙂 سرور رو چرا حذف کردی اخه ...\");\n    \n\n    $keys = getServerListKeys();\n    if($keys == null) editText($message_id,\"موردی یافت نشد\");\n    else editText($message_id,\"☑️ مدیریت سرور ها:\",$keys);\n}\nif(preg_match('/^editServer(\\D+)(\\d+)/',$data,$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    switch($match[1]){\n        case \"Name\":\n            $txt =\"اسم\";\n            break;\n        case \"Max\":\n            $txt = \"ظرفیت\";\n            break; \n        case \"Remark\":\n            $txt =\"ریمارک\";\n            break;\n        case \"Flag\":\n            $txt = \"پرچم\"; \n            break;\n        default:\n            $txt = str_replace(\"_\", \" \", $match[1]);\n            $end = \"برای خالی کردن متن /empty را وارد کنید\";\n            break;\n    }\n    delMessage();\n    sendMessage(\"🔘|لطفا \" . $txt . \" جدید را وارد کنید\" . $end,$cancelKey);\n    setUser($data);\n    exit();\n}\nif(preg_match('/^editServer(\\D+)(\\d+)/',$userInfo['step'],$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    switch($match[1]){\n        case \"Name\":\n            $sql = \"UPDATE `server_info` SET `title`\";\n            break;\n        case \"Flag\":\n            $sql = \"UPDATE `server_info` SET `flag`\";\n            break;\n        case \"Remark\":\n            $sql = \"UPDATE `server_info` SET `remark`\";\n            break;\n        case \"Max\":\n            $sql = \"UPDATE `server_info` SET `ucount`\";\n            break;\n    }\n    \n    if($text == \"/empty\"){\n        $stmt = $connection->prepare(\"$sql IS NULL WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $match[2]);\n        $stmt->execute();\n        $stmt->close();\n    }else{\n        $stmt = $connection->prepare(\"$sql=? WHERE `id`=?\");\n        $stmt->bind_param(\"si\",$text, $match[2]);\n        $stmt->execute();\n        $stmt->close();\n    }\n    \n    sendMessage($mainValues['saved_successfuly'],$removeKeyboard);\n    setUser();\n    \n    $keys = getServerConfigKeys($match[2]);\n    sendMessage(\"مدیریت سرور $cname\",$keys);\n    exit();\n}\nif(preg_match('/^editsServer(\\D+)(\\d+)/',$data,$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $txt = str_replace(\"_\", \" \", $match[1]);\n    delMessage();\n    sendMessage(\"🔘|لطفا \" . $txt . \" جدید را وارد کنید\\nبرای خالی کردن متن /empty را وارد کنید\",$cancelKey);\n    setUser($data);\n    exit();\n}\nif(preg_match('/^editsServer(\\D+)(\\d+)/',$userInfo['step'],$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if($text == \"/empty\"){\n        if($match[1] == \"sni\") $stmt = $connection->prepare(\"UPDATE `server_config` SET `sni` = '' WHERE `id`=?\");\n        elseif($match[1] == \"header_type\") $stmt = $connection->prepare(\"UPDATE `server_config` SET `header_type` = 'none' WHERE `id`=?\");\n        elseif($match[1] == \"request_header\") $stmt = $connection->prepare(\"UPDATE `server_config` SET `request_header` = '' WHERE `id`=?\");\n        elseif($match[1] == \"response_header\") $stmt = $connection->prepare(\"UPDATE `server_config` SET `response_header` = '' WHERE `id`=?\");\n        elseif($match[1] == \"security\") $stmt = $connection->prepare(\"UPDATE `server_config` SET `security` = 'none' WHERE `id`=?\");\n        elseif($match[1] == \"tlsSettings\") $stmt = $connection->prepare(\"UPDATE `server_config` SET `tlsSettings` = '' WHERE `id`=?\");\n\n        $stmt->bind_param(\"i\", $match[2]);\n    }else{\n        if($match[1] == \"sni\") $stmt = $connection->prepare(\"UPDATE `server_config` SET `sni`=? WHERE `id`=?\");\n        elseif($match[1] == \"header_type\"){\n            if($text != \"http\" && $text != \"none\"){\n                sendMessage(\"برای نوع header type فقط none و یا http مجاز است\");\n                exit();\n            }else $stmt = $connection->prepare(\"UPDATE `server_config` SET `header_type`=? WHERE `id`=?\");\n        }\n        elseif($match[1] == \"request_header\") $stmt = $connection->prepare(\"UPDATE `server_config` SET `request_header`=? WHERE `id`=?\");\n        elseif($match[1] == \"response_header\") $stmt = $connection->prepare(\"UPDATE `server_config` SET `response_header`=? WHERE `id`=?\");\n        elseif($match[1] == \"security\"){\n            if($text != \"tls\" && $text != \"none\" && $text != \"xtls\"){\n                sendMessage(\"برای نوع security فقط tls یا xtls و یا هم none مجاز است\");\n                exit();\n            }else $stmt = $connection->prepare(\"UPDATE `server_config` SET `security`=? WHERE `id`=?\");\n        }\n        elseif($match[1] == \"tlsSettings\") $stmt = $connection->prepare(\"UPDATE `server_config` SET `tlsSettings`=? WHERE `id`=?\");\n        $stmt->bind_param(\"si\",$text, $match[2]);\n    }\n    $stmt->execute();\n    $stmt->close();\n    \n    sendMessage($mainValues['saved_successfuly'],$removeKeyboard);\n    setUser();\n    \n    $keys = getServerConfigKeys($match[2]);\n    sendMessage(\"مدیریت سرور $cname\",$keys);\n    exit();\n}\nif(preg_match('/^editServer(\\D+)(\\d+)/',$data,$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    switch($match[1]){\n        case \"Name\":\n            $txt =\"اسم\";\n            break;\n        case \"Max\":\n            $txt = \"ظرفیت\";\n            break;\n        case \"Remark\":\n            $txt =\"ریمارک\";\n            break;\n        case \"Flag\":\n            $txt = \"پرچم\";\n            break;\n    }\n    delMessage();\n    sendMessage(\"🔘|لطفا \" . $txt . \" جدید را وارد کنید\",$cancelKey);\n    setUser($data);\n}\nif(preg_match('/^editServer(\\D+)(\\d+)/',$userInfo['step'],$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    switch($match[1]){\n        case \"Name\":\n            $stmt = $connection->prepare(\"UPDATE `server_info` SET `title`=? WHERE `id`=?\");\n            break;\n        case \"Max\":\n            $stmt = $connection->prepare(\"UPDATE `server_info` SET `ucount`=? WHERE `id`=?\");\n            break;\n        case \"Remark\":\n            $stmt = $connection->prepare(\"UPDATE `server_info` SET `remark`=? WHERE `id`=?\");\n            break;\n        case \"Flag\":\n            $stmt = $connection->prepare(\"UPDATE `server_info` SET `flag`=? WHERE `id`=?\");\n            break;\n    }\n    \n    $stmt->bind_param(\"si\",$text, $match[2]);\n    $stmt->execute();\n    $stmt->close();\n    \n    sendMessage($mainValues['saved_successfuly'],$removeKeyboard);\n    setUser();\n    \n    $keys = getServerConfigKeys($match[2]);\n    sendMessage(\"مدیریت سرور $cname\",$keys);\n}\nif($data==\"discount_codes\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    editText($message_id,\"مدیریت کد های تخفیف\",getDiscountCodeKeys());\n}\nif($data==\"addDiscountCode\" && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    delMessage();\n    sendMessage(\"🔘|لطفا مقدار تخفیف را وارد کنید\\nبرای درصد علامت % را در کنار عدد وارد کنید در غیر آن مقدار تخفیف به تومان محاسبه میشود\",$cancelKey);\n    setUser($data);\n}\nif($userInfo['step'] == \"addDiscountCode\" && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $dInfo = array();\n    $dInfo['type'] = 'amount';\n    if(strstr($text, \"%\")) $dInfo['type'] = 'percent';\n    $text = trim(str_replace(\"%\", \"\", $text));\n    if(is_numeric($text)){\n        $dInfo['amount'] = $text;\n        setUser(\"addDiscountDate\" . json_encode($dInfo,JSON_UNESCAPED_UNICODE));\n        sendMessage(\"🔘|لطفا مدت زمان این تخفیف را به روز وارد کنید\\nبرای نامحدود بودن 0 وارد کنید\");\n    }else sendMessage(\"🔘|لطفا فقط عدد و یا درصد بفرستید\");\n}\nif(preg_match('/^addDiscountDate(.*)/',$userInfo['step'],$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(is_numeric($text)){\n        $dInfo = json_decode($match[1],true);\n        $dInfo['date'] = $text != 0?time() + ($text * 24 * 60 * 60):0;\n        \n        setUser(\"addDiscountCount\" . json_encode($dInfo,JSON_UNESCAPED_UNICODE));\n        sendMessage(\"🔘|لطفا تعداد استفاده این تخفیف را وارد کنید\\nبرای نامحدود بودن 0 وارد کنید\");\n    }else sendMessage(\"🔘|لطفا فقط عدد بفرستید\");\n}\nif(preg_match('/^addDiscountCount(.*)/',$userInfo['step'],$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(is_numeric($text)){ \n        $dInfo = json_decode($match[1],true);\n        $dInfo['count'] = $text>0?$text:-1;\n        \n        setUser('addDiscountCanUse' . json_encode($dInfo,JSON_UNESCAPED_UNICODE));\n        sendMessage(\"لطفا تعداد استفاده هر یوزر را وارد کنید\");\n    }else sendMessage(\"🔘|لطفا فقط عدد بفرستید\");\n}\nif(preg_match('/^addDiscountCanUse(.*)/',$userInfo['step'],$match) && $text != $buttonValues['cancel'] && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    if(is_numeric($text)){ \n        $dInfo = json_decode($match[1],true);\n        $dInfo['can_use'] = $text>0?$text:-1;\n         \n        $hashId = RandomString();\n        \n        $stmt = $connection->prepare(\"INSERT INTO `discounts` (`hash_id`, `type`, `amount`, `expire_date`, `expire_count`, `can_use`)\n                                        VALUES (?,?,?,?,?,?)\");\n        $stmt->bind_param(\"ssiiii\", $hashId, $dInfo['type'], $dInfo['amount'], $dInfo['date'], $dInfo['count'], $dInfo['can_use']);\n        $stmt->execute();\n        $stmt->close();\n        sendMessage(\"کد تخفیف جدید (<code>$hashId</code>) با موفقیت ساخته شد\",$removeKeyboard,\"HTML\");\n        setUser();\n        sendMessage(\"مدیریت کد های تخفیف\",getDiscountCodeKeys());\n    }else sendMessage(\"🔘|لطفا فقط عدد بفرستید\");\n}\nif(preg_match('/^delDiscount(\\d+)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    $stmt = $connection->prepare(\"DELETE FROM `discounts` WHERE `id` = ?\");\n    $stmt->bind_param(\"i\", $match[1]);\n    $stmt->execute();\n    $stmt->close();\n    \n    alert(\"کد تخفیف مورد نظر با موفقیت حذف شد\");\n    editText($message_id,\"مدیریت کد های تخفیف\",getDiscountCodeKeys());\n}\nif(preg_match('/^copyHash(.*)/',$data,$match) && ($from_id == $admin || $userInfo['isAdmin'] == true)){\n    sendMessage(\"<code>\" . $match[1] . \"</code>\",null,\"HTML\");\n}\nif($data == \"managePanel\" and (($from_id == $admin || $userInfo['isAdmin'] == true))){\n    \n    setUser();\n    $msg = \"\n👤 عزیزم به بخش مدیریت خوشومدی \n🤌 هرچی نیاز داشتی میتونی اینجا طبق نیازهات اضافه و تغییر بدی ، عزیزم $first_name جان اگه از فروش ربات درآمد داری از من حمایت کن تا پروژه همیشه آپدیت بمونه !\n\n🆔 @wizwizch\n\n🚪 /start\n\";\n    editText($message_id, $msg, getAdminKeys());\n}\nif($data == 'reciveApplications') {\n    $stmt = $connection->prepare(\"SELECT * FROM `needed_sofwares` WHERE `status`=1\");\n    $stmt->execute();\n    $respd= $stmt->get_result();\n    $stmt->close();\n\n    $keyboard = []; \n    while($file =  $respd->fetch_assoc()){ \n        $link = $file['link'];\n        $title = $file['title'];\n        $keyboard[] = ['text' => \"$title\", 'url' => $link];\n    }\n    $keyboard[] = ['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"];\n    $keyboard = array_chunk($keyboard,1); \n    editText($message_id, \"\n🔸می توانید به راحتی همه فایل ها را (به صورت رایگان) دریافت کنید\n📌 شما میتوانید برای راهنمای اتصال به سرویس کانال رسمی مارا دنبال کنید و همچنین از دکمه های زیر میتوانید برنامه های مورد نیاز هر سیستم عامل را دانلود کنید\n\n✅ پیشنهاد ما برنامه V2rayng است زیرا کار با آن ساده است و برای تمام سیستم عامل ها قابل اجرا است، میتوانید به بخش سیستم عامل مورد نظر مراجعه کنید و لینک دانلود را دریافت کنید\n\", json_encode(['inline_keyboard'=>$keyboard]));\n}\nif ($text == $buttonValues['cancel']) {\n    setUser();\n    $stmt = $connection->prepare(\"DELETE FROM `server_plans` WHERE `active`=0\");\n    $stmt->execute();\n    $stmt->close();\n\n    sendMessage($mainValues['waiting_message'], $removeKeyboard);\n    sendMessage($mainValues['reached_main_menu'],getMainKeys());\n}\n?>\n"
        },
        {
          "name": "config.php",
          "type": "blob",
          "size": 253.9296875,
          "content": "<?php\ninclude_once \"settings/values.php\";\ninclude_once 'settings/jdf.php';\ninclude_once 'baseInfo.php';\n\n$connection = new mysqli('localhost',$dbUserName,$dbPassword,$dbName);\nif($connection->connect_error){\n    exit(\"error \" . $connection->connect_error);  \n}\n$connection->set_charset(\"utf8mb4\");\n\nfunction bot($method, $datas = []){\n    global $botToken;\n    $url = \"https://api.telegram.org/bot\" . $botToken . \"/\" . $method;\n    $ch = curl_init(); \n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); \n    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($datas));\n    $res = curl_exec($ch);\n    if (curl_error($ch)) {\n        var_dump(curl_error($ch));\n    } else {\n        return json_decode($res);\n    }\n}\nfunction sendMessage($txt, $key = null, $parse =\"MarkDown\", $ci= null, $msg = null){\n    global $from_id;\n    $ci = $ci??$from_id;\n    return bot('sendMessage',[\n        'chat_id'=>$ci,\n        'text'=>$txt,\n        'reply_to_message_id'=>$msg,\n        'reply_markup'=>$key,\n        'parse_mode'=>$parse\n    ]);\n}\nfunction editKeys($keys = null, $msgId = null, $ci = null){\n    global $from_id,$message_id;\n    $ci = $ci??$from_id;\n    $msgId = $msgId??$message_id;\n   \n    bot('editMessageReplyMarkup',[\n\t\t'chat_id' => $ci,\n\t\t'message_id' => $msgId,\n\t\t'reply_markup' => $keys\n    ]);\n}\nfunction editText($msgId, $txt, $key = null, $parse = null, $ci = null){\n    global $from_id;\n    $ci = $ci??$from_id;\n\n    return bot('editMessageText', [\n        'chat_id' => $ci,\n        'message_id' => $msgId,\n        'text' => $txt,\n        'parse_mode' => $parse,\n        'reply_markup' =>  $key\n        ]);\n}\nfunction delMessage($msg = null, $chat_id = null){\n    global $from_id, $message_id;\n    $msg = $msg??$message_id;\n    $chat_id = $chat_id??$from_id;\n    \n    return bot('deleteMessage',[\n        'chat_id'=>$chat_id,\n        'message_id'=>$msg\n        ]);\n}\nfunction sendAction($action, $ci= null){\n    global $from_id;\n    $ci = $ci??$from_id;\n\n    return bot('sendChatAction',[\n        'chat_id'=>$ci,\n        'action'=>$action\n    ]);\n}\nfunction forwardmessage($tochatId, $fromchatId, $message_id){\n    return bot('forwardMessage',[\n        'chat_id'=>$tochatId,\n        'from_chat_id'=>$fromchatId,\n        'message_id'=>$message_id\n    ]);\n}\nfunction sendPhoto($photo, $caption = null, $keyboard = null, $parse = \"MarkDown\", $ci =null){\n    global $from_id;\n    $ci = $ci??$from_id;\n    return bot('sendPhoto',[\n        'chat_id'=>$ci,\n        'caption'=>$caption,\n        'reply_markup'=>$keyboard,\n        'photo'=>$photo,\n        'parse_mode'=>$parse\n    ]);\n}\nfunction getFileUrl($fileid){\n    $filePath = bot('getFile',[\n        'file_id'=>$fileid\n    ])->result->file_path;\n    return \"https://api.telegram.org/file/bot\" . $botToken . \"/\" . $filePath;\n}\nfunction alert($txt, $type = false, $callid = null){\n    global $callbackId;\n    $callid = $callid??$callbackId;\n    return bot('answercallbackquery', [\n        'callback_query_id' => $callid,\n        'text' => $txt,\n        'show_alert' => $type\n    ]);\n}\n\n$range = [\n        '149.154.160.0/22',\n        '149.154.164.0/22',\n        '91.108.4.0/22',\n        '91.108.56.0/22',\n        '91.108.8.0/22',\n        '95.161.64.0/20',\n    ];\nfunction check($return = false){\n    global $range;\n    foreach ($range as $rg) {\n        if (ip_in_range($_SERVER['REMOTE_ADDR'], $rg)) {\n            return true;\n        }\n    }\n    if ($return == true) {\n        return false;\n    }\n\n    die('You do not have access');\n\n}\nfunction curl_get_file_contents($URL){\n    $c = curl_init();\n    curl_setopt($c, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($c, CURLOPT_URL, $URL);\n    $contents = curl_exec($c);\n    curl_close($c);\n\n    if ($contents) return $contents;\n    else return FALSE;\n}\n\nfunction ip_in_range($ip, $range){\n    if (strpos($range, '/') == false) {\n        $range .= '/32';\n    }\n    // $range is in IP/CIDR format eg 127.0.0.1/24\n    list($range, $netmask) = explode('/', $range, 2);\n    $range_decimal = ip2long($range);\n    $ip_decimal = ip2long($ip);\n    $wildcard_decimal = pow(2, (32 - $netmask)) - 1;\n    $netmask_decimal = ~$wildcard_decimal;\n    return (($ip_decimal & $netmask_decimal) == ($range_decimal & $netmask_decimal));\n}\n\n$time = time();\n$update = json_decode(file_get_contents(\"php://input\"));\nif(isset($update->message)){\n    $from_id = $update->message->from->id;\n    $text = $update->message->text;\n    $first_name = htmlspecialchars($update->message->from->first_name);\n    $caption = $update->message->caption;\n    $chat_id = $update->message->chat->id;\n    $last_name = htmlspecialchars($update->message->from->last_name);\n    $username = $update->message->from->username?? \" ندارد \";\n    $message_id = $update->message->message_id;\n    $forward_from_name = $update->message->reply_to_message->forward_sender_name;\n    $forward_from_id = $update->message->reply_to_message->forward_from->id;\n    $reply_text = $update->message->reply_to_message->text;\n}\nif(isset($update->callback_query)){\n    $callbackId = $update->callback_query->id;\n    $data = $update->callback_query->data;\n    $text = $update->callback_query->message->text;\n    $message_id = $update->callback_query->message->message_id;\n    $chat_id = $update->callback_query->message->chat->id;\n    $chat_type = $update->callback_query->message->chat->type;\n    $username = htmlspecialchars($update->callback_query->from->username)?? \" ندارد \";\n    $from_id = $update->callback_query->from->id;\n    $first_name = htmlspecialchars($update->callback_query->from->first_name);\n    $markup = json_decode(json_encode($update->callback_query->message->reply_markup->inline_keyboard),true);\n}\nif($from_id < 0) exit();\n$stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid`=?\");\n$stmt->bind_param(\"i\", $from_id);\n$stmt->execute();\n$uinfo = $stmt->get_result();\n$userInfo = $uinfo->fetch_assoc();\n$stmt->close();\n \n$stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'PAYMENT_KEYS'\");\n$stmt->execute();\n$paymentKeys = $stmt->get_result()->fetch_assoc()['value'];\nif(!is_null($paymentKeys)) $paymentKeys = json_decode($paymentKeys,true);\nelse $paymentKeys = array();\n$stmt->close();\n\n$stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'BOT_STATES'\");\n$stmt->execute();\n$botState = $stmt->get_result()->fetch_assoc()['value'];\nif(!is_null($botState)) $botState = json_decode($botState,true);\nelse $botState = array();\n$stmt->close();\n\n$channelLock = $botState['lockChannel'];\n$joniedState= bot('getChatMember', ['chat_id' => $channelLock,'user_id' => $from_id])->result->status;\n\nif ($update->message->document->file_id) {\n    $filetype = 'document';\n    $fileid = $update->message->document->file_id;\n} elseif ($update->message->audio->file_id) {\n    $filetype = 'music';\n    $fileid = $update->message->audio->file_id;\n} elseif ($update->message->photo[0]->file_id) {\n    $filetype = 'photo';\n    $fileid = $update->message->photo->file_id;\n    if (isset($update->message->photo[2]->file_id)) {\n        $fileid = $update->message->photo[2]->file_id;\n    } elseif ($fileid = $update->message->photo[1]->file_id) {\n        $fileid = $update->message->photo[1]->file_id;\n    } else {\n        $fileid = $update->message->photo[1]->file_id;\n    }\n} elseif ($update->message->voice->file_id) {\n    $filetype = 'voice';\n    $voiceid = $update->message->voice->file_id;\n} elseif ($update->message->video->file_id) {\n    $filetype = 'video';\n    $fileid = $update->message->video->file_id;\n}\n\n$cancelKey=json_encode(['keyboard'=>[\n    [['text'=>$buttonValues['cancel']]]\n],'resize_keyboard'=>true]);\n$removeKeyboard = json_encode(['remove_keyboard'=>true]);\n\nfunction getMainKeys(){\n    global $connection, $userInfo, $from_id, $admin, $botState, $buttonValues;\n    $mainKeys = array();\n    $temp = array();\n\n    if($botState['agencyState'] == \"on\" && $userInfo['is_agent'] == 1){\n        $mainKeys = array_merge($mainKeys, [\n            [['text'=>$buttonValues['agency_setting'],'callback_data'=>\"agencySettings\"]],\n            [['text'=>$buttonValues['agent_one_buy'],'callback_data'=>\"agentOneBuy\"],['text'=>$buttonValues['agent_much_buy'],'callback_data'=>\"agentMuchBuy\"]],\n            [['text'=>$buttonValues['my_subscriptions'],'callback_data'=>\"agentConfigsList\"]],\n            ]);\n    }else{\n        $mainKeys = array_merge($mainKeys,[\n            (($botState['agencyState'] == \"on\" && $userInfo['is_agent'] == 0)?[\n                ['text'=>$buttonValues['request_agency'],'callback_data'=>\"requestAgency\"]\n                ]:\n                []),\n            (($botState['sellState'] == \"on\" || $from_id == $admin || $userInfo['isAdmin'] == true)?\n                [['text'=>$buttonValues['my_subscriptions'],'callback_data'=>'mySubscriptions'],['text'=>$buttonValues['buy_subscriptions'],'callback_data'=>\"buySubscription\"]]\n                :\n                [['text'=>$buttonValues['my_subscriptions'],'callback_data'=>'mySubscriptions']]\n                    )\n            ]);\n    }\n    $mainKeys = array_merge($mainKeys,[\n        (\n            ($botState['testAccount'] == \"on\")?[['text'=>$buttonValues['test_account'],'callback_data'=>\"getTestAccount\"]]:\n                []\n            ),\n        [['text'=>$buttonValues['sharj'],'callback_data'=>\"increaseMyWallet\"]],\n        [['text'=>$buttonValues['invite_friends'],'callback_data'=>\"inviteFriends\"],['text'=>$buttonValues['my_info'],'callback_data'=>\"myInfo\"]],\n        (($botState['sharedExistence'] == \"on\" && $botState['individualExistence'] == \"on\")?\n        [['text'=>$buttonValues['shared_existence'],'callback_data'=>\"availableServers\"],['text'=>$buttonValues['individual_existence'],'callback_data'=>\"availableServers2\"]]:[]),\n        (($botState['sharedExistence'] == \"on\" && $botState['individualExistence'] != \"on\")?\n            [['text'=>$buttonValues['shared_existence'],'callback_data'=>\"availableServers\"]]:[]),\n        (($botState['sharedExistence'] != \"on\" && $botState['individualExistence'] == \"on\")?\n            [['text'=>$buttonValues['individual_existence'],'callback_data'=>\"availableServers2\"]]:[]\n        ),\n        [['text'=>$buttonValues['application_links'],'callback_data'=>\"reciveApplications\"],['text'=>$buttonValues['my_tickets'],'callback_data'=>\"supportSection\"]],\n        (($botState['searchState']==\"on\" || $from_id == $admin || $userInfo['isAdmin'] == true)?\n            [['text'=>$buttonValues['search_config'],'callback_data'=>\"showUUIDLeft\"]]\n            :[]),\n    ]);\n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` LIKE '%MAIN_BUTTONS%'\");\n    $stmt->execute();\n    $buttons = $stmt->get_result();\n    $stmt->close();\n    if($buttons->num_rows >0){\n        while($row = $buttons->fetch_assoc()){\n            $rowId = $row['id'];\n            $title = str_replace(\"MAIN_BUTTONS\",\"\",$row['type']);\n            \n            $temp[] =['text'=>$title,'callback_data'=>\"showMainButtonAns\" . $rowId];\n            if(count($temp)>=2){\n                array_push($mainKeys,$temp);\n                $temp = array();\n            }\n        }\n    }\n    array_push($mainKeys,$temp);\n    if($from_id == $admin || $userInfo['isAdmin'] == true) array_push($mainKeys,[['text'=>\"مدیریت ربات ⚙️\",'callback_data'=>\"managePanel\"]]);\n    return json_encode(['inline_keyboard'=>$mainKeys]); \n}\nfunction getAgentKeys(){\n    global $buttonValues, $mainValues, $from_id, $userInfo, $connection;\n    $agencyDate = jdate(\"Y-m-d H:i:s\",$userInfo['agent_date']);\n    $joinedDate = jdate(\"Y-m-d H:i:s\",$userInfo['date']);\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `userid` = ? AND `agent_bought` = 1\");\n    $stmt->bind_param(\"i\", $from_id);\n    $stmt->execute();\n    $boughtAccounts = $stmt->get_result()->num_rows;\n    $stmt->close();\n    \n    return json_encode(['inline_keyboard'=>[\n        [['text'=>$boughtAccounts,'callback_data'=>\"wizwizch\"],['text'=>$buttonValues['agent_bought_accounts'],'callback_data'=>\"wizwizch\"]],\n        [['text'=>$joinedDate,'callback_data'=>\"wizwizch\"],['text'=>$buttonValues['agent_joined_date'],'callback_data'=>\"wizwizch\"]],\n        [['text'=>$agencyDate,'callback_data'=>\"wizwizch\"],['text'=>$buttonValues['agent_agency_date'],'callback_data'=>\"wizwizch\"]],\n        [['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]],\n    ]]);\n}\nfunction getAdminKeys(){\n    global $buttonValues, $mainValues, $from_id, $admin;\n    \n    return json_encode(['inline_keyboard'=>[\n        [['text'=>$buttonValues['bot_reports'],'callback_data'=>\"botReports\"],['text'=>$buttonValues['message_to_user'],'callback_data'=>\"messageToSpeceficUser\"]],\n        [['text'=>$buttonValues['user_reports'],'callback_data'=>\"userReports\"]],\n        ($from_id == $admin?[['text'=>$buttonValues['admins_list'],'callback_data'=>\"adminsList\"]]:[]),\n        [['text'=>$buttonValues['increase_wallet'],'callback_data'=>\"increaseUserWallet\"],['text'=>$buttonValues['decrease_wallet'],'callback_data'=>\"decreaseUserWallet\"]],\n        [['text'=>$buttonValues['create_account'],'callback_data'=>\"createMultipleAccounts\"],\n        ['text'=>$buttonValues['gift_volume_day'],'callback_data'=>\"giftVolumeAndDay\"]],\n        [['text'=>$buttonValues['ban_user'],'callback_data'=>\"banUser\"],['text'=>$buttonValues['unban_user'],'callback_data'=>\"unbanUser\"]],\n        [['text'=>$buttonValues['search_admin_config'],'callback_data'=>\"searchUsersConfig\"]],\n        [['text'=>$buttonValues['server_settings'],'callback_data'=>\"serversSetting\"]],\n        [['text'=>$buttonValues['categories_settings'],'callback_data'=>\"categoriesSetting\"]],\n        [['text'=>$buttonValues['plan_settings'],'callback_data'=>\"backplan\"]],\n        [['text'=>$buttonValues['discount_settings'],'callback_data'=>\"discount_codes\"],['text'=>$buttonValues['main_button_settings'],'callback_data'=>\"mainMenuButtons\"]],\n        [['text'=>$buttonValues['gateways_settings'],'callback_data'=>\"gateWays_Channels\"],['text'=>$buttonValues['bot_settings'],'callback_data'=>'botSettings']],\n        [['text'=>$buttonValues['tickets_list'],'callback_data'=>\"ticketsList\"],['text'=>$buttonValues['message_to_all'],'callback_data'=>\"message2All\"]],\n        [['text'=>$buttonValues['forward_to_all'],'callback_data'=>\"forwardToAll\"]],\n        [\n            ['text'=>$buttonValues['agent_list'],'callback_data'=>\"agentsList\"],\n            ['text'=>'درخواست های رد شده','callback_data'=>\"rejectedAgentList\"]\n            ],\n        [['text'=>$buttonValues['back_to_main'],'callback_data'=>\"mainMenu\"]],\n    ]]);\n    \n}\n\nfunction setSettings($field, $value){\n    global $connection, $botState;\n    $botState[$field]= $value;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'BOT_STATES'\");\n    $stmt->execute();\n    $isExists = $stmt->get_result();\n    $stmt->close();\n    if($isExists->num_rows>0) $query = \"UPDATE `setting` SET `value` = ? WHERE `type` = 'BOT_STATES'\";\n    else $query = \"INSERT INTO `setting` (`type`, `value`) VALUES ('BOT_STATES', ?)\";\n    $newData = json_encode($botState);\n    \n    $stmt = $connection->prepare($query);\n    $stmt->bind_param(\"s\", $newData);\n    $stmt->execute();\n    $stmt->close();\n}\nfunction getRejectedAgentList(){\n    global $connection, $mainValues, $buttonValues;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `is_agent` = 2\");\n    $stmt->execute();\n    $list = $stmt->get_result();\n    $stmt->close();\n    \n    if($list->num_rows>0){\n        $keys = array();\n        $keys[] = [['text'=>\"آزاد ساختن\",'callback_data'=>\"wizwizch\"],['text'=>\"اسم کاربر\",'callback_data'=>'wizwizch'],['text'=>\"آیدی عددی\",'callback_data'=>\"wizwizch\"]];\n        while($row = $list->fetch_assoc()){\n            $userId = $row['userid'];\n            \n            $userDetail = bot('getChat',['chat_id'=>$userId])->result;\n            $fullName = $userDetail->first_name . \" \" . $userDetail->last_name;\n            \n            $keys[] = [['text'=>\"✅\",'callback_data'=>\"releaseRejectedAgent\" . $userId],['text'=>$fullName,'callback_data'=>\"wizwizch\"],['text'=>$userId,'callback_data'=>\"wizwizch\"]];\n        }\n        $keys[] = [['text'=>$buttonValues['back_button'],'callback_data'=>\"managePanel\"]];\n        return json_encode(['inline_keyboard'=>$keys]);\n    }else return null;\n}\nfunction getAgentDetails($userId){\n    global $connection, $mainVAlues, $buttonValues;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid` = ? AND `is_agent` = 1\");\n    $stmt->bind_param(\"i\", $userId);\n    $stmt->execute();\n    $agentDetail = $stmt->get_result();\n    $stmt->close();\n\n\n    $today = strtotime(\"today\");\n    $yesterday = strtotime(\"yesterday\");\n    $lastWeek = strtotime(\"last week\");\n    $lastMonth = strtotime(\"last month\");\n\n    $stmt = $connection->prepare(\"SELECT COUNT(`id`) AS `count`, SUM(`amount`) AS `total` FROM `orders_list` WHERE `date` >= ? AND `agent_bought` = 1 AND `userid` = ?\");\n    \n    $stmt->bind_param(\"ii\", $today, $userId);\n    $stmt->execute();\n    $todayIncome = $stmt->get_result()->fetch_assoc();\n    \n    $stmt->bind_param(\"ii\", $yesterday, $userId);\n    $stmt->execute();\n    $yesterdayIncome = $stmt->get_result()->fetch_assoc();\n    \n    $stmt->bind_param(\"ii\", $lastWeek, $userId);\n    $stmt->execute();\n    $lastWeekIncome = $stmt->get_result()->fetch_assoc();\n    \n    $stmt->bind_param(\"ii\", $lastMonth, $userId);\n    $stmt->execute();\n    $lastMonthIncome = $stmt->get_result()->fetch_assoc();\n    \n    $stmt->close();\n    \n    \n    return json_encode(['inline_keyboard'=>[\n        [\n            ['text'=>\"(\" . $todayIncome['count'] . \") \" . number_format($todayIncome['total']),'callback_data'=>'wizwizch'],\n            ['text'=>\"درآمد امروز\",'callback_data'=>'wizwizch']\n            ],\n        [\n            ['text'=>\"(\" . $yesterdayIncome['count'] . \") \" . number_format($yesterdayIncome['total']),'callback_data'=>\"wizwizch\"],\n            ['text'=>\"درآمد دیروز\",'callback_data'=>\"wizwizch\"]\n            ],\n        [\n            ['text'=>\"(\" . $lastWeekIncome['count'] . \") \" . number_format($lastWeekIncome['total']),'callback_data'=>\"wizwizch\"],\n            ['text'=>\"درآمد یک هفته\",'callback_data'=>\"wizwizch\"]\n            ],\n        [\n            ['text'=>\"(\" . $lastMonthIncome['count'] . \") \" . number_format($lastMonthIncome['total']),'callback_data'=>\"wizwizch\"],\n            ['text'=>\"درآمد یک ماه\",'callback_data'=>\"wizwizch\"]\n            ],\n        [['text' => $buttonValues['back_button'], 'callback_data' => \"agentsList\"]]\n        ]]);\n}\nfunction checkSpam(){\n    global $connection, $from_id, $userInfo, $admin;\n    \n    if($userInfo != null && $from_id != $admin){\n        $spamInfo = json_decode($userInfo['spam_info'],true)??array();\n        $spamDate = $spamInfo['date'];\n        if(isset($spamInfo['banned'])){\n            if(time() <= $spamInfo['banned']) return $spamInfo['banned'];\n        }\n        \n        if(time() <= $spamDate) $spamInfo['count'] += 1;\n        else{\n            $spamInfo['count'] = 1;\n            $spamInfo['date'] = strtotime(\"+1 minute\");\n        }\n        if($spamInfo['count'] >= 50){\n            $spamInfo['banned'] = strtotime(\"+1 day\");\n        }\n        $spamInfo = json_encode($spamInfo);\n        \n        $stmt = $connection->prepare(\"UPDATE `users` SET `spam_info` = ? WHERE `userid` = ?\");\n        $stmt->bind_param(\"si\", $spamInfo, $from_id);\n        $stmt->execute();\n        $stmt->close();\n    }else return null;\n}\nfunction getAgentsList($offset = 0){\n    global $connection, $mainValues, $buttonValues;\n    $limit = 15;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `is_agent` = 1 LIMIT ? OFFSET ?\");\n    $stmt->bind_param('ii', $limit, $offset);\n    $stmt->execute();\n    $agentList = $stmt->get_result();\n    $stmt->close();\n    \n    $keys = array();\n    if($agentList->num_rows == 0 && $offset == 0) return null;\n    \n    $keys[] = [['text'=>\"حذف\",'callback_data'=>\"wizwizch\"],['text'=>\"درصد تخفیف\",'callback_data'=>\"wizwizch\"],['text'=>\"تاریخ نمایندگی\",'callback_data'=>\"wizwizch\"],['text'=>\"اسم نماینده\",'callback_data'=>\"wizwizch\"],['text'=>\"آیدی عددی\",'callback_data'=>\"wizwizch\"]];\n    if($agentList->num_rows > 0){\n        while($row = $agentList->fetch_assoc()){\n            $userId = $row['userid'];\n            \n            $userDetail = bot('getChat',['chat_id'=>$userId])->result;\n            $userUserName = $userDetail->username;\n            $fullName = $userDetail->first_name . \" \" . $userDetail->last_name;\n            $joinedDate = jdate(\"Y-m-d H:i\",$row['agent_date']);\n\n            $keys[] = [['text'=>\"❌\",'callback_data'=>\"removeAgent\" . $userId],['text'=>\"⚙️\",'callback_data'=>\"agentPercentDetails\" . $userId],['text'=>$joinedDate,'callback_data'=>\"wizwizch\"],['text'=>$fullName,'callback_data'=>\"agentDetails\" . $userId],['text'=>$userId,'callback_data'=>\"agentDetails\" . $userId]];\n        }\n    }\n    if($offset == 0 && $limit <= $agentList->num_rows)\n        $keys[] = [\n            ['text'=>\" »» صفحه بعدی »»\",'callback_data'=>\"nextAgentList\" . ($offset + $limit)]\n            ];\n    elseif($limit <= $agentList->num_rows)\n        $keys[] = [\n            ['text'=>\" »» صفحه بعدی »»\",'callback_data'=>\"nextAgentList\" . ($offset + $limit)],\n            ['text'=>\" «« صفحه قبلی ««\",'callback_data'=>\"nextAgentList\" . ($offset - $limit)]\n            ];\n    elseif($offset != 0)\n        $keys[] = [\n            ['text'=>\" «« صفحه قبلی ««\",'callback_data'=>\"nextAgentList\" . ($offset - $limit)]\n            ];\n            \n    $keys[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"managePanel\"]];\n    return json_encode(['inline_keyboard'=>$keys]);\n}\nfunction getAgentDiscounts($agentId){\n    global $connection, $mainValues, $buttonValues, $botState;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `is_agent` = 1 AND `userid` = ?\");\n    $stmt->bind_param(\"i\", $agentId);\n    $stmt->execute();\n    $agentInfo = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $keys = array();\n    \n    $discounts = json_decode($agentInfo['discount_percent'],true);\n\n    $normal = $discounts['normal'];\n    $keys[] = [['text'=>\" \",'callback_data'=>\"wizwizch\"],\n    ['text'=>$normal . \"%\",'callback_data'=>\"editAgentDiscountNormal\" . $agentId . \"_0\"],\n    ['text'=>\"عمومی\",'callback_data'=>\"wizwizch\"]];            \n    \n    if($botState['agencyPlanDiscount']==\"on\"){\n        foreach($discounts['plans'] as $planId=>$discount){\n            $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id` = ?\");\n            $stmt->bind_param('i', $planId);\n            $stmt->execute();\n            $info = $stmt->get_result()->fetch_assoc();\n            $stmt->close();\n            \n            $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `id` = ?\");\n            $stmt->bind_param(\"i\", $info['catid']);\n            $stmt->execute();\n            $catInfo = $stmt->get_result()->fetch_assoc();\n            $stmt->close();\n            \n            $keys[] = [['text'=>\"❌\",'callback_data'=>\"removePercentOfAgentPlan\" . $agentId . \"_\" . $planId],\n            ['text'=>$discount . \"%\",'callback_data'=>\"editAgentDiscountPlan\" . $agentId . \"_\" . $planId],\n            ['text'=>$info['title'] . \" \" . $catInfo['title'],'callback_data'=>\"wizwizch\"]];            \n        }\n    }else{\n        foreach($discounts['servers'] as $serverId=>$discount){\n            $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id` = ?\");\n            $stmt->bind_param('i', $serverId);\n            $stmt->execute();\n            $info = $stmt->get_result()->fetch_assoc();\n            $stmt->close();\n            \n            $keys[] = [['text'=>\"❌\",'callback_data'=>\"removePercentOfAgentServer\" . $agentId . \"_\" . $serverId],\n            ['text'=>$discount . \"%\",'callback_data'=>\"editAgentDiscountServer\" . $agentId . \"_\" . $serverId],\n            ['text'=>$info['title'],'callback_data'=>\"wizwizch\"]];            \n        }                \n    }\n    if($botState['agencyPlanDiscount']==\"on\")$keys[] = [['text' => \"افزودن تخفیف پلن\", 'callback_data' => \"addDiscountPlanAgent\" . $agentId]];\n    else $keys[] = [['text' => \"افزودن تخفیف سرور\", 'callback_data' => \"addDiscountServerAgent\" . $agentId]];\n    $keys[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"agentsList\"]];\n    return json_encode(['inline_keyboard'=>$keys]);\n}\nfunction NOWPayments($method, $endpoint, $datas = []){\n    global $paymentKeys;\n\n    $base_url = 'https://api.nowpayments.io/v1/';\n\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 1);\n    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2);\n\n    switch ($method) {\n        case 'GET':\n            curl_setopt($ch, CURLOPT_HTTPHEADER, ['X-API-KEY: ' . $paymentKeys['nowpayment']]);\n            if(!empty($datas)) {\n                if(is_array($datas)) {\n                    $parameters = http_build_query($datas);\n                    curl_setopt($ch, CURLOPT_URL, $base_url . $endpoint . '?' . $parameters);\n                } else {\n                    if($endpoint == 'payment') curl_setopt($ch, CURLOPT_URL,$base_url . $endpoint . '/' . $datas);\n                }\n            } else {\n                curl_setopt($ch, CURLOPT_URL, $base_url . $endpoint);\n            }\n            break;\n\n        case 'POST':\n            $datas = json_encode($datas);\n            curl_setopt($ch, CURLOPT_HTTPHEADER, ['X-API-KEY: ' . $paymentKeys['nowpayment'], 'Content-Type: application/json']);\n            curl_setopt($ch, CURLOPT_POST, true);\n            curl_setopt($ch, CURLOPT_POSTFIELDS, $datas);\n            curl_setopt($ch, CURLOPT_URL, $base_url . $endpoint);\n            break;\n\n        default:\n            break;\n    }\n\n    $res = curl_exec($ch);\n    \n    if(curl_error($ch)) var_dump(curl_error($ch));\n    else return json_decode($res);\n}\nfunction getServerConfigKeys($serverId,$offset = 0){\n    global $connection, $mainValues, $buttonValues;\n    $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $serverId);\n    $stmt->execute();\n    $cats= $stmt->get_result();\n    $stmt->close();\n    \n    $cty = $cats->fetch_assoc();\n    $id = $cty['id'];\n    $cname = $cty['title'];\n    $flagwizwiz = $cty['flag'];\n    $remarkwizwiz = $cty['remark'];\n    $ucount = $cty['ucount'];\n    $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $id);\n    $stmt->execute();\n    $serverConfig= $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $reality = $serverConfig['reality']==\"true\"?$buttonValues['active']:$buttonValues['deactive'];\n    $panelUrl = $serverConfig['panel_url'];\n    $sni = !empty($serverConfig['sni'])?$serverConfig['sni']:\" \";\n    $headerType = !empty($serverConfig['header_type'])?$serverConfig['header_type']:\" \";\n    $requestHeader = !empty($serverConfig['request_header'])?$serverConfig['request_header']:\" \";\n    $responseHeader = !empty($serverConfig['response_header'])?$serverConfig['response_header']:\" \";\n    $security = !empty($serverConfig['security'])?$serverConfig['security']:\" \";\n    $portType = $serverConfig['port_type']==\"auto\"?\"خودکار\":\"تصادفی\";\n    $serverType = \" \";\n    switch ($serverConfig['type']){\n        case \"sanaei\":\n            $serverType = \"سنایی\";\n            break;\n        case \"alireza\":\n            $serverType = \"علیرضا\";\n            break;\n        case \"normal\":\n            $serverType = \"ساده\";\n            break;\n        case \"marzban\":\n            $serverType = \"مرزبان\";\n            break;\n    }\n    return json_encode(['inline_keyboard'=>array_merge([\n        [\n            ['text'=>$panelUrl,'callback_data'=>\"wizwizch\"],\n            ],\n        [\n            ['text'=>$cname,'callback_data'=>\"editServerName$id\"],\n            ['text'=>\"❕نام سرور\",'callback_data'=>\"wizwizch\"]\n            ],\n        [\n            ['text'=>$flagwizwiz,'callback_data'=>\"editServerFlag$id\"],\n            ['text'=>\"🚩 پرچم سرور\",'callback_data'=>\"wizwizch\"]\n            ],\n        [\n            ['text'=>$remarkwizwiz,'callback_data'=>\"editServerRemark$id\"],\n            ['text'=>\"📣 ریمارک سرور\",'callback_data'=>\"wizwizch\"]\n            ],\n        [\n            ['text'=>$serverType??\" \",'callback_data'=>\"changeServerType$id\"],\n            ['text'=>\"نوعیت سرور\",'callback_data'=>\"wizwizch\"]\n            ],\n        [\n            ['text'=>$ucount,'callback_data'=>\"editServerMax$id\"],\n            ['text'=>\"ظرفیت سرور\",'callback_data'=>\"wizwizch\"]\n            ]\n            ],\n            ($serverConfig['type'] != \"marzban\"?[\n        [\n            ['text'=>$portType,'callback_data'=>\"changePortType$id\"],\n            ['text'=>\"نوعیت پورت\",'callback_data'=>\"wizwizch\"]\n            ],\n        [\n            ['text'=>$sni,'callback_data'=>\"editsServersni$id\"],\n            ['text'=>\"sni\",'callback_data'=>\"wizwizch\"],\n            ],\n        [\n            ['text'=>$headerType,'callback_data'=>\"editsServerheader_type$id\"],\n            ['text'=>\"header type\",'callback_data'=>\"wizwizch\"],\n            ],\n        [\n            ['text'=>$requestHeader,'callback_data'=>\"editsServerrequest_header$id\"],\n            ['text'=>\"request header\",'callback_data'=>\"wizwizch\"],\n            ],\n        [\n            ['text'=>$responseHeader,'callback_data'=>\"editsServerresponse_header$id\"],\n            ['text'=>\"response header\",'callback_data'=>\"wizwizch\"],\n            ],\n        [\n            ['text'=>$security,'callback_data'=>\"editsServersecurity$id\"],\n            ['text'=>\"security\",'callback_data'=>\"wizwizch\"],\n            ],\n        (($serverConfig['type'] == \"sanaei\" || $serverConfig['type'] == \"alireza\")?\n        [\n            ['text'=>$reality,'callback_data'=>\"changeRealityState$id\"],\n            ['text'=>\"reality\",'callback_data'=>\"wizwizch\"],\n            ]:[]),\n        [\n            ['text'=>\"♻️ تغییر آیپی های سرور\",'callback_data'=>\"changesServerIp$id\"],\n            ],\n        [\n            ['text'=>\"♻️ تغییر security setting\",'callback_data'=>\"editsServertlsSettings$id\"],\n            ]\n            ]:[]),[\n        [\n            ['text'=>\"🔅تغییر اطلاعات ورود\",'callback_data'=>\"changesServerLoginInfo$id\"],\n            ],\n        [\n            ['text'=>\"✂️ حذف سرور\",'callback_data'=>\"wizwizdeleteserver$id\"],\n            ],\n        [['text' => $buttonValues['back_button'], 'callback_data' => \"nextServerPage\" . $offset]]\n        ])]);\n}\nfunction getServerListKeys($offset = 0){\n    global $connection, $mainValues, $buttonValues;\n    \n    $limit = 15;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_info` WHERE `active`=1 LIMIT ? OFFSET ?\");\n    $stmt->bind_param('ii', $limit, $offset);\n    $stmt->execute();\n    $cats= $stmt->get_result();\n    $stmt->close();\n\n\n    $keys = array();\n    $keys[] = [['text'=>\"وضعیت\",'callback_data'=>\"wizwizch\"],['text'=>\"تنظیمات\",'callback_data'=>\"wizwizch\"],['text'=>\"نوعیت\",'callback_data'=>\"wizwizch\"],['text'=>\"سرور\",'callback_data'=>\"wizwizch\"]];\n    if($cats->num_rows == 0){\n        $keys[] = [['text'=>\"سروری یافت نشد\",'callback_data'=>\"wizwizch\"]];\n    }else {\n        while($cty = $cats->fetch_assoc()){\n            $id = $cty['id'];\n            $cname = $cty['title'];\n            $flagwizwiz = $cty['flag'];\n            $remarkwizwiz = $cty['remark'];\n            $state = $cty['state'] == \"1\"?$buttonValues['active']:$buttonValues['deactive'];\n            $ucount = $cty['ucount'];\n            $stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id`=?\");\n            $stmt->bind_param(\"i\", $id);\n            $stmt->execute();\n            $serverTypeInfo= $stmt->get_result()->fetch_assoc();\n            $stmt->close(); \n            $portType = $serverTypeInfo['port_type']==\"auto\"?\"خودکار\":\"تصادفی\";\n            $serverType = \" \";\n            switch ($serverTypeInfo['type']){\n                case \"sanaei\":\n                    $serverType = \"سنایی\";\n                    break;\n                case \"alireza\":\n                    $serverType = \"علیرضا\";\n                    break;\n                case \"normal\":\n                    $serverType = \"ساده\";\n                    break;\n                case \"marzban\":\n                    $serverType = \"مرزبان\";\n                    break;\n            }\n            $keys[] = [['text'=>$state,'callback_data'=>'toggleServerState' . $id . \"_\" . $offset],['text'=>\"⚙️\",'callback_data'=>\"showServerSettings\" . $id . \"_\" . $offset],['text'=>$serverType??\" \",'callback_data'=>\"wizwizch\"],['text'=>$cname,'callback_data'=>\"wizwizch\"]];\n        } \n    }\n    if($offset == 0 && $cats->num_rows >= $limit){\n        $keys[] = [['text'=>\" »» صفحه بعدی »»\",'callback_data'=>\"nextServerPage\" . ($offset + $limit)]];\n    }\n    elseif($cats->num_rows >= $limit){\n        $keys[] = [\n            ['text'=>\" »» صفحه بعدی »»\",'callback_data'=>\"nextServerPage\" . ($offset + $limit)],\n            ['text'=>\" «« صفحه قبلی ««\",'callback_data'=>\"nextServerPage\" . ($offset - $limit)]\n            ];\n    }\n    elseif($offset != 0){\n        $keys[] = [['text'=>\" «« صفحه قبلی ««\",'callback_data'=>\"nextServerPage\" . ($offset - $limit)]];\n    }\n    $keys[] = [\n        ['text'=>'➕ ثبت سرور xui','callback_data'=>\"addNewServer\"],\n        ['text'=>\"➕ ثبت سرور مرزبان\",'callback_data'=>\"addNewMarzbanPanel\"]\n        ];\n    $keys[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"managePanel\"]];\n    return json_encode(['inline_keyboard'=>$keys]);\n}\nfunction getCategoriesKeys($offset = 0){\n    $limit = 15;\n    \n    global $connection, $mainValues, $buttonValues;\n    $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `active`=1 AND `parent`=0 LIMIT ? OFFSET ?\");\n    $stmt->bind_param('ii', $limit, $offset);\n    $stmt->execute();\n    $cats = $stmt->get_result();\n    $stmt->close();\n\n\n    $keys = array();\n    $keys[] = [['text'=>\"حذف\",'callback_data'=>\"wizwizch\"],['text'=>\"اسم دسته\",'callback_data'=>\"wizwizch\"]];\n    if($cats->num_rows == 0){\n        $keys[] = [['text'=>\"دسته بندی یافت نشد\",'callback_data'=>\"wizwizch\"]];\n    }else {\n        while($cty = $cats->fetch_assoc()){\n            $id = $cty['id'];\n            $cname = $cty['title'];\n            $keys[] = [['text'=>\"❌\",'callback_data'=>\"wizwizcategorydelete$id\" . \"_\" . $offset],['text'=>$cname,'callback_data'=>\"wizwizcategoryedit$id\" . \"_\" . $offset]];\n        }\n    }\n    \n    if($offset == 0 && $cats->num_rows >= $limit){\n        $keys[] = [['text'=>\" »» صفحه بعدی »»\",'callback_data'=>\"nextCategoryPage\" . ($offset + $limit)]];\n    }\n    elseif($cats->num_rows >= $limit){\n        $keys[] = [\n            ['text'=>\" »» صفحه بعدی »»\",'callback_data'=>\"nextCategoryPage\" . ($offset + $limit)],\n            ['text'=>\" «« صفحه قبلی ««\",'callback_data'=>\"nextCategoryPage\" . ($offset - $limit)]\n            ];\n    }\n    elseif($offset != 0){\n        $keys[] = [['text'=>\" «« صفحه قبلی ««\",'callback_data'=>\"nextCategoryPage\" . ($offset - $limit)]];\n    }\n    \n    $keys[] = [['text'=>'➕ افزودن دسته جدید','callback_data'=>\"addNewCategory\"]];\n    $keys[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"managePanel\"]];\n    return json_encode(['inline_keyboard'=>$keys]);\n}\nfunction getGateWaysKeys(){\n    global $connection, $mainValues, $buttonValues;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'BOT_STATES'\");\n    $stmt->execute();\n    $botState = $stmt->get_result()->fetch_assoc()['value'];\n    if(!is_null($botState)) $botState = json_decode($botState,true);\n    else $botState = array();\n    $stmt->close();\n    \n    $cartToCartState = $botState['cartToCartState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $walletState = $botState['walletState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $sellState = $botState['sellState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $weSwapState = $botState['weSwapState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $robotState = $botState['botState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $nowPaymentWallet = $botState['nowPaymentWallet']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $nowPaymentOther = $botState['nowPaymentOther']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $tronWallet = $botState['tronWallet']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $zarinpal = $botState['zarinpal']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $nextpay = $botState['nextpay']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $rewaredChannel = $botState['rewardChannel']??\" \";\n    $lockChannel = $botState['lockChannel']??\" \";\n\n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'PAYMENT_KEYS'\");\n    $stmt->execute();\n    $paymentKeys = $stmt->get_result()->fetch_assoc()['value'];\n    if(!is_null($paymentKeys)) $paymentKeys = json_decode($paymentKeys,true);\n    else $paymentKeys = array();\n    $stmt->close();\n    return json_encode(['inline_keyboard'=>[\n        [\n            ['text'=>(!empty($paymentKeys['bankAccount'])?$paymentKeys['bankAccount']:\" \"),'callback_data'=>\"changePaymentKeysbankAccount\"],\n            ['text'=>\"شماره حساب\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>(!empty($paymentKeys['holderName'])?$paymentKeys['holderName']:\" \"),'callback_data'=>\"changePaymentKeysholderName\"],\n            ['text'=>\"دارنده حساب\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>(!empty($paymentKeys['nowpayment'])?$paymentKeys['nowpayment']:\" \"),'callback_data'=>\"changePaymentKeysnowpayment\"],\n            ['text'=>\"کد درگاه nowPayment\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>(!empty($paymentKeys['zarinpal'])?$paymentKeys['zarinpal']:\" \"),'callback_data'=>\"changePaymentKeyszarinpal\"],\n            ['text'=>\"کد درگاه زرین پال\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>(!empty($paymentKeys['nextpay'])?$paymentKeys['nextpay']:\" \"),'callback_data'=>\"changePaymentKeysnextpay\"],\n            ['text'=>\"کد درگاه نکست پی\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>(!empty($paymentKeys['tronwallet'])?$paymentKeys['tronwallet']:\" \"),'callback_data'=>\"changePaymentKeystronwallet\"],\n            ['text'=>\"آدرس والت ترون\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$weSwapState,'callback_data'=>\"changeGateWaysweSwapState\"],\n            ['text'=>\"درگاه وی سواپ\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$cartToCartState,'callback_data'=>\"changeGateWayscartToCartState\"],\n            ['text'=>\"کارت به کارت\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$nextpay,'callback_data'=>\"changeGateWaysnextpay\"],\n            ['text'=>\"درگاه نکست پی\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$zarinpal,'callback_data'=>\"changeGateWayszarinpal\"],\n            ['text'=>\"درگاه زرین پال\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$nowPaymentWallet,'callback_data'=>\"changeGateWaysnowPaymentWallet\"],\n            ['text'=>\"درگاه NowPayment کیف پول\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$nowPaymentOther,'callback_data'=>\"changeGateWaysnowPaymentOther\"],\n            ['text'=>\"درگاه NowPayment سایر\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$tronWallet,'callback_data'=>\"changeGateWaystronWallet\"],\n            ['text'=>\"درگاه ترون\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$walletState,'callback_data'=>\"changeGateWayswalletState\"],\n            ['text'=>\"کیف پول\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$rewaredChannel,'callback_data'=>'editRewardChannel'],\n            ['text'=>\"کانال گزارش درآمد\",'callback_data'=>'wizwizch']\n            ],\n        [\n            ['text'=>$lockChannel,'callback_data'=>'editLockChannel'],\n            ['text'=>\"کانال قفل\",'callback_data'=>'wizwizch']\n            ],\n        [['text'=>$buttonValues['back_button'],'callback_data'=>\"managePanel\"]]\n        ]]);\n\n}\nfunction getBotSettingKeys(){\n    global $connection, $mainValues, $buttonValues;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'BOT_STATES'\");\n    $stmt->execute();\n    $botState = $stmt->get_result()->fetch_assoc()['value'];\n    if(!is_null($botState)) $botState = json_decode($botState,true);\n    else $botState = array();\n    $stmt->close();\n\n    $changeProtocole = $botState['changeProtocolState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $renewAccount = $botState['renewAccountState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $plandelkhahwiz = $botState['plandelkhahState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $switchLocation = $botState['switchLocationState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $increaseTime = $botState['increaseTimeState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $increaseVolume = $botState['increaseVolumeState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $subLink = $botState['subLinkState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $configLink = $botState['configLinkState']==\"off\"?$buttonValues['off']:$buttonValues['on'];\n    $renewConfigLink = $botState['renewConfigLinkState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $updateConfigLink = $botState['updateConfigLinkState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $individualExistence = $botState['individualExistence']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $sharedExistence = $botState['sharedExistence']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $testAccount = $botState['testAccount']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $agency = $botState['agencyState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $agencyPlanDiscount = $botState['agencyPlanDiscount']==\"on\"?$buttonValues['plan_discount']:$buttonValues['server_discount'];\n    $qrConfig = $botState['qrConfigState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $qrSub = $botState['qrSubState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    \n    $requirePhone = $botState['requirePhone']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $requireIranPhone = $botState['requireIranPhone']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $sellState = $botState['sellState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $robotState = $botState['botState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $searchState = $botState['searchState']==\"on\"?$buttonValues['on']:$buttonValues['off'];\n    $updateConnectionState = $botState['updateConnectionState']==\"robot\"?\"از روی ربات\":\"از روی سایت\";\n    $rewaredTime = ($botState['rewaredTime']??0) . \" ساعت\";\n    switch($botState['remark']){\n        case \"digits\":\n            $remarkType = \"عدد رندم 5 حرفی\";\n            break;\n        case \"manual\":\n            $remarkType = \"توسط کاربر\";\n            break;\n        default:\n            $remarkType = \"آیدی و عدد رندوم\";\n            break;\n    }\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` = 'PAYMENT_KEYS'\");\n    $stmt->execute();\n    $paymentKeys = $stmt->get_result()->fetch_assoc()['value'];\n    if(!is_null($paymentKeys)) $paymentKeys = json_decode($paymentKeys,true);\n    else $paymentKeys = array();\n    $stmt->close();\n    return json_encode(['inline_keyboard'=>[\n        [\n            ['text'=>\"🎗 بنر بازاریابی 🎗\",'callback_data'=>\"inviteSetting\"]\n            ],\n        [\n            ['text'=> $updateConnectionState,'callback_data'=>\"changeUpdateConfigLinkState\"],\n            ['text'=>\"آپدیت کانفیگ\",'callback_data'=>\"wizwizch\"]\n            ],\n        [\n            ['text'=> $agency,'callback_data'=>\"changeBotagencyState\"],\n            ['text'=>\"نمایندگی\",'callback_data'=>\"wizwizch\"]\n            ],\n        [\n            ['text'=> $agencyPlanDiscount,'callback_data'=>\"changeBotagencyPlanDiscount\"],\n            ['text'=>\"نوع تخفیف نمایندگی\",'callback_data'=>\"wizwizch\"]\n            ],\n        [\n            ['text'=>$individualExistence,'callback_data'=>\"changeBotindividualExistence\"],\n            ['text'=>\"موجودی اختصاصی\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$sharedExistence,'callback_data'=>\"changeBotsharedExistence\"],\n            ['text'=>\"موجودی اشتراکی\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$testAccount,'callback_data'=>\"changeBottestAccount\"],\n            ['text'=>\"اکانت تست\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$changeProtocole,'callback_data'=>\"changeBotchangeProtocolState\"],\n            ['text'=>\"تغییر پروتکل\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$renewAccount,'callback_data'=>\"changeBotrenewAccountState\"],\n            ['text'=>\"تمدید سرویس\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$plandelkhahwiz,'callback_data'=>\"changeBotplandelkhahState\"],\n            ['text'=>\"پلن دلخواه\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$switchLocation,'callback_data'=>\"changeBotswitchLocationState\"],\n            ['text'=>\"تغییر لوکیشن\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$increaseTime,'callback_data'=>\"changeBotincreaseTimeState\"],\n            ['text'=>\"افزایش زمان\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$increaseVolume,'callback_data'=>\"changeBotincreaseVolumeState\"],\n            ['text'=>\"افزایش حجم\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$requirePhone,'callback_data'=>\"changeBotrequirePhone\"],\n            ['text'=>\"تأیید شماره\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$requireIranPhone,'callback_data'=>\"changeBotrequireIranPhone\"],\n            ['text'=>\"تأیید شماره ایرانی\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$sellState,'callback_data'=>\"changeBotsellState\"],\n            ['text'=>\"فروش\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$robotState,'callback_data'=>\"changeBotbotState\"],\n            ['text'=>\"وضعیت ربات\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$subLink,'callback_data'=>\"changeBotsubLinkState\"],\n            ['text'=>\"لینک ساب و مشخصات وب\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$configLink,'callback_data'=>\"changeBotconfigLinkState\"],\n            ['text'=>\"لینک کانفیگ\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$searchState,'callback_data'=>\"changeBotsearchState\"],\n            ['text'=>\"مشخصات کانفیگ\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$renewConfigLink,'callback_data'=>\"changeBotrenewConfigLinkState\"],\n            ['text'=>\"دریافت لینک جدید\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$updateConfigLink,'callback_data'=>\"changeBotupdateConfigLinkState\"],\n            ['text'=>\"بروز رسانی لینک\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$qrConfig,'callback_data'=>\"changeBotqrConfigState\"],\n            ['text'=>\"کیو آر کد کانفیگ\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$qrSub,'callback_data'=>\"changeBotqrSubState\"],\n            ['text'=>\"کیو آر کد ساب\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$remarkType,'callback_data'=>\"changeConfigRemarkType\"],\n            ['text'=>\"نوع ریمارک\",'callback_data'=>\"wizwizch\"]\n        ],\n        [\n            ['text'=>$rewaredTime,'callback_data'=>'editRewaredTime'],\n            ['text'=>\"ارسال گزارش درآمد\", 'callback_data'=>'wizwizch']\n            ],\n        [\n            ['text'=>$botState['cartToCartAutoAcceptState']==\"on\"?$buttonValues['on']:$buttonValues['off'],'callback_data'=>\"changeBotcartToCartAutoAcceptState\"],\n            ['text'=>\"تأیید خودکار کارت به کارت\",'callback_data'=>\"wizwizch\"]\n        ],\n        ($botState['cartToCartAutoAcceptState']==\"on\"?[\n            ['text'=>($botState['cartToCartAutoAcceptType'] == \"0\"?\"نماینده\":($botState['cartToCartAutoAcceptType'] == \"1\"?\"کاربر\":\"همه\")),'callback_data'=>\"changeBotcartToCartAutoAcceptType\"],\n            ['text'=>\"نوع تأیید\",'callback_data'=>\"wizwizch\"]\n        ]:[]),\n        ($botState['cartToCartAutoAcceptState']==\"on\"?[\n            ['text'=>($botState['cartToCartAutoAcceptTime']??\"10\") . \" دقیقه\",'callback_data'=>\"editcartToCartAutoAcceptTime\"],\n            ['text'=>\"زمان تأیید خودکار \",'callback_data'=>\"wizwizch\"]\n        ]:[]),\n        [['text'=>$buttonValues['back_button'],'callback_data'=>\"managePanel\"]]\n        ]]);\n\n}\nfunction getBotReportKeys(){\n    global $connection, $mainValues, $buttonValues;\n    $stmt = $connection->prepare(\"SELECT * FROM `users`\");\n    $stmt->execute();\n    $allUsers = $stmt->get_result()->num_rows;\n    $stmt->close();\n\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list`\");\n    $stmt->execute();\n    $allOrders = $stmt->get_result()->num_rows;\n    $stmt->close();\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_config`\");\n    $stmt->execute();\n    $allServers = $stmt->get_result()->num_rows;\n    $stmt->close();\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_categories`\");\n    $stmt->execute();\n    $allCategories = $stmt->get_result()->num_rows;\n    $stmt->close();\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans`\");\n    $stmt->execute();\n    $allPlans = $stmt->get_result()->num_rows;\n    $stmt->close();\n    \n    $stmt = $connection->prepare(\"SELECT SUM(price) as total FROM `pays` WHERE `state` = 'paid' OR `state` = 'approved'\");\n    $stmt->execute();\n    $totalRewards = number_format($stmt->get_result()->fetch_assoc()['total']) . \" تومان\";\n    $stmt->close();\n    \n    \n    $persian = explode(\"-\",jdate(\"Y-n-1\", time()));\n    $gregorian = jalali_to_gregorian($persian[0], $persian[1], $persian[2]);\n    $date =  $gregorian[0] . \"-\" . $gregorian[1] . \"-\" . $gregorian[2];\n    $dayTime = strtotime($date);\n    $stmt = $connection->prepare(\"SELECT SUM(price) as total FROM `pays` WHERE `request_date` > ? AND (`state` = 'paid' OR `state` = 'approved')\");\n    $stmt->bind_param(\"i\", $dayTime);\n    $stmt->execute();\n    $monthReward = number_format($stmt->get_result()->fetch_assoc()['total']) . \" تومان\";\n    $stmt->close();\n    \n    $dayTime = strtotime(\"-\" . (date(\"w\")+1) . \" days\");\n    $stmt = $connection->prepare(\"SELECT SUM(price) as total FROM `pays` WHERE `request_date` > ?  AND (`state` = 'paid' OR `state` = 'approved')\");\n    $stmt->bind_param(\"i\", $dayTime);\n    $stmt->execute();\n    $weekReward = number_format($stmt->get_result()->fetch_assoc()['total']) . \" تومان\";\n    $stmt->close();\n    \n    $dayTime = strtotime(\"today\");\n    $stmt = $connection->prepare(\"SELECT SUM(price) as total FROM `pays` WHERE `request_date` > ? AND (`state` = 'paid' OR `state` = 'approved')\");\n    $stmt->bind_param(\"i\", $dayTime);\n    $stmt->execute();\n    $dayReward = number_format($stmt->get_result()->fetch_assoc()['total']) . \" تومان\";\n    $stmt->close();\n    \n    return json_encode(['inline_keyboard'=>[\n        [\n            ['text'=>$allUsers,'callback_data'=>'wizwizch'],\n            ['text'=>\"تعداد کل کاربران\",'callback_data'=>'wizwizch']\n            ],\n        [\n            ['text'=>$allOrders,'callback_data'=>'wizwizch'],\n            ['text'=>\"کل محصولات خریداری شده\",'callback_data'=>'wizwizch']\n            ],\n        [\n            ['text'=>$allServers,'callback_data'=>'wizwizch'],\n            ['text'=>\"تعداد سرورها\",'callback_data'=>'wizwizch']\n            ],\n        [\n            ['text'=>$allCategories,'callback_data'=>'wizwizch'],\n            ['text'=>\"تعداد دسته ها\",'callback_data'=>'wizwizch']\n            ],\n        [\n            ['text'=>$allPlans,'callback_data'=>'wizwizch'],\n            ['text'=>\"تعداد پلن ها\",'callback_data'=>'wizwizch']\n            ],\n        [\n            ['text'=>$totalRewards,'callback_data'=>'wizwizch'],\n            ['text'=>\"درآمد کل\",'callback_data'=>'wizwizch']\n            ],\n        [\n            ['text'=>$dayReward,'callback_data'=>'wizwizch'],\n            ['text'=>\"درآمد امروز\",'callback_data'=>'wizwizch']\n            ],\n        [\n            ['text'=>$weekReward,'callback_data'=>'wizwizch'],\n            ['text'=>\"درآمد هفته\",'callback_data'=>'wizwizch']\n            ],\n        [\n            ['text'=>$monthReward,'callback_data'=>'wizwizch'],\n            ['text'=>\"درآمد ماه\",'callback_data'=>'wizwizch']\n            ],\n        [\n            ['text'=>\"برگشت به مدیریت\",'callback_data'=>'managePanel']\n            ]\n        ]]);\n}\nfunction getAdminsKeys(){\n    global $connection, $mainValues, $buttonValues;\n    $keys = array();\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `isAdmin` = true\");\n    $stmt->execute();\n    $usersList = $stmt->get_result();\n    $stmt->close();\n    if($usersList->num_rows > 0){\n        while($user = $usersList->fetch_assoc()){\n            $keys[] = [['text'=>\"❌\",'callback_data'=>\"delAdmin\" . $user['userid']],['text'=>$user['name'], \"callback_data\"=>\"wizwizch\"]];\n        }\n    }else{\n        $keys[] = [['text'=>\"لیست ادمین ها خالی است ❕\",'callback_data'=>\"wizwizch\"]];\n    }\n    $keys[] = [['text'=>\"➕ افزودن ادمین\",'callback_data'=>\"addNewAdmin\"]];\n    $keys[] = [['text'=>$buttonValues['back_button'],'callback_data'=>\"managePanel\"]];\n    return json_encode(['inline_keyboard'=>$keys]);\n}\nfunction getUserInfoKeys($userId){\n    global $connection, $mainValues, $buttonValues; \n    $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid` = ?\");\n    $stmt->bind_param(\"i\",$userId);\n    $stmt->execute();\n    $userCount = $stmt->get_result();\n    $stmt->close();\n    if($userCount->num_rows > 0){\n        $userInfos = $userCount->fetch_assoc();\n        $userWallet = number_format($userInfos['wallet']) . \" تومان\";\n        \n        $stmt = $connection->prepare(\"SELECT COUNT(amount) as count, SUM(amount) as total FROM `orders_list` WHERE `userid` = ?\");\n        $stmt->bind_param(\"i\", $userId);\n        $stmt->execute();\n        $info = $stmt->get_result()->fetch_assoc();\n        \n        $boughtService = $info['count'];\n        $totalBoughtPrice = number_format($info['total']) . \" تومان\";\n        \n        $userDetail = bot('getChat',['chat_id'=>$userId])->result;\n        $userUserName = $userDetail->username;\n        $fullName = $userDetail->first_name . \" \" . $userDetail->last_name;\n        \n        return json_encode(['inline_keyboard'=>[\n            [\n                ['text'=>$userUserName??\" \",'url'=>\"t.me/$userUserName\"],\n                ['text'=>\"یوزرنیم\",'callback_data'=>\"wizwizch\"]\n                ],\n            [\n                ['text'=>$fullName??\" \",'callback_data'=>\"wizwizch\"],\n                ['text'=>\"نام\",'callback_data'=>\"wizwizch\"]\n                ],\n            [\n                ['text'=>$boughtService??\" \",'callback_data'=>\"wizwizch\"],\n                ['text'=>\"سرویس ها\",'callback_data'=>\"wizwizch\"]\n                ],\n            [\n                ['text'=>$totalBoughtPrice??\" \",'callback_data'=>\"wizwizch\"],\n                ['text'=>\"مبلغ خرید\",'callback_data'=>\"wizwizch\"]\n                ],\n            [\n                ['text'=>$userWallet??\" \",'callback_data'=>\"wizwizch\"],\n                ['text'=>\"موجودی کیف پول\",'callback_data'=>\"wizwizch\"]\n                ],\n            [\n                ['text'=>$buttonValues['back_button'],'callback_data'=>\"mainMenu\"]\n                ],\n            ]]);\n    }else return null;\n}\nfunction getDiscountCodeKeys(){\n    global $connection, $mainValues, $buttonValues;\n    $time = time();\n    $stmt = $connection->prepare(\"SELECT * FROM `discounts` WHERE (`expire_date` > $time OR `expire_date` = 0) AND (`expire_count` > 0 OR `expire_count` = -1)\");\n    $stmt->execute();\n    $list = $stmt->get_result();\n    $stmt->close();\n    $keys = array();\n    if($list->num_rows > 0){\n        $keys[] = [['text'=>'حذف','callback_data'=>\"wizwizch\"],['text'=>\"استفاده هر یوزر\",'callback_data'=>\"wizwizch\"],['text'=>\"تاریخ ختم\",'callback_data'=>\"wizwizch\"],['text'=>\"تعداد استفاده\",'callback_data'=>\"wizwizch\"],['text'=>\"مقدار تخفیف\",'callback_data'=>\"wizwizch\"],['text'=>\"کد تخفیف\",'callback_data'=>\"wizwizch\"]];\n        while($row = $list->fetch_assoc()){\n            $date = $row['expire_date']!=0?jdate(\"Y/n/j H:i\", $row['expire_date']):\"نامحدود\";\n            $count = $row['expire_count']!=-1?$row['expire_count']:\"نامحدود\";\n            $amount = $row['amount'];\n            $amount = $row['type'] == 'percent'? $amount.\"%\":$amount = number_format($amount) . \" تومان\";\n            $hashId = $row['hash_id'];\n            $rowId = $row['id'];\n            $canUse = $row['can_use'];\n            \n            $keys[] = [['text'=>'❌','callback_data'=>\"delDiscount\" . $rowId],['text'=>$canUse, 'callback_data'=>\"wizwizch\"],['text'=>$date,'callback_data'=>\"wizwizch\"],['text'=>$count,'callback_data'=>\"wizwizch\"],['text'=>$amount,'callback_data'=>\"wizwizch\"],['text'=>$hashId,'callback_data'=>'copyHash' . $hashId]];\n        }\n    }else{\n        $keys[] = [['text'=>\"کد تخفیفی یافت نشد\",'callback_data'=>\"wizwizch\"]];\n    }\n    \n    $keys[] = [['text'=>\"افزودن کد تخفیف\",'callback_data'=>\"addDiscountCode\"]];\n    $keys[] = [['text'=>$buttonValues['back_button'],'callback_data'=>\"managePanel\"]];\n    return json_encode(['inline_keyboard'=>$keys]);\n}\nfunction getMainMenuButtonsKeys(){\n    global $connection, $mainValues, $buttonValues;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM `setting` WHERE `type` LIKE '%MAIN_BUTTONS%'\");\n    $stmt->execute();\n    $buttons = $stmt->get_result();\n    $stmt->close();\n    \n    $keys = array();\n    if($buttons->num_rows > 0){\n        while($row = $buttons->fetch_assoc()){\n            $rowId = $row['id'];\n            $title = str_replace(\"MAIN_BUTTONS\",\"\", $row['type']);\n            $answer = $row['value'];\n            $keys[] = [\n                        ['text'=>\"❌\",'callback_data'=>\"delMainButton\" . $rowId],\n                        ['text'=>$title??\" \" ,'callback_data'=>\"wizwizch\"]];\n        }\n    }else{\n        $keys[] = [['text'=>\"دکمه ای یافت نشد ❕\",'callback_data'=>\"wizwizch\"]];\n    }\n    $keys[] = [['text'=>\"افزودن دکمه جدید ➕\",'callback_data'=>\"addNewMainButton\"]];\n    $keys[] = [['text'=>$buttonValues['back_button'],'callback_data'=>\"managePanel\"]];\n    return json_encode(['inline_keyboard'=>$keys]);\n}\nfunction getPlanDetailsKeys($planId){\n    global $connection, $mainValues, $buttonValues;\n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $planId);\n    $stmt->execute();\n    $pdResult = $stmt->get_result();\n    $pd = $pdResult->fetch_assoc();\n    $stmt->close();\n\n\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $pd['server_id']);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $reality = $server_info['reality'];\n\n\n    if($pdResult->num_rows == 0) return null;\n    else {\n        $id=$pd['id'];\n        $name=$pd['title'];\n        $price=$pd['price'];\n        $acount =$pd['acount'];\n        $rahgozar = $pd['rahgozar'];\n        $customPath = $pd['custom_path']==true?$buttonValues['on']:$buttonValues['off'];\n        $dest = $pd['dest']??\" \";\n        $spiderX = $pd['spiderX']??\" \";\n        $serverName = $pd['serverNames']??\" \";\n        $flow = $pd['flow'];\n        $customPort = $pd['custom_port'];\n        $customSni = $pd['custom_sni']??\" \";\n\n        $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `status`=1 AND `fileid`=?\");\n        $stmt->bind_param(\"i\", $id);\n        $stmt->execute();\n        $wizwizplanaccnumber = $stmt->get_result()->num_rows;\n        $stmt->close();\n\n        $srvid= $pd['server_id'];\n        $keyboard = [\n            ($rahgozar==true?[['text'=>\"* نوع پلن: رهگذر *\",'callback_data'=>'wizwizch']]:[]),\n            ($rahgozar==true?[\n                ['text'=>$customPath,'callback_data'=>'changeCustomPath' . $id],\n                ['text'=>\"Path Custom\",'callback_data'=>'wizwizch'],\n                ]:[]),\n            ($rahgozar==true?[\n                ['text'=>$customPort,'callback_data'=>'changeCustomPort' . $id],\n                ['text'=>\"پورت دلخواه\",'callback_data'=>'wizwizch'],\n                ]:[]),\n            ($rahgozar==true?[\n                ['text'=>$customSni,'callback_data'=>'changeCustomSni' . $id],\n                ['text'=>\"sni دلخواه\",'callback_data'=>'wizwizch'],\n                ]:[]),\n            [['text'=>$name,'callback_data'=>\"wizwizplanname$id\"],['text'=>\"🔮 نام پلن\",'callback_data'=>\"wizwizch\"]],\n            ($reality == \"true\"?[['text'=>$dest,'callback_data'=>\"editDestName$id\"],['text'=>\"dest\",'callback_data'=>\"wizwizch\"]]:[]),\n            ($reality == \"true\"?[['text'=>$serverName,'callback_data'=>\"editServerNames$id\"],['text'=>\"serverNames\",'callback_data'=>\"wizwizch\"]]:[]),\n            ($reality == \"true\"?[['text'=>$spiderX,'callback_data'=>\"editSpiderX$id\"],['text'=>\"spiderX\",'callback_data'=>\"wizwizch\"]]:[]),\n            ($reality == \"true\"?[['text'=>$flow,'callback_data'=>\"editFlow$id\"],['text'=>\"flow\",'callback_data'=>\"wizwizch\"]]:[]),\n            [['text'=>$wizwizplanaccnumber,'callback_data'=>\"wizwizch\"],['text'=>\"🎗 تعداد اکانت های فروخته شده\",'callback_data'=>\"wizwizch\"]],\n            ($pd['inbound_id'] != 0?[['text'=>\"$acount\",'callback_data'=>\"wizwizplanslimit$id\"],['text'=>\"🚪 تغییر ظرفیت کانفیگ\",'callback_data'=>\"wizwizch\"]]:[]),\n            ($pd['inbound_id'] != 0?[['text'=>$pd['inbound_id'],'callback_data'=>\"wizwizplansinobundid$id\"],['text'=>\"🚪 سطر کانفیگ\",'callback_data'=>\"wizwizch\"]]:[]),\n            [['text'=>\"✏️ ویرایش توضیحات\",'callback_data'=>\"wizwizplaneditdes$id\"]],\n            [['text'=>number_format($price) . \" تومان\",'callback_data'=>\"wizwizplanrial$id\"],['text'=>\"💰 قیمت پلن\",'callback_data'=>\"wizwizch\"]],\n            [['text'=>\"♻️ دریافت لیست اکانت ها\",'callback_data'=>\"wizwizplanacclist$id\"]],\n            ($server_info['type'] == \"marzban\"?[['text'=>\"انتخاب Host\",'callback_data'=>\"marzbanHostSettings\" . $id]]:[]),\n            [['text'=>\"✂️ حذف\",'callback_data'=>\"wizwizplandelete$id\"]],\n            [['text' => $buttonValues['back_button'], 'callback_data' =>\"plansList$srvid\"]]\n            ];\n        return json_encode(['inline_keyboard'=>$keyboard]);\n    }\n}\nfunction getUserOrderDetailKeys($id, $offset = 0){\n    global $connection, $botState, $mainValues, $buttonValues, $botUrl;\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `id`=?\");\n    $stmt->bind_param(\"i\", $id);\n    $stmt->execute();\n    $order = $stmt->get_result();\n    $stmt->close();\n    \n\n    if($order->num_rows==0){\n        return null;\n    }else {\n        $order = $order->fetch_assoc();\n        $userId = $order['userid'];\n        $firstName = bot('getChat',['chat_id'=>$userId])->result->first_name ?? \" \";\n        $fid = $order['fileid']; \n    \t$stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=? AND `active`=1\"); \n        $stmt->bind_param(\"i\", $fid);\n        $stmt->execute();\n        $respd = $stmt->get_result();\n        $stmt->close();\n\t    $rahgozar = $order['rahgozar'];\n        $agentBought = $order['agent_bought'];\n        $isAgentBought = $agentBought == true?\"بله\":\"نخیر\";\n\n    \tif($respd){\n    \t    $respd = $respd->fetch_assoc(); \n    \t    \n    \t    $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `id`=?\");\n            $stmt->bind_param(\"i\", $respd['catid']);\n            $stmt->execute();\n            $cadquery = $stmt->get_result();\n            $stmt->close();\n\n\n    \t    if($cadquery) {\n    \t        $catname = $cadquery->fetch_assoc()['title'];\n        \t    $name = $catname.\" \".$respd['title'];\n    \t    }else $name = \"$id\";\n        \t\n    \t}else $name = \"$id\";\n    \t\n        $date = jdate(\"Y-m-d H:i\",$order['date']);\n        $expire_date = jdate(\"Y-m-d H:i\",$order['expire_date']);\n        $remark = $order['remark'];\n        $uuid = $order['uuid']??\"0\";\n        $acc_link = json_decode($order['link']);\n        $protocol = $order['protocol'];\n        $token = $order['token'];\n        $server_id = $order['server_id'];\n        $inbound_id = $order['inbound_id'];\n        $link_status = $order['expire_date'] > time()  ? $buttonValues['active'] : $buttonValues['deactive'];\n        $price = $order['amount'];\n        \n    \t$stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id` = ?\");\n    \t$stmt->bind_param('i', $server_id);\n    \t$stmt->execute();\n    \t$serverConfig = $stmt->get_result()->fetch_assoc();\n    \t$stmt->close();\n    \t$serverType = $serverConfig['type'];\n    \t$panelUrl = $serverConfig['panel_url'];\n\n        if($serverType == \"marzban\"){\n            $info = getMarzbanUser($server_id, $remark);\n            $enable = $info->status ==\"active\"?true:false;\n            $total = $info->data_limit;\n            $usedTraffic = $info->used_traffic;\n            \n            $leftgb = round( ($total - $usedTraffic) / 1073741824, 2) . \" GB\";\n        }else{\n            $response = getJson($server_id)->obj;\n            if($inbound_id == 0) {\n                foreach($response as $row){\n                    $clients = json_decode($row->settings)->clients;\n                    if($clients[0]->id == $uuid || $clients[0]->password == $uuid) {\n                        $total = $row->total;\n                        $up = $row->up;\n                        $enable = $row->enable;\n                        $down = $row->down; \n                        $netType = json_decode($row->streamSettings)->network;\n                        $security = json_decode($row->streamSettings)->security;\n                        break;\n                    }\n                }\n            }else {\n                foreach($response as $row){\n                    if($row->id == $inbound_id) {\n                        $netType = json_decode($row->streamSettings)->network;\n                        $security = json_decode($row->streamSettings)->security;\n                        $clientsStates = $row->clientStats;\n                        $clients = json_decode($row->settings)->clients;\n                        foreach($clients as $key => $client){\n                            if($client->id == $uuid || $client->password == $uuid){\n                                $email = $client->email;\n                                $emails = array_column($clientsStates,'email');\n                                $emailKey = array_search($email,$emails);\n                                \n                                $total = $clientsStates[$emailKey]->total;\n                                $up = $clientsStates[$emailKey]->up;\n                                $enable = $clientsStates[$emailKey]->enable;\n                                if(!$client->enable) $enable = false;\n                                $down = $clientsStates[$emailKey]->down; \n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            $leftgb = round( ($total - $up - $down) / 1073741824, 2) . \" GB\";\n        }\n        $configLinks = \"\";\n    \n        $limit = 5;\n        $count = 0;\n        foreach($acc_link as $accLink){\n            $count++;\n            if($count <= $offset) continue;\n            $configLinks .= ($botState['configLinkState'] != \"off\"?\"\\n <code>$accLink</code>\":\"\");\n            \n            if($count >= $offset + $limit) break;\n        }\n\n        $keyboard = array();\n        \n        $configKeys = [];\n        \n        if(count($acc_link) > $limit){\n            if($offset == 0){\n                $configKeys = [\n                    ['text'=>\"«\",'callback_data'=>\"userOrderDetails{$id}_\" . ($offset + $limit)]\n                    ];\n            }\n            elseif(count($acc_link) >= $offset + $limit){\n                $configKeys = [\n                    ['text'=>\"«\",'callback_data'=>\"userOrderDetails{$id}_\" . ($offset + $limit)],\n                    ['text'=>\"»\",'callback_data'=>\"userOrderDetails{$id}_\" . ($offset - $limit)]\n                    ];\n                \n            }\n            elseif($offset != 0){\n                $configKeys = [\n                    ['text'=>\"»\",'callback_data'=>\"userOrderDetails{$id}_\" . ($offset - $limit)]\n                    ];\n            }\n        }\n    \n        array_push($keyboard, $configKeys, [\n    \t\t\t    ['text' => $userId, 'callback_data' => \"wizwizch\"],\n                    ['text' => \"آیدی کاربر\", 'callback_data' => \"wizwizch\"],\n                ],\n                [\n    \t\t\t    ['text' => $firstName, 'callback_data' => \"wizwizch\"],\n                    ['text' => \"اسم کاربر\", 'callback_data' => \"wizwizch\"],\n                ],\n                [\n    \t\t\t    ['text' => $isAgentBought, 'callback_data' => \"wizwizch\"],\n                    ['text' => \"خرید نماینده\", 'callback_data' => \"wizwizch\"],\n                ],\n                [\n    \t\t\t    ['text' => \"$name\", 'callback_data' => \"wizwizch\"],\n                    ['text' => $buttonValues['plan_name'], 'callback_data' => \"wizwizch\"],\n                ],\n                [\n    \t\t\t    ['text' => \"$date \", 'callback_data' => \"wizwizch\"],\n                    ['text' => $buttonValues['buy_date'], 'callback_data' => \"wizwizch\"],\n                ],\n                [\n    \t\t\t    ['text' => \"$expire_date \", 'callback_data' => \"wizwizch\"],\n                    ['text' => $buttonValues['expire_date'], 'callback_data' => \"wizwizch\"],\n                ],\n                [\n    \t\t\t    ['text' => \" $leftgb\", 'callback_data' => \"wizwizch\"],\n                    ['text' => $buttonValues['volume_left'], 'callback_data' => \"wizwizch\"],\n    \t\t\t],\n                [\n                    ['text' => $buttonValues['selected_protocol'], 'callback_data' => \"wizwizch\"],\n                ]);\n                \n        if($inbound_id == 0){\n            if($protocol == 'trojan') {\n                if($security == \"xtls\"){\n                    array_push($keyboard, \n                        [\n                            ['text' => $protocol == 'trojan' ? '☑️ trojan' : 'trojan', 'callback_data' => \"wizwizch\"],\n                            ['text' => $protocol == 'vless' ? '☑️ vless' : 'vless', 'callback_data' => \"wizwizch\"],\n                        ],\n                        [\n                            ['text'=>($enable == true?$buttonValues['disable_config']:$buttonValues['enable_config']),'callback_data'=>\"changeUserConfigState\" . $order['id']],\n                            ['text'=>$buttonValues['delete_config'],'callback_data'=>\"delUserConfig\" . $order['id']],\n                            ]\n                    );\n                    \n                }else{\n                    array_push($keyboard, \n                        [\n                            ['text' => $protocol == 'trojan' ? '☑️ trojan' : 'trojan', 'callback_data' => \"wizwizch\"],\n                            ['text' => $protocol == 'vmess' ? '☑️ vmess' : 'vmess', 'callback_data' => \"wizwizch\"],\n                            ['text' => $protocol == 'vless' ? '☑️ vless' : 'vless', 'callback_data' => \"wizwizch\"],\n                        ],\n                        [\n                            ['text'=>($enable == true?$buttonValues['disable_config']:$buttonValues['enable_config']),'callback_data'=>\"changeUserConfigState\" . $order['id']],\n                            ['text'=>$buttonValues['delete_config'],'callback_data'=>\"delUserConfig\" . $order['id']],\n                            ]\n                    );\n                    \n                    \n                }\n            }else {\n                if($netType == \"grpc\"){\n                    array_push($keyboard, \n                        [\n                            ['text' => $protocol == 'vmess' ? '☑️ vmess' : 'vmess', 'callback_data' => \"wizwizch\"],\n                            ['text' => $protocol == 'vless' ? '☑️ vless' : 'vless', 'callback_data' => \"wizwizch\"],\n                        ],\n                        [\n                            ['text'=>($enable == true?$buttonValues['disable_config']:$buttonValues['enable_config']),'callback_data'=>\"changeUserConfigState\" . $order['id']],\n                            ['text'=>$buttonValues['delete_config'],'callback_data'=>\"delUserConfig\" . $order['id']],\n                            ]\n                    );\n                }\n                elseif($netType == \"tcp\" && $security == \"xtls\"){\n                    array_push($keyboard, \n                        [\n                            ['text' => $protocol == 'trojan' ? '☑️ trojan' : 'trojan', 'callback_data' => \"wizwizch\"],\n                            ['text' => $protocol == 'vless' ? '☑️ vless' : 'vless', 'callback_data' => \"wizwizch\"],\n                        ],\n                        [\n                            ['text'=>($enable == true?$buttonValues['disable_config']:$buttonValues['enable_config']),'callback_data'=>\"changeUserConfigState\" . $order['id']],\n                            ['text'=>$buttonValues['delete_config'],'callback_data'=>\"delUserConfig\" . $order['id']],\n                            ]\n                    );\n                    \n                }\n                else{\n                    array_push($keyboard, \n                        ($rahgozar == true?\n                        [\n                            ['text' => $protocol == 'vmess' ? '☑️ vmess' : 'vmess', 'callback_data' => \"wizwizch\"],\n                            ['text' => $protocol == 'vless' ? '☑️ vless' : 'vless', 'callback_data' => \"wizwizch\"],\n                        ]:\n                            [\n                            ['text' => $protocol == 'trojan' ? '☑️ trojan' : 'trojan', 'callback_data' => \"wizwizch\"],\n                            ['text' => $protocol == 'vmess' ? '☑️ vmess' : 'vmess', 'callback_data' => \"wizwizch\"],\n                            ['text' => $protocol == 'vless' ? '☑️ vless' : 'vless', 'callback_data' => \"wizwizch\"],\n                        ]),\n                        [\n                            ['text'=>($enable == true?$buttonValues['disable_config']:$buttonValues['enable_config']),'callback_data'=>\"changeUserConfigState\" . $order['id']],\n                            ['text'=>$buttonValues['delete_config'],'callback_data'=>\"delUserConfig\" . $order['id']],\n                            ]\n                    );\n                    \n                }\n            }\n        }else{\n            array_push($keyboard, \n                [\n                    ['text' => \" $protocol ☑️\", 'callback_data' => \"wizwizch\"],\n                ],\n                [\n                    ['text'=>($enable == true?$buttonValues['disable_config']:$buttonValues['enable_config']),'callback_data'=>\"changeUserConfigState\" . $order['id']],\n                    ['text'=>$buttonValues['delete_config'],'callback_data'=>\"delUserConfig\" . $order['id']],\n                    ]\n                ); \n            \n\n        }\n\n\n        $stmt= $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $server_info = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        \n        if($serverType == \"marzban\") $subLink = $botState['subLinkState'] == \"on\"?\"<code>\" . $panelUrl . \"/sub/\" . $token . \"</code>\":\"\";\n        else $subLink = $botState['subLinkState']==\"on\"?\"<code>\" . $botUrl . \"settings/subLink.php?token=\" . $token . \"</code>\":\"\";\n\n        \n        $enable = $enable == true? $buttonValues['active']:$buttonValues['deactive'];\n        $msg = str_replace(['STATE', 'NAME','CONNECT-LINK', 'SUB-LINK'], [$enable, $remark, $configLinks, $subLink], $mainValues['config_details_message']);\n    \n        $keyboard[] = [['text' => $buttonValues['back_button'], 'callback_data' => \"managePanel\"]];\n        return [\"keyboard\"=>json_encode([\n                    'inline_keyboard' => $keyboard\n                ]),\n                \"msg\"=>$msg];\n    }\n}\nfunction getOrderDetailKeys($from_id, $id, $offset = 0){\n    global $connection, $botState, $mainValues, $buttonValues, $botUrl;\n    $stmt = $connection->prepare(\"SELECT * FROM `orders_list` WHERE `userid`=? AND `id`=?\");\n    $stmt->bind_param(\"ii\", $from_id, $id);\n    $stmt->execute();\n    $order = $stmt->get_result();\n    $stmt->close();\n\n    if($order->num_rows==0){\n        return null;\n    }else {\n        $order = $order->fetch_assoc();\n        $fid = $order['fileid']; \n    \t$stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=? AND `active`=1\"); \n        $stmt->bind_param(\"i\", $fid);\n        $stmt->execute();\n        $respd = $stmt->get_result();\n        $stmt->close();\n\t    $rahgozar = $order['rahgozar'];\n        $agentBought = $order['agent_bought'];\n\n    \tif($respd){\n    \t    $respd = $respd->fetch_assoc(); \n    \t    \n    \t    $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `id`=?\");\n            $stmt->bind_param(\"i\", $respd['catid']);\n            $stmt->execute();\n            $cadquery = $stmt->get_result();\n            $stmt->close();\n\n\n    \t    if($cadquery) {\n    \t        $catname = $cadquery->fetch_assoc()['title'];\n        \t    $name = $catname.\" \".$respd['title'];\n    \t    }else $name = \"$id\";\n        \t\n    \t}else $name = \"$id\";\n    \t\n        $date = jdate(\"Y-m-d H:i\",$order['date']);\n        $expire_date = jdate(\"Y-m-d H:i\",$order['expire_date']);\n        $remark = $order['remark'];\n        $uuid = $order['uuid']??\"0\";\n        $acc_link = json_decode($order['link']);\n        $protocol = $order['protocol'];\n        $token = $order['token'];\n        $server_id = $order['server_id'];\n        $inbound_id = $order['inbound_id'];\n        $link_status = $order['expire_date'] > time()  ? $buttonValues['active'] : $buttonValues['deactive'];\n        $price = $order['amount'];\n        \n    \t$stmt = $connection->prepare(\"SELECT * FROM `server_config` WHERE `id` = ?\");\n    \t$stmt->bind_param('i', $server_id);\n    \t$stmt->execute();\n    \t$serverConfig = $stmt->get_result()->fetch_assoc();\n    \t$stmt->close();\n    \t$serverType = $serverConfig['type'];\n        $panel_url = $serverConfig['panel_url'];\n        \n        $found = false;\n\n        if($serverType == \"marzban\"){\n            $info = getMarzbanUser($server_id, $remark);\n            if(isset($info->username)){\n                $found = true;\n                $enable = $info->status ==\"active\"?true:false;\n                $total = $info->data_limit;\n                $usedTraffic = $info->used_traffic;\n                \n                $leftgb = round( ($total - $usedTraffic) / 1073741824, 2) . \" GB\";\n            } else $leftgb = \"⚠️\";\n        }else{\n            $response = getJson($server_id)->obj;\n            if($response){\n                if($inbound_id == 0) {\n                    foreach($response as $row){\n                        $clients = json_decode($row->settings)->clients;\n                        if($clients[0]->id == $uuid || $clients[0]->password == $uuid) {\n                            $found = true;\n                            $total = $row->total;\n                            $up = $row->up;\n                            $down = $row->down; \n                            $enable = $row->enable;\n                            $expiryTime = $row->expiryTime;\n                            \n                            $netType = json_decode($row->streamSettings)->network;\n                            $security = json_decode($row->streamSettings)->security;\n                            \n                            $clientsStates = $row->clientStats;\n                            \n                            $inboundEmail = $clients[0]->email;\n                            $allEmails = array_column($clientsStates,'email');\n                            $clienEmailKey = array_search($inboundEmail,$allEmails);\n    \n                            $clientTotal = $clientsStates[$clienEmailKey]->total;\n                            $clientUp = $clientsStates[$clienEmailKey]->up;\n                            $clientDown = $clientsStates[$clienEmailKey]->down;\n                            $clientExpiryTime = $clientsStates[$clienEmailKey]->expiryTime;\n                                \n                            if($clientTotal != 0 && $clientTotal != null && $clientExpiryTime != 0 && $clientExpiryTime != null){\n                                $up += $clientUp;\n                                $down += $clientDown;\n                                $total = $clientTotal;\n                            }\n    \n                            break;\n                        }\n                    }\n                }else {\n                    foreach($response as $row){\n                        if($row->id == $inbound_id) {\n                            $netType = json_decode($row->streamSettings)->network;\n                            $security = json_decode($row->streamSettings)->security;\n                            \n                            $clientsStates = $row->clientStats;\n                            $clients = json_decode($row->settings)->clients;\n                            foreach($clients as $key => $client){\n                                if($client->id == $uuid || $client->password == $uuid){\n                                    $found = true;\n                                    $email = $client->email;\n                                    $emails = array_column($clientsStates,'email');\n                                    $emailKey = array_search($email,$emails);\n                                    \n                                    $total = $clientsStates[$emailKey]->total;\n                                    $up = $clientsStates[$emailKey]->up;\n                                    $enable = $clientsStates[$emailKey]->enable;\n                                    if(!$client->enable) $enable = false;\n                                    $down = $clientsStates[$emailKey]->down; \n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                $leftgb = round( ($total - $up - $down) / 1073741824, 2) . \" GB\";\n            }else $leftgb = \"⚠️\";\n        }\n        $configLinks = \"\";\n        \n        $limit = 5;\n        $count = 0;\n        foreach($acc_link as $accLink){\n            $count++;\n            if($count <= $offset) continue;\n            $configLinks .= ($botState['configLinkState'] != \"off\"?\"\\n <code>$accLink</code>\":\"\");\n            \n            if($count >= $offset + $limit) break;\n        }\n        $keyboard = array();\n        \n        $configKeys = [];\n        \n        if(count($acc_link) > $limit){\n            if($offset == 0){\n                $configKeys = [\n                    ['text'=>\"«\",'callback_data'=>\"orderDetails{$id}_\" . ($offset + $limit)]\n                    ];\n            }\n            elseif(count($acc_link) >= $offset + $limit){\n                $configKeys = [\n                    ['text'=>\"«\",'callback_data'=>\"orderDetails{$id}_\" . ($offset + $limit)],\n                    ['text'=>\"»\",'callback_data'=>\"orderDetails{$id}_\" . ($offset - $limit)]\n                    ];\n                \n            }\n            elseif($offset != 0){\n                $configKeys = [\n                    ['text'=>\"»\",'callback_data'=>\"orderDetails{$id}_\" . ($offset - $limit)]\n                    ];\n            }\n        }\n        \n        array_push($keyboard,$configKeys, [\n\t\t\t    ['text' => $name, 'callback_data' => \"wizwizch\"],\n                ['text' => $buttonValues['plan_name'], 'callback_data' => \"wizwizch\"],\n            ],\n            [\n\t\t\t    ['text' => $date, 'callback_data' => \"wizwizch\"],\n                ['text' => $buttonValues['buy_date'], 'callback_data' => \"wizwizch\"],\n            ],\n            [\n\t\t\t    ['text' => $expire_date, 'callback_data' => \"wizwizch\"],\n                ['text' => $buttonValues['expire_date'], 'callback_data' => \"wizwizch\"],\n            ],\n            [\n\t\t\t    ['text' => $leftgb, 'callback_data' => \"wizwizch\"],\n                ['text' => $buttonValues['volume_left'], 'callback_data' => \"wizwizch\"],\n\t\t\t],\n            ($serverType != \"marzban\"?\n\t\t\t[\n                ['text' => $buttonValues['selected_protocol'], 'callback_data' => \"wizwizch\"],\n            ]:[]));\n        if($found){\n            if($inbound_id == 0){\n                if($protocol == 'trojan') {\n                    if($security == \"xtls\"){\n                        if($serverType != \"marzban\"){\n                            array_push($keyboard, [\n                                ['text' => $protocol == 'trojan' ? '☑️ trojan' : 'trojan', 'callback_data' => ($botState['changeProtocolState']==\"on\"?\"changeAccProtocol{$fid}_{$id}_trojan\":\"changeProtocolIsDisable\")],\n                                ['text' => $protocol == 'vless' ? '☑️ vless' : 'vless', 'callback_data' => ($botState['changeProtocolState']==\"on\"?\"changeAccProtocol{$fid}_{$id}_vless\":\"changeProtocolIsDisable\")],\n                            ]);\n                        }\n                        \n                        $temp = array();\n                        if($price != 0 && $agentBought == true){\n                            if($botState['renewAccountState']==\"on\") $temp[] = ['text' => $buttonValues['renew_config'], 'callback_data' => \"renewAccount$id\" ];\n                            if($botState['switchLocationState']==\"on\") $temp[] = ['text' => $buttonValues['change_config_location'], 'callback_data' => \"switchLocation{$id}_{$server_id}_{$leftgb}_\".$order['expire_date']];\n                        }\n                        if(count($temp)>0) array_push($keyboard, $temp);\n                    }else{\n                        if($serverType != \"marzban\"){\n                            array_push($keyboard, [\n                                ['text' => $protocol == 'trojan' ? '☑️ trojan' : 'trojan', 'callback_data' => ($botState['changeProtocolState']==\"on\"?\"changeAccProtocol{$fid}_{$id}_trojan\":\"changeProtocolIsDisable\")],\n                                ['text' => $protocol == 'vmess' ? '☑️ vmess' : 'vmess', 'callback_data' => ($botState['changeProtocolState']==\"on\"?\"changeAccProtocol{$fid}_{$id}_vmess\":\"changeProtocolIsDisable\")],\n                                ['text' => $protocol == 'vless' ? '☑️ vless' : 'vless', 'callback_data' => ($botState['changeProtocolState']==\"on\"?\"changeAccProtocol{$fid}_{$id}_vless\":\"changeProtocolIsDisable\")],\n                            ]);\n                        }\n                        \n                        \n                        $temp = array();\n                        if($price != 0 || $agentBought == true){\n                            if($botState['renewAccountState']==\"on\") $temp[] = ['text' => $buttonValues['renew_config'], 'callback_data' => \"renewAccount$id\" ];\n                            if($botState['switchLocationState']==\"on\") $temp[] = ['text' => $buttonValues['change_config_location'], 'callback_data' => \"switchLocation{$id}_{$server_id}_{$leftgb}_\".$order['expire_date'] ];\n                        }\n                        if(count($temp)>0) array_push($keyboard, $temp);\n                    }\n                }else {\n                    if($netType == \"grpc\"){\n                        if($serverType != \"marzban\"){\n                            array_push($keyboard, [\n                                    ['text' => $protocol == 'vmess' ? '☑️ vmess' : 'vmess', 'callback_data' => ($botState['changeProtocolState']==\"on\"?\"changeAccProtocol{$fid}_{$id}_vmess\":\"changeProtocolIsDisable\")],\n                                    ['text' => $protocol == 'vless' ? '☑️ vless' : 'vless', 'callback_data' => ($botState['changeProtocolState']==\"on\"?\"changeAccProtocol{$fid}_{$id}_vless\":\"changeProtocolIsDisable\")],\n                                ]);\n                        }\n                        \n                        \n                        $temp = array();\n                        if($price != 0 || $agentBought == true){\n                            if($botState['renewAccountState']==\"on\") $temp[] = ['text' => $buttonValues['renew_config'], 'callback_data' => \"renewAccount$id\" ];\n                            if($botState['switchLocationState']==\"on\") $temp[] = ['text' => $buttonValues['change_config_location'], 'callback_data' => \"switchLocation{$id}_{$server_id}_{$leftgb}_\".$order['expire_date'] ];\n                        }\n                        if(count($temp)>0) array_push($keyboard, $temp);\n                    }\n                    elseif($netType == \"tcp\" && $security == \"xtls\"){\n                        if($serverType != \"marzban\"){\n                            array_push($keyboard, [\n                                    ['text' => $protocol == 'trojan' ? '☑️ trojan' : 'trojan', 'callback_data' => ($botState['changeProtocolState']==\"on\"?\"changeAccProtocol{$fid}_{$id}_trojan\":\"changeProtocolIsDisable\")],\n                                    ['text' => $protocol == 'vless' ? '☑️ vless' : 'vless', 'callback_data' => ($botState['changeProtocolState']==\"on\"?\"changeAccProtocol{$fid}_{$id}_vless\":\"changeProtocolIsDisable\")],\n                            ]);\n                        }\n                        \n                        $temp = array();\n                        if($price != 0 || $agentBought == true){\n                            if($botState['renewAccountState']==\"on\") $temp[] = ['text' => $buttonValues['renew_config'], 'callback_data' => \"renewAccount$id\" ];\n                            if($botState['switchLocationState']==\"on\") $temp[] = ['text' => $buttonValues['change_config_location'], 'callback_data' => \"switchLocation{$id}_{$server_id}_{$leftgb}_\".$order['expire_date'] ];\n                        }\n                        if(count($temp)>0) array_push($keyboard, $temp);\n    \n                    }\n                    else{\n                        if($serverType != \"marzban\"){\n                            array_push($keyboard,\n                                ($rahgozar == true?\n                                    [\n                                        ['text' => $protocol == 'vmess' ? '☑️ vmess' : 'vmess', 'callback_data' => ($botState['changeProtocolState']==\"on\"?\"changeAccProtocol{$fid}_{$id}_vmess\":\"changeProtocolIsDisable\")],\n                                        ['text' => $protocol == 'vless' ? '☑️ vless' : 'vless', 'callback_data' => ($botState['changeProtocolState']==\"on\"?\"changeAccProtocol{$fid}_{$id}_vless\":\"changeProtocolIsDisable\")]\n                                    ]:\n                                    [\n                                        ['text' => $protocol == 'trojan' ? '☑️ trojan' : 'trojan', 'callback_data' => ($botState['changeProtocolState']==\"on\"?\"changeAccProtocol{$fid}_{$id}_trojan\":\"changeProtocolIsDisable\")],\n                                        ['text' => $protocol == 'vmess' ? '☑️ vmess' : 'vmess', 'callback_data' => ($botState['changeProtocolState']==\"on\"?\"changeAccProtocol{$fid}_{$id}_vmess\":\"changeProtocolIsDisable\")],\n                                        ['text' => $protocol == 'vless' ? '☑️ vless' : 'vless', 'callback_data' => ($botState['changeProtocolState']==\"on\"?\"changeAccProtocol{$fid}_{$id}_vless\":\"changeProtocolIsDisable\")]\n                                    ]\n                                )\n                            );\n                        }\n                        \n                        $temp = array();\n                        if($price != 0 || $agentBought == true){\n                            if($botState['renewAccountState']==\"on\") $temp[] = ['text' => $buttonValues['renew_config'], 'callback_data' => \"renewAccount$id\" ];\n                            if($botState['switchLocationState']==\"on\" && $rahgozar != true) $temp[] = ['text' => $buttonValues['change_config_location'], 'callback_data' => \"switchLocation{$id}_{$server_id}_{$leftgb}_\".$order['expire_date'] ];\n                        }\n                        if(count($temp)>0) array_push($keyboard, $temp);\n    \n                    }\n                }\n            }else{\n                if($serverType != \"marzban\"){\n                    array_push($keyboard, [\n                            ['text' => \" $protocol ☑️\", 'callback_data' => \"wizwizch\"],\n                        ]);\n                }\n                \n                $temp = array();\n                if($price != 0 || $agentBought == true){\n                    if($botState['renewAccountState']==\"on\") $temp[] = ['text' => $buttonValues['renew_config'], 'callback_data' => \"renewAccount$id\" ];\n                    if($botState['switchLocationState']==\"on\" && $rahgozar != true) $temp[] = ['text' => $buttonValues['change_config_location'], 'callback_data' => \"switchLocation{$id}_{$server_id}_{$leftgb}_\".$order['expire_date'] ];\n                }\n                if(count($temp)>0) array_push($keyboard, $temp);\n    \n            }\n            $enable = $enable == true? $buttonValues['active']:$buttonValues['deactive'];\n        }else $enable = $mainValues['config_doesnt_exist'];\n\n\n        $stmt= $connection->prepare(\"SELECT * FROM `server_info` WHERE `id`=?\");\n        $stmt->bind_param(\"i\", $server_id);\n        $stmt->execute();\n        $server_info = $stmt->get_result()->fetch_assoc();\n        $stmt->close();\n        \n        if($serverType == \"marzban\") $subLink = $botState['subLinkState'] == \"on\"?\"<code>\" . $panel_url . \"/sub/\" . $token . \"</code>\":\"\";\n        else $subLink = $botState['subLinkState']==\"on\"?\"<code>\" . $botUrl . \"settings/subLink.php?token=\" . $token . \"</code>\":\"\";\n\n        $msg = str_replace(['STATE', 'NAME','CONNECT-LINK', 'SUB-LINK'], [$enable, $remark, $configLinks, $subLink], $mainValues['config_details_message']);\n        \n        \n        if($found){\n            $extrakey = [];\n            if($botState['increaseVolumeState']==\"on\" && ($price != 0 || $agentBought == true)) $extrakey[] = ['text' => $buttonValues['increase_config_volume'], 'callback_data' => \"increaseAVolume{$id}\"];\n            if($botState['increaseTimeState']==\"on\" && ($price != 0 || $agentBought == true)) $extrakey[] = ['text' => $buttonValues['increase_config_days'], 'callback_data' => \"increaseADay{$id}\"];\n            $keyboard[] = $extrakey;\n            \n             \n            if($botState['renewConfigLinkState'] == \"on\" && $botState['updateConfigLinkState'] == \"on\") $keyboard[] = [['text'=>$buttonValues['renew_connection_link'],'callback_data'=>'changAccountConnectionLink' . $id],['text'=>$buttonValues['update_config_connection'],'callback_data'=>'updateConfigConnectionLink' . $id]];\n            elseif($botState['renewConfigLinkState'] == \"on\") $keyboard[] = [['text'=>$buttonValues['renew_connection_link'],'callback_data'=>'changAccountConnectionLink' . $id]];\n            elseif($botState['updateConfigLinkState'] == \"on\") $keyboard[] = [['text'=>$buttonValues['update_config_connection'],'callback_data'=>'updateConfigConnectionLink' . $id]];\n            \n            $temp = [];\n            if($botState['qrConfigState'] == \"on\") $temp[] = ['text'=>$buttonValues['qr_config'],'callback_data'=>\"showQrConfig\" . $id];\n            if($botState['qrSubState'] == \"on\") $temp[] = ['text'=>$buttonValues['qr_sub'],'callback_data'=>\"showQrSub\" . $id];\n            array_push($keyboard, $temp);\n            \n        }\n        $keyboard[] = [['text' => $buttonValues['delete_config'], 'callback_data' => \"deleteMyConfig\" . $id]];\n\n        $keyboard[] = [['text' => $buttonValues['back_button'], 'callback_data' => ($agentBought == true?\"agentConfigsList\":\"mySubscriptions\")]];\n        return [\"keyboard\"=>json_encode([\n                    'inline_keyboard' => $keyboard\n                ]),\n                \"msg\"=>$msg];\n    }\n}\n\nfunction RandomString($count = 9, $type = \"all\") {\n    if($type == \"all\") $characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789';\n    elseif($type == \"small\") $characters = 'abcdef123456789';\n    elseif($type == \"domain\") $characters = 'abcdefghijklmnopqrstuvwxyz';\n    \n    $randstring = null;\n    for ($i = 0; $i < $count; $i++) {\n        $randstring .= $characters[\n            rand(0, strlen($characters)-1)\n        ];\n    }\n    return $randstring;\n}\nfunction generateUID(){\n    $randomString = openssl_random_pseudo_bytes(16);\n    $time_low = bin2hex(substr($randomString, 0, 4));\n    $time_mid = bin2hex(substr($randomString, 4, 2));\n    $time_hi_and_version = bin2hex(substr($randomString, 6, 2));\n    $clock_seq_hi_and_reserved = bin2hex(substr($randomString, 8, 2));\n    $node = bin2hex(substr($randomString, 10, 6));\n\n    $time_hi_and_version = hexdec($time_hi_and_version);\n    $time_hi_and_version = $time_hi_and_version >> 4;\n    $time_hi_and_version = $time_hi_and_version | 0x4000;\n\n    $clock_seq_hi_and_reserved = hexdec($clock_seq_hi_and_reserved);\n    $clock_seq_hi_and_reserved = $clock_seq_hi_and_reserved >> 2;\n    $clock_seq_hi_and_reserved = $clock_seq_hi_and_reserved | 0x8000;\n\n    return sprintf('%08s-%04s-%04x-%04x-%012s', $time_low, $time_mid, $time_hi_and_version, $clock_seq_hi_and_reserved, $node);\n}\nfunction checkStep($table){\n    global $connection;\n    \n    if($table == \"server_plans\") $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `active` = 0\");\n    if($table == \"server_categories\") $stmt = $connection->prepare(\"SELECT * FROM `server_categories` WHERE `active` = 0\");\n    \n    $stmt->execute();\n    $res = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    return $res['step']; \n}\nfunction setUser($value = 'none', $field = 'step'){\n    global $connection, $from_id, $username, $first_name;\n\n    $stmt = $connection->prepare(\"SELECT * FROM `users` WHERE `userid`=?\");\n    $stmt->bind_param(\"i\", $from_id);\n    $stmt->execute();\n    $uinfo = $stmt->get_result();\n    $stmt->close();\n\n    \n    if($uinfo->num_rows == 0){\n        $stmt = $connection->prepare(\"INSERT INTO `users` (`userid`, `name`, `username`, `refcode`, `wallet`, `date`)\n                            VALUES (?,?,?, 0,0,?)\");\n        $time = time();\n        $stmt->bind_param(\"issi\", $from_id, $first_name, $username, $time);\n        $stmt->execute();\n        $stmt->close();\n    }\n    \n    if($field == \"wallet\") $stmt = $connection->prepare(\"UPDATE `users` SET `wallet` = ? WHERE `userid` = ?\");\n    elseif($field == \"phone\") $stmt = $connection->prepare(\"UPDATE `users` SET `phone` = ? WHERE `userid` = ?\");\n    elseif($field == \"refered_by\") $stmt = $connection->prepare(\"UPDATE `users` SET `refered_by` = ? WHERE `userid` = ?\");\n    elseif($field == \"step\") $stmt = $connection->prepare(\"UPDATE `users` SET `step` = ? WHERE `userid` = ?\");\n    elseif($field == \"freetrial\") $stmt = $connection->prepare(\"UPDATE `users` SET `freetrial` = ? WHERE `userid` = ?\");\n    elseif($field == \"isAdmin\") $stmt = $connection->prepare(\"UPDATE `users` SET `isAdmin` = ? WHERE `userid` = ?\");\n    elseif($field == \"first_start\") $stmt = $connection->prepare(\"UPDATE `users` SET `first_start` = ? WHERE `userid` = ?\");\n    elseif($field == \"temp\") $stmt = $connection->prepare(\"UPDATE `users` SET `temp` = ? WHERE `userid` = ?\");\n    elseif($field == \"is_agent\") $stmt = $connection->prepare(\"UPDATE `users` SET `is_agent` = ? WHERE `userid` = ?\");\n    elseif($field == \"discount_percent\") $stmt = $connection->prepare(\"UPDATE `users` SET `discount_percent` = ? WHERE `userid` = ?\");\n    elseif($field == \"agent_date\") $stmt = $connection->prepare(\"UPDATE `users` SET `agent_date` = ? WHERE `userid` = ?\");\n    elseif($field == \"spam_info\") $stmt = $connection->prepare(\"UPDATE `users` SET `spam_info` = ? WHERE `userid` = ?\");\n    \n    $stmt->bind_param(\"si\", $value, $from_id);\n    $stmt->execute();\n    $stmt->close();\n}\nfunction generateRandomString($length, $protocol) {\n    return ($protocol == 'trojan') ? substr(md5(time()),5,15) : generateUID();\n}\nfunction addBorderImage($add){\n    $border = 30;\n    $im = ImageCreateFromPNG($add);\n    $width = ImageSx($im);\n    $height = ImageSy($im);\n    $img_adj_width = $width + 2 * $border;\n    $img_adj_height = $height + 2 * $border;\n    $newimage = imagecreatetruecolor($img_adj_width, $img_adj_height);\n    $border_color = imagecolorallocate($newimage, 255, 255, 255);\n    imagefilledrectangle($newimage, 0, 0, $img_adj_width, $img_adj_height, $border_color);\n    imageCopyResized($newimage, $im, $border, $border, 0, 0, $width, $height, $width, $height);\n    ImagePNG($newimage, $add, 5);\n}\nfunction sumerize($amount){\n    $gb = $amount / (1024 * 1024 * 1024);\n    if($gb > 1){\n      return round($gb,2) . \" گیگابایت\"; \n    }\n    else{\n        $gb *= 1024;\n        return round($gb,2) . \" مگابایت\";\n    }\n\n}\n\nfunction sumerize2($amount){\n    $gb = $amount / (1024 * 1024 * 1024);\n    return round($gb,2);\n}\nfunction deleteClient($server_id, $inbound_id, $uuid, $delete = 0){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $panel_url = $server_info['panel_url'];\n    $serverType = $server_info['type'];\n\n    $response = getJson($server_id);\n    if(!$response) return null;\n    $response = $response->obj;\n    $old_data = []; $oldclientstat = [];\n    foreach($response as $row){\n        if($row->id == $inbound_id) {\n            $settings = json_decode($row->settings);\n            $clients = $settings->clients;\n\n            $clientsStates = $row->clientStats;\n            foreach($clients as $key => $client){\n                if($client->id == $uuid || $client->password == $uuid){\n                    $old_data = $client;\n                    unset($clients[$key]);\n                    $email = $client->email;\n                    $emails = array_column($clientsStates,'email');\n                    $emailKey = array_search($email,$emails);\n                    \n                    $total = $clientsStates[$emailKey]->total;\n                    $up = $clientsStates[$emailKey]->up;\n                    $enable = $clientsStates[$emailKey]->enable;\n                    $down = $clientsStates[$emailKey]->down; \n                    break;\n                }\n            }\n        }\n    }\n    $settings->clients = $clients;\n    $settings = json_encode($settings);\n\t\n    if($delete == 1){\n        $dataArr = array('up' => $row->up,'down' => $row->down,'total' => $row->total,'remark' => $row->remark,'enable' => 'true',\n        'expiryTime' => $row->expiryTime, 'listen' => '','port' => $row->port,'protocol' => $row->protocol,'settings' => $settings,\n        'streamSettings' => $row->streamSettings, 'sniffing' => $row->sniffing);\n\n        $serverName = $server_info['username'];\n        $serverPass = $server_info['password'];\n        \n        $loginUrl = $panel_url . '/login';\n        \n        $postFields = array(\n            \"username\" => $serverName,\n            \"password\" => $serverPass\n            );\n            \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL, $loginUrl);\n        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($curl, CURLOPT_POST, 1);\n        curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n        curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n        curl_setopt($curl, CURLOPT_HEADER, 1);\n        $response = curl_exec($curl);\n        \n        $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n        $header = substr($response, 0, $header_size);\n        $body = substr($response, $header_size);\n        preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n        $cookies = array();\n        foreach($matches[1] as $item) {\n            parse_str($item, $cookie);\n            $cookies = array_merge($cookies, $cookie);\n        }\n        \n        $loginResponse = json_decode($body,true);\n        \n        if(!$loginResponse['success']){\n            curl_close($curl);\n            return $loginResponse;\n        }\n        \n        if($serverType == \"sanaei\" || $serverType == \"alireza\"){\n            if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/\" . $inbound_id . \"/delClient/\" . rawurlencode($uuid);\n            elseif($serverType == \"alireza\") $url = \"$panel_url/xui/inbound/\" . $inbound_id . \"/delClient/\" . rawurlencode($uuid);\n\n            curl_setopt_array($curl, array(\n                CURLOPT_URL => $url,\n                CURLOPT_RETURNTRANSFER => true,\n                CURLOPT_ENCODING => '',\n                CURLOPT_MAXREDIRS => 10,\n                CURLOPT_CONNECTTIMEOUT => 15,\n                CURLOPT_TIMEOUT => 15,\n                CURLOPT_FOLLOWLOCATION => true,\n                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n                CURLOPT_CUSTOMREQUEST => 'POST',\n                CURLOPT_POSTFIELDS => $dataArr,\n                CURLOPT_SSL_VERIFYHOST => false,\n                CURLOPT_SSL_VERIFYPEER => false,\n                CURLOPT_HEADER => false,\n                CURLOPT_HTTPHEADER => array(\n                    'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n                    'Accept:  application/json, text/plain, */*',\n                    'Accept-Language:  en-US,en;q=0.5',\n                    'Accept-Encoding:  gzip, deflate',\n                    'X-Requested-With:  XMLHttpRequest',\n                    'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n                )\n            ));\n        }else{\n            curl_setopt_array($curl, array(\n                CURLOPT_URL => \"$panel_url/xui/inbound/update/$inbound_id\",\n                CURLOPT_RETURNTRANSFER => true,\n                CURLOPT_ENCODING => '',\n                CURLOPT_MAXREDIRS => 10,\n                CURLOPT_CONNECTTIMEOUT => 15,  \n                CURLOPT_TIMEOUT => 15,\n                CURLOPT_FOLLOWLOCATION => true,\n                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n                CURLOPT_CUSTOMREQUEST => 'POST',\n                CURLOPT_POSTFIELDS => $dataArr,\n                CURLOPT_HEADER => false,\n                CURLOPT_HTTPHEADER => array(\n                    'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n                    'Accept:  application/json, text/plain, */*',\n                    'Accept-Language:  en-US,en;q=0.5',\n                    'Accept-Encoding:  gzip, deflate',\n                    'X-Requested-With:  XMLHttpRequest',\n                    'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n                )\n            ));\n        }\n        \n        $response = curl_exec($curl);\n        curl_close($curl);\n    }\t\n    return ['id' => $old_data->id,'expiryTime' => $old_data->expiryTime, 'limitIp' => $old_data->limitIp, 'flow' => $old_data->flow, 'total' => $total, 'up' => $up, 'down' => $down,];\n\n}\nfunction editInboundRemark($server_id, $uuid, $newRemark){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n    $serverType = $server_info['type'];\n\n    $response = getJson($server_id);\n    if(!$response) return null;\n    $response = $response->obj;\n    foreach($response as $row){\n        $clients = json_decode($row->settings)->clients;\n        if($clients[0]->id == $uuid || $clients[0]->password == $uuid) {\n            $inbound_id = $row->id;\n            $total = $row->total;\n            $up = $row->up;\n            $down = $row->down;\n            $expiryTime = $row->expiryTime;\n            $port = $row->port;\n            $netType = json_decode($row->streamSettings)->network;\n            break;\n        }\n    }\n\n\n    $dataArr = array('up' => $up,'down' => $down,'total' => $total,'remark' => $newRemark,'enable' => 'true',\n        'expiryTime' => $row->expiryTime, 'listen' => '','port' => $row->port,'protocol' => $row->protocol,'settings' => $row->settings,\n        'streamSettings' => $row->streamSettings, 'sniffing' => $row->sniffing);\n\n\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    \n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n        \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\n\n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n    \n    $loginResponse = json_decode($body,true);\n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse;\n    }\n\n    if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/update/$inbound_id\";\n    else $url = \"$panel_url/xui/inbound/update/$inbound_id\";\n\n    curl_setopt_array($curl, array(\n        CURLOPT_URL => $url,\n        CURLOPT_RETURNTRANSFER => true,\n        CURLOPT_ENCODING => '',\n        CURLOPT_MAXREDIRS => 10,\n        CURLOPT_CONNECTTIMEOUT => 15,      // timeout on connect\n        CURLOPT_TIMEOUT => 15,\n        CURLOPT_FOLLOWLOCATION => true,\n        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n        CURLOPT_CUSTOMREQUEST => 'POST',\n        CURLOPT_POSTFIELDS => $dataArr,\n        CURLOPT_HEADER => false,\n        CURLOPT_HTTPHEADER => array(\n            'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n            'Accept:  application/json, text/plain, */*',\n            'Accept-Language:  en-US,en;q=0.5',\n            'Accept-Encoding:  gzip, deflate',\n            'X-Requested-With:  XMLHttpRequest',\n            'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n        )\n    ));\n\n    $response = curl_exec($curl);\n    curl_close($curl);\n    return $response = json_decode($response);\n}\nfunction editInboundTraffic($server_id, $uuid, $volume, $days, $editType = null){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n    $serverType = $server_info['type'];\n\n    $response = getJson($server_id);\n    if(!$response) return null;\n    $response = $response->obj;\n    foreach($response as $row){\n        $clients = json_decode($row->settings)->clients;\n        if($clients[0]->id == $uuid || $clients[0]->password == $uuid) {\n            $inbound_id = $row->id;\n            $total = $row->total;\n            $up = $row->up;\n            $down = $row->down;\n            $expiryTime = $row->expiryTime;\n            $port = $row->port;\n            $netType = json_decode($row->streamSettings)->network;\n            \n            $email = $clients[0]->email;\n\n            break;\n        }\n    }\n    if($days != 0) {\n        $now_microdate = floor(microtime(true) * 1000);\n        $extend_date = (864000 * $days * 100);\n        if($editType == \"renew\") $expire_microdate = $now_microdate + $extend_date;\n        else $expire_microdate = ($now_microdate > $expiryTime) ? $now_microdate + $extend_date : $expiryTime + $extend_date;\n    }\n\n    if($volume != 0){\n        $leftGB = $total - $up - $down;\n        $extend_volume = floor($volume * 1073741824);\n        if($editType == \"renew\"){\n            $total = $extend_volume;\n            $up = 0;\n            $down = 0;\n            $volume = $extend_volume;\n            if($serverType == \"sanaei\" || $serverType == \"alireza\") resetClientTraffic($server_id, $email, $inbound_id);\n            else resetClientTraffic($server_id, $email);\n        }\n        else $total = ($leftGB > 0) ? $total + $extend_volume : $extend_volume;\n    }\n\n    $dataArr = array('up' => $up,'down' => $down,'total' => is_null($total) ? $row->total : $total,'remark' => $row->remark,'enable' => 'true',\n        'expiryTime' => is_null($expire_microdate) ? $row->expiryTime : $expire_microdate, 'listen' => '','port' => $row->port,'protocol' => $row->protocol,'settings' => $row->settings,\n        'streamSettings' => $row->streamSettings, 'sniffing' => $row->sniffing);\n\n\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    \n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n        \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\n    \n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n\n    $loginResponse = json_decode($body,true);\n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse;\n    }\n\n    if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/update/$inbound_id\";\n    else $url = \"$panel_url/xui/inbound/update/$inbound_id\";\n\n    $phost = str_ireplace('https://','',str_ireplace('http://','',$panel_url));\n    curl_setopt_array($curl, array(\n        CURLOPT_URL => $url,\n        CURLOPT_RETURNTRANSFER => true,\n        CURLOPT_ENCODING => '',\n        CURLOPT_MAXREDIRS => 10,\n        CURLOPT_CONNECTTIMEOUT => 15,      // timeout on connect\n        CURLOPT_TIMEOUT => 15,\n        CURLOPT_FOLLOWLOCATION => true,\n        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n        CURLOPT_CUSTOMREQUEST => 'POST',\n        CURLOPT_POSTFIELDS => $dataArr,\n        CURLOPT_HEADER => false,\n        CURLOPT_HTTPHEADER => array(\n            'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n            'Accept:  application/json, text/plain, */*',\n            'Accept-Language:  en-US,en;q=0.5',\n            'Accept-Encoding:  gzip, deflate',\n            'X-Requested-With:  XMLHttpRequest',\n            'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n        )\n    ));\n\n    $response = curl_exec($curl);\n    curl_close($curl);\n    resetIpLog($server_id, $email);\n    return $response = json_decode($response);\n}\nfunction changeInboundState($server_id, $uuid){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n    $serverType = $server_info['type'];\n\n    $response = getJson($server_id);\n    if(!$response) return null;\n    $response = $response->obj;\n    foreach($response as $row){\n        $settings = json_decode($row->settings, true);\n        $clients = $settings['clients'];\n        if($clients[0]['id'] == $uuid || $clients[0]['password'] == $uuid) {\n            $inbound_id = $row->id;\n            $enable = $row->enable;\n            break;\n        }\n    }\n    \n    if(!isset($settings['clients'][0]['subId']) && ($serverType == \"sanaei\" || $serverType == \"alireza\")) $settings['clients'][0]['subId'] = RandomString(16);\n    if(!isset($settings['clients'][0]['enable']) && ($serverType == \"sanaei\" || $serverType == \"alireza\")) $settings['clients'][0]['enable'] = true;\n\n    $editedClient = $settings['clients'][$client_key];\n    $settings['clients'] = array_values($settings['clients']);\n    $settings = json_encode($settings,488);\n\n    $newEnable = $enable == true?false:true;\n    \n    $dataArr = array('up' => $row->up,'down' => $row->down,'total' => $row->total,'remark' => $row->remark,'enable' => $newEnable,\n        'expiryTime' => $row->expiryTime, 'listen' => '','port' => $row->port,'protocol' => $row->protocol,'settings' => $settings,\n        'streamSettings' => $row->streamSettings, 'sniffing' => $row->sniffing);\n\n\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    \n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n        \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\n    \n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n\n\n    $loginResponse = json_decode($body,true);\n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse;\n    }\n\n    if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/update/$inbound_id\";\n    else $url = \"$panel_url/xui/inbound/update/$inbound_id\";\n\n    $phost = str_ireplace('https://','',str_ireplace('http://','',$panel_url));\n    curl_setopt_array($curl, array(\n        CURLOPT_URL => $url,\n        CURLOPT_RETURNTRANSFER => true,\n        CURLOPT_ENCODING => '',\n        CURLOPT_MAXREDIRS => 10,\n        CURLOPT_CONNECTTIMEOUT => 15,      // timeout on connect\n        CURLOPT_TIMEOUT => 15,\n        CURLOPT_FOLLOWLOCATION => true,\n        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n        CURLOPT_CUSTOMREQUEST => 'POST',\n        CURLOPT_POSTFIELDS => $dataArr,\n        CURLOPT_HEADER => false,\n        CURLOPT_HTTPHEADER => array(\n            'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n            'Accept:  application/json, text/plain, */*',\n            'Accept-Language:  en-US,en;q=0.5',\n            'Accept-Encoding:  gzip, deflate',\n            'X-Requested-With:  XMLHttpRequest',\n            'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n        )\n    ));\n\n    $response = curl_exec($curl);\n    curl_close($curl);\n\n    $response = json_decode($response);\n    return $response;\n\n}\nfunction renewInboundUuid($server_id, $uuid){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n    $serverType = $server_info['type'];\n\n    $response = getJson($server_id);\n    if(!$response) return null;\n    $response = $response->obj;\n    foreach($response as $row){\n        $settings = json_decode($row->settings, true);\n        $clients = $settings['clients'];\n        if($clients[0]['id'] == $uuid || $clients[0]['password'] == $uuid) {\n            $inbound_id = $row->id;\n            $total = $row->total;\n            $up = $row->up;\n            $down = $row->down;\n            $expiryTime = $row->expiryTime;\n            $port = $row->port;\n            $protocol = $row->protocol;\n            $netType = json_decode($row->streamSettings)->network;\n            break;\n        }\n    }\n    \n    $newUuid = generateRandomString(42,$protocol); \n    if($protocol == \"trojan\") $settings['clients'][0]['password'] = $newUuid;\n    else $settings['clients'][0]['id'] = $newUuid;\n    if(!isset($settings['clients'][0]['subId']) && ($serverType == \"sanaei\" || $serverType == \"alireza\")) $settings['clients'][0]['subId'] = RandomString(16);\n    if(!isset($settings['clients'][0]['enable']) && ($serverType == \"sanaei\" || $serverType == \"alireza\")) $settings['clients'][0]['enable'] = true;\n\n    $editedClient = $settings['clients'][$client_key];\n    $settings['clients'] = array_values($settings['clients']);\n    $settings = json_encode($settings,488);\n\n\n    $dataArr = array('up' => $row->up,'down' => $row->down,'total' => $row->total,'remark' => $row->remark,'enable' => 'true',\n        'expiryTime' => $row->expiryTime, 'listen' => '','port' => $row->port,'protocol' => $row->protocol,'settings' => $settings,\n        'streamSettings' => $row->streamSettings, 'sniffing' => $row->sniffing);\n\n\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    \n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n        \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\n\n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n\n    $loginResponse = json_decode($body,true);\n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse;\n    }\n\n    if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/update/$inbound_id\";\n    else $url = \"$panel_url/xui/inbound/update/$inbound_id\";\n\n    $phost = str_ireplace('https://','',str_ireplace('http://','',$panel_url));\n    curl_setopt_array($curl, array(\n        CURLOPT_URL => $url,\n        CURLOPT_RETURNTRANSFER => true,\n        CURLOPT_ENCODING => '',\n        CURLOPT_MAXREDIRS => 10,\n        CURLOPT_CONNECTTIMEOUT => 15,      // timeout on connect\n        CURLOPT_TIMEOUT => 15,\n        CURLOPT_FOLLOWLOCATION => true,\n        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n        CURLOPT_CUSTOMREQUEST => 'POST',\n        CURLOPT_POSTFIELDS => $dataArr,\n        CURLOPT_HEADER => false,\n        CURLOPT_HTTPHEADER => array(\n            'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n            'Accept:  application/json, text/plain, */*',\n            'Accept-Language:  en-US,en;q=0.5',\n            'Accept-Encoding:  gzip, deflate',\n            'X-Requested-With:  XMLHttpRequest',\n            'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n        )\n    ));\n\n    $response = curl_exec($curl);\n    curl_close($curl);\n    $response = json_decode($response);\n    $response->newUuid = $newUuid;\n    return $response;\n\n}\nfunction changeClientState($server_id, $inbound_id, $uuid){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $panel_url = $server_info['panel_url'];\n    $serverType = $server_info['type'];\n\n    $response = getJson($server_id);\n    if(!$response) return null;\n    $response = $response->obj;\n    $client_key = -1;\n    foreach($response as $row){\n        if($row->id == $inbound_id) {\n            $settings = json_decode($row->settings, true);\n            $clients = $settings['clients'];\n            \n            foreach($clients as $key => $client){\n                if($client['id'] == $uuid || $client['password'] == $uuid){\n                    $client_key = $key;\n                    $enable = $client['enable'];\n                    break;\n                }\n            }\n        }\n    }\n    if($client_key == -1) return null;\n    \n    if(!isset($settings['clients'][$client_key]['subId']) && ($serverType == \"sanaei\" || $serverType == \"alireza\")) $settings['clients'][$client_key]['subId'] = RandomString(16);\n    $settings['clients'][$client_key]['enable'] = $enable == true?false:true;\n\n    $editedClient = $settings['clients'][$client_key];\n    $settings['clients'] = array_values($settings['clients']);\n    $settings = json_encode($settings,488);\n    $dataArr = array('up' => $row->up,'down' => $row->down,'total' => $row->total,'remark' => $row->remark,'enable' => 'true',\n        'expiryTime' => $row->expiryTime, 'listen' => '','port' => $row->port,'protocol' => $row->protocol,'settings' => $settings,\n        'streamSettings' => $row->streamSettings, 'sniffing' => $row->sniffing);\n\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    \n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n        \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\n\n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n\n    $loginResponse = json_decode($body,true);\n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse;\n    }\n\n    if($serverType == \"sanaei\" || $serverType == \"alireza\"){\n        \n        $newSetting = array();\n        $newSetting['clients'][] = $editedClient;\n        $newSetting = json_encode($newSetting);\n\n        $dataArr = array(\n            \"id\"=>$inbound_id,\n            \"settings\" => $newSetting\n            );\n            \n        if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/updateClient/\" . rawurlencode($uuid);\n        else $url = \"$panel_url/xui/inbound/updateClient/\" . rawurlencode($uuid);\n        \n        curl_setopt_array($curl, array(\n            CURLOPT_URL => $url,\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_ENCODING => '',\n            CURLOPT_MAXREDIRS => 10,\n            CURLOPT_CONNECTTIMEOUT => 15,\n            CURLOPT_TIMEOUT => 15,\n            CURLOPT_FOLLOWLOCATION => true,\n            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n            CURLOPT_CUSTOMREQUEST => 'POST',\n            CURLOPT_POSTFIELDS => $dataArr,\n            CURLOPT_SSL_VERIFYHOST => false,\n            CURLOPT_SSL_VERIFYPEER => false,\n            CURLOPT_HEADER => false,\n            CURLOPT_HTTPHEADER => array(\n                'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n                'Accept:  application/json, text/plain, */*',\n                'Accept-Language:  en-US,en;q=0.5',\n                'Accept-Encoding:  gzip, deflate',\n                'X-Requested-With:  XMLHttpRequest',\n                'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n            )\n        ));\n    }else{\n        curl_setopt_array($curl, array(\n            CURLOPT_URL => \"$panel_url/xui/inbound/update/$inbound_id\",\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_ENCODING => '',\n            CURLOPT_MAXREDIRS => 10,\n            CURLOPT_CONNECTTIMEOUT => 15,\n            CURLOPT_TIMEOUT => 15,\n            CURLOPT_FOLLOWLOCATION => true,\n            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n            CURLOPT_CUSTOMREQUEST => 'POST',\n            CURLOPT_POSTFIELDS => $dataArr,\n            CURLOPT_HEADER => false,\n            CURLOPT_HTTPHEADER => array(\n                'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n                'Accept:  application/json, text/plain, */*',\n                'Accept-Language:  en-US,en;q=0.5',\n                'Accept-Encoding:  gzip, deflate',\n                'X-Requested-With:  XMLHttpRequest',\n                'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n            )\n        ));\n    }\n\n    $response = curl_exec($curl);\n    $response = json_decode($response);\n    curl_close($curl);\n    return $response;\n\n}\nfunction renewClientUuid($server_id, $inbound_id, $uuid){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $panel_url = $server_info['panel_url'];\n    $serverType = $server_info['type'];\n\n    $response = getJson($server_id);\n    if(!$response) return null;\n    $response = $response->obj;\n    $client_key = -1;\n    foreach($response as $row){\n        if($row->id == $inbound_id) {\n            $settings = json_decode($row->settings, true);\n            $clients = $settings['clients'];\n            \n            foreach($clients as $key => $client){\n                if($client['id'] == $uuid || $client['password'] == $uuid){\n                    $protocol = $row->protocol;\n                    $client_key = $key;\n                    break;\n                }\n            }\n        }\n    }\n    if($client_key == -1) return null;\n    \n    $newUuid = generateRandomString(42,$protocol); \n    if($protocol == \"trojan\") $settings['clients'][$client_key]['password'] = $newUuid;\n    else $settings['clients'][$client_key]['id'] = $newUuid;\n    if(!isset($settings['clients'][$client_key]['subId']) && ($serverType == \"sanaei\" || $serverType == \"alireza\")) $settings['clients'][$client_key]['subId'] = RandomString(16);\n    if(!isset($settings['clients'][$client_key]['enable']) && ($serverType == \"sanaei\" || $serverType == \"alireza\")) $settings['clients'][$client_key]['enable'] = true;\n\n    $editedClient = $settings['clients'][$client_key];\n    $settings['clients'] = array_values($settings['clients']);\n    $settings = json_encode($settings,488);\n    $dataArr = array('up' => $row->up,'down' => $row->down,'total' => $row->total,'remark' => $row->remark,'enable' => 'true',\n        'expiryTime' => $row->expiryTime, 'listen' => '','port' => $row->port,'protocol' => $row->protocol,'settings' => $settings,\n        'streamSettings' => $row->streamSettings, 'sniffing' => $row->sniffing);\n\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    \n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n        \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\n\n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n\n    $loginResponse = json_decode($body,true);\n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse;\n    }\n\n    if($serverType == \"sanaei\" || $serverType == \"alireza\"){\n        \n        $newSetting = array();\n        $newSetting['clients'][] = $editedClient;\n        $newSetting = json_encode($newSetting);\n\n        $dataArr = array(\n            \"id\"=>$inbound_id,\n            \"settings\" => $newSetting\n            );\n            \n        if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/updateClient/\" . rawurlencode($uuid);\n        else $url = \"$panel_url/xui/inbound/updateClient/\" . rawurlencode($uuid);\n        \n        curl_setopt_array($curl, array(\n            CURLOPT_URL => $url,\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_ENCODING => '',\n            CURLOPT_MAXREDIRS => 10,\n            CURLOPT_CONNECTTIMEOUT => 15,\n            CURLOPT_TIMEOUT => 15,\n            CURLOPT_FOLLOWLOCATION => true,\n            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n            CURLOPT_CUSTOMREQUEST => 'POST',\n            CURLOPT_POSTFIELDS => $dataArr,\n            CURLOPT_SSL_VERIFYHOST => false,\n            CURLOPT_SSL_VERIFYPEER => false,\n            CURLOPT_HEADER => false,\n            CURLOPT_HTTPHEADER => array(\n                'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n                'Accept:  application/json, text/plain, */*',\n                'Accept-Language:  en-US,en;q=0.5',\n                'Accept-Encoding:  gzip, deflate',\n                'X-Requested-With:  XMLHttpRequest',\n                'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n            )\n        ));\n    }else{\n        curl_setopt_array($curl, array(\n            CURLOPT_URL => \"$panel_url/xui/inbound/update/$inbound_id\",\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_ENCODING => '',\n            CURLOPT_MAXREDIRS => 10,\n            CURLOPT_CONNECTTIMEOUT => 15,\n            CURLOPT_TIMEOUT => 15,\n            CURLOPT_FOLLOWLOCATION => true,\n            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n            CURLOPT_CUSTOMREQUEST => 'POST',\n            CURLOPT_POSTFIELDS => $dataArr,\n            CURLOPT_HEADER => false,\n            CURLOPT_HTTPHEADER => array(\n                'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n                'Accept:  application/json, text/plain, */*',\n                'Accept-Language:  en-US,en;q=0.5',\n                'Accept-Encoding:  gzip, deflate',\n                'X-Requested-With:  XMLHttpRequest',\n                'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n            )\n        ));\n    }\n\n    $response = curl_exec($curl);\n    $response = json_decode($response);\n    $response->newUuid = $newUuid;\n\n    curl_close($curl);\n    return $response;\n\n}\nfunction editClientRemark($server_id, $inbound_id, $uuid, $newRemark){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $panel_url = $server_info['panel_url'];\n    $serverType = $server_info['type'];\n\n    $response = getJson($server_id);\n    if(!$response) return null;\n    $response = $response->obj;\n    $client_key = 0;\n    foreach($response as $row){\n        if($row->id == $inbound_id) {\n            $settings = json_decode($row->settings, true);\n            $clients = $settings['clients'];\n            \n            $clientsStates = $row->clientStats;\n            foreach($clients as $key => $client){\n                if($client['id'] == $uuid || $client['password'] == $uuid){\n                    $client_key = $key;\n                    $email = $client['email'];\n                    $emails = array_column($clientsStates,'email');\n                    $emailKey = array_search($email,$emails);\n                    \n                    $total = $clientsStates[$emailKey]->total;\n                    $up = $clientsStates[$emailKey]->up;\n                    $enable = $clientsStates[$emailKey]->enable;\n                    $down = $clientsStates[$emailKey]->down; \n                    break;\n                }\n            }\n        }\n    }\n    $settings['clients'][$client_key]['email'] = $newRemark;\n    if(!isset($settings['clients'][$client_key]['subId']) && ($serverType == \"sanaei\" || $serverType == \"alireza\")) $settings['clients'][$client_key]['subId'] = RandomString(16);\n    if(!isset($settings['clients'][$client_key]['enable']) && ($serverType == \"sanaei\" || $serverType == \"alireza\")) $settings['clients'][$client_key]['enable'] = true;\n\n    $editedClient = $settings['clients'][$client_key];\n    $settings['clients'] = array_values($settings['clients']);\n    $settings = json_encode($settings);\n    $dataArr = array('up' => $row->up,'down' => $row->down,'total' => $row->total,'remark' => $row->remark,'enable' => 'true',\n        'expiryTime' => $row->expiryTime, 'listen' => '','port' => $row->port,'protocol' => $row->protocol,'settings' => $settings,\n        'streamSettings' => $row->streamSettings, 'sniffing' => $row->sniffing);\n\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    \n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n         \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\n\n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n\n    $loginResponse = json_decode($body,true);\n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse; \n    } \n\n    if($serverType == \"sanaei\" || $serverType == \"alireza\"){\n        \n        $newSetting = array();\n        $newSetting['clients'][] = $editedClient;\n        $newSetting = json_encode($newSetting);\n\n        $dataArr = array(\n            \"id\"=>$inbound_id,\n            \"settings\" => $newSetting\n            );\n            \n        if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/updateClient/\" . rawurlencode($uuid);\n        else $url = \"$panel_url/xui/inbound/updateClient/\" . rawurlencode($uuid);\n        \n        curl_setopt_array($curl, array(\n            CURLOPT_URL => $url,\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_ENCODING => '',\n            CURLOPT_MAXREDIRS => 10,\n            CURLOPT_CONNECTTIMEOUT => 15,\n            CURLOPT_TIMEOUT => 15,\n            CURLOPT_FOLLOWLOCATION => true,\n            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n            CURLOPT_CUSTOMREQUEST => 'POST',\n            CURLOPT_POSTFIELDS => $dataArr,\n            CURLOPT_SSL_VERIFYHOST => false,\n            CURLOPT_SSL_VERIFYPEER => false,\n            CURLOPT_HEADER => false,\n            CURLOPT_HTTPHEADER => array(\n                'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n                'Accept:  application/json, text/plain, */*',\n                'Accept-Language:  en-US,en;q=0.5',\n                'Accept-Encoding:  gzip, deflate',\n                'X-Requested-With:  XMLHttpRequest',\n                'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n            )\n        ));\n    }else{\n        curl_setopt_array($curl, array(\n            CURLOPT_URL => \"$panel_url/xui/inbound/update/$inbound_id\",\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_ENCODING => '',\n            CURLOPT_MAXREDIRS => 10,\n            CURLOPT_CONNECTTIMEOUT => 15,\n            CURLOPT_TIMEOUT => 15,\n            CURLOPT_FOLLOWLOCATION => true,\n            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n            CURLOPT_CUSTOMREQUEST => 'POST',\n            CURLOPT_POSTFIELDS => $dataArr,\n            CURLOPT_HEADER => false,\n            CURLOPT_HTTPHEADER => array(\n                'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n                'Accept:  application/json, text/plain, */*',\n                'Accept-Language:  en-US,en;q=0.5',\n                'Accept-Encoding:  gzip, deflate',\n                'X-Requested-With:  XMLHttpRequest',\n                'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n            )\n        ));\n    }\n\n    $response = curl_exec($curl);\n    curl_close($curl);\n    return $response = json_decode($response);\n\n}\nfunction editClientTraffic($server_id, $inbound_id, $uuid, $volume, $days, $editType = null){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $panel_url = $server_info['panel_url'];\n    $serverType = $server_info['type'];\n\n    $response = getJson($server_id);\n    if(!$response) return null;\n    $response = $response->obj;\n    $client_key = 0;\n    foreach($response as $row){\n        if($row->id == $inbound_id) {\n            $settings = json_decode($row->settings, true);\n            $clients = $settings['clients'];\n            \n            $clientsStates = $row->clientStats;\n            foreach($clients as $key => $client){\n                if($client['id'] == $uuid || $client['password'] == $uuid){\n                    $client_key = $key;\n                    $email = $client['email'];\n                    $emails = array_column($clientsStates,'email');\n                    $emailKey = array_search($email,$emails);\n                    \n                    $total = $clientsStates[$emailKey]->total;\n                    $up = $clientsStates[$emailKey]->up;\n                    $enable = $clientsStates[$emailKey]->enable;\n                    $down = $clientsStates[$emailKey]->down; \n                    break;\n                }\n            }\n        }\n    }\n    if($volume != 0){\n        $client_total = $settings['clients'][$client_key]['totalGB'];// - $up - $down;\n        $extend_volume = floor($volume * 1073741824);\n        $volume = ($client_total > 0) ? $client_total + $extend_volume : $extend_volume;\n        if($editType == \"renew\"){\n            $volume = $extend_volume;\n            if($serverType == \"sanaei\" || $serverType == \"alireza\") resetClientTraffic($server_id, $email, $inbound_id);\n            else resetClientTraffic($server_id, $email);\n        }\n        $settings['clients'][$client_key]['totalGB'] = $volume;\n        if(!isset($settings['clients'][$client_key]['subId']) && ($serverType == \"sanaei\" || $serverType == \"alireza\")) $settings['clients'][$client_key]['subId'] = RandomString(16);\n        if(!isset($settings['clients'][$client_key]['enable']) && ($serverType == \"sanaei\" || $serverType == \"alireza\")) $settings['clients'][$client_key]['enable'] = true;\n    }\n    \n    if($days != 0){\n        $expiryTime = $settings['clients'][$client_key]['expiryTime'];\n        $now_microdate = floor(microtime(true) * 1000);\n        $extend_date = (864000 * $days * 100);\n        if($editType == \"renew\") $expire_microdate = $now_microdate + $extend_date;\n        else $expire_microdate = ($now_microdate > $expiryTime) ? $now_microdate + $extend_date : $expiryTime + $extend_date;\n        $settings['clients'][$client_key]['expiryTime'] = $expire_microdate;\n        if(!isset($settings['clients'][$client_key]['subId']) && ($serverType == \"sanaei\" || $serverType == \"alireza\")) $settings['clients'][$client_key]['subId'] = RandomString(16);\n        if(!isset($settings['clients'][$client_key]['enable']) && ($serverType == \"sanaei\" || $serverType == \"alireza\")) $settings['clients'][$client_key]['enable'] = true;\n    }\n    $editedClient = $settings['clients'][$client_key];\n    $settings['clients'] = array_values($settings['clients']);\n    $settings = json_encode($settings);\n    $dataArr = array('up' => $row->up,'down' => $row->down,'total' => $row->total,'remark' => $row->remark,'enable' => 'true',\n        'expiryTime' => $row->expiryTime, 'listen' => '','port' => $row->port,'protocol' => $row->protocol,'settings' => $settings,\n        'streamSettings' => $row->streamSettings, 'sniffing' => $row->sniffing);\n\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    \n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n         \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\n    \n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n\n    $loginResponse = json_decode($body,true);\n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse; \n    } \n\n    if($serverType == \"sanaei\" || $serverType == \"alireza\"){\n        \n        $newSetting = array();\n        $newSetting['clients'][] = $editedClient;\n        $newSetting = json_encode($newSetting);\n\n        $dataArr = array(\n            \"id\"=>$inbound_id,\n            \"settings\" => $newSetting\n            );\n            \n        if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/updateClient/\" . rawurlencode($uuid);\n        else $url = \"$panel_url/xui/inbound/updateClient/\" . rawurlencode($uuid);\n        \n        curl_setopt_array($curl, array(\n            CURLOPT_URL => $url,\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_ENCODING => '',\n            CURLOPT_MAXREDIRS => 10,\n            CURLOPT_CONNECTTIMEOUT => 15,\n            CURLOPT_TIMEOUT => 15,\n            CURLOPT_FOLLOWLOCATION => true,\n            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n            CURLOPT_CUSTOMREQUEST => 'POST',\n            CURLOPT_POSTFIELDS => $dataArr,\n            CURLOPT_SSL_VERIFYHOST => false,\n            CURLOPT_SSL_VERIFYPEER => false,\n            CURLOPT_HEADER => false,\n            CURLOPT_HTTPHEADER => array(\n                'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n                'Accept:  application/json, text/plain, */*',\n                'Accept-Language:  en-US,en;q=0.5',\n                'Accept-Encoding:  gzip, deflate',\n                'X-Requested-With:  XMLHttpRequest',\n                'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n            )\n        ));\n    }else{\n        curl_setopt_array($curl, array(\n            CURLOPT_URL => \"$panel_url/xui/inbound/update/$inbound_id\",\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_ENCODING => '',\n            CURLOPT_MAXREDIRS => 10,\n            CURLOPT_CONNECTTIMEOUT => 15,\n            CURLOPT_TIMEOUT => 15,\n            CURLOPT_FOLLOWLOCATION => true,\n            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n            CURLOPT_CUSTOMREQUEST => 'POST',\n            CURLOPT_POSTFIELDS => $dataArr,\n            CURLOPT_HEADER => false,\n            CURLOPT_HTTPHEADER => array(\n                'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n                'Accept:  application/json, text/plain, */*',\n                'Accept-Language:  en-US,en;q=0.5',\n                'Accept-Encoding:  gzip, deflate',\n                'X-Requested-With:  XMLHttpRequest',\n                'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n            )\n        ));\n    }\n\n    $response = curl_exec($curl);\n    curl_close($curl);\n    resetIpLog($server_id, $email);\n    return $response = json_decode($response);\n\n}\nfunction deleteInbound($server_id, $uuid, $delete = 0){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $panel_url = $server_info['panel_url'];\n    $serverType = $server_info['type'];\n\n    $response = getJson($server_id);\n    if(!$response) return null;\n    $response = $response->obj;\n    foreach($response as $row){\n        $clients = json_decode($row->settings)->clients;\n        if($clients[0]->id == $uuid || $clients[0]->password == $uuid) {\n            $inbound_id = $row->id;\n            $protocol = $row->protocol;\n            $uniqid = ($protocol == 'trojan') ? json_decode($row->settings)->clients[0]->password : json_decode($row->settings)->clients[0]->id;\n            $netType = json_decode($row->streamSettings)->network;\n            $oldData = [\n                'total' => $row->total,\n                'up' => $row->up,\n                'down' => $row->down,\n                'volume' => ((int)$row->total - (int)$row->up - (int)$row->down),\n                'port' => $row->port,\n                'protocol' => $protocol,\n                'expiryTime' => $row->expiryTime,\n                'uniqid' => $uniqid,\n                'netType' => $netType,\n                'security' => json_decode($row->streamSettings)->security,\n            ];\n            break;\n        }\n    }\n    if($delete == 1){\n        $serverName = $server_info['username'];\n        $serverPass = $server_info['password'];\n        \n        $loginUrl = $panel_url . '/login';\n        \n        $postFields = array(\n            \"username\" => $serverName,\n            \"password\" => $serverPass\n            );\n            \n        $curl = curl_init();\n        curl_setopt($curl, CURLOPT_URL, $loginUrl);\n        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($curl, CURLOPT_POST, 1);\n        curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n        curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n        curl_setopt($curl, CURLOPT_HEADER, 1);\n        $response = curl_exec($curl);\n\n        $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n        $header = substr($response, 0, $header_size);\n        $body = substr($response, $header_size);\n        preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n        $cookies = array();\n        foreach($matches[1] as $item) {\n            parse_str($item, $cookie);\n            $cookies = array_merge($cookies, $cookie);\n        }\n\n        $loginResponse = json_decode($body,true);\n        if(!$loginResponse['success']){\n            curl_close($curl);\n            return $loginResponse;\n        }\n        \n        if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/del/$inbound_id\";\n        else $url = \"$panel_url/xui/inbound/del/$inbound_id\";\n       \n        curl_setopt_array($curl, array(\n            CURLOPT_URL => $url,\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_ENCODING => '',\n            CURLOPT_MAXREDIRS => 10,\n            CURLOPT_CONNECTTIMEOUT => 15,\n            CURLOPT_TIMEOUT => 15,\n            CURLOPT_FOLLOWLOCATION => true,\n            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n            CURLOPT_CUSTOMREQUEST => 'POST',\n            CURLOPT_HEADER => false,\n            CURLOPT_HTTPHEADER => array(\n                'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n                'Accept:  application/json, text/plain, */*',\n                'Accept-Language:  en-US,en;q=0.5',\n                'Accept-Encoding:  gzip, deflate',\n                'X-Requested-With:  XMLHttpRequest',\n                'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n            )\n        ));\n        $response = curl_exec($curl);\n        curl_close($curl);\n    }\n    return $oldData;\n}\nfunction resetIpLog($server_id, $remark){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $panel_url = $server_info['panel_url'];\n    $serverType = $server_info['type'];\n\n\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    \n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n        \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\n\n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n\n    $loginResponse = json_decode($body,true);\n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse;\n    }\n    \n    if($serverType == \"sanaei\") $url = $panel_url. \"/panel/inbound/clearClientIps/\" . urlencode($remark);\n    else $url = $panel_url. \"/xui/inbound/clearClientIps/\" . urlencode($remark);\n\n    curl_setopt_array($curl, array(\n        CURLOPT_URL => $url,\n        CURLOPT_RETURNTRANSFER => true,\n        CURLOPT_ENCODING => '',\n        CURLOPT_MAXREDIRS => 10,\n        CURLOPT_CONNECTTIMEOUT => 15,\n        CURLOPT_TIMEOUT => 15,\n        CURLOPT_FOLLOWLOCATION => true,\n        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n        CURLOPT_CUSTOMREQUEST => 'POST',\n        CURLOPT_HEADER => false,\n        CURLOPT_HTTPHEADER => array(\n            'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n            'Accept:  application/json, text/plain, */*',\n            'Accept-Language:  en-US,en;q=0.5',\n            'Accept-Encoding:  gzip, deflate',\n            'X-Requested-With:  XMLHttpRequest',\n            'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n        )\n    ));\n\n    $response = curl_exec($curl);\n    curl_close($curl);\n    return $response = json_decode($response);\n}\nfunction resetClientTraffic($server_id, $remark, $inboundId = null){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    $panel_url = $server_info['panel_url'];\n    $serverType = $server_info['type'];\n\n\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    \n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n        \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\n\n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n\n    $loginResponse = json_decode($body,true);\n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse;\n    }\n    if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/$inboundId/resetClientTraffic/\" . rawurlencode($remark);\n    elseif($inboundId == null) $url = \"$panel_url/xui/inbound/resetClientTraffic/\" . rawurlencode($remark);\n    else $url = \"$panel_url/xui/inbound/$inboundId/resetClientTraffic/\" . rawurlencode($remark);\n    curl_setopt_array($curl, array(\n        CURLOPT_URL => $url,\n        CURLOPT_RETURNTRANSFER => true,\n        CURLOPT_ENCODING => '',\n        CURLOPT_MAXREDIRS => 10,\n        CURLOPT_CONNECTTIMEOUT => 15,\n        CURLOPT_TIMEOUT => 15,\n        CURLOPT_FOLLOWLOCATION => true,\n        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n        CURLOPT_CUSTOMREQUEST => 'POST',\n        CURLOPT_HEADER => false,\n        CURLOPT_HTTPHEADER => array(\n            'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n            'Accept:  application/json, text/plain, */*',\n            'Accept-Language:  en-US,en;q=0.5',\n            'Accept-Encoding:  gzip, deflate',\n            'X-Requested-With:  XMLHttpRequest',\n            'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n        )\n    ));\n\n    $response = curl_exec($curl);\n    curl_close($curl);\n    return $response = json_decode($response);\n}\nfunction addInboundAccount($server_id, $client_id, $inbound_id, $expiryTime, $remark, $volume, $limitip = 1, $newarr = '', $planId = null){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n    $serverType = $server_info['type'];\n    $reality = $server_info['reality'];\n    $volume = ($volume == 0) ? 0 : floor($volume * 1073741824);\n\n    $response = getJson($server_id);\n    if(!$response) return null;\n    $response = $response->obj;\n    foreach($response as $row){\n        if($row->id == $inbound_id) {\n            $iid = $row->id;\n            $protocol = $row->protocol;\n            break;\n        }\n    }\n    if(!intval($iid)) return \"inbound not Found\";\n\n    $settings = json_decode($row->settings, true);\n    $id_label = $protocol == 'trojan' ? 'password' : 'id';\n    if($newarr == ''){\n\t\tif($serverType == \"sanaei\" || $serverType == \"alireza\"){\n\t\t    if($reality == \"true\"){\n                $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n                $stmt->bind_param(\"i\", $planId);\n                $stmt->execute();\n                $file_detail = $stmt->get_result()->fetch_assoc();\n                $stmt->close();\n            \n                $flow = isset($file_detail['flow']) && $file_detail['flow'] != \"None\" ? $file_detail['flow'] : \"\";\n                \n                $newClient = [\n                    \"$id_label\" => $client_id,\n                    \"enable\" => true,\n                    \"email\" => $remark,\n                    \"limitIp\" => $limitip,\n                    \"flow\" => $flow,\n                    \"totalGB\" => $volume,\n                    \"expiryTime\" => $expiryTime,\n                    \"subId\" => RandomString(16)\n                ];\n\t\t    }else{\n                $newClient = [\n                    \"$id_label\" => $client_id,\n                    \"enable\" => true,\n                    \"email\" => $remark,\n                    \"limitIp\" => $limitip,\n                    \"totalGB\" => $volume,\n                    \"expiryTime\" => $expiryTime,\n                    \"subId\" => RandomString(16)\n                ];\n\t\t    }\n    \t}else{\n            $newClient = [\n                \"$id_label\" => $client_id,\n                \"flow\" => \"\",\n                \"email\" => $remark,\n                \"limitIp\" => $limitip,\n                \"totalGB\" => $volume,\n                \"expiryTime\" => $expiryTime\n            ];\n\t\t}\n        $settings['clients'][] = $newClient;\n    }elseif(is_array($newarr)) $settings['clients'][] = $newarr;\n\n    $settings['clients'] = array_values($settings['clients']);\n    $settings = json_encode($settings);\n\n    $dataArr = array('up' => $row->up,'down' => $row->down,'total' => $row->total,'remark' => $row->remark,'enable' => 'true',\n        'expiryTime' => $row->expiryTime, 'listen' => '','port' => $row->port,'protocol' => $row->protocol,'settings' => $settings,\n        'streamSettings' => $row->streamSettings, 'sniffing' => $row->sniffing);\n\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    \n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n        \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\n\n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n\n    $loginResponse = json_decode($body,true);\n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse;\n    }\n    \n    if($serverType == \"sanaei\" || $serverType == \"alireza\"){\n        $newSetting = array();\n        if($newarr == '')$newSetting['clients'][] = $newClient;\n        elseif(is_array($newarr)) $newSetting['clients'][] = $newarr;\n        \n        $newSetting = json_encode($newSetting);\n        $dataArr = array(\n            \"id\"=>$inbound_id,\n            \"settings\" => $newSetting\n            );\n            \n        if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/addClient/\";\n        else $url = \"$panel_url/xui/inbound/addClient/\";\n\n        curl_setopt_array($curl, array(\n            CURLOPT_URL => $url,\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_ENCODING => '',\n            CURLOPT_MAXREDIRS => 10,\n            CURLOPT_CONNECTTIMEOUT => 15,\n            CURLOPT_TIMEOUT => 15,\n            CURLOPT_FOLLOWLOCATION => true,\n            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n            CURLOPT_CUSTOMREQUEST => 'POST',\n            CURLOPT_POSTFIELDS => $dataArr,\n            CURLOPT_SSL_VERIFYHOST => false,\n            CURLOPT_SSL_VERIFYPEER => false,\n            CURLOPT_HEADER => false,\n            CURLOPT_HTTPHEADER => array(\n                'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n                'Accept:  application/json, text/plain, */*',\n                'Accept-Language:  en-US,en;q=0.5',\n                'Accept-Encoding:  gzip, deflate',\n                'X-Requested-With:  XMLHttpRequest',\n                'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n            )\n        ));\n    }else{\n        curl_setopt_array($curl, array(\n            CURLOPT_URL => \"$panel_url/xui/inbound/update/$iid\",\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_ENCODING => '',\n            CURLOPT_MAXREDIRS => 10,\n            CURLOPT_CONNECTTIMEOUT => 15,\n            CURLOPT_TIMEOUT => 15,\n            CURLOPT_FOLLOWLOCATION => true,\n            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n            CURLOPT_CUSTOMREQUEST => 'POST',\n            CURLOPT_POSTFIELDS => $dataArr,\n            CURLOPT_SSL_VERIFYHOST => false,\n            CURLOPT_SSL_VERIFYPEER => false,\n            CURLOPT_HEADER => false,\n            CURLOPT_HTTPHEADER => array(\n                'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n                'Accept:  application/json, text/plain, */*',\n                'Accept-Language:  en-US,en;q=0.5',\n                'Accept-Encoding:  gzip, deflate',\n                'X-Requested-With:  XMLHttpRequest',\n                'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n            )\n        ));\n    }\n\n    $response = curl_exec($curl);\n    curl_close($curl);\n    return $response = json_decode($response);\n\n}\nfunction getNewHeaders($netType, $request_header, $response_header, $type){\n    global $connection;\n    $input = explode(':', $request_header);\n    $key = $input[0];\n    $value = $input[1];\n\n    $input = explode(':', $response_header);\n    $reskey = $input[0];\n    $resvalue = $input[1];\n\n    $headers = '';\n    if( $netType == 'tcp'){\n        if($type == 'none') {\n            $headers = '{\n              \"type\": \"none\"\n            }';\n        }else {\n            $headers = '{\n              \"type\": \"http\",\n              \"request\": {\n                \"method\": \"GET\",\n                \"path\": [\n                  \"/\"\n                ],\n                \"headers\": {\n                   \"'.$key.'\": [\n                     \"'.$value.'\"\n                  ]\n                }\n              },\n              \"response\": {\n                \"version\": \"1.1\",\n                \"status\": \"200\",\n                \"reason\": \"OK\",\n                \"headers\": {\n                   \"'.$reskey.'\": [\n                     \"'.$resvalue.'\"\n                  ]\n                }\n              }\n            }';\n        }\n\n    }elseif( $netType == 'ws'){\n        if($type == 'none') {\n            $headers = '{}';\n        }else {\n            $headers = '{\n              \"'.$key.'\": \"'.$value.'\"\n            }';\n        }\n    }\n    return $headers;\n\n}\nfunction getConnectionLink($server_id, $uniqid, $protocol, $remark, $port, $netType, $inbound_id = 0, $rahgozar = false, $customPath = false, $customPort = 0, $customSni = null){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n    $server_ip = $server_info['ip'];\n    $sni = $server_info['sni'];\n    $header_type = $server_info['header_type'];\n    $request_header = $server_info['request_header'];\n    $response_header = $server_info['response_header'];\n    $serverType = $server_info['type'];\n    preg_match(\"/^Host:(.*)/i\",$request_header,$hostMatch);\n\n    $panel_url = str_ireplace('http://','',$panel_url);\n    $panel_url = str_ireplace('https://','',$panel_url);\n    $panel_url = strtok($panel_url,\":\");\n    if($server_ip == '') $server_ip = $panel_url;\n\n    $response = getJson($server_id)->obj;\n    foreach($response as $row){\n        if($inbound_id == 0){\n            $clients = json_decode($row->settings)->clients;\n            if($clients[0]->id == $uniqid || $clients[0]->password == $uniqid) {\n                if($serverType == \"sanaei\" || $serverType == \"alireza\"){\n                    $settings = json_decode($row->settings,true);\n                    $email = $settings['clients'][0]['email'];\n                    // $remark = (!empty($row->remark)?($row->remark . \"-\"):\"\") . $email;\n                    $remark = $row->remark;\n                }\n                $tlsStatus = json_decode($row->streamSettings)->security;\n                $tlsSetting = json_decode($row->streamSettings)->tlsSettings;\n                $xtlsSetting = json_decode($row->streamSettings)->xtlsSettings;\n                $netType = json_decode($row->streamSettings)->network;\n                if($netType == 'tcp') {\n                    $header_type = json_decode($row->streamSettings)->tcpSettings->header->type;\n                    $path = json_decode($row->streamSettings)->tcpSettings->header->request->path[0];\n                    $host = json_decode($row->streamSettings)->tcpSettings->header->request->headers->Host[0];\n                    \n                    if($tlsStatus == \"reality\"){\n                        $realitySettings = json_decode($row->streamSettings)->realitySettings;\n                        $fp = $realitySettings->settings->fingerprint;\n                        $spiderX = $realitySettings->settings->spiderX;\n                        $pbk = $realitySettings->settings->publicKey;\n                        $sni = $realitySettings->serverNames[0];\n                        $flow = $settings['clients'][0]['flow'];\n                        $sid = $realitySettings->shortIds[0];\n                    }\n                }\n                if($netType == 'ws') {\n                    $header_type = json_decode($row->streamSettings)->wsSettings->header->type;\n                    $path = json_decode($row->streamSettings)->wsSettings->path;\n                    $host = json_decode($row->streamSettings)->wsSettings->headers->Host;\n                }\n                if($header_type == 'http' && empty($host)){\n                    $request_header = explode(':', $request_header);\n                    $host = $request_header[1];\n                }\n                if($netType == 'grpc') {\n                    if($tlsStatus == 'tls'){\n                        $alpn = $tlsSetting->certificates->alpn;\n\t\t\t\t\t\tif(isset($tlsSetting->serverName)) $sni = $tlsSetting->serverName;\n\t\t\t\t\t\tif(isset($tlsSetting->settings->serverName)) $sni = $tlsSetting->settings->serverName;\n                    } \n                    elseif($tlsStatus == \"reality\"){\n                        $realitySettings = json_decode($row->streamSettings)->realitySettings;\n                        $fp = $realitySettings->settings->fingerprint;\n                        $spiderX = $realitySettings->settings->spiderX;\n                        $pbk = $realitySettings->settings->publicKey;\n                        $sni = $realitySettings->serverNames[0];\n                        $flow = $settings['clients'][0]['flow'];\n                        $sid = $realitySettings->shortIds[0];\n                    }\n                    $serviceName = json_decode($row->streamSettings)->grpcSettings->serviceName;\n                    $grpcSecurity = json_decode($row->streamSettings)->security;\n                }\n                if($tlsStatus == 'tls'){\n                    $serverName = $tlsSetting->serverName;\n\t\t\t\t\tif(isset($tlsSetting->serverName)) $sni = $tlsSetting->serverName;\n                    if(isset($tlsSetting->settings->serverName)) $sni = $tlsSetting->settings->serverName;\n                }\n                if($tlsStatus == \"xtls\"){\n                    $serverName = $xtlsSetting->serverName;\n                    $alpn = $xtlsSetting->alpn;\n\t\t\t\t\tif(isset($xtlsSetting->serverName)) $sni = $xtlsSetting->serverName;\n                    if(isset($xtlsSetting->settings->serverName)) $sni = $xtlsSetting->settings->serverName;\n                }\n                if($netType == 'kcp'){\n                    $kcpSettings = json_decode($row->streamSettings)->kcpSettings;\n                    $kcpType = $kcpSettings->header->type;\n                    $kcpSeed = $kcpSettings->seed;\n                }\n                \n                break;\n            }\n        }else{\n            if($row->id == $inbound_id) {\n                if($serverType == \"sanaei\" || $serverType == \"alireza\"){\n                    $settings = json_decode($row->settings);\n                    $clients = $settings->clients;\n                    foreach($clients as $key => $client){\n                        if($client->id == $uniqid || $client->password == $uniqid){\n                            $flow = $client->flow;\n                            break;\n                        }\n                    }\n                    // $remark = (!empty($row->remark)?($row->remark . \"-\"):\"\") . $remark;\n                    $remark = $remark;\n                }\n                \n                $port = $row->port;\n                $tlsStatus = json_decode($row->streamSettings)->security;\n                $tlsSetting = json_decode($row->streamSettings)->tlsSettings;\n                $xtlsSetting = json_decode($row->streamSettings)->xtlsSettings;\n                $netType = json_decode($row->streamSettings)->network;\n                if($netType == 'tcp') {\n                    $header_type = json_decode($row->streamSettings)->tcpSettings->header->type;\n                    $path = json_decode($row->streamSettings)->tcpSettings->header->request->path[0];\n                    $host = json_decode($row->streamSettings)->tcpSettings->header->request->headers->Host[0];\n                    \n                    if($tlsStatus == \"reality\"){\n                        $realitySettings = json_decode($row->streamSettings)->realitySettings;\n                        $fp = $realitySettings->settings->fingerprint;\n                        $spiderX = $realitySettings->settings->spiderX;\n                        $pbk = $realitySettings->settings->publicKey;\n                        $sni = $realitySettings->serverNames[0];\n                        $sid = $realitySettings->shortIds[0];\n                    }\n                }elseif($netType == 'ws') {\n                    $header_type = json_decode($row->streamSettings)->wsSettings->header->type;\n                    $path = json_decode($row->streamSettings)->wsSettings->path;\n                    $host = json_decode($row->streamSettings)->wsSettings->headers->Host;\n                }elseif($netType == 'grpc') {\n                    if($tlsStatus == 'tls'){\n                        $alpn = $tlsSetting->alpn;\n\t\t\t\t\t\tif(isset($tlsSetting->serverName)) $sni = $tlsSetting->serverName;\n                        if(isset($tlsSetting->settings->serverName)) $sni = $tlsSetting->settings->serverName;\n                    }\n                    elseif($tlsStatus == \"reality\"){\n                        $realitySettings = json_decode($row->streamSettings)->realitySettings;\n                        $fp = $realitySettings->settings->fingerprint;\n                        $spiderX = $realitySettings->settings->spiderX;\n                        $pbk = $realitySettings->settings->publicKey;\n                        $sni = $realitySettings->serverNames[0];\n                        $sid = $realitySettings->shortIds[0];\n                    }\n                    $grpcSecurity = json_decode($row->streamSettings)->security;\n                    $serviceName = json_decode($row->streamSettings)->grpcSettings->serviceName;\n                }elseif($netType == 'kcp'){\n                    $kcpSettings = json_decode($row->streamSettings)->kcpSettings;\n                    $kcpType = $kcpSettings->header->type;\n                    $kcpSeed = $kcpSettings->seed;\n                }\n                if($tlsStatus == 'tls'){\n                    $serverName = $tlsSetting->serverName;\n\t\t\t\t\tif(isset($tlsSetting->serverName)) $sni = $tlsSetting->serverName;\n                    if(isset($tlsSetting->settings->serverName)) $sni = $tlsSetting->settings->serverName;\n                }\n                if($tlsStatus == \"xtls\"){\n                    $serverName = $xtlsSetting->serverName;\n                    $alpn = $xtlsSetting->alpn;\n\t\t\t\t\tif(isset($xtlsSetting->serverName)) $sni = $xtlsSetting->serverName;\n                    if(isset($xtlsSetting->settings->serverName)) $sni = $xtlsSetting->settings->serverName;\n                }\n\n                break;\n            }\n        }\n\n\n    }\n    $protocol = strtolower($protocol);\n    $serverIp = explode(\"\\n\",$server_ip);\n    $outputLink = array();\n    foreach($serverIp as $server_ip){\n        $server_ip = str_replace(\"\\r\",\"\",($server_ip));\n        if($inbound_id == 0) {\n            if($protocol == 'vless'){\n                if($rahgozar == true){\n                    if(empty($host) && isset($hostMatch[1])) $host = $hostMatch[1];\n                    \n                    if(!empty($host)){\n                        $parseAdd = parse_url($host);\n                        $parseAdd = $parseAdd['host']??$parseAdd['path'];\n                        $explodeAdd = explode(\".\", $parseAdd);\n                        $subDomain = RandomString(4,\"domain\");\n                        if($customSni != null) $sni = $customSni;\n                        else{\n                            if(count($explodeAdd) >= 3) $sni = $uniqid . \".\" . $explodeAdd[1] . \".\" . $explodeAdd[2];\n                            else $sni = $uniqid . \".\" . $host;\n                        }\n                    }\n                }\n                $psting = '';\n                if(($header_type == 'http' && $rahgozar != true && $netType != \"grpc\") || ($netType == \"ws\" && !empty($host) && $rahgozar != true)) $psting .= \"&path=/&host=$host\";;\n                if($netType == 'tcp' and $header_type == 'http') $psting .= '&headerType=http';\n                if(strlen($sni) > 1 && $tlsStatus != \"reality\") $psting .= \"&sni=$sni\";\n                if(strlen($serverName)>1 && $tlsStatus==\"xtls\") $server_ip = $serverName;\n                if($tlsStatus == \"xtls\" && $netType == \"tcp\") $psting .= \"&flow=xtls-rprx-direct\";\n                if($tlsStatus==\"reality\") $psting .= \"&fp=$fp&pbk=$pbk&sni=$sni\" . ($flow != \"\"?\"&flow=$flow\":\"\") . \"&sid=$sid&spx=$spiderX\";\n                if($rahgozar == true) $psting .= \"&path=\" . rawurlencode($path . ($customPath == true?\"?ed=2048\":\"\")) . \"&encryption=none&host=$host\";\n                $outputlink = \"$protocol://$uniqid@$server_ip:\" . ($rahgozar == true?($customPort!=\"0\"?$customPort:\"443\"):$port) . \"?type=$netType&security=\" . ($rahgozar==true?\"tls\":$tlsStatus) . \"{$psting}#$remark\";\n                if($netType == 'grpc' && $tlsStatus != \"reality\"){\n                    if($tlsStatus == 'tls'){\n                        $outputlink = \"$protocol://$uniqid@$server_ip:$port?type=$netType&security=$tlsStatus&serviceName=$serviceName&sni=$sni#$remark\";\n                    }else{\n                        $outputlink = \"$protocol://$uniqid@$server_ip:$port?type=$netType&security=$tlsStatus&serviceName=$serviceName#$remark\";\n                    }\n    \n                }\n            }\n    \n            if($protocol == 'trojan'){\n                $psting = '';\n                if($header_type == 'http') $psting .= \"&path=/&host=$host\";\n                if($netType == 'tcp' and $header_type == 'http') $psting .= '&headerType=http';\n                if(strlen($sni) > 1) $psting .= \"&sni=$sni\";\n                $outputlink = \"$protocol://$uniqid@$server_ip:$port?type=$netType&security=$tlsStatus{$psting}#$remark\";\n                \n                if($netType == 'grpc'){\n                    if($tlsStatus == 'tls'){\n                        $outputlink = \"$protocol://$uniqid@$server_ip:$port?type=$netType&security=$tlsStatus&serviceName=$serviceName&sni=$sni#$remark\";\n                    }else{\n                        $outputlink = \"$protocol://$uniqid@$server_ip:$port?type=$netType&security=$tlsStatus&serviceName=$serviceName#$remark\";\n                    }\n    \n                }\n            }elseif($protocol == 'vmess'){\n                $vmessArr = [\n                    \"v\"=> \"2\",\n                    \"ps\"=> $remark,\n                    \"add\"=> $server_ip,\n                    \"port\"=> $rahgozar == true?($customPort!=0?$customPort:443):$port,\n                    \"id\"=> $uniqid,\n                    \"aid\"=> 0,\n                    \"net\"=> $netType,\n                    \"type\"=> $kcpType ? $kcpType : \"none\",\n                    \"host\"=> ($rahgozar == true && empty($host))? $server_ip:(is_null($host) ? '' : $host),\n                    \"path\"=> ($rahgozar == true)?($path . ($customPath == true?\"?ed=2048\":\"\")):((is_null($path) and $path != '') ? '/' : (is_null($path) ? '' : $path)),\n                    \"tls\"=> $rahgozar == true?\"tls\":((is_null($tlsStatus)) ? 'none' : $tlsStatus)\n                ];\n                \n                if($rahgozar == true){\n                    if(empty($host) && isset($hostMatch[1])) $host = $hostMatch[1];\n                    \n                    if(!empty($host)){\n                        $parseAdd = parse_url($host);\n                        $parseAdd = $parseAdd['host']??$parseAdd['path'];\n                        $explodeAdd = explode(\".\", $parseAdd);\n                        $subDomain = RandomString(4,\"domain\");\n                        if($customSni != null) $sni = $customSni;\n                        else{\n                            if(count($explodeAdd) >= 3) $sni = $uniqid . \".\" . $explodeAdd[1] . \".\" . $explodeAdd[2];\n                            else $sni = $uniqid . \".\" . $host;\n                        }\n    \n                        $vmessArr['alpn'] = 'http/1.1';\n                    }\n                }\n                if($header_type == 'http' && $rahgozar != true){\n                    $vmessArr['path'] = \"/\";\n                    $vmessArr['type'] = $header_type;\n                    $vmessArr['host'] = $host;\n                }\n                if($netType == 'grpc'){\n                    if(!is_null($alpn) and json_encode($alpn) != '[]' and $alpn != '') $vmessArr['alpn'] = $alpn;\n                    if(strlen($serviceName) > 1) $vmessArr['path'] = $serviceName;\n    \t\t\t\t$vmessArr['type'] = $grpcSecurity;\n                    $vmessArr['scy'] = 'auto';\n                }\n                if($netType == 'kcp'){\n                    $vmessArr['path'] = $kcpSeed ? $kcpSeed : $vmessArr['path'];\n    \t        }\n                if(strlen($sni) > 1) $vmessArr['sni'] = $sni;\n                $urldata = base64_encode(json_encode($vmessArr,JSON_UNESCAPED_SLASHES,JSON_PRETTY_PRINT));\n                $outputlink = \"vmess://$urldata\";\n            }\n        }else { \n            if($protocol == 'vless'){\n                if($rahgozar == true){\n                    if(empty($host) && isset($hostMatch[1])) $host = $hostMatch[1];\n                    \n                    if(!empty($host)){\n                        $parseAdd = parse_url($host);\n                        $parseAdd = $parseAdd['host']??$parseAdd['path'];\n                        $explodeAdd = explode(\".\", $parseAdd);\n                        $subDomain = RandomString(4,\"domain\");\n                        if($customSni != null) $sni = $customSni;\n                        else{\n                            if(count($explodeAdd) >= 3) $sni = $uniqid . \".\" . $explodeAdd[1] . \".\" . $explodeAdd[2];\n                            else $sni = $uniqid . \".\" .$host;\n                        }\n                    }\n                }\n                \n                if(strlen($sni) > 1 && $tlsStatus != \"reality\") $psting = \"&sni=$sni\"; else $psting = '';\n                if($netType == 'tcp'){\n                    if($netType == 'tcp' and $header_type == 'http') $psting .= '&headerType=http';\n                    if($tlsStatus==\"xtls\") $psting .= \"&flow=xtls-rprx-direct\";\n                    if($tlsStatus==\"reality\") $psting .= \"&fp=$fp&pbk=$pbk&sni=$sni\" . ($flow != \"\"?\"&flow=$flow\":\"\") . \"&sid=$sid&spx=$spiderX\";\n                    if($header_type == \"http\") $psting .= \"&path=/&host=$host\";\n                    $outputlink = \"$protocol://$uniqid@$server_ip:$port?type=$netType&security=$tlsStatus{$psting}#$remark\";\n                }elseif($netType == 'ws'){\n                    if($rahgozar == true)$outputlink = \"$protocol://$uniqid@$server_ip:\" . ($customPort!=0?$customPort:\"443\") . \"?type=$netType&security=tls&path=\" . rawurlencode($path . ($customPath == true?\"?ed=2048\":\"\")) . \"&encryption=none&host=$host{$psting}#$remark\";\n                    else $outputlink = \"$protocol://$uniqid@$server_ip:$port?type=$netType&security=$tlsStatus&path=/&host=$host{$psting}#$remark\";\n                }\n                elseif($netType == 'kcp')\n                    $outputlink = \"$protocol://$uniqid@$server_ip:$port?type=$netType&security=$tlsStatus&headerType=$kcpType&seed=$kcpSeed#$remark\";\n                elseif($netType == 'grpc'){\n                    if($tlsStatus == 'tls'){\n                        $outputlink = \"$protocol://$uniqid@$server_ip:$port?type=$netType&security=$tlsStatus&serviceName=$serviceName&sni=$sni#$remark\";\n                    }\n                    elseif($tlsStatus==\"reality\"){\n                        $outputlink = \"$protocol://$uniqid@$server_ip:$port?type=$netType&security=$tlsStatus&serviceName=$serviceName&fp=$fp&pbk=$pbk&sni=$sni\" . ($flow != \"\"?\"&flow=$flow\":\"\") . \"&sid=$sid&spx=$spiderX#$remark\";\n                    }\n                    else{\n                        $outputlink = \"$protocol://$uniqid@$server_ip:$port?type=$netType&security=$tlsStatus&serviceName=$serviceName#$remark\";\n                    }\n                }\n            }elseif($protocol == 'trojan'){                \n                $psting = '';\n                if($header_type == 'http') $psting .= \"&path=/&host=$host\";\n                if($netType == 'tcp' and $header_type == 'http') $psting .= '&headerType=http';\n                if(strlen($sni) > 1) $psting .= \"&sni=$sni\";\n                $outputlink = \"$protocol://$uniqid@$server_ip:$port?type=$netType&security=$tlsStatus{$psting}#$remark\";\n                \n                if($netType == 'grpc'){\n                    if($tlsStatus == 'tls'){\n                        $outputlink = \"$protocol://$uniqid@$server_ip:$port?type=$netType&security=$tlsStatus&serviceName=$serviceName&sni=$sni#$remark\";\n                    }else{\n                        $outputlink = \"$protocol://$uniqid@$server_ip:$port?type=$netType&security=$tlsStatus&serviceName=$serviceName#$remark\";\n                    }\n    \n                }\n            }elseif($protocol == 'vmess'){\n                $vmessArr = [\n                    \"v\"=> \"2\",\n                    \"ps\"=> $remark,\n                    \"add\"=> $server_ip,\n                    \"port\"=> $rahgozar == true?($customPort!=0?$customPort:443):$port,\n                    \"id\"=> $uniqid,\n                    \"aid\"=> 0,\n                    \"net\"=> $netType,\n                    \"type\"=> ($header_type) ? $header_type : ($kcpType ? $kcpType : \"none\"),\n                    \"host\"=> ($rahgozar == true && empty($host))?$server_ip:(is_null($host) ? '' : $host),\n                    \"path\"=> ($rahgozar == true)?($path . ($customPath == true?\"?ed=2048\":\"\")) :((is_null($path) and $path != '') ? '/' : (is_null($path) ? '' : $path)),\n                    \"tls\"=> $rahgozar == true?\"tls\":((is_null($tlsStatus)) ? 'none' : $tlsStatus)\n                ];\n                if($rahgozar == true){\n                    if(empty($host) && isset($hostMatch[1])) $host = $hostMatch[1];\n                    \n                    if(!empty($host)){\n                        $subDomain = RandomString(4, \"domain\");\n                        $parseAdd = parse_url($host);\n                        $parseAdd = $parseAdd['host']??$parseAdd['path'];\n                        $explodeAdd = explode(\".\", $parseAdd);\n                        if($customSni != null) $sni = $customSni;\n                        else{\n                            if(count($explodeAdd) >= 3) $sni = $uniqid . \".\" . $explodeAdd[1] . \".\" .$explodeAdd[2];\n                            else $sni = $uniqid . \".\" . $host;\n                        }\n                        \n                        $vmessArr['alpn'] = 'http/1.1';\n                    }\n                }\n                if($netType == 'grpc'){\n                    if(!is_null($alpn) and json_encode($alpn) != '[]' and $alpn != '') $vmessArr['alpn'] = $alpn;\n                    if(strlen($serviceName) > 1) $vmessArr['path'] = $serviceName;\n                    $vmessArr['type'] = $grpcSecurity;\n                    $vmessArr['scy'] = 'auto';\n                }\n                if($netType == 'kcp'){\n                    $vmessArr['path'] = $kcpSeed ? $kcpSeed : $vmessArr['path'];\n    \t        }\n    \n                if(strlen($sni) > 1) $vmessArr['sni'] = $sni;\n                $urldata = base64_encode(json_encode($vmessArr,JSON_UNESCAPED_SLASHES,JSON_PRETTY_PRINT));\n                $outputlink = \"vmess://$urldata\";\n            }\n        }\n        $outputLink[] = $outputlink;\n    }\n\n    return $outputLink;\n}\nfunction updateConfig($server_id, $inboundId, $protocol, $netType = 'tcp', $security = 'none', $rahgozar = false){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n    $security = $server_info['security'];\n    $tlsSettings = $server_info['tlsSettings'];\n    $header_type = $server_info['header_type'];\n    $request_header = $server_info['request_header'];\n    $response_header = $server_info['response_header'];\n    $serverType = $server_info['type'];\n    $xtlsTitle = ($serverType == \"sanaei\" || $serverType == \"alireza\")?\"XTLSSettings\":\"xtlsSettings\";\n    $sni = $server_info['sni'];\n    if(!empty($sni) && ($serverType == \"sanaei\" || $serverType == \"alireza\")){\n        $tlsSettings = json_decode($tlsSettings,true);\n        $tlsSettings['serverName'] = $sni;\n        $tlsSettings = json_encode($tlsSettings,488|JSON_UNESCAPED_UNICODE);\n    }\n    \n    $response = getJson($server_id);\n    if(!$response) return null;\n    $response = $response->obj;\n    foreach($response as $row){\n        if($row->id == $inboundId) {\n            $iid = $row->id;\n            $remark = $row->remark;\n            $streamSettings = $row->streamSettings;\n            $settings = $row->settings;\n            break;\n        }\n    }\n    if(!intval($iid)) return;\n    $headers = getNewHeaders($netType, $request_header, $response_header, $header_type);\n    $headers = empty($headers)?\"{}\":$headers;\n\n    if($protocol == 'trojan'){\n        if($security == 'none'){\n            $tcpSettings = '{\n        \t  \"network\": \"tcp\",\n        \t  \"security\": \"'.$security.'\",\n        \t  \"tlsSettings\": '.$tlsSettings.',\n        \t  \"tcpSettings\": {\n                \"header\": '.$headers.'\n              }\n        \t}';\n                $wsSettings = '{\n              \"network\": \"ws\",\n              \"security\": \"'.$security.'\",\n        \t  \"tlsSettings\": '.$tlsSettings.',\n              \"wsSettings\": {\n                \"path\": \"/\",\n                \"headers\": '.$headers.'\n              }\n            }';\n\n        }elseif($security == 'xtls' && $serverType != \"sanaei\" && $serverType != \"alireza\") {\n            \n            $tcpSettings = '{\n        \t  \"network\": \"tcp\",\n        \t  \"security\": \"'.$security.'\",\n        \t  \"' . $xtlsTitle . '\": '.$tlsSettings.',\n        \t  \"tcpSettings\": {\n                \"header\": '.$headers.'\n              }\n        \t}';\n                $wsSettings = '{\n              \"network\": \"ws\",\n              \"security\": \"'.$security.'\",\n        \t  \"' . $xtlsTitle . '\": '.$tlsSettings.',\n              \"wsSettings\": {\n                \"path\": \"/\",\n                \"headers\": '.$headers.'\n              }\n            }';\n        }\n        else{\n            $tcpSettings = '{\n        \t  \"network\": \"tcp\",\n        \t  \"security\": \"'.$security.'\",\n        \t  \"tlsSettings\": '.$tlsSettings.',\n        \t  \"tcpSettings\": {\n                \"header\": '.$headers.'\n              }\n        \t}';\n            $wsSettings = '{\n              \"network\": \"ws\",\n              \"security\": \"'.$security.'\",\n        \t  \"tlsSettings\": '.$tlsSettings.',\n              \"wsSettings\": {\n                \"path\": \"/\",\n                \"headers\": '.$headers.'\n              }\n            }';\n        }\n        \n        \n                $streamSettings = ($netType == 'tcp') ? $tcpSettings : $wsSettings;\n\t\tif($netType == 'grpc'){\n\t\t    $keyFileInfo = json_decode($tlsSettings,true);\n\t\t    $certificateFile = \"/root/cert.crt\";\n\t\t    $keyFile = '/root/private.key';\n\t\t    \n\t\t    if(isset($keyFileInfo['certificates'])){\n\t\t        $certificateFile = $keyFileInfo['certificates'][0]['certificateFile'];\n\t\t        $keyFile = $keyFileInfo['certificates'][0]['keyFile'];\n\t\t    }\n\t\t\tif($security == 'tls') {\n\t\t\t\t$streamSettings = '{\n  \"network\": \"grpc\",\n  \"security\": \"tls\",\n  \"tlsSettings\": {\n    \"serverName\": \"' .\n    (!empty($sni) && ($serverType == \"sanaei\" || $serverType == \"alireza\") ?  $sni: parse_url($panel_url, PHP_URL_HOST))\n     . '\",\n    \"certificates\": [\n      {\n        \"certificateFile\": \"' . $certificateFile . '\",\n        \"keyFile\": \"' . $keyFile . '\"\n      }\n    ],\n    \"alpn\": []'\n    .'\n  },\n  \"grpcSettings\": {\n    \"serviceName\": \"\"\n  }\n}';\n\t\t    }else{\n\t\t\t$streamSettings = '{\n  \"network\": \"grpc\",\n  \"security\": \"none\",\n  \"grpcSettings\": {\n    \"serviceName\": \"' . parse_url($panel_url, PHP_URL_HOST) . '\"\n  }\n}';\n\t\t}\n\t    }\n\n\n        $dataArr = array('up' => $row->up,'down' => $row->down,'total' => $row->total,'remark' => $remark,'enable' => 'true',\n            'expiryTime' => $row->expiryTime,'listen' => '','port' => $row->port,'protocol' => $protocol,'settings' => $settings,'streamSettings' => $streamSettings,\n            'sniffing' => $row->sniffing);\n    }else{\n        if($netType != \"grpc\"){\n            if($rahgozar == true){\n                $wsSettings = '{\n                      \"network\": \"ws\",\n                      \"security\": \"none\",\n                      \"wsSettings\": {\n                        \"path\": \"/wss' . $row->port . '\",\n                        \"headers\": {}\n                      }\n                    }';\n            }\n            else{\n                if($security == 'tls') {\n                    $tcpSettings = '{\n            \t  \"network\": \"tcp\",\n            \t  \"security\": \"'.$security.'\",\n            \t  \"tlsSettings\": '.$tlsSettings.',\n            \t  \"tcpSettings\": {\n                    \"header\": '.$headers.'\n                  }\n            \t}';\n                    $wsSettings = '{\n                  \"network\": \"ws\",\n                  \"security\": \"'.$security.'\",\n            \t  \"tlsSettings\": '.$tlsSettings.',\n                  \"wsSettings\": {\n                    \"path\": \"/\",\n                    \"headers\": '.$headers.'\n                  }\n                }';\n                }\n                elseif($security == 'xtls' && $serverType != \"sanaei\" && $serverType != \"alireza\") {\n                    $tcpSettings = '{\n            \t  \"network\": \"tcp\",\n            \t  \"security\": \"'.$security.'\",\n            \t  \"' . $xtlsTitle . '\": '.$tlsSettings.',\n            \t  \"tcpSettings\": {\n                    \"header\": '.$headers.'\n                  }\n            \t}';\n                    $wsSettings = '{\n                  \"network\": \"ws\",\n                  \"security\": \"'.$security.'\",\n            \t  \"' . $xtlsTitle . '\": '.$tlsSettings.',\n                  \"wsSettings\": {\n                    \"path\": \"/\",\n                    \"headers\": '.$headers.'\n                  }\n                }';\n                }\n                else {\n                    $tcpSettings = '{\n            \t  \"network\": \"tcp\",\n            \t  \"security\": \"none\",\n            \t  \"tcpSettings\": {\n            \t\t\"header\": '.$headers.'\n            \t  }\n            \t}';\n                    $wsSettings = '{\n                  \"network\": \"ws\",\n                  \"security\": \"none\",\n                  \"wsSettings\": {\n                    \"path\": \"/\",\n                    \"headers\": {}\n                  }\n                }';\n                }\n            }\n            $streamSettings = ($netType == 'tcp') ? $tcpSettings : $wsSettings;\n        }\n\n        $dataArr = array('up' => $row->up,'down' => $row->down,'total' => $row->total,'remark' => $remark,'enable' => 'true',\n            'expiryTime' => $row->expiryTime,'listen' => '','port' => $row->port,'protocol' => $protocol,'settings' => $settings,\n            'streamSettings' => $streamSettings,\n            'sniffing' => $row->sniffing);\n    }\n\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    \n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n        \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\n\n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n\n    $loginResponse = json_decode($body,true);\n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse;\n    }\n    \n    if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/update/$iid\";\n    else $url = \"$panel_url/xui/inbound/update/$iid\";\n    curl_setopt_array($curl, array(\n        CURLOPT_URL => $url,\n        CURLOPT_RETURNTRANSFER => true,\n        CURLOPT_ENCODING => '',\n        CURLOPT_MAXREDIRS => 10,\n        CURLOPT_CONNECTTIMEOUT => 15,\n        CURLOPT_TIMEOUT => 15,\n        CURLOPT_FOLLOWLOCATION => true,\n        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n        CURLOPT_CUSTOMREQUEST => 'POST',\n        CURLOPT_POSTFIELDS => $dataArr,\n        CURLOPT_SSL_VERIFYHOST => false,\n        CURLOPT_SSL_VERIFYPEER => false,\n        CURLOPT_HEADER => false,\n        CURLOPT_HTTPHEADER => array(\n            'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n            'Accept:  application/json, text/plain, */*',\n            'Accept-Language:  en-US,en;q=0.5',\n            'Accept-Encoding:  gzip, deflate',\n            'X-Requested-With:  XMLHttpRequest',\n            'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n        )\n    ));\n\n    $response = curl_exec($curl);\n    curl_close($curl);\n    return $response = json_decode($response);\n}\nfunction editInbound($server_id, $uniqid, $uuid, $protocol, $netType = 'tcp', $security = 'none', $rahgozar = false){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n    $security = $server_info['security'];\n    $tlsSettings = $server_info['tlsSettings'];\n    $header_type = $server_info['header_type'];\n    $request_header = $server_info['request_header'];\n    $response_header = $server_info['response_header'];\n    $serverType = $server_info['type'];\n    $xtlsTitle = ($serverType == \"sanaei\" || $serverType == \"alireza\")?\"XTLSSettings\":\"xtlsSettings\";\n    $sni = $server_info['sni'];\n    if(!empty($sni) && ($serverType == \"sanaei\" || $serverType == \"alireza\")){\n        $tlsSettings = json_decode($tlsSettings,true);\n        $tlsSettings['serverName'] = $sni;\n        $tlsSettings = json_encode($tlsSettings);\n    }\n\n    $response = getJson($server_id);\n    if(!$response) return null;\n    $response = $response->obj;\n    foreach($response as $row){\n        $clients = json_decode($row->settings)->clients;\n        if($clients[0]->id == $uuid || $clients[0]->password == $uuid) {\n            $iid = $row->id;\n            $remark = $row->remark;\n            $streamSettings = $row->streamSettings;\n            $settings = $row->settings;\n            break;\n        }\n    }\n    if(!intval($iid)) return;\n\n    $headers = getNewHeaders($netType, $request_header, $response_header, $header_type);\n    $headers = empty($headers)?\"{}\":$headers;\n\n    if($protocol == 'trojan'){\n        if($security == 'none'){\n            $tcpSettings = '{\n        \t  \"network\": \"tcp\",\n        \t  \"security\": \"'.$security.'\",\n        \t  \"tlsSettings\": '.$tlsSettings.',\n        \t  \"tcpSettings\": {\n                \"header\": '.$headers.'\n              }\n        \t}';\n                $wsSettings = '{\n              \"network\": \"ws\",\n              \"security\": \"'.$security.'\",\n        \t  \"tlsSettings\": '.$tlsSettings.',\n              \"wsSettings\": {\n                \"path\": \"/\",\n                \"headers\": '.$headers.'\n              }\n            }';\n\n    \tif($serverType == \"sanaei\" || $serverType == \"alireza\"){\n            $settings = '{\n        \t  \"clients\": [\n        \t\t{\n        \t\t  \"id\": \"'.$uniqid.'\",\n                  \"enable\": true,\n        \t\t  \"email\": \"' . $remark. '\",\n                  \"limitIp\": 0,\n                  \"totalGB\": 0,\n                  \"expiryTime\": 0,\n                  \"subId\": \"' . RandomString(16) . '\"\n        \t\t}\n        \t  ],\n        \t  \"decryption\": \"none\",\n        \t  \"fallbacks\": []\n        \t}';\n    \t}else{\n            $settings = '{\n        \t  \"clients\": [\n        \t\t{\n        \t\t  \"id\": \"'.$uniqid.'\",\n        \t\t  \"flow\": \"\",\n        \t\t  \"email\": \"' . $remark. '\"\n        \t\t}\n        \t  ],\n        \t  \"decryption\": \"none\",\n        \t  \"fallbacks\": []\n        \t}';\n    \t}\n        }elseif($security == 'xtls' && $serverType != \"sanaei\" && $serverType != \"alireza\") {\n            \n            $tcpSettings = '{\n        \t  \"network\": \"tcp\",\n        \t  \"security\": \"'.$security.'\",\n        \t  \"' . $xtlsTitle . '\": '.$tlsSettings.',\n        \t  \"tcpSettings\": {\n                \"header\": '.$headers.'\n              }\n        \t}';\n                $wsSettings = '{\n              \"network\": \"ws\",\n              \"security\": \"'.$security.'\",\n        \t  \"' . $xtlsTitle . '\": '.$tlsSettings.',\n              \"wsSettings\": {\n                \"path\": \"/\",\n                \"headers\": '.$headers.'\n              }\n            }';\n\n                $settings = '{\n              \"clients\": [\n                {\n                  \"id\": \"'.$uniqid.'\",\n    \t\t\t  \"flow\": \"xtls-rprx-direct\".\n    \t\t\t  \"email\": \"' . $remark. '\"\n                }\n              ],\n              \"decryption\": \"none\",\n        \t  \"fallbacks\": []\n            }';\n        }\n        else{\n            $tcpSettings = '{\n        \t  \"network\": \"tcp\",\n        \t  \"security\": \"'.$security.'\",\n        \t  \"tlsSettings\": '.$tlsSettings.',\n        \t  \"tcpSettings\": {\n                \"header\": '.$headers.'\n              }\n        \t}';\n            $wsSettings = '{\n              \"network\": \"ws\",\n              \"security\": \"'.$security.'\",\n        \t  \"tlsSettings\": '.$tlsSettings.',\n              \"wsSettings\": {\n                \"path\": \"/\",\n                \"headers\": '.$headers.'\n              }\n            }';\n\t\tif($serverType == \"sanaei\" || $serverType == \"alireza\"){\n            $settings = '{\n\t\t  \"clients\": [\n\t\t\t{\n\t\t\t  \"password\": \"'.$uniqid.'\",\n              \"enable\": true,\n\t\t\t  \"email\": \"' . $remark. '\",\n              \"limitIp\": 0,\n              \"totalGB\": 0,\n              \"expiryTime\": 0,\n              \"subId\": \"' . RandomString(16) . '\"\n\t\t\t}\n\t\t  ],\n\t\t  \"fallbacks\": []\n\t\t}';\n\t\t}else{\n            $settings = '{\n\t\t  \"clients\": [\n\t\t\t{\n\t\t\t  \"password\": \"'.$uniqid.'\",\n\t\t\t  \"flow\": \"\",\n\t\t\t  \"email\": \"' . $remark. '\"\n\t\t\t}\n\t\t  ],\n\t\t  \"fallbacks\": []\n\t\t}';\n\t\t}\n        }\n        \n        \n                $streamSettings = ($netType == 'tcp') ? $tcpSettings : $wsSettings;\n\t\tif($netType == 'grpc'){\n\t\t    $keyFileInfo = json_decode($tlsSettings,true);\n\t\t    $certificateFile = \"/root/cert.crt\";\n\t\t    $keyFile = '/root/private.key';\n\t\t    \n\t\t    if(isset($keyFileInfo['certificates'])){\n\t\t        $certificateFile = $keyFileInfo['certificates'][0]['certificateFile'];\n\t\t        $keyFile = $keyFileInfo['certificates'][0]['keyFile'];\n\t\t    }\n\n\t\t\tif($security == 'tls') {\n\t\t\t\t$streamSettings = '{\n  \"network\": \"grpc\",\n  \"security\": \"tls\",\n  \"tlsSettings\": {\n    \"serverName\": \"' .\n    (!empty($sni) && ($serverType == \"sanaei\" || $serverType == \"alireza\") ?  $sni: parse_url($panel_url, PHP_URL_HOST))\n     . '\",\n    \"certificates\": [\n      {\n        \"certificateFile\": \"' . $certificateFile . '\",\n        \"keyFile\": \"' . $keyFile . '\"\n      }\n    ],\n    \"alpn\": []'\n    .'\n  },\n  \"grpcSettings\": {\n    \"serviceName\": \"\"\n  }\n}';\n\t\t    }else{\n\t\t\t$streamSettings = '{\n  \"network\": \"grpc\",\n  \"security\": \"none\",\n  \"grpcSettings\": {\n    \"serviceName\": \"' . parse_url($panel_url, PHP_URL_HOST) . '\"\n  }\n}';\n\t\t}\n\t    }\n\n\n        $dataArr = array('up' => $row->up,'down' => $row->down,'total' => $row->total,'remark' => $remark,'enable' => 'true',\n            'expiryTime' => $row->expiryTime,'listen' => '','port' => $row->port,'protocol' => $protocol,'settings' => $settings,'streamSettings' => $streamSettings,\n            'sniffing' => $row->sniffing);\n    }else{\n        if($netType != \"grpc\"){\n            if($rahgozar == true){\n                $wsSettings = '{\n                      \"network\": \"ws\",\n                      \"security\": \"none\",\n                      \"wsSettings\": {\n                        \"path\": \"/wss' . $row->port . '\",\n                        \"headers\": {}\n                      }\n                    }';\n                if($serverType == \"sanaei\" || $serverType == \"alireza\"){\n                    $settings = '{\n            \t  \"clients\": [\n            \t\t{\n            \t\t  \"id\": \"'.$client_id.'\",\n                      \"enable\": true,\n            \t\t  \"email\": \"' . $remark. '\",\n                      \"limitIp\": 0,\n                      \"totalGB\": 0,\n                      \"expiryTime\": 0\n                      \"subId\": \"' . RandomString(16) . '\"\n            \t\t}\n            \t  ],\n            \t  \"decryption\": \"none\",\n            \t  \"fallbacks\": []\n            \t}';\n                }else{\n                $settings = '{\n        \t  \"clients\": [\n        \t\t{\n        \t\t  \"id\": \"'.$client_id.'\",\n        \t\t  \"flow\": \"\",\n        \t\t  \"email\": \"' . $remark. '\"\n        \t\t}\n        \t  ],\n        \t  \"decryption\": \"none\",\n        \t  \"fallbacks\": []\n        \t}';\n            }\n            }\n            else{\n                if($security == 'tls') {\n                    $tcpSettings = '{\n            \t  \"network\": \"tcp\",\n            \t  \"security\": \"'.$security.'\",\n            \t  \"tlsSettings\": '.$tlsSettings.',\n            \t  \"tcpSettings\": {\n                    \"header\": '.$headers.'\n                  }\n            \t}';\n                    $wsSettings = '{\n                  \"network\": \"ws\",\n                  \"security\": \"'.$security.'\",\n            \t  \"tlsSettings\": '.$tlsSettings.',\n                  \"wsSettings\": {\n                    \"path\": \"/\",\n                    \"headers\": '.$headers.'\n                  }\n                }';\n                if($serverType == \"sanaei\" || $serverType == \"alireza\"){\n                    $settings = '{\n                  \"clients\": [\n                    {\n                      \"id\": \"'.$uniqid.'\",\n                      \"enable\": true,\n                      \"email\": \"' . $remark. '\",\n                      \"limitIp\": 0,\n                      \"totalGB\": 0,\n                      \"expiryTime\": 0,\n                      \"subId\": \"' . RandomString(16) . '\"\n                    }\n                  ],\n                  \"decryption\": \"none\",\n            \t  \"fallbacks\": []\n                }';\n                }else{\n                    $settings = '{\n                  \"clients\": [\n                    {\n                      \"id\": \"'.$uniqid.'\",\n                      \"alterId\": 0\n                    }\n                  ],\n                  \"decryption\": \"none\",\n            \t  \"fallbacks\": []\n                }';\n                }\n                }\n                elseif($security == 'xtls' && $serverType != \"sanaei\" && $serverType != \"alireza\") {\n                    $tcpSettings = '{\n            \t  \"network\": \"tcp\",\n            \t  \"security\": \"'.$security.'\",\n            \t  \"' . $xtlsTitle . '\": '.$tlsSettings.',\n            \t  \"tcpSettings\": {\n                    \"header\": '.$headers.'\n                  }\n            \t}';\n                    $wsSettings = '{\n                  \"network\": \"ws\",\n                  \"security\": \"'.$security.'\",\n            \t  \"' . $xtlsTitle . '\": '.$tlsSettings.',\n                  \"wsSettings\": {\n                    \"path\": \"/\",\n                    \"headers\": '.$headers.'\n                  }\n                }';\n                if($serverType == \"sanaei\" || $serverType == \"alireza\"){\n                    $settings = '{\n                  \"clients\": [\n                    {\n                      \"id\": \"'.$uniqid.'\",\n                      \"enable\": true,\n                      \"email\": \"' . $remark. '\",\n                      \"limitIp\": 0,\n                      \"totalGB\": 0,\n                      \"expiryTime\": 0,\n                      \"subId\": \"' . RandomString(16) . '\"\n                    }\n                  ],\n                  \"decryption\": \"none\",\n            \t  \"fallbacks\": []\n                }';\n                }else{\n                    $settings = '{\n                  \"clients\": [\n                    {\n                      \"id\": \"'.$uniqid.'\",\n        \t\t\t  \"flow\": \"\",\n        \t\t\t  \"email\": \"' . $remark. '\"\n                    }\n                  ],\n                  \"decryption\": \"none\",\n            \t  \"fallbacks\": []\n                }';\n                }\n                }\n                else {\n                    $tcpSettings = '{\n            \t  \"network\": \"tcp\",\n            \t  \"security\": \"none\",\n            \t  \"tcpSettings\": {\n            \t\t\"header\": '.$headers.'\n            \t  }\n            \t}';\n                    $wsSettings = '{\n                  \"network\": \"ws\",\n                  \"security\": \"none\",\n                  \"wsSettings\": {\n                    \"path\": \"/\",\n                    \"headers\": {}\n                  }\n                }';\n                if($serverType == \"sanaei\" || $serverType == \"alireza\"){\n                    $settings = '{\n            \t  \"clients\": [\n            \t\t{\n            \t\t  \"id\": \"'.$uniqid.'\",\n                      \"enable\": true,\n            \t\t  \"email\": \"' . $remark. '\",\n                      \"limitIp\": 0,\n                      \"totalGB\": 0,\n                      \"expiryTime\": 0,\n                      \"subId\": \"' . RandomString(16) . '\"\n            \t\t}\n            \t  ],\n            \t  \"decryption\": \"none\",\n            \t  \"fallbacks\": []\n            \t}';\n                }else{\n                    $settings = '{\n            \t  \"clients\": [\n            \t\t{\n            \t\t  \"id\": \"'.$uniqid.'\",\n            \t\t  \"flow\": \"\",\n            \t\t  \"email\": \"' . $remark. '\"\n            \t\t}\n            \t  ],\n            \t  \"decryption\": \"none\",\n            \t  \"fallbacks\": []\n            \t}';\n                }\n                }\n            }\n            $streamSettings = ($netType == 'tcp') ? $tcpSettings : $wsSettings;\n        }\n\n\n        $dataArr = array('up' => $row->up,'down' => $row->down,'total' => $row->total,'remark' => $remark,'enable' => 'true',\n            'expiryTime' => $row->expiryTime,'listen' => '','port' => $row->port,'protocol' => $protocol,'settings' => $settings,\n            'streamSettings' => $streamSettings,\n            'sniffing' => $row->sniffing);\n    }\n\n\n\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    \n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n        \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\n\n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n\n    $loginResponse = json_decode($body,true);\n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse;\n    }\n    \n    if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/update/$iid\";\n    else $url = \"$panel_url/xui/inbound/update/$iid\";\n    \n    curl_setopt_array($curl, array(\n        CURLOPT_URL => $url,\n        CURLOPT_RETURNTRANSFER => true,\n        CURLOPT_ENCODING => '',\n        CURLOPT_MAXREDIRS => 10,\n        CURLOPT_CONNECTTIMEOUT => 15,\n        CURLOPT_TIMEOUT => 15,\n        CURLOPT_FOLLOWLOCATION => true,\n        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n        CURLOPT_CUSTOMREQUEST => 'POST',\n        CURLOPT_POSTFIELDS => $dataArr,\n        CURLOPT_SSL_VERIFYHOST => false,\n        CURLOPT_SSL_VERIFYPEER => false,\n        CURLOPT_HEADER => false,\n        CURLOPT_HTTPHEADER => array(\n            'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n            'Accept:  application/json, text/plain, */*',\n            'Accept-Language:  en-US,en;q=0.5',\n            'Accept-Encoding:  gzip, deflate',\n            'X-Requested-With:  XMLHttpRequest',\n            'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n        )\n    ));\n\n    $response = curl_exec($curl);\n    curl_close($curl);\n    return $response = json_decode($response);\n}\nfunction getMarzbanToken($server_id){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id = ?\");\n    $stmt->bind_param('i', $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n    \n    $panel_url = $server_info['panel_url'];\n    $username = $server_info['username'];\n    $password = $server_info['password'];\n    \n    $loginUrl = $panel_url .'/api/admin/token';\n    $postFields = array(\n        'username' => $username,\n        'password' => $password\n    );\n    \n    \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HTTPHEADER, array(\n            'Content-Type: application/x-www-form-urlencoded',\n            'accept: application/json'\n        ));\n    $response = curl_exec($curl);\n    if (curl_error($curl)) {\n        return (object) ['success'=>false, 'detail'=>curl_error($curl)];\n    }\n    curl_close($curl);\n\n    return json_decode($response);\n}\nfunction getMarzbanJson($server_id, $token = null){\n    global $connection;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n\n    if($token == null) $token = getMarzbanToken($server_id);\n    if(isset($token->detail)){return (object) ['success'=>false, 'msg'=>$token->detail];}\n    $panel_url .= '/api/users';\n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $panel_url);\n    curl_setopt($curl, CURLOPT_HTTPGET, true);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($curl, CURLOPT_HTTPHEADER, array(\n        'Accept: application/json',\n        'Authorization: Bearer ' . $token->access_token\n    ));\n\n    $response = json_decode(curl_exec($curl));\n    curl_close($curl);\n\n    return $response;\n}\nfunction getMarzbanUserInfo($server_id, $remark){\n    global $connection;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n\n    $configInfo = array();\n    $curl = curl_init();\n    for($i = 0; $i <= 10; $i++){\n        $info = getMarzbanUser($server_id, $remark);\n\t\t$subLink = \"/sub/\" . (explode(\"/sub/\", $info->subscription_url)[1]);\n\t\t$info->subscription_url = $subLink;\n        curl_setopt($curl, CURLOPT_URL, $panel_url . $info->subscription_url);\n        curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n        $response = curl_exec($curl);\n        if($response && !curl_error($curl)){\n            $configInfo = $info;\n            break;\n        }\n\t\tif($i == 10) $configInfo = $info;\n    }\n    curl_close($curl);\n\n    return (object) $configInfo;\n}\nfunction getMarzbanUser($server_id, $remark, $token = null){\n    global $connection;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n\n    if($token == null) $token = getMarzbanToken($server_id);\n    if(isset($token->detail)){return (object) ['success'=>false, 'msg'=>$token->detail];}\n    \n    $panel_url .= '/api/user/' . urlencode($remark);\n\n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $panel_url);\n    curl_setopt($curl, CURLOPT_HTTPGET, true);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($curl, CURLOPT_HTTPHEADER, array(\n        'Accept: application/json',\n        'Authorization: Bearer ' . $token->access_token\n    ));\n\n    $response = json_decode(curl_exec($curl));\n    \n    curl_close($curl);\n    return $response;\n}\nfunction getMarzbanHosts($server_id){\n    global $connection;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n\n    $token = getMarzbanToken($server_id);\n    if(isset($token->detail)){return (object) ['success'=>false, 'msg'=>$token->detail];}\n\n    $panel_url .= '/api/core/config';\n\n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $panel_url);\n    curl_setopt($curl, CURLOPT_HTTPGET, true);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($curl, CURLOPT_HTTPHEADER, array(\n        'Accept: application/json',\n        'Authorization: Bearer ' . $token->access_token\n    ));\n\n    $response = json_decode(curl_exec($curl));\n    \n    curl_close($curl);\n    return $response;\n}\nfunction addMarzbanUser($server_id, $remark, $volume, $days, $plan_id){\n    global $connection;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    $serverType = $server_info['type'];\n    \n    \n    $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id` = ?\");\n    $stmt->bind_param('i', $plan_id);\n    $stmt->execute();\n    $planInfo = json_decode($stmt->get_result()->fetch_assoc()['custom_sni'],true);\n    $stmt->close();\n\n    $token = getMarzbanToken($server_id);\n    if(isset($token->detail)){return (object) ['success'=>false, 'msg'=>$token->detail];}\n    $postFields = array(\n        \"inbounds\" => $planInfo['inbounds'],\n        \"proxies\" => $planInfo['proxies'],\n        \"expire\" => time() + (86400 * $days),\n        \"data_limit\" => $volume * 1073741824,\n        \"username\" => urlencode($remark)\n    );\n\n\n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $panel_url . \"/api/user\");\n    curl_setopt($curl, CURLOPT_POST, true);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($curl, CURLOPT_HTTPHEADER, array(\n        'Accept: application/json',\n        'Authorization: Bearer ' .  $token->access_token,\n        'Content-Type: application/json'\n    ));\n    curl_setopt($curl, CURLOPT_POSTFIELDS, json_encode($postFields));\n\n    $response = json_decode(curl_exec($curl));\n    curl_close($curl);\n    if(isset($response->detail) || !isset($response->links)){\n\t\t$detail = $response->detail;\n        return (object) ['success'=>false, 'msg' => is_object($detail)?implode(\"-\", (array) $detail):$detail];\n    }\n    $userInfo = getMarzbanUserInfo($server_id, $remark);\n\n    return (object) [\n        'success'=>true,\n        'sub_link'=> $userInfo->subscription_url,\n        'vray_links' => $response->links\n        ];\n}\nfunction editMarzbanConfig($server_id,$info){\n    global $connection;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n\n    $token = getMarzbanToken($server_id);\n    if(isset($token->detail)){return (object) ['success'=>false, 'msg'=>$token->error];}\n\n    $remark = $info['remark'];\n    $configInfo = getMarzbanUser($server_id, $remark, $token);\n    \n    \n    $expireTime = $configInfo->expire;\n    $volume = $configInfo->data_limit;\n    $configState = $configInfo->status;\n    \n    if(isset($info['plus_day'])){\n        if($expireTime < time()) $expireTime = time() + (86400 * $info['plus_day']);\n        else $expireTime += (86400 * $info['plus_day']);\n    }\n    elseif(isset($info['days'])) $expireTime = time() + (86400 * $info['days']);\n    \n    if(isset($info['plus_volume'])) $volume += $info['plus_volume'] * 1073741824;\n    elseif(isset($info['volume'])){\n        $volume = $info['volume'] * 1073741824;\n        $response = resetMarzbanTraffic($server_id, $remark, $token);\n        \n        if(!$response->success) return $response;\n    }\n    \n    $postFields = array(\n        \"inbounds\" => $configInfo->inbounds,\n        \"proxies\" => $configInfo->proxies,\n        \"expire\" => $expireTime,\n        \"data_limit\" => $volume,\n        \"username\" => urlencode($remark),\n        \"note\" => $configInfo->note,\n        \"data_limit_reset_strategy\"=> $configInfo->data_limit_reset_strategy,\n        \"status\" => \"active\"\n    );\n    \n    $panel_url .=  '/api/user/'. $remark;\n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $panel_url);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_CUSTOMREQUEST, 'PUT');\n    curl_setopt($curl, CURLOPT_POSTFIELDS, json_encode($postFields));\n    curl_setopt($curl, CURLOPT_HTTPHEADER, array(\n        'Accept: application/json',\n        'Authorization: Bearer ' .  $token->access_token,\n        'Content-Type: application/json'\n        ));\n    \n    $response = curl_exec($curl);\n    curl_close($curl);\n    if(isset($response->detail)){\n\t\t$detail = $response->detail;\n        return (object) ['success'=>false, 'msg' => is_object($detail)?implode(\"-\", (array) $detail):$detail];\n    }\n    return (object) ['success'=>true];\n}\nfunction resetMarzbanTraffic($server_id, $remark, $token){\n    global $connection;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n\n    if($token == null) $token = getMarzbanToken($server_id);\n    if(isset($token->detail)){return (object) ['success'=>false, 'msg'=>$token->detail];}\n\n    $panel_url .=  '/api/user/' . $remark .'/reset';\n\n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $panel_url);\n    curl_setopt($curl, CURLOPT_POST , true);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($curl, CURLOPT_HTTPHEADER, array(\n        'Accept: application/json',\n        'Authorization: Bearer ' .  $token->access_token\n    ));\n\n    $response = curl_exec($curl);\n    curl_close($curl);\n    if(isset($response->detail)){\n\t\t$detail = $response->detail;\n        return (object) ['success'=>false, 'msg' => is_object($detail)?implode(\"-\", (array) $detail):$detail];\n    }\n    return (object) ['success'=>true];\n}\nfunction renewMarzbanUUID($server_id,$remark){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n    $token = getMarzbanToken($server_id);\n    if(isset($token->detail)){return (object) ['success'=>false, 'msg'=>$token->detail];}\n    $panel_url .= '/api/user/' . $remark .'/revoke_sub';\n\n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $panel_url);\n    curl_setopt($curl, CURLOPT_POST , true);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($curl, CURLOPT_HTTPHEADER, array(\n        'Accept: application/json',\n        'Authorization: Bearer ' .  $token->access_token\n    ));\n\n    $response = json_decode(curl_exec($curl));\n    curl_close($curl);\n    if(isset($response->detail)){\n\t\t$detail = $response->detail;\n        return (object) ['success'=>false, 'msg' => is_object($detail)?implode(\"-\", (array) $detail):$detail];\n    }\n    $response = getMarzbanUserInfo($server_id, $remark);\n    return $response;\n}\n\nfunction deleteMarzban($server_id,$remark){\n    global $connection;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    $serverType = $server_info['type'];\n    \n    $token = getMarzbanToken($server_id);\n    if(isset($token->detail)){return (object) ['success'=>false, 'msg'=>$token->detail];}\n    $panel_url .=  '/api/user/'. urlencode($remark);\n\n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $panel_url);\n    curl_setopt($curl, CURLOPT_CUSTOMREQUEST, 'DELETE');\n    curl_setopt($curl, CURLOPT_HTTPGET, true);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($curl, CURLOPT_HTTPHEADER, array(\n        'Accept: application/json',\n        'Authorization: Bearer ' .  $token->access_token\n    ));\n\n    $response = json_decode(curl_exec($curl));\n    curl_close($curl);\n    \n    if(isset($response->detail)){\n\t\t$detail = $response->detail;\n        return (object) ['success'=>false, 'msg' => is_object($detail)?implode(\"-\", (array) $detail):$detail];\n    }\n    \n    return (object) ['success'=>true];\n}\nfunction changeMarzbanState($server_id,$remark){\n    global $connection;\n    \n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    $serverType = $server_info['type'];\n    \n    $token = getMarzbanToken($server_id);\n    if(isset($token->detail)){return (object) ['success'=>false, 'msg'=>$token->detail];}\n    $configInfo = getMarzbanUser($server_id, $remark, $token);\n\n    $panel_url .=  '/api/user/'. $remark;\n\n    $postFields = array(\n        \"inbounds\" => $configInfo->inbounds,\n        \"proxies\" => $configInfo->proxies,\n        \"expire\" => $configInfo->expire,\n        \"data_limit\" => $configInfo->data_limit,\n        \"username\" => urlencode($remark),\n        \"note\" => $configInfo->note,\n        \"data_limit_reset_strategy\"=> $configInfo->data_limit_reset_strategy,\n        \"status\" => $configInfo->status == \"active\"?\"disabled\":\"active\"\n    );\n\n\n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $panel_url);\n    curl_setopt($curl, CURLOPT_CUSTOMREQUEST, 'PUT');\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($curl, CURLOPT_HTTPHEADER, array(\n        'Accept: application/json',\n        'Authorization: Bearer ' .  $token->access_token,\n        'Content-Type: application/json'\n    ));\n    curl_setopt($curl, CURLOPT_POSTFIELDS, json_encode($postFields));\n\n    $response = json_decode(curl_exec($curl));\n    curl_close($curl);\n\n    if(isset($response->detail)){\n\t\t$detail = $response->detail;\n        return (object) ['success'=>false, 'msg' => is_object($detail)?implode(\"-\", (array) $detail):$detail];\n    }\n    return (object) ['success'=>true];\n}\nfunction getJson($server_id){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    $serverType = $server_info['type'];\n\n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n        \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\n    \n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n\n    $loginResponse = json_decode($body,true);\n    \n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse;\n    }\n    if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/list\";\n    else $url = \"$panel_url/xui/inbound/list\";\n    curl_setopt_array($curl, array(\n        CURLOPT_URL => $url,\n        CURLOPT_RETURNTRANSFER => true,\n        CURLOPT_ENCODING => '',\n        CURLOPT_MAXREDIRS => 10,\n        CURLOPT_CONNECTTIMEOUT => 15,\n        CURLOPT_TIMEOUT => 15,\n        CURLOPT_FOLLOWLOCATION => true,\n        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n        CURLOPT_CUSTOMREQUEST => 'POST',\n        CURLOPT_HEADER => false,\n        CURLOPT_HTTPHEADER => array(\n            'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n            'Accept:  application/json, text/plain, */*',\n            'Accept-Language:  en-US,en;q=0.5',\n            'Accept-Encoding:  gzip, deflate',\n            'X-Requested-With:  XMLHttpRequest',\n            'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n        ),\n        CURLOPT_SSL_VERIFYHOST => false,\n        CURLOPT_SSL_VERIFYPEER => false,\n    ));\n    \n    $response = curl_exec($curl);\n    curl_close($curl);\n    return json_decode($response);\n}\nfunction getNewCert($server_id){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    \n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n        \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\n\n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n\n    $loginResponse = json_decode($body,true);\n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse;\n    }\n    \n    curl_setopt_array($curl, array(\n        CURLOPT_URL => \"$panel_url/server/getNewX25519Cert\",\n        CURLOPT_RETURNTRANSFER => true,\n        CURLOPT_ENCODING => '',\n        CURLOPT_MAXREDIRS => 10,\n        CURLOPT_CONNECTTIMEOUT => 15,\n        CURLOPT_TIMEOUT => 15,\n        CURLOPT_FOLLOWLOCATION => true,\n        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n        CURLOPT_CUSTOMREQUEST => 'POST',\n        CURLOPT_SSL_VERIFYHOST => false,\n        CURLOPT_SSL_VERIFYPEER => false,\n        CURLOPT_HEADER => false,\n        CURLOPT_HTTPHEADER => array(\n            'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n            'Accept:  application/json, text/plain, */*',\n            'Accept-Language:  en-US,en;q=0.5',\n            'Accept-Encoding:  gzip, deflate',\n            'X-Requested-With:  XMLHttpRequest',\n            'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n        )\n    ));\n\n    $response = curl_exec($curl);\n    curl_close($curl);\n    return $response = json_decode($response);\n}\nfunction addUser($server_id, $client_id, $protocol, $port, $expiryTime, $remark, $volume, $netType, $security = 'none', $rahgozar = false, $planId = null){\n    global $connection;\n    $stmt = $connection->prepare(\"SELECT * FROM server_config WHERE id=?\");\n    $stmt->bind_param(\"i\", $server_id);\n    $stmt->execute();\n    $server_info = $stmt->get_result()->fetch_assoc();\n    $stmt->close();\n\n    $panel_url = $server_info['panel_url'];\n    $security = $server_info['security'];\n    $tlsSettings = $server_info['tlsSettings'];\n    $header_type = $server_info['header_type'];\n    $request_header = $server_info['request_header'];\n    $response_header = $server_info['response_header'];\n    $sni = $server_info['sni'];\n    $serverType = $server_info['type'];\n    $xtlsTitle = ($serverType == \"sanaei\" || $serverType == \"alireza\")?\"XTLSSettings\":\"xtlsSettings\";\n    $reality = $server_info['reality'];\n\n    if(!empty($sni) && ($serverType == \"sanaei\" || $serverType == \"alireza\")){\n        $tlsSettings = json_decode($tlsSettings,true);\n        $tlsSettings['serverName'] = $sni;\n        $tlsSettings = json_encode($tlsSettings);\n    }\n    \n    $volume = ($volume == 0) ? 0 : floor($volume * 1073741824);\n    $headers = getNewHeaders($netType, $request_header, $response_header, $header_type);\n//---------------------------------------Trojan------------------------------------//\n    if($protocol == 'trojan'){\n        // protocol trojan\n        if($security == 'none'){\n            \n            $tcpSettings = '{\n        \t  \"network\": \"tcp\",\n        \t  \"security\": \"'.$security.'\",\n        \t  \"tlsSettings\": '.$tlsSettings.',\n        \t  \"tcpSettings\": {\n                \"header\": '.$headers.'\n              }\n        \t}';\n            $wsSettings = '{\n              \"network\": \"ws\",\n              \"security\": \"'.$security.'\", \n        \t  \"tlsSettings\": '.$tlsSettings.',\n              \"wsSettings\": {\n                \"path\": \"/\",\n                \"headers\": '.$headers.'\n              }\n            }';\n            \n        \tif($serverType == \"sanaei\" || $serverType == \"alireza\"){\n                $settings = '{\n        \t  \"clients\": [\n        \t\t{\n        \t\t  \"id\": \"'.$client_id.'\",\n                  \"enable\": true,\n                  \"email\": \"' . $remark. '\",\n                  \"limitIp\": 0,\n                  \"totalGB\": 0,\n                  \"expiryTime\": 0,\n                  \"subId\": \"' . RandomString(16) . '\"\n        \t\t}\n        \t  ],\n        \t  \"decryption\": \"none\",\n        \t  \"fallbacks\": []\n        \t}';\n        \t}else{\n                $settings = '{\n        \t  \"clients\": [\n        \t\t{\n        \t\t  \"id\": \"'.$client_id.'\",\n        \t\t  \"flow\": \"\",\n        \t\t  \"email\": \"' . $remark. '\"\n        \t\t}\n        \t  ],\n        \t  \"decryption\": \"none\",\n        \t  \"fallbacks\": []\n        \t}';\n        \t}\n        }elseif($security == 'xtls' && $serverType != \"sanaei\" && $serverType != \"alireza\") {\n                    $tcpSettings = '{\n                \t  \"network\": \"tcp\",\n                \t  \"security\": \"'.$security.'\",\n                \t  \"' . $xtlsTitle . '\": '.$tlsSettings.',\n                \t  \"tcpSettings\": {\n                        \"header\": '.$headers.'\n                      }\n                \t}';\n\n                    $wsSettings = '{\n                  \"network\": \"ws\",\n                  \"security\": \"'.$security.'\",\n            \t  \"' . $xtlsTitle .'\": '.$tlsSettings.',\n                  \"wsSettings\": {\n                    \"path\": \"/\",\n                    \"headers\": '.$headers.'\n                  }\n                }';\n                    $settings = '{\n                  \"clients\": [\n                    {\n                      \"id\": \"'.$uniqid.'\",\n                      \"alterId\": 0\n                    }\n                  ],\n                  \"decryption\": \"none\",\n            \t  \"fallbacks\": []\n                }';\n                }\n        \n        else{\n            $tcpSettings = '{\n        \t  \"network\": \"tcp\",\n        \t  \"security\": \"'.$security.'\",\n        \t  \"tlsSettings\": '.$tlsSettings.',\n        \t  \"tcpSettings\": {\n                \"header\": '.$headers.'\n              }\n        \t}';\n                $wsSettings = '{\n              \"network\": \"ws\",\n              \"security\": \"'.$security.'\",\n        \t  \"tlsSettings\": '.$tlsSettings.',\n              \"wsSettings\": {\n                \"path\": \"/\",\n                \"headers\": '.$headers.'\n              }\n            }';\n\t\tif($serverType == \"sanaei\" || $serverType == \"alireza\"){\n            $settings = '{\n\t\t  \"clients\": [\n\t\t\t{\n\t\t\t  \"password\": \"'.$client_id.'\",\n              \"enable\": true,\n              \"email\": \"' . $remark. '\",\n              \"limitIp\": 0,\n              \"totalGB\": 0,\n              \"expiryTime\": 0,\n              \"subId\": \"' . RandomString(16) . '\"\n\t\t\t}\n\t\t  ],\n\t\t  \"fallbacks\": []\n\t\t}';\n\t\t}else{\n            $settings = '{\n\t\t  \"clients\": [\n\t\t\t{\n\t\t\t  \"password\": \"'.$client_id.'\",\n\t\t\t  \"flow\": \"\",\n\t\t\t  \"email\": \"' . $remark. '\"\n\t\t\t}\n\t\t  ],\n\t\t  \"fallbacks\": []\n\t\t}';\n\t\t}\n        }\n\n\n\n        $streamSettings = ($netType == 'tcp') ? $tcpSettings : $wsSettings;\n\t\tif($netType == 'grpc'){\n\t\t    $keyFileInfo = json_decode($tlsSettings,true);\n\t\t    $certificateFile = \"/root/cert.crt\";\n\t\t    $keyFile = '/root/private.key';\n\t\t    \n\t\t    if(isset($keyFileInfo['certificates'])){\n\t\t        $certificateFile = $keyFileInfo['certificates'][0]['certificateFile'];\n\t\t        $keyFile = $keyFileInfo['certificates'][0]['keyFile'];\n\t\t    }\n\n\t\t\tif($security == 'tls') {\n\t\t\t\t$streamSettings = '{\n  \"network\": \"grpc\",\n  \"security\": \"tls\",\n  \"tlsSettings\": {\n    \"serverName\": \"' .\n    (!empty($sni) && ($serverType == \"sanaei\" || $serverType == \"alireza\") ?  $sni: parse_url($panel_url, PHP_URL_HOST))\n     . '\",\n    \"certificates\": [\n      {\n        \"certificateFile\": \"' . $certificateFile . '\",\n        \"keyFile\": \"' . $keyFile . '\"\n      }\n    ],\n    \"alpn\": []'\n    .'\n  },\n  \"grpcSettings\": {\n    \"serviceName\": \"\"\n  }\n}';\n\t\t    }else{\n\t\t\t$streamSettings = '{\n  \"network\": \"grpc\",\n  \"security\": \"none\",\n  \"grpcSettings\": {\n    \"serviceName\": \"' . parse_url($panel_url, PHP_URL_HOST) . '\"\n  }\n}';\n\t\t}\n\t    }\n\n\n\n\n        // trojan\n        $dataArr = array('up' => '0','down' => '0','total' => $volume,'remark' => $remark,'enable' => 'true','expiryTime' => $expiryTime,'listen' => '','port' => $port,'protocol' => $protocol,'settings' => $settings,'streamSettings' => $streamSettings,\n            'sniffing' => '{\n      \"enabled\": true,\n      \"destOverride\": [\n        \"http\",\n        \"tls\"\n      ]\n    }');\n    }else {\n//-------------------------------------- vmess vless -------------------------------//\n        if($rahgozar == true){\n            $wsSettings = '{\n                  \"network\": \"ws\",\n                  \"security\": \"none\",\n                  \"wsSettings\": {\n                    \"path\": \"/wss' . $port . '\",\n                    \"headers\": {}\n                  }\n                }';\n            if($serverType == \"sanaei\" || $serverType == \"alireza\"){\n                $settings = '{\n        \t  \"clients\": [\n        \t\t{\n        \t\t  \"id\": \"'.$client_id.'\",\n                  \"enable\": true,\n        \t\t  \"email\": \"' . $remark. '\",\n                  \"limitIp\": 0,\n                  \"totalGB\": 0,\n                  \"expiryTime\": 0,\n                  \"subId\": \"' . RandomString(16) . '\"\n        \t\t}\n        \t  ],\n        \t  \"decryption\": \"none\",\n        \t  \"fallbacks\": []\n        \t}';\n            }else{\n                $settings = '{\n        \t  \"clients\": [\n        \t\t{\n        \t\t  \"id\": \"'.$client_id.'\",\n        \t\t  \"flow\": \"\",\n        \t\t  \"email\": \"' . $remark. '\"\n        \t\t}\n        \t  ],\n        \t  \"decryption\": \"none\",\n        \t  \"fallbacks\": []\n        \t}';\n            }\n        }else{\n            if($security == 'tls') {\n                $tcpSettings = '{\n        \t  \"network\": \"tcp\",\n        \t  \"security\": \"'.$security.'\",\n        \t  \"tlsSettings\": '.$tlsSettings.',\n        \t  \"tcpSettings\": {\n                \"header\": '.$headers.'\n              }\n        \t}';\n                $wsSettings = '{\n              \"network\": \"ws\",\n              \"security\": \"'.$security.'\",\n        \t  \"tlsSettings\": '.$tlsSettings.',\n              \"wsSettings\": {\n                \"path\": \"/\",\n                \"headers\": '.$headers.'\n              }\n            }';\n            if($serverType == \"sanaei\" || $serverType == \"alireza\"){\n                $settings = '{\n              \"clients\": [\n                {\n                  \"id\": \"'.$client_id.'\",\n                  \"enable\": true,\n                  \"email\": \"' . $remark. '\",\n                  \"limitIp\": 0,\n                  \"totalGB\": 0,\n                  \"expiryTime\": 0,\n                  \"subId\": \"' . RandomString(16) . '\"\n                }\n              ],\n              \"disableInsecureEncryption\": false\n            }';\n            }else{\n                $settings = '{\n              \"clients\": [\n                {\n                  \"id\": \"'.$client_id.'\",\n                  \"alterId\": 0\n                }\n              ],\n              \"disableInsecureEncryption\": false\n            }';\n            }\n            }elseif($security == 'xtls' && $serverType != \"sanaei\" && $serverType != \"alireza\") {\n                $tcpSettings = '{\n        \t  \"network\": \"tcp\",\n        \t  \"security\": \"'.$security.'\",\n        \t  \"' . $xtlsTitle . '\": '.$tlsSettings.',\n        \t  \"tcpSettings\": {\n                \"header\": '.$headers.'\n              }\n        \t}';\n                $wsSettings = '{\n              \"network\": \"ws\",\n              \"security\": \"'.$security.'\",\n        \t  \"' . $xtlsTitle . '\": '.$tlsSettings.',\n              \"wsSettings\": {\n                \"path\": \"/\",\n                \"headers\": '.$headers.'\n              }\n            }';\n                $settings = '{\n              \"clients\": [\n                {\n                  \"id\": \"'.$client_id.'\",\n                  \"alterId\": 0\n                }\n              ],\n              \"disableInsecureEncryption\": false\n            }';\n            }else {\n                $tcpSettings = '{\n        \t  \"network\": \"tcp\",\n        \t  \"security\": \"none\",\n        \t  \"tcpSettings\": {\n        \t\t\"header\": '.$headers.'\n        \t  }\n        \t}';\n                $wsSettings = '{\n              \"network\": \"ws\",\n              \"security\": \"none\",\n              \"wsSettings\": {\n                \"path\": \"/\",\n                \"headers\": '.$headers.'\n              }\n            }';\n            if($serverType == \"sanaei\" || $serverType == \"alireza\"){\n                $settings = '{\n        \t  \"clients\": [\n        \t\t{\n        \t\t  \"id\": \"'.$client_id.'\",\n        \t\t  \"enable\": true,\n        \t\t  \"email\": \"' . $remark. '\",\n                  \"limitIp\": 0,\n                  \"totalGB\": 0,\n                  \"expiryTime\": 0,\n                  \"subId\": \"' . RandomString(16) . '\"\n        \t\t}\n        \t  ],\n        \t  \"decryption\": \"none\",\n        \t  \"fallbacks\": []\n        \t}';\n            }else{\n                $settings = '{\n        \t  \"clients\": [\n        \t\t{\n        \t\t  \"id\": \"'.$client_id.'\",\n        \t\t  \"flow\": \"\",\n        \t\t  \"email\": \"' . $remark. '\"\n        \t\t}\n        \t  ],\n        \t  \"decryption\": \"none\",\n        \t  \"fallbacks\": []\n        \t}';\n            }\n            }\n        }\n        \n        \n\t\tif($protocol == 'vless'){\n\t\t    if($serverType ==\"sanaei\" || $serverType == \"alireza\"){\n\t\t        if($reality == \"true\"){\n\t                $stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE `id`=?\");\n                    $stmt->bind_param(\"i\", $planId);\n                    $stmt->execute();\n                    $file_detail = $stmt->get_result()->fetch_assoc();\n                    $stmt->close();\n                \n                    $dest = !empty($file_detail['dest'])?$file_detail['dest']:\"yahoo.com\";\n                    $serverNames = !empty($file_detail['serverNames'])?$file_detail['serverNames']:\n                                '[\n                                    \"yahoo.com\",\n                                    \"www.yahoo.com\"\n                                ]';\n                    $spiderX = !empty($file_detail['spiderX'])?$file_detail['spiderX']:\"\";\n                    $flow = isset($file_detail['flow']) && $file_detail['flow'] != \"None\" ? $file_detail['flow'] : \"\";\n                    \n\n\n\t\t            $certInfo = getNewCert($server_id)->obj;\n\t\t            $publicKey = $certInfo->publicKey;\n\t\t            $privateKey = $certInfo->privateKey;\n\t\t            $shortId = RandomString(8, \"small\");\n\t\t            $serverName = json_decode($tlsSettings,true)['serverName'];\n\t\t            if($netType == \"grpc\"){\n    \t\t            $tcpSettings = '{\n                          \"network\": \"grpc\",\n                          \"security\": \"reality\",\n                          \"realitySettings\": {\n                            \"show\": false,\n                            \"xver\": 0,\n                            \"dest\": \"' . $dest . '\",\n                            \"serverNames\":' . $serverNames . ',\n                            \"privateKey\": \"' . $privateKey . '\",\n                            \"minClient\": \"\",\n                            \"maxClient\": \"\",\n                            \"maxTimediff\": 0,\n                            \"shortIds\": [\n                              \"' . $shortId .'\"\n                            ],\n                            \"settings\": {\n                              \"publicKey\": \"' . $publicKey . '\",\n                              \"fingerprint\": \"firefox\",\n                              \"serverName\": \"' . $serverName . '\",\n                              \"spiderX\": \"' . $spiderX . '\"\n                            }\n                          },\n                          \"grpcSettings\": {\n                            \"serviceName\": \"\",\n                    \t\t\"multiMode\": false\n                          }\n                        }';\n\t\t            }else{\n    \t\t            $tcpSettings = '{\n                          \"network\": \"tcp\",\n                          \"security\": \"reality\",\n                          \"realitySettings\": {\n                            \"show\": false,\n                            \"xver\": 0,\n                            \"dest\": \"' . $dest . '\",\n                            \"serverNames\":' . $serverNames . ',\n                            \"privateKey\": \"' . $privateKey . '\",\n                            \"minClient\": \"\",\n                            \"maxClient\": \"\",\n                            \"maxTimediff\": 0,\n                            \"shortIds\": [\n                              \"' . $shortId .'\"\n                            ],\n                            \"settings\": {\n                              \"publicKey\": \"' . $publicKey . '\",\n                              \"fingerprint\": \"firefox\",\n                              \"serverName\": \"' . $serverName . '\",\n                              \"spiderX\": \"' . $spiderX . '\"\n                            }\n                          },\n                          \"tcpSettings\": {\n                            \"acceptProxyProtocol\": false,\n                    \t\t\"header\": '.$headers.'\n                          }\n                        }';\n\t\t            }\n    \t\t\t    $settings = '{\n        \t\t\t  \"clients\": [\n        \t\t\t\t{\n        \t\t\t\t  \"id\": \"'.$client_id.'\",\n        \t\t\t\t  \"enable\": true,\n                          \"email\": \"' . $remark. '\",\n                          \"flow\": \"' . $flow .'\",\n                          \"limitIp\": 0,\n                          \"totalGB\": 0,\n                          \"expiryTime\": 0,\n                          \"subId\": \"' . RandomString(16) . '\"\n        \t\t\t\t}\n        \t\t\t  ],\n        \t\t\t  \"decryption\": \"none\",\n        \t\t\t  \"fallbacks\": []\n        \t\t\t}';\n\t\t            $netType = \"tcp\";\n\t\t        }else{\n    \t\t\t    $settings = '{\n        \t\t\t  \"clients\": [\n        \t\t\t\t{\n        \t\t\t\t  \"id\": \"'.$client_id.'\",\n        \t\t\t\t  \"enable\": true,\n                          \"email\": \"' . $remark. '\",\n                          \"limitIp\": 0,\n                          \"totalGB\": 0,\n                          \"expiryTime\": 0,\n                          \"subId\": \"' . RandomString(16) . '\"\n        \t\t\t\t}\n        \t\t\t  ],\n        \t\t\t  \"decryption\": \"none\",\n        \t\t\t  \"fallbacks\": []\n        \t\t\t}';\n\t\t        }\n\t\t    }else{\n\t\t\t$settings = '{\n\t\t\t  \"clients\": [\n\t\t\t\t{\n\t\t\t\t  \"id\": \"'.$client_id.'\",\n\t\t\t\t  \"flow\": \"\",\n\t\t\t\t  \"email\": \"' . $remark. '\"\n\t\t\t\t}\n\t\t\t  ],\n\t\t\t  \"decryption\": \"none\",\n\t\t\t  \"fallbacks\": []\n\t\t\t}';\n\t\t    }\n\t\t}\n\n        $streamSettings = ($netType == 'tcp') ? $tcpSettings : $wsSettings;\n\t\tif($netType == 'grpc' && $reality != \"true\"){\n\t\t    $keyFileInfo = json_decode($tlsSettings,true);\n\t\t    $certificateFile = \"/root/cert.crt\";\n\t\t    $keyFile = '/root/private.key';\n\t\t    \n\t\t    if(isset($keyFileInfo['certificates'])){\n\t\t        $certificateFile = $keyFileInfo['certificates'][0]['certificateFile'];\n\t\t        $keyFile = $keyFileInfo['certificates'][0]['keyFile'];\n\t\t    }\n\n\t\t\tif($security == 'tls') {\n\t\t\t\t$streamSettings = '{\n  \"network\": \"grpc\",\n  \"security\": \"tls\",\n  \"tlsSettings\": {\n    \"serverName\": \"' . parse_url($panel_url, PHP_URL_HOST) . '\",\n    \"certificates\": [\n      {\n        \"certificateFile\": \"' . $certificateFile . '\",\n        \"keyFile\": \"' . $keyFile . '\"\n      }\n    ],\n    \"alpn\": []\n  },\n  \"grpcSettings\": {\n    \"serviceName\": \"\"\n  }\n}';\n\t\t    }else{\n\t\t\t$streamSettings = '{\n  \"network\": \"grpc\",\n  \"security\": \"none\",\n  \"grpcSettings\": {\n    \"serviceName\": \"' . parse_url($panel_url, PHP_URL_HOST) . '\"\n  }\n}';\n\t\t}\n\t    }\n\n        if(($serverType == \"sanaei\" || $serverType == \"alireza\") && $reality == \"true\"){\n            $sniffing = '{\n              \"enabled\": true,\n              \"destOverride\": [\n                \"http\",\n                \"tls\",\n                \"quic\"\n              ]\n            }';\n        }else{\n            $sniffing = '{\n        \t  \"enabled\": true,\n        \t  \"destOverride\": [\n        \t\t\"http\",\n        \t\t\"tls\"\n        \t  ]\n        \t}';\n        }\n        // vmess - vless\n        $dataArr = array('up' => '0','down' => '0','total' => $volume, 'remark' => $remark,'enable' => 'true','expiryTime' => $expiryTime,'listen' => '','port' => $port,'protocol' => $protocol,'settings' => $settings,'streamSettings' => $streamSettings\n        ,'sniffing' => $sniffing);\n    }\n    \n    $phost = str_ireplace('https://','',str_ireplace('http://','',$panel_url));\n    $serverName = $server_info['username'];\n    $serverPass = $server_info['password'];\n    \n    $loginUrl = $panel_url . '/login';\n    \n    $postFields = array(\n        \"username\" => $serverName,\n        \"password\" => $serverPass\n        );\n        \n        \n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $loginUrl);\n    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($curl, CURLOPT_POST, 1);\n    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3);\n    curl_setopt($curl, CURLOPT_TIMEOUT, 3); \n    curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($postFields));\n    curl_setopt($curl, CURLOPT_HEADER, 1);\n    $response = curl_exec($curl);\nsendMessage(curl_error($curl));\n\n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);\n    $header = substr($response, 0, $header_size);\n    $body = substr($response, $header_size);\n    preg_match_all('/^Set-Cookie:\\s*([^;]*)/mi', $header, $matches);\n    $cookies = array();\n    foreach($matches[1] as $item) {\n        parse_str($item, $cookie);\n        $cookies = array_merge($cookies, $cookie);\n    }\n\n    $loginResponse = json_decode($body,true);\n\n    if(!$loginResponse['success']){\n        curl_close($curl);\n        return $loginResponse;\n    }\n    \n    if($serverType == \"sanaei\") $url = \"$panel_url/panel/inbound/add\";\n    else $url = \"$panel_url/xui/inbound/add\";\n    \n    curl_setopt_array($curl, array(\n        CURLOPT_URL => $url,\n        CURLOPT_RETURNTRANSFER => true,\n        CURLOPT_ENCODING => '',\n        CURLOPT_MAXREDIRS => 10,\n        CURLOPT_CONNECTTIMEOUT => 15, \n        CURLOPT_TIMEOUT => 15,\n        CURLOPT_FOLLOWLOCATION => true,\n        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n        CURLOPT_CUSTOMREQUEST => 'POST',\n        CURLOPT_POSTFIELDS => $dataArr,\n        CURLOPT_SSL_VERIFYHOST => false,\n        CURLOPT_SSL_VERIFYPEER => false, \n        CURLOPT_HEADER => false,\n        CURLOPT_HTTPHEADER => array(\n            'User-Agent:  Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0',\n            'Accept:  application/json, text/plain, */*',\n            'Accept-Language:  en-US,en;q=0.5',\n            'Accept-Encoding:  gzip, deflate',\n            'X-Requested-With:  XMLHttpRequest',\n            'Cookie: ' . array_keys($cookies)[0] . \"=\" . $cookies[array_keys($cookies)[0]]\n        )\n    ));\n    $response = curl_exec($curl);\n    curl_close($curl);\n    return json_decode($response);\n}\n\n?>\n"
        },
        {
          "name": "createDB.php",
          "type": "blob",
          "size": 11.8984375,
          "content": "<?php\n\ninclude \"baseInfo.php\";\n$connection = new mysqli('localhost',$dbUserName,$dbPassword,$dbName);\nif($connection->connect_error){\n    exit(\"error \" . $connection->connect_error);  \n}\n$connection->set_charset(\"utf8mb4\");\n\n$connection->query(\"CREATE TABLE `chats` (\n  `id` int(255) NOT NULL AUTO_INCREMENT,\n  `user_id` bigint(10) NOT NULL,\n  `create_date` int(255) NOT NULL,\n  `title` varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,\n  `category` varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,\n  `state` int(5) NOT NULL,\n  `rate` int(5) NOT NULL,\n  PRIMARY KEY (`id`)\n)\");\n\n\n$connection->query(\"CREATE TABLE `chats_info` (\n  `id` int(255) NOT NULL AUTO_INCREMENT,\n  `chat_id` int(255) NOT NULL,\n  `sent_date` int(255) NOT NULL,\n  `msg_type` varchar(50) DEFAULT NULL,\n  `text` varchar(2000) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,\n  PRIMARY KEY (`id`)\n)\");\n\n\n$connection->query(\"CREATE TABLE `discounts` (\n  `id` int(255) NOT NULL AUTO_INCREMENT,\n  `hash_id` varchar(100) NOT NULL,\n  `type` varchar(10) NOT NULL,\n  `amount` int(255) NOT NULL,\n  `expire_date` int(255) NOT NULL,\n  `expire_count` int(255) NOT NULL,\n  `used_by` text DEFAULT NULL,\n  `can_use` int(255) NOT NULL DEFAULT 1,\n  PRIMARY KEY (`id`)\n)\");\n\n$connection->query(\"CREATE TABLE `gift_list` (\n  `id` int(255) NOT NULL AUTO_INCREMENT,\n  `server_id` int(255) NOT NULL,\n  `volume` int(255) NOT NULL,\n  `day` int(255) NOT NULL,\n  `offset` int(255) DEFAULT 0,\n  `server_offset` int(255) NOT NULL DEFAULT 0,\n  PRIMARY KEY (`id`)\n)\n\");\n\n$connection->query(\"CREATE TABLE `increase_day` (\n  `id` int(255) NOT NULL AUTO_INCREMENT,\n  `volume` float NOT NULL,\n  `price` int(255) NOT NULL,\n  PRIMARY KEY (`id`)\n)\");\n\n$connection->query(\"CREATE TABLE `increase_order` (\n  `id` int(255) NOT NULL AUTO_INCREMENT,\n  `userid` varchar(30) NOT NULL,\n  `server_id` int(255) NOT NULL,\n  `inbound_id` int(255) NOT NULL,\n  `remark` varchar(100) NOT NULL,\n  `amount` int(255) NOT NULL,\n  `date` varchar(30) NOT NULL,\n  PRIMARY KEY (`id`)\n)\");\n\n\n$connection->query(\"CREATE TABLE `increase_plan` (\n  `id` int(255) NOT NULL AUTO_INCREMENT,\n  `volume` float NOT NULL,\n  `price` int(255) NOT NULL,\n  PRIMARY KEY (`id`)\n)\");\n\n$connection->query(\"CREATE TABLE `needed_sofwares` (\n  `id` int(255) NOT NULL AUTO_INCREMENT,\n  `title` varchar(100) CHARACTER SET utf8 COLLATE utf8_persian_ci NOT NULL,\n  `link` varchar(250) NOT NULL,\n  `status` int(11) NOT NULL DEFAULT 1,\n  PRIMARY KEY (`id`)\n)\");\n\n$connection->query(\"INSERT INTO `needed_sofwares` (`id`, `title`, `link`, `status`) VALUES\n(1, 'ios fair-vpn', 'https://apps.apple.com/us/app/fair-vpn/id1533873488', 1),\n(2, 'ios napsternetv', 'https://apps.apple.com/us/app/napsternetv/id1629465476', 1),\n(3, 'ios oneclick', 'https://apps.apple.com/us/app/id1545555197', 1),\n(4, 'android v2rayng', 'https://play.google.com/store/apps/details?id=com.v2ray.ang&hl=en&gl=US', 1),\n(5, 'android sagernet', 'https://play.google.com/store/apps/details?id=io.nekohasekai.sagernet&hl=de&gl=US', 1),\n(6, 'android onclick', 'https://play.google.com/store/apps/details?id=earth.oneclick', 1),\n(7, 'windows v2rayng', 'https://google.com', 1),\n(8, 'mac fair', 'https://apps.apple.com/us/app/fair-vpn/id1533873488', 1);\n\");\n\n\n$connection->query(\"CREATE TABLE `orders_list` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `userid` varchar(30) NOT NULL,\n  `token` varchar(1000) NOT NULL,\n  `transid` varchar(150) NOT NULL,\n  `fileid` int(11) NOT NULL,\n  `server_id` int(11) NOT NULL,\n  `inbound_id` int(11) NOT NULL DEFAULT 0,\n  `remark` varchar(100) NOT NULL,\n  `uuid` text NOT NULL,\n  `protocol` varchar(20) NOT NULL,\n  `expire_date` int(11) NOT NULL,\n  `link` text NOT NULL,\n  `amount` int(11) NOT NULL,\n  `status` int(11) NOT NULL,\n  `date` varchar(50) NOT NULL,\n  `notif` int(11) NOT NULL DEFAULT 0,\n  `rahgozar` int(10) DEFAULT 0,\n  `agent_bought` int(1) NOT NULL DEFAULT 0,\n  PRIMARY KEY (`id`)\n) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_persian_ci\");\n\n\n$connection->query(\"CREATE TABLE IF NOT EXISTS `pays` (\n    `id` int(255) NOT NULL AUTO_INCREMENT,\n    `hash_id` varchar(1000) NOT NULL,\n    `description` varchar(5000) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,\n    `payid` varchar(500) DEFAULT NULL,\n    `user_id` bigint(10) NOT NULL,\n    `type` varchar(100),\n    `plan_id` int(255),\n    `volume` int(255),\n    `day` int(255),\n    `price` int(255) NOT NULL,\n    `request_date` int(255) NOT NULL,\n    `state` varchar(255) NOT NULL,\n    `agent_bought` int(1) NOT NULL DEFAULT 0,\n    `agent_count` int(255) NOT NULL DEFAULT 0,\n    `message_id` INT NULL DEFAULT NULL,\n    `chat_id` VARCHAR(500) NULL DEFAULT NULL,\n    PRIMARY KEY (`id`)\n);\");\n\n\n$connection->query(\"CREATE TABLE `server_categories` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `server_id` varchar(20) NOT NULL,\n  `title` varchar(50) NOT NULL,\n  `parent` int(11) NOT NULL DEFAULT 0,\n  `step` int(11) NOT NULL,\n  `active` int(11) NOT NULL DEFAULT 0,\n  PRIMARY KEY (`id`)\n) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_persian_ci\");\n\n\n$connection->query(\"CREATE TABLE `server_config` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `panel_url` varchar(254) NOT NULL,\n  `ip` text NOT NULL,\n  `sni` varchar(254) NOT NULL,\n  `header_type` enum('none','http') NOT NULL,\n  `request_header` text NOT NULL,\n  `response_header` text NOT NULL,\n  `security` enum('xtls', 'tls','none') NOT NULL,\n  `tlsSettings` text NOT NULL,\n  `type` varchar(100) DEFAULT NULL,\n  `username` varchar(100) NOT NULL,\n  `password` varchar(100) NOT NULL,\n  `port_type` varchar(10) DEFAULT 'auto',\n  `reality` varchar(10) DEFAULT 'false',\n  PRIMARY KEY (`id`)\n) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci\");\n\n$connection->query(\"CREATE TABLE `server_info` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `title` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,\n  `ucount` varchar(20) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL,\n  `remark` varchar(100) NOT NULL,\n  `flag` varchar(100) NOT NULL,\n  `active` int(11) NOT NULL DEFAULT 0,\n  `state` int(255) NOT NULL DEFAULT 1,\n  PRIMARY KEY (`id`)\n) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_persian_ci\");\n\n\n\n$connection->query(\"CREATE TABLE `server_plans` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `fileid` varchar(250) NOT NULL,\n  `catid` int(11) NOT NULL,\n  `server_id` int(11) NOT NULL,\n  `inbound_id` int(11) NOT NULL DEFAULT 0,\n  `acount` bigint(20) NOT NULL,\n  `limitip` int(11) NOT NULL DEFAULT 1,\n  `title` varchar(150) NOT NULL,\n  `protocol` varchar(100) NOT NULL,\n  `days` float NOT NULL,\n  `volume` float NOT NULL,\n  `type` varchar(50) NOT NULL,\n  `price` int(11) NOT NULL,\n  `descr` text NOT NULL,\n  `pic` varchar(100) NOT NULL,\n  `active` int(11) NOT NULL DEFAULT 0,\n  `step` int(11) NOT NULL,\n  `date` varchar(50) NOT NULL,\n  `rahgozar` int(10) DEFAULT 0,\n  `dest` varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL,\n  `serverNames` TEXT CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL,\n  `spiderX` varchar(500) DEFAULT NULL,\n  `flow` varchar(50) NULL DEFAULT 'None',\n  `custom_path` int(10) DEFAULT 1,\n  `custom_port` int(255) NOT NULL DEFAULT 0,\n  `custom_sni` varchar(500)  CHARACTER SET utf8mb4 COLLATE utf8mb4_persian_ci DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_persian_ci\");\n\n\n$connection->query(\"CREATE TABLE `setting` (\n  `id` int(255) NOT NULL AUTO_INCREMENT,\n  `type` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,\n  `value` text CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,\n  PRIMARY KEY (`id`)\n)\");\n\n$connection->query(\"INSERT INTO `setting` (`id`, `type`, `value`) VALUES\n(1, 'TICKETS_CATEGORY', 'شکایت'),\n(2, 'INVITE_BANNER_AMOUNT', '3000'),\n(3, 'INVITE_BANNER_TEXT', '{\\\"type\\\":\\\"photo\\\",\\\"caption\\\":\\\"\\\\ud83d\\\\udd30\\\\u0628\\\\u0631\\\\u062a\\\\u0631\\\\u06cc\\\\u0646 \\\\u0648 \\\\u0628\\\\u0647\\\\u062a\\\\u0631\\\\u06cc\\\\u0646 \\\\u0631\\\\u0628\\\\u0627\\\\u062a vpn \\\\u0628\\\\u0627 \\\\u06a9\\\\u0627\\\\u0646\\\\u06a9\\\\u0634\\\\u0646 \\\\u0647\\\\u0627\\\\u06cc \\\\u0631\\\\u0627\\\\u06cc\\\\u06af\\\\u0627\\\\u0646\\\\n\\\\u2705 \\\\u062d\\\\u062a\\\\u0645\\\\u0627 \\\\u0639\\\\u0636\\\\u0648 \\\\u0631\\\\u0628\\\\u0627\\\\u062a \\\\u0628\\\\u0634\\\\u06cc\\\\u062f \\\\u0648 \\\\u0627\\\\u0632 \\\\u062a\\\\u062e\\\\u0641\\\\u06cc\\\\u0641 \\\\u0647\\\\u0627\\\\u06cc \\\\u0648\\\\u06cc\\\\u0698\\\\u0647 \\\\u0644\\\\u0630\\\\u062a \\\\u0628\\\\u0628\\\\u0631\\\\u06cc\\\\u0646\\\\n\\\\n\\\\ud83d\\\\udd17 LINK\\\",\\\"file_id\\\":\\\"AgACAgQAAxkBAAJRKWRtX3wObRa3qAR_gkJgyKDdkHZsAAKAuzEbRaBpU3QQ2kLLt7MVAQADAgADeAADLwQ\\\"}'),\n(4, 'PAYMENT_KEYS', '{\\\"nowpayment\\\":\\\"cccc-cccc-cccc-cccc\\\",\\\"zarinpal\\\":\\\"aaaa-aaaa-aaaa-aaaa\\\",\\\"nextpay\\\":\\\"bbbb-bbbb-bbbb-bbbb\\\",\\\"bankAccount\\\":\\\"6104-6104-6104-6104\\\",\\\"holderName\\\":\\\"\\\\u0648\\\\u06cc\\\\u0632\\\\u0648\\\\u06cc\\\\u0632\\\"}'),\n(5, 'BOT_STATES', '{\\\"requirePhone\\\":\\\"off\\\",\\\"requireIranPhone\\\":\\\"off\\\",\\\"sellState\\\":\\\"on\\\",\\\"botState\\\":\\\"on\\\",\\\"searchState\\\":\\\"on\\\",\\\"rewaredTime\\\":\\\"3\\\",\\\"cartToCartState\\\":\\\"on\\\",\\\"nextpay\\\":\\\"on\\\",\\\"zarinpal\\\":\\\"on\\\",\\\"nowPaymentWallet\\\":\\\"on\\\",\\\"nowPaymentOther\\\":\\\"on\\\",\\\"walletState\\\":\\\"on\\\",\\\"rewardChannel\\\":\\\"@wizwizdev\\\",\\\"lockChannel\\\":\\\"@wizwizch\\\",\\\"changeProtocolState\\\":null,\\\"renewAccountState\\\":null,\\\"switchLocationState\\\":\\\"on\\\",\\\"increaseTimeState\\\":\\\"on\\\",\\\"increaseVolumeState\\\":\\\"on\\\",\\\"gbPrice\\\":\\\"100\\\",\\\"dayPrice\\\":\\\"100\\\",\\\"subLinkState\\\":\\\"on\\\",\\\"plandelkhahState\\\":\\\"off\\\",\\\"weSwapState\\\":\\\"on\\\"}');\n\");\n\n\n\n$connection->query(\"CREATE TABLE `users` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `userid` varchar(40) NOT NULL,\n  `name` varchar(100) NOT NULL,\n  `username` varchar(100) NOT NULL,\n  `refcode` varchar(50) NOT NULL,\n  `wallet` int(11) NOT NULL DEFAULT 0,\n  `date` varchar(50) NOT NULL,\n  `phone` varchar(15) DEFAULT NULL,\n  `refered_by` bigint(10) DEFAULT NULL,\n  `step` varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'none',\n  `freetrial` varchar(10) DEFAULT NULL,\n  `isAdmin` tinyint(1) NOT NULL DEFAULT 0,\n  `first_start` varchar(10) DEFAULT NULL,\n  `temp` text CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,\n  `is_agent` int(1) NOT NULL DEFAULT 0,\n  `discount_percent` VARCHAR(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL,\n  `agent_date` int(255) NOT NULL DEFAULT 0,\n  `spam_info` varchar(500),\n  PRIMARY KEY (`id`)\n) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_persian_ci\");\n\n\n$connection->query(\"CREATE TABLE `admins` (\n  `id` int(10) NOT NULL AUTO_INCREMENT,\n  `username` varchar(200) NOT NULL,\n  `password` varchar(200) NOT NULL,\n  `backupchannel` varchar(200) CHARACTER SET utf8 NOT NULL,\n  `lang` varchar(10) CHARACTER SET utf8 NOT NULL,\n  PRIMARY KEY (`id`)\n)\");\n\n$connection->query(\"CREATE TABLE `black_list` (\n  `id` int(255) NOT NULL AUTO_INCREMENT,\n  `info` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin,\n  PRIMARY KEY (`id`)\n)\");\n\n\n$characters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz$#@'; // Characters to choose from for random username and password\n$random_username = substr(str_shuffle($characters), 0, 15); // Generate a random 8-character username\n$random_password = substr(str_shuffle($characters), 0, 15); // Generate a random 8-character password\n\n$connection->query(\"INSERT INTO `admins` (`username`, `password`, `backupchannel`, `lang`) VALUES\n('$random_username', '$random_password', '-1002545458541', 'en');\n\");\n\n\n\n$connection->query(\"CREATE TABLE `servers` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `ip` varchar(200) NOT NULL,\n  `port` int(10) NOT NULL,\n  `username` varchar(200) NOT NULL,\n  `password` varchar(200) NOT NULL,\n  `name` varchar(200) CHARACTER SET utf8 COLLATE utf8_persian_ci NOT NULL,\n  `panel` varchar(100) NOT NULL,\n  `status` int(11) NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_persian_ci\");\n\n$connection->query(\"CREATE TABLE  `send_list` (\n        `id` int(255) NOT NULL AUTO_INCREMENT,\n        `offset` int(255) NOT NULL DEFAULT 0,\n        `type` varchar(20) NOT NULL,\n        `text` text CHARACTER SET utf8mb4 COLLATE utf8mb4_bin,\n        `chat_id` bigint(10),\n        `message_id` int(255),\n        `file_id` varchar(500),\n        `state` int(1) NOT NULL DEFAULT 0,\n        PRIMARY KEY (`id`)\n        )\");\n\n\n\n?>\n"
        },
        {
          "name": "dbbackupwizwiz.sh",
          "type": "blob",
          "size": 1.0185546875,
          "content": "#!/bin/bash\n\ntelegramBotToken=$(cat /var/www/html/wizwizxui-timebot/baseInfo.php | grep '$botToken' | cut -d\"'\" -f2)\ntelegramBotToken2=$(cat /var/www/html/wizwizxui-timebot/baseInfo.php | grep '$botToken' | cut -d'\"' -f2)\nfilepath=\"/var/www/html/wizwizxui-timebot/baseInfo.php\"\nchatID=$(cat $filepath | grep '$admin =' | sed 's/.*= //' | sed 's/;//')\n\ndatabaseUser=$(cat /var/www/html/wizwizxui-timebot/baseInfo.php | grep '$dbUserName' | cut -d\"'\" -f2)\ndatabasePassword=$(cat /var/www/html/wizwizxui-timebot/baseInfo.php | grep '$dbPassword' | cut -d\"'\" -f2)\ndatabaseName=$(cat /var/www/html/wizwizxui-timebot/baseInfo.php | grep '$dbName' | cut -d\"'\" -f2)\n\nbackupDir='/tmp/db_backup'\nmkdir -p $backupDir\nbackupFilename=\"wizwiz_$(date +'%Y-%m-%d_%H-%M-%S').sql\"\nmysqldump -u$databaseUser -p$databasePassword $databaseName > $backupDir/$backupFilename\n\ntelegramAPI=\"https://api.telegram.org/bot$telegramBotToken/sendDocument\"\ncurl -F \"chat_id=$chatID\" -F \"document=@$backupDir/$backupFilename\" \"$telegramAPI\"\nrm \"$backupDir/$backupFilename\"\n\n\n"
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "install",
          "type": "tree",
          "content": null
        },
        {
          "name": "pay",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpqrcode",
          "type": "tree",
          "content": null
        },
        {
          "name": "search.php",
          "type": "blob",
          "size": 24.1044921875,
          "content": "<?php\r\nif(!file_exists(\"baseInfo.php\") || !file_exists(\"config.php\")){\r\n    form(\"فایل های مورد نیاز یافت نشد\");\r\n    exit();\r\n}\r\n\r\nrequire \"baseInfo.php\";\r\nrequire \"config.php\";\r\ninclude \"jdf.php\";\r\n\r\n\r\nif(isset($_REQUEST['id'])){\r\n    $config_link = $_REQUEST['id'];\r\n\r\n    if(preg_match('/^vmess:\\/\\/(.*)/',$config_link,$match)){\r\n        $jsonDecode = json_decode(base64_decode($match[1]),true);\r\n        $connectionLink = $config_link;\r\n        $marzbanText = $match[1];\r\n        $config_link = $jsonDecode['id'];\r\n    }elseif(preg_match('/^vless:\\/\\/(.*?)\\@/',$config_link,$match)){\r\n        $connectionLink = $config_link;\r\n        $marzbanText = $config_link = $match[1];\r\n    }elseif(preg_match('/^trojan:\\/\\/(.*?)\\@/',$config_link,$match)){\r\n        $connectionLink = $config_link;\r\n        $marzbanText = $config_link = $match[1];\r\n    }elseif(!preg_match('/[a-f0-9]{8}\\-[a-f0-9]{4}\\-4[a-f0-9]{3}\\-(8|9|a|b)[a-f0-9]{3}\\-[a-f0-9]{12}/', $config_link)\r\n        && !(preg_match('/^[a-zA-Z0-9]{5,15}/',$config_link))){\r\n        form(\"متن وارد شده معتبر نمی باشد\");\r\n        exit();\r\n    }\r\n    $config_link = htmlspecialchars(stripslashes(trim($config_link)));\r\n\r\n    $stmt = $connection->prepare(\"SELECT * FROM `server_config`\");\r\n    $stmt->execute();\r\n    $serversList = $stmt->get_result();\r\n    $stmt->close();\r\n    $found = false;\r\n    $isMarzban = false;\r\n    while($row = $serversList->fetch_assoc()){\r\n        $serverId = $row['id'];\r\n        $serverType = $row['type'];\r\n        \r\n        if($serverType == \"marzban\"){\r\n            $usersList = getMarzbanJson($serverId)->users;\r\n            if(strstr(json_encode($usersList, JSON_UNESCAPED_UNICODE), $marzbanText) && !empty($marzbanText)){\r\n                $found = true;\r\n                $isMarzban = true;\r\n                \r\n                foreach($usersList as $key => $config){\r\n                    if(strstr(json_encode($config->links, JSON_UNESCAPED_UNICODE), $marzbanText)){\r\n                \t    $remark = $config->username;\r\n                        $total = $config->data_limit!=0?sumerize($config->data_limit):\"نامحدود\";\r\n                        $totalUsed = sumerize($config->used_traffic);\r\n                        $state = $config->status == \"active\"?$buttonValues['active']:$buttonValues['deactive'];\r\n                        $expiryTime = $config->expire != 0?jdate(\"Y-m-d H:i:s\",$config->expire):\"نامحدود\";\r\n                        $leftMb = $config->data_limit!=0?$config->data_limit - $config->used_traffic:\"نامحدود\";\r\n                        \r\n                        if(is_numeric($leftMb)){\r\n                            if($leftMb<0) $leftMb = 0;\r\n                            else $leftMb = sumerize($leftMb);\r\n                        }\r\n                        \r\n                        $expiryDay = $config->expire != 0?\r\n                            floor(\r\n                                ($config->expire - time())/(60 * 60 * 24)\r\n                                ):\r\n                                \"نامحدود\";    \r\n                        if(is_numeric($expiryDay)){\r\n                            if($expiryDay<0) $expiryDay = 0;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }else{\r\n            $response = getJson($serverId);\r\n            if($response->success){\r\n                $list = json_encode($response->obj);\r\n    \r\n                if(strpos($list, $config_link)){\r\n                    $found = true;\r\n                    $list = $response->obj;\r\n                    if(!isset($list[0]->clientStats)){\r\n                        foreach($list as $keys=>$packageInfo){\r\n                            if(strpos($packageInfo->settings, $config_link)!=false){\r\n                                $remark = $packageInfo->remark;\r\n                                $upload = sumerize2($packageInfo->up);\r\n                                $download = sumerize2($packageInfo->down);\r\n                                $state = $packageInfo->enable == true?\"فعال 🟢\":\"غیر فعال 🔴\";\r\n                                $totalUsed = sumerize2($packageInfo->up + $packageInfo->down);\r\n                                $total = $packageInfo->total!=0?sumerize2($packageInfo->total):\"نامحدود\";\r\n                                $expiryTime = $packageInfo->expiryTime != 0?jdate(\"Y-m-d H:i:s\",substr($packageInfo->expiryTime,0,-3)):\"نامحدود\";\r\n                                $leftMb = $packageInfo->total!=0?sumerize2($packageInfo->total - $packageInfo->up - $packageInfo->down):\"نامحدود\";\r\n                                $expiryDay = $packageInfo->expiryTime != 0?\r\n                                    floor(\r\n                                        (substr($packageInfo->expiryTime,0,-3)-time())/(60 * 60 * 24))\r\n                                    :\r\n                                    \"نامحدود\";\r\n                                if(is_numeric($expiryDay)){\r\n                                    if($expiryDay<0) $expiryDay = 0;\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else{\r\n                        $keys = -1;\r\n                        $settings = array_column($list,'settings');\r\n                        foreach($settings as $key => $value){\r\n                            if(strpos($value, $config_link)!= false){\r\n                                $keys = $key;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if($keys == -1){\r\n                            $found = false;\r\n                            break;\r\n                        }\r\n                        $clientsSettings = json_decode($list[$keys]->settings,true)['clients'];\r\n                        if(!is_array($clientsSettings)){\r\n                            form(\"با عرض پوزش، متأسفانه مشکلی رخ داده است، لطفا مجدد اقدام کنید\");\r\n                            exit();\r\n                        }\r\n                        $settingsId = array_column($clientsSettings,'id');\r\n                        $settingKey = array_search($config_link,$settingsId);\r\n    \r\n                        if(!isset($clientsSettings[$settingKey]['email'])){\r\n                            $packageInfo = $list[$keys];\r\n                            $remark = $packageInfo->remark;\r\n                            $upload = sumerize2($packageInfo->up);\r\n                            $download = sumerize2($packageInfo->down);\r\n                            $state = $packageInfo->enable == true?\"فعال 🟢\":\"غیر فعال 🔴\";\r\n                            $totalUsed = sumerize2($packageInfo->up + $packageInfo->down);\r\n                            $total = $packageInfo->total!=0?sumerize2($packageInfo->total):\"نامحدود\";\r\n                            $expiryTime = $packageInfo->expiryTime != 0?jdate(\"Y-m-d H:i:s\",substr($packageInfo->expiryTime,0,-3)):\"نامحدود\";\r\n                            $leftMb = $packageInfo->total!=0?sumerize2($packageInfo->total - $packageInfo->up - $packageInfo->down):\"نامحدود\";\r\n                            if(is_numeric($leftMb)){\r\n                                if($leftMb<0){\r\n                                    $leftMb = 0;\r\n                                }else{\r\n                                    $leftMb = sumerize2($packageInfo->total - $packageInfo->up - $packageInfo->down);\r\n                                }\r\n                            }\r\n    \r\n    \r\n                            $expiryDay = $packageInfo->expiryTime != 0?\r\n                                floor(\r\n                                    (substr($packageInfo->expiryTime,0,-3)-time())/(60 * 60 * 24)\r\n                                ):\r\n                                \"نامحدود\";\r\n                            if(is_numeric($expiryDay)){\r\n                                if($expiryDay<0) $expiryDay = 0;\r\n                            }\r\n                        }else{\r\n                            $email = $clientsSettings[$settingKey]['email'];\r\n                            $clientState = $list[$keys]->clientStats;\r\n                            $emails = array_column($clientState,'email');\r\n                            $emailKey = array_search($email,$emails);\r\n                            if($clientState[$emailKey]->total != 0 || $clientState[$emailKey]->up != 0  ||  $clientState[$emailKey]->down != 0 || $clientState[$emailKey]->expiryTime != 0){\r\n                                $upload = sumerize2($clientState[$emailKey]->up);\r\n                                $download = sumerize2($clientState[$emailKey]->down);\r\n                                $total = $clientState[$emailKey]->total==0 && $list[$keys]->total !=0?$list[$keys]->total:$clientState[$emailKey]->total;\r\n                                $leftMb = $total!=0?($total - $clientState[$emailKey]->up - $clientState[$emailKey]->down):\"نامحدود\";\r\n                                if(is_numeric($leftMb)){\r\n                                    if($leftMb<0){\r\n                                        $leftMb = 0;\r\n                                    }else{\r\n                                        $leftMb = sumerize2($total - $clientState[$emailKey]->up - $clientState[$emailKey]->down);\r\n                                    }\r\n                                }\r\n                                $totalUsed = sumerize2($clientState[$emailKey]->up + $clientState[$emailKey]->down);\r\n                                $total = $total!=0?sumerize2($total):\"نامحدود\";\r\n                                $expTime = $clientState[$emailKey]->expiryTime == 0 && $list[$keys]->expiryTime?$list[$keys]->expiryTime:$clientState[$emailKey]->expiryTime;\r\n                                $expiryTime = $expTime != 0?jdate(\"Y-m-d H:i:s\",substr($expTime,0,-3)):\"نامحدود\";\r\n                                $expiryDay = $expTime != 0?\r\n                                    floor(\r\n                                        ((substr($expTime,0,-3)-time())/(60 * 60 * 24))\r\n                                    ):\r\n                                    \"نامحدود\";\r\n                                if(is_numeric($expiryDay)){\r\n                                    if($expiryDay<0) $expiryDay = 0;\r\n                                }\r\n                                $state = $clientState[$emailKey]->enable == true?\"فعال 🟢\":\"غیر فعال 🔴\";\r\n                                $remark = $email;\r\n                            }\r\n                            elseif($list[$keys]->total != 0 || $list[$keys]->up != 0  ||  $list[$keys]->down != 0 || $list[$keys]->expiryTime != 0){\r\n                                $upload = sumerize2($list[$keys]->up);\r\n                                $download = sumerize2($list[$keys]->down);\r\n                                $leftMb = $list[$keys]->total!=0?($list[$keys]->total - $list[$keys]->up - $list[$keys]->down):\"نامحدود\";\r\n                                if(is_numeric($leftMb)){\r\n                                    if($leftMb<0){\r\n                                        $leftMb = 0;\r\n                                    }else{\r\n                                        $leftMb = sumerize2($list[$keys]->total - $list[$keys]->up - $list[$keys]->down);\r\n                                    }\r\n                                }\r\n                                $totalUsed = sumerize2($list[$keys]->up + $list[$keys]->down);\r\n                                $total = $list[$keys]->total!=0?sumerize2($list[$keys]->total):\"نامحدود\";\r\n                                $expiryTime = $list[$keys]->expiryTime != 0?jdate(\"Y-m-d H:i:s\",substr($list[$keys]->expiryTime,0,-3)):\"نامحدود\";\r\n                                $expiryDay = $list[$keys]->expiryTime != 0?\r\n                                    floor(\r\n                                        ((substr($list[$keys]->expiryTime,0,-3)-time())/(60 * 60 * 24))\r\n                                    ):\r\n                                    \"نامحدود\";\r\n                                if(is_numeric($expiryDay)){\r\n                                    if($expiryDay<0) $expiryDay = 0;\r\n                                }\r\n                                $state = $list[$keys]->enable == true?\"فعال 🟢\":\"غیر فعال 🔴\";\r\n                                $remark = $list[$keys]->remark;\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(!$found){\r\n        form(\"اطلاعات وارد شده اشتباه می باشد\",$cancelKey);\r\n    }else{\r\n        showForm(\"configInfo\");\r\n    }\r\n}\r\nelse{\r\n    showForm(\"unknown\");\r\n}\r\n?>\r\n<?php\r\nfunction showForm($type){\r\n    global $remark, $isMarzban, $totalUsed, $state, $upload, $download, $total, $leftMb, $expiryTime, $expiryDay;\r\n    ?>\r\n    <html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width\">\r\n        <title><?php if($type==\"unknown\") echo \"جستجوی اطلاعات کانفیگ\";\r\n            elseif ($type==\"id\") echo \"نتیجه اطلاعات کانفیگ\";\r\n            ?></title>\r\n        <meta charset=\"utf-8\">\r\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n        <link type=\"text/css\" href=\"assets/webconf.css\" rel=\"stylesheet\" />\r\n    </head>\r\n    <body style=\"background: <?php if(!isset($state)) echo \"#f7f0f5\"; elseif($state) echo \"#f7f0f5\"; elseif(!$state) echo \"#FF5733\";?>;\">\r\n    <?php if ($type==\"configInfo\"){\r\n        $download = $download != 0 && $total != \"نامحدود\"? round(100 * $download / $total,2):0;\r\n        $upload = $upload != 0 && $total != \"نامحدود\"? round(100 * $upload / $total,2):0;\r\n        $leftMb = $leftMb != \"نامحدود\" && $total != \"نامحدود\"?round(100 * $leftMb / $total,2):\"100\";\r\n        $totalUsed = $totalUsed != \"نامحدود\" && $total != \"نامحدود\"?round(100 * $totalUsed / $total,2):\"100\";\r\n        ?>\r\n        <div class=\"container\" style=\"\">\r\n            <form id=\"contact\" class=\"contactw\">\r\n                <br>\r\n                <p style=\"font-size:22px;font-weight: bold;color:#1d3557;font-family:iransans !important;\"> ( اطلاعات کانفیگ <?php echo $remark;?> ) </p>\r\n                <p style=\"font-size:18px;font-weight: bold;color:#1d3557;margin-top:15px;\"> وضعیت: <?php echo $state;?> </p>\r\n\r\n                <br>\r\n                \r\n                \r\n                <div class=\"mainform\" >\r\n                    \r\n                    <div>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" style=\"margin-left: 6px;enable-background:new 0 0 512 512;\" xml:space=\"preserve\" width=\"20\" height=\"20\">\r\n                        <g>\r\n                            <path d=\"M210.731,386.603c24.986,25.002,65.508,25.015,90.51,0.029c0.01-0.01,0.019-0.019,0.029-0.029l68.501-68.501   c7.902-8.739,7.223-22.23-1.516-30.132c-8.137-7.357-20.527-7.344-28.649,0.03l-62.421,62.443l0.149-329.109   C277.333,9.551,267.782,0,256,0l0,0c-11.782,0-21.333,9.551-21.333,21.333l-0.192,328.704L172.395,288   c-8.336-8.33-21.846-8.325-30.176,0.011c-8.33,8.336-8.325,21.846,0.011,30.176L210.731,386.603z\"/>\r\n                            <path d=\"M490.667,341.333L490.667,341.333c-11.782,0-21.333,9.551-21.333,21.333V448c0,11.782-9.551,21.333-21.333,21.333H64   c-11.782,0-21.333-9.551-21.333-21.333v-85.333c0-11.782-9.551-21.333-21.333-21.333l0,0C9.551,341.333,0,350.885,0,362.667V448   c0,35.346,28.654,64,64,64h384c35.346,0,64-28.654,64-64v-85.333C512,350.885,502.449,341.333,490.667,341.333z\"/>\r\n                        </g>\r\n                    </svg>\r\n                        <p style=\"font-size:16px\"><?php if($isMarzban) echo \"حجم دانلود + آپلود\"; else echo \"حجم دانلود\";?></p>\r\n                        <div class=\"progress-bar\" style=\"display:flex; background: radial-gradient(closest-side, #F9F9F9 79%, transparent 80% 100%),conic-gradient(<?php if($download <= 50) echo \"#04a777 \"; elseif($download <= 70 && $download > 50) echo \"yellow \"; elseif($download > 70) echo \"red \"; echo $download . \"%\";?>, #e2eafc 0);\">\r\n                        <?php if($isMarzban) echo $totalUsed . \"%\"; else echo $download . \"%\";?></div>\r\n                    </div>\r\n                    <?php if(!$isMarzban){?>\r\n                        <div style=\"margin-right:50px;\">\r\n                            <svg style=\"margin-left: 6px\" xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\"><path d=\"M23.9,11.437A12,12,0,0,0,0,13a11.878,11.878,0,0,0,3.759,8.712A4.84,4.84,0,0,0,7.113,23H16.88a4.994,4.994,0,0,0,3.509-1.429A11.944,11.944,0,0,0,23.9,11.437Zm-4.909,8.7A3,3,0,0,1,16.88,21H7.113a2.862,2.862,0,0,1-1.981-.741A9.9,9.9,0,0,1,2,13,10.014,10.014,0,0,1,5.338,5.543,9.881,9.881,0,0,1,11.986,3a10.553,10.553,0,0,1,1.174.066,9.994,9.994,0,0,1,5.831,17.076ZM7.807,17.285a1,1,0,0,1-1.4,1.43A8,8,0,0,1,12,5a8.072,8.072,0,0,1,1.143.081,1,1,0,0,1,.847,1.133.989.989,0,0,1-1.133.848,6,6,0,0,0-5.05,10.223Zm12.112-5.428A8.072,8.072,0,0,1,20,13a7.931,7.931,0,0,1-2.408,5.716,1,1,0,0,1-1.4-1.432,5.98,5.98,0,0,0,1.744-5.141,1,1,0,0,1,1.981-.286Zm-5.993.631a2.033,2.033,0,1,1-1.414-1.414l3.781-3.781a1,1,0,1,1,1.414,1.414Z\"/></svg>\r\n                            <p style=\"font-size:16px; font-family:iransans !important;\">حجم آپلود</p>\r\n                            <div class=\"progress-bar\" style=\"display:flex; background: radial-gradient(closest-side, #F9F9F9 79%, transparent 80% 100%),conic-gradient(<?php if($upload <= 30) echo \"#f48c06 \"; elseif($upload < 50 && $upload > 30) echo \"yellow \"; elseif($upload >= 50) echo \"#ed254e \";  echo $upload . \"%\";?>, #e2eafc 0);\">\r\n                            <?php echo $upload . \"%\";?></div>\r\n                        </div>\r\n                    <?php }?>\r\n                </div>\r\n                \r\n                \r\n                \r\n                <div class=\"mainform\" style=\"margin-top:50px;\">\r\n                    \r\n                    <div style=\"margin-left: 6px\">\r\n                        <svg style=\"margin-left: 6px\" xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\"><path d=\"M23.9,11.437A12,12,0,0,0,0,13a11.878,11.878,0,0,0,3.759,8.712A4.84,4.84,0,0,0,7.113,23H16.88a4.994,4.994,0,0,0,3.509-1.429A11.944,11.944,0,0,0,23.9,11.437Zm-4.909,8.7A3,3,0,0,1,16.88,21H7.113a2.862,2.862,0,0,1-1.981-.741A9.9,9.9,0,0,1,2,13,10.014,10.014,0,0,1,5.338,5.543,9.881,9.881,0,0,1,11.986,3a10.553,10.553,0,0,1,1.174.066,9.994,9.994,0,0,1,5.831,17.076ZM7.807,17.285a1,1,0,0,1-1.4,1.43A8,8,0,0,1,12,5a8.072,8.072,0,0,1,1.143.081,1,1,0,0,1,.847,1.133.989.989,0,0,1-1.133.848,6,6,0,0,0-5.05,10.223Zm12.112-5.428A8.072,8.072,0,0,1,20,13a7.931,7.931,0,0,1-2.408,5.716,1,1,0,0,1-1.4-1.432,5.98,5.98,0,0,0,1.744-5.141,1,1,0,0,1,1.981-.286Zm-5.993.631a2.033,2.033,0,1,1-1.414-1.414l3.781-3.781a1,1,0,1,1,1.414,1.414Z\"/></svg>\r\n                        <p style=\"font-size:16px; font-family:iransans !important;\">حجم باقیمانده</p>\r\n                        <div class=\"progress-bar\" style=\"display:flex; background: radial-gradient(closest-side, #F9F9F9 79%, transparent 80% 100%),conic-gradient(<?php if($leftMb <= 30) echo \"red \"; elseif($leftMb < 50 && $leftMb > 30) echo \"yellow \"; elseif($leftMb >= 50) echo \"#ed254e \";  echo $leftMb . \"%\";?>, #e2eafc 0);\">\r\n                        <?php echo $leftMb . \"%\";?></div>\r\n                    </div>\r\n                    \r\n                    <div style=\"margin-right:50px;\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Bold\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\"><path d=\"M22.5,18a1.5,1.5,0,0,1-1.061-.44L13.768,9.889a2.5,2.5,0,0,0-3.536,0L2.57,17.551A1.5,1.5,0,0,1,.449,15.43L8.111,7.768a5.505,5.505,0,0,1,7.778,0l7.672,7.672A1.5,1.5,0,0,1,22.5,18Z\"/></svg>\r\n                        <p style=\"font-size:16px\">حجم کلی</p>\r\n                        <div class=\"progress-bar\" style=\"display:flex; background: radial-gradient(closest-side, #F9F9F9 79%, transparent 80% 100%),conic-gradient(<?php if($upload <= 50) echo \"#467599 \"; elseif($upload <= 70 && $upload > 50) echo \"#467599 \"; elseif($upload > 70) echo \"#467599 \"; echo $upload . \"%\";?>, #467599 0);\">\r\n                        <?php echo (is_numeric($total) ? $total . \"GB\": $total);?></div>\r\n                    </div>\r\n    \r\n                    <!--<div style=\"margin-right:50px;\">-->\r\n                    <!--    <svg style=\"margin-left: 6px\" id=\"Layer_1\" height=\"20\" viewBox=\"0 0 24 24\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\"><path d=\"m23 13a11.01 11.01 0 0 0 -10-10.949v-2.051h-2v2.051a10.977 10.977 0 0 0 -7.062 18.408l-1.928 2.118 1.48 1.346 1.934-2.123a10.916 10.916 0 0 0 13.152 0l1.934 2.126 1.48-1.346-1.928-2.118a10.948 10.948 0 0 0 2.938-7.462zm-11 9a9 9 0 1 1 9-9 9.011 9.011 0 0 1 -9 9z\"/><path d=\"m5.523 1.745-1.067-1.689a15.17 15.17 0 0 0 -4.439 3.955l1.663 1.109a13.144 13.144 0 0 1 3.843-3.375z\"/><path d=\"m22.32 5.12 1.663-1.109a15.17 15.17 0 0 0 -4.439-3.955l-1.067 1.689a13.144 13.144 0 0 1 3.843 3.375z\"/><path d=\"m11 7v5.414l3.293 3.293 1.414-1.414-2.707-2.707v-4.586z\"/></svg>-->\r\n                    <!--    <p style=\"font-size:16px\">تعداد روز باقیمانده</p>-->\r\n                    <!--    <div class=\"progress-bar\" style=\"display:flex; background: radial-gradient(closest-side, #F9F9F9 79%, transparent 80% 100%),conic-gradient(#a06cd5 100%, #13293d 0);\">-->\r\n                    <!--    <?php echo $expiryDay . \" روز\";?></div>-->\r\n                    <!--</div>-->\r\n                </div>\r\n        <div class=\"container\">\r\n                    <p class=\"tarikh\" style=\"font-size:14px;margin-top:10px\">\r\n                       expireTime: <span><?php echo $expiryTime;?></span>\r\n                    </p>\r\n                </div>\r\n                <p style=\"font-size:10px\">Made with 🖤 in <a target=\"_blank\" href=\"https://github.com/wizwizdev/wizwizxui-timebot\">wizwiz</a></p>\r\n            </form>\r\n        </div>\r\n\r\n    <?php }\r\n    elseif($type==\"unknown\"){ ?>\r\n\r\n        <div class=\"container\">\r\n            <form id=\"contact\" action=\"search.php\" method=\"get\">\r\n                <h3 style=\"margin:20px\">لطفا اطلاعات خواسته شده را وارد کنید</h3>\r\n                <fieldset>\r\n                    <input placeholder=\"لینک اتصال و یا هم uuid کانفیگ را وارد کنید\" type=\"text\"  id=\"id\" name=\"id\" autocomplete=\"off\" required >\r\n                </fieldset>\r\n                <fieldset>\r\n                    <button class=\"search\" type=\"submit\">جستجو</button>\r\n                </fieldset>\r\n                <p style=\"font-size:13px\">Made with 🖤 in <a target=\"_blank\" href=\"https://github.com/wizwizdev/wizwizxui-timebot\">wizwiz</a></p>\r\n            </form>\r\n        </div>\r\n        <br>\r\n        <br>\r\n    <?php } ?>\r\n    </body>\r\n    </html>\r\n    <?php\r\n}\r\nfunction form($msg, $error = true){\r\n    ?>\r\n\r\n    <html dir=\"rtl\">\r\n    <head>\r\n        <meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width\">\r\n        <title>error</title>\r\n        <link type=\"text/css\" href=\"assets/webconf.css\" rel=\"stylesheet\" />\r\n        <meta name=\"next-head-count\" content=\"4\">\r\n    </head>\r\n    <body>\r\n    <div id=\"__next\">\r\n        <section class=\"ant-layout1 PayPing-layout1\">\r\n            <main>\r\n                <div class=\"justify-center align-center w-100\">\r\n                    <div class=\"div1\">\r\n                        <div class=\"div2\">\r\n                            <?php if ($error == true){ ?> <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" viewBox=\"0 0 24 24\" class=\"PayPing-icon\" stroke-width=\"1\" width=\"100\">\r\n                                <circle cx=\"12\" cy=\"12\" r=\"11\"></circle>\r\n                                <path d=\"M15.3 8.7l-6.6 6.6M8.7 8.7l6.6 6.6\"></path>\r\n                            </svg>\r\n                            <?php }?>\r\n                            <div style=\"padding: 40px 30px\" > <?php echo $msg ?></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </section>\r\n    </div>\r\n    </body>\r\n    </html>\r\n    <?php\r\n}\r\n?>\r\n"
        },
        {
          "name": "settings",
          "type": "tree",
          "content": null
        },
        {
          "name": "update.sh",
          "type": "blob",
          "size": 7.853515625,
          "content": "#!/bin/bash\n\n# Written By: wizwiz\n\nif [ \"$(id -u)\" -ne 0 ]; then\n    echo -e \"\\033[33mPlease run as root\\033[0m\"\n    exit\nfi\n\nwait\n\necho \" \"\n\nPS3=\" Please Select Action: \"\noptions=(\"Update bot\" \"Update panel\" \"Backup\" \"Delete\" \"Donate\" \"Exit\")\nselect opt in \"${options[@]}\"\ndo\n\tcase $opt in\n\t\t\"Update bot\")\n\t\t\techo \" \"\n\t\t\tread -p \"Are you sure you want to update?[y/n]: \" answer\n\t\t\techo \" \"\n\t\t\tif [ \"$answer\" != \"${answer#[Yy]}\" ]; then\n\t\t\tmv /var/www/html/wizwizxui-timebot/baseInfo.php /root/\n\t\t\tsudo apt-get install -y git\n\t\t\tsudo apt-get install -y wget\n\t\t\tsudo apt-get install -y unzip\n\t\t\tsudo apt install curl -y\n\t\t\techo -e \"\\n\\e[92mUpdating ...\\033[0m\\n\"\n\t\t\tsleep 4\n\t\t\trm -r /var/www/html/wizwizxui-timebot/\n\t\t\techo -e \"\\n\\e[92mWait a few seconds ...\\033[0m\\n\"\n\t\t\tsleep 3\n\t\t\tgit clone https://github.com/wizwizdev/wizwizxui-timebot.git /var/www/html/wizwizxui-timebot\n\t\t\tsudo chown -R www-data:www-data /var/www/html/wizwizxui-timebot/\n\t\t\tsudo chmod -R 755 /var/www/html/wizwizxui-timebot/\n\t\t\tsleep 3\n\t\t\tmv /root/baseInfo.php /var/www/html/wizwizxui-timebot/\n\n\t\t\tsleep 1\n\n   \t\tdb_namewizwiz=$(cat /var/www/html/wizwizxui-timebot/baseInfo.php | grep '$dbName' | cut -d\"'\" -f2)\n\t\t  db_userwizwiz=$(cat /var/www/html/wizwizxui-timebot/baseInfo.php | grep '$dbUserName' | cut -d\"'\" -f2)\n\t\t  db_passwizwiz=$(cat /var/www/html/wizwizxui-timebot/baseInfo.php | grep '$dbPassword' | cut -d\"'\" -f2)\n\t\t\tbot_token=$(cat /var/www/html/wizwizxui-timebot/baseInfo.php | grep '$botToken' | cut -d\"'\" -f2)\n\t\t\tbot_token2=$(cat /var/www/html/wizwizxui-timebot/baseInfo.php | grep '$botToken' | cut -d'\"' -f2)\n\t\t\tbot_url=$(cat /var/www/html/wizwizxui-timebot/baseInfo.php | grep '$botUrl' | cut -d'\"' -d\"'\" -f2)\n\t\t\t\n\t\t\tfilepath=\"/var/www/html/wizwizxui-timebot/baseInfo.php\"\n\t\t\t\n\t\t\tbot_value=$(cat $filepath | grep '$admin =' | sed 's/.*= //' | sed 's/;//')\n\t\t\t\n                        MESSAGE=\"🤖 WizWiz robot has been successfully updated! \"$'\\n\\n'\"🔻token: <code>${bot_token}</code>\"$'\\n'\"🔻admin: <code>${bot_value}</code> \"$'\\n'\"🔻phpmyadmin: <code>https://domain.com/phpmyadmin</code>\"$'\\n'\"🔹db name: <code>${db_namewizwiz}</code>\"$'\\n'\"🔹db username: <code>${db_userwizwiz}</code>\"$'\\n'\"🔹db password: <code>${db_passwizwiz}</code>\"$'\\n\\n'\"📢 @wizwizch \"\n\t\t\t\n   \t\t\tcurl -s -X POST \"https://api.telegram.org/bot${bot_token}/sendMessage\" -d chat_id=\"${bot_value}\" -d text=\"$MESSAGE\" -d parse_mode=\"html\"\n\t\t\t\n\t\t\tcurl -s -X POST \"https://api.telegram.org/bot${bot_token2}/sendMessage\" -d chat_id=\"${bot_value}\" -d text=\"$MESSAGE\" -d parse_mode=\"html\"\n\t\t\t\n\t\t\tsleep 1\n        \n\t\t\turl=\"${bot_url}install/install.php?updateBot\"\n\t\t\tcurl $url\n\n   \t\t\turl3=\"${bot_url}install/install.php?updateBot\"\n\t\t\tcurl $url3\n\n   \t\t\techo -e \"\\n\\e[92mUpdating ...\\033[0m\\n\"\n      \n\t\t\tsleep 2\n\n   \n\t\t\tsudo rm -r /var/www/html/wizwizxui-timebot/webpanel\n\t\t\tsudo rm -r /var/www/html/wizwizxui-timebot/install\n\t\t\trm /var/www/html/wizwizxui-timebot/createDB.php\n\t\t\trm /var/www/html/wizwizxui-timebot/updateShareConfig.php\n\t\t\trm /var/www/html/wizwizxui-timebot/README.md\n\t\t\trm /var/www/html/wizwizxui-timebot/README-fa.md\n\t\t\trm /var/www/html/wizwizxui-timebot/LICENSE\n\t\t\trm /var/www/html/wizwizxui-timebot/update.sh\n\t\t\trm /var/www/html/wizwizxui-timebot/wizwiz.sh\n  \t\t\trm /var/www/html/wizwizxui-timebot/tempCookie.txt\n  \t\t\trm /var/www/html/wizwizxui-timebot/settings/messagewizwiz.json\n\t\t\tclear\n\t\t\t\n\t\t\techo -e \"\\n\\e[92mThe script was successfully updated! \\033[0m\\n\"\n\t\t\t\n\t\t\telse\n\t\t\t  echo -e \"\\e[41mCancel the update.\\033[0m\\n\"\n\t\t\tfi\n\n\t\t\tbreak ;;\n\t\t\n\t\t\"Update panel\")\n\t\t\techo \" \"\n\t\t\tread -p \"Are you sure you want to update?[y/n]: \" answer\n\t\t\techo \" \"\n\t\t\tif [ \"$answer\" != \"${answer#[Yy]}\" ]; then\n   \n\t\t\twait\n   \t\t\tcd /var/www/html/ && find . -mindepth 1 -maxdepth 1 ! -name wizwizxui-timebot -type d -exec rm -r {} \\;\n\n\t \t\ttouch /var/www/html/index.html\n    \t\t\techo \"<!DOCTYPE html><html><head><title>My Website</title></head><body><h1>Hello, world!</h1></body></html>\" > /var/www/html/index.html\n       \n\t\t\t\n\t\t\t    \n\t\t\t        \n\t\t\tRANDOM_CODE=$(LC_CTYPE=C tr -dc 'a-zA-Z0-9' < /dev/urandom | head -c 40)\n\t\t\tmkdir \"/var/www/html/${RANDOM_CODE}\"\n\t\t\techo \"Directory created: ${RANDOM_CODE}\"\n\t\t\techo \"Folder created successfully!\"\n\t\t\t\n\t\t\t cd /var/www/html/\n\t\t\t wget -O wizwizpanel.zip https://github.com/wizwizdev/wizwizxui-timebot/releases/download/10.3.1/wizwizpanel.zip\n\t\t\t\n\t\t\t file_to_transfer=\"/var/www/html/wizwizpanel.zip\"\n\t\t\t destination_dir=$(find /var/www/html -type d -name \"*${RANDOM_CODE}*\" -print -quit)\n\t\t\t\n\t\t\t if [ -z \"$destination_dir\" ]; then\n\t\t\t   echo \"Error: Could not find directory containing 'wiz' in '/var/www/html'\"\n\t\t\t   exit 1\n\t\t\t fi\n\t\t\t\n\t\t\t mv \"$file_to_transfer\" \"$destination_dir/\" && yes | unzip \"$destination_dir/wizwizpanel.zip\" -d \"$destination_dir/\" && rm \"$destination_dir/wizwizpanel.zip\" && sudo chmod -R 755 \"$destination_dir/\" && sudo chown -R www-data:www-data \"$destination_dir/\" \n\t\t\t\n\t\t\t\n\t\t\twait\n\n\n\t\t\techo -e \"\\n\\e[92mUpdating ...\\033[0m\\n\"\n\t\t\t\n\t\t\tbot_token=$(cat /var/www/html/wizwizxui-timebot/baseInfo.php | grep '$botToken' | cut -d\"'\" -f2)\n\t\t\tbot_token2=$(cat /var/www/html/wizwizxui-timebot/baseInfo.php | grep '$botToken' | cut -d'\"' -f2)\n\t\t\t\n\t\t\tfilepath=\"/var/www/html/wizwizxui-timebot/baseInfo.php\"\n\t\t\t\n\t\t\tbot_value=$(cat $filepath | grep '$admin =' | sed 's/.*= //' | sed 's/;//')\n\t\t\t\n\t\t\tMESSAGE=\"🕹 WizWiz panel has been successfully updated!\"\n\n\t\t\tcurl -s -X POST \"https://api.telegram.org/bot${bot_token}/sendMessage\" -d chat_id=\"${bot_value}\" -d text=\"$MESSAGE\"\n\t\t\tcurl -s -X POST \"https://api.telegram.org/bot${bot_token2}/sendMessage\" -d chat_id=\"${bot_value}\" -d text=\"$MESSAGE\"\n\t\t\t\n\t\t\tsleep 1\n\t\t\t\n\t\t\tif [ $? -ne 0 ]; then\n\t\t\techo -e \"\\n\\e[41mError: The update failed!\\033[0m\\n\"\n\t\t\texit 1\n\t\t\telse\n\n\t\t\tclear\n\n\t\t\techo -e ' '\n\t\t\t      echo -e \"\\e[100mwizwiz panel:\\033[0m\"\n\t\t\t      echo -e \"\\e[33maddres: \\e[36mhttps://domain.com/${RANDOM_CODE}/login.php\\033[0m\"\n\t\t\t      echo \" \"\n\t\t\t      echo -e \"\\e[92mThe script was successfully updated!\\033[0m\\n\"\n\t\t\tfi\n\n\n\n\n\t\t\telse\n\t\t\t  echo -e \"\\e[41mCancel the update.\\033[0m\\n\"\n\t\t\tfi\n\n\t\t\tbreak ;;\n\t\t\"Backup\")\n\t\t\techo \" \"\n\t\t\twait\n\n\t\t\t(crontab -l ; echo \"0 * * * * ./dbbackupwizwiz.sh\") | sort - | uniq - | crontab -\n\t\t\t\n\t\t\twget https://raw.githubusercontent.com/wizwizdev/wizwizxui-timebot/main/dbbackupwizwiz.sh | chmod +x dbbackupwizwiz.sh\n\t\t\t./dbbackupwizwiz.sh\n   \n\t\t\twget https://raw.githubusercontent.com/wizwizdev/wizwizxui-timebot/main/dbbackupwizwiz.sh | chmod +x dbbackupwizwiz.sh\n\t\t\t./dbbackupwizwiz.sh\n\t\t\t\n\t\t\techo -e \"\\n\\e[92m The backup settings have been successfully completed.\\033[0m\\n\"\n\n\t\t\tbreak ;;\n\t\t\"Delete\")\n\t\t\techo \" \"\n\t\t\t\n\t\t\twait\n\t\t\t\n\t\t\tpasss=$(cat /root/confwizwiz/dbrootwizwiz.txt | grep '$pass' | cut -d\"'\" -f2)\n   \t\t\tuserrr=$(cat /root/confwizwiz/dbrootwizwiz.txt | grep '$user' | cut -d\"'\" -f2)\n\t\t\tpathsss=$(cat /root/confwizwiz/dbrootwizwiz.txt | grep '$path' | cut -d\"'\" -f2)\n\t\t\tpathsss=$(cat /root/confwizwiz/dbrootwizwiz.txt | grep '$path' | cut -d\"'\" -f2)\n\t\t\tpasssword=$(cat /var/www/html/wizwizxui-timebot/baseInfo.php | grep '$dbPassword' | cut -d\"'\" -f2)\n   \t\t\tuserrrname=$(cat /var/www/html/wizwizxui-timebot/baseInfo.php | grep '$dbUserName' | cut -d\"'\" -f2)\n\t\t\t\n\t\t\tmysql -u $userrr -p$passs -e \"DROP DATABASE wizwiz;\" -e \"DROP USER '$userrrname'@'localhost';\" -e \"DROP USER '$userrrname'@'%';\"\n\n\t\t\tsudo rm -r /var/www/html/wizpanel${pathsss}\n\t\t\tsudo rm -r /var/www/html/wizwizxui-timebot\n\t\t\t\n\t\t\tclear\n\t\t\t\n\t\t\tsleep 1\n\t\t\t\n\t\t\t(crontab -l | grep -v \"messagewizwiz.php\") | crontab -\n\t\t\t(crontab -l | grep -v \"rewardReport.php\") | crontab -\n\t\t\t(crontab -l | grep -v \"warnusers.php\") | crontab -\n\t\t\t(crontab -l | grep -v \"backupnutif.php\") | crontab -\n\t\t\t\n\t\t\techo -e \"\\n\\e[92m Removed successfully.\\033[0m\\n\"\n\t\t\tbreak ;;\n\t\t\"Donate\")\n\t\t\techo \" \"\n\t\t\techo -e \"\\n\\e[91mBank ( 1212 ): \\e[36m1212\\033[0m\\n\\e[91mTron(trx): \\e[36mTY8j7of18gbMtneB8bbL7SZk5gcntQEemG\\n\\e[91mBitcoin: \\e[36mbc1qcnkjnqvs7kyxvlfrns8t4ely7x85dhvz5gqge4\\033[0m\\n\"\n\t\t\texit 0\n\t\t\tbreak ;;\n\t\t\"Exit\")\n\t\t\techo \" \"\n\t\t\tbreak\n\t\t\t;;\n\t\t\t*) echo \"Invalid option!\"\n\tesac\ndone\n"
        },
        {
          "name": "updateShareConfig.php",
          "type": "blob",
          "size": 0.990234375,
          "content": "<?php\n\nrequire \"baseInfo.php\";\nrequire \"config.php\";\n\n$stmt = $connection->prepare(\"SELECT * FROM `server_plans` WHERE (`type` IS NULL OR `type` = '') AND `inbound_id` != 0\");\n$stmt->execute();\n$list = $stmt->get_result();\n$stmt->close();\n\nif($list->num_rows > 0){\n    while($row = $list->fetch_assoc()){\n        $serverId = $row['server_id'];\n        $inboundId = $row['inbound_id'];\n        $rowId = $row['id'];\n        \n        $response = getJson($serverId);\n        $response = $response->obj;\n        foreach($response as $config){\n            if($config->id == $inboundId) {\n                $netType = json_decode($config->streamSettings)->network;\n                break;\n            }\n        }\n        \n        if(!is_null($netType)){\n            $stmt = $connection->prepare(\"UPDATE `server_plans` SET `type` = ? WHERE `id` = ?\");\n            $stmt->bind_param(\"si\", $netType, $rowId);\n            $stmt->execute();\n            $stmt->close();\n        }\n    }\n    echo \"REFRESH PAGE\";\n}else echo \"DONE\";\n"
        },
        {
          "name": "wizwiz.sh",
          "type": "blob",
          "size": 13.439453125,
          "content": "#!/bin/bash\n\n# Written By: wizwiz\n\nif [ \"$(id -u)\" -ne 0 ]; then\n    echo -e \"\\033[33mPlease run as root\\033[0m\"\n    exit\nfi\n\nwait\n\necho -e \"\\e[32m\n██     ██ ██ ███████ ██     ██ ██ ███████     ██   ██ ██    ██ ██ \n██     ██ ██    ███  ██     ██ ██    ███       ██ ██  ██    ██ ██ \n██  █  ██ ██   ███   ██  █  ██ ██   ███         ███   ██    ██ ██ \n██ ███ ██ ██  ███    ██ ███ ██ ██  ███         ██ ██  ██    ██ ██ \n ███ ███  ██ ███████  ███ ███  ██ ███████     ██   ██  ██████  ██ \n\\033[0m\"\necho -e \"    \\e[31mTelegram Channel: \\e[34m@wizwizch\\033[0m | \\e[31mTelegram Group: \\e[34m@wizwizdev\\033[0m\\n\"\n\n#sleep\necho -e \"\\e[32mInstalling WizWiz script ... \\033[0m\\n\"\nsleep 5\n\nsudo apt update && apt upgrade -y\necho -e \"\\e[92mThe server was successfully updated ...\\033[0m\\n\"\n\n\nPKG=(\n    lamp-server^\n    libapache2-mod-php \n    mysql-server \n    apache2 \n    php-mbstring \n    php-zip \n    php-gd \n    php-json \n    php-curl \n)\n\nfor i in \"${PKG[@]}\"\ndo\n    dpkg -s $i &> /dev/null\n    if [ $? -eq 0 ]; then\n        echo \"$i is already installed\"\n    else\n        apt install $i -y\n        if [ $? -ne 0 ]; then\n            echo \"Error installing $i\"\n            exit 1\n        fi\n    fi\ndone\n\necho -e \"\\n\\e[92mPackages Installed Continuing ...\\033[0m\\n\"\n\nrandomdbpasstxt69=$(openssl rand -base64 10 | tr -dc 'a-zA-Z0-9' | cut -c1-20)\n\necho 'phpmyadmin phpmyadmin/dbconfig-install boolean true' | debconf-set-selections\necho 'phpmyadmin phpmyadmin/app-password-confirm password $randomdbpasstxt69' | debconf-set-selections\necho 'phpmyadmin phpmyadmin/mysql/admin-pass password $randomdbpasstxt69' | debconf-set-selections\necho 'phpmyadmin phpmyadmin/mysql/app-pass password $randomdbpasstxt69' | debconf-set-selections\necho 'phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2' | debconf-set-selections\nsudo apt-get install phpmyadmin -y\nsudo ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-available/phpmyadmin.conf\nsudo a2enconf phpmyadmin.conf\nsudo systemctl restart apache2\n\nwait\n\nsudo apt-get install -y php-soap\nsudo apt-get install libapache2-mod-php\n\nsudo systemctl enable mysql.service\nsudo systemctl start mysql.service\nsudo systemctl enable apache2\nsudo systemctl start apache2\n\necho -e \"\\n\\e[92m Setting Up UFW...\\033[0m\\n\"\n\nufw allow 'Apache'\n\nsudo systemctl restart apache2\n\necho -e \"\\n\\e[92mInstalling ...\\033[0m\\n\"\n\nsleep 1\n\nsudo apt-get install -y git\nsudo apt-get install -y wget\nsudo apt-get install -y unzip\nsudo apt install curl -y\nsudo apt-get install -y php-ssh2\nsudo apt-get install -y libssh2-1-dev libssh2-1\n\nsudo systemctl restart apache2.service\n\nwait\n\ngit clone https://github.com/wizwizdev/wizwizxui-timebot.git /var/www/html/wizwizxui-timebot\nsudo chown -R www-data:www-data /var/www/html/wizwizxui-timebot/\nsudo chmod -R 755 /var/www/html/wizwizxui-timebot/\necho -e \"\\n\\033[33mWizWiz config and script have been installed successfully\\033[0m\"\n\nwait\n    \n        \nRANDOM_CODE=$(LC_CTYPE=C tr -dc 'a-zA-Z0-9' < /dev/urandom | head -c 40)\nmkdir \"/var/www/html/${RANDOM_CODE}\"\necho \"Directory created: ${RANDOM_CODE}\"\necho \"Folder created successfully!\"\n\n cd /var/www/html/\n wget -O wizwizpanel.zip https://github.com/wizwizdev/wizwizxui-timebot/releases/download/10.3.1/wizwizpanel.zip\n\n file_to_transfer=\"/var/www/html/wizwizpanel.zip\"\n destination_dir=$(find /var/www/html -type d -name \"*${RANDOM_CODE}*\" -print -quit)\n\n if [ -z \"$destination_dir\" ]; then\n   echo \"Error: Could not find directory containing 'wiz' in '/var/www/html'\"\n   exit 1\n fi\n\n mv \"$file_to_transfer\" \"$destination_dir/\" && yes | unzip \"$destination_dir/wizwizpanel.zip\" -d \"$destination_dir/\" && rm \"$destination_dir/wizwizpanel.zip\" && sudo chmod -R 755 \"$destination_dir/\" && sudo chown -R www-data:www-data \"$destination_dir/\" \n\n\nwait\n\n\nif [ ! -d \"/root/confwizwiz\" ]; then\n\n    sudo mkdir /root/confwizwiz\n    \n    sleep 1\n    \n    touch /root/confwizwiz/dbrootwizwiz.txt\n    sudo chmod -R 777 /root/confwizwiz/dbrootwizwiz.txt\n    sleep 1\n    \n    randomdbpasstxt=$(openssl rand -base64 10 | tr -dc 'a-zA-Z0-9' | cut -c1-30)\n\n    ASAS=\"$\"\n\n    echo \"${ASAS}user = 'root';\" >> /root/confwizwiz/dbrootwizwiz.txt\n    echo \"${ASAS}pass = '${randomdbpasstxt}';\" >> /root/confwizwiz/dbrootwizwiz.txt\n    #echo \"${ASAS}paths = '${RANDOM_CODE}';\" >> /root/confwizwiz/dbrootwizwiz.txt\n    \n    sleep 1\n\n    passs=$(cat /root/confwizwiz/dbrootwizwiz.txt | grep '$pass' | cut -d\"'\" -f2)\n    userrr=$(cat /root/confwizwiz/dbrootwizwiz.txt | grep '$user' | cut -d\"'\" -f2)\n\n    sudo mysql -u $userrr -p$passs -e \"alter user '$userrr'@'localhost' identified with mysql_native_password by '$passs';FLUSH PRIVILEGES;\"\n\n    echo \"SELECT 1\" | mysql -u$userrr -p$passs 2>/dev/null\n\n    echo \"Folder created successfully!\"\nelse\n    echo \"Folder already exists.\"\nfi\n\nclear\n\necho \" \"\necho -e \"\\e[32m\n██     ██ ██ ███████ ██     ██ ██ ███████     ███████ ███████ ██      \n██     ██ ██    ███  ██     ██ ██    ███      ██      ██      ██      \n██  █  ██ ██   ███   ██  █  ██ ██   ███       ███████ ███████ ██      \n██ ███ ██ ██  ███    ██ ███ ██ ██  ███             ██      ██ ██      \n ███ ███  ██ ███████  ███ ███  ██ ███████     ███████ ███████ ███████ \n\\033[0m\\n\"\n\nread -p \"Enter the domain: \" domainname\nif [ \"$domainname\" = \"\" ]; then\n\necho -e \"\\n\\033[91mPlease wait ...\\033[0m\\n\"\nsleep 3\n\necho -e \"\\e[36mNothing was registered for the domain.\\033[0m\\n\"\n\necho -e \"\\n\\033[0m Good Luck Baby\\n\"\n\nelse\n# variables\nDOMAIN_NAME=\"$domainname\"\n# WILDCARD_DOMAIN=\"*.$wildcarddomain\"\n\n# update cron\nPATHS=$(cat /root/confwizwiz/dbrootwizwiz.txt | grep '$path' | cut -d\"'\" -f2)\n(crontab -l ; echo \"* * * * * curl https://${DOMAIN_NAME}/wizwizxui-timebot/settings/messagewizwiz.php >/dev/null 2>&1\") | sort - | uniq - | crontab -\n(crontab -l ; echo \"* * * * * curl https://${DOMAIN_NAME}/wizwizxui-timebot/settings/rewardReport.php >/dev/null 2>&1\") | sort - | uniq - | crontab -\n(crontab -l ; echo \"* * * * * curl https://${DOMAIN_NAME}/wizwizxui-timebot/settings/warnusers.php >/dev/null 2>&1\") | sort - | uniq - | crontab -\n(crontab -l ; echo \"* * * * * curl https://${DOMAIN_NAME}/wizwizxui-timebot/settings/gift2all.php >/dev/null 2>&1\") | sort - | uniq - | crontab -\n(crontab -l ; echo \"*/3 * * * * curl https://${DOMAIN_NAME}/wizwizxui-timebot/settings/tronChecker.php >/dev/null 2>&1\") | sort - | uniq - | crontab -\n(crontab -l ; echo \"* * * * * curl https://${DOMAIN_NAME}/${PATHS}/backupnutif.php >/dev/null 2>&1\") | sort - | uniq - | crontab -\n\necho -e \"\\n\\e[92m Setting Up Cron...\\033[0m\\n\"\n\n# Allow HTTP and HTTPS traffic\necho -e \"\\n\\033[1;7;31mAllowing HTTP and HTTPS traffic...\\033[0m\\n\"\nsudo ufw allow 80\nsudo ufw allow 443\n\n# Let's Encrypt\necho -e \"\\n\\033[1;7;32mInstalling Let's Encrypt...\\033[0m\\n\"\nsudo apt install letsencrypt -y\n\n# automatic certificate renewal\necho -e \"\\n\\033[1;7;33mEnabling automatic certificate renewal...\\033[0m\\n\"\nsudo systemctl enable certbot.timer\n\n# SSL certificate using standalone mode\necho -e \"\\n\\033[1;7;34mObtaining SSL certificate using standalone mode...\\033[0m\\n\"\nsudo certbot certonly --standalone --agree-tos --preferred-challenges http -d $DOMAIN_NAME\n\n# Certbot Apache plugin\necho -e \"\\n\\033[1;7;35mInstalling Certbot Apache plugin...\\033[0m\\n\"\nsudo apt install python3-certbot-apache -y\n\n# SSL certificate using Apache plugin\necho -e \"\\n\\033[1;7;36mObtaining SSL certificate using Apache plugin...\\033[0m\\n\"\nsudo certbot --apache --agree-tos --preferred-challenges http -d $DOMAIN_NAME\n\n# echo -e \"\\n\\033[1;7;33mObtaining SSL certificate using manual DNS mode (wildcard)...\\033[0m\\n\"\n# sudo certbot certonly --manual --agree-tos --preferred-challenges dns -d $DOMAIN_NAME -d $WILDCARD_DOMAIN\n\n\necho -e \"\\e[32m======================================\"\necho -e \"SSL certificate obtained successfully!\"\necho -e \"======================================\\033[0m\"\n\n\nwait\n\necho \" \"\n\nROOT_PASSWORD=$(cat /root/confwizwiz/dbrootwizwiz.txt | grep '$pass' | cut -d\"'\" -f2)\nROOT_USER=\"root\"\necho \"SELECT 1\" | mysql -u$ROOT_USER -p$ROOT_PASSWORD 2>/dev/null\n\n\nif [ $? -eq 0 ]; then\n\nwait\n\n    randomdbpass=$(openssl rand -base64 10 | tr -dc 'a-zA-Z0-9' | cut -c1-22)\n\n    randomdbdb=$(openssl rand -base64 10 | tr -dc 'a-zA-Z0-9' | cut -c1-22)\n\n    if [[ $(mysql -u root -p$ROOT_PASSWORD -e \"SHOW DATABASES LIKE 'wizwiz'\") ]]; then\n        clear\n        echo -e \"\\n\\e[91mYou have already created the database\\033[0m\\n\"\n    else\n        dbname=wizwiz\n        clear\n        echo -e \"\\n\\e[32mPlease enter the database username!\\033[0m\"\n        printf \"[+] Default user name is \\e[91m${randomdbdb}\\e[0m ( let it blank to use this user name ): \"\n        read dbuser\n        if [ \"$dbuser\" = \"\" ]; then\n        dbuser=$randomdbdb\n        fi\n\n        echo -e \"\\n\\e[32mPlease enter the database password!\\033[0m\"\n        printf \"[+] Default user name is \\e[91m${randomdbpass}\\e[0m ( let it blank to use this user name ): \"\n        read dbpass\n        if [ \"$dbpass\" = \"\" ]; then\n        dbpass=$randomdbpass\n        fi\n\n        mysql -u root -p$ROOT_PASSWORD -e \"CREATE DATABASE $dbname;\" -e \"CREATE USER '$dbuser'@'%' IDENTIFIED WITH mysql_native_password BY '$dbpass';GRANT ALL PRIVILEGES ON * . * TO '$dbuser'@'%';FLUSH PRIVILEGES;\" -e \"CREATE USER '$dbuser'@'localhost' IDENTIFIED WITH mysql_native_password BY '$dbpass';GRANT ALL PRIVILEGES ON * . * TO '$dbuser'@'localhost';FLUSH PRIVILEGES;\"\n        \n        echo -e \"\\n\\e[95mDatabase Created.\\033[0m\"\n        \n        wait\n        \n\n\n        printf \"\\n\\e[33m[+] \\e[36mBot Token: \\033[0m\"\n        read YOUR_BOT_TOKEN\n        printf \"\\e[33m[+] \\e[36mChat id: \\033[0m\"\n        read YOUR_CHAT_ID\n        printf \"\\e[33m[+] \\e[36mDomain: \\033[0m\"\n        read YOUR_DOMAIN\n        echo \" \"\n        if [ \"$YOUR_BOT_TOKEN\" = \"\" ] || [ \"$YOUR_DOMAIN\" = \"\" ] || [ \"$YOUR_CHAT_ID\" = \"\" ]; then\n           exit\n        fi\n\n        ASAS=\"$\"\n\t\n        wait\n\n        sleep 1\n        \n        file_path=\"/var/www/html/wizwizxui-timebot/baseInfo.php\"\n        \n        if [ -f \"$file_path\" ]; then\n          rm \"$file_path\"\n          echo -e \"File deleted successfully.\"\n        else\n          echo -e \"File not found.\"\n        fi\n        \n        sleep 2\n        \n        # print file\n        echo -e \"<?php\" >> /var/www/html/wizwizxui-timebot/baseInfo.php\n        echo -e \"error_reporting(0);\" >> /var/www/html/wizwizxui-timebot/baseInfo.php\n        echo -e \"${ASAS}botToken = '${YOUR_BOT_TOKEN}';\" >> /var/www/html/wizwizxui-timebot/baseInfo.php\n        echo -e \"${ASAS}dbUserName = '${dbuser}';\" >> /var/www/html/wizwizxui-timebot/baseInfo.php\n        echo -e \"${ASAS}dbPassword = '${dbpass}';\" >> /var/www/html/wizwizxui-timebot/baseInfo.php\n        echo -e \"${ASAS}dbName = '${dbname}';\" >> /var/www/html/wizwizxui-timebot/baseInfo.php\n        echo -e \"${ASAS}botUrl = 'https://${YOUR_DOMAIN}/wizwizxui-timebot/';\" >> /var/www/html/wizwizxui-timebot/baseInfo.php\n        echo -e \"${ASAS}admin = ${YOUR_CHAT_ID};\" >> /var/www/html/wizwizxui-timebot/baseInfo.php\n        echo -e \"?>\" >> /var/www/html/wizwizxui-timebot/baseInfo.php\n\n        sleep 1\n\n        curl -F \"url=https://${YOUR_DOMAIN}/wizwizxui-timebot/bot.php\" \"https://api.telegram.org/bot${YOUR_BOT_TOKEN}/setWebhook\"\n        MESSAGE=\"✅ The wizwiz bot has been successfully installed! @wizwizch\"\n        curl -s -X POST \"https://api.telegram.org/bot${YOUR_BOT_TOKEN}/sendMessage\" -d chat_id=\"${YOUR_CHAT_ID}\" -d text=\"$MESSAGE\"\n        \n        \n        sleep 1\n        \n        url=\"https://${YOUR_DOMAIN}/wizwizxui-timebot/createDB.php\"\n        curl $url\n        \n        sleep 1\n        \n        sudo rm -r /var/www/html/wizwizxui-timebot/webpanel\n        sudo rm -r /var/www/html/wizwizxui-timebot/install\n        sudo rm /var/www/html/wizwizxui-timebot/createDB.php\n\trm /var/www/html/wizwizxui-timebot/updateShareConfig.php\n\trm /var/www/html/wizwizxui-timebot/README.md\n\trm /var/www/html/wizwizxui-timebot/README-fa.md\n\trm /var/www/html/wizwizxui-timebot/LICENSE\n\trm /var/www/html/wizwizxui-timebot/update.sh\n\trm /var/www/html/wizwizxui-timebot/wizwiz.sh\n\trm /var/www/html/wizwizxui-timebot/tempCookie.txt\n\trm /var/www/html/wizwizxui-timebot/settings/messagewizwiz.json\n            \n        clear\n        \n        echo \" \"\n        \n        echo -e \"\\e[100mDatabase information:\\033[0m\"\n\techo -e \"\\e[33maddres: \\e[36mhttps://${YOUR_DOMAIN}/phpmyadmin\\033[0m\"\n        echo -e \"\\e[33mDatabase name: \\e[36m${dbname}\\033[0m\"\n        echo -e \"\\e[33mDatabase username: \\e[36m${dbuser}\\033[0m\"\n        echo -e \"\\e[33mDatabase password: \\e[36m${dbpass}\\033[0m\"\n        echo \" \"\n        echo -e \"\\e[100mwizwiz panel:\\033[0m\"\n        echo -e \"\\e[33maddres: \\e[36mhttps://${YOUR_DOMAIN}/${RANDOM_CODE}/login.php\\033[0m\"\n        \n        echo \" \"\n        \n        echo -e \"Good Luck Baby! \\e[94mThis project is for free. If you like it, be sure to donate me :) , so let's go \\033[0m\\n\"\n\n        fi\n\n\n        elif [ \"$ROOT_PASSWORD\" = \"\" ] || [ \"$ROOT_USER\" = \"\" ]; then\n        echo -e \"\\n\\e[36mThe password is empty.\\033[0m\\n\"\n        else \n        \n        echo -e \"\\n\\e[36mThe password is not correct.\\033[0m\\n\"\n\n        fi\n\nfi\n"
        }
      ]
    }
  ]
}