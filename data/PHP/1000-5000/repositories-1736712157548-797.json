{
  "metadata": {
    "timestamp": 1736712157548,
    "page": 797,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "antonioribeiro/firewall",
      "stars": 1404,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0986328125,
          "content": "/vendor\ncomposer.phar\ncomposer.lock\n.DS_Store\ntests/geoipdb/*\nreports/*\ncoverage/*\ntests/databases/*\n"
        },
        {
          "name": ".scrutinizer.yml",
          "type": "blob",
          "size": 0.302734375,
          "content": "build:\n    environment:\n        php:\n            version: 7.2\n    tests:\n        override:\n            -\n                command: 'vendor/bin/phpunit --coverage-clover=/tmp/coverage-clover.xml'\n                coverage:\n                    file: '/tmp/coverage-clover.xml'\n                    format: 'clover'\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.3046875,
          "content": "script: vendor/bin/phpunit\n\nlanguage: php\n\nphp:\n  - 7.1\n  - 7.2\n  - 7.3\n  - 7.4\n  - 8.0\n  - 8.1\n# - nightly\n\nsudo: false\n\ncache:\n  directories:\n    - $HOME/.composer/cache\n\nbefore_script:\n  - curl -s http://getcomposer.org/installer | php\n  - php composer.phar update --dev\n  - travis_retry composer self-update\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4716796875,
          "content": "Copyright (c) 2014, Antonio Carlos Ribeiro\r\n\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n\r\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n\r\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n\r\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n"
        },
        {
          "name": "changelog.md",
          "type": "blob",
          "size": 2.4326171875,
          "content": "# Change Log\nAll notable changes to this project will be documented in this file.\n\n## [2.3.0] - 2019-09-11\n### Added\n- Laravel 6.0 support\n- Support to identify IP behind Cloudflare\n- Artisan command firewall:cache:clear\n- Ability to set the log stack. New key in config: `'log_stack' => ['single']`\n\n### Fixed\n- Response in notification-only mode\n- Migrations being execute when not in database mode\n- Exception when trying to remove from database an ip inside a country\n\n## [2.2.1] - 2018-07-31\n### Fixed\n- Fix whitelisted IP being blocked by AttackBlocker\n\n## [2.0.2] - 2017-08-26\n### Fixed\n- Minor fixes\n\n## [2.0.1] - 2017-08-21\n### Fixed\n- Minor fixes\n\n## [2.0.0] - 2017-08-21\n### Added\n- Attack blocker\n\n## [1.1.0] - 2017-08-20\n### Added\n- GeoIp2 database file updater artisan command\n\n## [1.0.9] - 2017-08-13\n### Added\n- Laravel 5.5 autodiscovery\n- Snippets to readme\n### Changed\n- Laravel 5.* install docs\n### Fix\n- Readme things\n- Markdown headings\n\n## [1.0.8] - 2017-01-31\n### Updated\n- To Laravel 5.4\n\n## [1.0.7] - 2016-12-25\n### Fixed\n- Lexical problem\n\n## [1.0.6] - 2016-12-24\n### Updated\n- Support package\n\n## [1.0.5] - 2016-12-24\n### Fixed\n- Output on firewall:clear command\n- Whitelisting problem\n\n## [1.0.4] - 2016-12-24\n### Added\n- Ability to black/whitelist IPs for the session\n\n## [1.0.3] - 2016-05-14\n### Fixed\n- Remove forgotten brace\n\n## [1.0.2] - 2016-05-13\n### Fixed\n- Bug on PHP 7.0.2\n- Deprecated Table helper (Symfony)\n\n## [1.0.1] - 2016-04-18\n### Changed\n- Upgrade support package\n### Fixed\n- Middleware problem\n\n## [1.0.0] - 2015-12-24\n### Added\n- Move to Middleware (BC)\n\n## [1.0.0] - 2015-12-24\n### Added\n- Move to Middleware (BC)\n\n## [0.5.4] - 2015-12-01\n### Fixed\n- Config publishing docs\n- Minor fixes\n\n## [0.5.3] - 2015-03\n### Added\n- Add support for GeoIP\n\n## [0.5.2] - 2015-03\n### Fixed\n- Fix incorrectly using array as object\n \n## [0.5.1] - 2014-02\n### Fixed\n- Minor fixes and improvements\n \n## [0.5.0] - 2014-02-18\n### Added\n- Laravel 5 compatibility.\n- Allow black and white lists to be stored in arrays, files or file of files, instead of a database table.\n- Allow redirect_non_whitelisted_to to be a named route or url (to).\n- Option to disable database lookup, disabled by default.\n- Change log, according to http://keepachangelog.com/.\n- Add cache for the list of IP addresses.\n\n### Changed\n- Removed unnecessary configuration options.\n- Range search now defaults to enabled.\n\n## [0.2.0] - 2014-07-08\n### Fixed\n- Migrator fixed\n- Rename migrator\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.255859375,
          "content": "{\n    \"name\": \"pragmarx/firewall\",\n    \"description\": \"A Laravel IP whitelisting and blacklisting\",\n    \"keywords\": [\n        \"firewall\",\n        \"whitelist\",\n        \"blacklist\",\n        \"laravel\"\n    ],\n    \"license\": \"BSD-3-Clause\",\n    \"authors\": [\n        {\n            \"name\": \"Antonio Carlos Ribeiro\",\n            \"email\": \"acr@antoniocarlosribeiro.com\",\n            \"role\": \"Creator\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=5.6\",\n        \"illuminate/support\": \">=5.3\",\n        \"pragmarx/support\": \">=0.8.0\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"~7|~8|~9\",\n        \"orchestra/testbench\": \"3.8.*|4.*|5.*|6.*|7.*|8.*\",\n        \"geoip2/geoip2\": \"~2.0\"\n    },\n    \"suggest\": {\n        \"geoip/geoip\": \"~1.14\",\n        \"geoip2/geoip2\": \"~2.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"PragmaRX\\\\Firewall\\\\\": \"src/\",\n            \"PragmaRX\\\\Firewall\\\\Tests\\\\\": \"tests/\"\n        }\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"0.5.x-dev\"\n        },\n        \"laravel\": {\n            \"providers\": [\n                \"PragmaRX\\\\Firewall\\\\Vendor\\\\Laravel\\\\ServiceProvider\"\n            ],\n            \"aliases\": {\n                \"Firewall\": \"PragmaRX\\\\Firewall\\\\Vendor\\\\Laravel\\\\Facade\"\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 1.1943359375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         bootstrap=\"tests/bootstrap.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnError=\"true\"\n         stopOnFailure=\"false\"\n         verbose=\"true\"\n>\n    <testsuites>\n        <testsuite name=\"Laravel Test Suite\">\n            <directory suffix=\"Test.php\">./tests</directory>\n        </testsuite>\n    </testsuites>\n    <logging>\n        <log type=\"coverage-html\" target=\"coverage/\" lowUpperBound=\"35\" highLowerBound=\"70\"/>\n        <log type=\"coverage-clover\" target=\"coverage/coverage-clover.xml\" lowUpperBound=\"35\" highLowerBound=\"70\"/>\n        <log type=\"coverage-text\" target=\"php://stdout\" showUncoveredFiles=\"true\"/>\n    </logging>\n    <filter>\n        <whitelist addUncoveredFilesFromWhitelist=\"true\" processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">./src</directory>\n            <exclude></exclude>\n        </whitelist>\n    </filter>\n    <php>\n        <env name=\"CACHE_DRIVER\" value=\"file\" />\n    </php>\n</phpunit>\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 10.529296875,
          "content": "# Firewall 2.2\n\n[![Latest Stable Version](https://img.shields.io/packagist/v/pragmarx/firewall.svg?style=flat-square)](https://packagist.org/packages/pragmarx/firewall) [![License](https://img.shields.io/badge/license-BSD_3_Clause-brightgreen.svg?style=flat-square)](LICENSE) [![Downloads](https://img.shields.io/packagist/dt/pragmarx/firewall.svg?style=flat-square)](https://packagist.org/packages/pragmarx/firewall) [![Code Quality](https://img.shields.io/scrutinizer/g/antonioribeiro/firewall.svg?style=flat-square)](https://scrutinizer-ci.com/g/antonioribeiro/firewall/?branch=master) [![Build](https://img.shields.io/scrutinizer/build/g/antonioribeiro/firewall.svg?style=flat-square)](https://scrutinizer-ci.com/g/antonioribeiro/firewall/?branch=master) [![Coverage](https://img.shields.io/scrutinizer/coverage/g/antonioribeiro/firewall.svg?style=flat-square)](https://scrutinizer-ci.com/g/antonioribeiro/firewall/?branch=master) [![StyleCI](https://styleci.io/repos/15290899/shield)](https://styleci.io/repos/15290899)\n\n## Purpose\n\nThis a \"soft-firewall\" package. Its purpose is to help people prevent unauthorized access to routes **by IP address**. It is able to keep track of IPs, countries and hosts (dynamic ip), and redirect non-authorized users to, for instance, a \"Coming Soon\" page, while letting whitelisted IPs to have access to the entire site. It is now also able to detect and block attacks (too many requests) from single IPs or whole countries.\n\nThis package can prevent some headaches and help you block some access to your apps, but cannot replace firewalls and appliances, for attacks at the network level, you'll still need a real firewall. \n\n## Features\n\n* Control access to routes and groups via black and white lists.\n* Detect and block attacks to your application, from IP addresses or countries.\n* Send Slack notifications in attack events.\n* Allow whitelisted to access the whole site and send everyone else to a \"coming soon page\".\n* Redirect blacklisted users to some other page.\n* Use database or arrays to store IP lists.\n* Whitelist your development machine using a dynamic DNS host name.\n* Done using middleware, so you can protect/unprotect groups of routes.\n* All features are available for hosts, IP addresses, ranges of IP addresses and whole countries.\n* Super fast, less than 10ms increase in each request.\n* Highly configurable.\n\n## Concepts\n\n### Blacklist\n\nAll IP addresses in those lists will no be able to access routes filtered by the blacklist filter.\n\n### Whitelist\n\nThose IP addresses, ranges or countries can\n\n- Access blacklisted routes even if they are in a range of blacklisted IP addresses.\n- Access 'allow whitelisted' filtered routes.\n- If a route is filtered by the 'allow whitelisted' filter and the IP is not whitelisted, the request will be redirected to an alternative url or route name.\n\n## Attack Detection\n\n![attack](docs/attack.png)\n\nFirewall is able to detect simple attacks to your page, by counting requests from the same IP or country. Just enable it on your `config/firewall.php` and, to receive notifications, configure the Slack service in `config/services.php`:\n   \n```php\n'slack' => [\n    'webhook_url' => env('SLACK_WEBHOOK_URL'),\n],\n```\n\nand add the route notification method to your user model:\n\n```php\n/**\n * Route notifications for the Slack channel.\n *\n * @return string\n */\npublic function routeNotificationForSlack()\n{\n    return config('services.slack.webhook_url');\n}\n``` \n\n## IPs lists\n\nIPs (white and black) lists can be stored in array, files and database. Initially database access to lists is disabled, so, to test your Firewall configuration you can publish the config file and edit the `blacklist` or `whitelist` arrays:\n\n```php\n'blacklist' => array(\n    '127.0.0.1',\n    '192.168.17.0/24'\n    '127.0.0.1/255.255.255.255'\n    '10.0.0.1-10.0.0.255'\n    '172.17.*.*'\n    'country:br'\n    '/usr/bin/firewall/blacklisted.txt',\n),\n```\n\nThe file (for instance `/usr/bin/firewall/blacklisted.txt`) must contain one IP, range or file name per line, and, yes, it will search for files recursively, so you can have a file of files if you need:\n\n```\n127.0.0.2\n10.0.0.0-10.0.0.100\n/tmp/blacklist.txt\n```\n\n## Redirecting non-whitelisted IP addresses\n\nNon-whitelisted IP addresses can be blocked or redirected. To configure redirection you'll have to publish the  `config.php` file and configure:\n\n```php\n'redirect_non_whitelisted_to' => 'coming/soon',\n```\n\n## Artisan Commands\n\nYou have access to the following commands:\n\n#### Global\n\n```\n  firewall:cache:clear  Clear the firewall cache.\n  firewall:list         List all IP address, white and blacklisted.\n  firewall:updategeoip  Update the GeoIP database.\n```\n\n#### When database is enabled\n\n```\n  firewall:blacklist          Add an IP address to blacklist.\n  firewall:clear              Remove all ip addresses from white and black lists.\n  firewall:remove             Remove an IP address from white or black list.\n  firewall:whitelist          Add an IP address to whitelist.\n```\n\nThose are results from `firewall:list`:\n\n```\n+--------------+-----------+-----------+\n| IP Address   | Whitelist | Blacklist |\n+--------------+-----------+-----------+\n| 10.17.12.7   |           |     X     |\n| 10.17.12.100 |     X     |           |\n| 10.17.12.101 |     X     |           |\n| 10.17.12.102 |     X     |           |\n| 10.17.12.200 |           |     X     |\n+--------------+-----------+-----------+\n```\n\n```\n+-----------------------+-----------+-----------+\n| IP Address            | Whitelist | Blacklist |\n+-----------------------+-----------+-----------+\n| 172.0.0.0-172.0.0.255 |           |     X     |\n| country:br            |           |     X     |\n| host:mypc.myname.com  |     X     |           |\n+-----------------------+-----------+-----------+\n```\n\n## Facade\n\nYou can also use the `Firewall Facade` to manage the lists:\n\n```php\n$whitelisted = Firewall::isWhitelisted('10.17.12.1');\n$blacklisted = Firewall::isBlacklisted('10.0.0.3');\n\nFirewall::whitelist('192.168.1.1');\nFirewall::blacklist('10.17.12.1', true); /// true = force in case IP is whitelisted\nFirewall::blacklist('127.0.0.0-127.0.0.255');\nFirewall::blacklist('200.212.331.0/28');\nFirewall::blacklist('country:br');\n\nif (Firewall::whichList($ip) !== false)  // returns false, 'whitelist' or 'blacklist'\n{\n    Firewall::remove($ip);\n}\n```\n\nReturn a blocking access response:\n\n```php\nreturn Firewall::blockAccess();\n```\n\nSuspicious events will be (if you wish) logged, so `tail` it:\n\n```\nphp artisan tail\n```\n\n## Blocking Whole Countries\n\nYou can block a country by, instead of an ip address, pass `country:<2-letter ISO code>`. So, to block all Brazil's IP addresses, you do:\n\n```\nphp artisan firewall:blacklist country:br\n```\n\nYou will have to add this requirement to your `composer.json` file:\n\n```\n\"geoip/geoip\": \"~1.14\"\n```\n\nor\n\n```\n\"geoip2/geoip2\": \"~2.0\"\n```\n\nYou need to enable country search on your firewall.php config file: \n\n```php\n'enable_country_search' => true,\n```\n\nAnd you can schedule this command to update your cities GeoIp database regularly: \n\n```\nphp artisan firewall:updategeoip\n```\n\nYou can find those codes here: [isocodes](http://www.spoonfork.org/isocodes.html)\n\n## Session Blocking\n\nYou can block users from accessing some pages only for the current session, by using those methods:\n\n```php\nFirewall::whitelistOnSession($ip);\nFirewall::blacklistOnSession($ip);\nFirewall::removeFromSession($ip);\n```\n\n## Playground & Bootstrap App \n\nClick [here](http://pragmarx.com/firewall) to see it working and in case you need a help figuring out things, try [this repository](https://github.com/antonioribeiro/pragmarx.com). \n\n![playground](docs/playground.png)\n\n## Installation\n\n### Compatible with\n\n- Laravel 4+ (version 1.*) \n- Laravel 5.0, 5.1, 5.2 and 5.3 (version 1.*)\n- Laravel 5.4, 5.5, 5.6 and 5.7 (version 2.*)\n\n### Installing\n\nRequire the Firewall package using [Composer](https://getcomposer.org/doc/01-basic-usage.md):\n\n```\ncomposer require pragmarx/firewall\n```\n\n* Laravel 5.5 and up\n\n    You don't have to do anything else, this package uses Package Auto-Discovery's feature, and should be available as soon as you install it via Composer.\n\n* Laravel 5.4 and below\n\n    Add the Service Provider and the Facade to your app/config/app.php:\n\n```php\nPragmaRX\\Firewall\\Vendor\\Laravel\\ServiceProvider::class,\n```\n\n```php\n'Firewall' => PragmaRX\\Firewall\\Vendor\\Laravel\\Facade::class,\n```\n\nAdd middlewares to your app/Http/Kernel.php\n\n```php\nprotected $routeMiddleware = [\n    ...\n    'fw-only-whitelisted' => \\PragmaRX\\Firewall\\Middleware\\FirewallWhitelist::class,\n    'fw-block-blacklisted' => \\PragmaRX\\Firewall\\Middleware\\FirewallBlacklist::class,\n    'fw-block-attacks' => \\PragmaRX\\Firewall\\Middleware\\BlockAttacks::class,\n];\n```\n\nor \n\n```php\nprotected $middlewareGroups = [\n    'web' => [\n        ...\n    ],\n\n    'api' => [\n        ...\n    ],\n    \n    'firewall' => [\n        \\PragmaRX\\Firewall\\Middleware\\FirewallBlacklist::class,\n        \\PragmaRX\\Firewall\\Middleware\\BlockAttacks::class,\n    ],\n];\n```\n\nThen you can use them in your routes:\n\n```php\nRoute::group(['middleware' => 'fw-block-blacklisted'], function () \n{\n    Route::get('/', 'HomeController@index');\n});\n```\n\nOr you could use both. In the following example the allow group will give free access to the 'coming soon' page and block or just redirect non-whitelisted IP addresses to another, while still blocking access to the blacklisted ones.\n\n```php\nRoute::group(['middleware' => 'fw-block-blacklisted'], function () \n{\n    Route::get('coming/soon', function()\n    {\n        return \"We are about to launch, please come back in a few days.\";\n    });\n\n    Route::group(['middleware' => 'fw-only-whitelisted'], function () \n    {\n        Route::get('/', 'HomeController@index');\n    });\n});\n```\n\n**Note:** You can add other middleware you have already created to the new groups by simply \nadding it to the `fw-allow-wl` or `fw-block-bl` middleware group.\n\nMigrate your database\n\n```\nphp artisan migrate\n```\n\n**Warning:** If you already have a Firewall package installed and migrated, you need to update your migration name, in the `migrations` table, to `2014_02_01_311070_create_firewall_table`, otherwise the migrate command will fail tell you the table already exists.  \n\nTo publish the configuration file you'll have to:\n\n**Laravel 4**\n\n```\nphp artisan config:publish pragmarx/firewall\n```\n\n**Laravel 5**\n\n```\nphp artisan vendor:publish --provider=\"PragmaRX\\Firewall\\Vendor\\Laravel\\ServiceProvider\"\n```\n\n## TODO\n\n- Tests, tests, tests.\n\n## Author\n\n[Antonio Carlos Ribeiro](http://twitter.com/iantonioribeiro) \n\n## License\n\nFirewall is licensed under the BSD 3-Clause License - see the `LICENSE` file for details\n\n## Contributing\n\nPull requests and issues are more than welcome.\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}