{
  "metadata": {
    "timestamp": 1736711865800,
    "page": 207,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tastyigniter/TastyIgniter",
      "stars": 3065,
      "defaultBranch": "3.x",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3583984375,
          "content": "# EditorConfig helps developers define and maintain consistent\n# coding styles between different editors and IDEs: editorconfig.org\n\nroot = true\n\n[*]\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml,json,scss,css}]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.15234375,
          "content": "*.css linguist-vendored\n*.scss linguist-vendored\n*.js linguist-vendored\n\n# Set the default behavior, in case people don't have core.autocrlf set.\ntext=auto\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1376953125,
          "content": ".DS_Store\n.idea\n.htaccess\n.env\n.phpunit.result.cache\n\n# Ignore all vendor files included by composer and the lock file\n/vendor\ncomposer.lock\n"
        },
        {
          "name": ".nginx.conf",
          "type": "blob",
          "size": 1.3310546875,
          "content": "## Pass requests that don't refer directly to files in the filesystem to index.php\nlocation / { try_files $uri $uri/ /index.php?$query_string; }\n\n## Pass the PHP scripts to FastCGI server\nlocation ~ ^/index.php {\n## Write your FPM configuration here\n\n}\n\n## Whitelist\nlocation ~ ^/favicon\\.ico { try_files $uri /index.php; }\nlocation ~ ^/sitemap\\.xml { try_files $uri /index.php; }\n\n## Block all .dotfiles except well-known\nlocation ~ /\\.(?!well-known).* { deny all; }\n\n### Let nginx return 404 if static file does not exists\nlocation ~ ^/assets/media { try_files $uri 404; }\nlocation ~ ^/storage/temp/public { try_files $uri 404; }\n\nlocation ~ ^/app/.*/assets { try_files $uri 404; }\nlocation ~ ^/app/.*/actions/.*/assets { try_files $uri 404; }\nlocation ~ ^/app/.*/dashboardwidgets/.*/assets { try_files $uri 404; }\nlocation ~ ^/app/.*/formwidgets/.*/assets { try_files $uri 404; }\nlocation ~ ^/app/.*/widgets/.*/assets { try_files $uri 404; }\n\nlocation ~ ^/extensions/.*/.*/assets { try_files $uri 404; }\nlocation ~ ^/extensions/.*/.*/actions/.*/assets { try_files $uri 404; }\nlocation ~ ^/extensions/.*/.*/dashboardwidgets/.*/assets { try_files $uri 404; }\nlocation ~ ^/extensions/.*/.*/formwidgets/.*/assets { try_files $uri 404; }\nlocation ~ ^/extensions/.*/.*/widgets/.*/assets { try_files $uri 404; }\n\nlocation ~ ^/themes/.*/assets { try_files $uri 404; }\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.072265625,
          "content": "The MIT License (MIT)\n\nCopyright (c) Samuel Adepoyigi <sam@sampoyigi.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and\nassociated documentation files (the \"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\nOR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.08984375,
          "content": "<p align=\"center\"><a href=\"https://tastyigniter\" target=\"_blank\"><img src=\"https://tastyigniter.com/images/logos/logo-padded.png\" width=\"400\"></a></p>\n\n<p align=\"center\">\n<a href=\"https://packagist.org/packages/tastyigniter/TastyIgniter\"><img src=\"https://img.shields.io/packagist/v/tastyigniter/TastyIgniter.svg?label=Stable&style=flat-square\" alt=\"Stable\"></a>\n<a href=\"https://packagist.org/packages/tastyigniter/TastyIgniter\"><img src=\"https://poser.pugx.org/tastyigniter/flame/downloads\" alt=\"Total Downloads\"></a>\n<a href=\"https://packagist.org/packages/tastyigniter/TastyIgniter\"><img src=\"https://img.shields.io/github/actions/workflow/status/tastyigniter/TastyIgniter/tests.yml?branch=3.x&label=Tests\" alt=\"GitHub Workflow Status\"></a>\n<a href=\"https://github.styleci.io/repos/16455664\"><img src=\"https://github.styleci.io/repos/7548986/shield?style=flat\" alt=\"Build Status\"></a>\n<a href=\"https://github.com/tastyigniter/TastyIgniter/blob/master/LICENSE.txt\"><img src=\"https://img.shields.io/github/license/tastyigniter/TastyIgniter.svg?label=License&style=flat-square\" alt=\"License\"></a>\n<a href=\"https://crowdin.com/project/tastyigniter\"><img src=\"https://badges.crowdin.net/tastyigniter/localized.svg\" alt=\"Crowdin\"></a>\n<a href=\"https://twitter.com/TastyIgniter\"><img src=\"https://img.shields.io/twitter/follow/TastyIgniter.svg?label=Follow\" alt=\"Twitter\"></a>\n</p>\n\n[TastyIgniter](https://tastyigniter.com/) provides a professional and reliable platform for restaurants wanting to offer\nonline food ordering and table reservation to their customers.\n\n![screenshot](https://tastyigniter.com/images/mockups/Menus-v2.png)\n\n### Documentation\nThe best place to learn TastyIgniter is by reading the [documentation](https://tastyigniter.com/docs)\n\n### Installation\nPlease read the [Installation Guide](https://tastyigniter.com/docs/installation) for more information.\n\n### Questions\nFor questions and support please use the [Community Forum](https://forum.tastyigniter.com) or [Join us on Discord](https://tastyigniter.com/discord). \n\n### Issues\nPlease report bugs using the [GitHub issue tracker](https://github.com/tastyigniter/TastyIgniter/issues)\n\n### Stay in touch\n- [Follow us on Twitter](https://twitter.com/tastyigniter/) for announcements and updates.\n- [Blog](https://tastyigniter.com/blog) for tips and latest developments in the food industry.\n\n## Contributing\nWe would love your help building TastyIgniter! Please read the [Contributing Guidelines](.github/CONTRIBUTING.md) to learn how you can help.\n\nThank you to all the people who already contributed to TastyIgniter!\n\n<a href=\"https://github.com/tastyigniter/TastyIgniter/graphs/contributors\"><img src=\"https://opencollective.com/tastyigniter/contributors.svg?width=890&button=false\" /></a>\n\n## Supporting TastyIgniter\nTastyIgniter is an MIT-licensed community-driven project with its continuous development made possible by the support of these awesome [backers](#contributing). If you'd like to help support the future of the project, please consider:\n1. Donating development time to the project.\n2. Spreading the word about TastyIgniter.\n3. Becoming a sponsor by donating funds (see below).\n\n## Sponsors\nBecome a sponsor and get your logo on our README on Github with a link to your site. \n\n### via Open Collective\n<a href=\"https://opencollective.com/tastyigniter\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://opencollective.com/tastyigniter/sponsors.svg\"></a>\n\n<a href=\"https://opencollective.com/tastyigniter\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://opencollective.com/tastyigniter/backers.svg\"></a>\n\n### via Patreon\n[[Become a Patreon sponsor](https://www.patreon.com/sampoyigi)]\n\n## Built With :heart:\n- Laravel full-stack PHP framework\n- Bootstrap 4 front-end framework\n\n## Author\nTastyIgniter was created by [Samuel Adepoyigi](https://github.com/sampoyigi).\n\n## Security Vulnerabilities\nIf you discover a security vulnerability within TastyIgniter, please send an e-mail to support@tastyigniter.com.\n\n## License\nStarting with version 3.0.0 TastyIgniter is licensed under the [The MIT License (MIT)](https://tastyigniter.com/license/). Older versions were GPL-licensed.\n\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "artisan",
          "type": "blob",
          "size": 1.615234375,
          "content": "#!/usr/bin/env php\n<?php\n\n/*\n|--------------------------------------------------------------------------\n| Register The Auto TemplateLoader\n|--------------------------------------------------------------------------\n|\n| Composer provides a convenient, automatically generated class loader\n| for our application. We just need to utilize it! We'll require it\n| into the script here so that we do not have to worry about the\n| loading of any our classes \"manually\". Feels great to relax.\n|\n*/\n\nrequire __DIR__.'/bootstrap/autoload.php';\n\n$app = require_once __DIR__.'/bootstrap/app.php';\n\n/*\n|--------------------------------------------------------------------------\n| Run The Artisan Application\n|--------------------------------------------------------------------------\n|\n| When we run the console application, the current CLI command will be\n| executed in this console and the response sent back to a terminal\n| or another output device for the developers. Here goes nothing!\n|\n*/\n\n$kernel = $app->make(Illuminate\\Contracts\\Console\\Kernel::class);\n\n$status = $kernel->handle(\n    $input = new Symfony\\Component\\Console\\Input\\ArgvInput,\n    new Symfony\\Component\\Console\\Output\\ConsoleOutput\n);\n\n/*\n|--------------------------------------------------------------------------\n| Shutdown The Application\n|--------------------------------------------------------------------------\n|\n| Once Artisan has finished running, we will fire off the shutdown events\n| so that any final work may be done by the application before we shut\n| down the process. This is the last thing to happen to the request.\n|\n*/\n\n$kernel->terminate($input, $status);\n\nexit($status);\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstrap",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.689453125,
          "content": "{\n  \"name\": \"tastyigniter/tastyigniter\",\n  \"description\": \"TastyIgniter is a free open source online ordering and restaurant management system\",\n  \"type\": \"project\",\n  \"keywords\": [\n    \"tastyigniter\", \"igniter\", \"restaurant\",\n    \"ordering\", \"ecommerce\", \"opensource\"\n  ],\n  \"authors\": [\n    {\n      \"name\": \"Samuel Adepoyigi\",\n      \"email\": \"sam@sampoyigi.com\",\n      \"role\": \"Creator\"\n    }\n  ],\n  \"license\": \"MIT\",\n  \"homepage\": \"https://tastyigniter.com\",\n  \"support\": {\n    \"paid\": \"https://tastyigniter.com/premium-support\",\n    \"issues\": \"https://github.com/tastyigniter/TastyIgniter/issues\",\n    \"forum\": \"https://forum.tastyigniter.com\",\n    \"discord\": \"https/tastyigniter.com/discord\",\n    \"docs\": \"https://tastyigniter.com/docs\",\n    \"source\": \"https://github.com/tastyigniter/TastyIgniter\"\n  },\n  \"require\": {\n    \"php\": \">=7.4\",\n    \"composer/installers\": \"dev-main as 2.0\",\n    \"tastyigniter/flame\": \"~1.2\",\n    \"tastyigniter/ti-module-system\": \"~3.0\",\n    \"tastyigniter/ti-module-admin\": \"~3.0\",\n    \"tastyigniter/ti-module-main\": \"~3.0\",\n    \"laravel/framework\": \"~8.0\"\n  },\n  \"require-dev\": {\n    \"phpunit/phpunit\": \"^9.0\",\n    \"facade/ignition\": \"^2.5\",\n    \"fakerphp/faker\": \"~1.14\",\n    \"squizlabs/php_codesniffer\": \"3.*\",\n    \"jakub-onderka/php-parallel-lint\": \"^1.0\"\n  },\n  \"autoload-dev\": {\n    \"psr-4\": {\n      \"Tests\\\\\": \"tests\"\n    }\n  },\n  \"scripts\": {\n    \"post-create-project-cmd\": [\n      \"php artisan key:generate\"\n    ]\n  },\n  \"minimum-stability\": \"dev\",\n  \"prefer-stable\": true,\n  \"extra\": {\n    \"laravel\": {\n      \"dont-discover\": [\n        \"*\"\n      ]\n    }\n  },\n  \"config\": {\n    \"allow-plugins\": {\n      \"composer/installers\": true,\n      \"wikimedia/composer-merge-plugin\": true\n    }\n  }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "example.env",
          "type": "blob",
          "size": 0.57421875,
          "content": "# APP CONFIG (DO NOT REMOVE!)\nAPP_NAME=\nAPP_ENV=production\nAPP_KEY=\nAPP_DEBUG=false\nAPP_URL=\n\nIGNITER_LOCATION_MODE=multiple\n\n# DATABASE CONFIG (DO NOT REMOVE!)\nDB_CONNECTION=mysql\nDB_HOST=\nDB_PORT=\nDB_DATABASE=\nDB_USERNAME=\nDB_PASSWORD=\nDB_PREFIX=\n\nBROADCAST_DRIVER=log\nCACHE_DRIVER=file\nQUEUE_CONNECTION=sync\nSESSION_DRIVER=file\nSESSION_LIFETIME=120\n\nREDIS_HOST=127.0.0.1\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n\nMAIL_MAILER=log\nMAIL_HOST=null\nMAIL_PORT=null\nMAIL_USERNAME=null\nMAIL_PASSWORD=null\nMAIL_ENCRYPTION=null\nMAIL_FROM_ADDRESS=noreply@tastyigniter.tld\nMAIL_FROM_NAME=\"${APP_NAME}\"\n"
        },
        {
          "name": "example.htaccess",
          "type": "blob",
          "size": 1.4873046875,
          "content": "<IfModule mod_rewrite.c>\n  <IfModule mod_negotiation.c>\n    Options -MultiViews -Indexes\n  </IfModule>\n\n  ## You may need to uncomment the following line for some hosting environments,\n  ## to use URL Alias you need to be running apache with mod_rewrite enabled.\n  ##\n  # Options +FollowSymlinks\n\n  ## Turn on URL rewriting\n  ##\n  RewriteEngine On\n\n  ## !IMPORTANT! You may need to uncomment the following line for some hosting environments,\n  ## If your installation resides in a subdirectory, enter the name here also\n  ##\n  # RewriteBase /\n\n  # Handle Authorization Header\n  RewriteCond %{HTTP:Authorization} .\n  RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]\n\n  ## Redirect index.php from url to prevent duplicate urls\n  ##\n  RewriteCond %{THE_REQUEST} /index\\.php [NC]\n  RewriteRule ^(.*?)index\\.php[^/] /$1? [L,R=301,NC,NE]\n\n  RewriteCond %{THE_REQUEST} /index\\.php [NC]\n  RewriteRule ^(.*?)index\\.php(?:/(.*))?$ /$1$2? [L,R=301,NC,NE]\n\n  ## Redirect Trailing Slashes If Not A Folder...\n  ##\n  RewriteCond %{REQUEST_FILENAME} !-d\n  RewriteCond %{REQUEST_URI} (.+)/$\n  RewriteRule ^ %1 [L,R=301]\n\n  ## Block all PHP files, except index\n  ##\n  RewriteCond %{REQUEST_FILENAME} -f\n  RewriteCond %{REQUEST_FILENAME} \\.php$\n  RewriteRule !^index.php index.php [L,NC]\n\n  ## Blacklisted folders\n  ##\n  RewriteRule ^assets/downloads/(.*) not_found [L]\n\n  # Handle Front Controller...\n  ##\n  RewriteCond %{REQUEST_FILENAME} !-f\n  RewriteCond %{REQUEST_FILENAME} !-d\n  RewriteRule ^ index.php [L,QSA]\n</IfModule>\n"
        },
        {
          "name": "extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 1.7509765625,
          "content": "<?php\n\n/**\n * TastyIgniter - An online ordering and restaurant management system\n *\n * @package  TastyIgniter\n * @author   Samuel Adepoyigi\n */\n\n/*\n|--------------------------------------------------------------------------\n| Register The Auto ClassLoader\n|--------------------------------------------------------------------------\n|\n| Composer provides a convenient, automatically generated class loader for\n| our application. We just need to utilize it! We'll simply require it\n| into the script here so that we don't have to worry about manual\n| loading any of our classes later on. It feels great to relax.\n|\n*/\n\nrequire __DIR__.'/bootstrap/autoload.php';\n\n/*\n|--------------------------------------------------------------------------\n| Turn On The Lights\n|--------------------------------------------------------------------------\n|\n| We need to illuminate PHP development, so let us turn on the lights.\n| This bootstraps the framework and gets it ready for use, then it\n| will load up this application so that we can run it and send\n| the responses back to the browser and delight our users.\n|\n*/\n\n$app = require_once __DIR__.'/bootstrap/app.php';\n\n/*\n|--------------------------------------------------------------------------\n| Run The Application\n|--------------------------------------------------------------------------\n|\n| Once we have the application, we can handle the incoming request\n| through the kernel, and send the associated response back to\n| the client's browser allowing them to enjoy the creative\n| and wonderful application we have prepared for them.\n|\n*/\n\n$kernel = $app->make(Illuminate\\Contracts\\Http\\Kernel::class);\n\n$response = $kernel->handle(\n    $request = Illuminate\\Http\\Request::capture()\n);\n\n$response->send();\n\n$kernel->terminate($request, $response);\n"
        },
        {
          "name": "phpunit.dusk.xml",
          "type": "blob",
          "size": 0.69921875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\">\n    <testsuites>\n        <testsuite name=\"Browser Test Suite\">\n            <directory suffix=\"Test.php\">./tests/Browser</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">./app</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 1.2626953125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\">\n    <testsuites>\n        <testsuite name=\"TastyIgniter Unit Test Suite\">\n            <directory>./tests/Unit</directory>\n        </testsuite>\n        <testsuite name=\"TastyIgniter Feature Test Suite\">\n            <directory>./tests/Feature</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">./app</directory>\n        </whitelist>\n    </filter>\n    <php>\n        <server name=\"APP_ENV\" value=\"testing\"/>\n        <server name=\"BCRYPT_ROUNDS\" value=\"4\"/>\n        <!-- <server name=\"DB_CONNECTION\" value=\"sqlite\"/> -->\n        <!-- <server name=\"DB_DATABASE\" value=\":memory:\"/> -->\n        <server name=\"CACHE_DRIVER\" value=\"array\"/>\n        <server name=\"SESSION_DRIVER\" value=\"array\"/>\n        <server name=\"MAIL_MAILER\" value=\"array\"/>\n        <server name=\"QUEUE_CONNECTION\" value=\"sync\"/>\n    </php>\n</phpunit>\n"
        },
        {
          "name": "robots.txt",
          "type": "blob",
          "size": 0.0302734375,
          "content": "User-agent: *\nDisallow: /admin/"
        },
        {
          "name": "server.php",
          "type": "blob",
          "size": 0.5439453125,
          "content": "<?php\n\n/**\n * TastyIgniter - An online ordering and restaurant management system\n *\n * @package  TastyIgniter\n * @author   Samuel Adepoyigi\n */\n\n$uri = urldecode(\n    parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH)\n);\n\n// This file allows us to emulate Apache's \"mod_rewrite\" functionality from the\n// built-in PHP web server. This provides a convenient way to test a Laravel\n// application without having installed a \"real\" web server software here.\nif ($uri !== '/' && file_exists(__DIR__.$uri)) {\n    return false;\n}\n\nrequire_once __DIR__.'/index.php';\n"
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "themes",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}