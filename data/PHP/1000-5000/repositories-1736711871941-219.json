{
  "metadata": {
    "timestamp": 1736711871941,
    "page": 219,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "composer/ca-bundle",
      "stars": 2952,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.68359375,
          "content": "# Auto-detect text files, ensure they use LF.\n*       text=auto eol=lf\n\n# These files are always considered text and should use LF.\n# See core.whitespace @ http://git-scm.com/docs/git-config for whitespace flags.\n*.php   text eol=lf whitespace=blank-at-eol,blank-at-eof,space-before-tab,tab-in-indent,tabwidth=4 diff=php\n*.json  text eol=lf whitespace=blank-at-eol,blank-at-eof,space-before-tab,tab-in-indent,tabwidth=4\n\n# Ignore these files in GitHub dists and `git archive` actions.\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/.travis.yml export-ignore\n/.php_cs export-ignore\n/phpstan.neon.dist export-ignore\n/phpunit.xml.dist export-ignore\n/tests export-ignore\n/.github export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0703125,
          "content": "vendor/\ncomposer.lock\n.php_cs.cache\nbuild/\nreport/\n.phpunit.result.cache"
        },
        {
          "name": ".php_cs",
          "type": "blob",
          "size": 1.7861328125,
          "content": "<?php\n\n$header = <<<EOF\nThis file is part of composer/ca-bundle.\n\n(c) Composer <https://github.com/composer>\n\nFor the full copyright and license information, please view\nthe LICENSE file that was distributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->name('*.php')\n    ->in(__DIR__.'/src')\n;\n\nreturn PhpCsFixer\\Config::create()\n    ->setUsingCache(true)\n    //->setUsingLinter(false)\n    ->setRiskyAllowed(true)\n    ->setRules(array(\n        '@PSR2' => true,\n        'binary_operator_spaces' => true,\n        'blank_line_before_return' => true,\n        'cast_spaces' => true,\n        'header_comment' => array('header' => $header),\n        'include' => true,\n        'long_array_syntax' => true,\n        'method_separation' => true,\n        'no_blank_lines_after_class_opening' => true,\n        'no_blank_lines_after_phpdoc' => true,\n        'no_blank_lines_between_uses' => true,\n        'no_duplicate_semicolons' => true,\n        'no_extra_consecutive_blank_lines' => true,\n        'no_leading_import_slash' => true,\n        'no_leading_namespace_whitespace' => true,\n        'no_trailing_comma_in_singleline_array' => true,\n        'no_unused_imports' => true,\n        'no_whitespace_in_blank_lines' => true,\n        'object_operator_without_whitespace' => true,\n        'phpdoc_align' => true,\n        'phpdoc_indent' => true,\n        'phpdoc_no_access' => true,\n        'phpdoc_no_package' => true,\n        'phpdoc_order' => true,\n        'phpdoc_scalar' => true,\n        'phpdoc_trim' => true,\n        'phpdoc_type_to_var' => true,\n        'psr0' => true,\n        'single_blank_line_before_namespace' => true,\n        'standardize_not_equals' => true,\n        'ternary_operator_spaces' => true,\n        'trailing_comma_in_multiline_array' => true,\n    ))\n    ->finder($finder)\n;\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.02734375,
          "content": "Copyright (C) 2016 Composer\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.0478515625,
          "content": "composer/ca-bundle\n==================\n\nSmall utility library that lets you find a path to the system CA bundle,\nand includes a fallback to the Mozilla CA bundle.\n\nOriginally written as part of [composer/composer](https://github.com/composer/composer),\nnow extracted and made available as a stand-alone library.\n\n\nInstallation\n------------\n\nInstall the latest version with:\n\n```bash\n$ composer require composer/ca-bundle\n```\n\n\nRequirements\n------------\n\n* PHP 5.3.2 is required but using the latest version of PHP is highly recommended.\n\n\nBasic usage\n-----------\n\n### `Composer\\CaBundle\\CaBundle`\n\n- `CaBundle::getSystemCaRootBundlePath()`: Returns the system CA bundle path, or a path to the bundled one as fallback\n- `CaBundle::getBundledCaBundlePath()`: Returns the path to the bundled CA file\n- `CaBundle::validateCaFile($filename)`: Validates a CA file using openssl_x509_parse only if it is safe to use\n- `CaBundle::isOpensslParseSafe()`: Test if it is safe to use the PHP function openssl_x509_parse()\n- `CaBundle::reset()`: Resets the static caches\n\n\n#### To use with curl\n\n```php\n$curl = curl_init(\"https://example.org/\");\n\n$caPathOrFile = \\Composer\\CaBundle\\CaBundle::getSystemCaRootBundlePath();\nif (is_dir($caPathOrFile)) {\n    curl_setopt($curl, CURLOPT_CAPATH, $caPathOrFile);\n} else {\n    curl_setopt($curl, CURLOPT_CAINFO, $caPathOrFile);\n}\n\n$result = curl_exec($curl);\n```\n\n#### To use with php streams\n\n```php\n$opts = array(\n    'http' => array(\n        'method' => \"GET\"\n    )\n);\n\n$caPathOrFile = \\Composer\\CaBundle\\CaBundle::getSystemCaRootBundlePath();\nif (is_dir($caPathOrFile)) {\n    $opts['ssl']['capath'] = $caPathOrFile;\n} else {\n    $opts['ssl']['cafile'] = $caPathOrFile;\n}\n\n$context = stream_context_create($opts);\n$result = file_get_contents('https://example.com', false, $context);\n```\n\n#### To use with Guzzle\n\n```php\n$client = new \\GuzzleHttp\\Client([\n    \\GuzzleHttp\\RequestOptions::VERIFY => \\Composer\\CaBundle\\CaBundle::getSystemCaRootBundlePath()\n]);\n```\n\nLicense\n-------\n\ncomposer/ca-bundle is licensed under the MIT License, see the LICENSE file for details.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.2880859375,
          "content": "{\n    \"name\": \"composer/ca-bundle\",\n    \"description\": \"Lets you find a path to the system CA bundle, and includes a fallback to the Mozilla CA bundle.\",\n    \"type\": \"library\",\n    \"license\": \"MIT\",\n    \"keywords\": [\n        \"cabundle\",\n        \"cacert\",\n        \"certificate\",\n        \"ssl\",\n        \"tls\"\n    ],\n    \"authors\": [\n        {\n            \"name\": \"Jordi Boggiano\",\n            \"email\": \"j.boggiano@seld.be\",\n            \"homepage\": \"http://seld.be\"\n        }\n    ],\n    \"support\": {\n        \"irc\": \"irc://irc.freenode.org/composer\",\n        \"issues\": \"https://github.com/composer/ca-bundle/issues\"\n    },\n    \"require\": {\n        \"ext-openssl\": \"*\",\n        \"ext-pcre\": \"*\",\n        \"php\": \"^7.2 || ^8.0\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^8 || ^9\",\n        \"phpstan/phpstan\": \"^1.10\",\n        \"psr/log\": \"^1.0 || ^2.0 || ^3.0\",\n        \"symfony/process\": \"^4.0 || ^5.0 || ^6.0 || ^7.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Composer\\\\CaBundle\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Composer\\\\CaBundle\\\\\": \"tests\"\n        }\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-main\": \"1.x-dev\"\n        }\n    },\n    \"scripts\": {\n        \"test\": \"@php phpunit\",\n        \"phpstan\": \"@php phpstan analyse\"\n    }\n}\n"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.064453125,
          "content": "parameters:\n    level: 8\n    paths:\n        - src\n        - tests\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.716796875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    backupGlobals=\"false\"\n    backupStaticAttributes=\"false\"\n    colors=\"true\"\n    convertErrorsToExceptions=\"true\"\n    convertNoticesToExceptions=\"true\"\n    convertWarningsToExceptions=\"true\"\n    processIsolation=\"false\"\n    stopOnFailure=\"false\"\n    bootstrap=\"vendor/autoload.php\"\n    xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\"\n>\n    <testsuites>\n        <testsuite name=\"CaBundle Test Suite\">\n            <directory>./tests/</directory>\n        </testsuite>\n    </testsuites>\n    <coverage>\n        <include>\n            <directory>./src/</directory>\n        </include>\n    </coverage>\n</phpunit>\n"
        },
        {
          "name": "res",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}