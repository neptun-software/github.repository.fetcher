{
  "metadata": {
    "timestamp": 1736712017038,
    "page": 524,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Payum/Payum",
      "stars": 1857,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.16015625,
          "content": ".idea\ncomposer.phar\ncomposer.lock\nphpunit.xml\ncov\nvendor\nbin\nsrc/Payum/Core/Bridge/Propel2/Model/Base\nsrc/Payum/Core/Bridge/Propel2/Model/Map\n.phpunit.result.cache\n"
        },
        {
          "name": ".php-version",
          "type": "blob",
          "size": 0.00390625,
          "content": "8.0\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 30.9169921875,
          "content": "# Changelog\n\n## 2.0.0 (TBD)\n\n* Drop support for PHP 7.x\n* Drop support for Twig 1.x\n* Remove payum/iso4217 package\n* Remove support for Propel storage\n\n## 1.5.0 (2018-01-09)\n\n* add tests for encoded requests\n* add RequestTokenVerifier, use league uri to check urls\n* require league/uri 5 in core too\n* add support of omnipay v3\n* Upgrade phpunit\n* removed PHP 5.5/5.6 support\n* Change community gateway for Braintree\n* Some docs improvements\n* Removed unused use referencing Sonata Admin Bundle\n* [stripe] add create subscription action.\n* [be2bill] add support of 3dSecure.\n* [payex] remove doctrine from deps\n* [payex] upd test wsdl link\n* [offline] added refund and payout actions to offline gateway\n\n## 1.4.3 (2017-09-01)\n* [bridge][omnipay-v3] make compatible with OmnipayV3Bridge\n\n## 1.4.2 (2017-06-21)\n\n* [paypal-ec] Re-factor CancelRecurringPaymentsProfileAction as actions proxy\n* [paypal-ec] Change CancelRecurringPaymentsProfileAction namespace\n* [paypal-ec] Fix PayPal express checkout NVP Cancel action support scope\n\n## 1.4.1 (2017-06-21)\n\n* [core] Do not use base api classes where it is appropriate\n* [core] Do not use GatewayAwareAction class. Use interface + trait\n* [sofort] add an exception if invalid config key given\n* [sofort] Add ability to disable notifications.\n* [doc] Minor gramatical changes\n* [doc] Add new Uniteller gateway for ^1.4 version\n* [doc] Update instant-payment-notification.md\n* [doc] Upgrade 3rd party libs requirments\n* [doc] Update examples.md\n* [doc] Add docs on how to encrypt and store gateway configs in database\n\n## 1.4.0 (2017-03-24)\n\n* [security] Add ability to crypt data stored to database\n* [doc] Fix broken repo url\n\n## 1.3.11 (2017-03-22)\n\n* [klarna][checkout] Fix default uris options are not set correctly to config obj.\n* [doc] Fix scripts links\n* [doc] Fix config include, when create a capture url\n* [doc] Correct description for catchReply argument.\n* code style fixes\n\n## 1.3.10 (2017-02-03)\n\n* [bridge][symfony] Allow choices to be defined as callbacks.\n* [docs] Fix code examples. Add namespace imports to code examples\n* [docs] Put all docs in one place.\n* [travis] Fix library version conflict\n* [travis] Prevent build fails when commit often.\n\n## 1.3.9 (2017-01-31)\n\n* [paypal][rest] Fix testsFix comments starting with # are deprecated\n* [core] Twig 2.x - compatibility\n* [paypal][ec] Mark reversed payments failed\n* [doc] various typo fixes and improvements \n\n## 1.3.8 (2016-10-04)\n\n* [gateway] Remove `guzzle.client` from the gateway factory config\n* [doc][paypal-rest] Init payment class variable with correct model class name.\n* [skeleton] Update AuthorizeAction.php\n* fix tests, failed after some changes in league/uri lib.\n* [doc] Fix typo\n\n## 1.3.7 (2016-09-16)\n\n* [paypal] Add support of Paypal Pro Hosted payments.\n* [stripe] error not detected in some cases.\n* [stripe] add an action to get a credit card token from payment details.\n* [paypal-ec] add support of cancel request.\n* [security] Add createCancelToken method\n* [skeleton] Remove deprecated features from skeleton.\n* [be2bill] fix composer.json\n* Require payum/core 1.3 as minimum version.\n* Reuse splitsh-lite tool to split main repo.\n* [doc] fix various typos.\n\n## 1.3.6 (2016-07-25)\n\n* [gateway] Better handing for exception thrown on onPostExecute while processing an exception (EntityManager is closed issue).\n\n## 1.3.5 (2016-07-13)\n\n* Made ApiAwareTrait interface tolerant\n\n## 1.3.4 (2016-06-09)\n\n* [paypal][masspay] Fix bugs.\n* Updated guzzle6-adapter dependency & rolled back a workaround\n* Added tests for Httplug client & message/stream factories\n* Fix for Guzzle6 default client creation\n* Exception messages fix (added php-http/curl-client to hints)\n* Default config values priority fix\n* Fixed default client creation for CurlAdapter; added httplug.stream_factory to default options\n* fix doc typos\n\n## 1.3.3 (2016-05-31)\n\n* [twig] Postpone twig configuration and paths injection.\n* [registry] fix exception message in getStorage method when object is given.\n* add better messages on errors in api aware trait\n* Fix stripe auto open\n* [registry] Return dynamically stored gateways.\n* [registry] First check factory option from config. Deprecate getFactoryName method\n* [registry] Do not fallback to static registry in dynamic one. Use fallback for that.\n\n## 1.3.2 (2016-04-29)\n\n* [doc] Add how to contribute from sub repository doc\n* [paypal][rest] Return the api context in the config closure\n* [symfony] Do not fail on empty request stack\n* [registry] Keep already created gateway instances\n\n## 1.2.9 (2016-04-29)\n\n* [symfony] Do not fail on empty request stack\n\n## 1.3.1 (2016-04-15)\n\n* [paypal] Add support of Paypal Masspay.\n* [paypal][ec] Fix usage of PENDINGREASON (paymentinfo instead of paymentrequest).\n* [paypal][rest] Fixes and cleanups\n* [core] Introduce ApiAwareTrait, GatewayAwareTrait, GenericTokenFactoryAwareTrait.\n* [core] Add AuthorizePaymentAction.\n* [doc] Add docs for EventDispatcherExtension.\n\n## 1.3.0 (2016-03-29)\n\n* Foundation for payouts. Payout model, generic actions.\n* Foundation for direct bank debit. BankAccount model.\n* Decouple from Guzzle6. Use Httplug instead.\n* Replace league/url (abandoned) with league/uri.\n\n## 1.2.8 (2016-03-25)\n\n* [stripe] Allow use of explicitly passed credit card.\n* [bridge][symfony] Add Symfony's template engine aware `RenderTemplateAction` action.\n\n## 1.2.7 (2016-03-24)\n\n* [stripe] Subscription billing.\n\n## 1.2.6 (2016-03-18)\n\n* [bridge][symfony] add obtain credit card action builder.\n* [builder] Revert \"[builder] Allow create a gateway without explicit factory set. The core one is used.\"\n\n## 1.2.5 (2016-03-16)\n\n* [stripe] add ability to store credit card and charge it later.\n* [bridge] Allow Symfony 3 request stack\n* [doc] small doc fixes\n\n## 1.2.4 (2016-03-07)\n\n* [credit-card] Fixes **regression** in the bundle. Symfony's validator marks all fields as invalid on credit card form submission.\n* [skeleton] fix some typos.\n\n## 1.2.3 (2016-03-04)\n\n* [spl] add get method to array object. with default option.\n\n## 1.2.2 (2016-03-01)\n\n* [security] add ensure var is sensitive value method.\n* [security] add __debugInfo to SensitiveValue object.\n* [doc] various doc fixes\n\n## 1.2.1 (2016-02-22)\n\n* [doc] Update list of supported gateways\n* Add subtree split bin\n* Update deps of symfony phpunit bridge.\n* [sofort] Add sofort gateway\n* Add Gitter badge\n* [doc] Remove links to payum.org.\n* [doc] Create a main documentation landing page. prepare for payum.org shut down.\n\n\n## 1.2.0 (2016-02-12)\n\n* Supports Symfony 3.x\n* [symfony] Add GatewayFactoryBuilder\n* [symfony] Add CoreGatewayFactoryBuilder\n* [symfony] Add TokenFactoryBuilder\n* [symfony] Add HttpRequestVerifierBuilder\n* [symfony] Add ContainerAwareRegistry\n* [symfony] Add ContainerAwareCoreGatewayFactory\n* [twig] Improve twig loader injection. Inject it to custom twig instance. Do not inject the loader several times.\n* [builder] Allow to add configs several times and merge them, including core gateway, gateway, factory configs.\n* [builder] Allow create a gateway without explicitly setting a factory. The core one is used.\n* [http] Remove encription curl options, use default ones.\n* [paypal-ec] Fixed paypal status does not detect cancelled payments\n* [stripe] Updates stripe api to 2.0 - 3.x version.\n\n## 1.1.4 (2016-01-14)\n\n* [offline] add canceled status\n* [skeleton] Require payum/core with needed fix\n\n## 1.1.3 (2015-12-26)\n\n* [builder] Add abiliry to pass gateway factory factory, as callable\n* [action][creditcard] pass token with the request so that actionUrl is set.\n\n## 1.1.2 (2015-12-17)\n\n* [paypal-ec] Do not overwrite previous query parameters when adding cancelled=1 to cancel url.\n\n## 1.1.1 (2015-12-16)\n\n* [paypal-ec] Fix status action. The status must be pending when user comes back from Paypal side. \n\n## 1.1.0 (2015-12-11)\n\n* Supports PHP7\n* [builder] Add ability to customize concrete gateway factory config.\n* [action] Set action url to obtain credit card form\n* [security] Implement JsonSerializable interface of SensitiveValue.\n* [paypal-ec] Implemented DoCapture PayPal method\n* [paypal-ec] Add support of authorize request\n* [paypal-ec] Fixing an issue with marking paypal payment as canceled\n* [bridge][symfony] Fix response status code in obtain credit card action.\n* [offline] Add authorize action\n* [klarna] Add support of payment model. add converter for it.\n* [klarna] Add timeout tolerant fetch\\create\\update order.\n\n## 1.0.0 (2015-11-09)\n\n* [payumBuilder] add `addCoreGatewayFactoryConfig` method\n* [payum] add `getTokenStorage` method to payum object\n* [paypal][ec] better handling of cancelled payments.\n* [paypal][ec] add support of order confirmation step.\n* [stripe] pass payum token to obtain stripe token action.\n* [security] set token hash to token model if not set\n* [symfony] add gateways choice form type.\n* [payumBuilder][omnipay] skip broken gateways.\n* [payumBuilder][builder] auto register omnipay's factories.\n* [be2bill] Improve capture and notify actions, do not rely on session. Fully working solution.\n* [exception] add suggestion on how to troubleshoot request not supported issues.\n* [gateway] Allow use of injected api and gateway in `supports` method.\n* [doc] add Payum vs Omnipay doc.\n* [authorize.net] Use official sdk authorizenet/authorizenet-php deprecation.\n\n## 1.0.0-BETA4 (2015-09-29)\n\n* [reply] remove \"continue\", clicking on it user can do double payment\n* [factory] Add `UpdateRecurringPaymentProfileAction` config on PaymentFactory.\n\n## 1.0.0-BETA3 (2015-09-28)\n\n* [facade] add ability to pass builders (closures) to Payum facade builder, various bug fixes.\n\n## 1.0.0-BETA2 (2015-09-25)\n\n* [registry] add ability to disable auto adding of storage extensions.\n* [registry] Add FallbackRegistry\n* [facade] add Payum facade and its builder\n* [doc] Update supported-gateways.md\n* [paypal-ec] Fix empty paypal description\n* Licence owner is changed\n\n## 1.0.0-BETA1 (2015-08-14)\n\n* Drop support of php5.3 and php5.4\n* [vendors] Make some libraries non required. They are still required but \"softly\".\n* [http-client] Reuse PSR-7 as http client.\n* [twig] Move javascript vendors to separate twig block\n* [factory] Introduce core gateway factory.\n* [request] Add setter\\getter for parameters property in RenderTemplate request. Remove context.\n* [request] Add ability to pass first\\current models with obtain credit card request.\n* [symfony] Fix compatibility with Symfony 2.7\n* [symfony] Add EventDispatcherExtension.\n* [payex] Change exception message\n* [paypal][rest] require stable version of sdk.\n* [paypal][api] Replace $request by $fields\n* [klarna] Klarna Invoice Update\n* [klarna] Use sandbox recurring base uri if sandbox mode.\n* [stripe] Add currency to checkout token template\n* [stripe] Set stripe form payment action if variable exists\n* [stripe] Use stripe javascript object only after the script is loaded\n* [tests] use ::class whenever its possible\n* [travis] Run tests on php7\n\n## 0.15.4 (2015-09-29)\n\n* [reply] remove \"continue\", clicking on it user can do double payment\n* [factory] Add `UpdateRecurringPaymentProfileAction` config on PaymentFactory.\n\n## 0.15.3 (2015-08-03)\n\n* [buzz] Do not force TLSv1 Cipher for NSS.\n\n## 0.15.2 (2015-06-10)\n\n* [paypal-ec] Add `UpdateRecurringPaymentsProfile` require and an action for it.\n\n## 0.15.1 (2015-04-28)\n\n* [composer] Require stable versions\n\n## 0.15.0 (2015-04-27)\n\n* [extension] Rework extension. Introduce context.\n* [storage] Change `StorageInterface::findBy` returned value. It must be an array of object. or empty.\n* [doctrine][mongo] add a mapping for GatewayConfig.\n* [doc] document iso4217 use cases.\n* [request] decouple GetCurrency request from Payum\\ISO4217 lib.\n* [gateway] Allow pass custom instance of iso4217.\n* [travis] sudo: false\n* Add payum/iso4217 to composr deps.\n* Rename Order to Payment\n* Rename Payment and PaymentXXX classes to Gateway and GatewayXXX ones.\n* [action] Add ability to get ISO4217 info. Add a request and action for that. Simply payment interface.\n* [action] use Convert request in CapturePaymentAction.\n* [request] Add convert request. Remove FillOrderDetails one.\n* [symfony] Add `CreditCardDateValidator` validator.\n* [request] Make `GetHumanStatus` request compatible with interface.\n* [payment] add setter and getter for credit card on payment.\n* [stripe] add support of direct payments.\n* [stripe] improve payment status handling, add support of authorize\\refund. better handling of pending.\n* [klarna] Klarna return amount\n* [klarna] Klarna credit invoice\n* [klarna] Klarna resend invoice\n* [klarna-checkout] allow use of v2.0 SDK.\n* [klarna-checkout] check if acceptHeader property exists.\n* [klarna-checkout] change constant names\n* [klarna-checkout] add support of klarna checkout recurring payments.\n\n## 0.14.7 (2015-09-29)\n\n* [reply] remove \"continue\", clicking on it user can do double payment\n* [factory] Add `UpdateRecurringPaymentProfileAction` config on PaymentFactory.\n\n## 0.14.6 (2015-06-10)\n\n* [paypal-ec] Add `UpdateRecurringPaymentsProfile` require and an action for it.\n\n## 0.14.5 (2015-04-15)\n\n* [bridge][symfony] allow unset checkbox field (sandbox for example) on payment config form.\n* [composer] add symfony\\validator package to dev dependencies.\n\n## 0.14.4 (2015-04-08)\n\n* [symfony] Add `CreditCardDate` constraint. Checks that expiration date is greater than today.\n\n## 0.14.3 (2015-04-03)\n\n* Introduce Payment model. Deprecate Order model.\n* Introduce Gateway interfaces and classes. Deprecate Payment ones.\n* [doc] add basic examples.\n\n## 0.14.2 (2015-03-13)\n\n* [klarna-invoice] Fix payment factory. Always runs in live mode. \n\n## 0.14.1 (2015-03-12)\n\n* [paypal-ec] Add CancelRecurringPaymentsProfileAction. \n* [doc] update list of supported payments\n\n## 0.14.0 (2015-02-20)\n\n* [payment-factory] pass config to core payment factory too.\n* [payment-factory] allow set default config to payment factory.\n* [payment-factory] add factory name and title to the payment config.\n* [payment-factory] return default options when call createConfig.\n* [doc] add EloquentStorage to list of support storages.\n* [doc] add Propel2Storage to list of supported storages.\n* [doc] add Propel1Storage to supported storages.\n* [security] add token factory extension.\n* [security] use composition of token factories. move some code to plain php bridge.\n* [offline] if order details are set don't set it again.\n* [storage] Add storage method findBy code improve tests include base models and example schema.\n* [registry] Add DynamicRegistry registry.\n* [symfony][form] Add payment config form, and payment factories choice.\n* [registry] Introduce payment factories registry interface.\n* [payex] add missed action to factory.\n* [paypal-express-checkout] Paypal request parameters should be lowercased.\n* [paypal-pro] fix api in factory.\n* [payment-factory] options lower case\n* [payment-factory] allow set which actions\\apis\\extensions must be prepend.\n\n## 0.13.0 (2014-12-26)\n\n* [ssl] Added cURL Options for the PayPal Sandbox SSL 3.0 Vulnerability (POODLE)\n* [payment] remove all addXXX methods from PaymentInterface.\n* [payment] Introduce `PaymentFactoryInterface`. Simplify exist factories.\n* [request] Add missed markSuspended method to GetStatusInterface.\n* [request] Allow get raw content of the request.\n* [reply] Add ability to set Http StatusCode and headers.\n* [action] Remove generic order action. Improve execute same request with details action.\n* [action] Execute same request with details has to be the last action.\n* [storage] Rename methods. Improve usage of Identity.\n* [doctrine] fix mapping of `details` field in the order model. It has to be object.\n* [buzz] Create default curl client, if no client is passed\n* [security] Reuse league/url while manipulation with tokens urls.\n* [security] Making `afterPath` optional on `TokenFactoryInterface`.\n* [paypal-pro] Add support of refunds.\n* [paypal-pro] Refactor Paypal Pro, remove not used stuff, simplify logic.\n* [omnipay] Allow install Omnipay bridge ONLY as a standalone package. Not shipped with payum/payum any more.\n* [symfony] Allow configure min max expiration years.\n* [docs] Add chapter about refund.\n\n## 0.12.9 (2014-12-24)\n\n* [authorize.net] Amount must be decimal.\n* [request] add `getFirstModel` method to `Generic` request.\n\n## 0.12.8 (2014-12-13)\n\n* [action] Back port from master a `GenericOrderAction`. Fixes \"Attempted to call method \"getClientId\" in done script but got array instead of order\" \n\n## 0.12.7 (2014-12-11)\n\n* [klarna-checkout] Mark failed if error_code set in details.\n\n## 0.12.6 (2014-11-20)\n\n* [action] Add `NotifyOrderAction` action.\n\n## 0.12.5 (2014-11-11)\n\n* [doc] add sagepay and redsys to list of supported payments.\n* [security] token factory should accept Identificator instance as model.\n* [paypal-ec] use capture\\authorize details as details for notify token.\n\n## 0.12.4 (2014-11-10)\n\n* [request] add cancel request.\n* [stripe] description in template must have default val.\n\n## 0.12.3 (2014-11-08)\n\n* [paypal-ec] Allow purchase order with custom details\n\n## 0.12.2 (2014-11-07)\n\n* [security] Added cURL Options for the PayPal Sandbox SSL 3.0 Vulnerability (POODLE)\n* [omnipay-bridge] catch invalid credit card exception.\n\n## 0.12.1 (2014-10-31)\n\n* [symfony-bridge][forms] Fix exception \"there is only 'years' option available.\"\n* [symfony-bridge] Add obtain credit card basic template.\n* [doc] add Silex to the list of supported frameworks.\n\n## 0.12.0 (2014-10-29)\n\n* [action] add basic get http request action.\n* [action] `ExecuteSameRequestWithModelDetailsAction` now do sub request for empty details too.\n* [request] move `ModelAwareInterface` to model namespace and `TokenAwareInterface` to Security one.\n* [request] add `Refund` request\n* [request] remove usages of STATUS_SUCCESS and all related methods.\n* [request] `BaseModelAware` request was renamed to `Generic` one.\n* [request] move logic from `SecuredXXX` requests to `Generic`, remove all `SecuredXXX` requests.\n* [tests] reduce code duplications in tests, introduce `GenericActionTest`.\n* [stripe] add `GetHttpRequestAction` to checkout factory.\n* [stripe] add `GetHttpRequestAction` to js factory.\n* [bridge][symfony] add `ObtainCreditCardAction` and credit card form to bridge from bundle.\n* [bridge][symfony] add symfony response to reply converter.\n* [orders] unified interface for all possible payments.\n* [order][paypal] set automatically notify url if not defined.\n* [order][doctrine] add mongo and orm mappings for order model.\n* [order][payex] add fill order details action.\n* [order][paypal-pro]  add fill order details action.\n* [offline] add fill order details action.\n* [omnipay-bridge] add fill order details action.\n* [omnipay-bridge] refactor tests, add auto fill of returnUrl, cancelUrl and clientIp.\n* [omnipay-bridge] fix undefined offset 1 error. set holder name as first name always.\n* [klarna-checkout] fix bad request. merchant.id invalid.\n* [klarna-checkout] Remove GlobalXXXConnector. Replace CaptureAction with Authorize one.\n* [klarna-invoice] add refund support.\n* [paypal] correctly recognize authorize status.\n* [paypal] add make status action aware of refunded payment status.\n\n## 0.11.8 (2014-10-19)\n\n* [klarna-checkoout] set correctly orderid in notify action.\n* [klarna-invoice] populate klarna from details must be inside try catch block.\n\n## 0.11.7 (2014-09-29)\n\n* [payment] Critcal bug fix. It was possible to mix credentials of different payments if you use them in single process.\n\n## 0.11.6 (2014-09-28)\n\n* [paypal][ipn] do not update express checkout related info when session has expired.\n* [klarna] add `CreditPart` action.\n\n## 0.11.5 (2014-09-18)\n\n* [klarna] error_code has to be int.\n\n## 0.11.4 (2014-09-17)\n\n* [klarna] fix encoding when setting error code, message back to details.\n\n## 0.11.3 (2014-09-17)\n\n* [storage] fix bug \"Interface Doctrine\\Common\\Persistence\\Proxy does not exist\".\n\n## 0.11.2 (2014-09-16)\n\n* [paypal-pro] `StatusAction` has to accept `GetStatusInterface`, not only `GetBinaryStatus` instance.\n\n## 0.11.1 (2014-09-15)\n\n* [omnipay] Fix undefined offset 1 error. No more splits, the holder name is set as a first name.\n* [doctrine][registry] fix ability to get a storage by passing doctrine proxy object.\n\n## 0.11.0 (2014-09-10)\n\n* [klarna] add klarna invoice support.\n* [request] add authorize request.\n* [tests] upgrade phpunit up to 4.x\n* [request] Rename interactive requests to replies. `RedirectUrlInteractiveRequest` become `HttpRedirect` reply.\n* [request] Remove `Request` postfix. CaptureRequest become just Capture.\n* [request] Rename `SimpleStatusRequest` to `GetHumanStatus` request.\n* [request] Rename `BinaryMaskStatusRequest` to `GetBinaryStatus` request.\n\n## 0.10.0 (2014-07-31)\n\n* [doc] fix typos, improve examples, get-it-started page.\n* [paypal ec][api] simplify Api class constructor. The client is optional now.\n* [paypal ec][api] Api methods now takes array as argument and return array as well. Do not expose buzz outside Api.\n* [tests] remove fragile functional tests.\n* [composer] fix typos in composer.json\n* [http] add client ip and user agent to the get http request.\n* [doctrine] rename `array` property to `details`.\n* [stripe] add stripe.js, checkout support. \n* [template] use twig as a templating engine.\n* [template] add twig factory, simplify first setup.\n* [template] allow configure a layout.\n* [request] remove deprecated requests.\n* [registry] decouple `StorageRegistry` from payments removing name argument.\n\n## 0.9.3 (2014-07-21)\n\n* [doctrine] Quote a column  `array` in metadata for `ArrayObject` class. Array is a reserved word in some databases.\n\n## 0.9.2 (2014-07-08)\n\n* [request] fix post redirect interactive request, it has to extend response interactive request.\n\n## 0.9.1 (2014-07-08)\n\n* [be2bill] fix capture with aliased credit card.\n\n## 0.9.0 (2014-06-17)\n\n* [registry] decouple `StorageRegistry` from payments. The `name` argument was removed.\n* [security] allow create notify token without model set.\n* [creditcard] allow set null as expire at date.\n* [creditcard] allow secure credit card sensitive values.\n* [creditcard] `CreditCardInterface` getters does not return `SensitiveValue` anymore.\n* [creditcard] rename credit card method `setCardholder` and `getCardholder` to just `setHodler` and `getHolder`.\n* [creditcard] use `DateTime` to represent expire date.\n* [spl] the method `ArrayObject::validatedNotEmpty` was renamed to `validateNotEmpty`.\n* [request] remove `UserInputRequeredRequest` request.\n* [omnipay] support Omnipay version >=2.\n* [omnipay] add `OnsiteCaptureAction`.\n* [omnipay] allow obtain credit card in `CaptureAction`.\n* [omnipay] fix not imported namespace, onsite capture, prepare for obtain cc.\n* [omnipay] add support of POST redirect.\n* [paypal-pro] allow obtain credit card.\n* [be2bill] allow obtain credit card.\n* [authorize.net] allow obtain credit card.\n* [paypal] Add DoReferenceTransactionActionAction and DoReferenceTransactionActionRequest\n* [security][symfony] Pass bollean true to url generator. Fixes fatal error on an old symfony's versions.\n\n## 0.8.8 (2014-05-29)\n\n* [request] add ObtainCreditCardRequest.\n* [model] add credit card model.\n* [security] add mask util. allows mask strings with diff options.\n* [doc] configure TokenStorage to use hash field as idPropery.\n\n## 0.8.7 (2014-05-05)\n\n* [request] add simple status request.\n\n## 0.8.6 (2014-05-01)\n\n* [security] allow create notify token without model set.\n\n## 0.8.5 (2014-04-16)\n\n* [be2bill] should not use capture onsite action when aliased credit card used.\n\n## 0.8.4 (2014-04-16)\n\n* [be2bill] api endpoint has \".php\" at the end. Fixes temporal glitches with api.\n\n## 0.8.3 (2014-04-14)\n\n* [security][symfony] Fix bug: `PHP Fatal error:  Undefined class constant 'ABSOLUTE_URL' in ...`\n\n## 0.8.2 (2014-04-10)\n\n* [paypal] Set return\\cancel (if not set) url from secured capture request.\n* [paypal] Add NotifyAction to PaymentFactory.\n* [paypal][action] Add generic NotifyAction.\n* [security] Fix `GenericTokenFactory`. It did not handle afterPath correctly, when it is url.\n* [symfony][request] move symfony's response interactive request to bridge.\n\n## 0.8.1 (2014-04-08)\n\n* [security] symfony's TokenFactory now require UrlGeneratorInterface.\n* import namespaces.\n* [security][symfony] move HttpRequestVerifier from bundle to bridge.\n* [security][symfony] move TokenFactory from symfony bundle to bridge.\n* [security] TokenFactory accepts urls as targetPath and afterPath.\n* [doc] added laravel to supported frameworks list.\n* [offline] wrap model by ArrayObject from bridge.\n* [offline] Fixing Notice: Undefined index: paid in ...\n\n## 0.8.0 (2014-04-02)\n\n* [paypal][pro] set bigger timeout to prevent test fails\n* [klarna] add support of klarna checkout payment.\n* [zend][storage] add zend table gateway storage.\n* [omnipay] do not wrap omnipay's exceptions in capture action.\n* [security] add generic token factory.\n* [security] introduce token factory.\n* [action] add tests for notify action\n* [request] add response interactive request.\n* [payex] remove duplicated tests.\n* [registry] register storage extensions lazily.\n\n## 0.7.2 (2014-01-18)\n\n* [be2bill][api] add a method to verify params hash.\n\n## 0.7.1 (2014-01-12)\n\n* [registry] `SimpleRegistry::registerStorageExtensions` method is deprecated.\n\n## 0.7.0 (2013-12-26)\n\n* merge all payment gateway into one payum repository and setup subtree split.\n* move all current root classes to core namespace.\n* [request] add `GetHttpQueryRequest` request\n* [request] add `PostRedirectUrlInteractiveRequest` request\n* [request] remove deprecated `XXXDetailsAggregatedModelsAction` actions.\n* [request] use execute same request with model details action\n* [payment] making `findSupport` method more specific on the return value. Now it returns false when not supported action.\n* [composer] add missed libs to replace section\n* [security] improve token hash generator\n* [security] prevent accidental storing of sensitive info\n* [security] wrapp sensitive values to prevent its saving somewhere\n* [security] use SensitiveValue to safely process card number etc.\n* [storage][filesystem] add identity map for filesystem storage.\n* [payment] add `forcePrepend` argument to `Payment::addApi` method.\n* [registry] add `SimpleRegistry::registerStorageExtensions` helper method.\n* [registry] add `PaymentRegistryInterface::getPayments` method.\n* [doctrine][orm] add mapping for simple model.\n* [doctrine][mongo] add mapping for simple model.\n* [model] add simple unified array model.\n* [authorize.net] remove payment details custom model. Use ArrayObject from core or your own.\n* [be2bill] add support of  be2bill onsite payments\n* [be2bill] fix. capture with credit card should support if `CARDCODE` provided.\n* [paypal express checkout][model] remove custom model and doctrine mapping for it.\n* [paypal] Allow set custom params to authorize token url\n* [payex][model] remove custom model and doctrine mapping for it.\n\n## 0.6.5 (2013-11-22)\n\n* [request] CaptureDetailsAggregatedModelAction is deprecated.\n* [request] SyncDetailsAggregatedModelAction is deprecated.\n* [request] StatusDetailsAggregatedModelAction is deprecated.\n\n## 0.6.4 (2013-11-19)\n\n* [exception] improve message of request not supported exception.\n* [registry] improve exception messages for getStorageForClass method.\n\n## 0.6.3 (2013-10-27)\n\n* [composer] lower required php version from 5.3.9 to 5.3.3\n\n## 0.6.2 (2013-10-27)\n\n* [doctrine] add functional tests for doctrine storage and mongo manager\n* [storage] move identificator to model namespace. deprecate storage one\n\n## 0.6.1 (2013-10-26)\n\n* [doctrine] deprecate bridge models. provide mappings for basic ones\n\n## 0.6.0 (2013-10-25)\n\n* [mongo] add custom type `ObjectType` to avoid probmels with mongo.\n* [request] add base status request.\n* [security] allow set any details to token.\n* [storage] better handling of id property in filesystem storage.\n* [storage][mongo] add mongodb support\n* [doc] add managing notifications doc\n* [doc] add get it started doc\n* [registry] add simple registry\n* [storage] schedule for update models set in action\n* [storage] do not throw on not supported identifier\n* [security] introduce security layer. added `HttpRequestInterface`, `TokenInterface`\n* [storage][extension] update model after last request is executed\n* [storage][extension] update model on exception as well.\n* [storage] add `StorageInterface::findModelByIdentifier` method. update abstract storage\n* [storage] add abstract storage\n* [storage] mark deprecated `Storage::supportModel`\n* [log] add documentation.\n* [log] adjust log messages.\n* [log] suggest monolog as logger.\n* [extension] add debug extension that wrtite call stack to log\n* [extension] add PSR-3 log extensions\n* [request] `StatusRequestInterface` now extends `ModelRequestInterface`\n* [spl] add `ArrayObject::validatedKeysSet` to check array key present or not\n\n## 0.5.4 (2013-07-15)\n\n* [security] make details property optional in `TokenizedDetails` model\n* [request] add instant payment notifications request\n\n## 0.5.3 (2013-06-24)\n\n* No changes \n\n## 0.5.2 (2013-06-24)\n\n* [request] move `CaptureTokenizedDetails` request from the bundle\n\n## 0.5.1 (2013-06-12)\n\n* [spl] add `ArrayObject::validatedKeysSet` to check array key present or not.\n\n## 0.5.0 (2013-06-03)\n\n* add the architecture doc\n* add `StorageRegistryInterface::getStorages` method\n* add `RegistryInterface` interface.\n* [storage] ensure models always is saved\n* [storage] add `StorageInterface::deleteModel` method\n* [security] add targetUrl, afterUrl to TokenizedDetails model\n* [security] introduce `TokenizedDetails` model\n* [storage] add identificator model to easy find payment models\n* fix suggest section of `composer.json`\n* add keywords to `composer.json`\n* add `StorageRegistryInterface` interface\n* add `PaymentRegistryInterface` interface\n\n## 0.4.0 (2013-04-04)\n\n* remove `HttpResponseStatusNotSuccessException`\n* rename `ActionPaymentAware` to `PaymentAwareAction`\n* remove `ApiAwareActionInterface`\n* remove `PaymentAwareActionInterface`\n* rename instruction aware\\aggregate models to details ones\n* add expired and suspended statuses.\n* rename `StatusRequestInterface::isInProgress` to `isPending`\n* remove `ArrayObject::offsetsExists` method.\n* add `ArrayObject::validateNotEmpty` method\n\n## 0.3.1 (2013-03-28)\n\n* allow any stable buzz version\n\n## 0.3.0 (2013-03-11)\n\n* add `forcePrepend` option to `PaymentInterface::addAction` method\n* add `ArrayObject::ensure` method. do not create nested models arrays\n* fix variaty bugs in ArrayObject implementation\n* add an action for `PaymentInstructionAggregate` models\n* remove null storage\n* add storage extension\n* add extensions\n* add omnipay to the list of supported payments\n* change doctrine version to stable in composer\n* ability to set several APIs to the `Payment` instance\n* fix `ArrayObject::replace` method\n* add `BaseModelRequest` and `BaseModelInteractiveRequest`\n* update list of supported payments\n* add `setModel` method to a request\n* catch interactive requests to payment and reutrn it\n\n## 0.2.0 (2013-02-08)\n\n* move `SyncRequest` request from paypal express checkout\n* add `NullStorage`\n* rework storages, change name, namespace\n* remove `SimpleSell` request\n* rework `PaymentInstructionAggregate\\Aware` interfaces\n* remove `CreatePaymentInstructionRequest` class\n* remove `ModelInterface` and `PaymentInstruction` interfaces\n* add testo lib (generates code examples using test cases)\n* add travis status to readme\n* add travis\n\n## 0.1 (2012-12-07)\n\n* add status request\n* add interactive request\n* rename aggregate -> aware\n* add domain model\n* add storages support\n* initial classes and interfaces.\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.037109375,
          "content": "Copyright (C) 2012-2015 Maksim Kotlyar\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.708984375,
          "content": "[![SWUbanner](https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner-direct.svg)](https://github.com/vshymanskyy/StandWithUkraine/blob/main/docs/README.md)\n\n---\n\n<h2 align=\"center\">Supporting Payum</h2>\n\nPayum is an MIT-licensed open source project with its ongoing development made possible entirely by the support of community and our customers. If you'd like to join them, please consider:\n\n- [Become a sponsor](https://github.com/sponsors/Payum)\n\n---\n\n# Payum\n\n[![Unit Tests](https://github.com/Payum/Payum/actions/workflows/ci.yaml/badge.svg)](https://github.com/Payum/Payum/actions/workflows/ci.yaml)\n[![Latest Stable Version](https://poser.pugx.org/payum/payum/v)](https://packagist.org/packages/payum/payum)\n[![Total Downloads](https://poser.pugx.org/payum/payum/downloads)](https://packagist.org/packages/payum/payum)\n[![Latest Unstable Version](https://poser.pugx.org/payum/payum/v/unstable)](https://packagist.org/packages/payum/payum)\n[![License](https://poser.pugx.org/payum/payum/license)](https://packagist.org/packages/payum/payum)\n[![PHP Version Require](https://poser.pugx.org/payum/payum/require/php)](https://packagist.org/packages/payum/payum)\n\nReduce Your Development Time with Payum integrating more than 50 payment services simultaneously. Payum is one of the most popular bug-free solution that has over 1 000 000 downloads already. It is friendly for all top PHP frameworks and was successfully installed and tested by thousands of developers worldwide\n\n## Resources\n\n* [Documentation](https://payum.gitbook.io/payum/)\n* [Questions](http://stackoverflow.com/questions/tagged/payum)\n* [Issue Tracker](https://github.com/Payum/Payum/issues)\n\n## License\n\nPayum is released under the [MIT License](LICENSE).\n"
        },
        {
          "name": "UPGRADE.md",
          "type": "blob",
          "size": 22.7509765625,
          "content": "# Upgrades\n\n## 2.0.0\n\n* Dropped support for PHP 7.x\n* Twig 1.x is no longer supported\n* `Payum\\Core\\Action\\GetCurrencyAction` does not accept any constructor arguments anymore and uses alcohol/iso4217 by default\n* Support for Propel storage has been removed\n* The `Payum\\Core\\Bridge\\Guzzle\\HttpClient` and `Payum\\Core\\Bridge\\Guzzle\\HttpClientFactory` classes have been removed\n* The signatures in `src/Payum/Core/Registry/GatewayRegistryInterface.php` has been changed to add strict types.\n  * Any custom class implementing this interface should update their signature. The new signatures are:\n    * `public function getGateway(string $name): GatewayInterface;`\n    * `public function getGateways(): array;`\n* The `Payum\\Core\\ApiAwareInterface` and `Payum\\Core\\ApiAwareTrait` has been deprecated. Inject the required API in the action's constructor instead.\n* The `payum.api` config has been deprecated.\n* The HttpClient has been replaced with a PSR-18 HTTP Client\n  * The `httplug.message_factory` config option is deprecated. Use `payum.http_message_factory` instead\n  * The `httplug.stream_factory` config option is deprecated. Use `payum.http_stream_factory` instead\n  * The `httplug.client` is deprecated. Use `payum.http_client` instead\n  * The `Payum\\Core\\Bridge\\Httplug\\HttplugClient::send` method is deprecated and will be removed in 3.0. Use `Payum\\Core\\Bridge\\Httplug\\HttplugClient::sendRequest` instead\n  * The `Payum\\Core\\Bridge\\Httplug\\HttplugClient` is deprecated and will be removed in 3.0. Use PSR-18 HTTP Client instead\n  * The `payum.http_client` config option will return an instance of `Psr\\Http\\Client\\ClientInterface` in a future version.\n    * Change all type-hints from `Payum\\Core\\HttpClientInterface` or `Payum\\Core\\Bridge\\Httplug\\HttplugClient` to `Psr\\Http\\Client\\ClientInterface`\n\n## 1.5.0\n\n* Dropped PHP 5.x support\n* Dropped Symfony 2.x support\n* Dropped Omnipay v2 support, Added v3 though\n* Updated league/uri from 4 to v5\n* Updated phpunit\n\n## 1.3.0\n\n* [http-client] When you update to Payum 1.3.0 the installation will fail because you need to install a client implementation. If you choose php-http/guzzle6-adapter everything will work exactly as before.\n* Api constructor's arguments are not optional any more.\n* [gateway-factory] Option 'guzzle.client' was removed.\n* [security] A new method `createPayoutToken` was added to `GenericTokenFactoryInterface` interface.\n* [request] New methods `isPayedout` and `markPayedout` were added to `GetStatusInterface` request.\n\n## 1.2.0\n\n* [stripe] Stripe api version updated to 2.0 - 3.x. You'll have to update any custom actions that use the Stripe api directly.\n\n## 1.0\n\n* Php required version is 5.5\n* [be2bill] `Api::getOnsiteUrl` method is renamed to `Api::getOffsiteUrl`\n* [be2bill] `Api` methods are returing array instead of Response\n* [http-client] kriswallsmith/buzz http client was replaced with PSR7 compatible guzzlehttp/guzzle.\n\n## 0.15 to never\n\nLibraries and extension dependencies are not required now. You must install them if you need.\nThis make sense for:\n* \"Authorizenet.NET\"\n* \"PayPal REST API\"\n* \"Klarna Checkout\"\n* \"Klarna Invoice\"\n* \"Stripe\"\n* \"Payex\"\n\n## 0.14 to 0.15\n\n* [order] The method getCreditCard was added to `OrderInterface` interface.\n* [klarna-checkout] `CreateOrderAction` and `UpdateOrderAction` do not do fetch any more.\n* `Payment` class deprecated and will be removed in 0.15. Use `Gateway`.\n* `PaymentInterface` interface deprecated and will be removed in 0.15. Use `GatewayInterface`.\n* `PaymentFactoryInterface` interface deprecated and will be removed in 0.15. Use `GatewayFactoryInterface`.\n* `PaymentFactory` class deprecated and will be removed in 0.15. Use `GatewayFactory`.\n* `PaymentAwareInterface` interface deprecated and will be removed in 0.15. Use `GatewayAwareInterface`.\n* `PaymentFactoryRegistryInterface` interface deprecated and will be removed in 0.15. Use `GatewayFactoryRegistryInterface`.\n* Use `GatewayFactoryRegistryInterface::getGatewayFactory` method instead of `PaymentRegistryInterface::getPaymentFactory`.\n* Use `GatewayFactoryRegistryInterface::getGatewayFactories` method instead of `PaymentRegistryInterface::getPaymentFactories`.\n* `PaymentRegistryInterface` interface deprecated and will be removed in 0.15. Use `GatewayRegistryInterface`.\n* Use `GatewayRegistryInterface::getGateway` method instead of `PaymentRegistryInterface::getPayment`.\n* Use `GatewayRegistryInterface::getGateways` method instead of `PaymentRegistryInterface::getPayments`.\n* `PaymentConfigInterface` interface deprecated and will be removed in 0.15. Use `GatewayConfigInterface`.\n* `PaymentConfig` class deprecated and will be removed in 0.15. Use `GatewayConfig`.\n* `PaymentConfig::getPaymentName` and related property renamed to `GatewayConfig::getGatewayName`. \n* `Order` class deprecated and will be removed in 0.15. Use `Payment`.\n* `OrderInterface` interface deprecated and will be removed in 0.15. Use `PaymentInterface`.\n* `Payum\\AuthorizeNet\\Aim\\PaymentFactory` renamed to `AuthorizeNetAimGatewayFactory`.\n* `Payum\\Core\\Bridge\\Symfony\\Form\\Type\\PaymentConfigType` renamed to `GatewayConfigType`.\n* `Payum\\Core\\Bridge\\Symfony\\Form\\Type\\PaymentFactoriesChoiceType` renamed to `GatewayFactoriesChoiceType`.\n* [doctrine] PaymentConfig::paymentName property renamed to `gatewayName`. **You have to migrate your database**.\n* [doctrine] Token::paymentName property renamed to `gatewayName`. **You have to migrate your database**.\n* [doctrine] Order renamed to `Payment`. Database schema was changed. **You have to migrate your database**.\n* [doctrine] The `currencyDigitsAfterDecimalPoint` property removed from ORM\\ODM schema.\n* [propel] PaymentConfig::paymentName property renamed to `gatewayName`. **You have to migrate your database**.\n* [propel] Token::paymentName property renamed to `gatewayName`. **You have to migrate your database**.\n* [propel] Order renamed to `Payment`. Database schema was changed. **You have to migrate your database**.\n* [propel] The `currencyDigitsAfterDecimalPoint` property removed from schema.\n* [be2bill] Method `Api::prepareOnsitePayment` was renamed to `Api::prepareOffsitePayment`.\n* [action] Action `CaptureOrderAction` was renamed to `CapturePaymentAction`.\n* [action] Actions `FillOrderDetailsAction` removed. Use `ConvertPaymentAction` ones instead.\n* [request] Request `FillOrderDetails` removed. Use `Convert` one instead.\n* [model] The method `PaymentInterface::getCurrencyDigitsAfterDecimalPoint` was removed. Use `GetCurrency::getIso4217` request method to get same info.\n* [storage] `StorageInterface::findBy` returned value is changed. It was a model or null now it is always an array.\n* [extension] The method `ExtensionInterface::onReply` was removed. Use `ExtensionInterface::onPostExecute` and check whether context contains reply or not.\n* [extension] The method `ExtensionInterface::onException` was removed. Use `ExtensionInterface::onPostExecute` and check whether context contains exception or not.\n* [extension] The method `ExtensionInterface::onPreExecute` signature was changed. Now it takes instance of `Context`.\n* [extension] The method `ExtensionInterface::onExecute` signature was changed. Now it takes instance of `Context`.\n* [extension] The method `ExtensionInterface::onPostExecute` signature was changed. Now it takes instance of `Context`.\n\n## 0.13 to 0.14\n\n* [registry] `PaymentRegistryInterface::getDefaultPaymentName` method was removed.\n* [registry] `PaymentRegistryInterface::getPayment` the argument `name` is always required.\n* [registry] `AbstractRegistry::__construct` third `$defaultPayment` argument was removed.\n* [storage] A new method `StorageInterface::findBy` was added.\n\n## 0.12 to 0.13\n\n* [request] `markSuspended` method added to `GetStatusInterface` interface. \n* [omnipay-bridge] Omnipay bridge is not shipped with `payum\\payum` code any more. Install it separatly by requiring `payum/omnipay-bridge` package.\n* [paypal-pro] Remove `PaymentDetails` class.\n* [paypal-pro] Remove `Request` and `Response` classes. Use ones from Buzz.\n* [paypal-pro] Remove `trxtype` option from api.\n* [paypal-pro] Rename `Api::doPayment` to `Api::doSale`. Change the first argument now it is array and the method returns array too.\n* [be2bill] `Api` constructor arguments order was changed. Second argument `options` is now first, and the client now is second and optional.\n* [paypal-ipn] `Api` constructor arguments order was changed. Second argument `options` is now first, and the client now is second and optional.\n* [paypal-pro] `Api` constructor arguments order was changed. Second argument `options` is now first, and the client now is second and optional.\n* [payment] Method `PaymentInterface::addApi` was removed from interface, still available in `Payment` class.\n* [payment] Method `PaymentInterface::addAction` was removed from interface, still available in `Payment` class.\n* [payment] Method `PaymentInterface::addExtension` was removed from interface, still available in `Payment` class.\n* [storage] Method `StorageInterface::createModel` was renamed to `create`.\n* [storage] Method `StorageInterface::supportModel` was renamed to `support`.\n* [storage] Method `StorageInterface::updateModel` was renamed to `update`.\n* [storage] Method `StorageInterface::deleteModel` was renamed to `delete`.\n* [storage] Method `StorageInterface::findModelById` was renamed to `find`.\n* [storage] Method `StorageInterface::getIdentificator` was renamed to `identify`.\n* [storage] Method `StorageInterface::findByIdentificator` was removed. Use `find` method instead.\n* [storage] Class `Identificator` was deprecated. Use `Identity` instead.\n* [factory] Payment factories were changed significantly. Now they implements `PaymentFactoryInterface` and therefor have to accept only array of options as first argument.\n* [be2bill] Action `CaptureOnsiteAction` was renamed to `CaptureOffsiteAction`.\n* [be2bill] Factory `OnsitePaymentFactory` was renamed to `OffsitePaymentFactory`.\n* [be2bill] Factory `PaymentFactory` was renamed to `DirectPaymentFactory`.\n* [stripe] Factory `PaymentFactory` was splitted into two: `JsPaymentFactory` and `CheckoutPaymentFactory`.\n\n\n## 0.11 to 0.12\n\n* [refund] `createRefundToken` was added to `AbstractGenericTokenFactory`.\n* [request] `BaseModelAware` request was renamed to `Generic`.\n* [request] `SecuredInterface` allows to return a null on `getToken` method call.\n* [request] `SecuredAuthorize` request was removed. The removed logic is now in `Authorize` request, so use it.\n* [request] `SecuredNotify` request was removed. The removed logic is now in `Notify` request, so use it.\n* [request] `SecuredCapture` request was removed. The removed logic is now in `Capture` request, so use it.\n* [request] `Notify` request does not contains `notification` array any more. You have to execute `$this->payment->execute($httpRequest = new GetHttpRequest);`.\n* [request] `GetHumanStatus::STATUS_SUCCESS` was removed. Use `STATUS_CAPTURED` from the same class.\n* [request] `GetHumanStatus::markSuccess` method was removed. Use `markCaptured` from the same class.\n* [request] `GetHumanStatus::isSuccess` method was removed. Use `isCaptured` from the same class.\n* [request] `GetBinaryStatus::STATUS_SUCCESS` was removed. Use `STATUS_CAPTURED` from the same class.\n* [request] `GetBinaryStatus::markSuccess` method was removed. Use `markCaptured` from the same class.\n* [request] `GetBinaryStatus::isSuccess` method was removed. Use `isCaptured` from the same class.\n* [request] `SecuredInterface` was moved to `Security` namespace and renamed to `TokenAggregateInterface`.\n* [request] `ModelAwareInterface` was moved to `Model` namespace and split into two: `ModelAwareInterface` and `ModelAggregateInterface`.\n* [bridge][symfony] Minimum required version is `2.3`.\n* [action] `ExecuteSameRequestWithModelDetailsAction` does sub execute even for empty details.\n* [offline] `Payum\\Offline\\Constains::STATUS_SUCCESS` was removed. Use `STATUS_CAPTURED` from the same class.\n* [klarna-checkout] `GlobalStateSafeConnector` was removed use `Config` instead.\n* [klarna-checkout] `CaptureAction` was renamed to `AuthorizeAction` as it is what it really means.\n* [klarna-checkout] The previous `success` status now means `authorized`. \n\n## 0.11.0 to 0.11.7\n\n* [payment] The injection of apis and payment to an action was moved to execute method. So there maybe a slight BC break if you depend on invalid exceptions thrown when api or payment not set correctly.\n\n## 0.10 to 0.11\n\n* [request] Postfix `Request` was removed. For example `CaptureRequest` become `Capture`.\n* [request] `SimpleStatusRequest` was renamed to `GetHumanStatus`.\n* [request] `BinaryMaskStatusRequest` was renamed to `GetBinaryStatus`.\n* [request] All interactive request were replaced by reply concept. Moved to Reply namespace and renamed. For example `Request\\Http\\RedirectUrlInteractiveRequest` become `Reply\\HttpRedirect`.\n* [extension] The method `onInteractiveRequest` was renamed to `onReply`. The first parameter has to be an instance of `ReplyInterface`.\n* [security] Method `createAuthorizeToken` method was added to `GenericTokenInterface`.\n* [security] New argument `authorizePath` was added to `AbstractGenericTokenFactory` and `GenericTokenFactory`.\n* [security][symfony] New argument `authorizePath` was added to `TokenFactory` from Symfony's bridge.\n\n## 0.9 to 0.10\n\n* [request] Class `GetHttpQueryRequest` was removed use `GetRequestRequest` instead.\n* [request] Class `PostRedirectUrlInteractiveRequest` was moved to sub namespace `Http`.\n* [request] Class `RedirectUrlInteractiveRequest` was moved to sub namespace `Http`.\n* [request] Class `ResponseInteractiveRequest` was moved to sub namespace `Http`.\n* [doctrine][orm] The column name `array` was renamed to `details` in mapping xml for `ArrayObject` class. You have to take care of the migration in your app code.\n* [doctrine][mongodb] The field name `array` was renamed to `details` in mapping xml for `ArrayObject` class. You have to take care of the migration in your app code.\n* [paypal ec] `Api` constructor arguments order was changed. Second argument `options` is now first, and the client now is second and optional.\n* [paypal ec] `Api` methods which used FormRequest as argument now accept an array.\n* [paypal ec] `Api` methods which returned Response now return an array.\n* [paypal ec] Class `Payum\\Paypal\\ExpressCheckout\\Nvp\\Bridge\\Buzz\\Response` was removed.\n* [paypal ec] Class `Payum\\Paypal\\ExpressCheckout\\Nvp\\Exception\\HttpResponseAckNotSuccessException` was removed.\n\n## 0.8 to 0.9\n\n* [model] Method `CreditCardInterface::getCardHolder` renamed to `getHolder`\n* [model] Method `CreditCardInterface::setCardHolder` renamed to `setHolder`\n* [model] `CreditCardInterface` getters does not return `SensitiveValue` anymore. It is used only internally.\n* [model] Methods `getExpiryMonth`, `setExpiryMonth`, `getExpiryYear`, `setExpiryYear` removed. Use `setExpiredAt` and `getExpiredAt` instead.\n* [be2bill] `PaymentFactory` does not provide support of onsite payments. Use `OnsitePaymentFactory` instead.\n* [omnipay] Switch to Omnipay v2.x.\n* [omnipay] Rename `CaptureAction` to `OnsiteCaptureAction`. It would not support credit card payments. Use new `CaptureAction` for such payments.\n* [request] `UserInputRequiredInteractiveRequest` request was removed.\n* [registry] `StorageRegistryInterface::getDefaultStorageName` method was removed.\n* [registry] `StorageRegistryInterface::getStorageForClass` renamed to `getStorage`. Do not take second argument any more.\n* [registry] `StorageRegistryInterface::getStorages` does not take any arguments any more.\n\n## 0.8.5 to 0.8.6\n\n* [Security] Second argument of `GenericTokenFactory::createNotifyToken` is optional now.\n\n## 0.7 to 0.8\n\n* [Registry] `Registry::registerStorageExtensions` method was removed. the logic of the method is done internally.\n\n## 0.6 to 0.7\n\n* [Composer] All repositories were merged to `payum\\payum` one. If you need only core change it to `payum\\core`\n* All classes they were previously in `Payum` namespace moved to `Payum\\Core` one.\n* `PaymentRegistryInterface::getPayments` method is added.\n* `PaymentInterface::addApi` method signature was changed. Now it takes second argument `forcePrepend`.\n* [Be2Bill][Doctrine] `Payum\\Be2Bill\\Bridge\\Doctrine\\Entity\\PaymentDetails` is removed.\n* [Be2Bill][Model] `Payum\\Be2Bill\\Model\\PaymentDetails` is removed.\n* [Payex][Doctrine] `Payum\\Payex\\Bridge\\Doctrine\\Entity\\PaymentDetails` is removed.\n* [Payex][Doctrine] `Payum\\Payex\\Bridge\\Doctrine\\Entity\\AgreementDetails` is removed.\n* [Payex][Model] `Payum\\Payex\\Model\\PaymentDetails` is removed.\n* [Payex][Model] `Payum\\Payex\\Model\\AgreementDetails` is removed.\n* [AuthorizeNet][Model] `Payum\\AuthorizeNet\\Aim\\Model\\PaymentDetails` is removed.\n* [Paypal ExpressCheckout][Model] `BaseModel` was removed.\n* [Paypal ExpressCheckout][Model] `Payum\\Paypal\\ExpressCheckout\\Nvp\\Model\\PaymentDetails` was removed.\n* [Paypal ExpressCheckout][Model] `Payum\\Paypal\\ExpressCheckout\\Nvp\\Model\\RecurringPaymentDetails` was removed.\n* [Paypal ExpressCheckout][Doctrine] `Payum\\Paypal\\ExpressCheckout\\Nvp\\Bridge\\Doctrine\\Entity\\PaymentDetails` was removed.\n* [Paypal ExpressCheckout][Doctrine] `Payum\\Paypal\\ExpressCheckout\\Nvp\\Bridge\\Doctrine\\Entity\\RecurringPaymentDetails` was removed.\n* [Paypal ExpressCheckout][Doctrine] `Payum\\Paypal\\ExpressCheckout\\Nvp\\Bridge\\Doctrine\\Document\\PaymentDetails` was removed.\n* [Paypal ExpressCheckout][Doctrine] `Payum\\Paypal\\ExpressCheckout\\Nvp\\Bridge\\Doctrine\\Document\\RecurringPaymentDetails` was removed.\n\n## 0.6.2 to 0.6.3\n\n* [Storage] `AbstractStorage::findModelByIdentificator` does more strict model class comparison now. Only same classes are allowed. Subclasses not allowed any more.\n\n## 0.5 to 0.6\n\n* [Doctrine] `TokenizedDetails` mapping schema was updated. details field is now accept `NULL`.\n* [Doctrine] `TokenizedDetails` entity was deprecated use `Token` instead.\n* [Doctrine] `TokenizedDetails` mapping changed. The field `token` was renamed to `hash`.\n* [Model] `TokenizedDetails::token` property was removed use `hash` one instead.\n* [Security] `Random` class was moved to `Payum\\Security` namespace.\n* [Security] `TokenizedDetails` model was deprecated use `Token` instead.\n* [Security] The default token generated in `TokenizedDetails::__constructor` not include `time()` any more.\n* [Storage] The method `Storage::supportModel` accepts only model object. Support of model class was removed.\n* [Storage] The method `Storage::findModelByIdentificator` was added to storage interface.\n* [Request] `CaptureTokenizedDetailsRequest` was deprecated use `SecuredCaptureRequest` instead.\n* [Request] `NotifyTokenizedDetailsRequest` was deprecated use `SecuredNotifyRequest` instead.\n\n## 0.4 to 0.5\n\n* A method `getIdentificator` was added to `StorageInterface` interface.\n* `StorageExtension` not using scalar as model id any more. Use `Identificator` object instead.\n* [Paypal ExpressCheckout][Doctrine] `PaymentDetails` mapping schema was updated. Two fields added: `returnurl`, `cancelurl`.\n\n## 0.3 to 0.4\n\n* Method `StatusInterface::markInProgress` renamed to `StatusInterface::markPending`\n* Method `StatusInterface::isInProgress` renamed to `StatusInterface::isPending`\n* `StatusInterface` introduce two new statuses: `expired` and `suspended`.\n* `BinaryMaskStatusRequest::STATUS_IN_PROGRESS` renamed to `BinaryMaskStatusRequest::STATUS_PENDING`\n* `PaymentInstructionAggregateInterface` class renamed to `DetailsAggregateInterface`\n* `DetailsAggregateInterface` class moved to `Payum\\Model` namespace\n* `DetailsAggregateInterface::getPaymentInstruction` renamed to `DetailsAggregateInterface::getDetails`\n* `PaymentInstructionAwareInterface` class renamed to `DetailsAwareInterface`\n* `DetailsAwareInterface` class moved to `Payum\\Model` namespace\n* `DetailsAwareInterface::setPaymentInstruction` renamed to `DetailsAwareInterface::setDetails`\n* `ActionApiAwareInterface` interface was deleted. Use combination of `ActionInterface` and `ApiAwareInterface` instead.\n* `ActionPaymentAwareInterface` interface was deleted. Use combination og `ActionInterface` and `PaymentAwareInterface` instead.\n* Action `ActionPaymentAware` was renamed to `PaymentAwareAction`.\n* Exception `HttpResponseStatusNotSuccessfulException` was removed. Use `HttpException` instead.\n* `HttpException` constructor signature changed. Now it is like any other basic exception.\n* [Authorize.Net AIM] `PaymentInstruction` was renamed to `PaymentDetails` and moved to `Model` namespace.\n* [Be2Bill] `PaymentInstruction` model was renamed to `PaymentDetails` and moved to `Model` namespace.\n* [Be2Bill][Doctrine]`PaymentInstruction` entity was renamed to `PaymentDetails`.\n* [Paypal ExpressCheckout] `PaymentInstruction` was renamed to `PaymentDetails` and moved to `Model` namespace.\n* [Paypal ExpressCheckout][Doctrine] `PaymentDetails` mapping schema was updated. Two fields added: `l_billingtypennn`, `l_billingagreementdescriptionnnn`\n* [Paypal ProCheckout] `PaymentInstruction` model was renamed to `PaymentDetails` and moved to `Model` namespace.\n\n## 0.2 to 0.3\n\n* The `Payment::execute` method signature changed. Now you have to explicitly set when to catch interactive requests or not.\n* `InteractiveRequest` renamed to `BaseInteractiveRequest`.\n* A method `supportModel` was added to `StorageInterface`.\n* `NullStorage` was removed.\n* [Authorize.Net AIM] Remove `fillRequest` method from `PaymentInstruction`.\n* [Authorize.Net AIM] Remove `updateFromResponse` method from `PaymentInstruction`.\n* [Authorize.Net AIM] `Payment` class was removed use `Payum\\Payment` instead.\n* [Be2Bill] Remove `toParams` and `fromParams` from `PaymentInstruction` class.\n* [Be2Bill] `Payment` class was removed use `Payum\\Payment` instead.\n* [Paypal ExpressCheckout] Remove `toNvp` and `fromNvp` from `PaymentInstruction` class.\n* [Paypal ExpressCheckout] `Payment` class was removed use `Payum\\Payment` instead.\n\n## 0.1 to 0.2\n\n* `ModelInterface` interface was removed.\n* `PaymentInstructionInterface` interface was removed.\n* `CreatePaymentInstructionRequest` class was removed.\n* `InstructionAwareInterface` moved to `Payum` namespace.\n* `InstructionAwareInterface` renamed to `PaymentInstructionAwareInterface`\n* `InstructionAwareInterface::setInstruction` renamed to `PaymentInstructionAwareInterface::setPaymentInstruction`\n* `InstructionAggregateInterface` moved to `Payum` namespace.\n* `InstructionAggregateInterface` renamed to `PaymentInstructionAggregateInterface`\n* `InstructionAggregateInterface::getInstruction` renamed to `PaymentInstructionAggregateInterface::getPaymentInstruction`\n* `SimpleSell` class was removed.\n* Remove Model prefix from `Storages`.\n* Change `Storages` namespace. It was `Payum\\Domain\\Storage\\XXX` now `Payum\\Storage\\XXX`.\n* [Authorize.Net AIM] `CaptureAction` now supports only `CaptureRequest` with the `PaymentInstruction` in it.\n* [Authorize.Net AIM] `StatusAction` now supports only `StatusAction` with the `PaymentInstruction` in it.\n* [Be2Bill] `CaptureAction` now supports only `CaptureRequest` with the `PaymentInstruction` in it.\n* [Be2Bill] `StatusAction` now supports only `StatusAction` with the `PaymentInstruction` in it.\n* [Paypal ExpressCheckout] `SyncRequest` was moved to core lib.\n"
        },
        {
          "name": "autoload.php.dist",
          "type": "blob",
          "size": 0.4052734375,
          "content": "<?php\nif (!$loader = @include __DIR__ . '/vendor/autoload.php') {\n    echo <<<EOM\nYou must set up the project dependencies by running the following commands:\n\n    curl -s http://getcomposer.org/installer | php\n    php composer.phar install\n\nEOM;\n\n    exit(1);\n}\n\n$rc = new \\ReflectionClass('Payum\\Core\\GatewayInterface');\n$coreDir = dirname($rc->getFileName()).'/Tests';\n\n$loader->add('Payum\\Core\\Tests', $coreDir);"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 3.892578125,
          "content": "{\n    \"name\": \"payum/payum\",\n    \"type\": \"library\",\n    \"description\": \"One million downloads of Payum already! Payum offers everything you need to work with payments. Friendly for all PHP frameworks (Symfony, Laravel, Laminas, Yii, Silex). Check more visiting site.\",\n    \"keywords\": [\n        \"payment\",\n        \"recurring payment\",\n        \"payout\",\n        \"withdrawal\",\n        \"instant payment notification\",\n        \"ipn\",\n        \"paypal\",\n        \"paypal express\",\n        \"paypal pro\",\n        \"paypal rest\",\n        \"paypal digital goods\",\n        \"authorize.net\",\n        \"be2bill\",\n        \"payex\",\n        \"stripe\",\n        \"stripe.js\",\n        \"stripe checkout\",\n        \"jms payment\"\n    ],\n    \"homepage\": \"https://payum.forma-pro.com\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Kotlyar Maksim\",\n            \"email\": \"kotlyar.maksim@gmail.com\"\n        },\n        {\n            \"name\":     \"Payum project\",\n            \"homepage\": \"https://payum.forma-pro.com/\"\n        },\n        {\n            \"name\":     \"Community contributions\",\n            \"homepage\": \"https://github.com/Payum/Payum/contributors\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.0\",\n        \"alcohol/iso4217\": \"^4.0\",\n        \"php-http/message\": \"^1.0\",\n        \"php-http/client-implementation\": \"^1.0\",\n        \"league/uri\": \"^6.4\",\n        \"league/uri-components\": \"^2.2\",\n        \"twig/twig\": \"^2.4 || ^3.0\",\n        \"php-http/discovery\": \"^1.19\"\n    },\n    \"require-dev\": {\n        \"ext-curl\": \"*\",\n        \"ext-pdo_sqlite\": \"*\",\n        \"payum/omnipay-v3-bridge\": \"^1.0\",\n        \"omnipay/dummy\": \"^3.0\",\n        \"omnipay/common\": \"^3.0\",\n        \"doctrine/dbal\": \"^2.7 || ^3.0\",\n        \"doctrine/orm\": \"^2.5\",\n        \"doctrine/annotations\": \"^1.14.3 || ^2.0.1\",\n        \"doctrine/persistence\": \"^1.3.3 || ^2.0\",\n        \"phpunit/phpunit\": \"^9.6.11\",\n        \"psr/log\": \"~1.0\",\n        \"laminas/laminas-db\": \"^2.0\",\n        \"symfony/cache\": \"^4.4 || ^5.0 || ^6.0\",\n        \"symfony/routing\": \"^4.4 || ^5.0 || ^6.0\",\n        \"symfony/http-kernel\": \"^4.4 || ^5.0 || ^6.0\",\n        \"symfony/http-foundation\": \"^4.4 || ^5.0\",\n        \"symfony/form\": \"^4.4 || ^5.0 || ^6.0\",\n        \"symfony/templating\": \"^4.4 || ^5.0 || ^6.0\",\n        \"symfony/validator\": \"^4.4 || ^5.0 || ^6.0\",\n        \"symfony/phpunit-bridge\": \"^5.4 || ^6.0\",\n        \"symfony/dependency-injection\": \"^4.4 || ^5.0 || ^6.0\",\n        \"authorizenet/authorizenet\": \"^1.8.1\",\n        \"sofort/sofortlib-php\": \"^3.0\",\n        \"paypal/rest-api-sdk-php\" : \"~1.0\",\n        \"klarna/checkout\": \"^1.1 || ^2.0\",\n        \"solidworx/klarna-invoice\": \"0.2.*\",\n        \"stripe/stripe-php\": \"^7.0\",\n        \"php-http/mock-client\": \"^1.0\",\n        \"defuse/php-encryption\": \"^2\",\n        \"ext-soap\": \"*\",\n        \"rector/rector\": \"^1.0.2\",\n        \"symplify/easy-coding-standard\": \"^12.0\",\n        \"phpstan/phpstan\": \"^1.10\",\n        \"symfony/http-client\": \"^5.4 || ^6.2\",\n        \"nyholm/psr7\": \"^1.8\"\n    },\n    \"replace\": {\n        \"payum/core\": \"^1\",\n        \"payum/paypal-express-checkout-nvp\": \"self.version\",\n        \"payum/paypal-pro-checkout-nvp\": \"self.version\",\n        \"payum/paypal-rest\": \"self.version\",\n        \"payum/paypal-ipn\": \"self.version\",\n        \"payum/klarna-checkout\": \"self.version\",\n        \"payum/klarna-invoice\": \"self.version\",\n        \"payum/authorize-net-aim\": \"self.version\",\n        \"payum/be2bill\": \"self.version\",\n        \"payum/payex\": \"self.version\",\n        \"payum/offline\": \"self.version\",\n        \"payum/stripe\": \"self.version\",\n        \"payum/sofort\": \"self.version\"\n    },\n    \"conflict\": {\n        \"league/uri-components\": \"<1.7.1\",\n        \"jms/serializer\": \"<3.15.0\"\n    },\n    \"config\": {\n        \"bin-dir\": \"bin\",\n        \"allow-plugins\": {\n            \"php-http/discovery\": true\n        }\n    },\n    \"autoload\": {\n        \"psr-4\": { \"Payum\\\\\": \"src/Payum/\" }\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"2.0-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "ecs.php",
          "type": "blob",
          "size": 2.2607421875,
          "content": "<?php\n\ndeclare(strict_types=1);\n\nuse PhpCsFixer\\Fixer\\Casing\\MagicConstantCasingFixer;\nuse PhpCsFixer\\Fixer\\ClassNotation\\ClassDefinitionFixer;\nuse PhpCsFixer\\Fixer\\ClassNotation\\OrderedClassElementsFixer;\nuse PhpCsFixer\\Fixer\\ClassNotation\\SelfAccessorFixer;\nuse PhpCsFixer\\Fixer\\ClassNotation\\SingleClassElementPerStatementFixer;\nuse PhpCsFixer\\Fixer\\ControlStructure\\NoUselessElseFixer;\nuse PhpCsFixer\\Fixer\\ControlStructure\\YodaStyleFixer;\nuse PhpCsFixer\\Fixer\\FunctionNotation\\VoidReturnFixer;\nuse PhpCsFixer\\Fixer\\Import\\NoUnusedImportsFixer;\nuse PhpCsFixer\\Fixer\\LanguageConstruct\\ExplicitIndirectVariableFixer;\nuse PhpCsFixer\\Fixer\\LanguageConstruct\\FunctionToConstantFixer;\nuse PhpCsFixer\\Fixer\\Operator\\NewWithBracesFixer;\nuse PhpCsFixer\\Fixer\\Operator\\StandardizeIncrementFixer;\nuse PhpCsFixer\\Fixer\\PhpUnit\\PhpUnitMethodCasingFixer;\nuse PhpCsFixer\\Fixer\\StringNotation\\ExplicitStringVariableFixer;\nuse PhpCsFixer\\Fixer\\StringNotation\\SingleQuoteFixer;\nuse Symplify\\EasyCodingStandard\\Config\\ECSConfig;\nuse Symplify\\EasyCodingStandard\\ValueObject\\Set\\SetList;\n\nreturn static function (ECSConfig $ecsConfig): void {\n    $ecsConfig->paths([__DIR__ . '/src']);\n\n    $ecsConfig->rule(YodaStyleFixer::class);\n\n    $ecsConfig->rules([\n        PhpUnitMethodCasingFixer::class,\n        FunctionToConstantFixer::class,\n        ExplicitStringVariableFixer::class,\n        ExplicitIndirectVariableFixer::class,\n        NewWithBracesFixer::class,\n        StandardizeIncrementFixer::class,\n        SelfAccessorFixer::class,\n        MagicConstantCasingFixer::class,\n        NoUselessElseFixer::class,\n        SingleQuoteFixer::class,\n        OrderedClassElementsFixer::class,\n        VoidReturnFixer::class,\n    ]);\n\n    $ecsConfig->ruleWithConfiguration(SingleClassElementPerStatementFixer::class, ['elements' => ['const', 'property']]);\n    $ecsConfig->ruleWithConfiguration(ClassDefinitionFixer::class, ['single_line' => \\true]);\n\n    $ecsConfig->sets([\n        SetList::PSR_12,\n        SetList::SPACES,\n        SetList::DOCBLOCK,\n        SetList::COMMENTS,\n        SetList::PHPUNIT,\n        SetList::NAMESPACES,\n        SetList::CLEAN_CODE,\n        SetList::ARRAY,\n    ]);\n\n    $ecsConfig->skip([\n        VoidReturnFixer::class => [\n            __DIR__ . '/src/Payum/Core/GatewayFactory.php',\n        ]\n    ]);\n};\n"
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 116.126953125,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\AuthorizeNet\\\\\\\\Aim\\\\\\\\Bridge\\\\\\\\AuthorizeNet\\\\\\\\AuthorizeNetAIM\\\\:\\\\:\\\\$ignore_not_x_fields has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/AuthorizeNet/Aim/Bridge/AuthorizeNet/AuthorizeNetAIM.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\AuthorizeNet\\\\\\\\Aim\\\\\\\\Tests\\\\\\\\Action\\\\\\\\StatusActionTest\\\\:\\\\:createGetStatusStub\\\\(\\\\) has parameter \\\\$model with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/AuthorizeNet/Aim/Tests/Action/StatusActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\AuthorizeNet\\\\\\\\Aim\\\\\\\\Tests\\\\\\\\AuthorizeNetAimGatewayFactoryTest\\\\:\\\\:getRequiredOptions\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/AuthorizeNet/Aim/Tests/AuthorizeNetAimGatewayFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Right side of && is always true\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Be2Bill/Action/CaptureOffsiteAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Be2Bill\\\\\\\\Tests\\\\\\\\Be2BillOffsiteGatewayFactoryTest\\\\:\\\\:getRequiredOptions\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Be2Bill/Tests/Be2BillOffsiteGatewayFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Action\\\\\\\\ActionInterface\\\\:\\\\:execute\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Action/ActionInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to function is_array\\\\(\\\\) with object\\\\|null will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Action/ExecuteSameRequestWithModelDetailsAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetCurrency\\\\:\\\\:\\\\$numeric \\\\(int\\\\) does not accept string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Action/GetCurrencyAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\ApiAwareInterface\\\\:\\\\:setApi\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/ApiAwareInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Defuse\\\\\\\\Security\\\\\\\\DefuseCypher\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$secret with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Defuse/Security/DefuseCypher.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#2 \\\\$key of static method Defuse\\\\\\\\Crypto\\\\\\\\Crypto\\\\:\\\\:decrypt\\\\(\\\\) expects Defuse\\\\\\\\Crypto\\\\\\\\Key, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Defuse/Security/DefuseCypher.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#2 \\\\$key of static method Defuse\\\\\\\\Crypto\\\\\\\\Crypto\\\\:\\\\:encrypt\\\\(\\\\) expects Defuse\\\\\\\\Crypto\\\\\\\\Key, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Defuse/Security/DefuseCypher.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Defuse\\\\\\\\Security\\\\\\\\DefuseCypher\\\\:\\\\:\\\\$key \\\\(string\\\\) does not accept Defuse\\\\\\\\Crypto\\\\\\\\Key\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Defuse/Security/DefuseCypher.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Doctrine\\\\\\\\Storage\\\\\\\\DoctrineStorage\\\\:\\\\:findBy\\\\(\\\\) has parameter \\\\$criteria with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Doctrine/Storage/DoctrineStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Doctrine\\\\\\\\Types\\\\\\\\ObjectType\\\\:\\\\:getName\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Doctrine/Types/ObjectType.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to method extract\\\\(\\\\) on an unknown class Laminas\\\\\\\\Hydrator\\\\\\\\HydratorInterface\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Core/Bridge/Laminas/Storage/TableGatewayStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Laminas\\\\\\\\Storage\\\\\\\\TableGatewayStorage\\\\:\\\\:doDeleteModel\\\\(\\\\) has parameter \\\\$model with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Laminas/Storage/TableGatewayStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\PlainPhp\\\\\\\\Security\\\\\\\\TokenFactory\\\\:\\\\:generateUrl\\\\(\\\\) has parameter \\\\$parameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/PlainPhp/Security/TokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Elseif branch is unreachable because previous condition is always true\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Action/GetHttpRequestAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Action\\\\\\\\RenderTemplateAction\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$layout with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Action/RenderTemplateAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Builder\\\\\\\\CoreGatewayFactoryBuilder\\\\:\\\\:__invoke\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Builder/CoreGatewayFactoryBuilder.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Builder\\\\\\\\CoreGatewayFactoryBuilder\\\\:\\\\:build\\\\(\\\\) has parameter \\\\$defaultConfig with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Builder/CoreGatewayFactoryBuilder.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Builder\\\\\\\\GatewayFactoryBuilder\\\\:\\\\:__invoke\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Builder/GatewayFactoryBuilder.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Builder\\\\\\\\GatewayFactoryBuilder\\\\:\\\\:build\\\\(\\\\) has parameter \\\\$defaultConfig with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Builder/GatewayFactoryBuilder.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Builder\\\\\\\\ObtainCreditCardActionBuilder\\\\:\\\\:__invoke\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Builder/ObtainCreditCardActionBuilder.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to function is_null\\\\(\\\\) with array will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Form/Type/GatewayConfigType.php\n\n\t\t-\n\t\t\tmessage: \"#^Else branch is unreachable because ternary operator condition is always true\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Form/Type/GatewayConfigType.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @var for variable \\\\$data has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Form/Type/GatewayConfigType.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#3 \\\\$previous of class Payum\\\\\\\\Core\\\\\\\\Exception\\\\\\\\LogicException constructor expects Throwable\\\\|null, Payum\\\\\\\\Core\\\\\\\\Reply\\\\\\\\ReplyInterface given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/ReplyToSymfonyResponseConverter.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Validator\\\\\\\\Constraints\\\\\\\\CreditCardDate\\\\:\\\\:\\\\$invalidMessage has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Validator/Constraints/CreditCardDate.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Validator\\\\\\\\Constraints\\\\\\\\CreditCardDate\\\\:\\\\:\\\\$min has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Validator/Constraints/CreditCardDate.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Validator\\\\\\\\Constraints\\\\\\\\CreditCardDate\\\\:\\\\:\\\\$minMessage has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Validator/Constraints/CreditCardDate.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property Symfony\\\\\\\\Component\\\\\\\\Validator\\\\\\\\Constraint\\\\:\\\\:\\\\$invalidMessage\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Validator/Constraints/CreditCardDateValidator.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property Symfony\\\\\\\\Component\\\\\\\\Validator\\\\\\\\Constraint\\\\:\\\\:\\\\$min\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Validator/Constraints/CreditCardDateValidator.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property Symfony\\\\\\\\Component\\\\\\\\Validator\\\\\\\\Constraint\\\\:\\\\:\\\\$minMessage\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Validator/Constraints/CreditCardDateValidator.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Symfony\\\\\\\\Component\\\\\\\\Validator\\\\\\\\Context\\\\\\\\ExecutionContextInterface\\\\:\\\\:addViolationAt\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Validator/Constraints/CreditCardDateValidator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Validator\\\\\\\\Constraints\\\\\\\\CreditCardDateValidator\\\\:\\\\:validate\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Symfony/Validator/Constraints/CreditCardDateValidator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Twig\\\\\\\\TwigFactory\\\\:\\\\:guessViewsPath\\\\(\\\\) should return string\\\\|null but empty return statement found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Bridge/Twig/TwigFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Unsafe usage of new static\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Exception/Http/HttpException.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Exception\\\\\\\\Http\\\\\\\\HttpExceptionInterface\\\\:\\\\:setRequest\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Exception/Http/HttpExceptionInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Exception\\\\\\\\Http\\\\\\\\HttpExceptionInterface\\\\:\\\\:setResponse\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Exception/Http/HttpExceptionInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Exception\\\\\\\\RequestNotSupportedException\\\\:\\\\:suggestions\\\\(\\\\) has parameter \\\\$request with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Exception/RequestNotSupportedException.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Extension\\\\\\\\Context\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$request with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Extension/Context.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Extension\\\\\\\\ExtensionInterface\\\\:\\\\:onExecute\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Extension/ExtensionInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Extension\\\\\\\\ExtensionInterface\\\\:\\\\:onPostExecute\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Extension/ExtensionInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Extension\\\\\\\\ExtensionInterface\\\\:\\\\:onPreExecute\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Extension/ExtensionInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @var above a method has no effect\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/Payum/Core/Extension/ExtensionInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @var does not specify variable name\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/Payum/Core/Extension/ExtensionInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\ModelAggregateInterface\\\\:\\\\:setModel\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Extension/StorageExtension.php\n\n\t\t-\n\t\t\tmessage: \"#^Invalid type Payum\\\\\\\\Core\\\\\\\\Reply\\\\\\\\ReplyInterface to throw\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Gateway.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Gateway\\\\:\\\\:execute\\\\(\\\\) should return Payum\\\\\\\\Core\\\\\\\\Reply\\\\\\\\ReplyInterface\\\\|null but empty return statement found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Gateway.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\GatewayAwareInterface\\\\:\\\\:setGateway\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/GatewayAwareInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\GatewayFactory\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$defaultConfig with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/GatewayFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\GatewayFactory\\\\:\\\\:create\\\\(\\\\) has parameter \\\\$config with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/GatewayFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\GatewayFactory\\\\:\\\\:createConfig\\\\(\\\\) has parameter \\\\$config with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/GatewayFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\GatewayFactory\\\\:\\\\:createConfig\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/GatewayFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\GatewayFactory\\\\:\\\\:\\\\$defaultConfig type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/GatewayFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\GatewayFactoryInterface\\\\:\\\\:create\\\\(\\\\) has parameter \\\\$config with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/GatewayFactoryInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\GatewayFactoryInterface\\\\:\\\\:createConfig\\\\(\\\\) has parameter \\\\$config with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/GatewayFactoryInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\GatewayFactoryInterface\\\\:\\\\:createConfig\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/GatewayFactoryInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @throws with type Payum\\\\\\\\Core\\\\\\\\Exception\\\\\\\\RequestNotSupportedException\\\\|Payum\\\\\\\\Core\\\\\\\\Reply\\\\\\\\ReplyInterface is not subtype of Throwable$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/GatewayInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\ISO4217\\\\\\\\Currency\\\\:\\\\:getCountry\\\\(\\\\) has invalid return type string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/ISO4217/Currency.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\BankAccountInterface\\\\:\\\\:setBankCode\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/BankAccountInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\BankAccountInterface\\\\:\\\\:setBankCountryCode\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/BankAccountInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\BankAccountInterface\\\\:\\\\:setBic\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/BankAccountInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\BankAccountInterface\\\\:\\\\:setHolder\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/BankAccountInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\BankAccountInterface\\\\:\\\\:setIban\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/BankAccountInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\BankAccountInterface\\\\:\\\\:setNumber\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/BankAccountInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\CreditCard\\\\:\\\\:setMaskedNumber\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/CreditCard.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\CreditCard\\\\:\\\\:\\\\$expireAt \\\\(DateTime\\\\) does not accept null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/CreditCard.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\CreditCard\\\\:\\\\:\\\\$holder \\\\(string\\\\) does not accept null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/CreditCard.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\CreditCard\\\\:\\\\:\\\\$number \\\\(string\\\\) does not accept null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/CreditCard.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\CreditCard\\\\:\\\\:\\\\$securityCode \\\\(string\\\\) does not accept null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/CreditCard.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\CreditCardInterface\\\\:\\\\:secure\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/CreditCardInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\CreditCardInterface\\\\:\\\\:setBrand\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/CreditCardInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\CreditCardInterface\\\\:\\\\:setExpireAt\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/CreditCardInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\CreditCardInterface\\\\:\\\\:setHolder\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/CreditCardInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\CreditCardInterface\\\\:\\\\:setMaskedHolder\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/CreditCardInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\CreditCardInterface\\\\:\\\\:setMaskedNumber\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/CreditCardInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\CreditCardInterface\\\\:\\\\:setNumber\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/CreditCardInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\CreditCardInterface\\\\:\\\\:setSecurityCode\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/CreditCardInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\CreditCardInterface\\\\:\\\\:setToken\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/CreditCardInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\DetailsAwareInterface\\\\:\\\\:setDetails\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/DetailsAwareInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\GatewayConfig\\\\:\\\\:getConfig\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/GatewayConfig.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\GatewayConfig\\\\:\\\\:setConfig\\\\(\\\\) has parameter \\\\$config with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/GatewayConfig.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\GatewayConfig\\\\:\\\\:\\\\$config type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/GatewayConfig.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\GatewayConfig\\\\:\\\\:\\\\$decryptedConfig type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/GatewayConfig.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\GatewayConfigInterface\\\\:\\\\:getConfig\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/GatewayConfigInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\GatewayConfigInterface\\\\:\\\\:setConfig\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/GatewayConfigInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\GatewayConfigInterface\\\\:\\\\:setConfig\\\\(\\\\) has parameter \\\\$config with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/GatewayConfigInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\GatewayConfigInterface\\\\:\\\\:setFactoryName\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/GatewayConfigInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\GatewayConfigInterface\\\\:\\\\:setGatewayName\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/GatewayConfigInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Identity\\\\:\\\\:__unserialize\\\\(\\\\) has parameter \\\\$data with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/Identity.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\ModelAwareInterface\\\\:\\\\:setModel\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/ModelAwareInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Payment\\\\:\\\\:getDetails\\\\(\\\\) should return object\\\\|null but returns array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/Payment.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Payment\\\\:\\\\:setDetails\\\\(\\\\) has parameter \\\\$details with no value type specified in iterable type Traversable\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/Payment.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Payment\\\\:\\\\:setDetails\\\\(\\\\) has parameter \\\\$details with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/Payment.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Payment\\\\:\\\\:setDetails\\\\(\\\\) has parameter \\\\$details with no value type specified in iterable type array\\\\|Traversable\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/Payment.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Payment\\\\:\\\\:\\\\$details type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/Payment.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Payout\\\\:\\\\:getDetails\\\\(\\\\) should return object\\\\|null but returns array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/Payout.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Payout\\\\:\\\\:setDetails\\\\(\\\\) has parameter \\\\$details with no value type specified in iterable type Traversable\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/Payout.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Payout\\\\:\\\\:setDetails\\\\(\\\\) has parameter \\\\$details with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/Payout.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Payout\\\\:\\\\:setDetails\\\\(\\\\) has parameter \\\\$details with no value type specified in iterable type array\\\\|Traversable\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/Payout.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Payout\\\\:\\\\:\\\\$details type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/Payout.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Token\\\\:\\\\:getDetails\\\\(\\\\) should return Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Identity but returns Payum\\\\\\\\Core\\\\\\\\Storage\\\\\\\\IdentityInterface\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Model/Token.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\PayumBuilder\\\\:\\\\:buildRegistry\\\\(\\\\) has parameter \\\\$gatewayFactories with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/PayumBuilder.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Registry\\\\\\\\AbstractRegistry\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$gatewayFactories with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Registry/AbstractRegistry.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Registry\\\\\\\\AbstractRegistry\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$gateways with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Registry/AbstractRegistry.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Registry\\\\\\\\AbstractRegistry\\\\:\\\\:\\\\$gatewayFactories type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Registry/AbstractRegistry.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Registry\\\\\\\\AbstractRegistry\\\\:\\\\:\\\\$gateways type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Registry/AbstractRegistry.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Reply\\\\\\\\HttpPostRedirect\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$fields with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Reply/HttpPostRedirect.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Reply\\\\\\\\HttpPostRedirect\\\\:\\\\:getFields\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Reply/HttpPostRedirect.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Reply\\\\\\\\HttpPostRedirect\\\\:\\\\:prepareContent\\\\(\\\\) has parameter \\\\$fields with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Reply/HttpPostRedirect.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Reply\\\\\\\\HttpPostRedirect\\\\:\\\\:\\\\$fields type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Reply/HttpPostRedirect.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Reply\\\\\\\\HttpRedirect\\\\:\\\\:prepareContent\\\\(\\\\) has parameter \\\\$url with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Reply/HttpRedirect.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc type string of property Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetCreditCardToken\\\\:\\\\:\\\\$token is not covariant with PHPDoc type Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\TokenInterface of overridden property Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\Generic\\\\:\\\\:\\\\$token\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/GetCreditCardToken.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetHttpRequest\\\\:\\\\:\\\\$headers type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/GetHttpRequest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetHttpRequest\\\\:\\\\:\\\\$query type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/GetHttpRequest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetHttpRequest\\\\:\\\\:\\\\$request type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/GetHttpRequest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface\\\\:\\\\:markAuthorized\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/GetStatusInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface\\\\:\\\\:markCanceled\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/GetStatusInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface\\\\:\\\\:markCaptured\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/GetStatusInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface\\\\:\\\\:markExpired\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/GetStatusInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface\\\\:\\\\:markFailed\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/GetStatusInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface\\\\:\\\\:markNew\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/GetStatusInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface\\\\:\\\\:markPayedout\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/GetStatusInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface\\\\:\\\\:markPending\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/GetStatusInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface\\\\:\\\\:markRefunded\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/GetStatusInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface\\\\:\\\\:markSuspended\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/GetStatusInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface\\\\:\\\\:markUnknown\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/GetStatusInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\RenderTemplate\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$parameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/RenderTemplate.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\RenderTemplate\\\\:\\\\:getParameters\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/RenderTemplate.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\RenderTemplate\\\\:\\\\:\\\\$parameters type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Request/RenderTemplate.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\AbstractTokenFactory\\\\:\\\\:addQueryToUri\\\\(\\\\) has parameter \\\\$query with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/AbstractTokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\AbstractTokenFactory\\\\:\\\\:createToken\\\\(\\\\) has parameter \\\\$afterParameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/AbstractTokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\AbstractTokenFactory\\\\:\\\\:createToken\\\\(\\\\) has parameter \\\\$targetParameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/AbstractTokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\AbstractTokenFactory\\\\:\\\\:generateUrl\\\\(\\\\) has parameter \\\\$parameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/AbstractTokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\CryptedInterface\\\\:\\\\:decrypt\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/CryptedInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\CryptedInterface\\\\:\\\\:encrypt\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/CryptedInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactory\\\\:\\\\:createAuthorizeToken\\\\(\\\\) has parameter \\\\$afterParameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactory\\\\:\\\\:createCancelToken\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactory\\\\:\\\\:createCancelToken\\\\(\\\\) has parameter \\\\$afterParameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactory\\\\:\\\\:createCancelToken\\\\(\\\\) has parameter \\\\$afterPath with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactory\\\\:\\\\:createCancelToken\\\\(\\\\) has parameter \\\\$gatewayName with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactory\\\\:\\\\:createCancelToken\\\\(\\\\) has parameter \\\\$model with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactory\\\\:\\\\:createCaptureToken\\\\(\\\\) has parameter \\\\$afterParameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactory\\\\:\\\\:createPayoutToken\\\\(\\\\) has parameter \\\\$afterParameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactory\\\\:\\\\:createRefundToken\\\\(\\\\) has parameter \\\\$afterParameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactory\\\\:\\\\:createToken\\\\(\\\\) has parameter \\\\$afterParameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactory\\\\:\\\\:createToken\\\\(\\\\) has parameter \\\\$targetParameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactoryAwareInterface\\\\:\\\\:setGenericTokenFactory\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactoryAwareInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactoryInterface\\\\:\\\\:createAuthorizeToken\\\\(\\\\) has parameter \\\\$afterParameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactoryInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactoryInterface\\\\:\\\\:createCaptureToken\\\\(\\\\) has parameter \\\\$afterParameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactoryInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactoryInterface\\\\:\\\\:createPayoutToken\\\\(\\\\) has parameter \\\\$afterParameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactoryInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\GenericTokenFactoryInterface\\\\:\\\\:createRefundToken\\\\(\\\\) has parameter \\\\$afterParameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/GenericTokenFactoryInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\HttpRequestVerifierInterface\\\\:\\\\:invalidate\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/HttpRequestVerifierInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\SensitiveValue\\\\:\\\\:__unserialize\\\\(\\\\) has parameter \\\\$data with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/SensitiveValue.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\SensitiveValue\\\\:\\\\:\\\\$value has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/SensitiveValue.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\TokenFactoryInterface\\\\:\\\\:createToken\\\\(\\\\) has parameter \\\\$afterParameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/TokenFactoryInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\TokenFactoryInterface\\\\:\\\\:createToken\\\\(\\\\) has parameter \\\\$targetParameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/TokenFactoryInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\TokenInterface\\\\:\\\\:setAfterUrl\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/TokenInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\TokenInterface\\\\:\\\\:setGatewayName\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/TokenInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\TokenInterface\\\\:\\\\:setHash\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/TokenInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\TokenInterface\\\\:\\\\:setTargetUrl\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/TokenInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\Util\\\\\\\\Random\\\\:\\\\:generateToken\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/Util/Random.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\Util\\\\\\\\Random\\\\:\\\\:getRandomNumber\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Security/Util/Random.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Storage\\\\\\\\AbstractStorage\\\\:\\\\:doDeleteModel\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Storage/AbstractStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Storage\\\\\\\\CryptoStorageDecorator\\\\:\\\\:findBy\\\\(\\\\) has parameter \\\\$criteria with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Storage/CryptoStorageDecorator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Storage\\\\\\\\FilesystemStorage\\\\:\\\\:findBy\\\\(\\\\) has parameter \\\\$criteria with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Storage/FilesystemStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Storage\\\\\\\\FilesystemStorage\\\\:\\\\:\\\\$identityMap type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Storage/FilesystemStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Storage\\\\\\\\StorageInterface\\\\:\\\\:delete\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Storage/StorageInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Storage\\\\\\\\StorageInterface\\\\:\\\\:findBy\\\\(\\\\) has parameter \\\\$criteria with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Storage/StorageInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\AbstractGatewayFactoryTest\\\\:\\\\:getPropertyValue\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/AbstractGatewayFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\AbstractGatewayFactoryTest\\\\:\\\\:getRequiredOptions\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/AbstractGatewayFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Action\\\\\\\\ModelAggregateAwareRequest\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$model with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Action/ExecuteSameRequestWithModelDetailsActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Action\\\\\\\\DetailsAggregateAndAwareModel\\\\:\\\\:\\\\$details has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Action/ExecuteSameRequestWithModelDetailsActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Action\\\\\\\\DetailsAggregateModel\\\\:\\\\:\\\\$details has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Action/ExecuteSameRequestWithModelDetailsActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Action\\\\\\\\ModelAggregateAwareRequest\\\\:\\\\:\\\\$model has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Action/ExecuteSameRequestWithModelDetailsActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\ApiAwareClass\\\\:\\\\:setApi\\\\(\\\\) has parameter \\\\$api with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/ApiAwareTraitTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\ApiAwareClass\\\\:\\\\:setApiClass\\\\(\\\\) has parameter \\\\$apiClass with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/ApiAwareTraitTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\BaseConvertPaymentActionTest\\\\:\\\\:testShouldNotSupportRequest\\\\(\\\\) has parameter \\\\$request with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/BaseConvertPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\BaseConvertPaymentActionTest\\\\:\\\\:testShouldSupportRequest\\\\(\\\\) has parameter \\\\$request with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/BaseConvertPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\BaseConvertPaymentActionTest\\\\:\\\\:testThrowIfNotSupportedRequestGivenAsArgumentForExecute\\\\(\\\\) has parameter \\\\$request with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/BaseConvertPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\BaseConvertPaymentActionTest\\\\:\\\\:\\\\$requestClass \\\\(Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\Generic\\\\) does not accept default value of type string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/BaseConvertPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Bridge\\\\\\\\Doctrine\\\\\\\\Storage\\\\\\\\DoctrineStorageTest\\\\:\\\\:createObjectRepositoryMock\\\\(\\\\) return type with generic interface Doctrine\\\\\\\\Persistence\\\\\\\\ObjectRepository does not specify its types\\\\: T$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Bridge/Doctrine/Storage/DoctrineStorageTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Bridge\\\\\\\\PlainPhp\\\\\\\\Security\\\\\\\\TokenFactoryTest\\\\:\\\\:testShouldCreateTokenForBaseUrlWithPathAndScriptFile\\\\(\\\\) has parameter \\\\$hostname with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Bridge/PlainPhp/Security/TokenFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Bridge\\\\\\\\PlainPhp\\\\\\\\Security\\\\\\\\TokenFactoryTest\\\\:\\\\:testShouldCreateTokenForBaseUrlWithPathAndScriptFile\\\\(\\\\) has parameter \\\\$result with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Bridge/PlainPhp/Security/TokenFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Bridge\\\\\\\\PlainPhp\\\\\\\\Security\\\\\\\\TokenFactoryTest\\\\:\\\\:testShouldCreateTokenForBaseUrlWithPathAndScriptFile\\\\(\\\\) has parameter \\\\$target with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Bridge/PlainPhp/Security/TokenFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Bridge\\\\\\\\Psr\\\\\\\\Log\\\\\\\\LoggerAwareAction\\\\:\\\\:\\\\$logger has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Bridge/Psr/Log/LoggerExtensionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^ArrayObject\\\\<\\\\*NEVER\\\\*, \\\\*NEVER\\\\*\\\\> does not accept string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Bridge/Spl/ArrayObjectTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Bridge\\\\\\\\Spl\\\\\\\\CustomArrayObject implements generic interface ArrayAccess but does not specify its types\\\\: TKey, TValue$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Bridge/Spl/ArrayObjectTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Bridge\\\\\\\\Spl\\\\\\\\CustomArrayObject implements generic interface IteratorAggregate but does not specify its types\\\\: TKey, TValue$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Bridge/Spl/ArrayObjectTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Bridge\\\\\\\\Spl\\\\\\\\CustomArrayObject\\\\:\\\\:\\\\$foo has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Bridge/Spl/ArrayObjectTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Core\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Action\\\\\\\\ObtainCreditCardAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\ObtainCreditCard, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Bridge/Symfony/Action/ObtainCreditCardActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Extension\\\\\\\\EventDispatcherExtensionTest\\\\:\\\\:createContextMock\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Bridge/Symfony/Extension/EventDispatcherExtensionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Extension\\\\\\\\EventDispatcherExtensionTest\\\\:\\\\:createEventDispatcherMock\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Bridge/Symfony/Extension/EventDispatcherExtensionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#2 \\\\$value of method Symfony\\\\\\\\Component\\\\\\\\HttpFoundation\\\\\\\\InputBag\\\\:\\\\:set\\\\(\\\\) expects array\\\\|bool\\\\|float\\\\|int\\\\|string\\\\|null, Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Token given\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/Payum/Core/Tests/Bridge/Symfony/Security/HttpRequestVerifierTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Validator\\\\\\\\Constraints\\\\\\\\CreditCardDateValidatorTest extends generic class Symfony\\\\\\\\Component\\\\\\\\Validator\\\\\\\\Test\\\\\\\\ConstraintValidatorTestCase but does not specify its types\\\\: T$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Bridge/Symfony/Validator/Constraints/CreditCardDateValidatorTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Result of method Symfony\\\\\\\\Component\\\\\\\\Validator\\\\\\\\ConstraintValidatorInterface\\\\:\\\\:validate\\\\(\\\\) \\\\(void\\\\) is used\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Bridge/Symfony/Validator/Constraints/CreditCardDateValidatorTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Extension\\\\\\\\ActionGenericTokenFactoryAware\\\\:\\\\:\\\\$tokenFactory has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Extension/GenericTokenFactoryExtensionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Extension\\\\\\\\StorageExtensionTest\\\\:\\\\:createModelRequestWithModel\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Extension/StorageExtensionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Extension\\\\\\\\StorageExtensionTest\\\\:\\\\:createModelRequestWithModel\\\\(\\\\) has parameter \\\\$model with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Extension/StorageExtensionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\Common\\\\\\\\Cache\\\\\\\\ArrayCache not found\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Functional/Bridge/Doctrine/BaseMongoTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$cacheImpl of method Doctrine\\\\\\\\ODM\\\\\\\\MongoDB\\\\\\\\Configuration\\\\:\\\\:setMetadataCacheImpl\\\\(\\\\) expects Doctrine\\\\\\\\Common\\\\\\\\Cache\\\\\\\\Cache, Doctrine\\\\\\\\Common\\\\\\\\Cache\\\\\\\\ArrayCache given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Functional/Bridge/Doctrine/BaseMongoTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Instantiated class Doctrine\\\\\\\\Common\\\\\\\\Cache\\\\\\\\ArrayCache not found\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Core/Tests/Functional/Bridge/Doctrine/BaseOrmTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$cacheImpl of method Doctrine\\\\\\\\ORM\\\\\\\\Configuration\\\\:\\\\:setMetadataCacheImpl\\\\(\\\\) expects Doctrine\\\\\\\\Common\\\\\\\\Cache\\\\\\\\Cache, Doctrine\\\\\\\\Common\\\\\\\\Cache\\\\\\\\ArrayCache given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Functional/Bridge/Doctrine/BaseOrmTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$cacheImpl of method Doctrine\\\\\\\\ORM\\\\\\\\Configuration\\\\:\\\\:setQueryCacheImpl\\\\(\\\\) expects Doctrine\\\\\\\\Common\\\\\\\\Cache\\\\\\\\Cache, Doctrine\\\\\\\\Common\\\\\\\\Cache\\\\\\\\ArrayCache given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Functional/Bridge/Doctrine/BaseOrmTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$details of method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Payment\\\\:\\\\:setDetails\\\\(\\\\) expects array\\\\|Traversable, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Functional/Bridge/Doctrine/Document/PaymentTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$details of method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Payment\\\\:\\\\:setDetails\\\\(\\\\) expects array\\\\|Traversable, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Functional/Bridge/Doctrine/Entity/PaymentTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to method expects\\\\(\\\\) on an unknown class Payum\\\\\\\\Bundle\\\\\\\\PayumBundle\\\\\\\\DependencyInjection\\\\\\\\Factory\\\\\\\\Gateway\\\\\\\\GatewayFactoryInterface\\\\.$#\"\n\t\t\tcount: 4\n\t\t\tpath: src/Payum/Core/Tests/Functional/Bridge/Symfony/Form/Type/GatewayConfigTypeTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Functional\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Form\\\\\\\\Type\\\\\\\\GatewayConfigTypeTest\\\\:\\\\:\\\\$fooGatewayFactoryMock has unknown class Payum\\\\\\\\Bundle\\\\\\\\PayumBundle\\\\\\\\DependencyInjection\\\\\\\\Factory\\\\\\\\Gateway\\\\\\\\GatewayFactoryInterface as its type\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Functional/Bridge/Symfony/Form/Type/GatewayConfigTypeTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Functional\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Form\\\\\\\\Type\\\\\\\\GatewayConfigTypeTest\\\\:\\\\:\\\\$formFactory \\\\(Symfony\\\\\\\\Component\\\\\\\\Form\\\\\\\\FormFactory\\\\) does not accept Symfony\\\\\\\\Component\\\\\\\\Form\\\\\\\\FormFactoryInterface\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Functional/Bridge/Symfony/Form/Type/GatewayConfigTypeTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Functional\\\\\\\\Bridge\\\\\\\\Symfony\\\\\\\\Form\\\\\\\\Type\\\\\\\\GatewayFactoriesChoiceTypeTest\\\\:\\\\:\\\\$formFactory \\\\(Symfony\\\\\\\\Component\\\\\\\\Form\\\\\\\\FormFactory\\\\) does not accept Symfony\\\\\\\\Component\\\\\\\\Form\\\\\\\\FormFactoryInterface\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Functional/Bridge/Symfony/Form/Type/GatewayFactoriesChoiceTypeTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Anonymous function has an unused use \\\\$actionMock\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/GatewayTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Anonymous function has an unused use \\\\$exception\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/GatewayTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Anonymous function has an unused use \\\\$newException\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/GatewayTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\RequireOtherRequestAction\\\\:\\\\:setRequiredRequest\\\\(\\\\) has parameter \\\\$request with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/GatewayTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\RequireOtherRequestAction\\\\:\\\\:setSupportedRequest\\\\(\\\\) has parameter \\\\$request with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/GatewayTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\ThrowReplyAction\\\\:\\\\:setSupportedRequest\\\\(\\\\) has parameter \\\\$request with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/GatewayTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$exception of method PHPUnit\\\\\\\\Framework\\\\\\\\MockObject\\\\\\\\Builder\\\\\\\\InvocationMocker\\\\:\\\\:willThrowException\\\\(\\\\) expects Throwable, Payum\\\\\\\\Core\\\\\\\\Reply\\\\\\\\ReplyInterface\\\\|PHPUnit\\\\\\\\Framework\\\\\\\\MockObject\\\\\\\\MockObject given\\\\.$#\"\n\t\t\tcount: 4\n\t\t\tpath: src/Payum/Core/Tests/GatewayTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\RequireOtherRequestAction\\\\:\\\\:\\\\$requiredRequest has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/GatewayTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\RequireOtherRequestAction\\\\:\\\\:\\\\$supportedRequest has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/GatewayTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\ThrowReplyAction\\\\:\\\\:\\\\$reply has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/GatewayTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\ThrowReplyAction\\\\:\\\\:\\\\$supportedRequest has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/GatewayTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\GenericActionTest\\\\:\\\\:testShouldNotSupportRequest\\\\(\\\\) has parameter \\\\$request with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/GenericActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\GenericActionTest\\\\:\\\\:testShouldSupportRequest\\\\(\\\\) has parameter \\\\$request with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/GenericActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\GenericActionTest\\\\:\\\\:testThrowIfNotSupportedRequestGivenAsArgumentForExecute\\\\(\\\\) has parameter \\\\$request with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/GenericActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\GenericApiAwareActionTest\\\\:\\\\:getApiClass\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/GenericApiAwareActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Action\\\\\\\\LoggerAwareAction\\\\:\\\\:\\\\$logger has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Action/LoggerAwareAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Document\\\\\\\\ArrayObject\\\\:\\\\:\\\\$id has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Document/ArrayObject.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Document\\\\\\\\GatewayConfig\\\\:\\\\:\\\\$id has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Document/GatewayConfig.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Document\\\\\\\\Payment\\\\:\\\\:\\\\$id has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Document/Payment.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Document\\\\\\\\TestModel\\\\:\\\\:\\\\$currency has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Document/TestModel.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Document\\\\\\\\TestModel\\\\:\\\\:\\\\$price has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Document/TestModel.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Entity\\\\\\\\TestModel\\\\:\\\\:\\\\$currency has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Entity/TestModel.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Entity\\\\\\\\TestModel\\\\:\\\\:\\\\$price has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Entity/TestModel.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Model\\\\\\\\TestModel\\\\:\\\\:getCurrency\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Model/TestModel.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Model\\\\\\\\TestModel\\\\:\\\\:getId\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Model/TestModel.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Model\\\\\\\\TestModel\\\\:\\\\:getPrice\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Model/TestModel.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Model\\\\\\\\TestModel\\\\:\\\\:setCurrency\\\\(\\\\) has parameter \\\\$currency with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Model/TestModel.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Model\\\\\\\\TestModel\\\\:\\\\:setPrice\\\\(\\\\) has parameter \\\\$price with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Model/TestModel.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Model\\\\\\\\TestModel\\\\:\\\\:\\\\$currency has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Model/TestModel.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Model\\\\\\\\TestModel\\\\:\\\\:\\\\$id has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Model/TestModel.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Mocks\\\\\\\\Model\\\\\\\\TestModel\\\\:\\\\:\\\\$price has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Mocks/Model/TestModel.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$totalAmount of method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Payout\\\\:\\\\:setTotalAmount\\\\(\\\\) expects int, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Model/PayoutTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Anonymous function has an unused use \\\\$expectedFactory\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/PayumBuilderTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Registry\\\\\\\\DoctrineProxy implements generic interface Doctrine\\\\\\\\Persistence\\\\\\\\Proxy but does not specify its types\\\\: T$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Registry/AbstractRegistryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Registry\\\\\\\\AbstractRegistryTest\\\\:\\\\:createAbstractRegistryMock\\\\(\\\\) has parameter \\\\$constructorArguments with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Registry/AbstractRegistryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Reply\\\\\\\\BaseModeAwareTest\\\\:\\\\:testShouldAllowGetModelSetInConstructor\\\\(\\\\) has parameter \\\\$phpType with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Reply/BaseModeAwareTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Reply\\\\\\\\BaseModeAwareTest\\\\:\\\\:testShouldAllowSetModelAndGetIt\\\\(\\\\) has parameter \\\\$phpType with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Reply/BaseModeAwareTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Identity constructor invoked with 0 parameters, 2 required\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Request/GenericTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Request\\\\\\\\GenericTest\\\\:\\\\:testCouldBeConstructedWithModelOfAnyType\\\\(\\\\) has parameter \\\\$phpType with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Request/GenericTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Request\\\\\\\\GenericTest\\\\:\\\\:testShouldAllowGetModelSetInConstructor\\\\(\\\\) has parameter \\\\$phpType with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Request/GenericTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Request\\\\\\\\GenericTest\\\\:\\\\:testShouldAllowSetModelAndGetIt\\\\(\\\\) has parameter \\\\$phpType with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Request/GenericTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method class@anonymous/Payum/Core/Tests/Request/GenericTest\\\\.php\\\\:144\\\\:\\\\:__unserialize\\\\(\\\\) has parameter \\\\$data with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Request/GenericTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method class@anonymous/Payum/Core/Tests/Request/GenericTest\\\\.php\\\\:144\\\\:\\\\:unserialize\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Request/GenericTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method class@anonymous/Payum/Core/Tests/Request/GenericTest\\\\.php\\\\:203\\\\:\\\\:__unserialize\\\\(\\\\) has parameter \\\\$data with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Request/GenericTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Return type \\\\(void\\\\) of method class@anonymous/Payum/Core/Tests/Request/GenericTest\\\\.php\\\\:203\\\\:\\\\:getClass\\\\(\\\\) should be compatible with return type \\\\(string\\\\) of method Payum\\\\\\\\Core\\\\\\\\Storage\\\\\\\\IdentityInterface\\\\:\\\\:getClass\\\\(\\\\)$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Request/GenericTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Return type \\\\(void\\\\) of method class@anonymous/Payum/Core/Tests/Request/GenericTest\\\\.php\\\\:203\\\\:\\\\:serialize\\\\(\\\\) should be compatible with return type \\\\(string\\\\|null\\\\) of method Serializable\\\\:\\\\:serialize\\\\(\\\\)$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Core/Tests/Request/GenericTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Variable \\\\$request in PHPDoc tag @var does not match assigned variable \\\\$token\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Request/GenericTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Request\\\\\\\\GetBinaryStatusTest\\\\:\\\\:testShouldAllowGetMarkedStatus\\\\(\\\\) has parameter \\\\$markXXXMethod with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Request/GetBinaryStatusTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Request\\\\\\\\GetBinaryStatusTest\\\\:\\\\:testShouldCallIsXXXStatus\\\\(\\\\) has parameter \\\\$isXXXMethod with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Request/GetBinaryStatusTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetCurrency\\\\:\\\\:\\\\$exp \\\\(int\\\\) does not accept string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Request/GetCurrencyTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetCurrency\\\\:\\\\:\\\\$numeric \\\\(int\\\\) does not accept string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Request/GetCurrencyTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Request\\\\\\\\GetHumanStatusTest\\\\:\\\\:testShouldAllowGetMarkedStatus\\\\(\\\\) has parameter \\\\$markXXXMethod with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Request/GetHumanStatusTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Request\\\\\\\\GetHumanStatusTest\\\\:\\\\:testShouldCallIsXXXStatus\\\\(\\\\) has parameter \\\\$isXXXMethod with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Request/GetHumanStatusTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Security\\\\\\\\Util\\\\\\\\MaskTest\\\\:\\\\:testShouldAllowGenerateToken\\\\(\\\\) has parameter \\\\$expected with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Security/Util/MaskTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\Security\\\\\\\\Util\\\\\\\\MaskTest\\\\:\\\\:testShouldAllowGenerateToken\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Security/Util/MaskTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Identity constructor invoked with 0 parameters, 2 required\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Storage/AbstractStorageTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method class@anonymous/Payum/Core/Tests/Storage/AbstractStorageTest\\\\.php\\\\:32\\\\:\\\\:findBy\\\\(\\\\) has parameter \\\\$criteria with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/Storage/AbstractStorageTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\TestCase\\\\:\\\\:readAttribute\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/TestCase.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\TestCase\\\\:\\\\:readAttribute\\\\(\\\\) has parameter \\\\$object with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/TestCase.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined static method Doctrine\\\\\\\\Common\\\\\\\\Annotations\\\\\\\\AnnotationRegistry\\\\:\\\\:registerLoader\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Core/Tests/bootstrap.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Action\\\\\\\\Api\\\\\\\\BaseApiAwareAction\\\\:\\\\:_setApi\\\\(\\\\) has parameter \\\\$api with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Checkout/Action/Api/BaseApiAwareAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Action\\\\\\\\Api\\\\\\\\BaseApiAwareAction\\\\:\\\\:addMerchantId\\\\(\\\\) has parameter \\\\$details with generic interface ArrayAccess but does not specify its types\\\\: TKey, TValue$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Checkout/Action/Api/BaseApiAwareAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Static property Klarna_Checkout_Order\\\\:\\\\:\\\\$baseUri \\\\(string\\\\) does not accept int\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Checkout/Action/Api/BaseApiAwareAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Right side of && is always true\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Checkout/Action/AuthorizeAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Action\\\\\\\\AuthorizeRecurringAction\\\\:\\\\:_setApi\\\\(\\\\) has parameter \\\\$api with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Checkout/Action/AuthorizeRecurringAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Config\\\\:\\\\:\\\\$baseUri \\\\(int\\\\) does not accept default value of type string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Checkout/Config.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Config\\\\:\\\\:\\\\$baseUri \\\\(int\\\\) does not accept string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Checkout/KlarnaCheckoutGatewayFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Action\\\\\\\\Api\\\\\\\\UpdateOrderAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Request\\\\\\\\Api\\\\\\\\CreateOrder, Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Request\\\\\\\\Api\\\\\\\\UpdateOrder given\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/Payum/Klarna/Checkout/Tests/Action/Api/UpdateOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Action\\\\\\\\AuthorizeAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\Authorize, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Checkout/Tests/Action/AuthorizeActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc type Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Action\\\\\\\\AuthorizeRecurringAction of property Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Tests\\\\\\\\Action\\\\\\\\AuthorizeRecurringActionTest\\\\:\\\\:\\\\$actionClass is not covariant with PHPDoc type string of overridden property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\GenericActionTest\\\\:\\\\:\\\\$actionClass\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Checkout/Tests/Action/AuthorizeRecurringActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Config\\\\:\\\\:\\\\$baseUri \\\\(int\\\\) does not accept string\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Klarna/Checkout/Tests/Action/AuthorizeRecurringActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Tests\\\\\\\\Action\\\\\\\\AuthorizeRecurringActionTest\\\\:\\\\:\\\\$actionClass \\\\(Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Action\\\\\\\\AuthorizeRecurringAction\\\\) does not accept default value of type string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Checkout/Tests/Action/AuthorizeRecurringActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Tests\\\\\\\\Action\\\\\\\\AuthorizeRecurringActionTest\\\\:\\\\:\\\\$requestClass \\\\(Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\Authorize\\\\) does not accept default value of type string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Checkout/Tests/Action/AuthorizeRecurringActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Action\\\\\\\\SyncAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\Sync, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Checkout/Tests/Action/SyncActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Config\\\\:\\\\:\\\\$baseUri \\\\(int\\\\) does not accept string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Checkout/Tests/ConfigTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Tests\\\\\\\\KlarnaCheckoutGatewayFactoryTest\\\\:\\\\:getRequiredOptions\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Checkout/Tests/KlarnaCheckoutGatewayFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Checkout\\\\\\\\Tests\\\\\\\\Request\\\\\\\\Api\\\\\\\\BaseOrderTest\\\\:\\\\:createBaseOrderMock\\\\(\\\\) has parameter \\\\$model with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Checkout/Tests/Request/Api/BaseOrderTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to offset 0 on an unknown class A\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Action/Api/ActivateAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to offset 1 on an unknown class A\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Action/Api/ActivateAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to property \\\\$verifyhost on an unknown class xmlrpc_client\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Klarna/Invoice/Action/Api/BaseApiAwareAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to property \\\\$verifypeer on an unknown class xmlrpc_client\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Klarna/Invoice/Action/Api/BaseApiAwareAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\Api\\\\\\\\BaseApiAwareAction\\\\:\\\\:_setApi\\\\(\\\\) has parameter \\\\$api with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Action/Api/BaseApiAwareAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\Api\\\\\\\\BaseApiAwareAction\\\\:\\\\:populateDetailsWithError\\\\(\\\\) has parameter \\\\$details with generic interface ArrayAccess but does not specify its types\\\\: TKey, TValue$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Action/Api/BaseApiAwareAction.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @var for variable \\\\$xmlrpc contains unknown class xmlrpc_client\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Action/Api/BaseApiAwareAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$eid of method Klarna\\\\:\\\\:config\\\\(\\\\) expects int, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Action/Api/BaseApiAwareAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$country of method KlarnaAddr\\\\:\\\\:setCountry\\\\(\\\\) expects int, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Action/Api/GetAddressesAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$qty of method Klarna\\\\:\\\\:addArtNo\\\\(\\\\) expects int, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Action/Api/PopulateKlarnaFromDetailsAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$qty of method Klarna\\\\:\\\\:addArticle\\\\(\\\\) expects int, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Action/Api/PopulateKlarnaFromDetailsAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#4 \\\\$price of method Klarna\\\\:\\\\:addArticle\\\\(\\\\) expects int, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Action/Api/PopulateKlarnaFromDetailsAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#5 \\\\$vat of method Klarna\\\\:\\\\:addArticle\\\\(\\\\) expects float, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Action/Api/PopulateKlarnaFromDetailsAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#6 \\\\$discount of method Klarna\\\\:\\\\:addArticle\\\\(\\\\) expects float, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Action/Api/PopulateKlarnaFromDetailsAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Request\\\\\\\\Api\\\\\\\\PopulateKlarnaFromDetails\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$details with generic interface ArrayAccess but does not specify its types\\\\: TKey, TValue$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Request/Api/PopulateKlarnaFromDetails.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\ActivateActionTest\\\\:\\\\:getApiClass\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/ActivateActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\Api\\\\\\\\ActivateAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Request\\\\\\\\Api\\\\\\\\Activate, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/ActivateActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CancelReservationActionTest\\\\:\\\\:getApiClass\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/CancelReservationActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\Api\\\\\\\\CancelReservationAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Request\\\\\\\\Api\\\\\\\\CancelReservation, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/CancelReservationActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\Api\\\\\\\\CheckOrderStatusAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Request\\\\\\\\Api\\\\\\\\CheckOrderStatus, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/CheckOrderStatusActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreditInvoiceActionTest\\\\:\\\\:getApiClass\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/CreditInvoiceActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreditInvoiceAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Request\\\\\\\\Api\\\\\\\\CreditInvoice, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/CreditInvoiceActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreditPartActionTest\\\\:\\\\:getApiClass\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/CreditPartActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreditPartAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Request\\\\\\\\Api\\\\\\\\CreditPart, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/CreditPartActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\EmailInvoiceActionTest\\\\:\\\\:getApiClass\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/EmailInvoiceActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\Api\\\\\\\\EmailInvoiceAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Request\\\\\\\\Api\\\\\\\\EmailInvoice, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/EmailInvoiceActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\GetAddressesActionTest\\\\:\\\\:getApiClass\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/GetAddressesActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$country of method KlarnaAddr\\\\:\\\\:setCountry\\\\(\\\\) expects int, string given\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/GetAddressesActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\Api\\\\\\\\GetAddressesAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Request\\\\\\\\Api\\\\\\\\GetAddresses, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/GetAddressesActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\Api\\\\\\\\PopulateKlarnaFromDetailsAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Request\\\\\\\\Api\\\\\\\\PopulateKlarnaFromDetails, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/PopulateKlarnaFromDetailsActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\ReserveAmountActionTest\\\\:\\\\:getApiClass\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/ReserveAmountActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\Api\\\\\\\\ReserveAmountAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Request\\\\\\\\Api\\\\\\\\ReserveAmount, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/ReserveAmountActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\ReturnAmountActionTest\\\\:\\\\:getApiClass\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/ReturnAmountActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\Api\\\\\\\\ReturnAmountAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Request\\\\\\\\Api\\\\\\\\ReturnAmount, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/ReturnAmountActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\SendInvoiceActionTest\\\\:\\\\:getApiClass\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/SendInvoiceActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\Api\\\\\\\\SendInvoiceAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Request\\\\\\\\Api\\\\\\\\SendInvoice, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/SendInvoiceActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\UpdateActionTest\\\\:\\\\:getApiClass\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/UpdateActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\Api\\\\\\\\UpdateAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Request\\\\\\\\Api\\\\\\\\Update, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/Api/UpdateActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\AuthorizeAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\Authorize, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/AuthorizeActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\CaptureAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\Capture, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/CaptureActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\RefundAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\Refund, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/RefundActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\StatusAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/StatusActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Action\\\\\\\\SyncAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\Sync, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/Action/SyncActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Config\\\\:\\\\:\\\\$country \\\\(int\\\\) does not accept string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/ConfigTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Config\\\\:\\\\:\\\\$currency \\\\(int\\\\) does not accept string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/ConfigTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Config\\\\:\\\\:\\\\$language \\\\(int\\\\) does not accept string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/ConfigTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Config\\\\:\\\\:\\\\$mode \\\\(int\\\\) does not accept string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/ConfigTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Klarna\\\\\\\\Invoice\\\\\\\\Tests\\\\\\\\KlarnaInvoiceGatewayFactoryTest\\\\:\\\\:getRequiredOptions\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Klarna/Invoice/Tests/KlarnaInvoiceGatewayFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Offline\\\\\\\\Tests\\\\\\\\Action\\\\\\\\StatusActionTest\\\\:\\\\:createGetStatusStub\\\\(\\\\) has parameter \\\\$model with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Offline/Tests/Action/StatusActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\AgreementApi\\\\:\\\\:autoPay\\\\(\\\\) has parameter \\\\$parameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/AgreementApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\AgreementApi\\\\:\\\\:autoPay\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/AgreementApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\AgreementApi\\\\:\\\\:check\\\\(\\\\) has parameter \\\\$parameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/AgreementApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\AgreementApi\\\\:\\\\:check\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/AgreementApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\AgreementApi\\\\:\\\\:create\\\\(\\\\) has parameter \\\\$parameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/AgreementApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\AgreementApi\\\\:\\\\:create\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/AgreementApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\AgreementApi\\\\:\\\\:delete\\\\(\\\\) has parameter \\\\$parameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/AgreementApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\AgreementApi\\\\:\\\\:delete\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/AgreementApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\AgreementApi\\\\:\\\\:getPxAgreementWsdl\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/AgreementApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\BaseApi\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$options with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/BaseApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\BaseApi\\\\:\\\\:calculateHash\\\\(\\\\) has parameter \\\\$parameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/BaseApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\BaseApi\\\\:\\\\:calculateHash\\\\(\\\\) has parameter \\\\$parametersKeys with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/BaseApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\BaseApi\\\\:\\\\:call\\\\(\\\\) has parameter \\\\$parameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/BaseApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\BaseApi\\\\:\\\\:call\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/BaseApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\BaseApi\\\\:\\\\:convertSimpleXmlToArray\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/BaseApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\BaseApi\\\\:\\\\:normalizeStatusFields\\\\(\\\\) has parameter \\\\$inputResult with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/BaseApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\BaseApi\\\\:\\\\:normalizeStatusFields\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/BaseApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\BaseApi\\\\:\\\\:removeHeader\\\\(\\\\) has parameter \\\\$inputResult with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/BaseApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\BaseApi\\\\:\\\\:removeHeader\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/BaseApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\BaseApi\\\\:\\\\:removeObsolete\\\\(\\\\) has parameter \\\\$inputResult with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/BaseApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\BaseApi\\\\:\\\\:removeObsolete\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/BaseApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\BaseApi\\\\:\\\\:\\\\$options type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/BaseApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\OrderApi\\\\:\\\\:check\\\\(\\\\) has parameter \\\\$parameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/OrderApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\OrderApi\\\\:\\\\:check\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/OrderApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\OrderApi\\\\:\\\\:complete\\\\(\\\\) has parameter \\\\$parameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/OrderApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\OrderApi\\\\:\\\\:complete\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/OrderApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\OrderApi\\\\:\\\\:getPxOrderWsdl\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/OrderApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\OrderApi\\\\:\\\\:initialize\\\\(\\\\) has parameter \\\\$parameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/OrderApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\OrderApi\\\\:\\\\:initialize\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/OrderApi.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @var above a method has no effect\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/OrderApi.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @var does not specify variable name\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/OrderApi.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @var has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Payex/Api/OrderApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\RecurringApi\\\\:\\\\:check\\\\(\\\\) has parameter \\\\$parameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/RecurringApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\RecurringApi\\\\:\\\\:check\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/RecurringApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\RecurringApi\\\\:\\\\:getPxRecurringWsdl\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/RecurringApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\RecurringApi\\\\:\\\\:start\\\\(\\\\) has parameter \\\\$parameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/RecurringApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\RecurringApi\\\\:\\\\:start\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/RecurringApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\RecurringApi\\\\:\\\\:stop\\\\(\\\\) has parameter \\\\$parameters with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/RecurringApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\RecurringApi\\\\:\\\\:stop\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/RecurringApi.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\SoapClientFactory\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$soapClientOptions with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/SoapClientFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Payex\\\\\\\\Api\\\\\\\\SoapClientFactory\\\\:\\\\:\\\\$soapClientOptions type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Api/SoapClientFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Payex\\\\\\\\Action\\\\\\\\AgreementDetailsStatusAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/AgreementDetailsStatusActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Payex\\\\\\\\Action\\\\\\\\Api\\\\\\\\AutoPayAgreementAction constructor invoked with 1 parameter, 0 required\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/AutoPayAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\AutoPayAgreementActionTest\\\\:\\\\:provideRequiredFields\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/AutoPayAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\AutoPayAgreementActionTest\\\\:\\\\:testThrowIfTryInitializeWithRequiredFieldNotPresent\\\\(\\\\) has parameter \\\\$requiredField with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/AutoPayAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\AutoPayAgreementActionTest\\\\:\\\\:\\\\$requiredFields has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/AutoPayAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Payex\\\\\\\\Action\\\\\\\\Api\\\\\\\\CheckAgreementAction constructor invoked with 1 parameter, 0 required\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CheckAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CheckAgreementActionTest\\\\:\\\\:provideRequiredNotEmptyFields\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CheckAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CheckAgreementActionTest\\\\:\\\\:testThrowIfTryInitializeWithRequiredFieldEmpty\\\\(\\\\) has parameter \\\\$requiredField with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CheckAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CheckAgreementActionTest\\\\:\\\\:\\\\$requiredNotEmptyFields has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CheckAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Payex\\\\\\\\Action\\\\\\\\Api\\\\\\\\CheckOrderAction constructor invoked with 1 parameter, 0 required\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CheckOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CheckOrderActionTest\\\\:\\\\:provideRequiredFields\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CheckOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CheckOrderActionTest\\\\:\\\\:testThrowIfTryInitializeWithRequiredFieldNotPresent\\\\(\\\\) has parameter \\\\$requiredField with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CheckOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CheckOrderActionTest\\\\:\\\\:\\\\$requiredFields has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CheckOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Payex\\\\\\\\Action\\\\\\\\Api\\\\\\\\CheckRecurringPaymentAction constructor invoked with 1 parameter, 0 required\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CheckRecurringPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CheckRecurringPaymentActionTest\\\\:\\\\:provideRequiredFields\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CheckRecurringPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CheckRecurringPaymentActionTest\\\\:\\\\:testThrowIfTryInitializeWithRequiredFieldNotPresent\\\\(\\\\) has parameter \\\\$requiredField with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CheckRecurringPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CheckRecurringPaymentActionTest\\\\:\\\\:\\\\$requiredFields has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CheckRecurringPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Payex\\\\\\\\Action\\\\\\\\Api\\\\\\\\CompleteOrderAction constructor invoked with 1 parameter, 0 required\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CompleteOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CompleteOrderActionTest\\\\:\\\\:provideRequiredFields\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CompleteOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CompleteOrderActionTest\\\\:\\\\:testThrowIfTryInitializeWithRequiredFieldNotPresent\\\\(\\\\) has parameter \\\\$requiredField with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CompleteOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CompleteOrderActionTest\\\\:\\\\:\\\\$requiredFields has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CompleteOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Payex\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreateAgreementAction constructor invoked with 1 parameter, 0 required\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CreateAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreateAgreementActionTest\\\\:\\\\:provideRequiredFields\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CreateAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreateAgreementActionTest\\\\:\\\\:provideRequiredNotEmptyFields\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CreateAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreateAgreementActionTest\\\\:\\\\:testThrowIfTryInitializeWithRequiredFieldEmpty\\\\(\\\\) has parameter \\\\$requiredField with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CreateAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreateAgreementActionTest\\\\:\\\\:testThrowIfTryInitializeWithRequiredFieldNotPresent\\\\(\\\\) has parameter \\\\$requiredField with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CreateAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreateAgreementActionTest\\\\:\\\\:\\\\$requiredFields has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CreateAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreateAgreementActionTest\\\\:\\\\:\\\\$requiredNotEmptyFields has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/CreateAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Payex\\\\\\\\Action\\\\\\\\Api\\\\\\\\DeleteAgreementAction constructor invoked with 1 parameter, 0 required\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/DeleteAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\DeleteAgreementActionTest\\\\:\\\\:provideRequiredNotEmptyFields\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/DeleteAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\DeleteAgreementActionTest\\\\:\\\\:testThrowIfTryInitializeWithRequiredFieldEmpty\\\\(\\\\) has parameter \\\\$requiredField with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/DeleteAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\DeleteAgreementActionTest\\\\:\\\\:\\\\$requiredNotEmptyFields has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/DeleteAgreementActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Payex\\\\\\\\Action\\\\\\\\Api\\\\\\\\InitializeOrderAction constructor invoked with 1 parameter, 0 required\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/InitializeOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Dead catch \\\\- Payum\\\\\\\\Core\\\\\\\\Reply\\\\\\\\HttpRedirect is never thrown in the try block\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/InitializeOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\InitializeOrderActionTest\\\\:\\\\:provideRequiredFields\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/InitializeOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\InitializeOrderActionTest\\\\:\\\\:testThrowIfTryInitializeWithRequiredFieldNotPresent\\\\(\\\\) has parameter \\\\$requiredField with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/InitializeOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\InitializeOrderActionTest\\\\:\\\\:\\\\$requiredFields has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/InitializeOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Payex\\\\\\\\Action\\\\\\\\Api\\\\\\\\StartRecurringPaymentAction constructor invoked with 1 parameter, 0 required\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/StartRecurringPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\StartRecurringPaymentActionTest\\\\:\\\\:provideRequiredFields\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/StartRecurringPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\StartRecurringPaymentActionTest\\\\:\\\\:testThrowIfTryInitializeWithRequiredFieldNotPresent\\\\(\\\\) has parameter \\\\$requiredField with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/StartRecurringPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\StartRecurringPaymentActionTest\\\\:\\\\:\\\\$requiredFields has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/StartRecurringPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Payex\\\\\\\\Action\\\\\\\\Api\\\\\\\\StopRecurringPaymentAction constructor invoked with 1 parameter, 0 required\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/StopRecurringPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\StopRecurringPaymentActionTest\\\\:\\\\:provideRequiredFields\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/StopRecurringPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\StopRecurringPaymentActionTest\\\\:\\\\:testThrowIfTryInitializeWithRequiredFieldNotPresent\\\\(\\\\) has parameter \\\\$requiredField with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/StopRecurringPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\Action\\\\\\\\Api\\\\\\\\StopRecurringPaymentActionTest\\\\:\\\\:\\\\$requiredFields has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/Api/StopRecurringPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Payex\\\\\\\\Action\\\\\\\\AutoPayPaymentDetailsStatusAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/AutoPayPaymentDetailsStatusActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Payex\\\\\\\\Action\\\\\\\\PaymentDetailsCaptureAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\Capture, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/PaymentDetailsCaptureActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Payex\\\\\\\\Action\\\\\\\\PaymentDetailsStatusAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/Action/PaymentDetailsStatusActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Payex\\\\\\\\Tests\\\\\\\\PayexGatewayFactoryTest\\\\:\\\\:getRequiredOptions\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Payex/Tests/PayexGatewayFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Paypal\\\\\\\\ExpressCheckout\\\\\\\\Nvp\\\\\\\\Action\\\\\\\\Api\\\\\\\\ConfirmOrderAction\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$templateName with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Action/Api/ConfirmOrderAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Paypal\\\\\\\\ExpressCheckout\\\\\\\\Nvp\\\\\\\\Action\\\\\\\\Api\\\\\\\\DoCaptureAction\\\\:\\\\:getPaymentRequestNFields\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Action/Api/DoCaptureAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Paypal\\\\\\\\ExpressCheckout\\\\\\\\Nvp\\\\\\\\Action\\\\\\\\Api\\\\\\\\GetTransactionDetailsAction\\\\:\\\\:getPaymentRequestNFields\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Action/Api/GetTransactionDetailsAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Right side of && is always true\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Action/PurchaseAction.php\n\n\t\t-\n\t\t\tmessage: \"#^ArrayObject\\\\<\\\\*NEVER\\\\*, \\\\*NEVER\\\\*\\\\> does not accept string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/Action/Api/AuthorizeTokenActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Paypal\\\\\\\\ExpressCheckout\\\\\\\\Nvp\\\\\\\\Action\\\\\\\\Api\\\\\\\\AuthorizeTokenAction constructor invoked with 1 parameter, 0 required\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/Action/Api/AuthorizeTokenActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Anonymous function has an unused use \\\\$model\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/Action/Api/ConfirmOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Payum\\\\\\\\Core\\\\\\\\Action\\\\\\\\ActionInterface\\\\:\\\\:setGateway\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/Action/Api/ConfirmOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Dead catch \\\\- Payum\\\\\\\\Core\\\\\\\\Reply\\\\\\\\HttpResponse is never thrown in the try block\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/Action/Api/ConfirmOrderActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Paypal\\\\\\\\ExpressCheckout\\\\\\\\Nvp\\\\\\\\Action\\\\\\\\Api\\\\\\\\DoVoidAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Paypal\\\\\\\\ExpressCheckout\\\\\\\\Nvp\\\\\\\\Request\\\\\\\\Api\\\\\\\\DoVoid, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/Action/Api/DoVoidActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Paypal\\\\\\\\ExpressCheckout\\\\\\\\Nvp\\\\\\\\Action\\\\\\\\Api\\\\\\\\SetExpressCheckoutAction constructor invoked with 1 parameter, 0 required\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/Action/Api/SetExpressCheckoutActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$details of method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Token\\\\:\\\\:setDetails\\\\(\\\\) expects object, array given\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/Action/AutorizeActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Paypal\\\\\\\\ExpressCheckout\\\\\\\\Nvp\\\\\\\\Tests\\\\\\\\Action\\\\\\\\CancelRecurringPaymentsProfileActionTest\\\\:\\\\:testThrowIfNotSupportedRequestGivenAsArgumentForExecute\\\\(\\\\) has parameter \\\\$request with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/Action/CancelRecurringPaymentsProfileActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc type Payum\\\\\\\\Core\\\\\\\\Action\\\\\\\\ActionInterface of property Payum\\\\\\\\Paypal\\\\\\\\ExpressCheckout\\\\\\\\Nvp\\\\\\\\Tests\\\\\\\\Action\\\\\\\\CancelRecurringPaymentsProfileActionTest\\\\:\\\\:\\\\$actionClass is not covariant with PHPDoc type string of overridden property Payum\\\\\\\\Core\\\\\\\\Tests\\\\\\\\GenericActionTest\\\\:\\\\:\\\\$actionClass\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/Action/CancelRecurringPaymentsProfileActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Paypal\\\\\\\\ExpressCheckout\\\\\\\\Nvp\\\\\\\\Tests\\\\\\\\Action\\\\\\\\CancelRecurringPaymentsProfileActionTest\\\\:\\\\:\\\\$actionClass \\\\(Payum\\\\\\\\Core\\\\\\\\Action\\\\\\\\ActionInterface\\\\) does not accept default value of type string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/Action/CancelRecurringPaymentsProfileActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Paypal\\\\\\\\ExpressCheckout\\\\\\\\Nvp\\\\\\\\Tests\\\\\\\\Action\\\\\\\\CancelRecurringPaymentsProfileActionTest\\\\:\\\\:\\\\$requestClass \\\\(Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\Generic\\\\) does not accept default value of type string\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/Action/CancelRecurringPaymentsProfileActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$details of method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\Token\\\\:\\\\:setDetails\\\\(\\\\) expects object, array given\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/Action/CaptureActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Paypal\\\\\\\\ExpressCheckout\\\\\\\\Nvp\\\\\\\\Action\\\\\\\\PaymentDetailsStatusAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/Action/PaymentDetailsStatusActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Paypal\\\\\\\\ExpressCheckout\\\\\\\\Nvp\\\\\\\\Action\\\\\\\\RecurringPaymentDetailsStatusAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/Action/RecurringPaymentDetailsStatusActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Paypal\\\\\\\\ExpressCheckout\\\\\\\\Nvp\\\\\\\\Tests\\\\\\\\PaypalExpressCheckoutGatewayFactoryTest\\\\:\\\\:getRequiredOptions\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ExpressCheckout/Nvp/Tests/PaypalExpressCheckoutGatewayFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Paypal\\\\\\\\Masspay\\\\\\\\Nvp\\\\\\\\Request\\\\\\\\Api\\\\\\\\Masspay constructor invoked with 2 parameters, 1 required\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/Masspay/Nvp/Tests/Action/Api/MasspayActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Paypal\\\\\\\\Masspay\\\\\\\\Nvp\\\\\\\\Tests\\\\\\\\PaypalMasspayGatewayFactoryTest\\\\:\\\\:getRequiredOptions\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/Masspay/Nvp/Tests/PaypalMasspayGatewayFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Paypal\\\\\\\\ProCheckout\\\\\\\\Nvp\\\\\\\\Tests\\\\\\\\PaypalProCheckoutGatewayFactoryTest\\\\:\\\\:getRequiredOptions\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ProCheckout/Nvp/Tests/PaypalProCheckoutGatewayFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Paypal\\\\\\\\ProHosted\\\\\\\\Nvp\\\\\\\\Action\\\\\\\\StatusAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\GetStatusInterface, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ProHosted/Nvp/Tests/Action/StatusActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Paypal\\\\\\\\ProHosted\\\\\\\\Nvp\\\\\\\\Tests\\\\\\\\PaypalProHostedGatewayFactoryTest\\\\:\\\\:getRequiredOptions\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/ProHosted/Nvp/Tests/PaypalProHostedGatewayFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property PayPal\\\\\\\\Api\\\\\\\\Payment\\\\:\\\\:\\\\$links\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/Rest/Action/CaptureAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property PayPal\\\\\\\\Api\\\\\\\\PaymentExecution\\\\:\\\\:\\\\$payer_id\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/Rest/Action/CaptureAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method ArrayAccess\\\\:\\\\:replace\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/Payum/Paypal/Rest/Action/CaptureAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Paypal\\\\\\\\Rest\\\\\\\\Action\\\\\\\\CaptureAction\\\\:\\\\:captureArrayAccess\\\\(\\\\) has parameter \\\\$model with generic interface ArrayAccess but does not specify its types\\\\: TKey, TValue$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/Rest/Action/CaptureAction.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @var for variable \\\\$model contains generic interface ArrayAccess but does not specify its types\\\\: TKey, TValue$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/Rest/Action/CaptureAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property PayPal\\\\\\\\Api\\\\\\\\Payment\\\\:\\\\:\\\\$state\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/Rest/Action/StatusAction.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @var above a method has no effect\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/Rest/Action/StatusAction.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @var does not specify variable name\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/Rest/Action/StatusAction.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @var for variable \\\\$model contains generic interface ArrayAccess but does not specify its types\\\\: TKey, TValue$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/Rest/Action/StatusAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property PayPal\\\\\\\\Api\\\\\\\\Payment\\\\:\\\\:\\\\$id\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/Rest/Action/SyncAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Paypal\\\\\\\\Rest\\\\\\\\Model\\\\\\\\PaymentDetails\\\\:\\\\:\\\\$idStorage has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/Rest/Model/PaymentDetails.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Paypal\\\\\\\\Rest\\\\\\\\Tests\\\\\\\\PaypalRestGatewayFactoryTest\\\\:\\\\:getRequiredOptions\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Paypal/Rest/Tests/PaypalRestGatewayFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Right side of && is always true\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Sofort/Action/CaptureAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Sofort\\\\\\\\Api\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$options with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Sofort/Api.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Sofort\\\\\\\\Api\\\\:\\\\:createTransaction\\\\(\\\\) has parameter \\\\$fields with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Sofort/Api.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Sofort\\\\\\\\Api\\\\:\\\\:createTransaction\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Sofort/Api.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Sofort\\\\\\\\Api\\\\:\\\\:getTransactionData\\\\(\\\\) has parameter \\\\$transactionId with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Sofort/Api.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Sofort\\\\\\\\Api\\\\:\\\\:getTransactionData\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Sofort/Api.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Sofort\\\\\\\\Api\\\\:\\\\:refundTransaction\\\\(\\\\) has parameter \\\\$fields with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Sofort/Api.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Sofort\\\\\\\\Api\\\\:\\\\:refundTransaction\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Sofort/Api.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Sofort\\\\\\\\Api\\\\:\\\\:\\\\$options has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Sofort/Api.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Sofort\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreateTransactionAction constructor invoked with 1 parameter, 0 required\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Sofort/Tests/Action/Api/CreateTransactionActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Sofort\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreateTransactionAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Sofort\\\\\\\\Request\\\\\\\\Api\\\\\\\\CreateTransaction, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Sofort/Tests/Action/Api/CreateTransactionActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Sofort\\\\\\\\Action\\\\\\\\Api\\\\\\\\GetTransactionDataAction constructor invoked with 1 parameter, 0 required\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Sofort/Tests/Action/Api/GetTransactionDataActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Sofort\\\\\\\\Action\\\\\\\\Api\\\\\\\\GetTransactionDataAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Sofort\\\\\\\\Request\\\\\\\\Api\\\\\\\\GetTransactionData, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Sofort/Tests/Action/Api/GetTransactionDataActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Payum\\\\\\\\Sofort\\\\\\\\Action\\\\\\\\Api\\\\\\\\RefundTransactionAction constructor invoked with 1 parameter, 0 required\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Payum/Sofort/Tests/Action/Api/RefundTransactionActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$request of method Payum\\\\\\\\Sofort\\\\\\\\Action\\\\\\\\Api\\\\\\\\RefundTransactionAction\\\\:\\\\:execute\\\\(\\\\) expects Payum\\\\\\\\Sofort\\\\\\\\Request\\\\\\\\Api\\\\\\\\RefundTransaction, stdClass given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Sofort/Tests/Action/Api/RefundTransactionActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Sofort\\\\\\\\Tests\\\\\\\\Action\\\\\\\\StatusActionTest\\\\:\\\\:executeRequestWithDetails\\\\(\\\\) has parameter \\\\$details with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Sofort/Tests/Action/StatusActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Sofort\\\\\\\\Tests\\\\\\\\SofortGatewayFactoryTest\\\\:\\\\:getRequiredOptions\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Sofort/Tests/SofortGatewayFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Stripe\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreateChargeAction\\\\:\\\\:_setApi\\\\(\\\\) has parameter \\\\$api with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Action/Api/CreateChargeAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Stripe\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreateCustomerAction\\\\:\\\\:_setApi\\\\(\\\\) has parameter \\\\$api with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Action/Api/CreateCustomerAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Stripe\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreatePlanAction\\\\:\\\\:_setApi\\\\(\\\\) has parameter \\\\$api with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Action/Api/CreatePlanAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Stripe\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreateSubscriptionAction\\\\:\\\\:_setApi\\\\(\\\\) has parameter \\\\$api with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Action/Api/CreateSubscriptionAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Stripe\\\\\\\\Action\\\\\\\\Api\\\\\\\\CreateTokenAction\\\\:\\\\:_setApi\\\\(\\\\) has parameter \\\\$api with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Action/Api/CreateTokenAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Stripe\\\\\\\\Action\\\\\\\\Api\\\\\\\\ObtainTokenAction\\\\:\\\\:_setApi\\\\(\\\\) has parameter \\\\$api with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Action/Api/ObtainTokenAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Stripe\\\\\\\\Action\\\\\\\\Api\\\\\\\\ObtainTokenForCreditCardAction\\\\:\\\\:_setApi\\\\(\\\\) has parameter \\\\$api with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Action/Api/ObtainTokenForCreditCardAction.php\n\n\t\t-\n\t\t\tmessage: \"#^Instanceof between Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\Capture and Payum\\\\\\\\Stripe\\\\\\\\Request\\\\\\\\Api\\\\\\\\ObtainToken will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Extension/CreateCustomerExtension.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @var above a method has no effect\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/Payum/Stripe/Extension/CreateCustomerExtension.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @var does not specify variable name\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/Payum/Stripe/Extension/CreateCustomerExtension.php\n\n\t\t-\n\t\t\tmessage: \"#^Unreachable statement \\\\- code above always terminates\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Extension/CreateCustomerExtension.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Stripe\\\\\\\\Request\\\\\\\\Api\\\\\\\\CreateTokenForCreditCard\\\\:\\\\:getToken\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Request/Api/CreateTokenForCreditCard.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Stripe\\\\\\\\Request\\\\\\\\Api\\\\\\\\CreateTokenForCreditCard\\\\:\\\\:getToken\\\\(\\\\) return type with generic interface ArrayAccess does not specify its types\\\\: TKey, TValue$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Request/Api/CreateTokenForCreditCard.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Stripe\\\\\\\\Request\\\\\\\\Api\\\\\\\\CreateTokenForCreditCard\\\\:\\\\:setToken\\\\(\\\\) has parameter \\\\$token with generic interface ArrayAccess but does not specify its types\\\\: TKey, TValue$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Request/Api/CreateTokenForCreditCard.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Stripe\\\\\\\\Request\\\\\\\\Api\\\\\\\\CreateTokenForCreditCard\\\\:\\\\:setToken\\\\(\\\\) has parameter \\\\$token with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Request/Api/CreateTokenForCreditCard.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc type array\\\\|ArrayAccess of property Payum\\\\\\\\Stripe\\\\\\\\Request\\\\\\\\Api\\\\\\\\CreateTokenForCreditCard\\\\:\\\\:\\\\$token is not covariant with PHPDoc type Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\TokenInterface of overridden property Payum\\\\\\\\Core\\\\\\\\Request\\\\\\\\Generic\\\\:\\\\:\\\\$token\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Request/Api/CreateTokenForCreditCard.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Stripe\\\\\\\\Request\\\\\\\\Api\\\\\\\\CreateTokenForCreditCard\\\\:\\\\:\\\\$token type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Request/Api/CreateTokenForCreditCard.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Payum\\\\\\\\Stripe\\\\\\\\Request\\\\\\\\Api\\\\\\\\CreateTokenForCreditCard\\\\:\\\\:\\\\$token with generic interface ArrayAccess does not specify its types\\\\: TKey, TValue$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Request/Api/CreateTokenForCreditCard.php\n\n\t\t-\n\t\t\tmessage: \"#^Anonymous function has an unused use \\\\$model\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Tests/Action/Api/ObtainTokenActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Anonymous function has an unused use \\\\$model\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Tests/Action/CaptureActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$securityCode of method Payum\\\\\\\\Core\\\\\\\\Model\\\\\\\\CreditCard\\\\:\\\\:setSecurityCode\\\\(\\\\) expects Payum\\\\\\\\Core\\\\\\\\Security\\\\\\\\SensitiveValue\\\\|string, int given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Tests/Action/ConvertPaymentActionTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Stripe\\\\\\\\Tests\\\\\\\\StripeCheckoutGatewayFactoryTest\\\\:\\\\:getRequiredOptions\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Tests/StripeCheckoutGatewayFactoryTest.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Payum\\\\\\\\Stripe\\\\\\\\Tests\\\\\\\\StripeJsGatewayFactoryTest\\\\:\\\\:getRequiredOptions\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Payum/Stripe/Tests/StripeJsGatewayFactoryTest.php\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.1357421875,
          "content": "includes:\n    - phpstan-baseline.neon\n\nparameters:\n    level: 6\n    paths:\n        - src\n    bootstrapFiles:\n        - vendor/autoload.php\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 5.5029296875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\"\n         backupGlobals=\"true\"\n         backupStaticAttributes=\"false\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"false\"\n         convertWarningsToExceptions=\"false\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\"\n         failOnRisky=\"true\"\n         stopOnRisky=\"true\"\n         failOnWarning=\"false\"\n         stopOnWarning=\"false\"\n         bootstrap=\"autoload.php.dist\">\n  <coverage>\n    <include>\n      <directory>./src/Payum</directory>\n    </include>\n    <exclude>\n      <directory>./src/Payum/Core/Tests</directory>\n      <directory>./src/Payum/Core/Resources</directory>\n      <directory>./src/Payum/AuthorizeNet/Aim/Tests</directory>\n      <directory>./src/Payum/AuthorizeNet/Aim/Resources</directory>\n      <directory>./src/Payum/Be2Bill/Tests</directory>\n      <directory>./src/Payum/Be2Bill/Resources</directory>\n      <directory>./src/Payum/Offline/Tests</directory>\n      <directory>./src/Payum/Offline/Resources</directory>\n      <directory>./src/Payum/Payex/Tests</directory>\n      <directory>./src/Payum/Payex/Resources</directory>\n      <directory>./src/Payum/Paypal/ExpressCheckout/Nvp/Tests</directory>\n      <directory>./src/Payum/Paypal/ExpressCheckout/Nvp/Resources</directory>\n      <directory>./src/Payum/Paypal/ProCheckout/Nvp/Tests</directory>\n      <directory>./src/Payum/Paypal/ProCheckout/Nvp/Resources</directory>\n      <directory>./src/Payum/Paypal/Rest/Tests</directory>\n      <directory>./src/Payum/Paypal/Rest/Resources</directory>\n      <directory>./src/Payum/Paypal/Ipn/Tests</directory>\n      <directory>./src/Payum/Paypal/Ipn/Resources</directory>\n      <directory>./src/Payum/Klarna/Checkout/Tests</directory>\n      <directory>./src/Payum/Klarna/Checkout/Resources</directory>\n      <directory>./src/Payum/Klarna/Invoice/Tests</directory>\n      <directory>./src/Payum/Klarna/Invoice/Resources</directory>\n      <directory>./src/Payum/Stripe/Tests</directory>\n      <directory>./src/Payum/Stripe/Resources</directory>\n    </exclude>\n  </coverage>\n  <php>\n    <var name=\"__PAYUM_AUTHORIZE_NET_AIM_API_LOGIN_ID\" value=\"54PB5egZ\"/>\n    <var name=\"__PAYUM_AUTHORIZE_NET_AIM_API_TRANSACTION_KEY\" value=\"48V258vr55AE8tcg\"/>\n    <var name=\"__PAYUM_PAYEX_ACCOUNT_NUMBER\" value=\"60006520\"/>\n    <var name=\"__PAYUM_PAYEX_ENCRYPTION_KEY\" value=\"R7TR47M545XSchyt75vZ\"/>\n    <var name=\"__PAYUM_PAYPAL_EXPRESS_CHECKOUT_NVP_API_ACCOUNT\" value=\"sellr1_1351171001_biz@gmail.com\"/>\n    <var name=\"__PAYUM_PAYPAL_EXPRESS_CHECKOUT_NVP_API_USERNAME\" value=\"sellr1_1351171001_biz_api1.gmail.com\"/>\n    <var name=\"__PAYUM_PAYPAL_EXPRESS_CHECKOUT_NVP_API_PASSWORD\" value=\"1351171022\"/>\n    <var name=\"__PAYUM_PAYPAL_EXPRESS_CHECKOUT_NVP_API_SIGNATURE\" value=\"Adt647eR0NhYG68dAfVYPGquxlvuAwSJBMEy12p4k4mO2p8oEz8t95gU\"/>\n    <var name=\"__PAYUM_PAYPAL_PRO_CHECKOUT_NVP_API_USERNAME\" value=\"palexanderpayflowtestapionly\"/>\n    <var name=\"__PAYUM_PAYPAL_PRO_CHECKOUT_NVP_API_PASSWORD\" value=\"demopass123\"/>\n    <var name=\"__PAYUM_PAYPAL_PRO_CHECKOUT_NVP_API_PARTNER\" value=\"PayPal\"/>\n    <var name=\"__PAYUM_PAYPAL_PRO_CHECKOUT_NVP_API_VENDOR\" value=\"palexanderpayflowtest\"/>\n    <ini name=\"soap.wsdl_cache_enabled\" value=\"0\"/>\n  </php>\n  <testsuites>\n    <testsuite name=\"Payum Core Component Test Suite\">\n      <directory>./src/Payum/Core/Tests</directory>\n    </testsuite>\n    <testsuite name=\"Payum AuthorizeNetAim Component Test Suite\">\n      <directory>./src/Payum/AuthorizeNet/Aim/Tests</directory>\n    </testsuite>\n    <testsuite name=\"Payum Be2Bill Component Test Suite\">\n      <directory>./src/Payum/Be2Bill/Tests</directory>\n    </testsuite>\n    <testsuite name=\"Payum Offline Component Test Suite\">\n      <directory>./src/Payum/Offline/Tests</directory>\n    </testsuite>\n    <testsuite name=\"Payum Payex Component Test Suite\">\n      <directory>./src/Payum/Payex/Tests</directory>\n    </testsuite>\n    <testsuite name=\"Payum PaypalExpressCheckoutNvp Component Test Suite\">\n      <directory>./src/Payum/Paypal/ExpressCheckout/Nvp/Tests</directory>\n    </testsuite>\n    <testsuite name=\"Payum PaypalProCheckoutNvp Component Test Suite\">\n      <directory>./src/Payum/Paypal/ProCheckout/Nvp/Tests</directory>\n    </testsuite>\n    <testsuite name=\"Payum PaypalProHostedNvp Component Test Suite\">\n      <directory>./src/Payum/Paypal/ProHosted/Nvp/Tests</directory>\n    </testsuite>\n    <testsuite name=\"Payum PaypalRest Component Test Suite\">\n      <directory>./src/Payum/Paypal/Rest/Tests</directory>\n    </testsuite>\n    <testsuite name=\"Payum PaypalIpn Component Test Suite\">\n      <directory>./src/Payum/Paypal/Ipn/Tests</directory>\n    </testsuite>\n    <testsuite name=\"Payum PaypalMasspayNvp Component Test Suite\">\n      <directory>./src/Payum/Paypal/Masspay/Nvp/Tests</directory>\n    </testsuite>\n    <testsuite name=\"Payum KlarnaCheckout Component Test Suite\">\n      <directory>./src/Payum/Klarna/Checkout/Tests</directory>\n    </testsuite>\n    <testsuite name=\"Payum KlarnaInvoice Component Test Suite\">\n      <directory>./src/Payum/Klarna/Invoice/Tests</directory>\n    </testsuite>\n    <testsuite name=\"Payum Stripe Component Test Suite\">\n      <directory>./src/Payum/Stripe/Tests</directory>\n    </testsuite>\n    <testsuite name=\"Payum Sofort Component Test Suite\">\n      <directory>./src/Payum/Sofort/Tests</directory>\n    </testsuite>\n  </testsuites>\n  <listeners>\n    <listener class=\"Symfony\\Bridge\\PhpUnit\\SymfonyTestsListener\"/>\n  </listeners>\n</phpunit>\n"
        },
        {
          "name": "rector.php",
          "type": "blob",
          "size": 2.984375,
          "content": "<?php\n\ndeclare(strict_types=1);\n\nuse Rector\\CodeQuality\\Rector\\Class_\\InlineConstructorDefaultToPropertyRector;\nuse Rector\\CodeQuality\\Rector\\Foreach_\\UnusedForeachValueToArrayKeysRector;\nuse Rector\\CodeQuality\\Rector\\FuncCall\\ChangeArrayPushToArrayAssignRector;\nuse Rector\\CodeQuality\\Rector\\FuncCall\\UnwrapSprintfOneArgumentRector;\nuse Rector\\CodeQuality\\Rector\\FunctionLike\\SimplifyUselessVariableRector;\nuse Rector\\CodeQuality\\Rector\\Identical\\FlipTypeControlToUseExclusiveTypeRector;\nuse Rector\\CodeQuality\\Rector\\If_\\ShortenElseIfRector;\nuse Rector\\CodeQuality\\Rector\\If_\\SimplifyIfReturnBoolRector;\nuse Rector\\Config\\RectorConfig;\nuse Rector\\ValueObject\\PhpVersion;\nuse Rector\\Php80\\Rector\\Class_\\ClassPropertyAssignToConstructorPromotionRector;\nuse Rector\\Php80\\Rector\\FunctionLike\\MixedTypeRector;\nuse Rector\\Php81\\Rector\\Array_\\FirstClassCallableRector;\nuse Rector\\Php81\\Rector\\ClassConst\\FinalizePublicClassConstantRector;\nuse Rector\\Php81\\Rector\\Property\\ReadOnlyPropertyRector;\nuse Rector\\Php82\\Rector\\FuncCall\\Utf8DecodeEncodeToMbConvertEncodingRector;\nuse Rector\\PHPUnit\\CodeQuality\\Rector\\Class_\\AddSeeTestAnnotationRector;\nuse Rector\\PHPUnit\\Set\\PHPUnitSetList;\nuse Rector\\Set\\ValueObject\\LevelSetList;\nuse Rector\\Set\\ValueObject\\SetList;\nuse Rector\\TypeDeclaration\\Rector\\ClassMethod\\AddVoidReturnTypeWhereNoReturnRector;\nuse Rector\\TypeDeclaration\\Rector\\ClassMethod\\ReturnNeverTypeRector;\n\nreturn RectorConfig::configure()\n    ->withPaths([\n        __DIR__ . '/src',\n    ])\n    ->withImportNames()\n    ->withPhpVersion(PhpVersion::PHP_82)\n    ->withSets([\n        LevelSetList::UP_TO_PHP_82,\n\n        // PHP\n        SetList::PHP_72,\n        SetList::PHP_73,\n        SetList::PHP_74,\n        SetList::PHP_80,\n\n        // Code Quality\n        SetList::INSTANCEOF,\n\n        // PHPUnit\n        PHPUnitSetList::PHPUNIT_40,\n        PHPUnitSetList::PHPUNIT_50,\n        PHPUnitSetList::PHPUNIT_60,\n        PHPUnitSetList::PHPUNIT_70,\n        PHPUnitSetList::PHPUNIT_80,\n        PHPUnitSetList::PHPUNIT_90,\n        PHPUnitSetList::PHPUNIT_CODE_QUALITY,\n    ])\n    ->withRules([\n        SimplifyUselessVariableRector::class,\n        ShortenElseIfRector::class,\n        SimplifyIfReturnBoolRector::class,\n        UnusedForeachValueToArrayKeysRector::class,\n        ChangeArrayPushToArrayAssignRector::class,\n        UnwrapSprintfOneArgumentRector::class,\n        FlipTypeControlToUseExclusiveTypeRector::class,\n        InlineConstructorDefaultToPropertyRector::class,\n        AddVoidReturnTypeWhereNoReturnRector::class,\n        Utf8DecodeEncodeToMbConvertEncodingRector::class,\n    ])\n    ->withSkip([\n        AddSeeTestAnnotationRector::class,\n        ClassPropertyAssignToConstructorPromotionRector::class,\n        MixedTypeRector::class,\n        FinalizePublicClassConstantRector::class,\n        ReadOnlyPropertyRector::class,\n        FirstClassCallableRector::class,\n        ReturnNeverTypeRector::class,\n\n        AddVoidReturnTypeWhereNoReturnRector::class => [\n            __DIR__ . '/src/Payum/Core/GatewayFactory.php',\n        ],\n    ]);\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}