{
  "metadata": {
    "timestamp": 1736712249523,
    "page": 989,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Wixel/GUMP",
      "stars": 1170,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1640625,
          "content": ".DS_Store\n.idea\n.ddev\nnbproject\nnb-configuration.xml\nSession.vim\n*.tmproj\n*.tmproject\ntmtags\nThumbs.db\nDesktop.ini\nvendor\ncoverage\nbuild\n.phpunit.result.cache\nuser.env\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.076171875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2013-2024 Filis Futsarov, Sean Nieuwoudt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 22.9384765625,
          "content": "# Getting started\n\nGUMP is a standalone PHP data validation and filtering class that makes validating any data easy and painless without the reliance on a framework. GUMP is open-source since 2013.\n\nSupports wide range of PHP versions (**php7.1** to **php8.3**) and **ZERO dependencies**!\n\n[![Total Downloads](https://poser.pugx.org/wixel/gump/downloads)](https://packagist.org/packages/wixel/gump)\n[![Latest Stable Version](https://poser.pugx.org/wixel/gump/v/stable)](https://packagist.org/packages/wixel/gump)\n![Build Status](https://github.com/wixel/gump/actions/workflows/ci.yml/badge.svg)\n[![Coverage Status](https://coveralls.io/repos/github/Wixel/GUMP/badge.svg?branch=master)](https://coveralls.io/github/Wixel/GUMP?branch=master)\n[![License](https://poser.pugx.org/wixel/gump/license)](https://packagist.org/packages/wixel/gump)\n\n\n#### Install with composer\n\n```\ncomposer require wixel/gump\n```\n\n### Short format example for validations\n\n```php\n$is_valid = GUMP::is_valid(array_merge($_POST, $_FILES), [\n    'username'       => 'required|alpha_numeric',\n    'password'       => 'required|between_len,4;100',\n    'avatar'         => 'required_file|extension,png;jpg',\n    'tags'           => 'required|alpha_numeric', // ['value1', 'value3']\n    'person.name'    => 'required',               // ['person' => ['name' => 'value']]\n    'persons.*.age'  => 'required'                // ['persons' => [\n                                                  //      ['name' => 'value1', 'age' => 20],\n                                                  //      ['name' => 'value2']\n                                                  // ]]\n]);\n\n// 1st array is rules definition, 2nd is field-rule specific error messages (optional)\n$is_valid = GUMP::is_valid(array_merge($_POST, $_FILES), [\n    'username' => ['required', 'alpha_numeric'],\n    'password' => ['required', 'between_len' => [6, 100]],\n    'avatar'   => ['required_file', 'extension' => ['png', 'jpg']]\n], [\n    'username' => ['required' => 'Fill the Username field please.'],\n    'password' => ['between_len' => '{field} must be between {param[0]} and {param[1]} characters.'],\n    'avatar'   => ['extension' => 'Valid extensions for avatar are: {param}'] // \"png, jpg\"\n]);\n\nif ($is_valid === true) {\n    // continue\n} else {\n    var_dump($is_valid); // array of error messages\n}\n```\n\n### Short format example for filtering\n\n```php\n$filtered = GUMP::filter_input([\n    'field'       => ' text ',\n    'other_field' => 'Cool Title'\n], [\n    'field'       => ['trim', 'upper_case'],\n    'other_field' => 'slug'\n]);\n\nvar_dump($filtered['field']); // result: \"TEXT\"\nvar_dump($filtered['other_field']); // result: \"cool-title\"\n```\n\n### Long format example\n\n```php\n$gump = new GUMP();\n\n// set validation rules\n$gump->validation_rules([\n    'username'    => 'required|alpha_numeric|max_len,100|min_len,6',\n    'password'    => 'required|max_len,100|min_len,6',\n    'email'       => 'required|valid_email',\n    'gender'      => 'required|exact_len,1|contains,m;f',\n    'credit_card' => 'required|valid_cc'\n]);\n\n// set field-rule specific error messages\n$gump->set_fields_error_messages([\n    'username'      => ['required' => 'Fill the Username field please, its required.'],\n    'credit_card'   => ['extension' => 'Please enter a valid credit card.']\n]);\n\n// set filter rules\n$gump->filter_rules([\n    'username' => 'trim|sanitize_string',\n    'password' => 'trim',\n    'email'    => 'trim|sanitize_email',\n    'gender'   => 'trim',\n    'bio'      => 'noise_words'\n]);\n\n// on success: returns array with same input structure, but after filters have run\n// on error: returns false\n$valid_data = $gump->run($_POST);\n\nif ($gump->errors()) {\n    var_dump($gump->get_readable_errors()); // ['Field <span class=\"gump-field\">Somefield</span> is required.'] \n    // or\n    var_dump($gump->get_errors_array()); // ['field' => 'Field Somefield is required']\n} else {\n    var_dump($valid_data);\n}\n```\n\n:star: Available Validators\n---------------------------\n**Important:** If you use Pipe or Semicolon as parameter value, you **must** use array format.\n```php\n$is_valid = GUMP::is_valid(array_merge($_POST, $_FILES), [\n    'field' => 'regex,/partOf;my|Regex/', // NO\n    'field' => ['regex' => '/partOf;my|Regex/'] // YES\n]);\n```\n\n<div id=\"available_validators\">\n\n| Rule                                                                           | Description                                                                                                                                                                                               |\n|--------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **required**                                                                   | Ensures the specified key value exists and is not empty (not null, not empty string, not empty array).                                                                                                    |\n| **contains**,one;two;use array format if one of the values contains semicolons | Verify that a value is contained within the pre-defined value set.                                                                                                                                        |\n| **contains_list**,value1;value2                                                | Verify that a value is contained within the pre-defined value set. Error message will NOT show the list of possible values.                                                                               |\n| **doesnt_contain_list**,value1;value2                                          | Verify that a value is contained within the pre-defined value set. Error message will NOT show the list of possible values.                                                                               |\n| **boolean**,strict                                                             | Determine if the provided value is a valid boolean. Returns true for: yes/no, on/off, 1/0, true/false. In strict mode (optional) only true/false will be valid which you can combine with boolean filter. |\n| **valid_email**                                                                | Determine if the provided email has valid format.                                                                                                                                                         |\n| **max_len**,240                                                                | Determine if the provided value length is less or equal to a specific value.                                                                                                                              |\n| **min_len**,4                                                                  | Determine if the provided value length is more or equal to a specific value.                                                                                                                              |\n| **exact_len**,5                                                                | Determine if the provided value length matches a specific value.                                                                                                                                          |\n| **between_len**,3;11                                                           | Determine if the provided value length is between min and max values.                                                                                                                                     |\n| **alpha**                                                                      | Determine if the provided value contains only alpha characters.                                                                                                                                           |\n| **alpha_numeric**                                                              | Determine if the provided value contains only alpha-numeric characters.                                                                                                                                   |\n| **alpha_dash**                                                                 | Determine if the provided value contains only alpha characters with dashed and underscores.                                                                                                               |\n| **alpha_numeric_dash**                                                         | Determine if the provided value contains only alpha numeric characters with dashed and underscores.                                                                                                       |\n| **alpha_numeric_space**                                                        | Determine if the provided value contains only alpha numeric characters with spaces.                                                                                                                       |\n| **alpha_space**                                                                | Determine if the provided value contains only alpha characters with spaces.                                                                                                                               |\n| **numeric**                                                                    | Determine if the provided value is a valid number or numeric string.                                                                                                                                      |\n| **integer**                                                                    | Determine if the provided value is a valid integer.                                                                                                                                                       |\n| **float**                                                                      | Determine if the provided value is a valid float.                                                                                                                                                         |\n| **valid_url**                                                                  | Determine if the provided value is a valid URL.                                                                                                                                                           |\n| **url_exists**                                                                 | Determine if a URL exists & is accessible.                                                                                                                                                                |\n| **valid_ip**                                                                   | Determine if the provided value is a valid IP address.                                                                                                                                                    |\n| **valid_ipv4**                                                                 | Determine if the provided value is a valid IPv4 address.                                                                                                                                                  |\n| **valid_ipv6**                                                                 | Determine if the provided value is a valid IPv6 address.                                                                                                                                                  |\n| **valid_cc**                                                                   | Determine if the input is a valid credit card number.                                                                                                                                                     |\n| **valid_name**                                                                 | Determine if the input is a valid human name.                                                                                                                                                             |\n| **street_address**                                                             | Determine if the provided input is likely to be a street address using weak detection.                                                                                                                    |\n| **iban**                                                                       | Determine if the provided value is a valid IBAN.                                                                                                                                                          |\n| **date**,d/m/Y                                                                 | Determine if the provided input is a valid date (ISO 8601) or specify a custom format (optional).                                                                                                         |\n| **min_age**,18                                                                 | Determine if the provided input meets age requirement (ISO 8601). Input should be a date (Y-m-d).                                                                                                         |\n| **max_numeric**,50                                                             | Determine if the provided numeric value is lower or equal to a specific value.                                                                                                                            |\n| **min_numeric**,1                                                              | Determine if the provided numeric value is higher or equal to a specific value.                                                                                                                           |\n| **starts**,Z                                                                   | Determine if the provided value starts with param.                                                                                                                                                        |\n| **required_file**                                                              | Determine if the file was successfully uploaded.                                                                                                                                                          |\n| **extension**,png;jpg;gif                                                      | Check the uploaded file for extension. Doesn't check mime-type yet.                                                                                                                                       |\n| **equalsfield**,other_field_name                                               | Determine if the provided field value equals current field value.                                                                                                                                         |\n| **guidv4**                                                                     | Determine if the provided field value is a valid GUID (v4)                                                                                                                                                |\n| **phone_number**                                                               | Determine if the provided value is a valid phone number.                                                                                                                                                  |\n| **regex**,/test-[0-9]{3}/                                                      | Custom regex validator.                                                                                                                                                                                   |\n| **valid_json_string**                                                          | Determine if the provided value is a valid JSON string.                                                                                                                                                   |\n| **valid_array_size_greater**,1                                                 | Check if an input is an array and if the size is more or equal to a specific value.                                                                                                                       |\n| **valid_array_size_lesser**,1                                                  | Check if an input is an array and if the size is less or equal to a specific value.                                                                                                                       |\n| **valid_array_size_equal**,1                                                   | Check if an input is an array and if the size is equal to a specific value.                                                                                                                               |\n</div>\n\n:star: Available Filters\n------------------------\nFilter rules can also be any PHP native function (e.g.: trim).\n\n<div id=\"available_filters\">\n\n| Filter                 | Description                                                                                                           |\n|------------------------|-----------------------------------------------------------------------------------------------------------------------|\n| **noise_words**        | Replace noise words in a string (http://tax.cchgroup.com/help/Avoiding_noise_words_in_your_search.htm).               |\n| **rmpunctuation**      | Remove all known punctuation from a string.                                                                           |\n| **urlencode**          | Sanitize the string by urlencoding characters.                                                                        |\n| **htmlencode**         | Sanitize the string by converting HTML characters to their HTML entities.                                             |\n| **sanitize_email**     | Sanitize the string by removing illegal characters from emails.                                                       |\n| **sanitize_numbers**   | Sanitize the string by removing illegal characters from numbers.                                                      |\n| **sanitize_floats**    | Sanitize the string by removing illegal characters from float numbers.                                                |\n| **sanitize_string**    | Sanitize the string by removing any script tags.                                                                      |\n| **boolean**            | Converts ['1', 1, 'true', true, 'yes', 'on'] to true, anything else is false ('on' is useful for form checkboxes).    |\n| **basic_tags**         | Filter out all HTML tags except the defined basic tags.                                                               |\n| **whole_number**       | Convert the provided numeric value to a whole number.                                                                 |\n| **ms_word_characters** | Convert MS Word special characters to web safe characters. ([“ ”] => \", [‘ ’] => ', [–] => -, […] => ...) |\n| **lower_case**         | Converts to lowercase.                                                                                                |\n| **upper_case**         | Converts to uppercase.                                                                                                |\n| **slug**               | Converts value to url-web-slugs.                                                                                      |\n| **trim**               | Remove spaces from the beginning and end of strings (PHP).                                                            |\n</div>\n\n#### Other Available Methods\n\n```php\n/**\n * Setting up the language, see available languages in \"lang\" directory\n */\n$gump = new GUMP('en');\n\n/**\n * This is the most flexible validation \"executer\" because of it's return errors format.\n *\n * Returns bool true when no errors.\n * Returns array of errors with detailed info. which you can then use with your own helpers.\n * (field name, input value, rule that failed and it's parameters).\n */\n$gump->validate(array $input, array $ruleset);\n\n/**\n * Filters input data according to the provided filterset\n *\n * Returns array with same input structure but after filters have been applied.\n */\n$gump->filter(array $input, array $filterset);\n\n// Sanitizes data and converts strings to UTF-8 (if available), optionally according to the provided field whitelist\n$gump->sanitize(array $input, $whitelist = null);\n\n// Override field names in error messages\nGUMP::set_field_name('str', 'Street');\nGUMP::set_field_names([\n    'str' => 'Street',\n    'zip' => 'ZIP Code'\n]);\n\n// Set custom error messages for rules.\nGUMP::set_error_message('required', '{field} is required.');\nGUMP::set_error_messages([\n    'required'    => '{field} is required.',\n    'valid_email' => '{field} must be a valid email.'\n]);\n```\n\n###  Creating your own validators and filters\n\nAdding custom validators and filters is made easy by using callback functions.\n\n```php\n/**\n * You would call it like 'equals_string,someString'\n *\n * @param string $field  Field name\n * @param array  $input  Whole input data\n * @param array  $params Rule parameters. This is usually empty array by default if rule does not have parameters.\n * @param mixed  $value  Value.\n *                       In case of an array ['value1', 'value2'] would return one single value.\n *                       If you want to get the array itself use $input[$field].\n *\n * @return bool   true or false whether the validation was successful or not\n */\nGUMP::add_validator(\"equals_string\", function($field, array $input, array $params, $value) {\n    return $value === $params;\n}, 'Field {field} does not equal to {param}.');\n\n// You might want to check whether a validator exists first\nGUMP::has_validator($rule);\n\n/**\n * @param string $value Value\n * @param array  $param Filter parameters (optional)\n *\n * @return mixed  result of filtered value\n */\nGUMP::add_filter(\"upper\", function($value, array $params = []) {\n    return strtoupper($value);\n});\n\n// You might want to check whether a filter exists first\nGUMP::has_filter($rule);\n```\n\nAlternately, you can simply create your own class that extends GUMP. You only have to have in mind:\n\n* For filter methods, prepend the method name with \"filter_\".\n* For validator methods, prepend the method name with \"validate_\".\n\n```php\nclass MyClass extends GUMP\n{\n    protected function filter_myfilter($value, array $params = [])\n    {\n        return strtoupper($value);\n    }\n\n    protected function validate_myvalidator($field, array $input, array $params = [], $value)\n    {\n        return $input[$field] === 'good_value';\n    }\n}\n\n$validator = new MyClass();\n$validated = $validator->validate($_POST, $rules);\n```\n\nGlobal configuration\n--------------------\nThis configuration values allows you to change default rules delimiters (e.g.: `required|contains,value1;value2` to `required|contains:value1,value2`).\n\n```php\nGUMP::$rules_delimiter = '|';\n\nGUMP::$rules_parameters_delimiter = ',';\n\nGUMP::$rules_parameters_arrays_delimiter = ';';\n```\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.3876953125,
          "content": "{\n    \"name\": \"wixel/gump\",\n    \"description\": \"A fast, extensible & stand-alone PHP input validation class that allows you to validate any data.\",\n    \"keywords\": [\"validation\", \"validator\", \"validate\"],\n    \"authors\": [\n        {\n            \"name\": \"Sean Nieuwoudt\",\n            \"homepage\": \"https://wixelhq.com\"\n        },\n        {\n            \"name\": \"Filis Futsarov\",\n            \"homepage\": \"https://filis.me\"\n        }\n    ],\n    \"autoload\": {\n        \"files\": [\"gump.class.php\"],\n        \"psr-4\": { \"GUMP\\\\\": \"src/\" }\n    },\n    \"license\": \"MIT\",\n    \"homepage\": \"https://wixelhq.com/\",\n    \"require-dev\": {\n        \"mockery/mockery\": \"^1.3\",\n        \"maddhatter/markdown-table\": \"^1.0\",\n        \"phpunit/phpunit\": \"^6|^9\",\n        \"phpspec/prophecy\": \"^v1.10|^v1.17\",\n        \"kamermans/docblock-reflection\": \"^1.0\",\n        \"php-coveralls/php-coveralls\": \"^2.5\"\n    },\n    \"require\": {\n        \"php\": \">=7.1\",\n        \"ext-mbstring\": \"*\",\n        \"ext-json\": \"*\",\n        \"ext-intl\": \"*\",\n        \"ext-bcmath\": \"*\",\n        \"ext-iconv\": \"*\"\n    },\n    \"autoload-dev\": {\n        \"psr-4\": { \"Tests\\\\\": \"tests/\" }\n    },\n    \"scripts\": {\n        \"test\": \"php ./vendor/bin/phpunit\",\n        \"dump\": \"php ./ci/dump_filters_docs.php && php ./ci/dump_validators_docs.php\",\n        \"check\": \"php ./ci/check_filters_docs.php && php ./ci/check_validators_docs.php && php ./ci/check_validators_translations.php\"\n    }\n}\n"
        },
        {
          "name": "composer.lock",
          "type": "blob",
          "size": 147.314453125,
          "content": "{\n    \"_readme\": [\n        \"This file locks the dependencies of your project to a known state\",\n        \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies\",\n        \"This file is @generated automatically\"\n    ],\n    \"content-hash\": \"34e128158dba1fcc425b60bce5afa2c9\",\n    \"packages\": [],\n    \"packages-dev\": [\n        {\n            \"name\": \"doctrine/deprecations\",\n            \"version\": \"1.1.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/deprecations.git\",\n                \"reference\": \"dfbaa3c2d2e9a9df1118213f3b8b0c597bb99fab\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/deprecations/zipball/dfbaa3c2d2e9a9df1118213f3b8b0c597bb99fab\",\n                \"reference\": \"dfbaa3c2d2e9a9df1118213f3b8b0c597bb99fab\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^9\",\n                \"phpstan/phpstan\": \"1.4.10 || 1.10.15\",\n                \"phpstan/phpstan-phpunit\": \"^1.0\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.5\",\n                \"psalm/plugin-phpunit\": \"0.18.4\",\n                \"psr/log\": \"^1 || ^2 || ^3\",\n                \"vimeo/psalm\": \"4.30.0 || 5.12.0\"\n            },\n            \"suggest\": {\n                \"psr/log\": \"Allows logging deprecations via PSR-3 logger implementation\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Deprecations\\\\\": \"lib/Doctrine/Deprecations\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"A small layer on top of trigger_error(E_USER_DEPRECATED) or PSR-3 logging with options to disable all deprecations or selectively for packages.\",\n            \"homepage\": \"https://www.doctrine-project.org/\",\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/deprecations/issues\",\n                \"source\": \"https://github.com/doctrine/deprecations/tree/1.1.3\"\n            },\n            \"time\": \"2024-01-30T19:34:25+00:00\"\n        },\n        {\n            \"name\": \"doctrine/instantiator\",\n            \"version\": \"2.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/instantiator.git\",\n                \"reference\": \"c6222283fa3f4ac679f8b9ced9a4e23f163e80d0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/instantiator/zipball/c6222283fa3f4ac679f8b9ced9a4e23f163e80d0\",\n                \"reference\": \"c6222283fa3f4ac679f8b9ced9a4e23f163e80d0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^8.1\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^11\",\n                \"ext-pdo\": \"*\",\n                \"ext-phar\": \"*\",\n                \"phpbench/phpbench\": \"^1.2\",\n                \"phpstan/phpstan\": \"^1.9.4\",\n                \"phpstan/phpstan-phpunit\": \"^1.3\",\n                \"phpunit/phpunit\": \"^9.5.27\",\n                \"vimeo/psalm\": \"^5.4\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Instantiator\\\\\": \"src/Doctrine/Instantiator/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marco Pivetta\",\n                    \"email\": \"ocramius@gmail.com\",\n                    \"homepage\": \"https://ocramius.github.io/\"\n                }\n            ],\n            \"description\": \"A small, lightweight utility to instantiate objects in PHP without invoking their constructors\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/instantiator.html\",\n            \"keywords\": [\n                \"constructor\",\n                \"instantiate\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/instantiator/issues\",\n                \"source\": \"https://github.com/doctrine/instantiator/tree/2.0.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Finstantiator\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-12-30T00:23:10+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/guzzle\",\n            \"version\": \"7.8.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/guzzle.git\",\n                \"reference\": \"41042bc7ab002487b876a0683fc8dce04ddce104\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/guzzle/zipball/41042bc7ab002487b876a0683fc8dce04ddce104\",\n                \"reference\": \"41042bc7ab002487b876a0683fc8dce04ddce104\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"guzzlehttp/promises\": \"^1.5.3 || ^2.0.1\",\n                \"guzzlehttp/psr7\": \"^1.9.1 || ^2.5.1\",\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"psr/http-client\": \"^1.0\",\n                \"symfony/deprecation-contracts\": \"^2.2 || ^3.0\"\n            },\n            \"provide\": {\n                \"psr/http-client-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"ext-curl\": \"*\",\n                \"php-http/client-integration-tests\": \"dev-master#2c025848417c1135031fdf9c728ee53d0a7ceaee as 3.0.999\",\n                \"php-http/message-factory\": \"^1.1\",\n                \"phpunit/phpunit\": \"^8.5.36 || ^9.6.15\",\n                \"psr/log\": \"^1.1 || ^2.0 || ^3.0\"\n            },\n            \"suggest\": {\n                \"ext-curl\": \"Required for CURL handler support\",\n                \"ext-intl\": \"Required for Internationalized Domain Name (IDN) support\",\n                \"psr/log\": \"Required for using the Log middleware\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/functions_include.php\"\n                ],\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"Jeremy Lindblom\",\n                    \"email\": \"jeremeamia@gmail.com\",\n                    \"homepage\": \"https://github.com/jeremeamia\"\n                },\n                {\n                    \"name\": \"George Mponos\",\n                    \"email\": \"gmponos@gmail.com\",\n                    \"homepage\": \"https://github.com/gmponos\"\n                },\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\",\n                    \"homepage\": \"https://github.com/Nyholm\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://github.com/sagikazarmark\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"email\": \"webmaster@tubo-world.de\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                }\n            ],\n            \"description\": \"Guzzle is a PHP HTTP client library\",\n            \"keywords\": [\n                \"client\",\n                \"curl\",\n                \"framework\",\n                \"http\",\n                \"http client\",\n                \"psr-18\",\n                \"psr-7\",\n                \"rest\",\n                \"web service\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guzzle/guzzle/issues\",\n                \"source\": \"https://github.com/guzzle/guzzle/tree/7.8.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/guzzlehttp/guzzle\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-12-03T20:35:24+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/promises\",\n            \"version\": \"2.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/promises.git\",\n                \"reference\": \"bbff78d96034045e58e13dedd6ad91b5d1253223\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/promises/zipball/bbff78d96034045e58e13dedd6ad91b5d1253223\",\n                \"reference\": \"bbff78d96034045e58e13dedd6ad91b5d1253223\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2.5 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"phpunit/phpunit\": \"^8.5.36 || ^9.6.15\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\Promise\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\",\n                    \"homepage\": \"https://github.com/Nyholm\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"email\": \"webmaster@tubo-world.de\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                }\n            ],\n            \"description\": \"Guzzle promises library\",\n            \"keywords\": [\n                \"promise\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guzzle/promises/issues\",\n                \"source\": \"https://github.com/guzzle/promises/tree/2.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/guzzlehttp/promises\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-12-03T20:19:20+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/psr7\",\n            \"version\": \"2.6.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/psr7.git\",\n                \"reference\": \"45b30f99ac27b5ca93cb4831afe16285f57b8221\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/psr7/zipball/45b30f99ac27b5ca93cb4831afe16285f57b8221\",\n                \"reference\": \"45b30f99ac27b5ca93cb4831afe16285f57b8221\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"psr/http-factory\": \"^1.0\",\n                \"psr/http-message\": \"^1.1 || ^2.0\",\n                \"ralouphie/getallheaders\": \"^3.0\"\n            },\n            \"provide\": {\n                \"psr/http-factory-implementation\": \"1.0\",\n                \"psr/http-message-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"http-interop/http-factory-tests\": \"^0.9\",\n                \"phpunit/phpunit\": \"^8.5.36 || ^9.6.15\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-httphandlerrunner\": \"Emit PSR-7 responses\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\Psr7\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"George Mponos\",\n                    \"email\": \"gmponos@gmail.com\",\n                    \"homepage\": \"https://github.com/gmponos\"\n                },\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\",\n                    \"homepage\": \"https://github.com/Nyholm\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://github.com/sagikazarmark\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"email\": \"webmaster@tubo-world.de\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://sagikazarmark.hu\"\n                }\n            ],\n            \"description\": \"PSR-7 message implementation that also provides common utility methods\",\n            \"keywords\": [\n                \"http\",\n                \"message\",\n                \"psr-7\",\n                \"request\",\n                \"response\",\n                \"stream\",\n                \"uri\",\n                \"url\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guzzle/psr7/issues\",\n                \"source\": \"https://github.com/guzzle/psr7/tree/2.6.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/guzzlehttp/psr7\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-12-03T20:05:35+00:00\"\n        },\n        {\n            \"name\": \"hamcrest/hamcrest-php\",\n            \"version\": \"v2.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/hamcrest/hamcrest-php.git\",\n                \"reference\": \"8c3d0a3f6af734494ad8f6fbbee0ba92422859f3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/hamcrest/hamcrest-php/zipball/8c3d0a3f6af734494ad8f6fbbee0ba92422859f3\",\n                \"reference\": \"8c3d0a3f6af734494ad8f6fbbee0ba92422859f3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.3|^7.0|^8.0\"\n            },\n            \"replace\": {\n                \"cordoval/hamcrest-php\": \"*\",\n                \"davedevelopment/hamcrest-php\": \"*\",\n                \"kodova/hamcrest-php\": \"*\"\n            },\n            \"require-dev\": {\n                \"phpunit/php-file-iterator\": \"^1.4 || ^2.0\",\n                \"phpunit/phpunit\": \"^4.8.36 || ^5.7 || ^6.5 || ^7.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"hamcrest\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"This is the PHP port of Hamcrest Matchers\",\n            \"keywords\": [\n                \"test\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/hamcrest/hamcrest-php/issues\",\n                \"source\": \"https://github.com/hamcrest/hamcrest-php/tree/v2.0.1\"\n            },\n            \"time\": \"2020-07-09T08:09:16+00:00\"\n        },\n        {\n            \"name\": \"illuminate/contracts\",\n            \"version\": \"v10.48.9\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/illuminate/contracts.git\",\n                \"reference\": \"8d7152c4a1f5d9cf7da3e8b71f23e4556f6138ac\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/illuminate/contracts/zipball/8d7152c4a1f5d9cf7da3e8b71f23e4556f6138ac\",\n                \"reference\": \"8d7152c4a1f5d9cf7da3e8b71f23e4556f6138ac\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^8.1\",\n                \"psr/container\": \"^1.1.1|^2.0.1\",\n                \"psr/simple-cache\": \"^1.0|^2.0|^3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"10.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Illuminate\\\\Contracts\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Taylor Otwell\",\n                    \"email\": \"taylor@laravel.com\"\n                }\n            ],\n            \"description\": \"The Illuminate Contracts package.\",\n            \"homepage\": \"https://laravel.com\",\n            \"support\": {\n                \"issues\": \"https://github.com/laravel/framework/issues\",\n                \"source\": \"https://github.com/laravel/framework\"\n            },\n            \"time\": \"2024-01-15T18:52:32+00:00\"\n        },\n        {\n            \"name\": \"kamermans/docblock-reflection\",\n            \"version\": \"v1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/kamermans/docblock-reflection.git\",\n                \"reference\": \"fde5e73a8bdddf491edd82e60f4b629d6cd4453d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/kamermans/docblock-reflection/zipball/fde5e73a8bdddf491edd82e60f4b629d6cd4453d\",\n                \"reference\": \"fde5e73a8bdddf491edd82e60f4b629d6cd4453d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3\"\n            },\n            \"require-dev\": {\n                \"fabpot/php-cs-fixer\": \"^1.11\",\n                \"php\": \">=5.4\",\n                \"phpunit/phpunit\": \"~4.3\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"kamermans\\\\Reflection\\\\\": \"src/\",\n                    \"kamermans\\\\Reflection\\\\Test\\\\\": \"test/src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MPL\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Steve Kamerman\",\n                    \"email\": \"stevekamerman@gmail.com\"\n                },\n                {\n                    \"name\": \"Christan Sciberras\",\n                    \"email\": \"christian@sciberras.me\"\n                }\n            ],\n            \"description\": \"Simple, Fast PHP DocBlock Parser / Reflector\",\n            \"support\": {\n                \"issues\": \"https://github.com/kamermans/docblock-reflection/issues\",\n                \"source\": \"https://github.com/kamermans/docblock-reflection/tree/master\"\n            },\n            \"time\": \"2016-03-22T01:34:01+00:00\"\n        },\n        {\n            \"name\": \"maddhatter/markdown-table\",\n            \"version\": \"1.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/maddhatter/markdown-table.git\",\n                \"reference\": \"c99ae74d9baa15770fe2f5a4cfd03a1db930094d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/maddhatter/markdown-table/zipball/c99ae74d9baa15770fe2f5a4cfd03a1db930094d\",\n                \"reference\": \"c99ae74d9baa15770fe2f5a4cfd03a1db930094d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"illuminate/contracts\": \"^5.0|^6.0|^7.0|^8.0|^9.0|^10.0\",\n                \"php\": \">=5.6.0\"\n            },\n            \"require-dev\": {\n                \"phpspec/phpspec\": \"^3.4\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"MaddHatter\\\\MarkdownTable\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Shawn Tunney\",\n                    \"email\": \"shawn.tunney@gmail.com\"\n                }\n            ],\n            \"description\": \"Dynamically generate markdown tables\",\n            \"support\": {\n                \"issues\": \"https://github.com/maddhatter/markdown-table/issues\",\n                \"source\": \"https://github.com/maddhatter/markdown-table/tree/1.2.0\"\n            },\n            \"time\": \"2023-05-11T13:28:04+00:00\"\n        },\n        {\n            \"name\": \"mockery/mockery\",\n            \"version\": \"1.6.11\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/mockery/mockery.git\",\n                \"reference\": \"81a161d0b135df89951abd52296adf97deb0723d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/mockery/mockery/zipball/81a161d0b135df89951abd52296adf97deb0723d\",\n                \"reference\": \"81a161d0b135df89951abd52296adf97deb0723d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"hamcrest/hamcrest-php\": \"^2.0.1\",\n                \"lib-pcre\": \">=7.0\",\n                \"php\": \">=7.3\"\n            },\n            \"conflict\": {\n                \"phpunit/phpunit\": \"<8.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5 || ^9.6.17\",\n                \"symplify/easy-coding-standard\": \"^12.1.14\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"library/helpers.php\",\n                    \"library/Mockery.php\"\n                ],\n                \"psr-4\": {\n                    \"Mockery\\\\\": \"library/Mockery\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Pádraic Brady\",\n                    \"email\": \"padraic.brady@gmail.com\",\n                    \"homepage\": \"https://github.com/padraic\",\n                    \"role\": \"Author\"\n                },\n                {\n                    \"name\": \"Dave Marshall\",\n                    \"email\": \"dave.marshall@atstsolutions.co.uk\",\n                    \"homepage\": \"https://davedevelopment.co.uk\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Nathanael Esayeas\",\n                    \"email\": \"nathanael.esayeas@protonmail.com\",\n                    \"homepage\": \"https://github.com/ghostwriter\",\n                    \"role\": \"Lead Developer\"\n                }\n            ],\n            \"description\": \"Mockery is a simple yet flexible PHP mock object framework\",\n            \"homepage\": \"https://github.com/mockery/mockery\",\n            \"keywords\": [\n                \"BDD\",\n                \"TDD\",\n                \"library\",\n                \"mock\",\n                \"mock objects\",\n                \"mockery\",\n                \"stub\",\n                \"test\",\n                \"test double\",\n                \"testing\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.mockery.io/\",\n                \"issues\": \"https://github.com/mockery/mockery/issues\",\n                \"rss\": \"https://github.com/mockery/mockery/releases.atom\",\n                \"security\": \"https://github.com/mockery/mockery/security/advisories\",\n                \"source\": \"https://github.com/mockery/mockery\"\n            },\n            \"time\": \"2024-03-21T18:34:15+00:00\"\n        },\n        {\n            \"name\": \"myclabs/deep-copy\",\n            \"version\": \"1.11.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/myclabs/DeepCopy.git\",\n                \"reference\": \"7284c22080590fb39f2ffa3e9057f10a4ddd0e0c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/myclabs/DeepCopy/zipball/7284c22080590fb39f2ffa3e9057f10a4ddd0e0c\",\n                \"reference\": \"7284c22080590fb39f2ffa3e9057f10a4ddd0e0c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.1 || ^8.0\"\n            },\n            \"conflict\": {\n                \"doctrine/collections\": \"<1.6.8\",\n                \"doctrine/common\": \"<2.13.3 || >=3,<3.2.2\"\n            },\n            \"require-dev\": {\n                \"doctrine/collections\": \"^1.6.8\",\n                \"doctrine/common\": \"^2.13.3 || ^3.2.2\",\n                \"phpunit/phpunit\": \"^7.5.20 || ^8.5.23 || ^9.5.13\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/DeepCopy/deep_copy.php\"\n                ],\n                \"psr-4\": {\n                    \"DeepCopy\\\\\": \"src/DeepCopy/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"Create deep copies (clones) of your objects\",\n            \"keywords\": [\n                \"clone\",\n                \"copy\",\n                \"duplicate\",\n                \"object\",\n                \"object graph\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/myclabs/DeepCopy/issues\",\n                \"source\": \"https://github.com/myclabs/DeepCopy/tree/1.11.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/myclabs/deep-copy\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-03-08T13:26:56+00:00\"\n        },\n        {\n            \"name\": \"nikic/php-parser\",\n            \"version\": \"v5.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/nikic/PHP-Parser.git\",\n                \"reference\": \"139676794dc1e9231bf7bcd123cfc0c99182cb13\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/nikic/PHP-Parser/zipball/139676794dc1e9231bf7bcd123cfc0c99182cb13\",\n                \"reference\": \"139676794dc1e9231bf7bcd123cfc0c99182cb13\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-tokenizer\": \"*\",\n                \"php\": \">=7.4\"\n            },\n            \"require-dev\": {\n                \"ircmaxell/php-yacc\": \"^0.0.7\",\n                \"phpunit/phpunit\": \"^7.0 || ^8.0 || ^9.0\"\n            },\n            \"bin\": [\n                \"bin/php-parse\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PhpParser\\\\\": \"lib/PhpParser\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nikita Popov\"\n                }\n            ],\n            \"description\": \"A PHP parser written in PHP\",\n            \"keywords\": [\n                \"parser\",\n                \"php\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/nikic/PHP-Parser/issues\",\n                \"source\": \"https://github.com/nikic/PHP-Parser/tree/v5.0.2\"\n            },\n            \"time\": \"2024-03-05T20:51:40+00:00\"\n        },\n        {\n            \"name\": \"phar-io/manifest\",\n            \"version\": \"2.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phar-io/manifest.git\",\n                \"reference\": \"54750ef60c58e43759730615a392c31c80e23176\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phar-io/manifest/zipball/54750ef60c58e43759730615a392c31c80e23176\",\n                \"reference\": \"54750ef60c58e43759730615a392c31c80e23176\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-phar\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"phar-io/version\": \"^3.0.1\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Heuer\",\n                    \"email\": \"sebastian@phpeople.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Component for reading phar.io manifest information from a PHP Archive (PHAR)\",\n            \"support\": {\n                \"issues\": \"https://github.com/phar-io/manifest/issues\",\n                \"source\": \"https://github.com/phar-io/manifest/tree/2.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/theseer\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-03T12:33:53+00:00\"\n        },\n        {\n            \"name\": \"phar-io/version\",\n            \"version\": \"3.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phar-io/version.git\",\n                \"reference\": \"4f7fd7836c6f332bb2933569e566a0d6c4cbed74\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phar-io/version/zipball/4f7fd7836c6f332bb2933569e566a0d6c4cbed74\",\n                \"reference\": \"4f7fd7836c6f332bb2933569e566a0d6c4cbed74\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Heuer\",\n                    \"email\": \"sebastian@phpeople.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Library for handling version information and constraints\",\n            \"support\": {\n                \"issues\": \"https://github.com/phar-io/version/issues\",\n                \"source\": \"https://github.com/phar-io/version/tree/3.2.1\"\n            },\n            \"time\": \"2022-02-21T01:04:05+00:00\"\n        },\n        {\n            \"name\": \"php-coveralls/php-coveralls\",\n            \"version\": \"v2.7.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-coveralls/php-coveralls.git\",\n                \"reference\": \"b36fa4394e519dafaddc04ae03976bc65a25ba15\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-coveralls/php-coveralls/zipball/b36fa4394e519dafaddc04ae03976bc65a25ba15\",\n                \"reference\": \"b36fa4394e519dafaddc04ae03976bc65a25ba15\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"ext-simplexml\": \"*\",\n                \"guzzlehttp/guzzle\": \"^6.0 || ^7.0\",\n                \"php\": \"^7.0 || ^8.0\",\n                \"psr/log\": \"^1.0 || ^2.0\",\n                \"symfony/config\": \"^2.1 || ^3.0 || ^4.0 || ^5.0 || ^6.0 || ^7.0\",\n                \"symfony/console\": \"^2.1 || ^3.0 || ^4.0 || ^5.0 || ^6.0 || ^7.0\",\n                \"symfony/stopwatch\": \"^2.0 || ^3.0 || ^4.0 || ^5.0 || ^6.0 || ^7.0\",\n                \"symfony/yaml\": \"^2.0.5 || ^3.0 || ^4.0 || ^5.0 || ^6.0 || ^7.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.8.35 || ^5.4.3 || ^6.0 || ^7.0 || >=8.0 <8.5.29 || >=9.0 <9.5.23\",\n                \"sanmai/phpunit-legacy-adapter\": \"^6.1 || ^8.0\"\n            },\n            \"suggest\": {\n                \"symfony/http-kernel\": \"Allows Symfony integration\"\n            },\n            \"bin\": [\n                \"bin/php-coveralls\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PhpCoveralls\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Kitamura Satoshi\",\n                    \"email\": \"with.no.parachute@gmail.com\",\n                    \"homepage\": \"https://www.facebook.com/satooshi.jp\",\n                    \"role\": \"Original creator\"\n                },\n                {\n                    \"name\": \"Takashi Matsuo\",\n                    \"email\": \"tmatsuo@google.com\"\n                },\n                {\n                    \"name\": \"Google Inc\"\n                },\n                {\n                    \"name\": \"Dariusz Ruminski\",\n                    \"email\": \"dariusz.ruminski@gmail.com\",\n                    \"homepage\": \"https://github.com/keradus\"\n                },\n                {\n                    \"name\": \"Contributors\",\n                    \"homepage\": \"https://github.com/php-coveralls/php-coveralls/graphs/contributors\"\n                }\n            ],\n            \"description\": \"PHP client library for Coveralls API\",\n            \"homepage\": \"https://github.com/php-coveralls/php-coveralls\",\n            \"keywords\": [\n                \"ci\",\n                \"coverage\",\n                \"github\",\n                \"test\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-coveralls/php-coveralls/issues\",\n                \"source\": \"https://github.com/php-coveralls/php-coveralls/tree/v2.7.0\"\n            },\n            \"time\": \"2023-11-22T10:21:01+00:00\"\n        },\n        {\n            \"name\": \"phpdocumentor/reflection-common\",\n            \"version\": \"2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpDocumentor/ReflectionCommon.git\",\n                \"reference\": \"1d01c49d4ed62f25aa84a747ad35d5a16924662b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpDocumentor/ReflectionCommon/zipball/1d01c49d4ed62f25aa84a747ad35d5a16924662b\",\n                \"reference\": \"1d01c49d4ed62f25aa84a747ad35d5a16924662b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-2.x\": \"2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"phpDocumentor\\\\Reflection\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jaap van Otterdijk\",\n                    \"email\": \"opensource@ijaap.nl\"\n                }\n            ],\n            \"description\": \"Common reflection classes used by phpdocumentor to reflect the code structure\",\n            \"homepage\": \"http://www.phpdoc.org\",\n            \"keywords\": [\n                \"FQSEN\",\n                \"phpDocumentor\",\n                \"phpdoc\",\n                \"reflection\",\n                \"static analysis\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/phpDocumentor/ReflectionCommon/issues\",\n                \"source\": \"https://github.com/phpDocumentor/ReflectionCommon/tree/2.x\"\n            },\n            \"time\": \"2020-06-27T09:03:43+00:00\"\n        },\n        {\n            \"name\": \"phpdocumentor/reflection-docblock\",\n            \"version\": \"5.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpDocumentor/ReflectionDocBlock.git\",\n                \"reference\": \"298d2febfe79d03fe714eb871d5538da55205b1a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpDocumentor/ReflectionDocBlock/zipball/298d2febfe79d03fe714eb871d5538da55205b1a\",\n                \"reference\": \"298d2febfe79d03fe714eb871d5538da55205b1a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/deprecations\": \"^1.1\",\n                \"ext-filter\": \"*\",\n                \"php\": \"^7.4 || ^8.0\",\n                \"phpdocumentor/reflection-common\": \"^2.2\",\n                \"phpdocumentor/type-resolver\": \"^1.7\",\n                \"phpstan/phpdoc-parser\": \"^1.7\",\n                \"webmozart/assert\": \"^1.9.1\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"~1.3.5\",\n                \"phpstan/extension-installer\": \"^1.1\",\n                \"phpstan/phpstan\": \"^1.8\",\n                \"phpstan/phpstan-mockery\": \"^1.1\",\n                \"phpstan/phpstan-webmozart-assert\": \"^1.2\",\n                \"phpunit/phpunit\": \"^9.5\",\n                \"vimeo/psalm\": \"^5.13\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"phpDocumentor\\\\Reflection\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mike van Riel\",\n                    \"email\": \"me@mikevanriel.com\"\n                },\n                {\n                    \"name\": \"Jaap van Otterdijk\",\n                    \"email\": \"opensource@ijaap.nl\"\n                }\n            ],\n            \"description\": \"With this component, a library can provide support for annotations via DocBlocks or otherwise retrieve information that is embedded in a DocBlock.\",\n            \"support\": {\n                \"issues\": \"https://github.com/phpDocumentor/ReflectionDocBlock/issues\",\n                \"source\": \"https://github.com/phpDocumentor/ReflectionDocBlock/tree/5.4.0\"\n            },\n            \"time\": \"2024-04-09T21:13:58+00:00\"\n        },\n        {\n            \"name\": \"phpdocumentor/type-resolver\",\n            \"version\": \"1.8.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpDocumentor/TypeResolver.git\",\n                \"reference\": \"153ae662783729388a584b4361f2545e4d841e3c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpDocumentor/TypeResolver/zipball/153ae662783729388a584b4361f2545e4d841e3c\",\n                \"reference\": \"153ae662783729388a584b4361f2545e4d841e3c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/deprecations\": \"^1.0\",\n                \"php\": \"^7.3 || ^8.0\",\n                \"phpdocumentor/reflection-common\": \"^2.0\",\n                \"phpstan/phpdoc-parser\": \"^1.13\"\n            },\n            \"require-dev\": {\n                \"ext-tokenizer\": \"*\",\n                \"phpbench/phpbench\": \"^1.2\",\n                \"phpstan/extension-installer\": \"^1.1\",\n                \"phpstan/phpstan\": \"^1.8\",\n                \"phpstan/phpstan-phpunit\": \"^1.1\",\n                \"phpunit/phpunit\": \"^9.5\",\n                \"rector/rector\": \"^0.13.9\",\n                \"vimeo/psalm\": \"^4.25\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-1.x\": \"1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"phpDocumentor\\\\Reflection\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Mike van Riel\",\n                    \"email\": \"me@mikevanriel.com\"\n                }\n            ],\n            \"description\": \"A PSR-5 based resolver of Class names, Types and Structural Element Names\",\n            \"support\": {\n                \"issues\": \"https://github.com/phpDocumentor/TypeResolver/issues\",\n                \"source\": \"https://github.com/phpDocumentor/TypeResolver/tree/1.8.2\"\n            },\n            \"time\": \"2024-02-23T11:10:43+00:00\"\n        },\n        {\n            \"name\": \"phpspec/prophecy\",\n            \"version\": \"v1.19.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpspec/prophecy.git\",\n                \"reference\": \"67a759e7d8746d501c41536ba40cd9c0a07d6a87\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpspec/prophecy/zipball/67a759e7d8746d501c41536ba40cd9c0a07d6a87\",\n                \"reference\": \"67a759e7d8746d501c41536ba40cd9c0a07d6a87\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/instantiator\": \"^1.2 || ^2.0\",\n                \"php\": \"^7.2 || 8.0.* || 8.1.* || 8.2.* || 8.3.*\",\n                \"phpdocumentor/reflection-docblock\": \"^5.2\",\n                \"sebastian/comparator\": \"^3.0 || ^4.0 || ^5.0 || ^6.0\",\n                \"sebastian/recursion-context\": \"^3.0 || ^4.0 || ^5.0 || ^6.0\"\n            },\n            \"require-dev\": {\n                \"phpspec/phpspec\": \"^6.0 || ^7.0\",\n                \"phpstan/phpstan\": \"^1.9\",\n                \"phpunit/phpunit\": \"^8.0 || ^9.0 || ^10.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Prophecy\\\\\": \"src/Prophecy\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Konstantin Kudryashov\",\n                    \"email\": \"ever.zet@gmail.com\",\n                    \"homepage\": \"http://everzet.com\"\n                },\n                {\n                    \"name\": \"Marcello Duarte\",\n                    \"email\": \"marcello.duarte@gmail.com\"\n                }\n            ],\n            \"description\": \"Highly opinionated mocking framework for PHP 5.3+\",\n            \"homepage\": \"https://github.com/phpspec/prophecy\",\n            \"keywords\": [\n                \"Double\",\n                \"Dummy\",\n                \"dev\",\n                \"fake\",\n                \"mock\",\n                \"spy\",\n                \"stub\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/phpspec/prophecy/issues\",\n                \"source\": \"https://github.com/phpspec/prophecy/tree/v1.19.0\"\n            },\n            \"time\": \"2024-02-29T11:52:51+00:00\"\n        },\n        {\n            \"name\": \"phpstan/phpdoc-parser\",\n            \"version\": \"1.28.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phpstan/phpdoc-parser.git\",\n                \"reference\": \"cd06d6b1a1b3c75b0b83f97577869fd85a3cd4fb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phpstan/phpdoc-parser/zipball/cd06d6b1a1b3c75b0b83f97577869fd85a3cd4fb\",\n                \"reference\": \"cd06d6b1a1b3c75b0b83f97577869fd85a3cd4fb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/annotations\": \"^2.0\",\n                \"nikic/php-parser\": \"^4.15\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.2\",\n                \"phpstan/extension-installer\": \"^1.0\",\n                \"phpstan/phpstan\": \"^1.5\",\n                \"phpstan/phpstan-phpunit\": \"^1.1\",\n                \"phpstan/phpstan-strict-rules\": \"^1.0\",\n                \"phpunit/phpunit\": \"^9.5\",\n                \"symfony/process\": \"^5.2\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PHPStan\\\\PhpDocParser\\\\\": [\n                        \"src/\"\n                    ]\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"PHPDoc parser with support for nullable, intersection and generic types\",\n            \"support\": {\n                \"issues\": \"https://github.com/phpstan/phpdoc-parser/issues\",\n                \"source\": \"https://github.com/phpstan/phpdoc-parser/tree/1.28.0\"\n            },\n            \"time\": \"2024-04-03T18:51:33+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-code-coverage\",\n            \"version\": \"9.2.31\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-code-coverage.git\",\n                \"reference\": \"48c34b5d8d983006bd2adc2d0de92963b9155965\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/48c34b5d8d983006bd2adc2d0de92963b9155965\",\n                \"reference\": \"48c34b5d8d983006bd2adc2d0de92963b9155965\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"nikic/php-parser\": \"^4.18 || ^5.0\",\n                \"php\": \">=7.3\",\n                \"phpunit/php-file-iterator\": \"^3.0.3\",\n                \"phpunit/php-text-template\": \"^2.0.2\",\n                \"sebastian/code-unit-reverse-lookup\": \"^2.0.2\",\n                \"sebastian/complexity\": \"^2.0\",\n                \"sebastian/environment\": \"^5.1.2\",\n                \"sebastian/lines-of-code\": \"^1.0.3\",\n                \"sebastian/version\": \"^3.0.1\",\n                \"theseer/tokenizer\": \"^1.2.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"suggest\": {\n                \"ext-pcov\": \"PHP extension that provides line coverage\",\n                \"ext-xdebug\": \"PHP extension that provides line coverage as well as branch and path coverage\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"9.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library that provides collection, processing, and rendering functionality for PHP code coverage information.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-code-coverage\",\n            \"keywords\": [\n                \"coverage\",\n                \"testing\",\n                \"xunit\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-code-coverage/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/php-code-coverage/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/php-code-coverage/tree/9.2.31\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T06:37:42+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-file-iterator\",\n            \"version\": \"3.0.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-file-iterator.git\",\n                \"reference\": \"cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-file-iterator/zipball/cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf\",\n                \"reference\": \"cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"FilterIterator implementation that filters files based on a list of suffixes.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-file-iterator/\",\n            \"keywords\": [\n                \"filesystem\",\n                \"iterator\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-file-iterator/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-file-iterator/tree/3.0.6\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2021-12-02T12:48:52+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-invoker\",\n            \"version\": \"3.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-invoker.git\",\n                \"reference\": \"5a10147d0aaf65b58940a0b72f71c9ac0423cc67\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-invoker/zipball/5a10147d0aaf65b58940a0b72f71c9ac0423cc67\",\n                \"reference\": \"5a10147d0aaf65b58940a0b72f71c9ac0423cc67\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"ext-pcntl\": \"*\",\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"suggest\": {\n                \"ext-pcntl\": \"*\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Invoke callables with a timeout\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-invoker/\",\n            \"keywords\": [\n                \"process\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-invoker/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-invoker/tree/3.1.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-09-28T05:58:55+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-text-template\",\n            \"version\": \"2.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-text-template.git\",\n                \"reference\": \"5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-text-template/zipball/5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28\",\n                \"reference\": \"5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Simple template engine.\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-text-template/\",\n            \"keywords\": [\n                \"template\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-text-template/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-text-template/tree/2.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-26T05:33:50+00:00\"\n        },\n        {\n            \"name\": \"phpunit/php-timer\",\n            \"version\": \"5.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/php-timer.git\",\n                \"reference\": \"5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/php-timer/zipball/5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2\",\n                \"reference\": \"5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Utility class for timing\",\n            \"homepage\": \"https://github.com/sebastianbergmann/php-timer/\",\n            \"keywords\": [\n                \"timer\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/php-timer/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/php-timer/tree/5.0.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-26T13:16:10+00:00\"\n        },\n        {\n            \"name\": \"phpunit/phpunit\",\n            \"version\": \"9.6.19\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/phpunit.git\",\n                \"reference\": \"a1a54a473501ef4cdeaae4e06891674114d79db8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/phpunit/zipball/a1a54a473501ef4cdeaae4e06891674114d79db8\",\n                \"reference\": \"a1a54a473501ef4cdeaae4e06891674114d79db8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/instantiator\": \"^1.3.1 || ^2\",\n                \"ext-dom\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-mbstring\": \"*\",\n                \"ext-xml\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"myclabs/deep-copy\": \"^1.10.1\",\n                \"phar-io/manifest\": \"^2.0.3\",\n                \"phar-io/version\": \"^3.0.2\",\n                \"php\": \">=7.3\",\n                \"phpunit/php-code-coverage\": \"^9.2.28\",\n                \"phpunit/php-file-iterator\": \"^3.0.5\",\n                \"phpunit/php-invoker\": \"^3.1.1\",\n                \"phpunit/php-text-template\": \"^2.0.3\",\n                \"phpunit/php-timer\": \"^5.0.2\",\n                \"sebastian/cli-parser\": \"^1.0.1\",\n                \"sebastian/code-unit\": \"^1.0.6\",\n                \"sebastian/comparator\": \"^4.0.8\",\n                \"sebastian/diff\": \"^4.0.3\",\n                \"sebastian/environment\": \"^5.1.3\",\n                \"sebastian/exporter\": \"^4.0.5\",\n                \"sebastian/global-state\": \"^5.0.1\",\n                \"sebastian/object-enumerator\": \"^4.0.3\",\n                \"sebastian/resource-operations\": \"^3.0.3\",\n                \"sebastian/type\": \"^3.2\",\n                \"sebastian/version\": \"^3.0.2\"\n            },\n            \"suggest\": {\n                \"ext-soap\": \"To be able to generate mocks based on WSDL files\",\n                \"ext-xdebug\": \"PHP extension that provides line coverage as well as branch and path coverage\"\n            },\n            \"bin\": [\n                \"phpunit\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"9.6-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/Framework/Assert/Functions.php\"\n                ],\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"The PHP Unit Testing framework.\",\n            \"homepage\": \"https://phpunit.de/\",\n            \"keywords\": [\n                \"phpunit\",\n                \"testing\",\n                \"xunit\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/phpunit/issues\",\n                \"security\": \"https://github.com/sebastianbergmann/phpunit/security/policy\",\n                \"source\": \"https://github.com/sebastianbergmann/phpunit/tree/9.6.19\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://phpunit.de/sponsors.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/phpunit/phpunit\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-04-05T04:35:58+00:00\"\n        },\n        {\n            \"name\": \"psr/container\",\n            \"version\": \"2.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/container.git\",\n                \"reference\": \"c71ecc56dfe541dbd90c5360474fbc405f8d5963\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/container/zipball/c71ecc56dfe541dbd90c5360474fbc405f8d5963\",\n                \"reference\": \"c71ecc56dfe541dbd90c5360474fbc405f8d5963\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.4.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Container\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common Container Interface (PHP FIG PSR-11)\",\n            \"homepage\": \"https://github.com/php-fig/container\",\n            \"keywords\": [\n                \"PSR-11\",\n                \"container\",\n                \"container-interface\",\n                \"container-interop\",\n                \"psr\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-fig/container/issues\",\n                \"source\": \"https://github.com/php-fig/container/tree/2.0.2\"\n            },\n            \"time\": \"2021-11-05T16:47:00+00:00\"\n        },\n        {\n            \"name\": \"psr/http-client\",\n            \"version\": \"1.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-client.git\",\n                \"reference\": \"bb5906edc1c324c9a05aa0873d40117941e5fa90\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-client/zipball/bb5906edc1c324c9a05aa0873d40117941e5fa90\",\n                \"reference\": \"bb5906edc1c324c9a05aa0873d40117941e5fa90\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.0 || ^8.0\",\n                \"psr/http-message\": \"^1.0 || ^2.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Client\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for HTTP clients\",\n            \"homepage\": \"https://github.com/php-fig/http-client\",\n            \"keywords\": [\n                \"http\",\n                \"http-client\",\n                \"psr\",\n                \"psr-18\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-client\"\n            },\n            \"time\": \"2023-09-23T14:17:50+00:00\"\n        },\n        {\n            \"name\": \"psr/http-factory\",\n            \"version\": \"1.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-factory.git\",\n                \"reference\": \"e616d01114759c4c489f93b099585439f795fe35\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-factory/zipball/e616d01114759c4c489f93b099585439f795fe35\",\n                \"reference\": \"e616d01114759c4c489f93b099585439f795fe35\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.0.0\",\n                \"psr/http-message\": \"^1.0 || ^2.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Message\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interfaces for PSR-7 HTTP message factories\",\n            \"keywords\": [\n                \"factory\",\n                \"http\",\n                \"message\",\n                \"psr\",\n                \"psr-17\",\n                \"psr-7\",\n                \"request\",\n                \"response\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-factory/tree/1.0.2\"\n            },\n            \"time\": \"2023-04-10T20:10:41+00:00\"\n        },\n        {\n            \"name\": \"psr/http-message\",\n            \"version\": \"2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-message.git\",\n                \"reference\": \"402d35bcb92c70c026d1a6a9883f06b2ead23d71\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-message/zipball/402d35bcb92c70c026d1a6a9883f06b2ead23d71\",\n                \"reference\": \"402d35bcb92c70c026d1a6a9883f06b2ead23d71\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Message\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for HTTP messages\",\n            \"homepage\": \"https://github.com/php-fig/http-message\",\n            \"keywords\": [\n                \"http\",\n                \"http-message\",\n                \"psr\",\n                \"psr-7\",\n                \"request\",\n                \"response\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-message/tree/2.0\"\n            },\n            \"time\": \"2023-04-04T09:54:51+00:00\"\n        },\n        {\n            \"name\": \"psr/log\",\n            \"version\": \"2.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/log.git\",\n                \"reference\": \"ef29f6d262798707a9edd554e2b82517ef3a9376\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/log/zipball/ef29f6d262798707a9edd554e2b82517ef3a9376\",\n                \"reference\": \"ef29f6d262798707a9edd554e2b82517ef3a9376\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Log\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for logging libraries\",\n            \"homepage\": \"https://github.com/php-fig/log\",\n            \"keywords\": [\n                \"log\",\n                \"psr\",\n                \"psr-3\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/log/tree/2.0.0\"\n            },\n            \"time\": \"2021-07-14T16:41:46+00:00\"\n        },\n        {\n            \"name\": \"psr/simple-cache\",\n            \"version\": \"3.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/simple-cache.git\",\n                \"reference\": \"764e0b3939f5ca87cb904f570ef9be2d78a07865\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/simple-cache/zipball/764e0b3939f5ca87cb904f570ef9be2d78a07865\",\n                \"reference\": \"764e0b3939f5ca87cb904f570ef9be2d78a07865\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\SimpleCache\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interfaces for simple caching\",\n            \"keywords\": [\n                \"cache\",\n                \"caching\",\n                \"psr\",\n                \"psr-16\",\n                \"simple-cache\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/simple-cache/tree/3.0.0\"\n            },\n            \"time\": \"2021-10-29T13:26:27+00:00\"\n        },\n        {\n            \"name\": \"ralouphie/getallheaders\",\n            \"version\": \"3.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ralouphie/getallheaders.git\",\n                \"reference\": \"120b605dfeb996808c31b6477290a714d356e822\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ralouphie/getallheaders/zipball/120b605dfeb996808c31b6477290a714d356e822\",\n                \"reference\": \"120b605dfeb996808c31b6477290a714d356e822\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.6\"\n            },\n            \"require-dev\": {\n                \"php-coveralls/php-coveralls\": \"^2.1\",\n                \"phpunit/phpunit\": \"^5 || ^6.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/getallheaders.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ralph Khattar\",\n                    \"email\": \"ralph.khattar@gmail.com\"\n                }\n            ],\n            \"description\": \"A polyfill for getallheaders.\",\n            \"support\": {\n                \"issues\": \"https://github.com/ralouphie/getallheaders/issues\",\n                \"source\": \"https://github.com/ralouphie/getallheaders/tree/develop\"\n            },\n            \"time\": \"2019-03-08T08:55:37+00:00\"\n        },\n        {\n            \"name\": \"sebastian/cli-parser\",\n            \"version\": \"1.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/cli-parser.git\",\n                \"reference\": \"2b56bea83a09de3ac06bb18b92f068e60cc6f50b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/cli-parser/zipball/2b56bea83a09de3ac06bb18b92f068e60cc6f50b\",\n                \"reference\": \"2b56bea83a09de3ac06bb18b92f068e60cc6f50b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library for parsing CLI options\",\n            \"homepage\": \"https://github.com/sebastianbergmann/cli-parser\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/cli-parser/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/cli-parser/tree/1.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T06:27:43+00:00\"\n        },\n        {\n            \"name\": \"sebastian/code-unit\",\n            \"version\": \"1.0.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/code-unit.git\",\n                \"reference\": \"1fc9f64c0927627ef78ba436c9b17d967e68e120\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/code-unit/zipball/1fc9f64c0927627ef78ba436c9b17d967e68e120\",\n                \"reference\": \"1fc9f64c0927627ef78ba436c9b17d967e68e120\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Collection of value objects that represent the PHP code units\",\n            \"homepage\": \"https://github.com/sebastianbergmann/code-unit\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/code-unit/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/code-unit/tree/1.0.8\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-26T13:08:54+00:00\"\n        },\n        {\n            \"name\": \"sebastian/code-unit-reverse-lookup\",\n            \"version\": \"2.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup.git\",\n                \"reference\": \"ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/code-unit-reverse-lookup/zipball/ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5\",\n                \"reference\": \"ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Looks up which function or method a line of code belongs to\",\n            \"homepage\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup/\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/code-unit-reverse-lookup/tree/2.0.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-09-28T05:30:19+00:00\"\n        },\n        {\n            \"name\": \"sebastian/comparator\",\n            \"version\": \"4.0.8\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/comparator.git\",\n                \"reference\": \"fa0f136dd2334583309d32b62544682ee972b51a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/comparator/zipball/fa0f136dd2334583309d32b62544682ee972b51a\",\n                \"reference\": \"fa0f136dd2334583309d32b62544682ee972b51a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\",\n                \"sebastian/diff\": \"^4.0\",\n                \"sebastian/exporter\": \"^4.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Jeff Welch\",\n                    \"email\": \"whatthejeff@gmail.com\"\n                },\n                {\n                    \"name\": \"Volker Dusch\",\n                    \"email\": \"github@wallbash.com\"\n                },\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@2bepublished.at\"\n                }\n            ],\n            \"description\": \"Provides the functionality to compare PHP values for equality\",\n            \"homepage\": \"https://github.com/sebastianbergmann/comparator\",\n            \"keywords\": [\n                \"comparator\",\n                \"compare\",\n                \"equality\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/comparator/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/comparator/tree/4.0.8\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2022-09-14T12:41:17+00:00\"\n        },\n        {\n            \"name\": \"sebastian/complexity\",\n            \"version\": \"2.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/complexity.git\",\n                \"reference\": \"25f207c40d62b8b7aa32f5ab026c53561964053a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/complexity/zipball/25f207c40d62b8b7aa32f5ab026c53561964053a\",\n                \"reference\": \"25f207c40d62b8b7aa32f5ab026c53561964053a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"nikic/php-parser\": \"^4.18 || ^5.0\",\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library for calculating the complexity of PHP code units\",\n            \"homepage\": \"https://github.com/sebastianbergmann/complexity\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/complexity/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/complexity/tree/2.0.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-12-22T06:19:30+00:00\"\n        },\n        {\n            \"name\": \"sebastian/diff\",\n            \"version\": \"4.0.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/diff.git\",\n                \"reference\": \"ba01945089c3a293b01ba9badc29ad55b106b0bc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/diff/zipball/ba01945089c3a293b01ba9badc29ad55b106b0bc\",\n                \"reference\": \"ba01945089c3a293b01ba9badc29ad55b106b0bc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\",\n                \"symfony/process\": \"^4.2 || ^5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Kore Nordmann\",\n                    \"email\": \"mail@kore-nordmann.de\"\n                }\n            ],\n            \"description\": \"Diff implementation\",\n            \"homepage\": \"https://github.com/sebastianbergmann/diff\",\n            \"keywords\": [\n                \"diff\",\n                \"udiff\",\n                \"unidiff\",\n                \"unified diff\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/diff/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/diff/tree/4.0.6\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T06:30:58+00:00\"\n        },\n        {\n            \"name\": \"sebastian/environment\",\n            \"version\": \"5.1.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/environment.git\",\n                \"reference\": \"830c43a844f1f8d5b7a1f6d6076b784454d8b7ed\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/environment/zipball/830c43a844f1f8d5b7a1f6d6076b784454d8b7ed\",\n                \"reference\": \"830c43a844f1f8d5b7a1f6d6076b784454d8b7ed\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"suggest\": {\n                \"ext-posix\": \"*\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.1-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Provides functionality to handle HHVM/PHP environments\",\n            \"homepage\": \"http://www.github.com/sebastianbergmann/environment\",\n            \"keywords\": [\n                \"Xdebug\",\n                \"environment\",\n                \"hhvm\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/environment/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/environment/tree/5.1.5\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T06:03:51+00:00\"\n        },\n        {\n            \"name\": \"sebastian/exporter\",\n            \"version\": \"4.0.6\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/exporter.git\",\n                \"reference\": \"78c00df8f170e02473b682df15bfcdacc3d32d72\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/exporter/zipball/78c00df8f170e02473b682df15bfcdacc3d32d72\",\n                \"reference\": \"78c00df8f170e02473b682df15bfcdacc3d32d72\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\",\n                \"sebastian/recursion-context\": \"^4.0\"\n            },\n            \"require-dev\": {\n                \"ext-mbstring\": \"*\",\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Jeff Welch\",\n                    \"email\": \"whatthejeff@gmail.com\"\n                },\n                {\n                    \"name\": \"Volker Dusch\",\n                    \"email\": \"github@wallbash.com\"\n                },\n                {\n                    \"name\": \"Adam Harvey\",\n                    \"email\": \"aharvey@php.net\"\n                },\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@gmail.com\"\n                }\n            ],\n            \"description\": \"Provides the functionality to export PHP variables for visualization\",\n            \"homepage\": \"https://www.github.com/sebastianbergmann/exporter\",\n            \"keywords\": [\n                \"export\",\n                \"exporter\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/exporter/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/exporter/tree/4.0.6\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T06:33:00+00:00\"\n        },\n        {\n            \"name\": \"sebastian/global-state\",\n            \"version\": \"5.0.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/global-state.git\",\n                \"reference\": \"bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/global-state/zipball/bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9\",\n                \"reference\": \"bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\",\n                \"sebastian/object-reflector\": \"^2.0\",\n                \"sebastian/recursion-context\": \"^4.0\"\n            },\n            \"require-dev\": {\n                \"ext-dom\": \"*\",\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"suggest\": {\n                \"ext-uopz\": \"*\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"5.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Snapshotting of global state\",\n            \"homepage\": \"http://www.github.com/sebastianbergmann/global-state\",\n            \"keywords\": [\n                \"global state\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/global-state/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/global-state/tree/5.0.7\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-02T06:35:11+00:00\"\n        },\n        {\n            \"name\": \"sebastian/lines-of-code\",\n            \"version\": \"1.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/lines-of-code.git\",\n                \"reference\": \"e1e4a170560925c26d424b6a03aed157e7dcc5c5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/lines-of-code/zipball/e1e4a170560925c26d424b6a03aed157e7dcc5c5\",\n                \"reference\": \"e1e4a170560925c26d424b6a03aed157e7dcc5c5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"nikic/php-parser\": \"^4.18 || ^5.0\",\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library for counting the lines of code in PHP source code\",\n            \"homepage\": \"https://github.com/sebastianbergmann/lines-of-code\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/lines-of-code/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/lines-of-code/tree/1.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-12-22T06:20:34+00:00\"\n        },\n        {\n            \"name\": \"sebastian/object-enumerator\",\n            \"version\": \"4.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/object-enumerator.git\",\n                \"reference\": \"5c9eeac41b290a3712d88851518825ad78f45c71\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/object-enumerator/zipball/5c9eeac41b290a3712d88851518825ad78f45c71\",\n                \"reference\": \"5c9eeac41b290a3712d88851518825ad78f45c71\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\",\n                \"sebastian/object-reflector\": \"^2.0\",\n                \"sebastian/recursion-context\": \"^4.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Traverses array structures and object graphs to enumerate all referenced objects\",\n            \"homepage\": \"https://github.com/sebastianbergmann/object-enumerator/\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/object-enumerator/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/object-enumerator/tree/4.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-26T13:12:34+00:00\"\n        },\n        {\n            \"name\": \"sebastian/object-reflector\",\n            \"version\": \"2.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/object-reflector.git\",\n                \"reference\": \"b4f479ebdbf63ac605d183ece17d8d7fe49c15c7\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/object-reflector/zipball/b4f479ebdbf63ac605d183ece17d8d7fe49c15c7\",\n                \"reference\": \"b4f479ebdbf63ac605d183ece17d8d7fe49c15c7\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Allows reflection of object attributes, including inherited and non-public ones\",\n            \"homepage\": \"https://github.com/sebastianbergmann/object-reflector/\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/object-reflector/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/object-reflector/tree/2.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-10-26T13:14:26+00:00\"\n        },\n        {\n            \"name\": \"sebastian/recursion-context\",\n            \"version\": \"4.0.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/recursion-context.git\",\n                \"reference\": \"e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1\",\n                \"reference\": \"e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                },\n                {\n                    \"name\": \"Jeff Welch\",\n                    \"email\": \"whatthejeff@gmail.com\"\n                },\n                {\n                    \"name\": \"Adam Harvey\",\n                    \"email\": \"aharvey@php.net\"\n                }\n            ],\n            \"description\": \"Provides functionality to recursively process PHP variables\",\n            \"homepage\": \"https://github.com/sebastianbergmann/recursion-context\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/recursion-context/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/recursion-context/tree/4.0.5\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T06:07:39+00:00\"\n        },\n        {\n            \"name\": \"sebastian/resource-operations\",\n            \"version\": \"3.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/resource-operations.git\",\n                \"reference\": \"05d5692a7993ecccd56a03e40cd7e5b09b1d404e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/resource-operations/zipball/05d5692a7993ecccd56a03e40cd7e5b09b1d404e\",\n                \"reference\": \"05d5692a7993ecccd56a03e40cd7e5b09b1d404e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\"\n                }\n            ],\n            \"description\": \"Provides a list of PHP built-in functions that operate on resources\",\n            \"homepage\": \"https://www.github.com/sebastianbergmann/resource-operations\",\n            \"support\": {\n                \"source\": \"https://github.com/sebastianbergmann/resource-operations/tree/3.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-14T16:00:52+00:00\"\n        },\n        {\n            \"name\": \"sebastian/type\",\n            \"version\": \"3.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/type.git\",\n                \"reference\": \"75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/type/zipball/75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7\",\n                \"reference\": \"75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.5\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Collection of value objects that represent the types of the PHP type system\",\n            \"homepage\": \"https://github.com/sebastianbergmann/type\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/type/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/type/tree/3.2.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2023-02-03T06:13:03+00:00\"\n        },\n        {\n            \"name\": \"sebastian/version\",\n            \"version\": \"3.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/sebastianbergmann/version.git\",\n                \"reference\": \"c6c1022351a901512170118436c764e473f6de8c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/sebastianbergmann/version/zipball/c6c1022351a901512170118436c764e473f6de8c\",\n                \"reference\": \"c6c1022351a901512170118436c764e473f6de8c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.0-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"Library that helps with managing the version number of Git-hosted PHP projects\",\n            \"homepage\": \"https://github.com/sebastianbergmann/version\",\n            \"support\": {\n                \"issues\": \"https://github.com/sebastianbergmann/version/issues\",\n                \"source\": \"https://github.com/sebastianbergmann/version/tree/3.0.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/sebastianbergmann\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2020-09-28T06:39:44+00:00\"\n        },\n        {\n            \"name\": \"symfony/config\",\n            \"version\": \"v7.0.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/config.git\",\n                \"reference\": \"f66f908a975500aa4594258bf454dc66e3939eac\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/config/zipball/f66f908a975500aa4594258bf454dc66e3939eac\",\n                \"reference\": \"f66f908a975500aa4594258bf454dc66e3939eac\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.2\",\n                \"symfony/deprecation-contracts\": \"^2.5|^3\",\n                \"symfony/filesystem\": \"^6.4|^7.0\",\n                \"symfony/polyfill-ctype\": \"~1.8\"\n            },\n            \"conflict\": {\n                \"symfony/finder\": \"<6.4\",\n                \"symfony/service-contracts\": \"<2.5\"\n            },\n            \"require-dev\": {\n                \"symfony/event-dispatcher\": \"^6.4|^7.0\",\n                \"symfony/finder\": \"^6.4|^7.0\",\n                \"symfony/messenger\": \"^6.4|^7.0\",\n                \"symfony/service-contracts\": \"^2.5|^3\",\n                \"symfony/yaml\": \"^6.4|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Config\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Helps you find, load, combine, autofill and validate configuration values of any kind\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/config/tree/v7.0.7\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-04-18T09:29:19+00:00\"\n        },\n        {\n            \"name\": \"symfony/console\",\n            \"version\": \"v7.0.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/console.git\",\n                \"reference\": \"c981e0e9380ce9f146416bde3150c79197ce9986\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/console/zipball/c981e0e9380ce9f146416bde3150c79197ce9986\",\n                \"reference\": \"c981e0e9380ce9f146416bde3150c79197ce9986\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.2\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/service-contracts\": \"^2.5|^3\",\n                \"symfony/string\": \"^6.4|^7.0\"\n            },\n            \"conflict\": {\n                \"symfony/dependency-injection\": \"<6.4\",\n                \"symfony/dotenv\": \"<6.4\",\n                \"symfony/event-dispatcher\": \"<6.4\",\n                \"symfony/lock\": \"<6.4\",\n                \"symfony/process\": \"<6.4\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0|2.0|3.0\"\n            },\n            \"require-dev\": {\n                \"psr/log\": \"^1|^2|^3\",\n                \"symfony/config\": \"^6.4|^7.0\",\n                \"symfony/dependency-injection\": \"^6.4|^7.0\",\n                \"symfony/event-dispatcher\": \"^6.4|^7.0\",\n                \"symfony/http-foundation\": \"^6.4|^7.0\",\n                \"symfony/http-kernel\": \"^6.4|^7.0\",\n                \"symfony/lock\": \"^6.4|^7.0\",\n                \"symfony/messenger\": \"^6.4|^7.0\",\n                \"symfony/process\": \"^6.4|^7.0\",\n                \"symfony/stopwatch\": \"^6.4|^7.0\",\n                \"symfony/var-dumper\": \"^6.4|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Console\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Eases the creation of beautiful and testable command line interfaces\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"cli\",\n                \"command-line\",\n                \"console\",\n                \"terminal\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/console/tree/v7.0.7\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-04-18T09:29:19+00:00\"\n        },\n        {\n            \"name\": \"symfony/deprecation-contracts\",\n            \"version\": \"v3.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/deprecation-contracts.git\",\n                \"reference\": \"7c3aff79d10325257a001fcf92d991f24fc967cf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/deprecation-contracts/zipball/7c3aff79d10325257a001fcf92d991f24fc967cf\",\n                \"reference\": \"7c3aff79d10325257a001fcf92d991f24fc967cf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.4-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"function.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"A generic function and convention to trigger deprecation notices\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/deprecation-contracts/tree/v3.4.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-05-23T14:45:45+00:00\"\n        },\n        {\n            \"name\": \"symfony/filesystem\",\n            \"version\": \"v7.0.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/filesystem.git\",\n                \"reference\": \"cc168be6fbdcdf3401f50ae863ee3818ed4338f5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/filesystem/zipball/cc168be6fbdcdf3401f50ae863ee3818ed4338f5\",\n                \"reference\": \"cc168be6fbdcdf3401f50ae863ee3818ed4338f5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.2\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-mbstring\": \"~1.8\",\n                \"symfony/process\": \"^6.4|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Filesystem\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides basic utilities for the filesystem\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/filesystem/tree/v7.0.7\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-04-18T09:29:19+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-ctype\",\n            \"version\": \"v1.29.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-ctype.git\",\n                \"reference\": \"ef4d7e442ca910c4764bce785146269b30cb5fc4\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-ctype/zipball/ef4d7e442ca910c4764bce785146269b30cb5fc4\",\n                \"reference\": \"ef4d7e442ca910c4764bce785146269b30cb5fc4\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"provide\": {\n                \"ext-ctype\": \"*\"\n            },\n            \"suggest\": {\n                \"ext-ctype\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Ctype\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Gert de Pagter\",\n                    \"email\": \"BackEndTea@gmail.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for ctype functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"ctype\",\n                \"polyfill\",\n                \"portable\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-ctype/tree/v1.29.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-01-29T20:11:03+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-grapheme\",\n            \"version\": \"v1.29.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-grapheme.git\",\n                \"reference\": \"32a9da87d7b3245e09ac426c83d334ae9f06f80f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-grapheme/zipball/32a9da87d7b3245e09ac426c83d334ae9f06f80f\",\n                \"reference\": \"32a9da87d7b3245e09ac426c83d334ae9f06f80f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Grapheme\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's grapheme_* functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"grapheme\",\n                \"intl\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-intl-grapheme/tree/v1.29.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-01-29T20:11:03+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-normalizer\",\n            \"version\": \"v1.29.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-normalizer.git\",\n                \"reference\": \"bc45c394692b948b4d383a08d7753968bed9a83d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-normalizer/zipball/bc45c394692b948b4d383a08d7753968bed9a83d\",\n                \"reference\": \"bc45c394692b948b4d383a08d7753968bed9a83d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Normalizer\\\\\": \"\"\n                },\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's Normalizer class and related functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"intl\",\n                \"normalizer\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-intl-normalizer/tree/v1.29.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-01-29T20:11:03+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-mbstring\",\n            \"version\": \"v1.29.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-mbstring.git\",\n                \"reference\": \"9773676c8a1bb1f8d4340a62efe641cf76eda7ec\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-mbstring/zipball/9773676c8a1bb1f8d4340a62efe641cf76eda7ec\",\n                \"reference\": \"9773676c8a1bb1f8d4340a62efe641cf76eda7ec\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"provide\": {\n                \"ext-mbstring\": \"*\"\n            },\n            \"suggest\": {\n                \"ext-mbstring\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Mbstring\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for the Mbstring extension\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"mbstring\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-mbstring/tree/v1.29.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-01-29T20:11:03+00:00\"\n        },\n        {\n            \"name\": \"symfony/process\",\n            \"version\": \"v7.0.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/process.git\",\n                \"reference\": \"3839e56b94dd1dbd13235d27504e66baf23faba0\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/process/zipball/3839e56b94dd1dbd13235d27504e66baf23faba0\",\n                \"reference\": \"3839e56b94dd1dbd13235d27504e66baf23faba0\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.2\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Process\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Executes commands in sub-processes\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/process/tree/v7.0.7\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-04-18T09:29:19+00:00\"\n        },\n        {\n            \"name\": \"symfony/service-contracts\",\n            \"version\": \"v3.4.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/service-contracts.git\",\n                \"reference\": \"11bbf19a0fb7b36345861e85c5768844c552906e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/service-contracts/zipball/11bbf19a0fb7b36345861e85c5768844c552906e\",\n                \"reference\": \"11bbf19a0fb7b36345861e85c5768844c552906e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\",\n                \"psr/container\": \"^1.1|^2.0\"\n            },\n            \"conflict\": {\n                \"ext-psr\": \"<1.1|>=2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"3.4-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Contracts\\\\Service\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Test/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Generic abstractions related to writing services\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"abstractions\",\n                \"contracts\",\n                \"decoupling\",\n                \"interfaces\",\n                \"interoperability\",\n                \"standards\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/service-contracts/tree/v3.4.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2023-12-19T21:51:00+00:00\"\n        },\n        {\n            \"name\": \"symfony/stopwatch\",\n            \"version\": \"v7.0.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/stopwatch.git\",\n                \"reference\": \"41a7a24aa1dc82adf46a06bc292d1923acfe6b84\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/stopwatch/zipball/41a7a24aa1dc82adf46a06bc292d1923acfe6b84\",\n                \"reference\": \"41a7a24aa1dc82adf46a06bc292d1923acfe6b84\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.2\",\n                \"symfony/service-contracts\": \"^2.5|^3\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Stopwatch\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides a way to profile code\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/stopwatch/tree/v7.0.7\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-04-18T09:29:19+00:00\"\n        },\n        {\n            \"name\": \"symfony/string\",\n            \"version\": \"v7.0.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/string.git\",\n                \"reference\": \"e405b5424dc2528e02e31ba26b83a79fd4eb8f63\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/string/zipball/e405b5424dc2528e02e31ba26b83a79fd4eb8f63\",\n                \"reference\": \"e405b5424dc2528e02e31ba26b83a79fd4eb8f63\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.2\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-intl-grapheme\": \"~1.0\",\n                \"symfony/polyfill-intl-normalizer\": \"~1.0\",\n                \"symfony/polyfill-mbstring\": \"~1.0\"\n            },\n            \"conflict\": {\n                \"symfony/translation-contracts\": \"<2.5\"\n            },\n            \"require-dev\": {\n                \"symfony/error-handler\": \"^6.4|^7.0\",\n                \"symfony/http-client\": \"^6.4|^7.0\",\n                \"symfony/intl\": \"^6.4|^7.0\",\n                \"symfony/translation-contracts\": \"^2.5|^3.0\",\n                \"symfony/var-exporter\": \"^6.4|^7.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"Resources/functions.php\"\n                ],\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\String\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides an object-oriented API to strings and deals with bytes, UTF-8 code points and grapheme clusters in a unified way\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"grapheme\",\n                \"i18n\",\n                \"string\",\n                \"unicode\",\n                \"utf-8\",\n                \"utf8\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/string/tree/v7.0.7\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-04-18T09:29:19+00:00\"\n        },\n        {\n            \"name\": \"symfony/yaml\",\n            \"version\": \"v7.0.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/yaml.git\",\n                \"reference\": \"0d3916ae69ea28b59d94b60c4f2b50f4e25adb5c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/yaml/zipball/0d3916ae69ea28b59d94b60c4f2b50f4e25adb5c\",\n                \"reference\": \"0d3916ae69ea28b59d94b60c4f2b50f4e25adb5c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.2\",\n                \"symfony/polyfill-ctype\": \"^1.8\"\n            },\n            \"conflict\": {\n                \"symfony/console\": \"<6.4\"\n            },\n            \"require-dev\": {\n                \"symfony/console\": \"^6.4|^7.0\"\n            },\n            \"bin\": [\n                \"Resources/bin/yaml-lint\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Yaml\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Loads and dumps YAML files\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/yaml/tree/v7.0.7\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-04-28T11:44:19+00:00\"\n        },\n        {\n            \"name\": \"theseer/tokenizer\",\n            \"version\": \"1.2.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/theseer/tokenizer.git\",\n                \"reference\": \"737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/theseer/tokenizer/zipball/737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2\",\n                \"reference\": \"737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-tokenizer\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"A small library for converting tokenized PHP source code into XML and potentially other formats\",\n            \"support\": {\n                \"issues\": \"https://github.com/theseer/tokenizer/issues\",\n                \"source\": \"https://github.com/theseer/tokenizer/tree/1.2.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/theseer\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-03-03T12:36:25+00:00\"\n        },\n        {\n            \"name\": \"webmozart/assert\",\n            \"version\": \"1.11.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/webmozarts/assert.git\",\n                \"reference\": \"11cb2199493b2f8a3b53e7f19068fc6aac760991\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/webmozarts/assert/zipball/11cb2199493b2f8a3b53e7f19068fc6aac760991\",\n                \"reference\": \"11cb2199493b2f8a3b53e7f19068fc6aac760991\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"conflict\": {\n                \"phpstan/phpstan\": \"<0.12.20\",\n                \"vimeo/psalm\": \"<4.6.1 || 4.6.2\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5.13\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.10-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Webmozart\\\\Assert\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Bernhard Schussek\",\n                    \"email\": \"bschussek@gmail.com\"\n                }\n            ],\n            \"description\": \"Assertions to validate method input/output with nice error messages.\",\n            \"keywords\": [\n                \"assert\",\n                \"check\",\n                \"validate\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/webmozarts/assert/issues\",\n                \"source\": \"https://github.com/webmozarts/assert/tree/1.11.0\"\n            },\n            \"time\": \"2022-06-03T18:03:27+00:00\"\n        }\n    ],\n    \"aliases\": [],\n    \"minimum-stability\": \"stable\",\n    \"stability-flags\": [],\n    \"prefer-stable\": false,\n    \"prefer-lowest\": false,\n    \"platform\": {\n        \"php\": \">=7.1\",\n        \"ext-mbstring\": \"*\",\n        \"ext-json\": \"*\",\n        \"ext-intl\": \"*\",\n        \"ext-bcmath\": \"*\",\n        \"ext-iconv\": \"*\"\n    },\n    \"platform-dev\": [],\n    \"plugin-api-version\": \"2.2.0\"\n}\n"
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "gump.class.php",
          "type": "blob",
          "size": 53.9482421875,
          "content": "<?php\n\nuse GUMP\\ArrayHelpers;\nuse GUMP\\EnvHelpers;\n\nclass GUMP\n{\n    /**\n     * Singleton instance of GUMP.\n     *\n     * @var self|null\n     */\n    protected static $instance = null;\n\n    /**\n     * Contains readable field names that have been manually set.\n     *\n     * @var array\n     */\n    protected static $fields = [];\n\n    /**\n     * Custom validators.\n     *\n     * @var array\n     */\n    protected static $validation_methods = [];\n\n    /**\n     * Custom validators error messages.\n     *\n     * @var array\n     */\n    protected static $validation_methods_errors = [];\n\n    /**\n     * Customer filters.\n     *\n     * @var array\n     */\n    protected static $filter_methods = [];\n\n    // ** ------------------------- Instance Helper ---------------------------- ** //\n\n    /**\n     * Function to create and return previously created instance\n     *\n     * @return GUMP\n     */\n    public static function get_instance()\n    {\n        if (self::$instance === null) {\n            self::$instance = new static();\n        }\n\n        return self::$instance;\n    }\n\n    // ** ------------------------- Configuration -------------------------------- ** //\n\n    /**\n     * Rules delimiter.\n     *\n     * @var string\n     */\n    public static $rules_delimiter = '|';\n\n    /**\n     * Rules-parameters delimiter.\n     *\n     * @var string\n     */\n    public static $rules_parameters_delimiter = ',';\n\n    /**\n     * Rules parameters array delimiter.\n     *\n     * @var string\n     */\n    public static $rules_parameters_arrays_delimiter = ';';\n\n    /**\n     * Characters that will be replaced to spaces during field name conversion (street_name => Street Name).\n     *\n     * @var array\n     */\n    public static $field_chars_to_spaces = ['_', '-'];\n\n    // ** ------------------------- Validation Data ------------------------------- ** //\n\n    public static $basic_tags = '<br><p><a><strong><b><i><em><img><blockquote><code><dd><dl><hr><h1><h2><h3><h4><h5><h6><label><ul><li><span><sub><sup>';\n\n    public static $en_noise_words = \"about,after,all,also,an,and,another,any,are,as,at,be,because,been,before,\n                                     being,between,both,but,by,came,can,come,could,did,do,each,for,from,get,\n                                     got,has,had,he,have,her,here,him,himself,his,how,if,in,into,is,it,its,it's,like,\n                                     make,many,me,might,more,most,much,must,my,never,now,of,on,only,or,other,\n                                     our,out,over,said,same,see,should,since,some,still,such,take,than,that,\n                                     the,their,them,then,there,these,they,this,those,through,to,too,under,up,\n                                     very,was,way,we,well,were,what,where,which,while,who,with,would,you,your,a,\n                                     b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,$,1,2,3,4,5,6,7,8,9,0,_\";\n\n    private static $alpha_regex = 'a-zÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÒÓÔÕÖßÙÚÛÜÝŸÑàáâãäåçèéêëìíîïðòóôõöùúûüýÿñ';\n\n    public static $trues = ['1', 1, 'true', true, 'yes', 'on'];\n    public static $falses = ['0', 0, 'false', false, 'no', 'off'];\n\n    /**\n     * Language for error messages.\n     *\n     * @var string\n     */\n    protected $lang;\n\n    /**\n     * Custom field-rule messages.\n     *\n     * @var array\n     */\n    protected $fields_error_messages = [];\n\n    /**\n     * Set of validation rules for execution.\n     *\n     * @var array\n     */\n    protected $validation_rules = [];\n\n    /**\n     * Set of filters rules for execution.\n     *\n     * @var array\n     */\n    protected $filter_rules = [];\n\n    /**\n     * Errors.\n     *\n     * @var array\n     */\n    protected $errors = [];\n\n    // ** ------------------------- Validation Helpers ---------------------------- ** //\n\n    /**\n     * GUMP constructor.\n     *\n     * @param string $lang\n     * @throws Exception when language is not supported\n     */\n    public function __construct(string $lang = 'en')\n    {\n        $lang_file_location = __DIR__.DIRECTORY_SEPARATOR.'lang'.DIRECTORY_SEPARATOR.$lang.'.php';\n\n        if (!EnvHelpers::file_exists($lang_file_location)) {\n            throw new Exception(sprintf(\"'%s' language is not supported.\", $lang));\n        }\n\n        $this->lang = $lang;\n    }\n\n    /**\n     * Shorthand method for inline validation.\n     *\n     * @param array $data The data to be validated\n     * @param array $validators The GUMP validators\n     * @param array $fields_error_messages\n     * @return mixed True(boolean) or the array of error messages\n     * @throws Exception If validation rule does not exist\n     */\n    public static function is_valid(array $data, array $validators, array $fields_error_messages = [])\n    {\n        $gump = self::get_instance();\n        $gump->validation_rules($validators);\n        $gump->set_fields_error_messages($fields_error_messages);\n\n        if ($gump->run($data) === false) {\n            return $gump->get_readable_errors();\n        }\n\n        return true;\n    }\n\n    /**\n     * Shorthand method for running only the data filters.\n     *\n     * @param array $data\n     * @param array $filters\n     * @return mixed\n     * @throws Exception If filter does not exist\n     */\n    public static function filter_input(array $data, array $filters)\n    {\n        $gump = self::get_instance();\n        return $gump->filter($data, $filters);\n    }\n\n    /**\n     * Magic method to generate the validation error messages.\n     *\n     * @return string\n     * @throws Exception\n     */\n    public function __toString()\n    {\n        return $this->get_readable_errors(true);\n    }\n\n    /**\n     * An empty value for us is: null, empty string or empty array\n     *\n     * @param  $value\n     * @return bool\n     */\n    public static function is_empty($value)\n    {\n        return (is_null($value) || $value === '' || (is_array($value) && count($value) === 0));\n    }\n\n    /**\n     * Adds a custom validation rule using a callback function.\n     *\n     * @param string $rule\n     * @param callable $callback\n     * @param string $error_message\n     *\n     * @return void\n     * @throws Exception when validator with the same name already exists\n     */\n    public static function add_validator(string $rule, callable $callback, string $error_message)\n    {\n        if (method_exists(__CLASS__, self::validator_to_method($rule)) || isset(self::$validation_methods[$rule])) {\n            throw new Exception(sprintf(\"'%s' validator is already defined.\", $rule));\n        }\n\n        self::$validation_methods[$rule] = $callback;\n        self::$validation_methods_errors[$rule] = $error_message;\n    }\n\n    /**\n     * Adds a custom filter using a callback function.\n     *\n     * @param string $rule\n     * @param callable $callback\n     *\n     * @return void\n     * @throws Exception when filter with the same name already exists\n     */\n    public static function add_filter(string $rule, callable $callback)\n    {\n        if (method_exists(__CLASS__, self::filter_to_method($rule)) || isset(self::$filter_methods[$rule])) {\n            throw new Exception(sprintf(\"'%s' filter is already defined.\", $rule));\n        }\n\n        self::$filter_methods[$rule] = $callback;\n    }\n\n    /**\n     * Checks if a validator exists.\n     *\n     * @param string $rule\n     *\n     * @return bool\n     */\n    public static function has_validator(string $rule)\n    {\n        return method_exists(__CLASS__, self::validator_to_method($rule)) || isset(self::$validation_methods[$rule]);\n    }\n\n    /**\n     * Checks if a filter exists.\n     *\n     * @param string $filter\n     *\n     * @return bool\n     */\n    public static function has_filter(string $filter)\n    {\n        return method_exists(__CLASS__, self::filter_to_method($filter))\n            || isset(self::$filter_methods[$filter])\n            || function_exists($filter);\n    }\n\n    /**\n     * Helper method to extract an element from an array safely\n     *\n     * @param  mixed $key\n     * @param  array $array\n     * @param  mixed $default\n     *\n     * @return mixed\n     */\n    public static function field($key, array $array, $default = null)\n    {\n        if (isset($array[$key])) {\n            return $array[$key];\n        }\n\n        return $default;\n    }\n\n    /**\n     * Getter/Setter for the validation rules.\n     *\n     * @param array $rules\n     * @return array\n     */\n    public function validation_rules(array $rules = [])\n    {\n        if (empty($rules)) {\n            return $this->validation_rules;\n        }\n\n        $this->validation_rules = $rules;\n    }\n\n    /**\n     * Set field-rule specific error messages.\n     *\n     * @param array $fields_error_messages\n     * @return array\n     */\n    public function set_fields_error_messages(array $fields_error_messages)\n    {\n        return $this->fields_error_messages = $fields_error_messages;\n    }\n\n    /**\n     * Getter/Setter for the filter rules.\n     *\n     * @param array $rules\n     * @return array\n     */\n    public function filter_rules(array $rules = [])\n    {\n        if (empty($rules)) {\n            return $this->filter_rules;\n        }\n\n        $this->filter_rules = $rules;\n    }\n\n    /**\n     * Run the filtering and validation after each other.\n     *\n     * @param array  $data\n     * @param bool   $check_fields\n     *\n     * @return array|bool\n     * @throws Exception\n     */\n    public function run(array $data, $check_fields = false)\n    {\n        $data = $this->filter($data, $this->filter_rules());\n\n        $validated = $this->validate($data, $this->validation_rules());\n\n        if ($check_fields === true) {\n            $this->check_fields($data);\n        }\n\n        if ($validated !== true) {\n            return false;\n        }\n\n        return $data;\n    }\n\n    /**\n     * Ensure that the field counts match the validation rule counts.\n     *\n     * @param array $data\n     */\n    private function check_fields(array $data)\n    {\n        $ruleset = $this->validation_rules();\n        $mismatch = array_diff_key($data, $ruleset);\n        $fields = array_keys($mismatch);\n\n        foreach ($fields as $field) {\n            $this->errors[] = $this->generate_error_array($field, $data[$field], 'mismatch');\n        }\n    }\n\n    /**\n     * Sanitize the input data.\n     *\n     * @param array $input\n     * @param array $fields\n     * @param bool $utf8_encode\n     *\n     * @return array\n     */\n    public function sanitize(array $input, array $fields = [], bool $utf8_encode = true)\n    {\n        if (empty($fields)) {\n            $fields = array_keys($input);\n        }\n\n        $return = [];\n\n        foreach ($fields as $field) {\n            if (!isset($input[$field])) {\n                continue;\n            }\n\n            $value = $input[$field];\n            if (is_array($value)) {\n                $value = $this->sanitize($value, [], $utf8_encode);\n            }\n            if (is_string($value)) {\n                if (strpos($value, \"\\r\") !== false) {\n                    $value = trim($value);\n                }\n\n                if (function_exists('iconv') && function_exists('mb_detect_encoding') && $utf8_encode) {\n                    $current_encoding = mb_detect_encoding($value);\n\n                    if ($current_encoding !== 'UTF-8' && $current_encoding !== 'UTF-16') {\n                        $value = iconv($current_encoding, 'UTF-8', $value);\n                    }\n                }\n\n                $value = static::polyfill_filter_var_string($value);\n            }\n\n            $return[$field] = $value;\n        }\n\n        return $return;\n    }\n\n    /**\n     * Return the error array from the last validation run.\n     *\n     * @return array\n     */\n    public function errors()\n    {\n        return $this->errors;\n    }\n\n    /**\n     * Perform data validation against the provided ruleset.\n     *\n     * @param array $input Input data.\n     * @param array $ruleset Validation rules.\n     *\n     * @return bool|array Returns bool true when no errors. Returns array when errors.\n     * @throws Exception\n     */\n    public function validate(array $input, array $ruleset)\n    {\n        $this->errors = [];\n\n        foreach ($ruleset as $field => $rawRules) {\n            $input[$field] = ArrayHelpers::data_get($input, $field);\n\n            $rules = $this->parse_rules($rawRules);\n            $is_required = $this->field_has_required_rules($rules);\n\n            if (!$is_required && self::is_empty($input[$field])) {\n                continue;\n            }\n\n            foreach ($rules as $rule) {\n                $parsed_rule = $this->parse_rule($rule);\n                $result = $this->foreach_call_validator($parsed_rule['rule'], $field, $input, $parsed_rule['param']);\n\n                if (is_array($result)) {\n                    $this->errors[] = $result;\n                    break; // exit on first error\n                }\n            }\n        }\n\n        return (count($this->errors) > 0) ? $this->errors : true;\n    }\n\n    /**\n     * Parses filters and validators rules group.\n     *\n     * @param string|array $rules\n     * @return array\n     */\n    private function parse_rules($rules)\n    {\n        // v2\n        if (is_array($rules)) {\n            $rules_names = [];\n            foreach ($rules as $key => $value) {\n                $rules_names[] = is_numeric($key) ? $value : $key;\n            }\n\n            return array_map(function ($value, $key) use ($rules) {\n                if ($value === $key) {\n                    return [ $key ];\n                }\n\n                return [$key, $value];\n            }, $rules, $rules_names);\n        }\n\n        return explode(self::$rules_delimiter, $rules);\n    }\n\n    /**\n     * Parses filters and validators individual rules.\n     *\n     * @param string|array $rule\n     * @return array\n     */\n    private function parse_rule($rule)\n    {\n        // v2\n        if (is_array($rule)) {\n            return [\n                'rule' => $rule[0],\n                'param' => $this->parse_rule_params($rule[1] ?? [])\n            ];\n        }\n\n        $result = [\n            'rule' => $rule,\n            'param' => []\n        ];\n\n        if (strpos($rule, self::$rules_parameters_delimiter) !== false) {\n            list($rule, $param) = explode(self::$rules_parameters_delimiter, $rule);\n\n            $result['rule'] = $rule;\n            $result['param'] = $this->parse_rule_params($param);\n        }\n\n        return $result;\n    }\n\n    /**\n     * Parse rule parameters.\n     *\n     * @param string|array $param\n     * @return array|string|null\n     */\n    private function parse_rule_params($param)\n    {\n        if (is_array($param)) {\n            return $param;\n        }\n\n        if (strpos($param, self::$rules_parameters_arrays_delimiter) !== false) {\n            return explode(self::$rules_parameters_arrays_delimiter, $param);\n        }\n\n        return [ $param ];\n    }\n\n    /**\n     * Checks if array of rules contains a required type of validator.\n     *\n     * @param array $rules\n     * @return bool\n     */\n    private function field_has_required_rules(array $rules)\n    {\n        $require_type_of_rules = ['required', 'required_file'];\n\n        // v2 format (using arrays for definition of rules)\n        if (is_array($rules) && is_array($rules[0])) {\n            $found = array_filter($rules, function ($item) use ($require_type_of_rules) {\n                return in_array($item[0], $require_type_of_rules);\n            });\n            return count($found) > 0;\n        }\n\n        $found = array_values(array_intersect($require_type_of_rules, $rules));\n        return count($found) > 0;\n    }\n\n    /**\n     * Helper to convert validator rule name to validator rule method name.\n     *\n     * @param string $rule\n     * @return string\n     */\n    private static function validator_to_method(string $rule)\n    {\n        return sprintf('validate_%s', $rule);\n    }\n\n    /**\n     * Helper to convert filter rule name to filter rule method name.\n     *\n     * @param string $rule\n     * @return string\n     */\n    private static function filter_to_method(string $rule)\n    {\n        return sprintf('filter_%s', $rule);\n    }\n\n    /**\n     * Calls call_validator.\n     *\n     * @param string $rule\n     * @param string $field\n     * @param mixed $input\n     * @param array $rule_params\n     * @return array|bool\n     * @throws Exception\n     */\n    private function foreach_call_validator(string $rule, string $field, array $input, array $rule_params = [])\n    {\n        $is_required_kind_of_rule = $this->field_has_required_rules([$rule]);\n\n        // Fixes #315\n        if ($is_required_kind_of_rule && is_array($input[$field]) && count($input[$field]) === 0) {\n            $result = $this->call_validator($rule, $field, $input, $rule_params, $input[$field]);\n\n            return is_array($result) ? $result : true;\n        }\n\n        $values = is_array($input[$field]) ? $input[$field] : [ $input[$field] ];\n\n        foreach ($values as $value) {\n            $result = $this->call_validator($rule, $field, $input, $rule_params, $value);\n\n            if (is_array($result)) {\n                return $result;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Calls a validator.\n     *\n     * @param string $rule\n     * @param string $field\n     * @param mixed $input\n     * @param array $rule_params\n     * @return array|bool\n     * @throws Exception\n     */\n    private function call_validator(string $rule, string $field, array $input, array $rule_params = [], $value = null)\n    {\n        $method = self::validator_to_method($rule);\n\n        // use native validations\n        if (is_callable([$this, $method])) {\n            $result = $this->$method($field, $input, $rule_params, $value);\n\n            // is_array check for backward compatibility\n            return (is_array($result) || $result === false)\n                ? $this->generate_error_array($field, $input[$field], $rule, $rule_params)\n                : true;\n        }\n\n        // use custom validations\n        if (isset(self::$validation_methods[$rule])) {\n            $result = call_user_func(self::$validation_methods[$rule], $field, $input, $rule_params, $value);\n\n            return ($result === false)\n                ? $this->generate_error_array($field, $input[$field], $rule, $rule_params)\n                : true;\n        }\n\n        throw new Exception(sprintf(\"'%s' validator does not exist.\", $rule));\n    }\n\n    /**\n     * Calls a filter.\n     *\n     * @param string $rule\n     * @param mixed $value\n     * @param array $rule_params\n     * @return mixed\n     * @throws Exception\n     */\n    private function call_filter(string $rule, $value, array $rule_params = [])\n    {\n        $method = self::filter_to_method($rule);\n\n        // use native filters\n        if (is_callable(array($this, $method))) {\n            return $this->$method($value, $rule_params);\n        }\n\n        // use custom filters\n        if (isset(self::$filter_methods[$rule])) {\n            return call_user_func(self::$filter_methods[$rule], $value, $rule_params);\n        }\n\n        // use php functions as filters\n        if (function_exists($rule)) {\n            return call_user_func($rule, $value, ...$rule_params);\n        }\n\n        throw new Exception(sprintf(\"'%s' filter does not exist.\", $rule));\n    }\n\n    /**\n     * Generates error array.\n     *\n     * @param string $field\n     * @param mixed $value\n     * @param string $rule\n     * @param array $rule_params\n     * @return array\n     */\n    private function generate_error_array(string $field, $value, string $rule, array $rule_params = [])\n    {\n        return [\n            'field' => $field,\n            'value' => $value,\n            'rule' => $rule,\n            'params' => $rule_params\n        ];\n    }\n\n    /**\n     * Set a readable name for a specified field names.\n     *\n     * @param string $field\n     * @param string $readable_name\n     */\n    public static function set_field_name(string $field, string $readable_name)\n    {\n        self::$fields[$field] = $readable_name;\n    }\n\n    /**\n     * Set readable name for specified fields in an array.\n     *\n     * @param array $array\n     */\n    public static function set_field_names(array $array)\n    {\n        foreach ($array as $field => $readable_name) {\n            self::set_field_name($field, $readable_name);\n        }\n    }\n\n    /**\n     * Set a custom error message for a validation rule.\n     *\n     * @param string $rule\n     * @param string $message\n     */\n    public static function set_error_message(string $rule, string $message)\n    {\n        self::$validation_methods_errors[$rule] = $message;\n    }\n\n    /**\n     * Set custom error messages for validation rules in an array.\n     *\n     * @param array $array\n     */\n    public static function set_error_messages(array $array)\n    {\n        foreach ($array as $rule => $message) {\n            self::set_error_message($rule, $message);\n        }\n    }\n\n    /**\n     * Get all error messages.\n     *\n     * @return array\n     */\n    protected function get_messages()\n    {\n        $lang_file = __DIR__.DIRECTORY_SEPARATOR.'lang'.DIRECTORY_SEPARATOR.$this->lang.'.php';\n        $messages = include $lang_file;\n\n        return array_merge($messages, self::$validation_methods_errors);\n    }\n\n    /**\n     * Get error message.\n     *\n     * @param array $messages\n     * @param string $field\n     * @param string $rule\n     * @return mixed|null\n     * @throws Exception\n     */\n    private function get_error_message(array $messages, string $field, string $rule)\n    {\n        $custom_error_message = $this->get_custom_error_message($field, $rule);\n        if ($custom_error_message !== null) {\n            return $custom_error_message;\n        }\n\n        if (isset($messages[$rule])) {\n            return $messages[$rule];\n        }\n\n        throw new Exception(sprintf(\"'%s' validator does not have an error message.\", $rule));\n    }\n\n    /**\n     * Get custom error message for field and rule.\n     *\n     * @param string $field\n     * @param string $rule\n     * @return string|null\n     */\n    private function get_custom_error_message(string $field, string $rule)\n    {\n        $rule_name = str_replace('validate_', '', $rule);\n        return $this->fields_error_messages[$field][$rule_name] ?? null;\n    }\n\n    /**\n     * Process error message string.\n     *\n     * @param $field\n     * @param array $params\n     * @param string $message\n     * @param callable|null $transformer\n     * @return string\n     */\n    private function process_error_message($field, array $params, string $message, callable $transformer = null)\n    {\n        // if field name is explicitly set, use it\n        if (array_key_exists($field, self::$fields)) {\n            $field = self::$fields[$field];\n        } else {\n            $field = ucwords(str_replace(self::$field_chars_to_spaces, chr(32), $field));\n        }\n\n        // if param is a field (i.e. equalsfield validator)\n        if (isset($params[0]) && array_key_exists($params[0], self::$fields)) {\n            $params[0] = self::$fields[$params[0]];\n        }\n\n        $replace = [\n            '{field}' => $field,\n            '{param}' => implode(', ', $params)\n        ];\n\n        foreach ($params as $key => $value) {\n            $replace[sprintf('{param[%s]}', $key)] = $value;\n        }\n\n        // for get_readable_errors() <span>\n        if ($transformer) {\n            $replace = $transformer($replace);\n        }\n\n        return strtr($message, $replace);\n    }\n\n    /**\n     * Process the validation errors and return human readable error messages.\n     *\n     * @param bool   $convert_to_string = false\n     * @param string $field_class\n     * @param string $error_class\n     * @return array|string\n     * @throws Exception if validator doesn't have an error message to set\n     */\n    public function get_readable_errors(bool $convert_to_string = false, string $field_class = 'gump-field', string $error_class = 'gump-error-message')\n    {\n        if (empty($this->errors)) {\n            return $convert_to_string ? '' : [];\n        }\n\n        $messages = $this->get_messages();\n        $result = [];\n\n        $transformer = static function ($replace) use ($field_class) {\n            $replace['{field}'] = sprintf('<span class=\"%s\">%s</span>', $field_class, $replace['{field}']);\n            return $replace;\n        };\n\n        foreach ($this->errors as $error) {\n            $message = $this->get_error_message($messages, $error['field'], $error['rule']);\n            $result[] = $this->process_error_message($error['field'], $error['params'], $message, $transformer);\n        }\n\n        if ($convert_to_string) {\n            return array_reduce($result, static function ($prev, $next) use ($error_class) {\n                return sprintf('%s<span class=\"%s\">%s</span>', $prev, $error_class, $next);\n            });\n        }\n\n        return $result;\n    }\n\n    /**\n     * Process the validation errors and return an array of errors with field names as keys.\n     *\n     * @return array\n     * @throws Exception\n     */\n    public function get_errors_array()\n    {\n        $messages = $this->get_messages();\n        $result = [];\n\n        foreach ($this->errors as $error) {\n            $message = $this->get_error_message($messages, $error['field'], $error['rule']);\n            $result[$error['field']] = $this->process_error_message($error['field'], $error['params'], $message);\n        }\n\n        return $result;\n    }\n\n    /**\n     * Filter the input data according to the specified filter set.\n     *\n     * @param mixed  $input\n     * @param array  $filterset\n     * @return mixed\n     * @throws Exception\n     */\n    public function filter(array $input, array $filterset)\n    {\n        foreach ($filterset as $field => $filters) {\n            if (!array_key_exists($field, $input)) {\n                continue;\n            }\n\n            $filters = $this->parse_rules($filters);\n\n            foreach ($filters as $filter) {\n                $parsed_rule = $this->parse_rule($filter);\n\n                if (is_array($input[$field])) {\n                    $input_array = &$input[$field];\n                } else {\n                    $input_array = array(&$input[$field]);\n                }\n\n                foreach ($input_array as &$value) {\n                    $value = $this->call_filter($parsed_rule['rule'], $value, $parsed_rule['param']);\n                }\n\n                unset($input_array, $value);\n            }\n        }\n\n        return $input;\n    }\n\n    // ** ------------------------- Filters --------------------------------------- ** //\n\n    /**\n     * Replace noise words in a string (http://tax.cchgroup.com/help/Avoiding_noise_words_in_your_search.htm).\n     *\n     * @param string $value\n     * @param array  $params\n     *\n     * @return string\n     */\n    protected function filter_noise_words($value, array $params = [])\n    {\n        $value = preg_replace('/\\s\\s+/u', chr(32), $value);\n\n        $value = \" $value \";\n\n        $words = explode(',', self::$en_noise_words);\n\n        foreach ($words as $word) {\n            $word = trim($word);\n\n            $word = \" $word \"; // Normalize\n\n            if (stripos($value, $word) !== false) {\n                $value = str_ireplace($word, chr(32), $value);\n            }\n        }\n\n        return trim($value);\n    }\n\n    /**\n     * Remove all known punctuation from a string.\n     *\n     * @param string $value\n     * @param array  $params\n     *\n     * @return string\n     */\n    protected function filter_rmpunctuation($value, array $params = [])\n    {\n        return preg_replace(\"/(?![.=$'€%-])\\p{P}/u\", '', $value);\n    }\n\n    /**\n     * Sanitize the string by urlencoding characters.\n     *\n     * @param string $value\n     * @param array  $params\n     *\n     * @return string\n     */\n    protected function filter_urlencode($value, array $params = [])\n    {\n        return filter_var($value, FILTER_SANITIZE_ENCODED);\n    }\n\n    /**\n     * Sanitize the string by converting HTML characters to their HTML entities.\n     *\n     * @param string $value\n     * @param array  $params\n     *\n     * @return string\n     */\n    protected function filter_htmlencode($value, array $params = [])\n    {\n        return filter_var($value, FILTER_SANITIZE_SPECIAL_CHARS);\n    }\n\n    /**\n     * Sanitize the string by removing illegal characters from emails.\n     *\n     * @param string $value\n     * @param array  $params\n     *\n     * @return string\n     */\n    protected function filter_sanitize_email($value, array $params = [])\n    {\n        return filter_var($value, FILTER_SANITIZE_EMAIL);\n    }\n\n    /**\n     * Sanitize the string by removing illegal characters from numbers.\n     *\n     * @param string $value\n     * @param array  $params\n     *\n     * @return string\n     */\n    protected function filter_sanitize_numbers($value, array $params = [])\n    {\n        return filter_var($value, FILTER_SANITIZE_NUMBER_INT);\n    }\n\n    /**\n     * Sanitize the string by removing illegal characters from float numbers.\n     *\n     * @param string $value\n     * @param array  $params\n     *\n     * @return string\n     */\n    protected function filter_sanitize_floats($value, array $params = [])\n    {\n        return filter_var($value, FILTER_SANITIZE_NUMBER_FLOAT, FILTER_FLAG_ALLOW_FRACTION);\n    }\n\n\n    /**\n     * Sanitize the string by removing any script tags.\n     *\n     * @param string $value\n     * @param array  $params\n     *\n     * @return string\n     */\n    protected function filter_sanitize_string($value, array $params = [])\n    {\n        return self::polyfill_filter_var_string($value);\n    }\n\n    /**\n     * Implemented to replace FILTER_SANITIZE_STRING behaviour deprecated in php8.1\n     *\n     * @return string\n     */\n    private static function polyfill_filter_var_string($value)\n    {\n        $str = preg_replace('/x00|<[^>]*>?/', '', $value);\n        return (string)str_replace(['', ''], ['&#39;', '&#34;'], $str);\n    }\n\n    /**\n     * Converts ['1', 1, 'true', true, 'yes', 'on'] to true, anything else is false ('on' is useful for form checkboxes).\n     *\n     * @param string $value\n     * @param array  $params\n     *\n     * @return string\n     */\n    protected function filter_boolean($value, array $params = [])\n    {\n        if (in_array($value, self::$trues, true)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Filter out all HTML tags except the defined basic tags.\n     *\n     * @param string $value\n     * @param array  $params\n     *\n     * @return string\n     */\n    protected function filter_basic_tags($value, array $params = [])\n    {\n        return strip_tags($value, self::$basic_tags);\n    }\n\n    /**\n     * Convert the provided numeric value to a whole number.\n     *\n     * @param string $value\n     * @param array  $params\n     *\n     * @return string\n     */\n    protected function filter_whole_number($value, array $params = [])\n    {\n        return intval($value);\n    }\n\n    /**\n     * Convert MS Word special characters to web safe characters. ([“ ”] => \", [‘ ’] => ', [–] => -, […] => ...)\n     *\n     * @param string $value\n     * @param array  $params\n     *\n     * @return string\n     */\n    protected function filter_ms_word_characters($value, array $params = [])\n    {\n        return str_replace(['“', '”', '‘', '’', '–', '…'], ['\"', '\"', \"'\", \"'\", '-', '...'], $value);\n    }\n\n    /**\n     * Converts to lowercase.\n     *\n     * @param string $value\n     * @param array  $params\n     *\n     * @return string\n     */\n    protected function filter_lower_case($value, array $params = [])\n    {\n        return mb_strtolower($value);\n    }\n\n    /**\n     * Converts to uppercase.\n     *\n     * @param string $value\n     * @param array  $params\n     *\n     * @return string\n     */\n    protected function filter_upper_case($value, array $params = [])\n    {\n        return mb_strtoupper($value);\n    }\n\n    /**\n     * Converts value to url-web-slugs.\n     *\n     * @see https://stackoverflow.com/questions/40641973/php-to-convert-string-to-slug\n     * @see http://cubiq.org/the-perfect-php-clean-url-generator\n     *\n     * @param string $value\n     * @param array  $params\n     *\n     * @return string\n     */\n    protected function filter_slug($value, array $params = [])\n    {\n        $delimiter = '-';\n        return mb_strtolower(trim(preg_replace('/[\\s-]+/', $delimiter, preg_replace('/[^A-Za-z0-9-]+/', $delimiter, preg_replace('/[&]/', 'and', preg_replace('/[\\']/', '', iconv('UTF-8', 'ASCII//TRANSLIT', $value))))), $delimiter));\n    }\n\n    // ** ------------------------- Validators ------------------------------------ ** //\n\n    /**\n     * Ensures the specified key value exists and is not empty (not null, not empty string, not empty array).\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_required($field, array $input, array $params = [], $value = null)\n    {\n        return isset($value) && !self::is_empty($value);\n    }\n\n    /**\n     * Verify that a value is contained within the pre-defined value set.\n     *\n     * @example_parameter one;two;use array format if one of the values contains semicolons\n     *\n     * @param string $field\n     * @param array  $input\n     * @param array $params\n     *\n     * @return bool\n     */\n    protected function validate_contains($field, array $input, array $params)\n    {\n        $value = mb_strtolower(trim($input[$field]));\n\n        $params = array_map(static function ($value) {\n            return mb_strtolower(trim($value));\n        }, $params);\n\n        return in_array($value, $params, true);\n    }\n\n    /**\n     * Verify that a value is contained within the pre-defined value set. Error message will NOT show the list of possible values.\n     *\n     * @example_parameter value1;value2\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_contains_list($field, $input, array $params)\n    {\n        return $this->validate_contains($field, $input, $params);\n    }\n\n    /**\n     * Verify that a value is contained within the pre-defined value set. Error message will NOT show the list of possible values.\n     *\n     * @example_parameter value1;value2\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_doesnt_contain_list($field, $input, array $params)\n    {\n        return !$this->validate_contains($field, $input, $params);\n    }\n\n    /**\n     * Determine if the provided value is a valid boolean. Returns true for: yes/no, on/off, 1/0, true/false. In strict mode (optional) only true/false will be valid which you can combine with boolean filter.\n     *\n     * @example_parameter strict\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_boolean($field, array $input, array $params = [], $value = null)\n    {\n        if (isset($params[0]) && $params[0] === 'strict') {\n            return in_array($input[$field], [true, false], true);\n        }\n\n        $booleans = [];\n        foreach (self::$trues as $true) {\n            $booleans[] = $true;\n        }\n        foreach (self::$falses as $false) {\n            $booleans[] = $false;\n        }\n\n        return in_array($input[$field], $booleans, true);\n    }\n\n    /**\n     * Determine if the provided email has valid format.\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value individual value (in case of array)\n     *\n     * @return bool\n     */\n    protected function validate_valid_email($field, array $input, array $params = [], $value = null)\n    {\n        return filter_var($value, FILTER_VALIDATE_EMAIL) !== false;\n    }\n\n    /**\n     * Determine if the provided value length is less or equal to a specific value.\n     *\n     * @example_parameter 240\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_max_len($field, array $input, array $params = [], $value = null)\n    {\n        return mb_strlen($value) <= (int)$params[0];\n    }\n\n    /**\n     * Determine if the provided value length is more or equal to a specific value.\n     *\n     * @example_parameter 4\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_min_len($field, array $input, array $params = [], $value = null)\n    {\n        return mb_strlen($value) >= (int)$params[0];\n    }\n\n    /**\n     * Determine if the provided value length matches a specific value.\n     *\n     * @example_parameter 5\n     *\n     * @param string $field\n     * @param array  $input\n     * @param array  $params\n     *\n     * @return bool\n     */\n    protected function validate_exact_len($field, array $input, array $params = [], $value = null)\n    {\n        return mb_strlen($value) == (int)$params[0];\n    }\n\n    /**\n     * Determine if the provided value length is between min and max values.\n     *\n     * @example_parameter 3;11\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_between_len($field, $input, array $params, $value = null)\n    {\n        return $this->validate_min_len($field, $input, [$params[0]], $value)\n            && $this->validate_max_len($field, $input, [$params[1]], $value);\n    }\n\n    /**\n     * Determine if the provided value contains only alpha characters.\n     *\n     * @param string $field\n     * @param array  $input\n     * @param array  $params\n     * @return bool\n     */\n    protected function validate_alpha($field, array $input, array $params = [], $value = null)\n    {\n        return preg_match('/^(['.self::$alpha_regex.'])+$/i', $value) > 0;\n    }\n\n    /**\n     * Determine if the provided value contains only alpha-numeric characters.\n     *\n     * @param string $field\n     * @param array  $input\n     * @param array  $params\n     *\n     * @return bool\n     */\n    protected function validate_alpha_numeric($field, array $input, array $params = [], $value = null)\n    {\n        return preg_match('/^(['.self::$alpha_regex.'0-9])+$/i', $value) > 0;\n    }\n\n    /**\n     * Determine if the provided value contains only alpha characters with dashed and underscores.\n     *\n     * @param string $field\n     * @param array  $input\n     * @param array  $params\n     *\n     * @return bool\n     */\n    protected function validate_alpha_dash($field, array $input, array $params = [], $value = null)\n    {\n        return preg_match('/^(['.self::$alpha_regex.'_-])+$/i', $value) > 0;\n    }\n\n    /**\n     * Determine if the provided value contains only alpha numeric characters with dashed and underscores.\n     *\n     * @param string $field\n     * @param array  $input\n     * @param array  $params\n     *\n     * @return bool\n     */\n    protected function validate_alpha_numeric_dash($field, array $input, array $params = [], $value = null)\n    {\n        return preg_match('/^(['.self::$alpha_regex.'0-9_-])+$/i', $value) > 0;\n    }\n\n    /**\n     * Determine if the provided value contains only alpha numeric characters with spaces.\n     *\n     * @param string $field\n     * @param array  $input\n     * @param array  $params\n     *\n     * @return bool\n     */\n    protected function validate_alpha_numeric_space($field, array $input, array $params = [], $value = null)\n    {\n        return preg_match('/^(['.self::$alpha_regex.'\\s0-9])+$/i', $value) > 0;\n    }\n\n    /**\n     * Determine if the provided value contains only alpha characters with spaces.\n     *\n     * @param string $field\n     * @param array  $input\n     * @param array  $params\n     *\n     * @return bool\n     */\n    protected function validate_alpha_space($field, array $input, array $params = [], $value = null)\n    {\n        return preg_match('/^(['.self::$alpha_regex.'\\s])+$/i', $value) > 0;\n    }\n\n    /**\n     * Determine if the provided value is a valid number or numeric string.\n     *\n     * @param string $field\n     * @param array  $input\n     * @param array  $params\n     *\n     * @return bool\n     */\n    protected function validate_numeric($field, array $input, array $params = [], $value = null)\n    {\n        return is_numeric($value);\n    }\n\n    /**\n     * Determine if the provided value is a valid integer.\n     *\n     * @param string $field\n     * @param array  $input\n     * @param array  $params\n     *\n     * @return bool\n     */\n    protected function validate_integer($field, array $input, array $params = [], $value = null)\n    {\n        return !(filter_var($value, FILTER_VALIDATE_INT) === false || is_bool($value) || is_null($value));\n    }\n\n    /**\n     * Determine if the provided value is a valid float.\n     *\n     * @param string $field\n     * @param array  $input\n     * @param array  $params\n     *\n     * @return bool\n     */\n    protected function validate_float($field, array $input, array $params = [], $value = null)\n    {\n        return filter_var($value, FILTER_VALIDATE_FLOAT) !== false;\n    }\n\n    /**\n     * Determine if the provided value is a valid URL.\n     *\n     * @param string $field\n     * @param array  $input\n     * @param array  $params\n     *\n     * @return bool\n     */\n    protected function validate_valid_url($field, array $input, array $params = [], $value = null)\n    {\n        return filter_var($value, FILTER_VALIDATE_URL) !== false;\n    }\n\n    /**\n     * Determine if a URL exists & is accessible.\n     *\n     * @param string $field\n     * @param array  $input\n     * @param array  $params\n     *\n     * @return bool\n     */\n    protected function validate_url_exists($field, array $input, array $params = [], $value = null)\n    {\n        $url = parse_url(mb_strtolower($value));\n\n        if (isset($url['host'])) {\n            $url = $url['host'];\n        }\n\n        return EnvHelpers::checkdnsrr(idn_to_ascii($url, IDNA_DEFAULT, INTL_IDNA_VARIANT_UTS46), 'A') !== false;\n    }\n\n    /**\n     * Determine if the provided value is a valid IP address.\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_valid_ip($field, array $input, array $params = [], $value = null)\n    {\n        return filter_var($value, FILTER_VALIDATE_IP) !== false;\n    }\n\n    /**\n     * Determine if the provided value is a valid IPv4 address.\n     *\n     * @see What about private networks? What about loop-back address? 127.0.0.1 http://en.wikipedia.org/wiki/Private_network\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_valid_ipv4($field, array $input, array $params = [], $value = null)\n    {\n        return filter_var($value, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4) !== false;\n    }\n\n    /**\n     * Determine if the provided value is a valid IPv6 address.\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_valid_ipv6($field, array $input, array $params = [], $value = null)\n    {\n        return filter_var($value, FILTER_VALIDATE_IP, FILTER_FLAG_IPV6) !== false;\n    }\n\n    /**\n     * Determine if the input is a valid credit card number.\n     *\n     * @see http://stackoverflow.com/questions/174730/what-is-the-best-way-to-validate-a-credit-card-in-php\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_valid_cc($field, array $input, array $params = [], $value = null)\n    {\n        $number = preg_replace('/\\D/', '', $value);\n\n        $number_length = mb_strlen($number);\n\n        /**\n         * Bail out if $number_length is 0.\n         * This can be the case if a user has entered only alphabets\n         *\n         * @since 1.5\n         */\n        if ($number_length == 0) {\n            return false;\n        }\n\n        $parity = $number_length % 2;\n\n        $total = 0;\n\n        for ($i = 0; $i < $number_length; ++$i) {\n            $digit = $number[$i];\n\n            if ($i % 2 == $parity) {\n                $digit *= 2;\n\n                if ($digit > 9) {\n                    $digit -= 9;\n                }\n            }\n\n            $total += $digit;\n        }\n\n        return $total % 10 == 0;\n    }\n\n    /**\n     * Determine if the input is a valid human name.\n     *\n     * @see https://github.com/Wixel/GUMP/issues/5\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_valid_name($field, array $input, array $params = [], $value = null)\n    {\n        return preg_match(\"/^([a-z \\p{L} '-])+$/i\", $value) > 0;\n    }\n\n    /**\n     * Determine if the provided input is likely to be a street address using weak detection.\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_street_address($field, array $input, array $params = [], $value = null)\n    {\n        // Theory: 1 number, 1 or more spaces, 1 or more words\n        $has_letter = preg_match('/[a-zA-Z]/', $value);\n        $has_digit = preg_match('/\\d/', $value);\n        $has_space = preg_match('/\\s/', $value);\n\n        return $has_letter && $has_digit && $has_space;\n    }\n\n    /**\n     * Determine if the provided value is a valid IBAN.\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_iban($field, array $input, array $params = [], $value = null)\n    {\n        $character = [\n            'A' => 10, 'C' => 12, 'D' => 13, 'E' => 14, 'F' => 15, 'G' => 16,\n            'H' => 17, 'I' => 18, 'J' => 19, 'K' => 20, 'L' => 21, 'M' => 22,\n            'N' => 23, 'O' => 24, 'P' => 25, 'Q' => 26, 'R' => 27, 'S' => 28,\n            'T' => 29, 'U' => 30, 'V' => 31, 'W' => 32, 'X' => 33, 'Y' => 34,\n            'Z' => 35, 'B' => 11\n        ];\n\n        if (!preg_match(\"/\\A[A-Z]{2}\\d{2} ?[A-Z\\d]{4}( ?\\d{4}){1,} ?\\d{1,4}\\z/\", $value)) {\n            return false;\n        }\n\n        $iban = str_replace(' ', '', $value);\n        $iban = substr($iban, 4).substr($iban, 0, 4);\n        $iban = strtr($iban, $character);\n\n        return bcmod($iban, 97) == 1;\n    }\n\n    /**\n     * Determine if the provided input is a valid date (ISO 8601) or specify a custom format (optional).\n     *\n     * @example_parameter d/m/Y\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_date($field, array $input, array $params = [], $value = null)\n    {\n        // Default\n        if (count($params) === 0) {\n            $cdate1 = date('Y-m-d', strtotime($value));\n            $cdate2 = date('Y-m-d H:i:s', strtotime($value));\n\n            return !($cdate1 != $value && $cdate2 != $value);\n        }\n\n        $date = \\DateTime::createFromFormat($params[0], $value);\n\n        return !($date === false || $value != date($params[0], $date->getTimestamp()));\n    }\n\n    /**\n     * Determine if the provided input meets age requirement (ISO 8601). Input should be a date (Y-m-d).\n     *\n     * @example_parameter 18\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     * @throws Exception\n     */\n    protected function validate_min_age($field, array $input, array $params, $value = null)\n    {\n        $inputDatetime = new DateTime(EnvHelpers::date('Y-m-d', strtotime($value)));\n        $todayDatetime = new DateTime(EnvHelpers::date('Y-m-d'));\n\n        $interval = $todayDatetime->diff($inputDatetime);\n        $yearsPassed = $interval->y;\n\n        return $yearsPassed >= $params[0];\n    }\n\n    /**\n     * Determine if the provided numeric value is lower or equal to a specific value.\n     *\n     * @example_parameter 50\n     *\n     * @param string $field\n     * @param array  $input\n     * @param array  $params\n     * @return bool\n     */\n    protected function validate_max_numeric($field, array $input, array $params = [], $value = null)\n    {\n        return is_numeric($value) && is_numeric($params[0]) && ($value <= $params[0]);\n    }\n\n    /**\n     * Determine if the provided numeric value is higher or equal to a specific value.\n     *\n     * @example_parameter 1\n     *\n     * @param string $field\n     * @param array  $input\n     * @param array  $params\n     * @return bool\n     */\n    protected function validate_min_numeric($field, array $input, array $params = [], $value = null)\n    {\n        return is_numeric($value) && is_numeric($params[0]) && ($value >= $params[0]);\n    }\n\n    /**\n     * Determine if the provided value starts with param.\n     *\n     * @example_parameter Z\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     * @return bool\n     */\n    protected function validate_starts($field, array $input, array $params, $value = null)\n    {\n        return strpos($value, $params[0]) === 0;\n    }\n\n    /**\n     * Determine if the file was successfully uploaded.\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_required_file($field, array $input, array $params = [], $value = null)\n    {\n        return isset($input[$field]) && is_array($input[$field]) && $input[$field]['error'] === 0;\n    }\n\n    /**\n     * Check the uploaded file for extension. Doesn't check mime-type yet.\n     *\n     * @example_parameter png;jpg;gif\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_extension($field, $input, array $params, $value = null)\n    {\n        if (is_array($input[$field]) && $input[$field]['error'] === 0) {\n            $params = array_map(function ($v) {\n                return trim(mb_strtolower($v));\n            }, $params);\n\n            $path_info = pathinfo($input[$field]['name']);\n            $extension = $path_info['extension'] ?? null;\n\n            return $extension && in_array(mb_strtolower($extension), $params, true);\n        }\n\n        return false;\n    }\n\n    /**\n     * Determine if the provided field value equals current field value.\n     *\n     * @example_parameter other_field_name\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_equalsfield($field, array $input, array $params, $value = null)\n    {\n        return $input[$field] == $input[$params[0]];\n    }\n\n    /**\n     * Determine if the provided field value is a valid GUID (v4)\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_guidv4($field, array $input, array $params = [], $value = null)\n    {\n        return preg_match(\"/\\{?[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}\\}?$/\", $value) > 0;\n    }\n\n    /**\n     * Determine if the provided value is a valid phone number.\n     *\n     * @example_value 5555425555\n     * @example_value 555-555-5555\n     * @example_value 1(519) 555-4444\n     * @example_value 1-555-555-5555\n     * @example_value 1-(555)-555-5555\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_phone_number($field, array $input, array $params = [], $value = null)\n    {\n        $regex = '/^(\\d[\\s-]?)?[\\(\\[\\s-]{0,2}?\\d{3}[\\)\\]\\s-]{0,2}?\\d{3}[\\s-]?\\d{4}$/i';\n\n        return preg_match($regex, $value) > 0;\n    }\n\n    /**\n     * Custom regex validator.\n     *\n     * @example_parameter /test-[0-9]{3}/\n     * @example_value     test-123\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_regex($field, array $input, array $params = [], $value = null)\n    {\n        return preg_match($params[0], $value) > 0;\n    }\n\n    /**\n     * Determine if the provided value is a valid JSON string.\n     *\n     * @example_value {\"test\": true}\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_valid_json_string($field, array $input, array $params = [], $value = null)\n    {\n         return is_string($input[$field])\n             && is_array(json_decode($value, true))\n             && (json_last_error() == JSON_ERROR_NONE);\n    }\n\n    /**\n     * Check if an input is an array and if the size is more or equal to a specific value.\n     *\n     * @example_parameter 1\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_valid_array_size_greater($field, array $input, array $params, $value = null)\n    {\n        if (!is_array($input[$field]) || count($input[$field]) < $params[0]) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Check if an input is an array and if the size is less or equal to a specific value.\n     *\n     * @example_parameter 1\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_valid_array_size_lesser($field, array $input, array $params = [], $value = null)\n    {\n        if (!is_array($input[$field]) || count($input[$field]) > $params[0]) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Check if an input is an array and if the size is equal to a specific value.\n     *\n     * @example_parameter 1\n     *\n     * @param string $field\n     * @param array $input\n     * @param array $params\n     * @param mixed $value\n     *\n     * @return bool\n     */\n    protected function validate_valid_array_size_equal($field, array $input, array $params = [], $value = null)\n    {\n        return !(!is_array($input[$field]) || count($input[$field]) != $params[0]);\n    }\n}\n"
        },
        {
          "name": "lang",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.689453125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n     convertWarningsToExceptions=\"true\"\n     convertNoticesToExceptions=\"true\"\n     convertErrorsToExceptions=\"true\"\n     convertDeprecationsToExceptions=\"true\"\n     bootstrap=\"tests/bootstrap.php\"\n     verbose=\"true\"\n     colors=\"true\"\n    >\n    <testsuites>\n        <testsuite name=\"default\">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <file>gump.class.php</file>\n        </whitelist>\n    </filter>\n\n    <logging>\n        <log type=\"coverage-clover\" target=\"build/logs/clover.xml\"/>\n    </logging>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}