{
  "metadata": {
    "timestamp": 1736711998531,
    "page": 489,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "vyuldashev/laravel-queue-rabbitmq",
      "stars": 1949,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.21484375,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.337890625,
          "content": "* text=auto\n\n/.github export-ignore\n/tests export-ignore\n.editorconfig export-ignore\n.gitattributes export-ignore\n.gitignore export-ignore\n.styleci.yml export-ignore\n.php_cs.dist export-ignore\nCHANGELOG-* export-ignore\nCODE_OF_CONDUCT.md export-ignore\nCONTRIBUTING.md export-ignore\nphpunit.xml.dist export-ignore\ndocker-compose.yml export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1005859375,
          "content": "/.idea\n/build\n/vendor\ncomposer.lock\n.phpstorm.meta.php\nphpunit.xml\n.phpunit.result.cache\n.php_cs.cache\n"
        },
        {
          "name": "CHANGELOG-10x.md",
          "type": "blob",
          "size": 4.3681640625,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n## [Unreleased](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v10.2.3...v10.0)\n\n## [10.2.3 (2021-02-12)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v10.2.2...v10.2.3)\n\n- Fix Worker is getting killed by timeout when no more jobs available [#404](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/404)\n\n## [10.2.2 (2020-07-18)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v10.2.1...v10.2.2)\n\n- Fix: Make Artisan commands visible not just in console [#348](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/348)\n- Fix: Disable heartbeat when not configured [#346](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/346)\n\n## [10.2.1 (2020-05-11)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v10.2.0...v10.2.1)\n\n- Fix: When a job fails it tries to reject it twice [#322](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/322)\n\n## [10.2.0 (2020-04-24)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v10.1.3...v10.2.0)\n\nHuge thanks to [adm-bone](https://github.com/adm-bome) for this release.\n\n- Added support for Laravel 7.0 [#319](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/319)\n- Added `rabbitmq:exchange-delete` artisan command [#317](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/317)\n- Added `rabbitmq:queue-delete` artisan command [#317](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/317)\n- Failed jobs can be rerouted to another exchange [#317](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/317)\n- Exchange type is configurable [#317](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/317)\n- Job attempts are fixed [#304](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/304)\n- Added prioritization for failed jobs [#304](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/304)\n- Fixed: if delay is not set when releasing a job, job will be lost [#304](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/304)\n- Fix loosing messages when forced to close connection [#311](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/311)\n- Fixed unacked message when class not found [#314](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/314)\n\n## [10.1.3 (2020-01-12)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v10.1.2...v10.1.3)\n\n- Fix 100% CPU usage of `rabbitmq:consume` command by adding sleep to consumer when no messages are got from the queue.\n- Fix `stop-on-empty` flag for `rabbitmq:consume` command.\n\n## [10.1.2 (2019-12-24)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v10.1.1...v10.1.2)\n\n- Fix `rabbitmq:queue-bind` command. [#294](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/294)\n\n## [10.1.1 (2019-12-18)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v10.1.0...v10.1.1)\n\n- Fix `rabbitmq:exchange-declare` command. [#293](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/293)\n\n## [10.1.0 (2019-12-16)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v10.0.2...v10.1.0)\n\n- Add `rabbitmq:consume` command which uses `basic_consume` instead of `basic_get` used by `queue:work`. [#289](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/289)\n- Heartbeat disabled globally\n- Shuffle hosts before connecting to get better load balancing\n\n## [10.0.2 (2019-12-13)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v10.0.1...v10.0.2)\n\n- Finally fix [#235](https://github.com/vyuldashev/laravel-queue-rabbitmq/issues/235)\n\n## [10.0.1 (2019-12-13)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v10.0.0...v10.0.1)\n\n- Add missing container instance and connectionName to RabbitMQJob\n\n## [10.0.0 (2019-12-12)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v9.0...v10.0.0)\n\n- Switch from enqueue to [php-amqplib](https://github.com/php-amqplib/php-amqplib)\n- Fix [#235](https://github.com/vyuldashev/laravel-queue-rabbitmq/issues/235)\n- Add support for multiple hosts\n- Added `exchange:declare` artisan command\n- Added `queue:bind` artisan command\n- Added `queue:declare` artisan command\n- Added `queue:purge` artisan command\n- Bulk push messages using `batch_basic_publish`\n- No more “sleeps”. Exception will be thrown on lost connection or if any other exception occurs and process manager should be configured properly to manage such situations.\n"
        },
        {
          "name": "CHANGELOG-11x.md",
          "type": "blob",
          "size": 2.5556640625,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n## [Unreleased](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v11.4.0...master)\n\n## [11.4.0 (2021-07-27)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v11.3.0...v11.4.0)\n\n- Randomize consumer tag [#432](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/432)\n\n## [11.3.0 (2021-07-06)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v11.2.0...v11.3.0)\n\n- Quorum queues support [#359](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/359)\n- max-priority support [#422](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/422)\n- Ability to specify exchange and exchange_type when using pushRaw() [#420](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/420)\n- Remember exchanges once they have been verified [#407](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/407)\n\n## [11.2.0 (2021-03-16)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v11.1.2...v11.2.0)\n\n- PHP 8 support\n- Fix missing rest option in `php artisan rabbitmq:consume` command [#416](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/416)\n\n## [11.1.2 (2021-03-07)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v11.1.1...v11.1.2)\n\n- Update Consumer to stop when stopIfNecessary() returns exit code [#409](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/409)\n\n## [11.1.1 (2020-12-07)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v11.1.0...v11.1.1)\n\n- Fix worker is stopped by timeout when no new jobs available [#352](https://github.com/vyuldashev/laravel-queue-rabbitmq/issues/352)\n\n## [11.1.0 (2020-12-05)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v11.0.2...v11.1.0)\n\n- Custom job class [#370](https://github.com/vyuldashev/laravel-queue-rabbitmq/issues/370)\n\n## [11.0.2 (2020-09-20)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v11.0.1...v11.0.2)\n\n- Add missing options to rabbitmq:consume command [#363](https://github.com/vyuldashev/laravel-queue-rabbitmq/issues/363)\n\n## [11.0.1 (2020-09-19)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v11.0.0...v11.0.1)\n\n- Fix rabbitmq:consume name option does not exist [#363](https://github.com/vyuldashev/laravel-queue-rabbitmq/issues/363)\n- Fix Class 'Laravel\\Horizon\\JobId' not found [#362](https://github.com/vyuldashev/laravel-queue-rabbitmq/issues/362)\n\n## [11.0.0 (2020-09-09)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v10.2.2...v11.0.0)\n\n- Laravel 8 support\n- Minimum PHP version is set to 7.3 \n"
        },
        {
          "name": "CHANGELOG-12x.md",
          "type": "blob",
          "size": 0.5576171875,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n## [Unreleased](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v12.0.1...master)\n\n## [12.0.1 (2022-04-06)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v12.0.0...v12.0.1)\n\n- Allow laravel to end workers with lost connection [#457](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/457)\n\n## [12.0.0 (2022-02-23)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v11.4.0...v12.0.0)\n\n- Laravel 9 support\n- Minimum PHP version is set to 8.0 \n"
        },
        {
          "name": "CHANGELOG-13x.md",
          "type": "blob",
          "size": 2.71875,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n## [unreleased](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v13.3.0...master)\n\n## [13.3.1](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v13.3.0...13.3.3)\n- Fix a bug when no job / message is available on the queue initially [#543](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/543)\n\n## [13.3.0](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v13.2.0...13.3.0)\n\n- Refactor the creation of RabbitMQ Connection and\n  QueueAPI. [#528](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/528)\n- Added configuration object as single dependency for RabbitMQQueue in\n  constructor. [#528](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/528)\n- Fix method getExchangeType, not throwing an\n  exception. [#528](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/528)\n- Separating the api logic from the actual publishing to\n  RabbitMQ. [#528](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/528)\n- Added a reconnect method. [#528](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/528)\n- Fix the connection and channel not being fully lazy, when QueueAPI was\n  created. [#528](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/528)\n- Keep track of declared queue's within RabbitMQ. [#528](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/528)\n- Implemented the 'rest' option to the consumer [#530](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/530)\n- Added ability to reconnect to RabbitMQ, by creating your\n  own `RabbitMQQueue:class` [#531](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/531)\n\n## [13.2.0](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v13.1.0...13.2.0)\n\n- Compatibility with Laravel 10 [#525](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/525)\n\n## [13.1.0 (2023-01-25)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v13.0.1...v13.1.0)\n\n- Fix delay parameter not being used [#502](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/502)\n- Resolve Laravel 9 incompatabilities [#502](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/502)\n- Fix Horizon invalid delay property [#502](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/502)\n\n## [13.0.1 (2022-09-16)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v13.0.0...v13.0.1)\n\n- Add $dispatchAfterCommit when running via\n  Horizon [#484](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/484)\n\n## [13.0.0 (2022-09-15)](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v12.0.1...v13.0.0)\n\n- Dispatch a job after DB transaction commit [#468](https://github.com/vyuldashev/laravel-queue-rabbitmq/pull/468)\n"
        },
        {
          "name": "CHANGELOG-14x.md",
          "type": "blob",
          "size": 0.228515625,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n## [unreleased](https://github.com/vyuldashev/laravel-queue-rabbitmq/compare/v13.3.0...master)\n\n## [14.0.0]\n- First release compatible with Laravel 11\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0546875,
          "content": "The MIT License (MIT)\n\nCopyright (c) Vladimir Yuldashev\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.7177734375,
          "content": "RabbitMQ Queue driver for Laravel\n======================\n[![Latest Stable Version](https://poser.pugx.org/vladimir-yuldashev/laravel-queue-rabbitmq/v/stable?format=flat-square)](https://packagist.org/packages/vladimir-yuldashev/laravel-queue-rabbitmq)\n[![Build Status](https://github.com/vyuldashev/laravel-queue-rabbitmq/actions/workflows/tests.yml/badge.svg?branch=master)](https://github.com/vyuldashev/laravel-queue-rabbitmq/actions/workflows/tests.yml)\n[![Total Downloads](https://poser.pugx.org/vladimir-yuldashev/laravel-queue-rabbitmq/downloads?format=flat-square)](https://packagist.org/packages/vladimir-yuldashev/laravel-queue-rabbitmq)\n[![License](https://poser.pugx.org/vladimir-yuldashev/laravel-queue-rabbitmq/license?format=flat-square)](https://packagist.org/packages/vladimir-yuldashev/laravel-queue-rabbitmq)\n\n## Support Policy\n\nOnly the latest version will get new features. Bug fixes will be provided using the following scheme:\n\n| Package Version | Laravel Version | Bug Fixes Until  |                                                                                             |\n|-----------------|-----------------|------------------|---------------------------------------------------------------------------------------------|\n| 13              | 9               | August 8th, 2023 | [Documentation](https://github.com/vyuldashev/laravel-queue-rabbitmq/blob/master/README.md) |\n\n## Installation\n\nYou can install this package via composer using this command:\n\n```\ncomposer require vladimir-yuldashev/laravel-queue-rabbitmq\n```\n\nThe package will automatically register itself.\n\n### Configuration\n\nAdd connection to `config/queue.php`:\n\n> This is the minimal config for the rabbitMQ connection/driver to work.\n\n```php\n'connections' => [\n    // ...\n\n    'rabbitmq' => [\n    \n       'driver' => 'rabbitmq',\n       'hosts' => [\n           [\n               'host' => env('RABBITMQ_HOST', '127.0.0.1'),\n               'port' => env('RABBITMQ_PORT', 5672),\n               'user' => env('RABBITMQ_USER', 'guest'),\n               'password' => env('RABBITMQ_PASSWORD', 'guest'),\n               'vhost' => env('RABBITMQ_VHOST', '/'),\n           ],\n           // ...\n       ],\n\n       // ...\n    ],\n\n    // ...    \n],\n```\n\n### Optional Queue Config\n\nOptionally add queue options to the config of a connection.\nEvery queue created for this connection, gets the properties.\n\nWhen you want to prioritize messages when they were delayed, then this is possible by adding extra options.\n\n- When max-priority is omitted, the max priority is set with 2 when used.\n\n```php\n'connections' => [\n    // ...\n\n    'rabbitmq' => [\n        // ...\n\n        'options' => [\n            'queue' => [\n                // ...\n\n                'prioritize_delayed' =>  false,\n                'queue_max_priority' => 10,\n            ],\n        ],\n    ],\n\n    // ...    \n],\n```\n\nWhen you want to publish messages against an exchange with routing-keys, then this is possible by adding extra options.\n\n- When the exchange is omitted, RabbitMQ will use the `amq.direct` exchange for the routing-key\n- When routing-key is omitted the routing-key by default is the `queue` name.\n- When using `%s` in the routing-key the queue_name will be substituted.\n\n> Note: when using an exchange with routing-key, you probably create your queues with bindings yourself.\n\n```php\n'connections' => [\n    // ...\n\n    'rabbitmq' => [\n        // ...\n\n        'options' => [\n            'queue' => [\n                // ...\n\n                'exchange' => 'application-x',\n                'exchange_type' => 'topic',\n                'exchange_routing_key' => '',\n            ],\n        ],\n    ],\n\n    // ...    \n],\n```\n\nIn Laravel failed jobs are stored into the database. But maybe you want to instruct some other process to also do\nsomething with the message.\nWhen you want to instruct RabbitMQ to reroute failed messages to a exchange or a specific queue, then this is possible\nby adding extra options.\n\n- When the exchange is omitted, RabbitMQ will use the `amq.direct` exchange for the routing-key\n- When routing-key is omitted, the routing-key by default the `queue` name is substituted with `'.failed'`.\n- When using `%s` in the routing-key the queue_name will be substituted.\n\n> Note: When using failed_job exchange with routing-key, you probably need to create your exchange/queue with bindings\n> yourself.\n\n```php\n'connections' => [\n    // ...\n\n    'rabbitmq' => [\n        // ...\n\n        'options' => [\n            'queue' => [\n                // ...\n\n                'reroute_failed' => true,\n                'failed_exchange' => 'failed-exchange',\n                'failed_routing_key' => 'application-x.%s',\n            ],\n        ],\n    ],\n\n    // ...    \n],\n```\n\n### Horizon support\n\nStarting with 8.0, this package supports [Laravel Horizon](https://laravel.com/docs/horizon) out of the box. Firstly,\ninstall Horizon and then set `RABBITMQ_WORKER` to `horizon`.\n\nHorizon is depending on events dispatched by the worker.\nThese events inform Horizon what was done with the message/job.\n\nThis Library supports Horizon, but in the config you have to inform Laravel to use the QueueApi compatible with horizon.\n\n```php\n'connections' => [\n    // ...\n\n    'rabbitmq' => [\n        // ...\n\n        /* Set to \"horizon\" if you wish to use Laravel Horizon. */\n       'worker' => env('RABBITMQ_WORKER', 'default'),\n    ],\n\n    // ...    \n],\n```\n\n### Use your own RabbitMQJob class\n\nSometimes you have to work with messages published by another application.  \nThose messages probably won't respect Laravel's job payload schema.\nThe problem with these messages is that, Laravel workers won't be able to determine the actual job or class to execute.\n\nYou can extend the build-in `RabbitMQJob::class` and within the queue connection config, you can define your own class.\nWhen you specify a `job` key in the config, with your own class name, every message retrieved from the broker will get\nwrapped by your own class.\n\nAn example for the config:\n\n```php\n'connections' => [\n    // ...\n\n    'rabbitmq' => [\n        // ...\n\n        'options' => [\n            'queue' => [\n                // ...\n\n                'job' => \\App\\Queue\\Jobs\\RabbitMQJob::class,\n            ],\n        ],\n    ],\n\n    // ...    \n],\n```\n\nAn example of your own job class:\n\n```php\n<?php\n\nnamespace App\\Queue\\Jobs;\n\nuse VladimirYuldashev\\LaravelQueueRabbitMQ\\Queue\\Jobs\\RabbitMQJob as BaseJob;\n\nclass RabbitMQJob extends BaseJob\n{\n\n    /**\n     * Fire the job.\n     *\n     * @return void\n     */\n    public function fire()\n    {\n        $payload = $this->payload();\n\n        $class = WhatheverClassNameToExecute::class;\n        $method = 'handle';\n\n        ($this->instance = $this->resolve($class))->{$method}($this, $payload);\n\n        $this->delete();\n    }\n}\n\n```\n\nOr maybe you want to add extra properties to the payload:\n\n```php\n<?php\n\nnamespace App\\Queue\\Jobs;\n\nuse VladimirYuldashev\\LaravelQueueRabbitMQ\\Queue\\Jobs\\RabbitMQJob as BaseJob;\n\nclass RabbitMQJob extends BaseJob\n{\n   /**\n     * Get the decoded body of the job.\n     *\n     * @return array\n     */\n    public function payload()\n    {\n        return [\n            'job'  => 'WhatheverFullyQualifiedClassNameToExecute@handle',\n            'data' => json_decode($this->getRawBody(), true)\n        ];\n    }\n}\n```\n\nIf you want to handle raw message, not in JSON format or without 'job' key in JSON,\nyou should add stub for `getName` method:\n\n```php\n<?php\n\nnamespace App\\Queue\\Jobs;\n\nuse Illuminate\\Support\\Facades\\Log;\nuse VladimirYuldashev\\LaravelQueueRabbitMQ\\Queue\\Jobs\\RabbitMQJob as BaseJob;\n\nclass RabbitMQJob extends BaseJob\n{\n    public function fire()\n    {\n        $anyMessage = $this->getRawBody();\n        Log::info($anyMessage);\n\n        $this->delete();\n    }\n\n    public function getName()\n    {\n        return '';\n    }\n}\n```\n\n### Use your own Connection\n\nYou can extend the built-in `PhpAmqpLib\\Connection\\AMQPStreamConnection::class`\nor `PhpAmqpLib\\Connection\\AMQPSLLConnection::class` and within the connection config, you can define your own class.\nWhen you specify a `connection` key in the config, with your own class name, every connection will use your own class.\n\nAn example for the config:\n\n```php\n'connections' => [\n    // ...\n\n    'rabbitmq' => [\n        // ...\n\n        'connection' = > \\App\\Queue\\Connection\\MyRabbitMQConnection::class,\n    ],\n\n    // ...    \n],\n```\n\n### Use your own Worker class\n\nIf you want to use your own `RabbitMQQueue::class` this is possible by\nextending `VladimirYuldashev\\LaravelQueueRabbitMQ\\Queue\\RabbitMQQueue`.\nand inform laravel to use your class by setting `RABBITMQ_WORKER` to `\\App\\Queue\\RabbitMQQueue::class`.\n\n> Note: Worker classes **must** extend `VladimirYuldashev\\LaravelQueueRabbitMQ\\Queue\\RabbitMQQueue`\n\n```php\n'connections' => [\n    // ...\n\n    'rabbitmq' => [\n        // ...\n\n        /* Set to a class if you wish to use your own. */\n       'worker' => \\App\\Queue\\RabbitMQQueue::class,\n    ],\n\n    // ...    \n],\n```\n\n```php\n<?php\n\nnamespace App\\Queue;\n\nuse VladimirYuldashev\\LaravelQueueRabbitMQ\\Queue\\RabbitMQQueue as BaseRabbitMQQueue;\n\nclass RabbitMQQueue extends BaseRabbitMQQueue\n{\n    // ...\n}\n```\n\n**For Example: A reconnect implementation.**\n\nIf you want to reconnect to RabbitMQ, if the connection is dead.\nYou can override the publishing and the createChannel methods.\n\n> Note: this is not best practice, it is an example.\n\n```php\n<?php\n\nnamespace App\\Queue;\n\nuse PhpAmqpLib\\Exception\\AMQPChannelClosedException;\nuse PhpAmqpLib\\Exception\\AMQPConnectionClosedException;\nuse VladimirYuldashev\\LaravelQueueRabbitMQ\\Queue\\RabbitMQQueue as BaseRabbitMQQueue;\n\nclass RabbitMQQueue extends BaseRabbitMQQueue\n{\n\n    protected function publishBasic($msg, $exchange = '', $destination = '', $mandatory = false, $immediate = false, $ticket = null): void\n    {\n        try {\n            parent::publishBasic($msg, $exchange, $destination, $mandatory, $immediate, $ticket);\n        } catch (AMQPConnectionClosedException|AMQPChannelClosedException) {\n            $this->reconnect();\n            parent::publishBasic($msg, $exchange, $destination, $mandatory, $immediate, $ticket);\n        }\n    }\n\n    protected function publishBatch($jobs, $data = '', $queue = null): void\n    {\n        try {\n            parent::publishBatch($jobs, $data, $queue);\n        } catch (AMQPConnectionClosedException|AMQPChannelClosedException) {\n            $this->reconnect();\n            parent::publishBatch($jobs, $data, $queue);\n        }\n    }\n\n    protected function createChannel(): AMQPChannel\n    {\n        try {\n            return parent::createChannel();\n        } catch (AMQPConnectionClosedException) {\n            $this->reconnect();\n            return parent::createChannel();\n        }\n    }\n}\n```\n\n### Default Queue\n\nThe connection does use a default queue with value 'default', when no queue is provided by laravel.\nIt is possible to change te default queue by adding an extra parameter in the connection config.\n\n```php\n'connections' => [\n    // ...\n\n    'rabbitmq' => [\n        // ...\n            \n        'queue' => env('RABBITMQ_QUEUE', 'default'),\n    ],\n\n    // ...    \n],\n```\n\n### Heartbeat\n\nBy default, your connection will be created with a heartbeat setting of `0`.\nYou can alter the heartbeat settings by changing the config.\n\n```php\n\n'connections' => [\n    // ...\n\n    'rabbitmq' => [\n        // ...\n\n        'options' => [\n            // ...\n\n            'heartbeat' => 10,\n        ],\n    ],\n\n    // ...    \n],\n```\n\n### SSL Secure\n\nIf you need a secure connection to rabbitMQ server(s), you will need to add these extra config options.\n\n```php\n'connections' => [\n    // ...\n\n    'rabbitmq' => [\n        // ...\n\n        'secure' = > true,\n        'options' => [\n            // ...\n\n            'ssl_options' => [\n                'cafile' => env('RABBITMQ_SSL_CAFILE', null),\n                'local_cert' => env('RABBITMQ_SSL_LOCALCERT', null),\n                'local_key' => env('RABBITMQ_SSL_LOCALKEY', null),\n                'verify_peer' => env('RABBITMQ_SSL_VERIFY_PEER', true),\n                'passphrase' => env('RABBITMQ_SSL_PASSPHRASE', null),\n            ],\n        ],\n    ],\n\n    // ...    \n],\n```\n\n### Events after Database commits\n\nTo instruct Laravel workers to dispatch events after all database commits are completed.\n\n```php\n'connections' => [\n    // ...\n\n    'rabbitmq' => [\n        // ...\n\n        'after_commit' => true,\n    ],\n\n    // ...    \n],\n```\n\n### Lazy Connection\n\nBy default, your connection will be created as a lazy connection.\nIf for some reason you don't want the connection lazy you can turn it off by setting the following config.\n\n```php\n'connections' => [\n    // ...\n\n    'rabbitmq' => [\n        // ...\n\n        'lazy' = > false,\n    ],\n\n    // ...    \n],\n```\n\n### Network Protocol\n\nBy default, the network protocol used for connection is tcp.\nIf for some reason you want to use another network protocol, you can add the extra value in your config options.\nAvailable protocols : `tcp`, `ssl`, `tls`\n\n```php\n'connections' => [\n    // ...\n\n    'rabbitmq' => [\n        // ...\n\n        'network_protocol' => 'tcp',\n    ],\n\n    // ...    \n],\n```\n\n### Octane support\n\nStarting with 13.3.0, this package supports [Laravel Octane](https://laravel.com/docs/octane) out of the box.\nFirstly, install Octane and don't forget to warm 'rabbitmq' connection in the octane config.\n> See: https://github.com/vyuldashev/laravel-queue-rabbitmq/issues/460#issuecomment-1469851667\n\n## Laravel Usage\n\nOnce you completed the configuration you can use the Laravel Queue API. If you used other queue drivers you do not\nneed to change anything else. If you do not know how to use the Queue API, please refer to the official Laravel\ndocumentation: http://laravel.com/docs/queues\n\n## Lumen Usage\n\nFor Lumen usage the service provider should be registered manually as follow in `bootstrap/app.php`:\n\n```php\n$app->register(VladimirYuldashev\\LaravelQueueRabbitMQ\\LaravelQueueRabbitMQServiceProvider::class);\n```\n\n## Consuming Messages\n\nThere are two ways of consuming messages.\n\n1. `queue:work` command which is Laravel's built-in command. This command utilizes `basic_get`. Use this if you want to consume multiple queues.\n\n2. `rabbitmq:consume` command which is provided by this package. This command utilizes `basic_consume` and is more performant than `basic_get` by ~2x, but does not support multiple queues.\n\n## Testing\n\nSetup RabbitMQ using `docker-compose`:\n\n```bash\ndocker compose up -d\n```\n\nTo run the test suite you can use the following commands:\n\n```bash\n# To run both style and unit tests.\ncomposer test\n\n# To run only style tests.\ncomposer test:style\n\n# To run only unit tests.\ncomposer test:unit\n```\n\nIf you receive any errors from the style tests, you can automatically fix most,\nif not all the issues with the following command:\n\n```bash\ncomposer fix:style\n```\n\n## Contribution\n\nYou can contribute to this package by discovering bugs and opening issues. Please, add to which version of package you\ncreate pull request or issue. (e.g. [5.2] Fatal error on delayed job)\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.609375,
          "content": "{\n    \"name\": \"vladimir-yuldashev/laravel-queue-rabbitmq\",\n    \"description\": \"RabbitMQ driver for Laravel Queue. Supports Laravel Horizon.\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Vladimir Yuldashev\",\n            \"email\": \"misterio92@gmail.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.0\",\n        \"ext-json\": \"*\",\n        \"illuminate/queue\": \"^10.0|^11.0\",\n        \"php-amqplib/php-amqplib\": \"^v3.6\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^10.0|^11.0\",\n        \"mockery/mockery\": \"^1.0\",\n        \"laravel/horizon\": \"^5.0\",\n        \"orchestra/testbench\": \"^7.0|^8.0|^9.0\",\n        \"laravel/pint\": \"^1.2\",\n        \"laravel/framework\": \"^9.0|^10.0|^11.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"VladimirYuldashev\\\\LaravelQueueRabbitMQ\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"VladimirYuldashev\\\\LaravelQueueRabbitMQ\\\\Tests\\\\\": \"tests/\"\n        }\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"13.0-dev\"\n        },\n        \"laravel\": {\n            \"providers\": [\n                \"VladimirYuldashev\\\\LaravelQueueRabbitMQ\\\\LaravelQueueRabbitMQServiceProvider\"\n            ]\n        }\n    },\n    \"suggest\": {\n        \"ext-pcntl\": \"Required to use all features of the queue consumer.\"\n    },\n    \"scripts\": {\n        \"test\": [\n            \"@test:style\",\n            \"@test:unit\"\n        ],\n        \"test:style\": \"@php vendor/bin/pint --test -v\",\n        \"test:unit\": \"@php vendor/bin/phpunit\",\n        \"fix:style\": \"@php vendor/bin/pint -v\"\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 1.2216796875,
          "content": "version: '3.7'\n\nservices:\n\n  rabbitmq:\n    image: rabbitmq:3.8\n    environment:\n      RABBITMQ_DEFAULT_USER: guest\n      RABBITMQ_DEFAULT_PASSWORD: guest\n      RABBITMQ_DEFAULT_VHOST: /\n      RABBITMQ_SSL_CACERTFILE: /rootCA.pem\n      RABBITMQ_SSL_CERTFILE: /rootCA.pem\n      RABBITMQ_SSL_KEYFILE: /rootCA.key\n      RABBITMQ_SSL_VERIFY: verify_none\n      RABBITMQ_SSL_FAIL_IF_NO_PEER_CERT: \"false\"\n    volumes:\n      - \"./tests/files/rootCA.pem:/rootCA.pem:ro\"\n      - \"./tests/files/rootCA.key:/rootCA.key:ro\"\n    ports:\n      - \"15671:15671\"\n      - \"15672:15672\"\n      - \"5671:5671\"\n      - \"5672:5672\"\n\n  rabbitmq-management:\n    image: rabbitmq:management\n    environment:\n      RABBITMQ_DEFAULT_USER: guest\n      RABBITMQ_DEFAULT_PASSWORD: guest\n      RABBITMQ_DEFAULT_VHOST: /\n      RABBITMQ_MANAGEMENT_SSL_CACERTFILE: /rootCA.pem\n      RABBITMQ_MANAGEMENT_SSL_CERTFILE: /rootCA.pem\n      RABBITMQ_MANAGEMENT_SSL_KEYFILE: /rootCA.key\n      RABBITMQ_MANAGEMENT_SSL_VERIFY: verify_none\n      RABBITMQ_MANAGEMENT_SSL_FAIL_IF_NO_PEER_CERT: \"false\"\n    volumes:\n      - \"./tests/files/rootCA.pem:/rootCA.pem:ro\"\n      - \"./tests/files/rootCA.key:/rootCA.key:ro\"\n    ports:\n      - 15671:15671\n      - 15672:15672\n      - 5671:5671\n      - 5672:5672\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.845703125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" backupGlobals=\"false\" beStrictAboutTestsThatDoNotTestAnything=\"false\" bootstrap=\"vendor/autoload.php\" colors=\"true\" processIsolation=\"false\" stopOnError=\"false\" stopOnFailure=\"false\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/11.0/phpunit.xsd\" cacheDirectory=\".phpunit.cache\" backupStaticProperties=\"false\">\n  <testsuites>\n    <testsuite name=\"Package Test Suite\">\n      <directory suffix=\"Test.php\">./tests/</directory>\n    </testsuite>\n  </testsuites>\n  <php>\n    <env name=\"HOST\" value=\"127.0.0.1\"/>\n    <env name=\"PORT\" value=\"5672\"/>\n    <env name=\"PORT_SSL\" value=\"5671\"/>\n    <env name=\"RABBITMQ_SSL_CAFILE\" value=\"./tests/files/rootCA.pem\"/>\n    <env name=\"APP_KEY\" value=\"12345678901234567890123456789012\"/>\n  </php>\n  <logging/>\n</phpunit>\n"
        },
        {
          "name": "pint.json",
          "type": "blob",
          "size": 0.1494140625,
          "content": "{\n  \"preset\": \"laravel\",\n  \"rules\": {\n    \"nullable_type_declaration_for_default_null_value\": {\n      \"use_nullable_type_declaration\": false\n    }\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}