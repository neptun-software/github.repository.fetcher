{
  "metadata": {
    "timestamp": 1736711868697,
    "page": 212,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mrclay/minify",
      "stars": 3007,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.236328125,
          "content": "# top-most EditorConfig file\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\n\n[*.php]\nindent_style = space\nindent_size = 4\ninsert_final_newline = true\n\n[vendor/**]\n; Use editor default (possible autodetection).\nindent_style =\nindent_size =\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.146484375,
          "content": "/.editorconfig  export-ignore\n/.gitignore     export-ignore\n/.gitattributes export-ignore\n/min_extras     export-ignore\n/tests          export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.16015625,
          "content": "# ignore IDE/hidden/OS cache files\n*~\n[._]*.s[a-w][a-z]\n[._]s[a-w][a-z]\n.DS_Store\n\n/.idea/\n/composer.lock\n/vendor\n/.php_cs.cache\n/static/[0-9]*\n/tests/compiler.jar\n"
        },
        {
          "name": ".htaccess",
          "type": "blob",
          "size": 0.2998046875,
          "content": "<IfModule mod_rewrite.c>\nRewriteEngine on\n\n# You may need RewriteBase on some servers\n#RewriteBase /min\n\n# rewrite URLs like \"/min/f=...\" to \"/min/?f=...\"\nRewriteRule ^([bfg]=.*)  index.php?$1 [L,NE]\n</IfModule>\n<IfModule mod_env.c>\n# In case AddOutputFilterByType has been added\nSetEnv no-gzip\n</IfModule>\n"
        },
        {
          "name": ".php_cs",
          "type": "blob",
          "size": 0.423828125,
          "content": "<?php\n\n$rules = array(\n    '@PSR2' => true,\n);\n\n$config = PhpCsFixer\\Config::create();\n$finder = $config->getFinder();\n\n$finder\n    ->in(array('.', 'builder/', 'lib/', 'tests/', 'min_extras/', 'static/'))\n    ->name('*.php')\n    ->ignoreDotFiles(true)\n    ->ignoreVCS(true);\n\nreturn $config\n    ->setUsingCache(true)\n    ->setRiskyAllowed(true)\n    ->setRules($rules)\n    ->setIndent('    ')\n    ->setLineEnding(\"\\n\");\n\n// vim:ft=php\n"
        },
        {
          "name": ".semver",
          "type": "blob",
          "size": 0.060546875,
          "content": "---\n:major: 3\n:minor: 0\n:patch: 14\n:special: ''\n:metadata: ''\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 11.4912109375,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## Unreleased\n\n## [4.0.0] - 2024-01-04\n\n- Support PHP 8.1+\n- Update PHPUnit to 8.x\n- Replace `leafo/scssphp` with `scssphp/scssphp`\n\n## [3.0.14] - 2023-05-05\n\n- Support monolog v3, [#705]\n- Allow invalidation from manual invocation, [#700]\n- Add property declaration, [#699]\n\n[3.0.14]: https://github.com/mrclay/minify/compare/3.0.13...3.0.14\n[#705]: https://github.com/mrclay/minify/pull/705\n[#700]: https://github.com/mrclay/minify/pull/700\n[#699]: https://github.com/mrclay/minify/pull/699\n\n## [3.0.13] - 2022-10-03\n\n- Add `Minify_Cache_APCu` to replace `Minify_Cache_APC`, [#697]\n- Require `marcusschwarz/lesserphp:^0.5.5` to fix php 7.4 compatibility, [#688]\n\n[3.0.13]: https://github.com/mrclay/minify/compare/3.0.12...3.0.13\n[#697]: https://github.com/mrclay/minify/pull/697\n[#688]: https://github.com/mrclay/minify/pull/688\n\n## [3.0.12] - 2022-05-14\n\n- Update jquery to 1.12.4 to avoid xss attacks, [#692]\n- Fix null argument to preg_split, [#696], [#695]\n\n[3.0.12]: https://github.com/mrclay/minify/compare/3.0.11...3.0.12\n[#692]: https://github.com/mrclay/minify/pull/692\n[#696]: https://github.com/mrclay/minify/pull/696\n[#695]: https://github.com/mrclay/minify/issues/695\n\n## [3.0.11] - 2021-03-11\n\n- PHP 8.0 support, [#685], [#682], [#677]\n\n[3.0.11]: https://github.com/mrclay/minify/compare/3.0.10...3.0.11\n[#685]: https://github.com/mrclay/minify/pull/685\n[#682]: https://github.com/mrclay/minify/pull/682\n[#677]: https://github.com/mrclay/minify/pull/677\n\n## [3.0.10] - 2020-04-02\n\n- Exclude SSI Comments from HTML minify, [#670], [#671]\n\n[3.0.10]: https://github.com/mrclay/minify/compare/3.0.9...3.0.10\n[#671]: https://github.com/mrclay/minify/issues/671\n[#670]: https://github.com/mrclay/minify/pull/670\n\n## [3.0.9] - 2020-03-24\n\n- Allow `intervention/httpauth` 3.x, [#667], [#666], [#664]\n\n[3.0.9]: https://github.com/mrclay/minify/compare/3.0.8...3.0.9\n[#664]: https://github.com/mrclay/minify/issues/664\n[#666]: https://github.com/mrclay/minify/pull/666\n[#667]: https://github.com/mrclay/minify/pull/667\n\n## [3.0.8] - 2020-03-19\n\n- Removed deprecated get_magic_quotes_gpc() function that since PHP 5.4.0 returns FALSE always, and since PHP 7.4 is deprecated, [#661]\n\n[3.0.8]: https://github.com/mrclay/minify/compare/3.0.7...3.0.8\n[#661]: https://github.com/mrclay/minify/pull/661\n\n## [3.0.7] - 2019-12-10\n\n- Allow mrclay/props-dic ^3.0, [#658]\n\n[3.0.7]: https://github.com/mrclay/minify/compare/3.0.6...3.0.7\n[#658]: https://github.com/mrclay/minify/pull/658\n\n## [3.0.6] - 2019-10-28\n\n- Bugfix for option sanitizer, [#654], [#655]\n\n[3.0.6]: https://github.com/mrclay/minify/compare/3.0.5...3.0.6\n[#654]: https://github.com/mrclay/minify/issues/654\n[#655]: https://github.com/mrclay/minify/pull/655\n\n## [3.0.5] - 2019-10-01\n\n- Fix syntax error in composer.json, [#653]\n\n[3.0.5]: https://github.com/mrclay/minify/compare/3.0.4...3.0.5\n[#653]: https://github.com/mrclay/minify/pull/653\n\n## 3.0.4 - 2019-09-24\n\n- Fix PHP 7.3 compatibility issues, [#648]\n\n[3.0.4]: https://github.com/mrclay/minify/compare/3.0.3...3.0.4\n[#648]: https://github.com/mrclay/minify/issues/648\n\n## [3.0.3] - 2017-11-03\n\n- Fix closure-compiler's error \"redirection limit reached\". [#618], [#619]\n\n[3.0.3]: https://github.com/mrclay/minify/compare/3.0.2...3.0.3\n[#618]: https://github.com/mrclay/minify/pull/618\n[#619]: https://github.com/mrclay/minify/issues/619\n\n## [3.0.2] - 2017-09-14\n\n- Fixes syntax error in Groups controller, [#613]\n- Better-maintained lessphp fork, [#610]\n- No longer corrupts some chars in some environments, [#608]\n\n[3.0.2]: https://github.com/mrclay/minify/compare/3.0.1...3.0.2\n[#608]: https://github.com/mrclay/minify/pull/608\n[#610]: https://github.com/mrclay/minify/pull/610\n[#613]: https://github.com/mrclay/minify/issues/613\n\n## [3.0.1] - 2017-06-09\n\n- Update CSSmin to v4, [#599], [#590]\n\n[3.0.1]: https://github.com/mrclay/minify/compare/3.0.0...3.0.1\n[#590]: https://github.com/mrclay/minify/issues/590\n[#599]: https://github.com/mrclay/minify/pull/599\n\n## 3.0.0 - 2017-04-03\n\n* Improved CSS minification via Túbal Martín's CSSMin\n* Easier error identification (just see error_log)\n* Adds feature to serve static files directly\n* Adds config option for simply concatenating files\n* Adds config option for altering creation of Minify/MinApp objects\n* Missing spec no longer redirects, instead links to docs\n* Installation requires use of Composer to install dependencies\n* Minify::VERSION is an int that tracks the major version number\n* BREAKING: The project root is now what gets deployed as `min`\n* BREAKING: Removes JSMin\n* BREAKING: Removes JSMin+ (unmaintained, high memory usage)\n* BREAKING: Removes DooDigestAuth\n* BREAKING: Removes Minify_Loader (uses Composer)\n* BREAKING: Removes Minify_Logger (uses Monolog)\n* BREAKING: Removes `$min_libPath` option\n* BREAKING: The Minify, source, and controller components have changed APIs\n\n## 2.3.0 - 2016-03-11\n\n* Adds `$min_concatOnly` option to just concatenate files\n* Deprecates use of Minify_Loader\n* Deprecates use of Minify_Logger\n* Deprecates use of JSMinPlus\n* Deprecates use of FirePHP\n* Deprecates use of DooDigestAuth\n\n## 2.2.1 - 2014-10-30\n\n* Builder styled with Bootstrap (thanks to help from acidvertigo)\n* Update CSSmin to v.2.4.8\n* Added WinCache\n* URLs with spaces properly rewritten\n\n## 2.2.0 - 2014-03-12\n\n* Fix handling of RegEx in certain situations in JSMin\n    * Thanks to Vovan-VE for reporting this\n* Update composer.json with support info\n* Add ability to set ClosureCompiler URL\n    * Thanks Elan Ruusamäe for the pull request\n* Better report of temp directory errors\n    * Also thanks to Elan Ruusamäe for anatoher pull request\n* Updated CSSmin and added Minify_CSSmin wrapper\n* Fix windows issue associated with long cache filenames\n* Fix issue with web-based tool\n* Fix bug in JSMin exceptions\n* Fix \"about:blank\" bug in CSS_UriRewriter\n* Cite is no longer a block element in HTML minification\n* Allow for definition of custom config locations outside of the min directory\n    * Thanks Sam Bauers for the pull request\n* Allow option for overriding the maximum byte size POST limit for ClosureCompiler and other additions\n    * Thanks Joscha Feth for the code\n* Fixes to file-relative URL identification in UriRewriter\n* Allow far-future expiration and file versioning with the \"v\" querystirng parameter in addition to existing method\n* Lots of general code tidy ups\n\n## 2.1.7 - 2013-07-23\n\n* Fixes arbitrary file inclusion vulnerability on some systems\n    * Thanks to Matt Mecham for reporting this\n\n## 2.1.6 - 2013-07-19\n\n* JSMin fixes\n* Prevents some Closure Compiler API failures\n* Uses autoloading for all class loading\n* Multiple group support in HTML Helper\n* Cache adaptor for XCache\n* Allow setting stack-size in YUI Compressor wrapper\n* Adds jsCleanComments option to HTML minifier\n* Upgrades CSSmin\n* CLI script more portable\n* Adds composer.json\n\n## 2.1.5 - 2012-03-10\n\n* Removed XSS vulnerability\n* Disabled builder by default\n* command line tools to minify and rewrite URIs in CSS\n* upgrade (optional) JSMin+ library\n* more efficient JS minification when using CC/YUIC\n* Closure Compiler uses cURL when allow\\_url\\_fopen is off\n* Missing file notices when using groups\n\n## 2.1.4b - 2010-07-10\n\n* Option to minify JS with Closure Compiler API w/ JSMin failover\n* Cookie/bookmarklet-based debug mode. No HTML editing!\n* Allows 1 file to be missing w/o complete failure\n* Combine multiple groups and files in single URI\n* More useful HTML helpers for writing versioned URIs\n* More detailed error logging, including minifier exceptions\n* Builder offers more helpful messages/PHP environment warnings\n* Bypass minification based on filename pattern. e.g. foo.min.js / foo-min.css\n* JSMin won't choke on common Closure compiler syntaxes (`i+ ++j`)\n* Better caching in IE6\n* Cache ids are influenced by group/file names\n* Debug mode for Javascript doesn't break on common XPath strings (Prototype 1.6)\n* Removed annoying maxFiles limit\n* mbstring.func\\_overload usage is safer\n\n## 2.1.3 - 2009-06-30\n\n* CSS fixes\n    * A few URI rewriting bugs fixed\n    * comment/whitespace removal no longer breaks some values\n    * IE6 [pseudo-element selector bug](http://www.crankygeek.com/ie6pebug/) no longer triggered\n* HTTP fixes\n    * Proper Expires handling in webkit (dropped \"must-revalidate\", which triggered a [webkit bug](http://mrclay.org/index.php/2009/02/24/safari-4-beta-cache-controlmust-revalidate-bug/))\n    * ETag generation now valid ([must be unique when gzipped](https://issues.apache.org/bugzilla/show_bug.cgi?id=39727))\n    * Vary header always sent when Accept-Encoding is sniffed\n    * Dropped deflate encoding, since browser and proxy support [could be buggy](http://stackoverflow.com/questions/883841/).\n* File cache now works w/o setting `$min_cachePath`\n* No more 5.3 deprecation warnings: `split()` removed\n* API: Can set contentType Minify\\_Source objects (fixes an annoying [caveat](http://groups.google.com/group/minify/msg/8446d32ee99a4961))\n* [Resolved Issue list](http://code.google.com/p/minify/issues/list?can=1&q=label%3ARelease-2.1.2%20status%3AVerified)\n\n## 2.1.2 - 2009-03-04\n\n* Javascript fixes\n    * Debug mode no longer confused by `*/*` in strings/RegExps (jQuery)\n    * quote characters inside RegExp literals no longer cause exception\n    * files ending in single-line comments no longer cause code loss\n* CSS: data: URLs no longer mangled\n* Optional error logging to Firefox's FirePHP extension\n* Unit tests to check for common DOCUMENT\\_ROOT problems\n    * DOCUMENT\\_ROOT no longer overwritten on IIS servers\n* Builder app doesn't fail on systems without gzdeflate()\n* APC caching class included\n\n## 2.1.1 - 2008-10-19\n\n* Bug fix release\n* Detection and workarounds for zlib.output\\_compression and non-PHP encoding modules\n* Zlib not required (mod\\_rewrite, et.al., can still be used for encoding)\n* HTML : More IE conditional comments preserved\n* Minify\\_groupUri() utility fixed\n\n## 2.1.0 - 2008-09-18\n\n* \"min\" default application for quick deployment\n* Minify URI Builder app & bookmarklet for quickly creating minify URIs\n* Relative URIs in CSS file are fixed automatically by default\n* \"debug\" mode for revealing original line #s in combined files\n* Better IIS support\n* Improved minifier classes:\n    * JS: preserves IE conditional comments\n    * CSS: smaller output, preserves more hacks and valid CSS syntax, shorter line lengths, other bug fixes\n    * HTML: smaller output, shorter line lengths, other bug fixes\n* Default Cache-Control: max-age of 30 minutes\n* Conditional GETs supported even when max-age sent\n* Experimental memcache cache class (default is files)\n* Minify\\_Cache\\_File has flock()s (by default)\n* Workaround for Windows mtime reporting bug\n\n## 2.0.0 - 2008-05-22\n\n* Complete code overhaul. Minify is now a PEAR-style class and toolkit for building customized minifying file servers.\n* Content-Encoding: deflate/gzip/compress, based on request headers\n* Expanded CSS and HTML minifiers with test cases\n* Easily plug-in 3rd-party minifiers (like Packer)\n* Plug-able front end controller allows changing the way files are chosen\n* Compression & encoding modules lazy-loaded as needed (304 responses use minimal code)\n* Separate utility classes for HTTP encoding and cache control\n\n## 1.0.1 - 2007-05-05\n\n* Fixed various problems resolving pathnames when hosted on an NFS mount.\n* Fixed 'undefined constant' notice.\n* Replaced old JSMin library with a much faster custom implementation.\n\n## 1.0.0 - 2007-05-02\n\n* First release.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.521484375,
          "content": "Copyright (c) 2008 Ryan Grove <ryan@wonko.com>\nCopyright (c) 2008 Steve Clay <steve@mrclay.org>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice,\n    this list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n  * Neither the name of this project nor the names of its contributors may be\n    used to endorse or promote products derived from this software without\n    specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.3154296875,
          "content": "## Minify is no longer regularly maintained\n\nThe original authors no longer recommend using Minify, especially previous versions, which were not designed to handle modern JS and CSS syntax. Instead, use an up-to-date performance measurement tool like [Lighthouse](https://developer.chrome.com/docs/lighthouse/overview) and follow its recommendations.\n\nIn 2010, Minify offered a fine improvement for some websites, but browsers and HTTP servers are now much better, and Minify may offer only a marginal performance benefit in narrow cases. Also both JS and CSS now change rapidly, and new syntaxes are likely to lead to broken code being served through Minify.\n\n## About\n\nMinify is an HTTP server for JS and CSS assets. It compresses and combines files\nand serves it with appropriate headers, allowing conditional GET or long-Expires.\n\n| *Before* | ![7 requests](http://mrclay.org/wp-content/uploads/2008/09/fiddler_before.png) |\n|----------|-----------------------------------------------------------------|\n| *After*  | ![2 requests](http://mrclay.org/wp-content/uploads/2008/09/fiddler_after.png)  |\n\nThe stats above are from a [brief walkthrough](http://mrclay.org/index.php/2008/09/19/minify-21-on-mrclayorg/) which shows how easy it is to set up Minify on an existing site. It eliminated 5 HTTP requests and reduced JS/CSS bandwidth by 70%.\n\nRelative URLs in CSS files are rewritten to compensate for being served from a different directory.\n\n## Static file serving\n\nVersion 3 allows [serving files directly from the filesystem](static/README.md) for much better performance. We encourage you to try this feature.\n\n## Support\n\nPost to the [Google Group](http://groups.google.com/group/minify).\n\n## Installation\n\nSee the [install guide](docs/Install.wiki.md).\n\n## Configuration & Usage\n\n(Using 2.x? [Here are the 2.x docs](https://github.com/mrclay/minify/tree/2.x/docs).)\n\nSee the [user guide](docs/UserGuide.wiki.md).\n\nMinify also comes with a [URI Builder application](docs/BuilderApp.wiki.md) that can help you write URLs\nfor use with Minify or configure groups of files.\n\nSee the [cookbook](docs/CookBook.wiki.md) for more advanced options for minification.\n\nMore [docs are available](docs).\n\n## Unit Testing\n\n1. Install dev deps via Composer: `composer install`\n1. `composer test` or `phpunit`\n\n## Warnings\n\n* Minify is designed for efficiency, but, for very high traffic sites, it will probably serve files slower than your HTTPd due to the CGI overhead of PHP. See the [FAQ](docs/FAQ.wiki.md#how-fast-is-it) and [CookBook](docs/CookBook.wiki.md) for more info.\n* If you combine a lot of CSS, watch out for [IE's 4096 selectors-per-file limit](http://stackoverflow.com/a/9906889/3779), affects IE 6 through 9.\n* Minify *should* work fine with files encoded in UTF-8 or other 8-bit encodings like ISO 8859/Windows-1252. By default Minify appends \";charset=utf-8\" to the Content-Type headers it sends.\n\n## Acknowledgments\n\nMinify was inspired by [jscsscomp](http://code.google.com/p/jscsscomp/) by Maxim Martynyuk and by the article [Supercharged JavaScript](http://www.hunlock.com/blogs/Supercharged_Javascript) by Patrick Hunlock.\n\nThe [JSMin library](http://www.crockford.com/javascript/jsmin.html) used for JavaScript minification was originally written by Douglas Crockford and was [ported to PHP](https://github.com/mrclay/jsmin-php) by Ryan Grove specifically for use in Minify.\n"
        },
        {
          "name": "UPGRADING.txt",
          "type": "blob",
          "size": 0.587890625,
          "content": "Minify Upgrade Guide\n\nUPGRADING FROM 2.1.*\n\n1. Rename the following files:\n\n    /min/config.php       --> /min/old_config.php\n    /min/groupsConfig.php --> /min/old_groupsConfig.php\n\n2. Overwrite all files in /min with those from this zip.\n\n3. Delete /min/groupsConfig.php\n\n4. Rename /min/old_groupsConfig.php --> /min/groupsConfig.php\n\n5. Merge your settings in old_config.php into config.php.\n\n6. (optional) Delete /min/old_config.php.\n\n\nINSTALLING FRESH\n\nSee README.txt for instructions on installing this app for the first time.\n   \n\nSUPPORT\n\nSend a message to http://groups.google.com/group/minify"
        },
        {
          "name": "bootstrap.php",
          "type": "blob",
          "size": 0.642578125,
          "content": "<?php\n/**\n * Sets up autoloading and returns the Minify\\App\n */\n\ncall_user_func(function () {\n    if (is_dir(__DIR__ . '/../../../vendor')) {\n        // Used as a composer library\n        $vendorDir = __DIR__ . '/../../../vendor';\n    } else {\n        $vendorDir = __DIR__ . '/vendor';\n    }\n\n    $file = $vendorDir . '/autoload.php';\n    if (!is_file($file)) {\n        echo 'You must set up the project dependencies, run the following commands:'.PHP_EOL.\n            'curl -sS https://getcomposer.org/installer | php'.PHP_EOL.\n            'php composer.phar install'.PHP_EOL;\n        exit(1);\n    }\n\n    require $file;\n});\n\nreturn new \\Minify\\App(__DIR__);\n"
        },
        {
          "name": "builder",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.5400390625,
          "content": "{\n\t\"name\": \"mrclay/minify\",\n\t\"type\": \"library\",\n\t\"description\": \"Minify is a PHP app that helps you follow several rules for client-side performance. It combines multiple CSS or Javascript files, removes unnecessary whitespace and comments, and serves them with gzip encoding and optimal client-side cache headers\",\n\t\"homepage\": \"https://github.com/mrclay/minify\",\n\t\"license\": \"BSD-3-Clause\",\n\t\"authors\": [\n\t\t{\n\t\t\t\"name\": \"Stephen Clay\",\n\t\t\t\"email\": \"steve@mrclay.org\",\n\t\t\t\"role\": \"Developer\"\n\t\t}\n\t],\n\t\"support\": {\n\t\t\"email\": \"minify@googlegroups.com\",\n\t\t\"issues\": \"https://github.com/mrclay/minify/issues\",\n\t\t\"wiki\": \"https://github.com/mrclay/minify/blob/master/docs\"\n\t},\n\t\"autoload\": {\n\t\t\"classmap\": [\n\t\t\t\"lib/\"\n\t\t]\n\t},\n\t\"autoload-dev\": {\n\t\t\"psr-4\": {\n\t\t\t\"Minify\\\\Test\\\\\": \"tests/\"\n\t\t}\n\t},\n\t\"config\": {\n\t\t\"platform\": {\n\t\t\t\"php\": \"8.1.0\"\n\t\t},\n\t\t\"sort-packages\": true\n\t},\n\t\"require\": {\n\t\t\"php\": \"^8.1\",\n\t\t\"ext-pcre\": \"*\",\n\t\t\"intervention/httpauth\": \"^2.0|^3.0\",\n\t\t\"marcusschwarz/lesserphp\": \"^0.5.5\",\n\t\t\"monolog/monolog\": \"~1.1|~2.0|~3.0\",\n\t\t\"mrclay/jsmin-php\": \"~2\",\n\t\t\"mrclay/props-dic\": \"^4\",\n\t\t\"tubalmartin/cssmin\": \"~4\"\n\t},\n\t\"require-dev\": {\n\t\t\"firephp/firephp-core\": \"~0.4.0\",\n\t\t\"meenie/javascript-packer\": \"~1.1\",\n\t\t\"phpunit/phpunit\": \"^8\",\n\t\t\"scssphp/scssphp\": \"^1.12\",\n\t\t\"tedivm/jshrink\": \"~1.1.0\"\n\t},\n\t\"suggest\": {\n\t\t\"firephp/firephp-core\": \"Use FirePHP for Log messages\",\n\t\t\"meenie/javascript-packer\": \"Keep track of the Packer PHP port using Composer\"\n\t},\n\t\"scripts\": {\n\t\t\"test\": \"phpunit\"\n\t},\n\t\"extra\": {\n\t\t\"branch-alias\": {\n\t\t\t\"dev-master\": \"3.0.x-dev\"\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "config-test.php",
          "type": "blob",
          "size": 0.283203125,
          "content": "<?php\n/**\n * Additional configuration applied when the variable \"test\" is added to the querystring.\n *\n * To test config options, place them in this file and add \"&test\" to your Minify URL.\n * Note that if this is on a public server, anyone can execute your test.\n *\n * @package Minify\n */\n"
        },
        {
          "name": "config.php",
          "type": "blob",
          "size": 6.490234375,
          "content": "<?php\n/**\n * Configuration for \"min\", the default application built with the Minify\n * library\n *\n * @package Minify\n */\n\n\n/**\n * Enable the static serving feature\n */\n$min_enableStatic = false;\n\n\n/**\n * Allow use of the Minify URI Builder app. Only set this to true while you need it.\n */\n$min_enableBuilder = false;\n\n\n/**\n * Concatenate but do not minify the files. This can be used for testing.\n */\n$min_concatOnly = false;\n\n\n/**\n * If non-empty, the Builder will be protected with HTTP Digest auth.\n * The username is \"admin\".\n */\n$min_builderPassword = 'admin';\n\n\n/**\n * Set to true to log messages to FirePHP (Firefox Firebug addon) and PHP's error_log\n * Set to false for no error logging (Minify may be slightly faster).\n */\n$min_errorLogger = false;\n\n\n/**\n * To allow debug mode output, you must set this option to true.\n *\n * Once true, you can send the cookie minDebug to request debug mode output. The\n * cookie value should match the URIs you'd like to debug. E.g. to debug\n * /min/f=file1.js send the cookie minDebug=file1.js\n * You can manually enable debugging by appending \"&debug\" to a URI.\n * E.g. /min/?f=script1.js,script2.js&debug\n *\n * In 'debug' mode, Minify combines files with no minification and adds comments\n * to indicate line #s of the original files.\n */\n$min_allowDebugFlag = false;\n\n\n/**\n * For best performance, specify your temp directory here. Otherwise Minify\n * will have to load extra code to guess. Some examples below:\n */\n//$min_cachePath = 'c:\\\\WINDOWS\\\\Temp';\n//$min_cachePath = '/tmp';\n//$min_cachePath = preg_replace('/^\\\\d+;/', '', session_save_path());\n\n\n/**\n * To use APC/Memcache/ZendPlatform for cache storage, require the class and\n * set $min_cachePath to an instance. Example below:\n */\n//$min_cachePath = new Minify_Cache_APC();\n\n\n/**\n * Leave an empty string to use PHP's $_SERVER['DOCUMENT_ROOT'].\n *\n * On some servers, this value may be misconfigured or missing. If so, set this\n * to your full document root path with no trailing slash.\n * E.g. '/home/accountname/public_html' or 'c:\\\\xampp\\\\htdocs'\n *\n * If /min/ is directly inside your document root, just uncomment the\n * second line. The third line might work on some Apache servers.\n */\n$min_documentRoot = '';\n//$min_documentRoot = dirname(dirname(__DIR__));\n//$min_documentRoot = substr(__FILE__, 0, -15);\n//$min_documentRoot = $_SERVER['SUBDOMAIN_DOCUMENT_ROOT'];\n\n\n/**\n * Cache file locking. Set to false if filesystem is NFS. On at least one\n * NFS system flock-ing attempts stalled PHP for 30 seconds!\n */\n$min_cacheFileLocking = true;\n\n\n/**\n * Combining multiple CSS files can place @import declarations after rules, which\n * is invalid. Minify will attempt to detect when this happens and place a\n * warning comment at the top of the CSS output. To resolve this you can either\n * move the @imports within your CSS files, or enable this option, which will\n * move all @imports to the top of the output. Note that moving @imports could\n * affect CSS values (which is why this option is disabled by default).\n */\n$min_serveOptions['bubbleCssImports'] = false;\n\n\n/**\n * Cache-Control: max-age value sent to browser (in seconds). After this period,\n * the browser will send another conditional GET. Use a longer period for lower\n * traffic but you may want to shorten this before making changes if it's crucial\n * those changes are seen immediately.\n *\n * Note: Despite this setting, if you include a number at the end of the\n * querystring, maxAge will be set to one year. E.g. /min/f=hello.css&123456\n */\n$min_serveOptions['maxAge'] = 1800;\n\n\n/**\n * To use the CSS compressor that shipped with 2.x, uncomment the following line:\n */\n//$min_serveOptions['minifiers'][Minify::TYPE_CSS] = array('Minify_CSS', 'minify');\n\n\n/**\n * To use Google's Closure Compiler API to minify Javascript (falling back to JSMin\n * on failure), uncomment the following line:\n */\n//$min_serveOptions['minifiers']['application/x-javascript'] = array('Minify_JS_ClosureCompiler', 'minify');\n\n\n/**\n * If you'd like to restrict the \"f\" option to files within/below\n * particular directories below DOCUMENT_ROOT, set this here.\n * You will still need to include the directory in the\n * f or b GET parameters.\n *\n * // = shortcut for DOCUMENT_ROOT\n */\n//$min_serveOptions['minApp']['allowDirs'] = array('//js', '//css');\n\n/**\n * Set to true to disable the \"f\" GET parameter for specifying files.\n * Only the \"g\" parameter will be considered.\n */\n$min_serveOptions['minApp']['groupsOnly'] = false;\n\n\n/**\n * By default, Minify will not minify files with names containing .min or -min\n * before the extension. E.g. myFile.min.js will not be processed by JSMin\n *\n * To minify all files, set this option to null. You could also specify your\n * own pattern that is matched against the filename.\n */\n//$min_serveOptions['minApp']['noMinPattern'] = '@[-\\\\.]min\\\\.(?:js|css)$@i';\n\n\n/**\n * If you minify CSS files stored in symlink-ed directories, the URI rewriting\n * algorithm can fail. To prevent this, provide an array of link paths to\n * target paths, where the link paths are within the document root.\n *\n * Because paths need to be normalized for this to work, use \"//\" to substitute\n * the doc root in the link paths (the array keys). E.g.:\n * <code>\n * array('//symlink' => '/real/target/path') // unix\n * array('//static' => 'D:\\\\staticStorage')  // Windows\n * </code>\n */\n$min_symlinks = array();\n\n\n/**\n * If you upload files from Windows to a non-Windows server, Windows may report\n * incorrect mtimes for the files. This may cause Minify to keep serving stale\n * cache files when source file changes are made too frequently (e.g. more than\n * once an hour).\n *\n * Immediately after modifying and uploading a file, use the touch command to\n * update the mtime on the server. If the mtime jumps ahead by a number of hours,\n * set this variable to that number. If the mtime moves back, this should not be\n * needed.\n *\n * In the Windows SFTP client WinSCP, there's an option that may fix this\n * issue without changing the variable below. Under login > environment,\n * select the option \"Adjust remote timestamp with DST\".\n * @link http://winscp.net/eng/docs/ui_login_environment#daylight_saving_time\n */\n$min_uploaderHoursBehind = 0;\n\n\n/**\n * Advanced: you can replace some of the PHP classes Minify uses to serve requests.\n * To do this, assign a callable to one of the elements of the $min_factories array.\n *\n * You can see the default implementations (and what gets passed in) in index.php.\n */\n//$min_factories['minify'] = ... a callable accepting a Minify\\App object\n//$min_factories['controller'] = ... a callable accepting a Minify\\App object\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.1259765625,
          "content": "version: \"3.7\"\nservices:\n  apache:\n    image: php:8.3-apache\n    ports:\n      - 8080:80\n    volumes:\n      - .:/var/www/html/min\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example.index.php",
          "type": "blob",
          "size": 0.220703125,
          "content": "<?php\n// template file for creating your own Minify endpoint\n\n// remove this\ndie('disabled');\n\n// adjust this path as necessary\nrequire __DIR__ . '/../vendor/autoload.php';\n\n$app = new \\Minify\\App(__DIR__);\n$app->runServer();\n"
        },
        {
          "name": "groupsConfig.php",
          "type": "blob",
          "size": 0.5263671875,
          "content": "<?php\n/**\n * Groups configuration for default Minify implementation\n * @package Minify\n */\n\n/**\n * You may wish to use the Minify URI Builder app to suggest\n * changes. http://yourdomain/min/builder/\n *\n * See https://github.com/mrclay/minify/blob/master/docs/CustomServer.wiki.md for other ideas\n **/\n\nreturn array(\n//    'testJs' => array('//minify/quick-test.js'),\n//    'testCss' => array('//minify/quick-test.css'),\n//    'js' => array('//js/file1.js', '//js/file2.js'),\n//    'css' => array('//css/file1.css', '//css/file2.css'),\n);\n"
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 0.248046875,
          "content": "<?php\n/**\n * Sets up MinApp controller and serves files\n *\n * DO NOT EDIT! Configure this utility via config.php and groupsConfig.php\n *\n * @package Minify\n */\n\n$app = (require __DIR__ . '/bootstrap.php');\n/* @var \\Minify\\App $app */\n\n$app->runServer();\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "min_extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.82421875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<!-- https://phpunit.readthedocs.io/en/latest/configuration.html -->\n<phpunit\n\tbackupGlobals=\"false\"\n\tbackupStaticAttributes=\"false\"\n\tcolors=\"true\"\n\tconvertErrorsToExceptions=\"true\"\n\tconvertNoticesToExceptions=\"true\"\n\tconvertWarningsToExceptions=\"true\"\n\tprocessIsolation=\"false\"\n\tstopOnFailure=\"false\"\n\tbootstrap=\"vendor/autoload.php\">\n\n\t<testsuites>\n\t\t<testsuite name=\"Project Test Suite\">\n\t\t\t<directory>tests</directory>\n\t\t\t<exclude>tests/JsClosureCompilerTest.php</exclude>\n\t\t</testsuite>\n\t</testsuites>\n\n\t<!--\n\t<php>\n\t\t<server name=\"KERNEL_DIR\" value=\"/path/to/your/app/\" />\n\t</php>\n\t-->\n\n\t<!-- for code coverage -->\n\t<filter>\n\t\t<whitelist>\n\t\t\t<directory>.</directory>\n\t\t\t<exclude>\n\t\t\t\t<directory>tests</directory>\n\t\t\t\t<directory>vendor</directory>\n\t\t\t</exclude>\n\t\t</whitelist>\n\t</filter>\n</phpunit>\n"
        },
        {
          "name": "quick-test.css",
          "type": "blob",
          "size": 0.5341796875,
          "content": "/*! This file exists only for testing a Minify installation. Its content is not used.\n *\n * http://example.org/min/f=min/quick-test.css\n */\n\n@import     url( more.css );\n\n    body, td, th {\n        font-family: Verdana , \"Bitstream Vera Sans\" , Arial Narrow, sans-serif ;\n\n\tfont-size  : 12px;\n}\n\n.nav {\n    margin-left: 20%;\n}\n#main-nav {\n    background-color: red;\n    border: 1px solid #00ff77;\n}\n\ndiv#content\nh1 + p {\n    padding-top: 0;\n    margin-top: 0;\n}\n\n@media all and (min-width: 640px) {\n\t#media-queries-1 { background-color: #0f0; }\n}\n"
        },
        {
          "name": "quick-test.js",
          "type": "blob",
          "size": 2.7451171875,
          "content": "/*! This file exists only for testing a Minify installation. Its content is not used.\n *\n * http://example.org/min/f=min/quick-test.js\n */\n\n/* Finds the lowest common multiple of two numbers */\nfunction LCMCalculator(x, y) { // constructor function\n    var checkInt = function (x) { // inner function\n        if (x % 1 !== 0) {\n            throw new TypeError(x + \" is not an integer\"); // throw an exception\n        }\n        return x;\n    };\n    this.a = checkInt(x);\n    // ^ semicolons are optional\n    this.b = checkInt(y);\n}\n// The prototype of object instances created by a constructor is\n// that constructor's \"prototype\" property.\nLCMCalculator.prototype = { // object literal\n    constructor: LCMCalculator, // when reassigning a prototype, set the constructor property appropriately\n    gcd: function () { // method that calculates the greatest common divisor\n        // Euclidean algorithm:\n        var a = Math.abs(this.a), b = Math.abs(this.b), t;\n        if (a < b) {\n            // swap variables\n            t = b;\n            b = a;\n            a = t;\n        }\n        while (b !== 0) {\n            t = b;\n            b = a % b;\n            a = t;\n        }\n        // Only need to calculate GCD once, so \"redefine\" this method.\n        // (Actually not redefinition - it's defined on the instance itself,\n        // so that this.gcd refers to this \"redefinition\" instead of LCMCalculator.prototype.gcd.)\n        // Also, 'gcd' === \"gcd\", this['gcd'] === this.gcd\n        this['gcd'] = function () {\n            return a;\n        };\n        return a;\n    },\n    // Object property names can be specified by strings delimited by double (\") or single (') quotes.\n    \"lcm\" : function () {\n        // Variable names don't collide with object properties, e.g. |lcm| is not |this.lcm|.\n        // not using |this.a * this.b| to avoid FP precision issues\n        var lcm = this.a / this.gcd() * this.b;\n        // Only need to calculate lcm once, so \"redefine\" this method.\n        this.lcm = function () {\n            return lcm;\n        };\n        return lcm;\n    },\n    toString: function () {\n        return \"LCMCalculator: a = \" + this.a + \", b = \" + this.b;\n    }\n};\n\n//define generic output function; this implementation only works for web browsers\nfunction output(x) {\n    document.write(x + \"<br>\");\n}\n\n// Note: Array's map() and forEach() are defined in JavaScript 1.6.\n// They are used here to demonstrate JavaScript's inherent functional nature.\n[[25, 55], [21, 56], [22, 58], [28, 56]].map(function (pair) { // array literal + mapping function\n    return new LCMCalculator(pair[0], pair[1]);\n}).sort(function (a, b) { // sort with this comparative function\n    return a.lcm() - b.lcm();\n}).forEach(function (obj) {\n    output(obj + \", gcd = \" + obj.gcd() + \", lcm = \" + obj.lcm());\n});"
        },
        {
          "name": "quick-test.less",
          "type": "blob",
          "size": 0.462890625,
          "content": "/*! This file exists only for testing a Minify installation. Its content is not used.\n *\n * http://example.org/min/f=min/quick-test.less\n */\n\n// LESS import statement shares syntax with the CSS import statement.\n// If the file being imported ends in a .less extension, or no extension, then it is treated as a LESS\n// import. Otherwise it is left alone and outputted directly.\n// http://leafo.net/lessphp/docs/#import\n@import \"quick-test.css\";\n\n@import \"quick-testinc.less\";"
        },
        {
          "name": "quick-testinc.less",
          "type": "blob",
          "size": 0.431640625,
          "content": "/*! This file exists only for testing a Minify installation. Its content is not used.\n *\n * http://example.org/min/f=min/quick-test.less\n */\n\n@base: 24px;\n@border-color: #B2B;\n\n.underline { border-bottom: 1px solid green }\n\n#header {\n  color: black;\n  border: 1px solid @border-color + #222222;\n\n  .navigation {\n    font-size: @base / 2;\n    a {\n    .underline;\n    }\n  }\n  .logo {\n    width: 300px;\n    :hover { text-decoration: none }\n  }\n}"
        },
        {
          "name": "server-info.php",
          "type": "blob",
          "size": 4.3828125,
          "content": "<?php\n/**\n * Reports server info useful in configuring the options $min_documentRoot, $min_symlinks,\n * and $min_serveOptions['minApp']['allowDirs'].\n *\n * Change to true to expose this info.\n */\n$enabled = false;\n\n///////////////////////\n\nif (!$enabled) {\n    die('Set $enabled to true to see server info.');\n}\n\nfunction assertTrue($test, $message)\n{\n    if (!$test) {\n        echo \"Warning: $message\\n\";\n    }\n    return (bool)$test;\n}\n\nheader('Content-Type: text/plain');\n\n$file = __FILE__;\n$tmp = sys_get_temp_dir();\n\necho <<<EOD\nCache directory : $tmp\n__FILE__        : $file\nSCRIPT_FILENAME : {$_SERVER['SCRIPT_FILENAME']}\nDOCUMENT_ROOT   : {$_SERVER['DOCUMENT_ROOT']}\nSCRIPT_NAME     : {$_SERVER['SCRIPT_NAME']}\nREQUEST_URI     : {$_SERVER['REQUEST_URI']}\n\n\nEOD;\n\n$noSlash = assertTrue(\n    0 === preg_match('@[\\\\\\\\/]$@', $_SERVER['DOCUMENT_ROOT']),\n    'DOCUMENT_ROOT ends in trailing slash'\n);\n\n$isRealPath = assertTrue(\n    false !== realpath($_SERVER['DOCUMENT_ROOT']),\n    'DOCUMENT_ROOT fails realpath()'\n);\n\n$containsThisFile = assertTrue(\n    0 === strpos(realpath(__FILE__), realpath($_SERVER['DOCUMENT_ROOT'])),\n    'DOCUMENT_ROOT contains this test file'\n);\n\nif (! $noSlash || ! $isRealPath || ! $containsThisFile) {\n    echo \"If you cannot modify DOCUMENT_ROOT, consider setting \\$min_documentRoot in config.php\\n\";\n}\n\nassertTrue(\n    empty($_SERVER['SUBDOMAIN_DOCUMENT_ROOT']),\n    \"\\$_SERVER['SUBDOMAIN_DOCUMENT_ROOT'] is set. You may want to set \\$min_documentRoot to this in config.php\"\n);\n\nassertTrue(\n    realpath(__FILE__) === realpath($_SERVER['DOCUMENT_ROOT'] . '/min/server-info.php'),\n    \"/min/ is not directly inside DOCUMENT_ROOT.\"\n);\n\n// TODO: rework this\n/*\nfunction _test_environment_getHello($url)\n{\n    $fp = fopen($url, 'r', false, stream_context_create(array(\n        'http' => array(\n            'method' => \"GET\",\n            'timeout' => '10',\n            'header' => \"Accept-Encoding: deflate, gzip\\r\\n\",\n        )\n    )));\n    $meta = stream_get_meta_data($fp);\n    $encoding = '';\n    $length = 0;\n    foreach ($meta['wrapper_data'] as $i => $header) {\n        if (preg_match('@^Content-Length:\\\\s*(\\\\d+)$@i', $header, $m)) {\n            $length = $m[1];\n        } elseif (preg_match('@^Content-Encoding:\\\\s*(\\\\S+)$@i', $header, $m)) {\n            if ($m[1] !== 'identity') {\n                $encoding = $m[1];\n            }\n        }\n    }\n    $streamContents = stream_get_contents($fp);\n    fclose($fp);\n\n    if (__FILE__ === realpath($_SERVER['SCRIPT_FILENAME'])) {\n        if ($length != 6) {\n            echo \"\\nReturned content should be 6 bytes and not HTTP encoded.\\n\"\n                . \"Headers returned by: {$url}\\n\\n\";\n            var_export($meta['wrapper_data']);\n            echo \"\\n\\n\";\n        }\n    }\n\n    return array(\n        'length' => $length\n    ,'encoding' => $encoding\n    ,'bytes' => $streamContents\n    );\n}\n\n$thisUrl = 'http://'\n    . $_SERVER['HTTP_HOST'] // avoid redirects when SERVER_NAME doesn't match\n    . ('80' === $_SERVER['SERVER_PORT'] ? '' : \":{$_SERVER['SERVER_PORT']}\")\n    . dirname($_SERVER['REQUEST_URI'])\n    . '/test_environment.php';\n\n$oc = @file_get_contents($thisUrl . '?getOutputCompression=1');\n\nif (false === $oc || ! preg_match('/^[01]$/', $oc)) {\n    echo \"!---: environment : Local HTTP request failed. Testing cannot continue.\\n\";\n    return;\n}\nif ('1' === $oc) {\n    echo \"!---: environment : zlib.output_compression is enabled in php.ini\"\n        . \" or .htaccess.\\n\";\n}\n\n$testJs = _test_environment_getHello($thisUrl . '?hello=js');\n$passed = assertTrue(\n    $testJs['length'] == 6\n    ,'environment : PHP/server should not auto-encode application/x-javascript output'\n);\n\n$testCss = _test_environment_getHello($thisUrl . '?hello=css');\n$passed = $passed && assertTrue(\n        $testCss['length'] == 6\n        ,'environment : PHP/server should not auto-encode text/css output'\n    );\n\n$testHtml = _test_environment_getHello($thisUrl . '?hello=html');\n$passed = $passed && assertTrue(\n        $testHtml['length'] == 6\n        ,'environment : PHP/server should not auto-encode text/html output'\n    );\n\nif (! $passed) {\n    $testFake = _test_environment_getHello($thisUrl . '?hello=faketype');\n    if ($testFake['length'] == 6) {\n        echo \"      environment : Server does not auto-encode arbitrary types. This\\n\"\n            . \"                    may indicate that the auto-encoding is caused by Apache's\\n\"\n            . \"                    AddOutputFilterByType.\";\n    }\n}\n*/\n"
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils.php",
          "type": "blob",
          "size": 2.5712890625,
          "content": "<?php\n/**\n * Utility functions for generating URIs in HTML files\n *\n * @warning These functions execute min/groupsConfig.php, sometimes multiple times.\n * You must make sure that functions are not redefined, and if your use custom sources,\n * you must require_once __DIR__ . '/lib/Minify/Source.php' so that\n * class is available.\n *\n * @package Minify\n */\n\nrequire __DIR__ . '/bootstrap.php';\n\n/*\n * Get an HTML-escaped Minify URI for a group or set of files. By default, URIs\n * will contain timestamps to allow far-future Expires headers.\n *\n * <code>\n * <link rel=\"stylesheet\" type=\"text/css\" href=\"<?= Minify_getUri('css'); ?>\" />\n * <script src=\"<?= Minify_getUri('js'); ?>\"></script>\n * <script src=\"<?= Minify_getUri(array(\n *      '//scripts/file1.js'\n *      ,'//scripts/file2.js'\n * )); ?>\"></script>\n * </code>\n *\n * @param mixed $keyOrFiles a group key or array of file paths/URIs\n * @param array $opts options:\n *   'farExpires' : (default true) append a modified timestamp for cache revving\n *   'debug' : (default false) append debug flag\n *   'charset' : (default 'UTF-8') for htmlspecialchars\n *   'minAppUri' : (default '/min') URI of min directory\n *   'rewriteWorks' : (default true) does mod_rewrite work in min app?\n *   'groupsConfigFile' : specify if different\n * @return string\n */\nfunction Minify_getUri($keyOrFiles, $opts = array())\n{\n    return Minify_HTML_Helper::getUri($keyOrFiles, $opts);\n}\n\n\n/**\n * Get the last modification time of several source js/css files. If you're\n * caching the output of Minify_getUri(), you might want to know if one of the\n * dependent source files has changed so you can update the HTML.\n *\n * Since this makes a bunch of stat() calls, you might not want to check this\n * on every request.\n *\n * @param array $keysAndFiles group keys and/or file paths/URIs.\n * @return int latest modification time of all given keys/files\n */\nfunction Minify_mtime($keysAndFiles, $groupsConfigFile = null)\n{\n    $gc = null;\n    if (! $groupsConfigFile) {\n        $groupsConfigFile = Minify_HTML_Helper::app()->groupsConfigPath;\n    }\n    $sources = array();\n    foreach ($keysAndFiles as $keyOrFile) {\n        if (is_object($keyOrFile)\n            || 0 === strpos($keyOrFile, '/')\n            || 1 === strpos($keyOrFile, ':\\\\')) {\n            // a file/source obj\n            $sources[] = $keyOrFile;\n        } else {\n            if (! $gc) {\n                $gc = (require $groupsConfigFile);\n            }\n            foreach ($gc[$keyOrFile] as $source) {\n                $sources[] = $source;\n            }\n        }\n    }\n    return Minify_HTML_Helper::getLastModified($sources);\n}\n"
        }
      ]
    }
  ]
}