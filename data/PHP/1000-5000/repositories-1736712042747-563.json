{
  "metadata": {
    "timestamp": 1736712042747,
    "page": 563,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "maennchen/ZipStream-PHP",
      "stars": 1790,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2861328125,
          "content": "root = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\n\n[*.{yml,md,xml}]\nindent_style = space\nindent_size = 2\n\n[*.{rst,php}]\nindent_style = space\nindent_size = 4\n\n[composer.json]\nindent_style = space\nindent_size = 2\n\n[composer.lock]\nindent_style = space\nindent_size = 4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.142578125,
          "content": ".gitignore     text eol=lf\n.gitattributes text eol=lf\n*.md       text eol=lf\n*.php      text eol=lf\n*.yml      text eol=lf\n*.xml      text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.15234375,
          "content": "/composer.lock\n/cov\n/coverage.clover.xml\n/docs\n.idea\n/.php-cs-fixer.cache\n/.phpdoc/cache\n/.phpunit.result.cache\n/phpunit.xml\n/.phpunit.cache\n/tools\n/vendor\n"
        },
        {
          "name": ".phive",
          "type": "tree",
          "content": null
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 2.1259765625,
          "content": "<?php\n\ndeclare(strict_types=1);\n\n/**\n * PHP-CS-Fixer config for ZipStream-PHP\n * @author Nicolas CARPi <nico-git@deltablot.email>\n * @copyright 2022 Nicolas CARPi\n * @see https://github.com/maennchen/ZipStream-PHP\n * @license MIT\n * @package maennchen/ZipStream-PHP\n */\n\nuse PhpCsFixer\\Config;\nuse PhpCsFixer\\Finder;\n\n$finder = Finder::create()\n    ->exclude('.github')\n    ->exclude('.phpdoc')\n    ->exclude('docs')\n    ->exclude('tools')\n    ->exclude('vendor')\n    ->in(__DIR__);\n\n$config = new Config();\nreturn $config->setRules([\n        '@PER' => true,\n        '@PER:risky' => true,\n        '@PHP82Migration' => true,\n        '@PHPUnit84Migration:risky' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'class_attributes_separation' => true,\n        'declare_strict_types' => true,\n        'dir_constant' => true,\n        'is_null' => true,\n        'no_homoglyph_names' => true,\n        'no_null_property_initialization' => true,\n        'no_php4_constructor' => true,\n        'no_unused_imports' => true,\n        'no_useless_else' => true,\n        'non_printable_character' => true,\n        'ordered_imports' => true,\n        'ordered_class_elements' => true,\n        'php_unit_construct' => true,\n        'pow_to_exponentiation' => true,\n        'psr_autoloading' => true,\n        'random_api_migration' => true,\n        'return_assignment' => true,\n        'self_accessor' => true,\n        'semicolon_after_instruction' => true,\n        'short_scalar_cast' => true,\n        'simplified_null_return' => true,\n        'single_class_element_per_statement' => true,\n        'single_line_comment_style' => true,\n        'single_quote' => true,\n        'space_after_semicolon' => true,\n        'standardize_not_equals' => true,\n        'strict_param' => true,\n        'ternary_operator_spaces' => true,\n        'trailing_comma_in_multiline' => true,\n        'trim_array_spaces' => true,\n        'unary_operator_spaces' => true,\n        'global_namespace_import' => [\n            'import_classes' => true,\n            'import_functions' => true,\n            'import_constants' => true,\n        ],\n    ])\n    ->setFinder($finder)\n    ->setRiskyAllowed(true);\n"
        },
        {
          "name": ".phpdoc",
          "type": "tree",
          "content": null
        },
        {
          "name": ".tool-versions",
          "type": "blob",
          "size": 0.009765625,
          "content": "php 8.3.1\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.2353515625,
          "content": "MIT License\n\nCopyright (C) 2007-2009 Paul Duncan <pabs@pablotron.org>\nCopyright (C) 2014 Jonatan MÃ¤nnchen <jonatan@maennchen.ch>\nCopyright (C) 2014 Jesse G. Donat <donatj@gmail.com>\nCopyright (C) 2018 Nicolas CARPi <nicolas.carpi@curie.fr>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.7783203125,
          "content": "# ZipStream-PHP\n\n[![Main Branch](https://github.com/maennchen/ZipStream-PHP/actions/workflows/branch_main.yml/badge.svg)](https://github.com/maennchen/ZipStream-PHP/actions/workflows/branch_main.yml)\n[![Coverage Status](https://coveralls.io/repos/github/maennchen/ZipStream-PHP/badge.svg?branch=main)](https://coveralls.io/github/maennchen/ZipStream-PHP?branch=main)\n[![Latest Stable Version](https://poser.pugx.org/maennchen/zipstream-php/v/stable)](https://packagist.org/packages/maennchen/zipstream-php)\n[![Total Downloads](https://poser.pugx.org/maennchen/zipstream-php/downloads)](https://packagist.org/packages/maennchen/zipstream-php)\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/9524/badge)](https://www.bestpractices.dev/projects/9524)\n[![OpenSSF Scorecard](https://api.scorecard.dev/projects/github.com/maennchen/ZipStream-PHP/badge)](https://scorecard.dev/viewer/?uri=github.com/maennchen/ZipStream-PHP)\n\n## Unstable Branch\n\nThe `main` branch is not stable. Please see the\n[releases](https://github.com/maennchen/ZipStream-PHP/releases) for a stable\nversion.\n\n## Overview\n\nA fast and simple streaming zip file downloader for PHP. Using this library will\nsave you from having to write the Zip to disk. You can directly send it to the\nuser, which is much faster. It can work with S3 buckets or any PSR7 Stream.\n\nPlease see the [LICENSE](LICENSE) file for licensing and warranty information.\n\n## Installation\n\nSimply add a dependency on maennchen/zipstream-php to your project's\n`composer.json` file if you use Composer to manage the dependencies of your\nproject. Use following command to add the package to your project's dependencies:\n\n```bash\ncomposer require maennchen/zipstream-php\n```\n\n## Usage\n\nFor detailed instructions, please check the\n[Documentation](https://maennchen.github.io/ZipStream-PHP/).\n\n```php\n// Autoload the dependencies\nrequire 'vendor/autoload.php';\n\n// create a new zipstream object\n$zip = new ZipStream\\ZipStream(\n    outputName: 'example.zip',\n\n    // enable output of HTTP headers\n    sendHttpHeaders: true,\n);\n\n// create a file named 'hello.txt'\n$zip->addFile(\n    fileName: 'hello.txt',\n    data: 'This is the contents of hello.txt',\n);\n\n// add a file named 'some_image.jpg' from a local file 'path/to/image.jpg'\n$zip->addFileFromPath(\n    fileName: 'some_image.jpg',\n    path: 'path/to/image.jpg',\n);\n\n// finish the zip stream\n$zip->finish();\n```\n\n## Upgrade to version 3.0.0\n\n### General\n\n- Minimum PHP Version: `8.1`\n- Only 64bit Architecture is supported.\n- The class `ZipStream\\Option\\Method` has been replaced with the enum\n  `ZipStream\\CompressionMethod`.\n- Most clases have been flagged as `@internal` and should not be used from the\n  outside.\n  If you're using internal resources to extend this library, please open an\n  issue so that a clean interface can be added & published.\n  The externally available classes & enums are:\n  - `ZipStream\\CompressionMethod`\n  - `ZipStream\\Exception*`\n  - `ZipStream\\ZipStream`\n\n### Archive Options\n\n- The class `ZipStream\\Option\\Archive` has been replaced in favor of named\n  arguments in the `ZipStream\\ZipStream` constuctor.\n- The archive options `largeFileSize` & `largeFileMethod` has been removed. If\n  you want different `compressionMethods` based on the file size, you'll have to\n  implement this yourself.\n- The archive option `httpHeaderCallback` changed the type from `callable` to\n  `Closure`.\n- The archive option `zeroHeader` has been replaced with the option\n  `defaultEnableZeroHeader` and can be overridden for every file. Its default\n  value changed from `false` to `true`.\n- The archive option `statFiles` was removed since the library no longer checks\n  filesizes this way.\n- The archive option `deflateLevel` has been replaced with the option\n  `defaultDeflateLevel` and can be overridden for every file.\n- The first argument (`name`) of the `ZipStream\\ZipStream` constuctor has been\n  replaced with the named argument `outputName`.\n- Headers are now also sent if the `outputName` is empty. If you do not want to\n  automatically send http headers, set `sendHttpHeaders` to `false`.\n\n### File Options\n\n- The class `ZipStream\\Option\\File` has been replaced in favor of named\n  arguments in the `ZipStream\\ZipStream->addFile*` functions.\n- The file option `method` has been renamed to `compressionMethod`.\n- The file option `time` has been renamed to `lastModificationDateTime`.\n- The file option `size` has been renamed to `maxSize`.\n\n## Upgrade to version 2.0.0\n\nhttps://github.com/maennchen/ZipStream-PHP/tree/2.0.0#upgrade-to-version-200\n\n## Upgrade to version 1.0.0\n\nhttps://github.com/maennchen/ZipStream-PHP/tree/2.0.0#upgrade-to-version-100\n\n## Contributing\n\nZipStream-PHP is a collaborative project. Please take a look at the\n[.github/CONTRIBUTING.md](.github/CONTRIBUTING.md) file.\n\n## Version Support\n\nVersions are supported according to the table below.\n\nPlease do not open any pull requests contradicting the current version support\nstatus.\n\nCareful: Always check the `README` on `main` for up-to-date information.\n\n| Version | New Features | Bugfixes | Security |\n|---------|--------------|----------|----------|\n| *3*     | â            | â        | â        |\n| *2*     | â            | â        | â        |\n| *1*     | â            | â        | â        |\n| *0*     | â            | â        | â        |\n\nThis library aligns itself with the PHP core support. New features and bugfixes\nwill only target PHP versions according to their current status.\n\nSee: https://www.php.net/supported-versions.php\n\n## About the Authors\n\n- Paul Duncan <pabs@pablotron.org> - https://pablotron.org/\n- Jonatan MÃ¤nnchen <jonatan@maennchen.ch> - https://maennchen.dev\n- Jesse G. Donat <donatj@gmail.com> - https://donatstudios.com\n- Nicolas CARPi <nico-git@deltablot.email> - https://www.deltablot.com\n- Nik Barham <nik@brokencube.co.uk> - https://www.brokencube.co.uk\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.326171875,
          "content": "{\n  \"name\": \"maennchen/zipstream-php\",\n  \"description\": \"ZipStream is a library for dynamically streaming dynamic zip files from PHP without writing to the disk at all on the server.\",\n  \"keywords\": [\"zip\", \"stream\"],\n  \"type\": \"library\",\n  \"license\": \"MIT\",\n  \"authors\": [{\n      \"name\": \"Paul Duncan\",\n      \"email\": \"pabs@pablotron.org\"\n    },\n    {\n      \"name\": \"Jonatan MÃ¤nnchen\",\n      \"email\": \"jonatan@maennchen.ch\"\n    },\n    {\n      \"name\": \"Jesse Donat\",\n      \"email\": \"donatj@gmail.com\"\n    },\n    {\n      \"name\": \"AndrÃ¡s KolesÃ¡r\",\n      \"email\": \"kolesar@kolesar.hu\"\n    }\n  ],\n  \"require\": {\n    \"php-64bit\": \"^8.1\",\n    \"ext-mbstring\": \"*\",\n    \"ext-zlib\": \"*\"\n  },\n  \"require-dev\": {\n    \"phpunit/phpunit\": \"^10.0\",\n    \"guzzlehttp/guzzle\": \"^7.5\",\n    \"ext-zip\": \"*\",\n    \"mikey179/vfsstream\": \"^1.6\",\n    \"php-coveralls/php-coveralls\": \"^2.5\",\n    \"friendsofphp/php-cs-fixer\": \"^3.16\",\n    \"vimeo/psalm\": \"^5.0\"\n  },\n  \"suggest\": {\n    \"psr/http-message\": \"^2.0\",\n    \"guzzlehttp/psr7\": \"^2.4\"\n  },\n  \"scripts\": {\n    \"format\": \"php-cs-fixer fix\",\n    \"test\": [\n      \"@test:unit\",\n      \"@test:formatted\",\n      \"@test:lint\"\n    ],\n    \"test:unit\": \"phpunit --coverage-clover=coverage.clover.xml --coverage-html cov\",\n    \"test:unit:slow\": \"@test:unit --group slow\",\n    \"test:unit:fast\": \"@test:unit --exclude-group slow\",\n    \"test:formatted\": \"@format --dry-run --stop-on-violation --using-cache=no\",\n    \"test:lint\": \"psalm --stats --show-info=true --find-unused-psalm-suppress\",\n    \"coverage:report\": \"php-coveralls --coverage_clover=coverage.clover.xml --json_path=coveralls-upload.json --insecure\",\n    \"install:tools\": \"phive install --trust-gpg-keys 0x67F861C3D889C656 --trust-gpg-keys 0x8AC0BAA79732DD42\",\n    \"docs:generate\": \"tools/phpdocumentor --sourcecode\"\n  },\n  \"autoload\": {\n    \"psr-4\": {\n      \"ZipStream\\\\\": \"src/\"\n    }\n  },\n  \"autoload-dev\": {\n    \"psr-4\": { \"ZipStream\\\\Test\\\\\": \"test/\" }\n  },\n  \"archive\": {\n    \"exclude\": [\n      \"/composer.lock\",\n      \"/docs\",\n      \"/.gitattributes\",\n      \"/.github\",\n      \"/.gitignore\",\n      \"/guides\",\n      \"/.phive\",\n      \"/.php-cs-fixer.cache\",\n      \"/.php-cs-fixer.dist.php\",\n      \"/.phpdoc\",\n      \"/phpdoc.dist.xml\",\n      \"/.phpunit.result.cache\",\n      \"/phpunit.xml.dist\",\n      \"/psalm.xml\",\n      \"/test\",\n      \"/tools\",\n      \"/.tool-versions\",\n      \"/vendor\"\n    ]\n  }\n}\n"
        },
        {
          "name": "guides",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpdoc.dist.xml",
          "type": "blob",
          "size": 1.259765625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<phpdocumentor\n        configVersion=\"3\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xmlns=\"https://www.phpdoc.org\"\n        xsi:noNamespaceSchemaLocation=\"https://raw.githubusercontent.com/phpDocumentor/phpDocumentor/master/data/xsd/phpdoc.xsd\"\n>\n    <title>ð¾ ZipStream-PHP</title>\n    <paths>\n        <output>docs</output>\n    </paths>\n    <version number=\"3.0.0\">\n        <folder>latest</folder>\n        <api>\n            <source dsn=\".\">\n                <path>src</path>\n            </source>\n            <output>api</output>\n            <ignore hidden=\"true\" symlinks=\"true\">\n                <path>tests/**/*</path>\n                <path>vendor/**/*</path>\n            </ignore>\n            <extensions>\n                <extension>php</extension>\n            </extensions>\n            <visibility>public</visibility>\n            <default-package-name>ZipStream</default-package-name>\n            <include-source>true</include-source>\n        </api>\n        <guide>\n            <source dsn=\".\">\n                <path>guides</path>\n            </source>\n            <output>guide</output>\n        </guide>\n    </version>\n    <setting name=\"guides.enabled\" value=\"true\"/>\n    <template name=\"default\" />\n</phpdocumentor>"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.466796875,
          "content": "<?xml version=\"1.0\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" bootstrap=\"test/bootstrap.php\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.1/phpunit.xsd\" cacheDirectory=\".phpunit.cache\">\n  <coverage/>\n  <testsuites>\n    <testsuite name=\"Application\">\n      <directory>test</directory>\n    </testsuite>\n  </testsuites>\n  <logging/>\n  <source>\n    <include>\n      <directory suffix=\".php\">src</directory>\n    </include>\n  </source>\n</phpunit>\n"
        },
        {
          "name": "psalm.xml",
          "type": "blob",
          "size": 0.876953125,
          "content": "<?xml version=\"1.0\"?>\n<psalm\n    errorLevel=\"1\"\n    resolveFromConfigFile=\"true\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"https://getpsalm.org/schema/config\"\n    xsi:schemaLocation=\"https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd\"\n    findUnusedBaselineEntry=\"true\"\n    findUnusedCode=\"true\"\n    phpVersion=\"8.1.0\"\n>\n    <!-- TODO: Update phpVersion when raising the minimum supported version -->\n    <projectFiles>\n        <directory name=\"src\" />\n        <ignoreFiles>\n            <directory name=\"vendor\" />\n        </ignoreFiles>\n    </projectFiles>\n    <issueHandlers>\n        <!-- Turn off dead code warnings for externally called functions -->\n        <PossiblyUnusedProperty errorLevel=\"suppress\" />\n        <PossiblyUnusedMethod errorLevel=\"suppress\" />\n        <PossiblyUnusedReturnValue errorLevel=\"suppress\" />\n    </issueHandlers>\n</psalm>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}