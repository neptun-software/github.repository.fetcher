{
  "metadata": {
    "timestamp": 1736711823337,
    "page": 121,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jsonrainbow/json-schema",
      "stars": 3561,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2646484375,
          "content": "/.github export-ignore\n/demo export-ignore\n/docs export-ignore\n/tests export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/.php-cs-fixer.dist export-ignore\n/phpstan-baseline.neon export-ignore\n/phpstan.neon export-ignore\n/phpunit.xml.dist export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1259765625,
          "content": "/vendor\n/bin\n!/bin/validate-json\ncoverage\n.buildpath\n.project\n.settings\n.php_cs\n.php_cs.cache\ncomposer.lock\ndocs-api\nphpunit.xml\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 0.9833984375,
          "content": "<?php\n\n$finder = new PhpCsFixer\\Finder();\n$config = new PhpCsFixer\\Config('json-schema');\n$finder->in(__DIR__);\n\n/* Based on ^2.1 of php-cs-fixer */\n$config\n    ->setRules([\n        // default\n        '@PSR2' => true,\n        '@Symfony' => true,\n        // additionally\n        'array_syntax' => ['syntax' => 'short'],\n        'binary_operator_spaces' => false,\n        'concat_space' => ['spacing' => 'one'],\n        'increment_style' => false,\n        'no_superfluous_phpdoc_tags' => false,\n        'no_useless_else' => true,\n        'no_useless_return' => true,\n        'ordered_imports' => true,\n        'phpdoc_no_package' => false,\n        'phpdoc_order' => true,\n        'phpdoc_summary' => false,\n        'phpdoc_types_order' => ['null_adjustment' => 'none', 'sort_algorithm' => 'none'],\n        'simplified_null_return' => false,\n        'single_line_throw' => false,\n        'trailing_comma_in_multiline' => false,\n        'yoda_style' => false,\n    ])\n    ->setFinder($finder)\n;\n\nreturn $config;\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 7.2421875,
          "content": "# CHANGELOG\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.1.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n### Added\n- Add return types in the test suite ([#748](https://github.com/jsonrainbow/json-schema/pull/748))\n- Add test case for validating array of strings with objects ([#704](https://github.com/jsonrainbow/json-schema/pull/704))\n\n### Fixed\n- Correct misconfigured mocks in JsonSchema\\Tests\\Uri\\UriRetrieverTest ([#741](https://github.com/jsonrainbow/json-schema/pull/741))\n- Fix pugx badges in README ([#742](https://github.com/jsonrainbow/json-schema/pull/742))\n- Add missing property in UriResolverTest ([#743](https://github.com/jsonrainbow/json-schema/pull/743))\n- Correct casing of paths used in tests ([#745](https://github.com/jsonrainbow/json-schema/pull/745))\n- Resolve deprecations of optional parameter ([#752](https://github.com/jsonrainbow/json-schema/pull/752))\n- Fix wrong combined paths when traversing upward, fixes #557 ([#652](https://github.com/jsonrainbow/json-schema/pull/652))\n- Correct PHPStan baseline ([#764](https://github.com/jsonrainbow/json-schema/pull/764))\n- Correct spacing issue in `README.md` ([#763](https://github.com/jsonrainbow/json-schema/pull/763))\n\n### Changed\n- Bump to minimum PHP 7.2 ([#746](https://github.com/jsonrainbow/json-schema/pull/746))\n- Replace traditional syntax array with short syntax array ([#747](https://github.com/jsonrainbow/json-schema/pull/747))\n- Increase phpstan level to 8 with baseline to swallow existing errors ([#673](https://github.com/jsonrainbow/json-schema/pull/673))\n- Add ext-json to composer.json to ensure JSON extension available  ([#759](https://github.com/jsonrainbow/json-schema/pull/759))\n- Add visibility modifiers to class constants ([#757](https://github.com/jsonrainbow/json-schema/pull/757))\n- Include PHP 8.4 in workflow ([#765](https://github.com/jsonrainbow/json-schema/pull/765))\n- Add `strict_types=1` to all classes in ./src ([#758](https://github.com/jsonrainbow/json-schema/pull/758))\n- Raise minimum level of marc-mabe/php-enum ([#766](https://github.com/jsonrainbow/json-schema/pull/766))\n- Cleanup test from @param annotations ([#768](https://github.com/jsonrainbow/json-schema/pull/768))\n\n## [6.0.0] - 2024-07-30\n### Added\n- Add URI translation, package:// URI scheme & bundle spec schemas ([#362](https://github.com/jsonrainbow/json-schema/pull/362))\n- Add quiet option ([#382](https://github.com/jsonrainbow/json-schema/pull/382))\n- Add option to disable validation of \"format\" constraint ([#383](https://github.com/jsonrainbow/json-schema/pull/383))\n- Add more unit tests ([#366](https://github.com/jsonrainbow/json-schema/pull/366))\n- Reset errors prior to validation ([#386](https://github.com/jsonrainbow/json-schema/pull/386))\n- Allow the schema to be an associative array ([#389](https://github.com/jsonrainbow/json-schema/pull/389))\n- Enable FILTER_FLAG_EMAIL_UNICODE for email format if present ([#398](https://github.com/jsonrainbow/json-schema/pull/398))\n- Add enum wrapper ([#375](https://github.com/jsonrainbow/json-schema/pull/375))\n- Add option to validate the schema ([#357](https://github.com/jsonrainbow/json-schema/pull/357))\n- Add support for \"const\" ([#507](https://github.com/jsonrainbow/json-schema/pull/507))\n- Added note about supported Draft versions ([#620](https://github.com/jsonrainbow/json-schema/pull/620))\n- Add linting GH action\n### Changed\n- Centralize errors ([#364](https://github.com/jsonrainbow/json-schema/pull/364))\n- Revert \"An email is a string, not much else.\" ([#373](https://github.com/jsonrainbow/json-schema/pull/373))\n- Improvements to type coercion ([#384](https://github.com/jsonrainbow/json-schema/pull/384))\n- Don't add a file:// prefix to URI that already have a scheme ([#455](https://github.com/jsonrainbow/json-schema/pull/455))\n- Enhancement: Normalize` composer.json` ([#505](https://github.com/jsonrainbow/json-schema/pull/505))\n- Correct echo `sprintf` for `printf` ([#634](https://github.com/jsonrainbow/json-schema/pull/634))\n- Streamline validation of Regex ([#650](https://github.com/jsonrainbow/json-schema/pull/650))\n- Streamline validation of patternProperties Regex ([#653](https://github.com/jsonrainbow/json-schema/pull/653))\n- Switch to GH Actions ([#670](https://github.com/jsonrainbow/json-schema/pull/670))\n- Updated PHPStan\n- Remove unwanted whitespace ([#700](https://github.com/jsonrainbow/json-schema/pull/700))\n- Bump to v4 versions of GitHub actions ([#722](https://github.com/jsonrainbow/json-schema/pull/722))\n- Update references to jsonrainbow ([#725](https://github.com/jsonrainbow/json-schema/pull/725))\n### Deprecated\n- Mark check() and coerce() as deprecated ([#476](https://github.com/jsonrainbow/json-schema/pull/476))\n### Removed\n- Remove stale files from #357 (obviated by #362) ([#400](https://github.com/jsonrainbow/json-schema/pull/400))\n- Remove unnecessary fallbacks when args accept null\n- Removed unused variable in UndefinedConstraint ([#698](https://github.com/jsonrainbow/json-schema/pull/698))\n- Remove dead block of code ([#710](https://github.com/jsonrainbow/json-schema/pull/710))\n### Fixed\n- Add use line for InvalidArgumentException ([#370](https://github.com/jsonrainbow/json-schema/pull/370))\n- Add use line for InvalidArgumentException & adjust scope ([#372](https://github.com/jsonrainbow/json-schema/pull/372))\n- Add provided schema under a dummy / internal URI (fixes #376) ([#378](https://github.com/jsonrainbow/json-schema/pull/378))\n- Don't throw exceptions until after checking anyOf / oneOf ([#394](https://github.com/jsonrainbow/json-schema/pull/394))\n- Fix infinite recursion on some schemas when setting defaults (#359) ([#365](https://github.com/jsonrainbow/json-schema/pull/365))\n- Fix autoload to work properly with composer dependencies ([#401](https://github.com/jsonrainbow/json-schema/pull/401))\n- Ignore $ref siblings & abort on infinite-loop references ([#437](https://github.com/jsonrainbow/json-schema/pull/437))\n- Don't cast multipleOf to be an integer for the error message ([#471](https://github.com/jsonrainbow/json-schema/pull/471))\n- Strict Enum/Const Object Checking ([#518](https://github.com/jsonrainbow/json-schema/pull/518))\n- Return original value when no cast ([#535](https://github.com/jsonrainbow/json-schema/pull/535))\n- Allow `marc-mabe/php-enum` v2.x and v3.x. ([#464](https://github.com/jsonrainbow/json-schema/pull/464))\n- Deprecated warning message on composer install command ([#614](https://github.com/jsonrainbow/json-schema/pull/614))\n- Allow `marc-mabe/php-enum` v4.x ([#629](https://github.com/jsonrainbow/json-schema/pull/629))\n- Fixed method convertJsonPointerIntoPropertyPath in wrong class ([#655](https://github.com/jsonrainbow/json-schema/pull/655))\n- Fix type validation failing for \"any\" and false-y type wording ([#686](https://github.com/jsonrainbow/json-schema/pull/686))\n- Correct code style\n- Fix: Clean up `.gitattributes` ([#687](https://github.com/jsonrainbow/json-schema/pull/687))\n- Fix: Order `friendsofphp/php-cs-fixer` rules ([#688](https://github.com/jsonrainbow/json-schema/pull/688))\n- HTTP to HTTPS redirection breaks remote reference resolution ([#709](https://github.com/jsonrainbow/json-schema/pull/709))\n- Corrected several typos and code style issues"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.03125,
          "content": "MIT License\n\nCopyright (c) 2016\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.939453125,
          "content": "# JSON Schema for PHP\n\n[![Build Status](https://github.com/jsonrainbow/json-schema/actions/workflows/continuous-integration.yml/badge.svg)](https://github.com/jsonrainbow/json-schema/actions)\n[![Latest Stable Version](https://poser.pugx.org/justinrainbow/json-schema/v/stable)](https://packagist.org/packages/justinrainbow/json-schema)\n[![Total Downloads](https://poser.pugx.org/justinrainbow/json-schema/downloads)](https://packagist.org/packages/justinrainbow/json-schema/stats)\n\nA PHP Implementation for validating `JSON` Structures against a given `Schema` with support for `Schemas` of Draft-3 or Draft-4. Features of newer Drafts might not be supported. See [Table of All Versions of Everything](https://json-schema.org/specification-links.html#table-of-all-versions-of-everything) to get an overview of all existing Drafts.\n\nSee [json-schema](http://json-schema.org/) for more details.\n\n## Installation\n\n### Library\n\n```bash\ngit clone https://github.com/jsonrainbow/json-schema.git\n```\n\n### Composer\n\n[Install PHP Composer](https://getcomposer.org/doc/00-intro.md)\n\n```bash\ncomposer require justinrainbow/json-schema\n```\n\n## Usage\n\nFor a complete reference see [Understanding JSON Schema](https://json-schema.org/understanding-json-schema/).\n\n__Note:__ features of Drafts newer than Draft-4 might not be supported!\n\n### Basic usage\n\n```php\n<?php\n\n$data = json_decode(file_get_contents('data.json'));\n\n// Validate\n$validator = new JsonSchema\\Validator;\n$validator->validate($data, (object)['$ref' => 'file://' . realpath('schema.json')]);\n\nif ($validator->isValid()) {\n    echo \"The supplied JSON validates against the schema.\\n\";\n} else {\n    echo \"JSON does not validate. Violations:\\n\";\n    foreach ($validator->getErrors() as $error) {\n        printf(\"[%s] %s\\n\", $error['property'], $error['message']);\n    }\n}\n```\n\n### Type coercion\n\nIf you're validating data passed to your application via HTTP, you can cast strings and booleans to\nthe expected types defined by your schema:\n\n```php\n<?php\n\nuse JsonSchema\\SchemaStorage;\nuse JsonSchema\\Validator;\nuse JsonSchema\\Constraints\\Factory;\nuse JsonSchema\\Constraints\\Constraint;\n\n$request = (object)[\n    'processRefund'=>\"true\",\n    'refundAmount'=>\"17\"\n];\n\n$validator->validate(\n    $request, (object) [\n        \"type\"=>\"object\",\n        \"properties\"=>(object)[\n            \"processRefund\"=>(object)[\n                \"type\"=>\"boolean\"\n            ],\n            \"refundAmount\"=>(object)[\n                \"type\"=>\"number\"\n            ]\n        ]\n    ],\n    Constraint::CHECK_MODE_COERCE_TYPES\n); // validates!\n\nis_bool($request->processRefund); // true\nis_int($request->refundAmount); // true\n```\n\nA shorthand method is also available:\n```PHP\n$validator->coerce($request, $schema);\n// equivalent to $validator->validate($data, $schema, Constraint::CHECK_MODE_COERCE_TYPES);\n```\n\n### Default values\n\nIf your schema contains default values, you can have these automatically applied during validation:\n\n```php\n<?php\n\nuse JsonSchema\\Validator;\nuse JsonSchema\\Constraints\\Constraint;\n\n$request = (object)[\n    'refundAmount'=>17\n];\n\n$validator = new Validator();\n\n$validator->validate(\n    $request,\n    (object)[\n        \"type\"=>\"object\",\n        \"properties\"=>(object)[\n            \"processRefund\"=>(object)[\n                \"type\"=>\"boolean\",\n                \"default\"=>true\n            ]\n        ]\n    ],\n    Constraint::CHECK_MODE_APPLY_DEFAULTS\n); //validates, and sets defaults for missing properties\n\nis_bool($request->processRefund); // true\n$request->processRefund; // true\n```\n\n### With inline references\n\n```php\n<?php\n\nuse JsonSchema\\SchemaStorage;\nuse JsonSchema\\Validator;\nuse JsonSchema\\Constraints\\Factory;\n\n$jsonSchema = <<<'JSON'\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"data\": {\n            \"oneOf\": [\n                { \"$ref\": \"#/definitions/integerData\" },\n                { \"$ref\": \"#/definitions/stringData\" }\n            ]\n        }\n    },\n    \"required\": [\"data\"],\n    \"definitions\": {\n        \"integerData\" : {\n            \"type\": \"integer\",\n            \"minimum\" : 0\n        },\n        \"stringData\" : {\n            \"type\": \"string\"\n        }\n    }\n}\nJSON;\n\n// Schema must be decoded before it can be used for validation\n$jsonSchemaObject = json_decode($jsonSchema);\n\n// The SchemaStorage can resolve references, loading additional schemas from file as needed, etc.\n$schemaStorage = new SchemaStorage();\n\n// This does two things:\n// 1) Mutates $jsonSchemaObject to normalize the references (to file://mySchema#/definitions/integerData, etc)\n// 2) Tells $schemaStorage that references to file://mySchema... should be resolved by looking in $jsonSchemaObject\n$schemaStorage->addSchema('file://mySchema', $jsonSchemaObject);\n\n// Provide $schemaStorage to the Validator so that references can be resolved during validation\n$jsonValidator = new Validator(new Factory($schemaStorage));\n\n// JSON must be decoded before it can be validated\n$jsonToValidateObject = json_decode('{\"data\":123}');\n\n// Do validation (use isValid() and getErrors() to check the result)\n$jsonValidator->validate($jsonToValidateObject, $jsonSchemaObject);\n```\n\n### Configuration Options\nA number of flags are available to alter the behavior of the validator. These can be passed as the\nthird argument to `Validator::validate()`, or can be provided as the third argument to\n`Factory::__construct()` if you wish to persist them across multiple `validate()` calls.\n\n| Flag | Description |\n|------|-------------|\n| `Constraint::CHECK_MODE_NORMAL` | Validate in 'normal' mode - this is the default |\n| `Constraint::CHECK_MODE_TYPE_CAST` | Enable fuzzy type checking for associative arrays and objects |\n| `Constraint::CHECK_MODE_COERCE_TYPES` | Convert data types to match the schema where possible |\n| `Constraint::CHECK_MODE_EARLY_COERCE` | Apply type coercion as soon as possible |\n| `Constraint::CHECK_MODE_APPLY_DEFAULTS` | Apply default values from the schema if not set |\n| `Constraint::CHECK_MODE_ONLY_REQUIRED_DEFAULTS` | When applying defaults, only set values that are required |\n| `Constraint::CHECK_MODE_EXCEPTIONS` | Throw an exception immediately if validation fails |\n| `Constraint::CHECK_MODE_DISABLE_FORMAT` | Do not validate \"format\" constraints |\n| `Constraint::CHECK_MODE_VALIDATE_SCHEMA` | Validate the schema as well as the provided document |\n\nPlease note that using `CHECK_MODE_COERCE_TYPES` or `CHECK_MODE_APPLY_DEFAULTS` will modify your\noriginal data.\n\n`CHECK_MODE_EARLY_COERCE` has no effect unless used in combination with `CHECK_MODE_COERCE_TYPES`. If\nenabled, the validator will use (and coerce) the first compatible type it encounters, even if the\nschema defines another type that matches directly and does not require coercion.\n\n## Running the tests\n\n```bash\ncomposer test                            # run all unit tests\ncomposer testOnly TestClass              # run specific unit test class\ncomposer testOnly TestClass::testMethod  # run specific unit test method\ncomposer style-check                     # check code style for errors\ncomposer style-fix                       # automatically fix code style errors\n```\n"
        },
        {
          "name": "UPGRADE-6.0.md",
          "type": "blob",
          "size": 0.9609375,
          "content": "UPGRADE FROM 5.3 to 6.0\n=======================\n\n## Introduction\n\nWe are excited to release version 6.0 of our open-source package, featuring major improvements and important updates. This release includes several breaking changes from version 5.3 aimed at enhancing performance, security, and flexibility.\n\nPlease review the following breaking changes carefully and update your implementations to ensure compatibility with version 6.0. This guide provides key modifications and instructions for a smooth transition.\n\nThank you for your support and contributions to the project.\n\n## Errors\n* `constraint` key is no longer the constraint name but contains more information in order to translate violations.\n\n    *Before*\n    ```php\n    foreach ($validator->getErrors() as $error) {\n        echo $error['constraint']; // required\n    }\n    ```\n\n    *After*\n    ```php\n    foreach ($validator->getErrors() as $error) {\n        echo $error['constraint']['name']; // required\n    }\n    ```"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.1728515625,
          "content": "{\n    \"name\": \"justinrainbow/json-schema\",\n    \"type\": \"library\",\n    \"description\": \"A library to validate a json schema.\",\n    \"keywords\": [\n        \"json\",\n        \"schema\"\n    ],\n    \"homepage\": \"https://github.com/jsonrainbow/json-schema\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Bruno Prieto Reis\",\n            \"email\": \"bruno.p.reis@gmail.com\"\n        },\n        {\n            \"name\": \"Justin Rainbow\",\n            \"email\": \"justin.rainbow@gmail.com\"\n        },\n        {\n            \"name\": \"Igor Wiedler\",\n            \"email\": \"igor@wiedler.ch\"\n        },\n        {\n            \"name\": \"Robert Schönthal\",\n            \"email\": \"seroscho@googlemail.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^7.2 || ^8.0\",\n        \"ext-json\": \"*\",\n        \"marc-mabe/php-enum\":\"^4.0\",\n        \"icecave/parity\": \"^3.0\"\n    },\n    \"require-dev\": {\n        \"friendsofphp/php-cs-fixer\": \"~2.2.20 || ~2.19.0\",\n        \"json-schema/json-schema-test-suite\": \"1.2.0\",\n        \"phpunit/phpunit\": \"^8.5\",\n        \"phpspec/prophecy\": \"^1.19\",\n        \"phpstan/phpstan\": \"^1.12\",\n        \"marc-mabe/php-enum-phpstan\": \"^2.0\"\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"6.x-dev\"\n        }\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"JsonSchema\\\\\": \"src/JsonSchema/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"JsonSchema\\\\Tests\\\\\": \"tests/\"\n        }\n    },\n    \"repositories\": [\n        {\n            \"type\": \"package\",\n            \"package\": {\n                \"name\": \"json-schema/json-schema-test-suite\",\n                \"version\": \"1.2.0\",\n                \"source\": {\n                    \"type\": \"git\",\n                    \"url\": \"https://github.com/json-schema/JSON-Schema-Test-Suite\",\n                    \"reference\": \"1.2.0\"\n                }\n            }\n        }\n    ],\n    \"bin\": [\n        \"bin/validate-json\"\n    ],\n    \"scripts\": {\n        \"coverage\": \"phpunit --coverage-text\",\n        \"style-check\": \"php-cs-fixer fix --dry-run --verbose --diff\",\n        \"style-fix\": \"php-cs-fixer fix --verbose\",\n        \"test\": \"phpunit\",\n        \"testOnly\": \"phpunit --colors --filter\",\n        \"phpstan\": \"@php phpstan\"\n    }\n}\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 47.0439453125,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\BaseConstraint\\\\:\\\\:addError\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/BaseConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\BaseConstraint\\\\:\\\\:addError\\\\(\\\\) has parameter \\\\$more with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/BaseConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\BaseConstraint\\\\:\\\\:addErrors\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/BaseConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\BaseConstraint\\\\:\\\\:addErrors\\\\(\\\\) has parameter \\\\$errors with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/BaseConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\BaseConstraint\\\\:\\\\:arrayToObjectRecursive\\\\(\\\\) has parameter \\\\$array with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/BaseConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\BaseConstraint\\\\:\\\\:getErrors\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/BaseConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\BaseConstraint\\\\:\\\\:getErrors\\\\(\\\\) has parameter \\\\$errorContext with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/BaseConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\BaseConstraint\\\\:\\\\:isValid\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/BaseConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\BaseConstraint\\\\:\\\\:numErrors\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/BaseConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\BaseConstraint\\\\:\\\\:numErrors\\\\(\\\\) has parameter \\\\$errorContext with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/BaseConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\BaseConstraint\\\\:\\\\:reset\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/BaseConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$json of function json_decode expects string, string\\\\|false given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/BaseConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\Constraints\\\\\\\\BaseConstraint\\\\:\\\\:\\\\$errors type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/BaseConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Ternary operator condition is always true\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/JsonSchema/Constraints/BaseConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Cannot access property \\\\$additionalItems on stdClass\\\\|null\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/JsonSchema/Constraints/CollectionConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Cannot access property \\\\$items on stdClass\\\\|null\\\\.$#\"\n\t\t\tcount: 6\n\t\t\tpath: src/JsonSchema/Constraints/CollectionConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\CollectionConstraint\\\\:\\\\:check\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/CollectionConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\CollectionConstraint\\\\:\\\\:validateItems\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/CollectionConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\CollectionConstraint\\\\:\\\\:validateItems\\\\(\\\\) has parameter \\\\$value with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/CollectionConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$object_or_class of function property_exists expects object\\\\|string, stdClass\\\\|null given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/CollectionConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#2 \\\\$schema of method JsonSchema\\\\\\\\Constraints\\\\\\\\CollectionConstraint\\\\:\\\\:validateItems\\\\(\\\\) expects stdClass\\\\|null, object given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/CollectionConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ConstConstraint\\\\:\\\\:check\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ConstConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Constraint\\\\:\\\\:checkArray\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Constraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Constraint\\\\:\\\\:checkConst\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Constraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Constraint\\\\:\\\\:checkEnum\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Constraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Constraint\\\\:\\\\:checkFormat\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Constraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Constraint\\\\:\\\\:checkNumber\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Constraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Constraint\\\\:\\\\:checkObject\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Constraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Constraint\\\\:\\\\:checkObject\\\\(\\\\) has parameter \\\\$appliedDefaults with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Constraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Constraint\\\\:\\\\:checkString\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Constraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Constraint\\\\:\\\\:checkType\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Constraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Constraint\\\\:\\\\:checkUndefined\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Constraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Constraint\\\\:\\\\:checkUndefined\\\\(\\\\) has parameter \\\\$fromDefault with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Constraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\Constraints\\\\\\\\Constraint\\\\:\\\\:\\\\$inlineSchemaProperty has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Constraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ConstraintInterface\\\\:\\\\:addError\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ConstraintInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ConstraintInterface\\\\:\\\\:addError\\\\(\\\\) has parameter \\\\$more with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ConstraintInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ConstraintInterface\\\\:\\\\:addErrors\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ConstraintInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ConstraintInterface\\\\:\\\\:addErrors\\\\(\\\\) has parameter \\\\$errors with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ConstraintInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ConstraintInterface\\\\:\\\\:check\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ConstraintInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ConstraintInterface\\\\:\\\\:getErrors\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ConstraintInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @throws with type JsonSchema\\\\\\\\Exception\\\\\\\\ExceptionInterface is not subtype of Throwable$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ConstraintInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\EnumConstraint\\\\:\\\\:check\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/EnumConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Factory\\\\:\\\\:addConfig\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Factory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Factory\\\\:\\\\:createInstanceFor\\\\(\\\\) should return JsonSchema\\\\\\\\Constraints\\\\\\\\BaseConstraint&JsonSchema\\\\\\\\Constraints\\\\\\\\ConstraintInterface but returns object\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Factory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Factory\\\\:\\\\:getErrorContext\\\\(\\\\) should return 1\\\\|2 but returns int\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Factory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Factory\\\\:\\\\:getSchemaStorage\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Factory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Factory\\\\:\\\\:getTypeCheck\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Factory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Factory\\\\:\\\\:removeConfig\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Factory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Factory\\\\:\\\\:setConfig\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Factory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\Factory\\\\:\\\\:setErrorContext\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Factory.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\Constraints\\\\\\\\Factory\\\\:\\\\:\\\\$constraintMap type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Factory.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\Constraints\\\\\\\\Factory\\\\:\\\\:\\\\$instanceCache \\\\(array\\\\<JsonSchema\\\\\\\\Constraints\\\\\\\\ConstraintInterface\\\\>\\\\) does not accept array\\\\<object\\\\>\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Factory.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\Constraints\\\\\\\\Factory\\\\:\\\\:\\\\$uriRetriever \\\\(JsonSchema\\\\\\\\Uri\\\\\\\\UriRetriever\\\\) does not accept JsonSchema\\\\\\\\UriRetrieverInterface\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/Factory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\FormatConstraint\\\\:\\\\:check\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/FormatConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\FormatConstraint\\\\:\\\\:validateColor\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/FormatConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\FormatConstraint\\\\:\\\\:validateColor\\\\(\\\\) has parameter \\\\$color with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/FormatConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\FormatConstraint\\\\:\\\\:validateDateTime\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/FormatConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\FormatConstraint\\\\:\\\\:validateDateTime\\\\(\\\\) has parameter \\\\$datetime with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/FormatConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\FormatConstraint\\\\:\\\\:validateDateTime\\\\(\\\\) has parameter \\\\$format with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/FormatConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\FormatConstraint\\\\:\\\\:validateHostname\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/FormatConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\FormatConstraint\\\\:\\\\:validateHostname\\\\(\\\\) has parameter \\\\$host with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/FormatConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\FormatConstraint\\\\:\\\\:validatePhone\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/FormatConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\FormatConstraint\\\\:\\\\:validatePhone\\\\(\\\\) has parameter \\\\$phone with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/FormatConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\FormatConstraint\\\\:\\\\:validateRegex\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/FormatConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\FormatConstraint\\\\:\\\\:validateRegex\\\\(\\\\) has parameter \\\\$regex with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/FormatConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\FormatConstraint\\\\:\\\\:validateStyle\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/FormatConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\FormatConstraint\\\\:\\\\:validateStyle\\\\(\\\\) has parameter \\\\$style with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/FormatConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Strict comparison using \\\\=\\\\=\\\\= between null and non\\\\-falsy\\\\-string\\\\|false will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/FormatConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\NumberConstraint\\\\:\\\\:check\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/NumberConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\NumberConstraint\\\\:\\\\:fmod\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/NumberConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\NumberConstraint\\\\:\\\\:fmod\\\\(\\\\) has parameter \\\\$number1 with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/NumberConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\NumberConstraint\\\\:\\\\:fmod\\\\(\\\\) has parameter \\\\$number2 with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/NumberConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Argument of an invalid type stdClass supplied for foreach, only iterables are supported\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ObjectConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Argument of an invalid type stdClass\\\\|null supplied for foreach, only iterables are supported\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ObjectConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ObjectConstraint\\\\:\\\\:check\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ObjectConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ObjectConstraint\\\\:\\\\:check\\\\(\\\\) has parameter \\\\$additionalProp with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ObjectConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ObjectConstraint\\\\:\\\\:check\\\\(\\\\) has parameter \\\\$appliedDefaults with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ObjectConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ObjectConstraint\\\\:\\\\:check\\\\(\\\\) has parameter \\\\$patternProperties with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ObjectConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ObjectConstraint\\\\:\\\\:validateElement\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ObjectConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ObjectConstraint\\\\:\\\\:validateElement\\\\(\\\\) has parameter \\\\$matches with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ObjectConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ObjectConstraint\\\\:\\\\:validateMinMaxConstraint\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ObjectConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ObjectConstraint\\\\:\\\\:validatePatternProperties\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ObjectConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ObjectConstraint\\\\:\\\\:validatePatternProperties\\\\(\\\\) has parameter \\\\$element with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ObjectConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ObjectConstraint\\\\:\\\\:validatePatternProperties\\\\(\\\\) has parameter \\\\$patternProperties with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ObjectConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\ObjectConstraint\\\\:\\\\:validateProperties\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ObjectConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#2 \\\\$objectDefinition of method JsonSchema\\\\\\\\Constraints\\\\\\\\ObjectConstraint\\\\:\\\\:validateMinMaxConstraint\\\\(\\\\) expects stdClass, stdClass\\\\|null given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ObjectConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\Constraints\\\\\\\\ObjectConstraint\\\\:\\\\:\\\\$appliedDefaults type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/ObjectConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\SchemaConstraint\\\\:\\\\:check\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/SchemaConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\StringConstraint\\\\:\\\\:check\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/StringConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\StringConstraint\\\\:\\\\:strlen\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/StringConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\StringConstraint\\\\:\\\\:strlen\\\\(\\\\) has parameter \\\\$string with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/StringConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#2 \\\\$encoding of function mb_strlen expects string, string\\\\|false given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/StringConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:isArray\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:isArray\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:isAssociativeArray\\\\(\\\\) has parameter \\\\$arr with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:isObject\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:isObject\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:propertyCount\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:propertyCount\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:propertyExists\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:propertyExists\\\\(\\\\) has parameter \\\\$property with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:propertyExists\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:propertyGet\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:propertyGet\\\\(\\\\) has parameter \\\\$property with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:propertyGet\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:propertySet\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:propertySet\\\\(\\\\) has parameter \\\\$data with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:propertySet\\\\(\\\\) has parameter \\\\$property with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\LooseTypeCheck\\\\:\\\\:propertySet\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/LooseTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:isArray\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:isArray\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:isObject\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:isObject\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:propertyCount\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:propertyCount\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:propertyExists\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:propertyExists\\\\(\\\\) has parameter \\\\$property with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:propertyExists\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:propertyGet\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:propertyGet\\\\(\\\\) has parameter \\\\$property with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:propertyGet\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:propertySet\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:propertySet\\\\(\\\\) has parameter \\\\$data with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:propertySet\\\\(\\\\) has parameter \\\\$property with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\StrictTypeCheck\\\\:\\\\:propertySet\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/StrictTypeCheck.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:isArray\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:isArray\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:isObject\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:isObject\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:propertyCount\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:propertyCount\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:propertyExists\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:propertyExists\\\\(\\\\) has parameter \\\\$property with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:propertyExists\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:propertyGet\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:propertyGet\\\\(\\\\) has parameter \\\\$property with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:propertyGet\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:propertySet\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:propertySet\\\\(\\\\) has parameter \\\\$data with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:propertySet\\\\(\\\\) has parameter \\\\$property with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeCheck\\\\\\\\TypeCheckInterface\\\\:\\\\:propertySet\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeCheck/TypeCheckInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeConstraint\\\\:\\\\:check\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeConstraint\\\\:\\\\:implodeWith\\\\(\\\\) has parameter \\\\$elements with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeConstraint\\\\:\\\\:validateType\\\\(\\\\) has parameter \\\\$coerce with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeConstraint\\\\:\\\\:validateTypeNameWording\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeConstraint\\\\:\\\\:validateTypesArray\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeConstraint\\\\:\\\\:validateTypesArray\\\\(\\\\) has parameter \\\\$type with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeConstraint\\\\:\\\\:validateTypesArray\\\\(\\\\) has parameter \\\\$validTypesWording with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Negated boolean expression is always true\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/JsonSchema/Constraints/TypeConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#3 \\\\$listEnd of method JsonSchema\\\\\\\\Constraints\\\\\\\\TypeConstraint\\\\:\\\\:implodeWith\\\\(\\\\) expects bool, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Static property JsonSchema\\\\\\\\Constraints\\\\\\\\TypeConstraint\\\\:\\\\:\\\\$wording \\\\(array\\\\<string\\\\>\\\\) does not accept default value of type array\\\\<int\\\\|string, string\\\\|null\\\\>\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/TypeConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\UndefinedConstraint\\\\:\\\\:applyDefaultValues\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/UndefinedConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\UndefinedConstraint\\\\:\\\\:check\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/UndefinedConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\UndefinedConstraint\\\\:\\\\:check\\\\(\\\\) has parameter \\\\$fromDefault with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/UndefinedConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\UndefinedConstraint\\\\:\\\\:shouldApplyDefaultValue\\\\(\\\\) has parameter \\\\$name with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/UndefinedConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\UndefinedConstraint\\\\:\\\\:validateCommonProperties\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/UndefinedConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\UndefinedConstraint\\\\:\\\\:validateDependencies\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/UndefinedConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\UndefinedConstraint\\\\:\\\\:validateOfProperties\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/UndefinedConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\UndefinedConstraint\\\\:\\\\:validateTypes\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/UndefinedConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\UndefinedConstraint\\\\:\\\\:validateUri\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/UndefinedConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\UndefinedConstraint\\\\:\\\\:validateUri\\\\(\\\\) has parameter \\\\$schema with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/UndefinedConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Constraints\\\\\\\\UndefinedConstraint\\\\:\\\\:validateUri\\\\(\\\\) has parameter \\\\$schemaUri with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/UndefinedConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$requiredOnly of method JsonSchema\\\\\\\\Constraints\\\\\\\\UndefinedConstraint\\\\:\\\\:shouldApplyDefaultValue\\\\(\\\\) expects bool, int given\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/JsonSchema/Constraints/UndefinedConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\Constraints\\\\\\\\UndefinedConstraint\\\\:\\\\:\\\\$appliedDefaults type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Constraints/UndefinedConstraint.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Entity\\\\\\\\JsonPointer\\\\:\\\\:encodePropertyPaths\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Entity/JsonPointer.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Entity\\\\\\\\JsonPointer\\\\:\\\\:setFromDefault\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Entity/JsonPointer.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Entity\\\\\\\\JsonPointer\\\\:\\\\:withPropertyPaths\\\\(\\\\) has parameter \\\\$propertyPaths with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Entity/JsonPointer.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Exception\\\\\\\\JsonDecodingException\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$code with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Exception/JsonDecodingException.php\n\n\t\t-\n\t\t\tmessage: \"#^Class JsonSchema\\\\\\\\Iterator\\\\\\\\ObjectIterator implements generic interface Iterator but does not specify its types\\\\: TKey, TValue$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Iterator/ObjectIterator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Iterator\\\\\\\\ObjectIterator\\\\:\\\\:buildDataFromObject\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Iterator/ObjectIterator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Iterator\\\\\\\\ObjectIterator\\\\:\\\\:getDataFromItem\\\\(\\\\) has parameter \\\\$item with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Iterator/ObjectIterator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Iterator\\\\\\\\ObjectIterator\\\\:\\\\:getDataFromItem\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Iterator/ObjectIterator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Iterator\\\\\\\\ObjectIterator\\\\:\\\\:initialize\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Iterator/ObjectIterator.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\Iterator\\\\\\\\ObjectIterator\\\\:\\\\:\\\\$data type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Iterator/ObjectIterator.php\n\n\t\t-\n\t\t\tmessage: \"#^Result of && is always false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Iterator/ObjectIterator.php\n\n\t\t-\n\t\t\tmessage: \"#^Offset 4 does not exist on array\\\\{0\\\\: string, 1\\\\: non\\\\-falsy\\\\-string, 2\\\\: string, 3\\\\: non\\\\-falsy\\\\-string, 4\\\\?\\\\: string, 5\\\\?\\\\: non\\\\-falsy\\\\-string&numeric\\\\-string\\\\}\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Rfc3339.php\n\n\t\t-\n\t\t\tmessage: \"#^Offset 5 does not exist on array\\\\{0\\\\: string, 1\\\\: non\\\\-falsy\\\\-string, 2\\\\: string, 3\\\\: non\\\\-falsy\\\\-string, 4\\\\?\\\\: string, 5\\\\?\\\\: non\\\\-falsy\\\\-string&numeric\\\\-string\\\\}\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Rfc3339.php\n\n\t\t-\n\t\t\tmessage: \"#^Access to an undefined property object\\\\:\\\\:\\\\$properties\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/JsonSchema/SchemaStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Argument of an invalid type object supplied for foreach, only iterables are supported\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/SchemaStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to function is_array\\\\(\\\\) with object will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/SchemaStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\SchemaStorage\\\\:\\\\:addSchema\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/SchemaStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\SchemaStorage\\\\:\\\\:expandRefs\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/SchemaStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\SchemaStorage\\\\:\\\\:resolveRef\\\\(\\\\) has parameter \\\\$resolveStack with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/SchemaStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\SchemaStorage\\\\:\\\\:resolveRefSchema\\\\(\\\\) has parameter \\\\$resolveStack with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/SchemaStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\SchemaStorage\\\\:\\\\:\\\\$schemas has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/SchemaStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\SchemaStorage\\\\:\\\\:\\\\$uriResolver has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/SchemaStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\SchemaStorage\\\\:\\\\:\\\\$uriRetriever has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/SchemaStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Result of && is always false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/SchemaStorage.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\SchemaStorageInterface\\\\:\\\\:addSchema\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/SchemaStorageInterface.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\Retrievers\\\\\\\\Curl\\\\:\\\\:fetchMessageBody\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/Retrievers/Curl.php\n\n\t\t-\n\t\t\tmessage: \"#^Offset 1 does not exist on array\\\\{0\\\\?\\\\: string, 1\\\\?\\\\: string\\\\}\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/Retrievers/Curl.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$response of method JsonSchema\\\\\\\\Uri\\\\\\\\Retrievers\\\\\\\\Curl\\\\:\\\\:fetchContentType\\\\(\\\\) expects string, string\\\\|true given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/Retrievers/Curl.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$response of method JsonSchema\\\\\\\\Uri\\\\\\\\Retrievers\\\\\\\\Curl\\\\:\\\\:fetchMessageBody\\\\(\\\\) expects string, string\\\\|true given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/Retrievers/Curl.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\Uri\\\\\\\\Retrievers\\\\\\\\Curl\\\\:\\\\:\\\\$messageBody has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/Retrievers/Curl.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\Retrievers\\\\\\\\FileGetContents\\\\:\\\\:fetchContentType\\\\(\\\\) has parameter \\\\$headers with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/Retrievers/FileGetContents.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$callback of function set_error_handler expects \\\\(callable\\\\(int, string, string, int, array\\\\)\\\\: bool\\\\)\\\\|null, Closure\\\\(mixed, mixed\\\\)\\\\: void given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/Retrievers/FileGetContents.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\Uri\\\\\\\\Retrievers\\\\\\\\AbstractRetriever\\\\:\\\\:\\\\$contentType \\\\(string\\\\) does not accept null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/Retrievers/FileGetContents.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\Uri\\\\\\\\Retrievers\\\\\\\\AbstractRetriever\\\\:\\\\:\\\\$contentType \\\\(string\\\\) does not accept string\\\\|null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/Retrievers/FileGetContents.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\Uri\\\\\\\\Retrievers\\\\\\\\FileGetContents\\\\:\\\\:\\\\$messageBody has no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/Retrievers/FileGetContents.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\Retrievers\\\\\\\\PredefinedArray\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$schemas with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/Retrievers/PredefinedArray.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\Uri\\\\\\\\Retrievers\\\\\\\\PredefinedArray\\\\:\\\\:\\\\$schemas type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/Retrievers/PredefinedArray.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\UriResolver\\\\:\\\\:generate\\\\(\\\\) has parameter \\\\$components with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriResolver.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\UriResolver\\\\:\\\\:normalizePath\\\\(\\\\) should return string but returns string\\\\|null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriResolver.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\UriResolver\\\\:\\\\:parse\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriResolver.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\UriResolver\\\\:\\\\:resolve\\\\(\\\\) should return string but returns string\\\\|null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriResolver.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$uri of method JsonSchema\\\\\\\\Uri\\\\\\\\UriResolver\\\\:\\\\:parse\\\\(\\\\) expects string, string\\\\|null given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriResolver.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#3 \\\\$subject of function preg_replace expects array\\\\|string, string\\\\|null given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriResolver.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to function is_null\\\\(\\\\) with string will always evaluate to false\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/JsonSchema/Uri/UriRetriever.php\n\n\t\t-\n\t\t\tmessage: \"#^Cannot call method retrieve\\\\(\\\\) on JsonSchema\\\\\\\\Uri\\\\\\\\Retrievers\\\\\\\\UriRetrieverInterface\\\\|null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriRetriever.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\UriRetriever\\\\:\\\\:addInvalidContentTypeEndpoint\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriRetriever.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\UriRetriever\\\\:\\\\:generate\\\\(\\\\) has parameter \\\\$components with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriRetriever.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\UriRetriever\\\\:\\\\:getUriRetriever\\\\(\\\\) should return JsonSchema\\\\\\\\Uri\\\\\\\\Retrievers\\\\\\\\UriRetrieverInterface but returns JsonSchema\\\\\\\\Uri\\\\\\\\Retrievers\\\\\\\\UriRetrieverInterface\\\\|null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriRetriever.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\UriRetriever\\\\:\\\\:parse\\\\(\\\\) return type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriRetriever.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\UriRetriever\\\\:\\\\:retrieve\\\\(\\\\) has parameter \\\\$translate with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriRetriever.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\UriRetriever\\\\:\\\\:setTranslation\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriRetriever.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\UriRetriever\\\\:\\\\:setTranslation\\\\(\\\\) has parameter \\\\$from with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriRetriever.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\UriRetriever\\\\:\\\\:setTranslation\\\\(\\\\) has parameter \\\\$to with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriRetriever.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\UriRetriever\\\\:\\\\:translate\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriRetriever.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Uri\\\\\\\\UriRetriever\\\\:\\\\:translate\\\\(\\\\) has parameter \\\\$uri with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriRetriever.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$uri of method JsonSchema\\\\\\\\Uri\\\\\\\\UriRetriever\\\\:\\\\:parse\\\\(\\\\) expects string, string\\\\|null given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriRetriever.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\Uri\\\\\\\\UriRetriever\\\\:\\\\:\\\\$allowedInvalidContentTypeEndpoints type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriRetriever.php\n\n\t\t-\n\t\t\tmessage: \"#^Property JsonSchema\\\\\\\\Uri\\\\\\\\UriRetriever\\\\:\\\\:\\\\$translationMap type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Uri/UriRetriever.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Validator\\\\:\\\\:check\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Validator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Validator\\\\:\\\\:check\\\\(\\\\) has parameter \\\\$schema with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Validator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Validator\\\\:\\\\:check\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Validator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Validator\\\\:\\\\:coerce\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Validator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Validator\\\\:\\\\:coerce\\\\(\\\\) has parameter \\\\$schema with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Validator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method JsonSchema\\\\\\\\Validator\\\\:\\\\:coerce\\\\(\\\\) has parameter \\\\$value with no type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/JsonSchema/Validator.php\n\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.1640625,
          "content": "parameters:\n    level: 8\n    paths:\n        - ./src/\n    ignoreErrors: []\n\nincludes:\n    - phpstan-baseline.neon\n    - vendor/marc-mabe/php-enum-phpstan/extension.neon\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.794921875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n         backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\"\n         bootstrap=\"vendor/autoload.php\"\n         verbose=\"true\"\n>\n    <testsuites>\n        <testsuite name=\"JSON Schema Test Suite\">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist>\n            <directory>./src/JsonSchema/</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}