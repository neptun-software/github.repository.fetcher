{
  "metadata": {
    "timestamp": 1736711915007,
    "page": 312,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thephpleague/glide",
      "stars": 2563,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3037109375,
          "content": "* text=auto\n\n/.github export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/.php_cs.dist export-ignore\n/docs export-ignore\n/phpunit.xml.dist export-ignore\n/psalm.xml export-ignore\n/psalm-baseline.xml export-ignore\n/tests export-ignore\n/CHANGELOG.md export-ignore\n/CONTRIBUTING.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.072265625,
          "content": "build\nvendor\ndocs/_site\n.php_cs.cache\n.phpunit.result.cache\ncomposer.lock\n"
        },
        {
          "name": ".php_cs.dist",
          "type": "blob",
          "size": 0.23828125,
          "content": "<?php\n\n$finder = PhpCsFixer\\Finder::create()\n    ->in(['src', 'tests'])\n;\n\nreturn PhpCsFixer\\Config::create()\n    ->setRules(array(\n        '@Symfony' => true,\n        'phpdoc_annotation_without_dot' => false,\n    ))\n    ->setFinder($finder)\n;\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.11328125,
          "content": "# Changelog\n\nAll notable changes to Glide can be found on [GitHub](https://github.com/thephpleague/glide/releases).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.1875,
          "content": "# Contributing\n\nContributions are **welcome** and will be fully **credited**.\n\nWe accept contributions via Pull Requests on [Github](https://github.com/thephpleague/glide).\n\n## Pull Requests\n\n- **[PSR-2 Coding Standard](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md)** - The easiest way to apply the conventions is to install [PHP CS Fixer](https://github.com/FriendsOfPHP/PHP-CS-Fixer).\n- **Add tests!** - Your patch won't be accepted if it doesn't have tests.\n- **Document any change in behaviour** - Make sure the `README.md` and any other relevant documentation are kept up-to-date.\n- **Consider our release cycle** - We try to follow [SemVer v2.0.0](http://semver.org/). Randomly breaking public APIs is not an option.\n- **Create feature branches** - Don't ask us to pull from your master branch.\n- **One pull request per feature** - If you want to do more than one thing, send multiple pull requests.\n- **Send coherent history** - Make sure each individual commit in your pull request is meaningful. If you had to make multiple intermediate commits while developing, please squash them before submitting.\n\n## Running Tests\n\n``` bash\n$ phpunit\n```\n\n**Happy coding**!\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Jonathan Reinink <jonathan@reinink.ca>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.552734375,
          "content": "# Glide\n\n[![Latest Version](https://img.shields.io/github/release/thephpleague/glide.svg?style=flat-square)](https://github.com/thephpleague/glide/releases)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](https://github.com/thephpleague/glide/blob/master/LICENSE)\n[![Build Status](https://img.shields.io/github/actions/workflow/status/thephpleague/glide/test.yaml?style=flat-square&branch=master)](https://github.com/thephpleague/glide/actions/workflows/test.yaml?query=branch%3Amaster++)\n[![Code Coverage](https://img.shields.io/codecov/c/github/thephpleague/glide/master?style=flat-square)](https://app.codecov.io/gh/thephpleague/glide/)\n[![Total Downloads](https://img.shields.io/packagist/dt/league/glide.svg?style=flat-square)](https://packagist.org/packages/league/glide)\n[![Source Code](http://img.shields.io/badge/source-thephpleague/glide-blue.svg?style=flat-square)](https://github.com/thephpleague/glide)\n[![Author](http://img.shields.io/badge/author-@reinink-blue.svg?style=flat-square)](https://twitter.com/reinink)\n[![Author](http://img.shields.io/badge/author-@titouangalopin-blue.svg?style=flat-square)](https://twitter.com/titouangalopin)\n\nGlide is a wonderfully easy on-demand image manipulation library written in PHP. Its straightforward API is exposed via HTTP, similar to cloud image processing services like [Imgix](http://www.imgix.com/) and [Cloudinary](http://cloudinary.com/). Glide leverages powerful libraries like [Intervention Image](http://image.intervention.io/) (for image handling and manipulation) and [Flysystem](http://flysystem.thephpleague.com/) (for file system abstraction).\n\n[![© Photo Joel Reynolds](https://glide.herokuapp.com/1.0/kayaks.jpg?w=1000)](https://glide.herokuapp.com/1.0/kayaks.jpg?w=1000)\n> © Photo Joel Reynolds\n\n## Highlights\n\n- Adjust, resize and add effects to images using a simple HTTP based API.\n- Manipulated images are automatically cached and served with far-future expires headers.\n- Create your own image processing server or integrate Glide directly into your app.\n- Supports both the [GD](http://php.net/manual/en/book.image.php) library and the [Imagick](http://php.net/manual/en/book.imagick.php) PHP extension.\n- Supports many response methods, including PSR-7, HttpFoundation and more.\n- Ability to secure image URLs using HTTP signatures.\n- Works with many different file systems, thanks to the [Flysystem](http://flysystem.thephpleague.com/) library.\n- Powered by the battle tested [Intervention Image](http://image.intervention.io/) image handling and manipulation library.\n- Framework-agnostic, will work with any project.\n- Composer ready and PSR-2 compliant.\n\n## Documentation\n\nFull documentation can be found at [glide.thephpleague.com](http://glide.thephpleague.com).\n\n## Installation\n\nGlide is available via Composer:\n\n```bash\n$ composer require league/glide\n```\n\n## Testing\n\nGlide has a [PHPUnit](https://phpunit.de/) test suite. To run the tests, run the following command from the project folder:\n\n```bash\n$ phpunit\n```\n## Contributing\n\nContributions are welcome and will be fully credited. Please see [CONTRIBUTING](https://github.com/thephpleague/glide/blob/master/CONTRIBUTING.md) for details.\n\n## Security\n\nIf you discover any security related issues, please email jonathan@reinink.ca instead of using the issue tracker.\n\n## Credits\n\n- [Jonathan Reinink](https://github.com/reinink)\n- [All Contributors](https://github.com/thephpleague/glide/contributors)\n\n## License\n\nThe MIT License (MIT). Please see [LICENSE](https://github.com/thephpleague/glide/blob/master/LICENSE) for more information.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.10546875,
          "content": "{\n    \"name\": \"league/glide\",\n    \"description\": \"Wonderfully easy on-demand image manipulation library with an HTTP based API.\",\n    \"keywords\": [\n        \"league\",\n        \"image\",\n        \"processing\",\n        \"manipulation\",\n        \"editing\",\n        \"gd\",\n        \"imagemagick\",\n        \"imagick\"\n    ],\n    \"homepage\": \"http://glide.thephpleague.com\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Jonathan Reinink\",\n            \"email\": \"jonathan@reinink.ca\",\n            \"homepage\": \"http://reinink.ca\"\n        },\n        {\n            \"name\": \"Titouan Galopin\",\n            \"email\": \"galopintitouan@gmail.com\",\n            \"homepage\": \"https://titouangalopin.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^7.2|^8.0\",\n        \"intervention/image\": \"^2.7\",\n        \"league/flysystem\": \"^2.0|^3.0\",\n        \"psr/http-message\": \"^1.0|^2.0\"\n    },\n    \"require-dev\": {\n        \"mockery/mockery\": \"^1.3.3\",\n        \"phpunit/phpunit\": \"^8.5|^9.0\",\n        \"phpunit/php-token-stream\": \"^3.1|^4.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"League\\\\Glide\\\\\": \"src/\"\n        }\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.3671875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit colors=\"true\" bootstrap=\"vendor/autoload.php\">\n    <testsuites>\n        <testsuite name=\"all\">\n            <directory suffix=\"Test.php\">tests/</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist>\n            <directory suffix=\".php\">src/</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "psalm-baseline.xml",
          "type": "blob",
          "size": 0.2734375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<files psalm-version=\"dev-master@\">\n  <file src=\"src/ServerFactory.php\">\n    <UndefinedClass occurrences=\"3\">\n      <code>Filesystem</code>\n      <code>Filesystem</code>\n      <code>Filesystem</code>\n    </UndefinedClass>\n  </file>\n</files>\n"
        },
        {
          "name": "psalm.xml",
          "type": "blob",
          "size": 0.4716796875,
          "content": "<?xml version=\"1.0\"?>\n<psalm\n    errorLevel=\"4\"\n    resolveFromConfigFile=\"true\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"https://getpsalm.org/schema/config\"\n    xsi:schemaLocation=\"https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd\"\n    errorBaseline=\"psalm-baseline.xml\"\n>\n    <projectFiles>\n        <directory name=\"src\" />\n        <ignoreFiles>\n            <directory name=\"vendor\" />\n        </ignoreFiles>\n    </projectFiles>\n</psalm>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}