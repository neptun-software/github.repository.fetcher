{
  "metadata": {
    "timestamp": 1736711773290,
    "page": 29,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "v2board/v2board",
      "stars": 4572,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.21484375,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".env.example",
          "type": "blob",
          "size": 0.791015625,
          "content": "APP_NAME=V2Board\nAPP_ENV=local\nAPP_KEY=\nAPP_DEBUG=false\nAPP_URL=http://localhost\n\nLOG_CHANNEL=stack\n\nDB_CONNECTION=mysql\nDB_HOST=localhost\nDB_PORT=3306\nDB_DATABASE=laravel\nDB_USERNAME=root\nDB_PASSWORD=123456\n\nBROADCAST_DRIVER=log\nCACHE_DRIVER=file\nQUEUE_CONNECTION=redis\nSESSION_DRIVER=redis\nSESSION_LIFETIME=120\n\nREDIS_HOST=127.0.0.1\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n\nMAIL_DRIVER=smtp\nMAIL_HOST=smtp.mailtrap.io\nMAIL_PORT=2525\nMAIL_USERNAME=null\nMAIL_PASSWORD=null\nMAIL_ENCRYPTION=null\nMAIL_FROM_ADDRESS=null\nMAIL_FROM_NAME=null\nMAILGUN_DOMAIN=\nMAILGUN_SECRET=\n\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\nAWS_DEFAULT_REGION=us-east-1\nAWS_BUCKET=\n\nPUSHER_APP_ID=\nPUSHER_APP_KEY=\nPUSHER_APP_SECRET=\nPUSHER_APP_CLUSTER=mt1\n\nMIX_PUSHER_APP_KEY=\"${PUSHER_APP_KEY}\"\nMIX_PUSHER_APP_CLUSTER=\"${PUSHER_APP_CLUSTER}\"\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1083984375,
          "content": "* text=auto\n*.css linguist-vendored\n*.scss linguist-vendored\n*.js linguist-vendored\nCHANGELOG.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2783203125,
          "content": "/node_modules\n/config/v2board.php\n/public/hot\n/public/storage\n/public/env.example.js\n/storage/*.key\n/vendor\n.env\n.env.backup\n.phpunit.result.cache\n.idea\n.lock\nHomestead.json\nHomestead.yaml\nnpm-debug.log\nyarn-error.log\ncomposer.phar\ncomposer.lock\nyarn.lock\ndocker-compose.yml\n.DS_Store\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.041015625,
          "content": "MIT License\n\nCopyright (c) 2019 Tokumeikoi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "artisan",
          "type": "blob",
          "size": 1.646484375,
          "content": "#!/usr/bin/env php\n<?php\n\ndefine('LARAVEL_START', microtime(true));\n\n/*\n|--------------------------------------------------------------------------\n| Register The Auto Loader\n|--------------------------------------------------------------------------\n|\n| Composer provides a convenient, automatically generated class loader\n| for our application. We just need to utilize it! We'll require it\n| into the script here so that we do not have to worry about the\n| loading of any our classes \"manually\". Feels great to relax.\n|\n*/\n\nrequire __DIR__.'/vendor/autoload.php';\n\n$app = require_once __DIR__.'/bootstrap/app.php';\n\n/*\n|--------------------------------------------------------------------------\n| Run The Artisan Application\n|--------------------------------------------------------------------------\n|\n| When we run the console application, the current CLI command will be\n| executed in this console and the response sent back to a terminal\n| or another output device for the developers. Here goes nothing!\n|\n*/\n\n$kernel = $app->make(Illuminate\\Contracts\\Console\\Kernel::class);\n\n$status = $kernel->handle(\n    $input = new Symfony\\Component\\Console\\Input\\ArgvInput,\n    new Symfony\\Component\\Console\\Output\\ConsoleOutput\n);\n\n/*\n|--------------------------------------------------------------------------\n| Shutdown The Application\n|--------------------------------------------------------------------------\n|\n| Once Artisan has finished running, we will fire off the shutdown events\n| so that any final work may be done by the application before we shut\n| down the process. This is the last thing to happen to the request.\n|\n*/\n\n$kernel->terminate($input, $status);\n\nexit($status);\n"
        },
        {
          "name": "bootstrap",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.0478515625,
          "content": "{\n    \"name\": \"v2board/v2board\",\n    \"type\": \"project\",\n    \"description\": \"v2board is a proxy protocol manage.\",\n    \"keywords\": [\n        \"v2board\",\n        \"v2ray\",\n        \"shadowsocks\",\n        \"trojan\",\n        \"laravel\"\n    ],\n    \"license\": \"MIT\",\n    \"require\": {\n        \"php\": \"^7.3.0|^8.0\",\n        \"fideloper/proxy\": \"^4.4\",\n        \"firebase/php-jwt\": \"^6.3\",\n        \"fruitcake/laravel-cors\": \"^2.0\",\n        \"google/recaptcha\": \"^1.2\",\n        \"guzzlehttp/guzzle\": \"^7.4.3\",\n        \"laravel/framework\": \"^8.0\",\n        \"laravel/horizon\": \"^5.9.6\",\n        \"laravel/tinker\": \"^2.5\",\n        \"linfo/linfo\": \"^4.0\",\n        \"php-curl-class/php-curl-class\": \"^8.6\",\n        \"stripe/stripe-php\": \"^7.36.1\",\n        \"symfony/yaml\": \"^4.3\"\n    },\n    \"require-dev\": {\n        \"facade/ignition\": \"^2.3.6\",\n        \"fakerphp/faker\": \"^1.9.1\",\n        \"mockery/mockery\": \"^1.3.1\",\n        \"nunomaduro/collision\": \"^4.3\",\n        \"phpunit/phpunit\": \"^9.0\"\n    },\n    \"config\": {\n        \"optimize-autoloader\": true,\n        \"preferred-install\": \"dist\",\n        \"sort-packages\": true\n    },\n    \"extra\": {\n        \"laravel\": {\n            \"dont-discover\": []\n        }\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"App\\\\\": \"app/\",\n            \"Library\\\\\": \"library/\"\n        },\n        \"classmap\": [\n            \"database/seeds\",\n            \"database/factories\"\n        ]\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Tests\\\\\": \"tests/\"\n        }\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"scripts\": {\n        \"post-autoload-dump\": [\n            \"Illuminate\\\\Foundation\\\\ComposerScripts::postAutoloadDump\",\n            \"@php artisan package:discover --ansi\"\n        ],\n        \"post-root-package-install\": [\n            \"@php -r \\\"file_exists('.env') || copy('.env.example', '.env');\\\"\"\n        ],\n        \"post-create-project-cmd\": [\n            \"@php artisan key:generate --ansi\"\n        ]\n    },\n    \"repositories\": {\n        \"packagist\": {\n            \"type\": \"composer\",\n            \"url\": \"https://packagist.org\"\n        }\n    }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "database",
          "type": "tree",
          "content": null
        },
        {
          "name": "init.sh",
          "type": "blob",
          "size": 0.2451171875,
          "content": "#!/bin/bash\n\nrm -rf composer.phar\nwget https://github.com/composer/composer/releases/latest/download/composer.phar -O composer.phar\nphp composer.phar install -vvv\nphp artisan v2board:install\n\nif [ -f \"/etc/init.d/bt\" ]; then\n  chown -R www $(pwd);\nfi\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 1.6298828125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\">\n    <testsuites>\n        <testsuite name=\"Unit\">\n            <directory suffix=\"Test.php\">./tests/Unit</directory>\n        </testsuite>\n\n        <testsuite name=\"Feature\">\n            <directory suffix=\"Test.php\">./tests/Feature</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">./app</directory>\n        </whitelist>\n    </filter>\n    <extensions>\n        <extension class=\"Tests\\Bootstrap\"/>\n    </extensions>\n    <php>\n        <server name=\"APP_ENV\" value=\"testing\"/>\n        <server name=\"BCRYPT_ROUNDS\" value=\"4\"/>\n        <server name=\"CACHE_DRIVER\" value=\"array\"/>\n        <server name=\"MAIL_DRIVER\" value=\"array\"/>\n        <server name=\"QUEUE_CONNECTION\" value=\"sync\"/>\n        <server name=\"SESSION_DRIVER\" value=\"array\"/>\n        <server name=\"APP_CONFIG_CACHE\" value=\"bootstrap/cache/config.phpunit.php\"/>\n        <server name=\"APP_SERVICES_CACHE\" value=\"bootstrap/cache/services.phpunit.php\"/>\n        <server name=\"APP_PACKAGES_CACHE\" value=\"bootstrap/cache/packages.phpunit.php\"/>\n        <server name=\"APP_ROUTES_CACHE\" value=\"bootstrap/cache/routes.phpunit.php\"/>\n        <server name=\"APP_EVENTS_CACHE\" value=\"bootstrap/cache/events.phpunit.php\"/>\n    </php>\n</phpunit>\n"
        },
        {
          "name": "pm2.yaml",
          "type": "blob",
          "size": 0.1298828125,
          "content": "apps:\n  - name     : 'V2Board'\n    script   : 'php artisan horizon'\n    instances: 1\n    out_file : './storage/logs/queue/queue.log'\n"
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 0.5703125,
          "content": "<img src=\"https://avatars.githubusercontent.com/u/56885001?s=200&v=4\" alt=\"logo\" width=\"130\" height=\"130\" align=\"right\"/>\n\n# **V2Board**\n\n- PHP7.3+\n- Composer\n- MySQL5.5+\n- Redis\n- Laravel\n\n## Demo\n[Demo](https://demo.v2board.com)\n\n## Document\n[Click](https://v2board.com)\n\n## Sponsors\nThanks to the open source project license provided by [Jetbrains](https://www.jetbrains.com/)\n\n## Community\n🔔Telegram Channel: [@v2board](https://t.me/v2board)  \n\n## How to Feedback\nFollow the template in the issue to submit your question correctly, and we will have someone follow up with you.\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "routes",
          "type": "tree",
          "content": null
        },
        {
          "name": "server.php",
          "type": "blob",
          "size": 0.5556640625,
          "content": "<?php\n\n/**\n * Laravel - A PHP Framework For Web Artisans\n *\n * @package  Laravel\n * @author   Taylor Otwell <taylor@laravel.com>\n */\n\n$uri = urldecode(\n    parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH)\n);\n\n// This file allows us to emulate Apache's \"mod_rewrite\" functionality from the\n// built-in PHP web server. This provides a convenient way to test a Laravel\n// application without having installed a \"real\" web server software here.\nif ($uri !== '/' && file_exists(__DIR__ . '/public' . $uri)) {\n    return false;\n}\n\nrequire_once __DIR__ . '/public/index.php';\n"
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "update.sh",
          "type": "blob",
          "size": 0.56640625,
          "content": "#!/bin/bash\n\nif [ ! -d \".git\" ]; then\n  echo \"Please deploy using Git.\"\n  exit 1\nfi\n\nif ! command -v git &> /dev/null; then\n    echo \"Git is not installed! Please install git and try again.\"\n    exit 1\nfi\n\ngit config --global --add safe.directory $(pwd)\ngit fetch --all && git reset --hard origin/master && git pull origin master\nrm -rf composer.lock composer.phar\nwget https://github.com/composer/composer/releases/latest/download/composer.phar -O composer.phar\nphp composer.phar update -vvv\nphp artisan v2board:update\n\nif [ -f \"/etc/init.d/bt\" ]; then\n  chown -R www $(pwd);\nfi\n"
        },
        {
          "name": "update_dev.sh",
          "type": "blob",
          "size": 0.5771484375,
          "content": "#!/bin/bash\n\nif [ ! -d \".git\" ]; then\n  echo \"Please deploy using Git.\"\n  exit 1\nfi\n\nif ! command -v git &> /dev/null; then\n    echo \"Git is not installed! Please install git and try again.\"\n    exit 1\nfi\n\ngit config --global --add safe.directory $(pwd)\ngit fetch --all && git reset --hard origin/dev && git pull origin dev\ngit checkout dev\nrm -rf composer.lock composer.phar\nwget https://github.com/composer/composer/releases/latest/download/composer.phar -O composer.phar\nphp composer.phar update -vvv\nphp artisan v2board:update\n\nif [ -f \"/etc/init.d/bt\" ]; then\n  chown -R www $(pwd);\nfi\n"
        }
      ]
    }
  ]
}