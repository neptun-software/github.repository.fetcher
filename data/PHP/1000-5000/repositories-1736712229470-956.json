{
  "metadata": {
    "timestamp": 1736712229470,
    "page": 956,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "overtrue/laravel-follow",
      "stars": 1196,
      "defaultBranch": "5.x",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.212890625,
          "content": "* text=auto\n\n/tests export-ignore\n/.github export-ignore\n.gitattributes export-ignore\n.gitignore export-ignore\nphpunit.xml export-ignore\nphpunit.xml.dist export-ignore\n.php_cs  export-ignore\n.travis.yml  export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1328125,
          "content": ".idea\n/vendor/\ncomposer.lock\n.php_cs.cache\n/coverage/\n.phpunit.result.cache\ncghooks.lock\n\n.php-cs-fixer.cache\n.phpunit.cache/\n.DS_Store\n"
        },
        {
          "name": ".php-cs-fixer.php",
          "type": "blob",
          "size": 1.40625,
          "content": "<?php\n\nreturn (new PhpCsFixer\\Config())\n    ->setRules([\n        '@PSR12' => true,\n        'binary_operator_spaces' => true,\n        'blank_line_after_opening_tag' => true,\n        'compact_nullable_typehint' => true,\n        'declare_equal_normalize' => true,\n        'lowercase_cast' => true,\n        'lowercase_static_reference' => true,\n        'new_with_braces' => true,\n        'no_blank_lines_after_class_opening' => true,\n        'no_leading_import_slash' => true,\n        'no_whitespace_in_blank_line' => true,\n        'ordered_class_elements' => [\n            'order' => [\n                'use_trait',\n            ],\n        ],\n        'ordered_imports' => [\n            'imports_order' => [\n                'class',\n                'function',\n                'const',\n            ],\n            'sort_algorithm' => 'none',\n        ],\n        'return_type_declaration' => true,\n        'short_scalar_cast' => true,\n        'single_blank_line_before_namespace' => true,\n        'single_trait_insert_per_statement' => true,\n        'ternary_operator_spaces' => true,\n        'unary_operator_spaces' => true,\n        'visibility_required' => [\n            'elements' => [\n                'const',\n                'method',\n                'property',\n            ],\n        ],\n    ])\n    ->setFinder(\n        PhpCsFixer\\Finder::create()\n            ->exclude('vendor')\n            ->in([__DIR__.'/src/', __DIR__.'/tests/'])\n    )\n;\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.119140625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 overtrue <i@overtrue.me>\nCopyright (c) 2016 Mohammed Isa <mohd.itcs@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.5390625,
          "content": "<h1 align=\"center\">Laravel Follow</h1>\n\n<p align=\"center\">User follow unfollow system for Laravel.</p>\n\n<p align=\"center\">\n<a href=\"https://packagist.org/packages/overtrue/laravel-follow\"><img src=\"https://poser.pugx.org/overtrue/laravel-follow/v/stable.svg\" alt=\"Latest Stable Version\"></a>\n<a href=\"https://packagist.org/packages/overtrue/laravel-follow\"><img src=\"https://poser.pugx.org/overtrue/laravel-follow/v/unstable.svg\" alt=\"Latest Unstable Version\"></a>\n<a href=\"https://scrutinizer-ci.com/g/overtrue/laravel-follow/build-status/master\"><img src=\"https://scrutinizer-ci.com/g/overtrue/laravel-follow/badges/build.png?b=master\" alt=\"Build Status\"></a>\n<a href=\"https://scrutinizer-ci.com/g/overtrue/laravel-follow/?branch=master\"><img src=\"https://scrutinizer-ci.com/g/overtrue/laravel-follow/badges/quality-score.png?b=master\" alt=\"Scrutinizer Code Quality\"></a>\n<a href=\"https://packagist.org/packages/overtrue/laravel-follow\"><img src=\"https://poser.pugx.org/overtrue/laravel-follow/downloads\" alt=\"Total Downloads\"></a>\n<a href=\"https://packagist.org/packages/overtrue/laravel-follow\"><img src=\"https://poser.pugx.org/overtrue/laravel-follow/license\" alt=\"License\"></a>\n</p>\n\nRelated projects:\n\n- Like: [overtrue/laravel-like](https://github.com/overtrue/laravel-like)\n- Favorite: [overtrue/laravel-favorite](https://github.com/overtrue/laravel-favorite)\n- Subscribe: [overtrue/laravel-subscribe](https://github.com/overtrue/laravel-subscribe)\n- Vote: [overtrue/laravel-vote](https://github.com/overtrue/laravel-vote)\n\n[![Sponsor me](https://github.com/overtrue/overtrue/blob/master/sponsor-me-button-s.svg?raw=true)](https://github.com/sponsors/overtrue)\n\n## Installing\n\n```shell\ncomposer require overtrue/laravel-follow -vvv\n```\n\n### Configuration and Migrations\n\n```shell\nphp artisan vendor:publish --provider=\"Overtrue\\LaravelFollow\\FollowServiceProvider\"\n```\n\n## Usage\n\n### Traits\n\n#### `Overtrue\\LaravelFollow\\Traits\\Follower`\n\nAdd the Follower trait to your user model:\n\n```php\n\nuse Overtrue\\LaravelFollow\\Traits\\Follower;\n\nclass User extends Authenticatable\n{\n    use Follower;\n\n    <...>\n}\n```\n\n#### `Overtrue\\LaravelFollow\\Traits\\Followable`\n\nThen add the Followable trait to your followable model, for example `App\\User`:\n\n```php\nuse Overtrue\\LaravelFollow\\Traits\\Followable;\n\nclass User extends Authenticatable\n{\n    use Followable;\n    <...>\n}\n```\n\nor any other model:\n\n```php\nuse Overtrue\\LaravelFollow\\Traits\\Followable;\n\nclass Channel extends Model\n{\n    use Followable;\n    <...>\n}\n```\n\n### API\n\n```php\n$user1 = User::find(1);\n$user2 = User::find(2);\n\n$user1->follow($user2);\n$user1->unfollow($user2);\n$user1->toggleFollow($user2);\n$user1->acceptFollowRequestFrom($user2);\n$user1->rejectFollowRequestFrom($user2);\n\n$user1->isFollowing($user2);\n$user2->isFollowedBy($user1);\n$user2->hasRequestedToFollow($user1);\n```\n\n#### Get followings:\n\n```php\n$user->followings;\n$user->approvedFollowings;\n$user->notApprovedFollowings;\n```\n\n```php\nforeach($user->followings()->with('followable')->get() as $following)\n{\n    $following->created_at; // followed at\n    \n    $following->followable->nickname; // the user attributes\n}\n```\n\n\n#### Get followers:\n\n```php\n$user->followers;\n$user->approvedFollowers;\n$user->notApprovedFollowers;\n```\n\n```php\nforeach($user->followers()->with('followers')->get() as $follower)\n{\n    $follower->created_at; // followed at\n    \n    $follower->follower->nickname; // the user attributes\n}\n```\n\n\n### Follow Requests\n\nIf you would like to have some follow requests to need to be accepted by the user being followed, simply override the **needsToApproveFollowRequests()** method in the model that uses the **Followable** trait with your custom logic:\n\n```php\npublic function needsToApproveFollowRequests()\n{\n    // Your custom logic here\n    return (bool) $this->private;\n}\n```\n\n### Aggregations\n\n```php\n// followings count\n$user->followings()->count();\n$user->approvedFollowings()->count();\n$user->notApprovedFollowings()->count();\n\n// with query where\n$user->followings()->where('gender', 'female')->count();\n\n// followers count\n$user->followers()->count();\n$user->approvedFollowers()->count();\n$user->notApprovedFollowers()->count();\n```\n\nList with `*_count` attribute:\n\n```php\n$users = User::withCount(['followings', 'followables'])->get();\n// or \n$users = User::withCount(['approvedFollowings', 'approvedFollowers'])->get();\n\nforeach($users as $user) {\n    // $user->followings_count;\n    // $user->followers_count;\n    // or \n    // $user->approved_followings_count;\n    // $user->approved_followers_count;\n}\n```\n\n### Attach user follow status to followable collection\n\nYou can use `Follower::attachFollowStatus(Collection $followables)` to attach the user follow status, it will set `has_followed` attribute to each model of `$followables`:\n\n#### For model\n\n```php\n$user1 = User::find(1);\n\n$user->attachFollowStatus($user1);\n\n// result\n[\n    \"id\" => 1\n    \"name\" => \"user1\"\n    \"private\" => false\n    \"created_at\" => \"2021-06-07T15:06:47.000000Z\"\n    \"updated_at\" => \"2021-06-07T15:06:47.000000Z\"\n    \"has_followed\" => true  \n  ]\n```\n\n#### For `Collection | Paginator | LengthAwarePaginator | array`:\n\n```php\n$user = auth()->user();\n\n$users = User::oldest('id')->get();\n\n$users = $user->attachFollowStatus($users);\n\n$users = $users->toArray();\n\n// result\n[\n  [\n    \"id\" => 1\n    \"name\" => \"user1\"\n    \"private\" => false\n    \"created_at\" => \"2021-06-07T15:06:47.000000Z\"\n    \"updated_at\" => \"2021-06-07T15:06:47.000000Z\"\n    \"has_followed\" => true  \n  ],\n  [\n    \"id\" => 2\n    \"name\" => \"user2\"\n    \"private\" => false\n    \"created_at\" => \"2021-06-07T15:06:47.000000Z\"\n    \"updated_at\" => \"2021-06-07T15:06:47.000000Z\"\n    \"has_followed\" => true\n  ],\n  [\n    \"id\" => 3\n    \"name\" => \"user3\"\n    \"private\" => false\n    \"created_at\" => \"2021-06-07T15:06:47.000000Z\"\n    \"updated_at\" => \"2021-06-07T15:06:47.000000Z\"\n    \"has_followed\" => false\n  ],\n  [\n    \"id\" => 4\n    \"name\" => \"user4\"\n    \"private\" => false\n    \"created_at\" => \"2021-06-07T15:06:47.000000Z\"\n    \"updated_at\" => \"2021-06-07T15:06:47.000000Z\"\n    \"has_followed\" => false\n  ],\n]\n```\n\n#### For pagination\n\n```php\n$users = User::paginate(20);\n\n$user->attachFollowStatus($users);\n```\n\n\n### Order by followers count\n\nYou can query users order by followers count with following methods:\n\n- `orderByFollowersCountDesc()`\n- `orderByFollowersCountAsc()`\n- `orderByFollowersCount(string $direction = 'desc')`\n\nexample:\n\n```php\n$users = User::orderByFollowersCountDesc()->get();\n$mostPopularUser = User::orderByFollowersCountDesc()->first();\n```\n\n### N+1 issue\n\nTo avoid the N+1 issue, you can use eager loading to reduce this operation to just 2 queries. When querying, you may specify which relationships should be eager loaded using the `with` method:\n\n```php\n$users = User::with('followings')->get();\n\nforeach($users as $user) {\n    $user->isFollowing(2);\n}\n\n$users = User::with('followables')->get();\n\nforeach($users as $user) {\n    $user->isFollowedBy(2);\n}\n```\n\n### Events\n\n| **Event**                                 | **Description**                             |\n| ----------------------------------------- | ------------------------------------------- |\n| `Overtrue\\LaravelFollow\\Events\\Followed`   | Triggered when the relationship is created. |\n| `Overtrue\\LaravelFollow\\Events\\Unfollowed` | Triggered when the relationship is deleted. |\n\n## :heart: Sponsor me \n\n[![Sponsor me](https://github.com/overtrue/overtrue/blob/master/sponsor-me.svg?raw=true)](https://github.com/sponsors/overtrue)\n\n如果你喜欢我的项目并想支持它，[点击这里 :heart:](https://github.com/sponsors/overtrue)\n\n## Project supported by JetBrains\n\nMany thanks to Jetbrains for kindly providing a license for me to work on this and other open-source projects.\n\n[![](https://resources.jetbrains.com/storage/products/company/brand/logos/jb_beam.svg)](https://www.jetbrains.com/?from=https://github.com/overtrue)\n\n\n## Contributing\n\nYou can contribute in one of three ways:\n\n1. File bug reports using the [issue tracker](https://github.com/overtrue/laravel-follow/issues).\n2. Answer questions or fix bugs on the [issue tracker](https://github.com/overtrue/laravel-follow/issues).\n3. Contribute new features or update the wiki.\n\n_The code contribution process is not very formal. You just need to make sure that you follow the PSR-0, PSR-1, and PSR-2 coding guidelines. Any new code contributions must be accompanied by unit tests where applicable._\n\n## PHP 扩展包开发\n\n> 想知道如何从零开始构建 PHP 扩展包？\n>\n> 请关注我的实战课程，我会在此课程中分享一些扩展开发经验 —— [《PHP 扩展包实战教程 - 从入门到发布》](https://learnku.com/courses/creating-package)\n\n## License\n\nMIT\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.5888671875,
          "content": "{\n  \"name\": \"overtrue/laravel-follow\",\n  \"description\": \"User follow unfollow system for Laravel.\",\n  \"license\": \"MIT\",\n  \"authors\": [\n    {\n      \"name\": \"overtrue\",\n      \"email\": \"anzhengchao@gmail.com\"\n    }\n  ],\n  \"require\": {\n    \"laravel/framework\": \"^9.0|^10.0|^11.0\"\n  },\n  \"autoload\": {\n    \"psr-4\": {\n      \"Overtrue\\\\LaravelFollow\\\\\": \"src\"\n    }\n  },\n  \"autoload-dev\": {\n    \"psr-4\": {\n      \"Tests\\\\\": \"tests\"\n    }\n  },\n  \"require-dev\": {\n    \"mockery/mockery\": \"^1.5\",\n    \"phpunit/phpunit\": \"^10.0\",\n    \"orchestra/testbench\": \"^8.0\",\n    \"friendsofphp/php-cs-fixer\": \"^3.8\",\n    \"brainmaestro/composer-git-hooks\": \"dev-master\",\n    \"laravel/pint\": \"^1.5\"\n  },\n  \"extra\": {\n    \"laravel\": {\n      \"providers\": [\n        \"Overtrue\\\\LaravelFollow\\\\FollowServiceProvider\"\n      ]\n    },\n    \"hooks\": {\n      \"pre-commit\": [\n        \"composer fix-style\",\n        \"composer test\"\n      ],\n      \"pre-push\": [\n        \"composer test\",\n        \"composer check-style\"\n      ]\n    }\n  },\n  \"scripts\": {\n    \"post-update-cmd\": [\n      \"cghooks remove\",\n      \"cghooks add --ignore-lock\",\n      \"cghooks update\"\n    ],\n    \"post-merge\": \"composer install\",\n    \"post-install-cmd\": [\n      \"cghooks remove\",\n      \"cghooks add --ignore-lock\",\n      \"cghooks update\"\n    ],\n    \"cghooks\": \"vendor/bin/cghooks\",\n    \"check-style\": \"vendor/bin/pint --test\",\n    \"fix-style\": \"vendor/bin/pint\",\n    \"test\": \"phpunit --colors=always\"\n  },\n  \"scripts-descriptions\": {\n    \"test\": \"Run all tests.\",\n    \"check-style\": \"Run style checks (only dry run - no fixing!).\",\n    \"fix-style\": \"Run style checks and fix violations.\"\n  }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "migrations",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.5009765625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" backupGlobals=\"false\" bootstrap=\"vendor/autoload.php\" colors=\"true\" processIsolation=\"false\" stopOnFailure=\"false\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.2/phpunit.xsd\" cacheDirectory=\".phpunit.cache\" backupStaticProperties=\"false\">\n  <coverage/>\n  <testsuites>\n    <testsuite name=\"Application Test Suite\">\n      <directory>./tests/</directory>\n    </testsuite>\n  </testsuites>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}