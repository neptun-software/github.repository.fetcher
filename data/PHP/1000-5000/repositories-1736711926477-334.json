{
  "metadata": {
    "timestamp": 1736711926477,
    "page": 334,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "doctrine/DoctrineFixturesBundle",
      "stars": 2468,
      "defaultBranch": "4.0.x",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2265625,
          "content": "/.gitattributes export-ignore\n/.github export-ignore\n/.gitignore export-ignore\n/tests export-ignore\n/phpcs.xml.dist export-ignore\n/phpunit.xml.dist export-ignore\n/phpstan.neon.dist export-ignore\n/phpstan-baseline.neon export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.056640625,
          "content": "vendor/\n/.phpunit.result.cache\ncomposer.lock\n.phpcs-cache\n"
        },
        {
          "name": ".symfony.bundle.yaml",
          "type": "blob",
          "size": 0.17578125,
          "content": "branches:\n    - \"3.3.x\"\n    - \"3.4.x\"\n    - \"3.5.x\"\n    - \"3.6.x\"\n    - \"3.7.x\"\n    - \"4.0.x\"\nmaintained_branches:\n    - \"3.7.x\"\n    - \"4.0.x\"\ndoc_dir: \"docs/\"\ndev_branch: \"4.0.x\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.052734375,
          "content": "Copyright (c) 2011 Fabien Potencier, Doctrine Project\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,\nand to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.markdown",
          "type": "blob",
          "size": 0.3583984375,
          "content": "DoctrineFixturesBundle\n======================\n\nThis bundle integrates the [Doctrine2 Data Fixtures library](https://github.com/doctrine/data-fixtures)\ninto Symfony so that you can load data fixtures programmatically into the Doctrine ORM or ODM.\n\nRead the full [documentation of this bundle](http://symfony.com/doc/current/bundles/DoctrineFixturesBundle/index.html).\n"
        },
        {
          "name": "UPGRADE.md",
          "type": "blob",
          "size": 2.30859375,
          "content": "UPGRADE to 4.0\n==============\n\n## Type declarations\n\nType declarations have been added everywhere. Types extending or implementing\ntypes from this bundle need to be updated to match the new signatures.\n\n## Final classes\n\nSome classes have been marked as `final` because they are not supposed to be\nextended. Consider using composition instead of inheritance.\n\n## Mandatory ManagerRegistry argument\n\nIt is now mandatory to pass a `ManagerRegistry` instance to the constructor of\n`Doctrine\\Bundle\\FixturesBundle\\Command\\LoadDataFixturesDoctrineCommand`.\n\n\nUPGRADE to 3.0\n==============\n\n* The automatic loading of fixtures in a directory (e.g.\n    AppBundle\\DataFixtures\\ORM) was removed. Instead, register\n    your fixture classes as services and tag them with `doctrine.fixture.orm`,\n    like this:\n```yaml\n# src/AppBundle/Resources/config/dataFixture.yml\nservices:\n  _defaults:\n    tags: ['doctrine.fixture.orm']\n    autowire: true # if you need dependency injection, see next bullet point\n\n  AppBundle\\DataFixtures\\ORM\\:\n    resource: '../../DataFixtures/ORM/*'\n```\n\n  This will happen automatically if you're using the Symfony 3.3\n    or higher **default service configuration** and your fixture classes\n    extend the normal ``Doctrine\\Bundle\\FixturesBundle\\Fixture`` class,\n    or implement the new ``Doctrine\\Bundle\\FixturesBundle\\ORMFixtureInterface``.\n\n* The base ``Fixture`` class no longer implements ``ContainerAwareInterface``\n    and so no longer have a ``$this->container`` property. You *can* manually\n    implement this interface. Or, a better idea is to update your fixtures\n    to use dependency injection:\n\n```diff\nclass MyFixture extends Fixture\n{\n+     private $someService;\n\n+     public function __construct(SomeService $someService)\n+     {\n+         $this->someService = $someService;\n+     }\n\n    public function load(ObjectManager $manager)\n    {\n-         $this->container->get('some_service')->someMethod();\n+         $this->someService->someMethod();\n    }\n}\n```\n\n* The base ``Fixture`` class no longer implements ``DependentFixtureInterface``.\n    If you want to have a ``getDependencies()`` method, be sure to implement\n    this interface explicitly:\n\n```diff\n+ use Doctrine\\Common\\DataFixtures\\DependentFixtureInterface;\n\n- class MyFixture extends Fixture\n+ class MyFixture extends Fixture implements DependentFixtureInterface\n```\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.791015625,
          "content": "{\n    \"name\": \"doctrine/doctrine-fixtures-bundle\",\n    \"description\": \"Symfony DoctrineFixturesBundle\",\n    \"license\": \"MIT\",\n    \"type\": \"symfony-bundle\",\n    \"keywords\": [\n        \"Persistence\",\n        \"Fixture\"\n    ],\n    \"authors\": [\n        {\n            \"name\": \"Fabien Potencier\",\n            \"email\": \"fabien@symfony.com\"\n        },\n        {\n            \"name\": \"Doctrine Project\",\n            \"homepage\": \"https://www.doctrine-project.org\"\n        },\n        {\n            \"name\": \"Symfony Community\",\n            \"homepage\": \"https://symfony.com/contributors\"\n        }\n    ],\n    \"homepage\": \"https://www.doctrine-project.org\",\n    \"require\": {\n        \"php\": \"^8.1\",\n        \"doctrine/data-fixtures\": \"^2.0\",\n        \"doctrine/doctrine-bundle\": \"^2.2\",\n        \"doctrine/orm\": \"^2.14.0 || ^3.0\",\n        \"doctrine/persistence\": \"^2.4 || ^3.0\",\n        \"psr/log\": \"^2 || ^3\",\n        \"symfony/config\": \"^5.4 || ^6.0 || ^7.0\",\n        \"symfony/console\": \"^5.4 || ^6.0 || ^7.0\",\n        \"symfony/dependency-injection\": \"^5.4 || ^6.0 || ^7.0\",\n        \"symfony/deprecation-contracts\": \"^2.1 || ^3\",\n        \"symfony/doctrine-bridge\": \"^5.4.48 || ^6.4.16 || ^7.1.9\",\n        \"symfony/http-kernel\": \"^5.4 || ^6.0 || ^7.0\"\n    },\n    \"require-dev\": {\n        \"doctrine/coding-standard\": \"^12\",\n        \"phpstan/phpstan\": \"^2\",\n        \"phpunit/phpunit\": \"^10.5.38 || ^11\"\n    },\n    \"conflict\": {\n        \"doctrine/dbal\": \"< 3\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Doctrine\\\\Bundle\\\\FixturesBundle\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Doctrine\\\\Bundle\\\\FixturesBundle\\\\Tests\\\\\": \"tests\"\n        }\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"dealerdirect/phpcodesniffer-composer-installer\": true\n        },\n        \"sort-packages\": true\n    }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpcs.xml.dist",
          "type": "blob",
          "size": 1.0947265625,
          "content": "<?xml version=\"1.0\"?>\n<ruleset>\n    <arg name=\"basepath\" value=\".\"/>\n    <arg name=\"extensions\" value=\"php\"/>\n    <arg name=\"parallel\" value=\"45\"/>\n    <arg name=\"cache\" value=\".phpcs-cache\"/>\n    <arg name=\"colors\"/>\n\n    <config name=\"php_version\" value=\"80100\"/>\n\n     <!-- Ignore warnings and show progress of the run -->\n    <arg value=\"nps\"/>\n\n    <file>src</file>\n    <file>tests</file>\n\n    <rule ref=\"Doctrine\" />\n\n\n    <rule ref=\"SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming.SuperfluousSuffix\">\n        <exclude-pattern>src/FixtureGroupInterface.php</exclude-pattern>\n        <exclude-pattern>src/ORMFixtureInterface.php</exclude-pattern>\n    </rule>\n    <rule ref=\"PSR1.Classes.ClassDeclaration.MultipleClasses\">\n        <exclude-pattern>src/Loader/SymfonyBridgeLoader.php</exclude-pattern>\n        <exclude-pattern>src/Command/CommandCompatibility.php</exclude-pattern>\n        <exclude-pattern>tests/IntegrationTest.php</exclude-pattern>\n    </rule>\n    <rule ref=\"Squiz.Classes.ClassFileName.NoMatch\">\n        <exclude-pattern>tests/IntegrationTest.php</exclude-pattern>\n    </rule>\n</ruleset>\n"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.0859375,
          "content": "parameters:\n    phpVersion: 80100\n    level: 7\n    paths:\n        - src\n        - tests\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.7080078125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n         colors=\"true\"\n         bootstrap=\"vendor/autoload.php\"\n         displayDetailsOnTestsThatTriggerDeprecations=\"true\"\n    >\n    <testsuites>\n        <testsuite name=\"DoctrineFixturesBundle for the Symfony Framework\">\n            <directory>./tests</directory>\n        </testsuite>\n    </testsuites>\n\n\n    <source ignoreSuppressionOfDeprecations=\"true\">\n        <include>\n            <directory>src</directory>\n        </include>\n    </source>\n\n    <php>\n        <server name=\"DOCTRINE_DEPRECATIONS\" value=\"trigger\"/>\n    </php>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}