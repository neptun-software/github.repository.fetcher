{
  "metadata": {
    "timestamp": 1736711777849,
    "page": 37,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cakephp/phinx",
      "stars": 4472,
      "defaultBranch": "0.x",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.302734375,
          "content": "; This file is for unifying the coding style for different editors and IDEs.\n; More information at https://editorconfig.org\n\nroot = true\n\n[*]\nindent_style = space\nindent_size = 4\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.yml]\nindent_size = 2\n\n[*.neon]\nindent_style = tab\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 1.005859375,
          "content": "# Auto-detect text files, ensure they use LF.\n* text text=auto eol=lf\n\n# These files are always considered text and should use LF.\n# See core.whitespace @ https://git-scm.com/docs/git-config for whitespace flags.\n*.php   text eol=lf whitespace=blank-at-eol,blank-at-eof,space-before-tab,tab-in-indent,tabwidth=4 diff=php\n*.json  text eol=lf whitespace=blank-at-eol,blank-at-eof,space-before-tab,tab-in-indent,tabwidth=4\n*.test  text eol=lf whitespace=blank-at-eol,blank-at-eof,space-before-tab,tab-in-indent,tabwidth=4\n*.yml   text eol=lf whitespace=blank-at-eol,blank-at-eof,space-before-tab,tab-in-indent,tabwidth=2\n\n.editorconfig export-ignore\n.gitattributes export-ignore\n.gitignore export-ignore\n.stickler export-ignore\nbox.json export-ignore\nCONTRIBUTING.md export-ignore\ndocker-compose.yml export-ignore\nDockerfile export-ignore\ndocs.Dockerfile export-ignore\nphpcs.xml export-ignore\nphpstan.neon export-ignore\nphpstan-baseline.neon export-ignore\nphpunit.xml.dist export-ignore\n/.github/ export-ignore\n/tests/ export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.9599609375,
          "content": "# These all appear to be hidden files from various IDEs & Operating Systems.\n# These probably belong in ~/.gitignore_global and not in here.\n# See https://help.github.com/articles/ignoring-files\n.DS_Store\n.buildpath\n.project\n.settings\n.idea\n\n# These seem to be generated by the build tool for releasing a tagged version of this software\nbuild/\n*.tgz\ndist/\n\n# Don't commit composer.phar, or the .phar our build tool generates\n*.phar\n\n# Don't commit composer lock file\ncomposer.lock\n\n# this is the code coverage generated when running phpunit.\n/logs/\n\n# ignore core development artifacts\n/db/\n/migrations/\n/phinx.yml\n/phinx.yaml\n/phinx.php\n/phinx.json\n\n# python artifacts\n*.pyc\n\n# sphinx generates HTML files for the documentation here\ndocs/_build\ndocs/*/_build/\n\n# composer installed dependencies\nvendor/\n\n# this is user specific settings for running phpunit to override the defaults in phpunit.xml.dist\nphpunit.xml\n.phpunit.result.cache\n\n# sqlite test database\nphinx_testing.sqlite3\n"
        },
        {
          "name": ".stickler.yml",
          "type": "blob",
          "size": 0.1318359375,
          "content": "linters:\n  phpcs:\n    standard: CakePHP3\n    fixer: true\n\nfiles:\n  ignore:\n    - 'vendor/*'\n\nfixers:\n  enable: true\n  workflow: commit\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.005859375,
          "content": "# How to contribute to Phinx\n\nPhinx relies heavily on external contributions in order to make it the best database migration\ntool possible. Without the support of our 130+ contributors, we wouldn't be where we are today!\nWe encourage anyone to submit documentation enhancements and code.\n\nIssues, feature requests, and bugs should be submitted using the Github issue tool:\nhttps://github.com/cakephp/phinx/issues.\n\nThis document briefly outlines the requirements to contribute code to Phinx.\n\n## Considerations\n\nBefore you submit your pull request take a moment to answer the following questions.\n\nAnswering '**YES**' to all questions will increase the likelihood of your PR being accepted!\n\n* Have I implemented my feature for as many database adapters as possible?\n* Does my new feature improve Phinx's performance or keep it consistent?\n* Does my feature fit within the database migration space?\n* Is the code entirely my own and free from any commercial licensing?\n* Am I happy to release my code under the MIT license?\n* Is my code formatted using the [PSR-2](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md) coding standard?\n\n**Note:** We accept bug fixes much faster into our development branch than new features.\n\n## Getting Started\n\nGreat, so you want to contribute. Let's get started:\n\n1. Start by forking Phinx on GitHub: https://github.com/cakephp/phinx\n\n1. Clone your repository to a local directory on your development box.\n\n1. If you do not have [Composer](https://getcomposer.org) set up already, install it:\n\n    ```\n    curl -sS https://getcomposer.org/installer | php\n    ```\n\n1. Change to your Phinx clone directory and pull the necessary dependencies:\n\n    ```\n    php composer.phar install\n    ```\n\n1. Copy the `phpunit.xml.dist` template to `phpunit.xml`:\n\n    ```\n    cp phpunit.xml.dist phpunit.xml\n    ```\n\n   And change the configuration to suit your environment. If you are not using any particular adapter you can disable it in the `phpunit.xml` file.\n\n1. Run the unit tests locally to ensure they pass:\n\n    ```\n    vendor/bin/phpunit\n    ```\n\n1. Write the code and unit tests for your bug fix or feature.\n\n1. Add any relevant documentation.\n\n1. Run the unit tests again and ensure they pass.\n\n1. Open a pull request on the Github project page. Ensure the code is being merged into `master`.\n\n## Getting Started with docker\n\nIf you do not wish to install MySQL and Postgres locally to run unit tests\ninstall [docker-compose](https://docs.docker.com/compose/) for your platform.\n\n1. Download all images, build and start development container:\n\n    ```\n    docker-compose run --rm phinx\n    ```\n\n1. Install dependencies:\n\n    ```\n    composer update\n    ```\n\n1. Run unittest:\n\n    ```\n    vendor/bin/phpunit\n    ```\n\n## Documentation\n\nThe Phinx documentation is stored in the **docs** directory using the [RestructedText](https://docutils.sourceforge.io/rst.html)\nformat. All documentation merged to main branch is automatically published to the Phinx documentation site available at https://docs.phinx.org.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.44921875,
          "content": "FROM php:7.3\n\n# system dependecies\nRUN apt-get update && apt-get install -y \\\n   git \\\n   libicu-dev \\\n   libpq-dev \\\n   unzip \\\n   zlib1g-dev \\\n   libonig-dev \\\n   libzip-dev\n\n# PHP dependencies\nRUN docker-php-ext-install \\\n    intl \\\n    mbstring \\\n    pdo \\\n    pdo_mysql \\\n    pdo_pgsql \\\n    zip\n\n# composer\nRUN curl -sS https://getcomposer.org/installer | php && \\\n\t  mv composer.phar /usr/local/bin/composer\nENV COMPOSER_ALLOW_SUPERUSER=1\n\nWORKDIR /src\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.138671875,
          "content": "(The MIT license)\n\nCopyright (c) 2012-2017 Rob Morgan\nCopyright (c) 2017-present, Cake Software Foundation, Inc. (https://cakefoundation.org)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.4111328125,
          "content": "# [Phinx](https://phinx.org): Simple PHP Database Migrations\n\n[![Build Status](https://github.com/cakephp/phinx/workflows/CI/badge.svg?branch=0.x&event=push)](https://github.com/cakephp/phinx/actions?query=workflow%3A%22CI%22+branch%3A0.x+event%3Apush)\n[![Code Coverage](https://codecov.io/gh/cakephp/phinx/branch/master/graph/badge.svg)](https://codecov.io/gh/cakephp/phinx)\n![Packagist Version](https://img.shields.io/packagist/v/robmorgan/phinx)\n[![Minimum PHP Version](https://img.shields.io/badge/php-%3E%3D%208.1-8892BF.svg)](https://php.net/)\n![Packagist Downloads](https://img.shields.io/packagist/dt/robmorgan/phinx)\n\n## Intro\n\nPhinx makes it ridiculously easy to manage the database migrations for your PHP app. In less than 5 minutes, you can install Phinx and create your first database migration. Phinx is just about migrations without all the bloat of a database ORM system or framework.\n\n**Check out [book.cakephp.org/phinx](https://book.cakephp.org/phinx) for the comprehensive documentation.**\n\n![phinxterm](https://cloud.githubusercontent.com/assets/178939/3887559/e6b5e524-21f2-11e4-8256-0ba6040725fc.gif)\n\n### Features\n\n* Write database migrations using database agnostic PHP code.\n* Migrate up and down.\n* Migrate on deployment.\n* Seed data after database creation.\n* Get going in less than 5 minutes.\n* Stop worrying about the state of your database.\n* Take advantage of SCM features such as branching.\n* Integrate with any app.\n\n### Supported Adapters\n\nPhinx natively supports the following database adapters:\n\n* MySQL\n* PostgreSQL\n* SQLite\n* Microsoft SQL Server\n\n## Install & Run\n\nSee [version and branch overview](https://github.com/cakephp/phinx/wiki#version-and-branch-overview) for branch and PHP compatibility.\n\n### Composer\n\nThe fastest way to install Phinx is to add it to your project using Composer (https://getcomposer.org/).\n\n1. Install Composer:\n\n    ```\n    curl -sS https://getcomposer.org/installer | php\n    ```\n\n1. Require Phinx as a dependency using Composer:\n\n    ```\n    php composer.phar require robmorgan/phinx\n    ```\n\n1. Install Phinx:\n\n    ```\n    php composer.phar install\n    ```\n\n1. Execute Phinx:\n\n    ```\n    php vendor/bin/phinx\n    ```\n\n### As a Phar\n\nYou can also use the Box application to build Phinx as a Phar archive (https://box-project.github.io/box2/).\n\n1. Clone Phinx from GitHub\n\n    ```\n    git clone https://github.com/cakephp/phinx.git\n    cd phinx\n    ```\n\n1. Install Composer\n\n    ```\n    curl -s https://getcomposer.org/installer | php\n    ```\n\n1. Install the Phinx dependencies\n\n    ```\n    php composer.phar install\n    ```\n\n1. Install Box:\n\n    ```\n    curl -LSs https://box-project.github.io/box2/installer.php | php\n    ```\n\n1. Create a Phar archive\n\n    ```\n    php box.phar build\n    ```\n\n## Documentation\n\nCheck out https://book.cakephp.org/phinx for the comprehensive documentation.\n\nOther translations include:\n\n * [Chinese](https://tsy12321.gitbooks.io/phinx-doc/) (Maintained by [@tsy12321](https://github.com/tsy12321/phinx-doc))\n\n## Contributing\n\nPlease read the [CONTRIBUTING](CONTRIBUTING.md) document.\n\n## News & Updates\n\nFollow [@CakePHP](https://twitter.com/cakephp) on Twitter to stay up to date.\n\n## Limitations\n\n### PostgreSQL\n\n- Not able to set a unique constraint on a table (<https://github.com/cakephp/phinx/issues/1026>).\n\n\n## Misc\n\n### Version History\n\nPlease read the [release notes](https://github.com/cakephp/phinx/releases).\n\n### License\n\n(The MIT license)\n\nCopyright (c) 2017 Rob Morgan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "box.json",
          "type": "blob",
          "size": 0.68359375,
          "content": "{\n    \"alias\": \"phinx.phar\",\n    \"compactors\": [\n        \"KevinGH\\\\Box\\\\Compactor\\\\Json\",\n        \"KevinGH\\\\Box\\\\Compactor\\\\Php\"\n    ],\n    \"directories\": [\"src\", \"app\", \"data\", \"vendor/symfony/console/Resources\"],\n    \"exclude-composer-files\": false,\n    \"files\": [\n        \"LICENSE\"\n    ],\n    \"finder\": [\n        {\n            \"name\": \"*.php\",\n            \"exclude\": [\n                \"File\",\n                \"mikey179\",\n                \"Net\",\n                \"phpunit\",\n                \"phpunit-test-case\",\n                \"Tester\",\n                \"Tests\",\n                \"tests\"\n            ],\n            \"in\": \"vendor\"\n        }\n    ],\n    \"git-tag\": \"git_tag\",\n    \"output\": \"phinx.phar\"\n}\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.7783203125,
          "content": "{\n    \"name\": \"robmorgan/phinx\",\n    \"type\": \"library\",\n    \"description\": \"Phinx makes it ridiculously easy to manage the database migrations for your PHP app.\",\n    \"keywords\": [\n        \"phinx\",\n        \"migrations\",\n        \"database\",\n        \"db\",\n        \"database migrations\"\n    ],\n    \"homepage\": \"https://phinx.org\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Rob Morgan\",\n            \"email\": \"robbym@gmail.com\",\n            \"homepage\": \"https://robmorgan.id.au\",\n            \"role\": \"Lead Developer\"\n        },\n        {\n            \"name\": \"Woody Gilk\",\n            \"email\": \"woody.gilk@gmail.com\",\n            \"homepage\": \"https://shadowhand.me\",\n            \"role\": \"Developer\"\n        },\n        {\n            \"name\": \"Richard Quadling\",\n            \"email\": \"rquadling@gmail.com\",\n            \"role\": \"Developer\"\n        },\n        {\n            \"name\": \"CakePHP Community\",\n            \"role\": \"Developer\",\n            \"homepage\": \"https://github.com/cakephp/phinx/graphs/contributors\"\n        }\n    ],\n    \"require\": {\n        \"php-64bit\": \">=8.1\",\n        \"composer-runtime-api\": \"^2.0\",\n        \"cakephp/database\": \"^5.0.2\",\n        \"psr/container\": \"^1.1|^2.0\",\n        \"symfony/config\": \"^3.4|^4.0|^5.0|^6.0|^7.0\",\n        \"symfony/console\": \"^6.0|^7.0\"\n    },\n    \"require-dev\": {\n        \"ext-json\": \"*\",\n        \"ext-pdo\": \"*\",\n        \"cakephp/cakephp\": \"^5.0.2\",\n        \"cakephp/cakephp-codesniffer\": \"^5.0\",\n        \"phpunit/phpunit\": \"^9.5.19\",\n        \"symfony/yaml\": \"^3.4|^4.0|^5.0|^6.0|^7.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Phinx\\\\\": \"src/Phinx/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Test\\\\Phinx\\\\\": \"tests/Phinx/\"\n        }\n    },\n    \"suggest\": {\n        \"ext-json\": \"Install if using JSON configuration format\",\n        \"ext-pdo\": \"PDO extension is needed\",\n        \"symfony/yaml\": \"Install if using YAML configuration format\"\n    },\n    \"scripts\": {\n        \"check\": [\n            \"@test\",\n            \"@cs-check\"\n        ],\n        \"cs-check\": \"phpcs\",\n        \"cs-fix\": \"phpcbf\",\n        \"stan\": \"phpstan analyse\",\n        \"stan-setup\": \"cp composer.json composer.backup && composer require --dev phpstan/phpstan:~1.9.0 && mv composer.backup composer.json\",\n        \"lowest\": \"validate-prefer-lowest\",\n        \"lowest-setup\": \"composer update --prefer-lowest --prefer-stable --prefer-dist --no-interaction && cp composer.json composer.backup && composer require --dev dereuromark/composer-prefer-lowest && mv composer.backup composer.json\",\n        \"test\": \"phpunit --colors=always\"\n    },\n    \"bin\": [\n        \"bin/phinx\"\n    ],\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"config\": {\n        \"allow-plugins\": {\n            \"dealerdirect/phpcodesniffer-composer-installer\": true\n        }\n    }\n}\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.634765625,
          "content": "version: \"2\"\nservices:\n    phinx:\n        build: .\n        volumes:\n            - .:/src\n        links:\n            - mysql\n            - postgres\n        command: bash\n        environment:\n            - TESTS_PHINX_DB_ADAPTER_MYSQL_HOST=mysql\n            - TESTS_PHINX_DB_ADAPTER_POSTGRES_HOST=postgres\n    mysql:\n        image: mysql:5.6\n        environment:\n            - MYSQL_DATABASE=phinx\n            - MYSQL_ROOT_PASSWORD=root\n        ports:\n            - 3306:3306\n\n    postgres:\n        image: postgres:9.4\n        environment:\n            - POSTGRES_DB=phinx\n            - POSTGRES_PASSWORD=postgres\n        ports:\n            - 5432:5432\n"
        },
        {
          "name": "docs.Dockerfile",
          "type": "blob",
          "size": 0.732421875,
          "content": "# Generate the HTML output.\nFROM markstory/cakephp-docs-builder as builder\n\nCOPY docs /data/docs\n\n# Build docs with sphinx\nRUN cd /data/docs-builder && \\\n  make website LANGS=\"en\" SOURCE=/data/docs DEST=/data/website\n\n\n# Build a small nginx container with just the static site in it.\nFROM markstory/cakephp-docs-builder:runtime as runtime\n\n# Configure search index script\nENV LANGS=\"en\"\nENV SEARCH_SOURCE=\"/usr/share/nginx/html\"\nENV SEARCH_URL_PREFIX=\"/phinx/0\"\n\nCOPY --from=builder /data/docs /data/docs\nCOPY --from=builder /data/website /data/website\nCOPY --from=builder /data/docs-builder/nginx.conf /etc/nginx/conf.d/default.conf\n\n# Move files into final location\nRUN cp -R /data/website/html/* /usr/share/nginx/html \\\n  && rm -rf /data/website/\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpcs.xml",
          "type": "blob",
          "size": 0.451171875,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\"Phinx\">\n    <config name=\"installed_paths\" value=\"../../cakephp/cakephp-codesniffer\"/>\n\n    <rule ref=\"CakePHP\"/>\n\n    <rule ref=\"SlevomatCodingStandard.Namespaces.UnusedUses\">\n        <properties>\n            <property name=\"searchAnnotations\" value=\"true\"/>\n        </properties>\n    </rule>\n\n    <arg value=\"nps\"/>\n\n    <file>src/</file>\n    <file>tests/</file>\n\n    <exclude-pattern>*_files*</exclude-pattern>\n</ruleset>\n"
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 0.431640625,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Variable \\\\$tval on left side of \\\\?\\\\? always exists and is not nullable\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Phinx/Config/Config.php\n\n\t\t-\n\t\t\tmessage: \"#^Expression on left side of \\\\?\\\\? is not nullable\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Phinx/Db/Adapter/MysqlAdapter.php\n\n\t\t-\n\t\t\tmessage: \"#^Ternary operator condition is always true\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Phinx/Db/Adapter/SqlServerAdapter.php\n\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.2451171875,
          "content": "includes:\n\t- phpstan-baseline.neon\n\nparameters:\n\tlevel: 6\n\ttreatPhpDocTypesAsCertain: false\n\tcheckMissingIterableValueType: false\n\tcheckGenericClassInNonGenericObjectType: false\n\tpaths:\n\t\t- src/\n\tignoreErrors:\n\t\t- '#Unsafe usage of new static\\(\\)\\.#'\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 1.3662109375,
          "content": "<phpunit\n    bootstrap=\"tests/phpunit-bootstrap.php\"\n    colors=\"true\"\n    columns=\"max\"\n    convertErrorsToExceptions=\"true\"\n>\n\n    <!--\n    * This section defines configuration for running the Phinx unit tests. Some tests\n    * have dependencies to PHP extensions and databases which may not be installed\n    * on the target system. For these cases, the ability to configure or disable\n    * testing is provided below.\n    *\n    * Do not edit this file! Instead, copy this file to phpunit.xml, and\n    * edit the new file. Never commit plain text passwords to the source code\n    * repository.\n    -->\n    <php>\n        <!-- SqlServer\n        <env name=\"SQLSRV_DSN\" value=\"sqlsrv://user:pass@localhost/test\"/>\n        -->\n        <!-- MySQL\n        <env name=\"MYSQL_DSN\" value=\"mysql://root:root@127.0.0.1/phinx\"/>\n        -->\n        <!-- PostgreSQL\n        <env name=\"PGSQL_DSN\" value=\"pgsql://postgres:postgres@127.0.0.1/phinx\"/>\n        -->\n        <!-- SQLite\n        <env name=\"SQLITE_DSN\" value=\"sqlite:///:memory:\"/>\n        -->\n    </php>\n\n    <testsuite name=\"phinx\">\n        <directory>tests/</directory>\n    </testsuite>\n\n    <coverage>\n        <include>\n            <directory suffix=\".php\">src/Phinx/</directory>\n        </include>\n        <report>\n            <html outputDirectory=\"logs/report\" lowUpperBound=\"50\" highLowerBound=\"80\"/>\n        </report>\n    </coverage>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}