{
  "metadata": {
    "timestamp": 1736712209221,
    "page": 911,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "iamcal/php-emoji",
      "stars": 1259,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.09765625,
          "content": "[submodule \"build/emoji-data\"]\n\tpath = build/emoji-data\n\turl = git@github.com:iamcal/emoji-data.git\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.3779296875,
          "content": "language: php\n\nsudo: false\n\ngit:\n  submodules: false\nbefore_install:\n  - sed -i 's/git@github.com:/https:\\/\\/github.com\\//' .gitmodules\n  - git submodule update --init\n  - sed -i 's/git@github.com:/https:\\/\\/github.com\\//' build/emoji-data/.gitmodules\n  - git submodule update --init --recursive\n\nscript: php test/test.php\n\nnotifications:\n  webhooks: https://app.fossa.io/hooks/travisci\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0546875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2013 Cal Henderson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.0478515625,
          "content": "all:\n\tcd build && ./build.sh\n\t@php test/test.php\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.3447265625,
          "content": "# php-emoji - Process Emoji in PHP\n\n[![Build Status](https://travis-ci.org/iamcal/php-emoji.svg?branch=master)](https://travis-ci.org/iamcal/php-emoji)\n\nThis is a PHP library for dealing with Emoji, allowing you to convert between various native formats and displaying them using HTML.\n\nYou can read more about it and see a demo here: http://www.iamcal.com/emoji-in-web-apps/\n\nThe data this library is based on comes from another GitHub project: https://github.com/iamcal/emoji-data\n\n\n## USAGE\n```php\n<?php\ninclude('emoji.php');\n\n\n# when you recieve text from a mobile device, convert it\n# to the unified format.\n\n$data = emoji_docomo_to_unified($data);   # DoCoMo devices\n$data = emoji_kddi_to_unified($data);     # KDDI & Au devices\n$data = emoji_softbank_to_unified($data); # Softbank & pre-iOS6 Apple devices\n$data = emoji_google_to_unified($data);   # Google Android devices\n\n\n# when sending data back to mobile devices, you can\n# convert back to their native format.\n\n$data = emoji_unified_to_docomo($data);   # DoCoMo devices\n$data = emoji_unified_to_kddi($data);     # KDDI & Au devices\n$data = emoji_unified_to_softbank($data); # Softbank & pre-iOS6 Apple devices\n$data = emoji_unified_to_google($data);   # Google Android devices\n\n\n# when displaying data to anyone else, you can use HTML\n# to format the emoji.\n\n$data = emoji_unified_to_html($data);\n\n# if you want to use an editor(i.e:wysiwyg) to create the content, \n# you can use html_to_unified to store the unified value.\n\n$data = emoji_html_to_unified(emoji_unified_to_html($data));\n```\n\nWhen using the HTML format, you'll also need to include the <code>emoji.css</code> file, which points \nto the <code>emoji.png</code> image.\n\nIMPORTANT NOTE: This library currently only deals with UTF-8. If your source data is JIS\nor Shift-JIS, you're out of luck for the moment.\n\n\n## Credits\n\nBy Cal Henderson <cal@iamcal.com>\n\nImages and Emoji data come from <a href=\"https://github.com/iamcal/emoji-data\">emoji-data</a>.\n\nThis work is dual-licensed under the GPL v3 and the MIT license.\n\n\n## Version History\n\n* v1.0.0 - 2009-10-20 : First release\n* v1.2.0 - 2011-03-27 : ?\n* v1.3.0 - 2011-07-27 : ?\n* v1.4.0 - 2016-02-15 : Switch to using emoji-data as the backend, at v2.4.0\n* v1.4.1 - 2016-10-06 : Added `emoji_contains_emoji()`, added travis\n* v1.4.2 - 2017-03-03 : Support for unified modifiers when converting to/from HTML only (issue #34)\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.580078125,
          "content": "{\n    \"name\": \"iamcal/php-emoji\",\n    \"description\": \"This is a PHP library for dealing with Emoji, allowing you to convert between various native formats and displaying them using HTML.\",\n    \"keywords\": [\"emoji\", \"convert\", \"converter\"],\n    \"homepage\": \"https://github.com/iamcal/php-emoji\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Cal Henderson\",\n            \"email\": \"cal@iamcal.com\",\n            \"homepage\": \"http://www.iamcal.com/\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=5.0\"\n    },\n    \"autoload\": {\n        \"files\": [\"lib/emoji.php\"]\n    }\n}\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}