{
  "metadata": {
    "timestamp": 1736711863871,
    "page": 202,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ezyang/htmlpurifier",
      "stars": 3118,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.5546875,
          "content": "/.gitattributes export-ignore\n/.github export-ignore\n/.gitignore export-ignore\n/art export-ignore\n/benchmarks export-ignore\n/configdoc export-ignore\n/configdoc/usage.xml -crlf\n/docs export-ignore\n/Doxyfile export-ignore\n/extras export-ignore\n/INSTALL* export-ignore\n/maintenance export-ignore\n/NEWS export-ignore\n/package.php export-ignore\n/plugins export-ignore\n/phpdoc.ini export-ignore\n/smoketests export-ignore\n/test-* export-ignore\n/tests export-ignore\n/TODO export-ignore\n/update-for-release export-ignore\n/WYSIWYG export-ignore\n/release.config.js export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.41796875,
          "content": "tags\nconf/\ntest-settings.php\nconfig-schema.php\nlibrary/HTMLPurifier/DefinitionCache/Serializer/*/\nlibrary/standalone/\nlibrary/HTMLPurifier.standalone.php\nlibrary/HTMLPurifier*.tgz\nlibrary/package*.xml\nsmoketests/test-schema.html\nconfigdoc/*.html\nconfigdoc/configdoc.xml\ndocs/doxygen*\n*.phpt.diff\n*.phpt.exp\n*.phpt.log\n*.phpt.out\n*.phpt.php\n*.phpt.skip.php\n*.htmlt.ini\n*.patch\n/*.php\nvendor\ncomposer.lock\n*.rej\n*.orig\n*.bak\ncore\n"
        },
        {
          "name": "CREDITS",
          "type": "blob",
          "size": 0.3330078125,
          "content": "\nCREDITS\n\nAlmost everything written by Edward Z. Yang (Ambush Commander).  Lots of thanks\nto the DevNetwork Community for their help (see docs/ref-devnetwork.html for\nmore details), Feyd especially (namely IPv6 and optimization).  Thanks to RSnake\nfor letting me package his fantastic XSS cheatsheet for a smoketest.\n\n    vim: et sw=4 sts=4\n"
        },
        {
          "name": "Doxyfile",
          "type": "blob",
          "size": 53.17578125,
          "content": "# Doxyfile 1.5.3\n\n# This file describes the settings to be used by the documentation system\n# doxygen (www.doxygen.org) for a project\n#\n# All text after a hash (#) is considered a comment and will be ignored\n# The format is:\n#       TAG = value [value, ...]\n# For lists items can also be appended using:\n#       TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\" \")\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\n# This tag specifies the encoding used for all characters in the config file that\n# follow. The default is UTF-8 which is also the encoding used for all text before\n# the first occurrence of this tag. Doxygen uses libiconv (or the iconv built into\n# libc) for the transcoding. See http://www.gnu.org/software/libiconv for the list of\n# possible encodings.\n\nDOXYFILE_ENCODING      = UTF-8\n\n# The PROJECT_NAME tag is a single word (or a sequence of words surrounded\n# by quotes) that should identify the project.\n\nPROJECT_NAME           = HTMLPurifier\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number.\n# This could be handy for archiving the generated documentation or\n# if some version control system is used.\n\nPROJECT_NUMBER         = 4.18.0\n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute)\n# base path where the generated documentation will be put.\n# If a relative path is entered, it will be relative to the location\n# where doxygen was started. If left blank the current directory will be used.\n\nOUTPUT_DIRECTORY       = \"docs/doxygen \"\n\n# If the CREATE_SUBDIRS tag is set to YES, then doxygen will create\n# 4096 sub-directories (in 2 levels) under the output directory of each output\n# format and will distribute the generated files over these directories.\n# Enabling this option can be useful when feeding doxygen a huge amount of\n# source files, where putting all generated files in the same directory would\n# otherwise cause performance problems for the file system.\n\nCREATE_SUBDIRS         = NO\n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all constant output in the proper language.\n# The default language is English, other supported languages are:\n# Afrikaans, Arabic, Brazilian, Catalan, Chinese, Chinese-Traditional,\n# Croatian, Czech, Danish, Dutch, Finnish, French, German, Greek, Hungarian,\n# Italian, Japanese, Japanese-en (Japanese with English messages), Korean,\n# Korean-en, Lithuanian, Norwegian, Polish, Portuguese, Romanian, Russian,\n# Serbian, Slovak, Slovene, Spanish, Swedish, and Ukrainian.\n\nOUTPUT_LANGUAGE        = English\n\n# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will\n# include brief member descriptions after the members that are listed in\n# the file and class documentation (similar to JavaDoc).\n# Set to NO to disable this.\n\nBRIEF_MEMBER_DESC      = YES\n\n# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend\n# the brief description of a member or function before the detailed description.\n# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the\n# brief descriptions will be completely suppressed.\n\nREPEAT_BRIEF           = YES\n\n# This tag implements a quasi-intelligent brief description abbreviator\n# that is used to form the text in various listings. Each string\n# in this list, if found as the leading text of the brief description, will be\n# stripped from the text and the result after processing the whole list, is\n# used as the annotated text. Otherwise, the brief description is used as-is.\n# If left blank, the following values are used (\"$name\" is automatically\n# replaced with the name of the entity): \"The $name class\" \"The $name widget\"\n# \"The $name file\" \"is\" \"provides\" \"specifies\" \"contains\"\n# \"represents\" \"a\" \"an\" \"the\"\n\nABBREVIATE_BRIEF       = \"The $name class \" \\\n                         \"The $name widget \" \\\n                         \"The $name file \" \\\n                         is \\\n                         provides \\\n                         specifies \\\n                         contains \\\n                         represents \\\n                         a \\\n                         an \\\n                         the\n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then\n# Doxygen will generate a detailed section even if there is only a brief\n# description.\n\nALWAYS_DETAILED_SEC    = NO\n\n# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all\n# inherited members of a class in the documentation of that class as if those\n# members were ordinary class members. Constructors, destructors and assignment\n# operators of the base classes will not be shown.\n\nINLINE_INHERITED_MEMB  = NO\n\n# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full\n# path before files name in the file list and in the header files. If set\n# to NO the shortest path that makes the file name unique will be used.\n\nFULL_PATH_NAMES        = YES\n\n# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag\n# can be used to strip a user-defined part of the path. Stripping is\n# only done if one of the specified strings matches the left-hand part of\n# the path. The tag can be used to show relative paths in the file list.\n# If left blank the directory from which doxygen is run is used as the\n# path to strip.\n\nSTRIP_FROM_PATH        = \"C:/Users/Edward/Webs/htmlpurifier \" \\\n                         \"C:/Documents and Settings/Edward/My Documents/My Webs/htmlpurifier \"\n\n# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of\n# the path mentioned in the documentation of a class, which tells\n# the reader which header file to include in order to use a class.\n# If left blank only the name of the header file containing the class\n# definition is used. Otherwise one should specify the include paths that\n# are normally passed to the compiler using the -I flag.\n\nSTRIP_FROM_INC_PATH    =\n\n# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter\n# (but less readable) file names. This can be useful is your file systems\n# doesn't support long names like on DOS, Mac, or CD-ROM.\n\nSHORT_NAMES            = NO\n\n# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen\n# will interpret the first line (until the first dot) of a JavaDoc-style\n# comment as the brief description. If set to NO, the JavaDoc\n# comments will behave just like regular Qt-style comments\n# (thus requiring an explicit @brief command for a brief description.)\n\nJAVADOC_AUTOBRIEF      = YES\n\n# If the QT_AUTOBRIEF tag is set to YES then Doxygen will\n# interpret the first line (until the first dot) of a Qt-style\n# comment as the brief description. If set to NO, the comments\n# will behave just like regular Qt-style comments (thus requiring\n# an explicit \\brief command for a brief description.)\n\nQT_AUTOBRIEF           = NO\n\n# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen\n# treat a multi-line C++ special comment block (i.e. a block of //! or ///\n# comments) as a brief description. This used to be the default behaviour.\n# The new default is to treat a multi-line C++ comment block as a detailed\n# description. Set this tag to YES if you prefer the old behaviour instead.\n\nMULTILINE_CPP_IS_BRIEF = NO\n\n# If the DETAILS_AT_TOP tag is set to YES then Doxygen\n# will output the detailed description near the top, like JavaDoc.\n# If set to NO, the detailed description appears after the member\n# documentation.\n\nDETAILS_AT_TOP         = NO\n\n# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented\n# member inherits the documentation from any documented member that it\n# re-implements.\n\nINHERIT_DOCS           = YES\n\n# If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce\n# a new page for each member. If set to NO, the documentation of a member will\n# be part of the file/class/namespace that contains it.\n\nSEPARATE_MEMBER_PAGES  = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab.\n# Doxygen uses this value to replace tabs by spaces in code fragments.\n\nTAB_SIZE               = 4\n\n# This tag can be used to specify a number of aliases that acts\n# as commands in the documentation. An alias has the form \"name=value\".\n# For example adding \"sideeffect=\\par Side Effects:\\n\" will allow you to\n# put the command \\sideeffect (or @sideeffect) in the documentation, which\n# will result in a user-defined paragraph with heading \"Side Effects:\".\n# You can put \\n's in the value part of an alias to insert newlines.\n\nALIASES                =\n\n# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C\n# sources only. Doxygen will then generate output that is more tailored for C.\n# For instance, some of the names that are used will be different. The list\n# of all members will be omitted, etc.\n\nOPTIMIZE_OUTPUT_FOR_C  = NO\n\n# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java\n# sources only. Doxygen will then generate output that is more tailored for Java.\n# For instance, namespaces will be presented as packages, qualified scopes\n# will look different, etc.\n\nOPTIMIZE_OUTPUT_JAVA   = NO\n\n# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want to\n# include (a tag file for) the STL sources as input, then you should\n# set this tag to YES in order to let doxygen match functions declarations and\n# definitions whose arguments contain STL classes (e.g. func(std::string); v.s.\n# func(std::string) {}). This also make the inheritance and collaboration\n# diagrams that involve STL classes more complete and accurate.\n\nBUILTIN_STL_SUPPORT    = NO\n\n# If you use Microsoft's C++/CLI language, you should set this option to YES to\n# enable parsing support.\n\nCPP_CLI_SUPPORT        = NO\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC\n# tag is set to YES, then doxygen will reuse the documentation of the first\n# member in the group (if any) for the other members of the group. By default\n# all members of a group must be documented explicitly.\n\nDISTRIBUTE_GROUP_DOC   = NO\n\n# Set the SUBGROUPING tag to YES (the default) to allow class member groups of\n# the same type (for instance a group of public functions) to be put as a\n# subgroup of that type (e.g. under the Public Functions section). Set it to\n# NO to prevent subgrouping. Alternatively, this can be done per class using\n# the \\nosubgrouping command.\n\nSUBGROUPING            = YES\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\n# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in\n# documentation are documented, even if no documentation was available.\n# Private class members and static file members will be hidden unless\n# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES\n\nEXTRACT_ALL            = YES\n\n# If the EXTRACT_PRIVATE tag is set to YES all private members of a class\n# will be included in the documentation.\n\nEXTRACT_PRIVATE        = YES\n\n# If the EXTRACT_STATIC tag is set to YES all static members of a file\n# will be included in the documentation.\n\nEXTRACT_STATIC         = YES\n\n# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs)\n# defined locally in source files will be included in the documentation.\n# If set to NO only classes defined in header files are included.\n\nEXTRACT_LOCAL_CLASSES  = YES\n\n# This flag is only useful for Objective-C code. When set to YES local\n# methods, which are defined in the implementation section but not in\n# the interface are included in the documentation.\n# If set to NO (the default) only methods in the interface are included.\n\nEXTRACT_LOCAL_METHODS  = NO\n\n# If this flag is set to YES, the members of anonymous namespaces will be extracted\n# and appear in the documentation as a namespace called 'anonymous_namespace{file}',\n# where file will be replaced with the base name of the file that contains the anonymous\n# namespace. By default anonymous namespace are hidden.\n\nEXTRACT_ANON_NSPACES   = NO\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all\n# undocumented members of documented classes, files or namespaces.\n# If set to NO (the default) these members will be included in the\n# various overviews, but no documentation section is generated.\n# This option has no effect if EXTRACT_ALL is enabled.\n\nHIDE_UNDOC_MEMBERS     = NO\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all\n# undocumented classes that are normally visible in the class hierarchy.\n# If set to NO (the default) these classes will be included in the various\n# overviews. This option has no effect if EXTRACT_ALL is enabled.\n\nHIDE_UNDOC_CLASSES     = NO\n\n# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all\n# friend (class|struct|union) declarations.\n# If set to NO (the default) these declarations will be included in the\n# documentation.\n\nHIDE_FRIEND_COMPOUNDS  = NO\n\n# If the HIDE_IN_BODY_DOCS tag is set to YES, Doxygen will hide any\n# documentation blocks found inside the body of a function.\n# If set to NO (the default) these blocks will be appended to the\n# function's detailed documentation block.\n\nHIDE_IN_BODY_DOCS      = NO\n\n# The INTERNAL_DOCS tag determines if documentation\n# that is typed after a \\internal command is included. If the tag is set\n# to NO (the default) then the documentation will be excluded.\n# Set it to YES to include the internal documentation.\n\nINTERNAL_DOCS          = NO\n\n# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate\n# file names in lower-case letters. If set to YES upper-case letters are also\n# allowed. This is useful if you have classes or files whose names only differ\n# in case and if your file system supports case sensitive file names. Windows\n# and Mac users are advised to set this option to NO.\n\nCASE_SENSE_NAMES       = YES\n\n# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen\n# will show members with their full class and namespace scopes in the\n# documentation. If set to YES the scope will be hidden.\n\nHIDE_SCOPE_NAMES       = NO\n\n# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen\n# will put a list of the files that are included by a file in the documentation\n# of that file.\n\nSHOW_INCLUDE_FILES     = YES\n\n# If the INLINE_INFO tag is set to YES (the default) then a tag [inline]\n# is inserted in the documentation for inline members.\n\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen\n# will sort the (detailed) documentation of file and class members\n# alphabetically by member name. If set to NO the members will appear in\n# declaration order.\n\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the\n# brief documentation of file, namespace and class members alphabetically\n# by member name. If set to NO (the default) the members will appear in\n# declaration order.\n\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be\n# sorted by fully-qualified names, including namespaces. If set to\n# NO (the default), the class list will be sorted only by class name,\n# not including the namespace part.\n# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.\n# Note: This option applies only to the class list, not to the\n# alphabetical list.\n\nSORT_BY_SCOPE_NAME     = NO\n\n# The GENERATE_TODOLIST tag can be used to enable (YES) or\n# disable (NO) the todo list. This list is created by putting \\todo\n# commands in the documentation.\n\nGENERATE_TODOLIST      = YES\n\n# The GENERATE_TESTLIST tag can be used to enable (YES) or\n# disable (NO) the test list. This list is created by putting \\test\n# commands in the documentation.\n\nGENERATE_TESTLIST      = YES\n\n# The GENERATE_BUGLIST tag can be used to enable (YES) or\n# disable (NO) the bug list. This list is created by putting \\bug\n# commands in the documentation.\n\nGENERATE_BUGLIST       = YES\n\n# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or\n# disable (NO) the deprecated list. This list is created by putting\n# \\deprecated commands in the documentation.\n\nGENERATE_DEPRECATEDLIST= YES\n\n# The ENABLED_SECTIONS tag can be used to enable conditional\n# documentation sections, marked by \\if sectionname ... \\endif.\n\nENABLED_SECTIONS       =\n\n# The MAX_INITIALIZER_LINES tag determines the maximum number of lines\n# the initial value of a variable or define consists of for it to appear in\n# the documentation. If the initializer consists of more lines than specified\n# here it will be hidden. Use a value of 0 to hide initializers completely.\n# The appearance of the initializer of individual variables and defines in the\n# documentation can be controlled using \\showinitializer or \\hideinitializer\n# command in the documentation regardless of this setting.\n\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated\n# at the bottom of the documentation of classes and structs. If set to YES the\n# list will mention the files that were used to generate the documentation.\n\nSHOW_USED_FILES        = YES\n\n# If the sources in your project are distributed over multiple directories\n# then setting the SHOW_DIRECTORIES tag to YES will show the directory hierarchy\n# in the documentation. The default is NO.\n\nSHOW_DIRECTORIES       = NO\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from the\n# version control system). Doxygen will invoke the program by executing (via\n# popen()) the command <command> <input-file>, where <command> is the value of\n# the FILE_VERSION_FILTER tag, and <input-file> is the name of an input file\n# provided by doxygen. Whatever the program writes to standard output\n# is used as the file version. See the manual for examples.\n\nFILE_VERSION_FILTER    =\n\n#---------------------------------------------------------------------------\n# configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated\n# by doxygen. Possible values are YES and NO. If left blank NO is used.\n\nQUIET                  = NO\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are\n# generated by doxygen. Possible values are YES and NO. If left blank\n# NO is used.\n\nWARNINGS               = YES\n\n# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings\n# for undocumented members. If EXTRACT_ALL is set to YES then this flag will\n# automatically be disabled.\n\nWARN_IF_UNDOCUMENTED   = YES\n\n# If WARN_IF_DOC_ERROR is set to YES, doxygen will generate warnings for\n# potential errors in the documentation, such as not documenting some\n# parameters in a documented function, or documenting parameters that\n# don't exist or using markup commands wrongly.\n\nWARN_IF_DOC_ERROR      = YES\n\n# This WARN_NO_PARAMDOC option can be abled to get warnings for\n# functions that are documented, but have no documentation for their parameters\n# or return value. If set to NO (the default) doxygen will only warn about\n# wrong or incomplete parameter documentation, but not about the absence of\n# documentation.\n\nWARN_NO_PARAMDOC       = NO\n\n# The WARN_FORMAT tag determines the format of the warning messages that\n# doxygen can produce. The string should contain the $file, $line, and $text\n# tags, which will be replaced by the file and line number from which the\n# warning originated and the warning text. Optionally the format may contain\n# $version, which will be replaced by the version of the file (if it could\n# be obtained via FILE_VERSION_FILTER)\n\nWARN_FORMAT            = \"$file:$line: $text \"\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning\n# and error messages should be written. If left blank the output is written\n# to stderr.\n\nWARN_LOGFILE           =\n\n#---------------------------------------------------------------------------\n# configuration options related to the input files\n#---------------------------------------------------------------------------\n\n# The INPUT tag can be used to specify the files and/or directories that contain\n# documented source files. You may enter file names like \"myfile.cpp\" or\n# directories like \"/usr/src/myproject\". Separate the files or directories\n# with spaces.\n\nINPUT                  = \". \"\n\n# This tag can be used to specify the character encoding of the source files that\n# doxygen parses. Internally doxygen uses the UTF-8 encoding, which is also the default\n# input encoding. Doxygen uses libiconv (or the iconv built into libc) for the transcoding.\n# See http://www.gnu.org/software/libiconv for the list of possible encodings.\n\nINPUT_ENCODING         = UTF-8\n\n# If the value of the INPUT tag contains directories, you can use the\n# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp\n# and *.h) to filter out the source-files in the directories. If left\n# blank the following patterns are tested:\n# *.c *.cc *.cxx *.cpp *.c++ *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh *.hxx\n# *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm *.py\n\nFILE_PATTERNS          = *.php\n\n# The RECURSIVE tag can be used to turn specify whether or not subdirectories\n# should be searched for input files as well. Possible values are YES and NO.\n# If left blank NO is used.\n\nRECURSIVE              = YES\n\n# The EXCLUDE tag can be used to specify files and/or directories that should\n# excluded from the INPUT source files. This way you can easily exclude a\n# subdirectory from a directory tree whose root is specified with the INPUT tag.\n\nEXCLUDE                =\n\n# The EXCLUDE_SYMLINKS tag can be used select whether or not files or\n# directories that are symbolic links (a Unix filesystem feature) are excluded\n# from the input.\n\nEXCLUDE_SYMLINKS       = NO\n\n# If the value of the INPUT tag contains directories, you can use the\n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude\n# certain files from those directories. Note that the wildcards are matched\n# against the file with absolute path, so to exclude all test directories\n# for example use the pattern */test/*\n\nEXCLUDE_PATTERNS       = */tests/* \\\n                         */benchmarks/* \\\n                         */docs/* \\\n                         */test-settings.php \\\n                         */configdoc/* \\\n                         */test-settings.php \\\n                         */maintenance/* \\\n                         */smoketests/* \\\n                         */library/standalone/* \\\n                         */.svn* \\\n                         */conf/*\n\n# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names\n# (namespaces, classes, functions, etc.) that should be excluded from the output.\n# The symbol name can be a fully qualified name, a word, or if the wildcard * is used,\n# a substring. Examples: ANamespace, AClass, AClass::ANamespace, ANamespace::*Test\n\nEXCLUDE_SYMBOLS        =\n\n# The EXAMPLE_PATH tag can be used to specify one or more files or\n# directories that contain example code fragments that are included (see\n# the \\include command).\n\nEXAMPLE_PATH           =\n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the\n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp\n# and *.h) to filter out the source-files in the directories. If left\n# blank all files are included.\n\nEXAMPLE_PATTERNS       = *\n\n# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be\n# searched for input files to be used with the \\include or \\dontinclude\n# commands irrespective of the value of the RECURSIVE tag.\n# Possible values are YES and NO. If left blank NO is used.\n\nEXAMPLE_RECURSIVE      = NO\n\n# The IMAGE_PATH tag can be used to specify one or more files or\n# directories that contain image that are included in the documentation (see\n# the \\image command).\n\nIMAGE_PATH             =\n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should\n# invoke to filter for each input file. Doxygen will invoke the filter program\n# by executing (via popen()) the command <filter> <input-file>, where <filter>\n# is the value of the INPUT_FILTER tag, and <input-file> is the name of an\n# input file. Doxygen will then use the output that the filter program writes\n# to standard output.  If FILTER_PATTERNS is specified, this tag will be\n# ignored.\n\nINPUT_FILTER           =\n\n# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern\n# basis.  Doxygen will compare the file name with each pattern and apply the\n# filter if there is a match.  The filters are a list of the form:\n# pattern=filter (like *.cpp=my_cpp_filter). See INPUT_FILTER for further\n# info on how filters are used. If FILTER_PATTERNS is empty, INPUT_FILTER\n# is applied to all files.\n\nFILTER_PATTERNS        =\n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using\n# INPUT_FILTER) will be used to filter the input files when producing source\n# files to browse (i.e. when SOURCE_BROWSER is set to YES).\n\nFILTER_SOURCE_FILES    = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to source browsing\n#---------------------------------------------------------------------------\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will\n# be generated. Documented entities will be cross-referenced with these sources.\n# Note: To get rid of all source code in the generated output, make sure also\n# VERBATIM_HEADERS is set to NO. If you have enabled CALL_GRAPH or CALLER_GRAPH\n# then you must also enable this option. If you don't then doxygen will produce\n# a warning and turn it on anyway\n\nSOURCE_BROWSER         = YES\n\n# Setting the INLINE_SOURCES tag to YES will include the body\n# of functions and classes directly in the documentation.\n\nINLINE_SOURCES         = NO\n\n# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct\n# doxygen to hide any special comment blocks from generated source code\n# fragments. Normal C and C++ comments will always remain visible.\n\nSTRIP_CODE_COMMENTS    = YES\n\n# If the REFERENCED_BY_RELATION tag is set to YES (the default)\n# then for each documented function all documented\n# functions referencing it will be listed.\n\nREFERENCED_BY_RELATION = YES\n\n# If the REFERENCES_RELATION tag is set to YES (the default)\n# then for each documented function all documented entities\n# called/used by that function will be listed.\n\nREFERENCES_RELATION    = YES\n\n# If the REFERENCES_LINK_SOURCE tag is set to YES (the default)\n# and SOURCE_BROWSER tag is set to YES, then the hyperlinks from\n# functions in REFERENCES_RELATION and REFERENCED_BY_RELATION lists will\n# link to the source code.  Otherwise they will link to the documentstion.\n\nREFERENCES_LINK_SOURCE = YES\n\n# If the USE_HTAGS tag is set to YES then the references to source code\n# will point to the HTML generated by the htags(1) tool instead of doxygen\n# built-in source browser. The htags tool is part of GNU's global source\n# tagging system (see http://www.gnu.org/software/global/global.html). You\n# will need version 4.8.6 or higher.\n\nUSE_HTAGS              = NO\n\n# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen\n# will generate a verbatim copy of the header file for each class for\n# which an include is specified. Set to NO to disable this.\n\nVERBATIM_HEADERS       = YES\n\n#---------------------------------------------------------------------------\n# configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\n# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index\n# of all compounds will be generated. Enable this if the project\n# contains a lot of classes, structs, unions or interfaces.\n\nALPHABETICAL_INDEX     = NO\n\n# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then\n# the COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns\n# in which this list will be split (can be a number in the range [1..20])\n\nCOLS_IN_ALPHA_INDEX    = 5\n\n# In case all classes in a project start with a common prefix, all\n# classes will be put under the same header in the alphabetical index.\n# The IGNORE_PREFIX tag can be used to specify one or more prefixes that\n# should be ignored while generating the index headers.\n\nIGNORE_PREFIX          =\n\n#---------------------------------------------------------------------------\n# configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_HTML tag is set to YES (the default) Doxygen will\n# generate HTML output.\n\nGENERATE_HTML          = YES\n\n# The HTML_OUTPUT tag is used to specify where the HTML docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `html' will be used as the default path.\n\nHTML_OUTPUT            = html\n\n# The HTML_FILE_EXTENSION tag can be used to specify the file extension for\n# each generated HTML page (for example: .htm,.php,.asp). If it is left blank\n# doxygen will generate files with .html extension.\n\nHTML_FILE_EXTENSION    = .html\n\n# The HTML_HEADER tag can be used to specify a personal HTML header for\n# each generated HTML page. If it is left blank doxygen will generate a\n# standard header.\n\nHTML_HEADER            =\n\n# The HTML_FOOTER tag can be used to specify a personal HTML footer for\n# each generated HTML page. If it is left blank doxygen will generate a\n# standard footer.\n\nHTML_FOOTER            =\n\n# The HTML_STYLESHEET tag can be used to specify a user-defined cascading\n# style sheet that is used by each HTML page. It can be used to\n# fine-tune the look of the HTML output. If the tag is left blank doxygen\n# will generate a default style sheet. Note that doxygen will try to copy\n# the style sheet file to the HTML output directory, so don't put your own\n# stylesheet in the HTML output directory as well, or it will be erased!\n\nHTML_STYLESHEET        =\n\n# If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes,\n# files or namespaces will be aligned in HTML using tables. If set to\n# NO a bullet list will be used.\n\nHTML_ALIGN_MEMBERS     = YES\n\n# If the GENERATE_HTMLHELP tag is set to YES, additional index files\n# will be generated that can be used as input for tools like the\n# Microsoft HTML help workshop to generate a compressed HTML help file (.chm)\n# of the generated HTML documentation.\n\nGENERATE_HTMLHELP      = NO\n\n# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML\n# documentation will contain sections that can be hidden and shown after the\n# page has loaded. For this to work a browser that supports\n# JavaScript and DHTML is required (for instance Mozilla 1.0+, Firefox\n# Netscape 6.0+, Internet explorer 5.0+, Konqueror, or Safari).\n\nHTML_DYNAMIC_SECTIONS  = NO\n\n# If the GENERATE_HTMLHELP tag is set to YES, the CHM_FILE tag can\n# be used to specify the file name of the resulting .chm file. You\n# can add a path in front of the file if the result should not be\n# written to the html output directory.\n\nCHM_FILE               =\n\n# If the GENERATE_HTMLHELP tag is set to YES, the HHC_LOCATION tag can\n# be used to specify the location (absolute path including file name) of\n# the HTML help compiler (hhc.exe). If non-empty doxygen will try to run\n# the HTML help compiler on the generated index.hhp.\n\nHHC_LOCATION           =\n\n# If the GENERATE_HTMLHELP tag is set to YES, the GENERATE_CHI flag\n# controls if a separate .chi index file is generated (YES) or that\n# it should be included in the master .chm file (NO).\n\nGENERATE_CHI           = NO\n\n# If the GENERATE_HTMLHELP tag is set to YES, the BINARY_TOC flag\n# controls whether a binary table of contents is generated (YES) or a\n# normal table of contents (NO) in the .chm file.\n\nBINARY_TOC             = NO\n\n# The TOC_EXPAND flag can be set to YES to add extra items for group members\n# to the contents of the HTML help documentation and to the tree view.\n\nTOC_EXPAND             = NO\n\n# The DISABLE_INDEX tag can be used to turn on/off the condensed index at\n# top of each HTML page. The value NO (the default) enables the index and\n# the value YES disables it.\n\nDISABLE_INDEX          = NO\n\n# This tag can be used to set the number of enum values (range [1..20])\n# that doxygen will group on one line in the generated HTML documentation.\n\nENUM_VALUES_PER_LINE   = 4\n\n# If the GENERATE_TREEVIEW tag is set to YES, a side panel will be\n# generated containing a tree-like index structure (just like the one that\n# is generated for HTML Help). For this to work a browser that supports\n# JavaScript, DHTML, CSS and frames is required (for instance Mozilla 1.0+,\n# Netscape 6.0+, Internet explorer 5.0+, or Konqueror). Windows users are\n# probably better off using the HTML help feature.\n\nGENERATE_TREEVIEW      = YES\n\n# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be\n# used to set the initial width (in pixels) of the frame in which the tree\n# is shown.\n\nTREEVIEW_WIDTH         = 250\n\n#---------------------------------------------------------------------------\n# configuration options related to the LaTeX output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will\n# generate Latex output.\n\nGENERATE_LATEX         = NO\n\n# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `latex' will be used as the default path.\n\nLATEX_OUTPUT           = latex\n\n# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be\n# invoked. If left blank `latex' will be used as the default command name.\n\nLATEX_CMD_NAME         = latex\n\n# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to\n# generate index for LaTeX. If left blank `makeindex' will be used as the\n# default command name.\n\nMAKEINDEX_CMD_NAME     = makeindex\n\n# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact\n# LaTeX documents. This may be useful for small projects and may help to\n# save some trees in general.\n\nCOMPACT_LATEX          = NO\n\n# The PAPER_TYPE tag can be used to set the paper type that is used\n# by the printer. Possible values are: a4, a4wide, letter, legal and\n# executive. If left blank a4wide will be used.\n\nPAPER_TYPE             = a4wide\n\n# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX\n# packages that should be included in the LaTeX output.\n\nEXTRA_PACKAGES         =\n\n# The LATEX_HEADER tag can be used to specify a personal LaTeX header for\n# the generated latex document. The header should contain everything until\n# the first chapter. If it is left blank doxygen will generate a\n# standard header. Notice: only use this tag if you know what you are doing!\n\nLATEX_HEADER           =\n\n# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated\n# is prepared for conversion to pdf (using ps2pdf). The pdf file will\n# contain links (just like the HTML output) instead of page references\n# This makes the output suitable for online browsing using a pdf viewer.\n\nPDF_HYPERLINKS         = YES\n\n# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of\n# plain latex in the generated Makefile. Set this option to YES to get a\n# higher quality PDF documentation.\n\nUSE_PDFLATEX           = YES\n\n# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\\\batchmode.\n# command to the generated LaTeX files. This will instruct LaTeX to keep\n# running if errors occur, instead of asking the user for help.\n# This option is also used when generating formulas in HTML.\n\nLATEX_BATCHMODE        = NO\n\n# If LATEX_HIDE_INDICES is set to YES then doxygen will not\n# include the index chapters (such as File Index, Compound Index, etc.)\n# in the output.\n\nLATEX_HIDE_INDICES     = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the RTF output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output\n# The RTF output is optimized for Word 97 and may not look very pretty with\n# other RTF readers or editors.\n\nGENERATE_RTF           = NO\n\n# The RTF_OUTPUT tag is used to specify where the RTF docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `rtf' will be used as the default path.\n\nRTF_OUTPUT             = rtf\n\n# If the COMPACT_RTF tag is set to YES Doxygen generates more compact\n# RTF documents. This may be useful for small projects and may help to\n# save some trees in general.\n\nCOMPACT_RTF            = NO\n\n# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated\n# will contain hyperlink fields. The RTF file will\n# contain links (just like the HTML output) instead of page references.\n# This makes the output suitable for online browsing using WORD or other\n# programs which support those fields.\n# Note: wordpad (write) and others do not support links.\n\nRTF_HYPERLINKS         = NO\n\n# Load stylesheet definitions from file. Syntax is similar to doxygen's\n# config file, i.e. a series of assignments. You only have to provide\n# replacements, missing definitions are set to their default value.\n\nRTF_STYLESHEET_FILE    =\n\n# Set optional variables used in the generation of an rtf document.\n# Syntax is similar to doxygen's config file.\n\nRTF_EXTENSIONS_FILE    =\n\n#---------------------------------------------------------------------------\n# configuration options related to the man page output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_MAN tag is set to YES (the default) Doxygen will\n# generate man pages\n\nGENERATE_MAN           = NO\n\n# The MAN_OUTPUT tag is used to specify where the man pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `man' will be used as the default path.\n\nMAN_OUTPUT             = man\n\n# The MAN_EXTENSION tag determines the extension that is added to\n# the generated man pages (default is the subroutine's section .3)\n\nMAN_EXTENSION          = .3\n\n# If the MAN_LINKS tag is set to YES and Doxygen generates man output,\n# then it will generate one additional man file for each entity\n# documented in the real man page(s). These additional files\n# only source the real man page, but without them the man command\n# would be unable to find the correct page. The default is NO.\n\nMAN_LINKS              = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the XML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_XML tag is set to YES Doxygen will\n# generate an XML file that captures the structure of\n# the code including all documentation.\n\nGENERATE_XML           = NO\n\n# The XML_OUTPUT tag is used to specify where the XML pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `xml' will be used as the default path.\n\nXML_OUTPUT             = xml\n\n# The XML_SCHEMA tag can be used to specify an XML schema,\n# which can be used by a validating XML parser to check the\n# syntax of the XML files.\n\nXML_SCHEMA             =\n\n# The XML_DTD tag can be used to specify an XML DTD,\n# which can be used by a validating XML parser to check the\n# syntax of the XML files.\n\nXML_DTD                =\n\n# If the XML_PROGRAMLISTING tag is set to YES Doxygen will\n# dump the program listings (including syntax highlighting\n# and cross-referencing information) to the XML output. Note that\n# enabling this will significantly increase the size of the XML output.\n\nXML_PROGRAMLISTING     = YES\n\n#---------------------------------------------------------------------------\n# configuration options for the AutoGen Definitions output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_AUTOGEN_DEF tag is set to YES Doxygen will\n# generate an AutoGen Definitions (see autogen.sf.net) file\n# that captures the structure of the code including all\n# documentation. Note that this feature is still experimental\n# and incomplete at the moment.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES Doxygen will\n# generate a Perl module file that captures the structure of\n# the code including all documentation. Note that this\n# feature is still experimental and incomplete at the\n# moment.\n\nGENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES Doxygen will generate\n# the necessary Makefile rules, Perl scripts and LaTeX code to be able\n# to generate PDF and DVI output from the Perl module output.\n\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be\n# nicely formatted so it can be parsed by a human reader.  This is useful\n# if you want to understand what is going on.  On the other hand, if this\n# tag is set to NO the size of the Perl module output will be much smaller\n# and Perl will parse it just the same.\n\nPERLMOD_PRETTY         = YES\n\n# The names of the make variables in the generated doxyrules.make file\n# are prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX.\n# This is useful so different doxyrules.make files included by the same\n# Makefile don't overwrite each other's variables.\n\nPERLMOD_MAKEVAR_PREFIX =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\n\n# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will\n# evaluate all C-preprocessor directives found in the sources and include\n# files.\n\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro\n# names in the source code. If set to NO (the default) only conditional\n# compilation will be performed. Macro expansion can be done in a controlled\n# way by setting EXPAND_ONLY_PREDEF to YES.\n\nMACRO_EXPANSION        = NO\n\n# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES\n# then the macro expansion is limited to the macros specified with the\n# PREDEFINED and EXPAND_AS_DEFINED tags.\n\nEXPAND_ONLY_PREDEF     = NO\n\n# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files\n# in the INCLUDE_PATH (see below) will be search if a #include is found.\n\nSEARCH_INCLUDES        = YES\n\n# The INCLUDE_PATH tag can be used to specify one or more directories that\n# contain include files that are not input files but should be processed by\n# the preprocessor.\n\nINCLUDE_PATH           =\n\n# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard\n# patterns (like *.h and *.hpp) to filter out the header-files in the\n# directories. If left blank, the patterns specified with FILE_PATTERNS will\n# be used.\n\nINCLUDE_FILE_PATTERNS  =\n\n# The PREDEFINED tag can be used to specify one or more macro names that\n# are defined before the preprocessor is started (similar to the -D option of\n# gcc). The argument of the tag is a list of macros of the form: name\n# or name=definition (no spaces). If the definition and the = are\n# omitted =1 is assumed. To prevent a macro definition from being\n# undefined via #undef or recursively expanded use the := operator\n# instead of the = operator.\n\nPREDEFINED             =\n\n# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then\n# this tag can be used to specify a list of macro names that should be expanded.\n# The macro definition that is found in the sources will be used.\n# Use the PREDEFINED tag if you want to use a different macro definition.\n\nEXPAND_AS_DEFINED      =\n\n# If the SKIP_FUNCTION_MACROS tag is set to YES (the default) then\n# doxygen's preprocessor will remove all function-like macros that are alone\n# on a line, have an all uppercase name, and do not end with a semicolon. Such\n# function macros are typically used for boiler-plate code, and will confuse\n# the parser if not removed.\n\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration::additions related to external references\n#---------------------------------------------------------------------------\n\n# The TAGFILES option can be used to specify one or more tagfiles.\n# Optionally an initial location of the external documentation\n# can be added for each tagfile. The format of a tag file without\n# this location is as follows:\n#   TAGFILES = file1 file2 ...\n# Adding location for the tag files is done as follows:\n#   TAGFILES = file1=loc1 \"file2 = loc2\" ...\n# where \"loc1\" and \"loc2\" can be relative or absolute paths or\n# URLs. If a location is present for each tag, the installdox tool\n# does not have to be run to correct the links.\n# Note that each tag file must have a unique name\n# (where the name does NOT include the path)\n# If a tag file is not located in the directory in which doxygen\n# is run, you must also specify the path to the tagfile here.\n\nTAGFILES               =\n\n# When a file name is specified after GENERATE_TAGFILE, doxygen will create\n# a tag file that is based on the input files it reads.\n\nGENERATE_TAGFILE       =\n\n# If the ALLEXTERNALS tag is set to YES all external classes will be listed\n# in the class index. If set to NO only the inherited external classes\n# will be listed.\n\nALLEXTERNALS           = NO\n\n# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed\n# in the modules index. If set to NO, only the current project's groups will\n# be listed.\n\nEXTERNAL_GROUPS        = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script\n# interpreter (i.e. the result of `which perl').\n\nPERL_PATH              = /usr/bin/perl\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\n\n# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will\n# generate a inheritance diagram (in HTML, RTF and LaTeX) for classes with base\n# or super classes. Setting the tag to NO turns the diagrams off. Note that\n# this option is superseded by the HAVE_DOT option below. This is only a\n# fallback. It is recommended to install and use dot, since it yields more\n# powerful graphs.\n\nCLASS_DIAGRAMS         = YES\n\n# You can define message sequence charts within doxygen comments using the \\msc\n# command. Doxygen will then run the mscgen tool (see http://www.mcternan.me.uk/mscgen/) to\n# produce the chart and insert it in the documentation. The MSCGEN_PATH tag allows you to\n# specify the directory where the mscgen tool resides. If left empty the tool is assumed to\n# be found in the default search path.\n\nMSCGEN_PATH            =\n\n# If set to YES, the inheritance and collaboration graphs will hide\n# inheritance and usage relations if the target is undocumented\n# or is not a class.\n\nHIDE_UNDOC_RELATIONS   = YES\n\n# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is\n# available from the path. This tool is part of Graphviz, a graph visualization\n# toolkit from AT&T and Lucent Bell Labs. The other options in this section\n# have no effect if this option is set to NO (the default)\n\nHAVE_DOT               = NO\n\n# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for each documented class showing the direct and\n# indirect inheritance relations. Setting this tag to YES will force the\n# the CLASS_DIAGRAMS tag to NO.\n\nCLASS_GRAPH            = YES\n\n# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for each documented class showing the direct and\n# indirect implementation dependencies (inheritance, containment, and\n# class references variables) of the class with other documented classes.\n\nCOLLABORATION_GRAPH    = YES\n\n# If the GROUP_GRAPHS and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for groups, showing the direct groups dependencies\n\nGROUP_GRAPHS           = YES\n\n# If the UML_LOOK tag is set to YES doxygen will generate inheritance and\n# collaboration diagrams in a style similar to the OMG's Unified Modeling\n# Language.\n\nUML_LOOK               = NO\n\n# If set to YES, the inheritance and collaboration graphs will show the\n# relations between templates and their instances.\n\nTEMPLATE_RELATIONS     = NO\n\n# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and HAVE_DOT\n# tags are set to YES then doxygen will generate a graph for each documented\n# file showing the direct and indirect include dependencies of the file with\n# other documented files.\n\nINCLUDE_GRAPH          = YES\n\n# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDED_BY_GRAPH, and\n# HAVE_DOT tags are set to YES then doxygen will generate a graph for each\n# documented header file showing the documented files that directly or\n# indirectly include this file.\n\nINCLUDED_BY_GRAPH      = YES\n\n# If the CALL_GRAPH, SOURCE_BROWSER and HAVE_DOT tags are set to YES then doxygen will\n# generate a call dependency graph for every global function or class method.\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command.\n\nCALL_GRAPH             = NO\n\n# If the CALLER_GRAPH, SOURCE_BROWSER and HAVE_DOT tags are set to YES then doxygen will\n# generate a caller dependency graph for every global function or class method.\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable caller graphs for selected\n# functions only using the \\callergraph command.\n\nCALLER_GRAPH           = NO\n\n# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen\n# will graphical hierarchy of all classes instead of a textual one.\n\nGRAPHICAL_HIERARCHY    = YES\n\n# If the DIRECTORY_GRAPH, SHOW_DIRECTORIES and HAVE_DOT tags are set to YES\n# then doxygen will show the dependencies a directory has on other directories\n# in a graphical way. The dependency relations are determined by the #include\n# relations between the files in the directories.\n\nDIRECTORY_GRAPH        = YES\n\n# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images\n# generated by dot. Possible values are png, jpg, or gif\n# If left blank png will be used.\n\nDOT_IMAGE_FORMAT       = png\n\n# The tag DOT_PATH can be used to specify the path where the dot tool can be\n# found. If left blank, it is assumed the dot tool can be found in the path.\n\nDOT_PATH               =\n\n# The DOTFILE_DIRS tag can be used to specify one or more directories that\n# contain dot files that are included in the documentation (see the\n# \\dotfile command).\n\nDOTFILE_DIRS           =\n\n# The MAX_DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of\n# nodes that will be shown in the graph. If the number of nodes in a graph\n# becomes larger than this value, doxygen will truncate the graph, which is\n# visualized by representing a node as a red box. Note that doxygen if the number\n# of direct children of the root node in a graph is already larger than\n# MAX_DOT_GRAPH_NOTES then the graph will not be shown at all. Also note\n# that the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n\nDOT_GRAPH_MAX_NODES    = 50\n\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the\n# graphs generated by dot. A depth value of 3 means that only nodes reachable\n# from the root by following a path via at most 3 edges will be shown. Nodes\n# that lay further from the root node will be omitted. Note that setting this\n# option to 1 or 2 may greatly reduce the computation time needed for large\n# code bases. Also note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n\nMAX_DOT_GRAPH_DEPTH    = 1000\n\n# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent\n# background. This is disabled by default, which results in a white background.\n# Warning: Depending on the platform used, enabling this option may lead to\n# badly anti-aliased labels on the edges of a graph (i.e. they become hard to\n# read).\n\nDOT_TRANSPARENT        = NO\n\n# Set the DOT_MULTI_TARGETS tag to YES allow dot to generate multiple output\n# files in one run (i.e. multiple -o and -T options on the command line). This\n# makes dot run faster, but since only newer versions of dot (>1.8.10)\n# support this, this feature is disabled by default.\n\nDOT_MULTI_TARGETS      = NO\n\n# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will\n# generate a legend page explaining the meaning of the various boxes and\n# arrows in the dot generated graphs.\n\nGENERATE_LEGEND        = YES\n\n# If the DOT_CLEANUP tag is set to YES (the default) Doxygen will\n# remove the intermediate dot files that are used to generate\n# the various graphs.\n\nDOT_CLEANUP            = YES\n\n#---------------------------------------------------------------------------\n# Configuration::additions related to the search engine\n#---------------------------------------------------------------------------\n\n# The SEARCHENGINE tag specifies whether or not a search engine should be\n# used. If set to NO the values of all tags below this one will be ignored.\n\nSEARCHENGINE           = NO\n\n# vim: et sw=4 sts=4\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 12.3740234375,
          "content": "\nInstall\n    How to install HTML Purifier\n\nHTML Purifier is designed to run out of the box, so actually using the\nlibrary is extremely easy.  (Although... if you were looking for a\nstep-by-step installation GUI, you've downloaded the wrong software!)\n\nWhile the impatient can get going immediately with some of the sample\ncode at the bottom of this library, it's well worth reading this entire\ndocument--most of the other documentation assumes that you are familiar\nwith these contents.\n\n\n---------------------------------------------------------------------------\n1.  Compatibility\n\nHTML Purifier is PHP 5 and PHP 7, and is actively tested from PHP 5.3\nand up. It has no core dependencies with other libraries.\n\nThese optional extensions can enhance the capabilities of HTML Purifier:\n\n    * iconv  : Converts text to and from non-UTF-8 encodings\n    * bcmath : Used for unit conversion and imagecrash protection\n    * tidy   : Used for pretty-printing HTML\n\nThese optional libraries can enhance the capabilities of HTML Purifier:\n\n    * CSSTidy : Clean CSS stylesheets using %Core.ExtractStyleBlocks\n        Note: You should use the modernized fork of CSSTidy available\n        at https://github.com/Cerdic/CSSTidy\n    * Net_IDNA2 (PEAR) : IRI support using %Core.EnableIDNA\n        Note: This is not necessary for PHP 5.3 or later\n\n---------------------------------------------------------------------------\n2.  Reconnaissance\n\nA big plus of HTML Purifier is its inerrant support of standards, so\nyour web-pages should be standards-compliant.  (They should also use\nsemantic markup, but that's another issue altogether, one HTML Purifier\ncannot fix without reading your mind.)\n\nHTML Purifier can process these doctypes:\n\n* XHTML 1.0 Transitional (default)\n* XHTML 1.0 Strict\n* HTML 4.01 Transitional\n* HTML 4.01 Strict\n* XHTML 1.1\n\n...and these character encodings:\n\n* UTF-8 (default)\n* Any encoding iconv supports (with crippled internationalization support)\n\nThese defaults reflect what my choices would be if I were authoring an\nHTML document, however, what you choose depends on the nature of your\ncodebase.  If you don't know what doctype you are using, you can determine\nthe doctype from this identifier at the top of your source code:\n\n    <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n\n...and the character encoding from this code:\n\n    <meta http-equiv=\"Content-type\" content=\"text/html;charset=ENCODING\">\n\nIf the character encoding declaration is missing, STOP NOW, and\nread 'docs/enduser-utf8.html' (web accessible at\nhttp://htmlpurifier.org/docs/enduser-utf8.html).  In fact, even if it is\npresent, read this document anyway, as many websites specify their\ndocument's character encoding incorrectly.\n\n\n---------------------------------------------------------------------------\n3.  Including the library\n\nThe procedure is quite simple:\n\n    require_once '/path/to/library/HTMLPurifier.auto.php';\n\nThis will setup an autoloader, so the library's files are only included\nwhen you use them.\n\nOnly the contents in the library/ folder are necessary, so you can remove\neverything else when using HTML Purifier in a production environment.\n\nIf you installed HTML Purifier via PEAR, all you need to do is:\n\n    require_once 'HTMLPurifier.auto.php';\n\nPlease note that the usual PEAR practice of including just the classes you\nwant will not work with HTML Purifier's autoloading scheme.\n\nAdvanced users, read on; other users can skip to section 4.\n\nAutoload compatibility\n----------------------\n\n    HTML Purifier attempts to be as smart as possible when registering an\n    autoloader, but there are some cases where you will need to change\n    your own code to accomodate HTML Purifier. These are those cases:\n\n    AN __autoload FUNCTION IS DECLARED AFTER OUR AUTOLOADER IS REGISTERED\n        spl_autoload_register() has the curious behavior of disabling\n        the existing __autoload() handler. Users need to explicitly\n        spl_autoload_register('__autoload'). Because we use SPL when it\n        is available, __autoload() will ALWAYS be disabled. If __autoload()\n        is declared before HTML Purifier is loaded, this is not a problem:\n        HTML Purifier will register the function for you. But if it is\n        declared afterwards, it will mysteriously not work. This\n        snippet of code (after your autoloader is defined) will fix it:\n\n            spl_autoload_register('__autoload')\n\n\nFor better performance\n----------------------\n\n    Opcode caches, which greatly speed up PHP initialization for scripts\n    with large amounts of code (HTML Purifier included), don't like\n    autoloaders. We offer an include file that includes all of HTML Purifier's\n    files in one go in an opcode cache friendly manner:\n\n        // If /path/to/library isn't already in your include path, uncomment\n        // the below line:\n        // require '/path/to/library/HTMLPurifier.path.php';\n\n        require 'HTMLPurifier.includes.php';\n\n    Optional components still need to be included--you'll know if you try to\n    use a feature and you get a class doesn't exists error! The autoloader\n    can be used in conjunction with this approach to catch classes that are\n    missing. Simply add this afterwards:\n\n        require 'HTMLPurifier.autoload.php';\n\nStandalone version\n------------------\n\n    HTML Purifier has a standalone distribution; you can also generate\n    a standalone file from the full version by running the script\n    maintenance/generate-standalone.php . The standalone version has the\n    benefit of having most of its code in one file, so parsing is much\n    faster and the library is easier to manage.\n\n    If HTMLPurifier.standalone.php exists in the library directory, you\n    can use it like this:\n\n        require '/path/to/HTMLPurifier.standalone.php';\n\n    This is equivalent to including HTMLPurifier.includes.php, except that\n    the contents of standalone/ will be added to your path. To override this\n    behavior, specify a new HTMLPURIFIER_PREFIX where standalone files can\n    be found (usually, this will be one directory up, the \"true\" library\n    directory in full distributions). Don't forget to set your path too!\n\n    The autoloader can be added to the end to ensure the classes are\n    loaded when necessary; otherwise you can manually include them.\n    To use the autoloader, use this:\n\n        require 'HTMLPurifier.autoload.php';\n\nFor advanced users\n------------------\n\n    HTMLPurifier.auto.php performs a number of operations that can be done\n    individually. These are:\n\n        HTMLPurifier.path.php\n            Puts /path/to/library in the include path. For high performance,\n            this should be done in php.ini.\n\n        HTMLPurifier.autoload.php\n            Registers our autoload handler HTMLPurifier_Bootstrap::autoload($class).\n\n    You can do these operations by yourself, if you like.\n\n\n---------------------------------------------------------------------------\n4. Configuration\n\nHTML Purifier is designed to run out-of-the-box, but occasionally HTML\nPurifier needs to be told what to do.  If you answer no to any of these\nquestions, read on; otherwise, you can skip to the next section (or, if you're\ninto configuring things just for the heck of it, skip to 4.3).\n\n* Am I using UTF-8?\n* Am I using XHTML 1.0 Transitional?\n\nIf you answered no to any of these questions, instantiate a configuration\nobject and read on:\n\n    $config = HTMLPurifier_Config::createDefault();\n\n\n4.1. Setting a different character encoding\n\nYou really shouldn't use any other encoding except UTF-8, especially if you\nplan to support multilingual websites (read section three for more details).\nHowever, switching to UTF-8 is not always immediately feasible, so we can\nadapt.\n\nHTML Purifier uses iconv to support other character encodings, as such,\nany encoding that iconv supports <http://www.gnu.org/software/libiconv/>\nHTML Purifier supports with this code:\n\n    $config->set('Core.Encoding', /* put your encoding here */);\n\nAn example usage for Latin-1 websites (the most common encoding for English\nwebsites):\n\n    $config->set('Core.Encoding', 'ISO-8859-1');\n\nNote that HTML Purifier's support for non-Unicode encodings is crippled by the\nfact that any character not supported by that encoding will be silently\ndropped, EVEN if it is ampersand escaped.  If you want to work around\nthis, you are welcome to read docs/enduser-utf8.html for a fix,\nbut please be cognizant of the issues the \"solution\" creates (for this\nreason, I do not include the solution in this document).\n\n\n4.2. Setting a different doctype\n\nFor those of you using HTML 4.01 Transitional, you can disable\nXHTML output like this:\n\n    $config->set('HTML.Doctype', 'HTML 4.01 Transitional');\n\nOther supported doctypes include:\n\n    * HTML 4.01 Strict\n    * HTML 4.01 Transitional\n    * XHTML 1.0 Strict\n    * XHTML 1.0 Transitional\n    * XHTML 1.1\n\n\n4.3. Other settings\n\nThere are more configuration directives which can be read about\nhere: <http://htmlpurifier.org/live/configdoc/plain.html>  They're a bit boring,\nbut they can help out for those of you who like to exert maximum control over\nyour code.  Some of the more interesting ones are configurable at the\ndemo <http://htmlpurifier.org/demo.php> and are well worth looking into\nfor your own system.\n\nFor example, you can fine tune allowed elements and attributes, convert\nrelative URLs to absolute ones, and even autoparagraph input text! These\nare, respectively, %HTML.Allowed, %URI.MakeAbsolute and %URI.Base, and\n%AutoFormat.AutoParagraph. The %Namespace.Directive naming convention\ntranslates to:\n\n    $config->set('Namespace.Directive', $value);\n\nE.g.\n\n    $config->set('HTML.Allowed', 'p,b,a[href],i');\n    $config->set('URI.Base', 'http://www.example.com');\n    $config->set('URI.MakeAbsolute', true);\n    $config->set('AutoFormat.AutoParagraph', true);\n\n\n---------------------------------------------------------------------------\n5. Caching\n\nHTML Purifier generates some cache files (generally one or two) to speed up\nits execution. For maximum performance, make sure that\nlibrary/HTMLPurifier/DefinitionCache/Serializer is writeable by the webserver.\n\nIf you are in the library/ folder of HTML Purifier, you can set the\nappropriate permissions using:\n\n    chmod -R 0755 HTMLPurifier/DefinitionCache/Serializer\n\nIf the above command doesn't work, you may need to assign write permissions\nto group:\n\n    chmod -R 0775 HTMLPurifier/DefinitionCache/Serializer\n\nYou can also chmod files via your FTP client; this option\nis usually accessible by right clicking the corresponding directory and\nthen selecting \"chmod\" or \"file permissions\".\n\nStarting with 2.0.1, HTML Purifier will generate friendly error messages\nthat will tell you exactly what you have to chmod the directory to, if in doubt,\nfollow its advice.\n\nIf you are unable or unwilling to give write permissions to the cache\ndirectory, you can either disable the cache (and suffer a performance\nhit):\n\n    $config->set('Core.DefinitionCache', null);\n\nOr move the cache directory somewhere else (no trailing slash):\n\n    $config->set('Cache.SerializerPath', '/home/user/absolute/path');\n\n\n---------------------------------------------------------------------------\n6.   Using the code\n\nThe interface is mind-numbingly simple:\n\n    $purifier = new HTMLPurifier($config);\n    $clean_html = $purifier->purify( $dirty_html );\n\nThat's it!  For more examples, check out docs/examples/ (they aren't very\ndifferent though).  Also, docs/enduser-slow.html gives advice on what to\ndo if HTML Purifier is slowing down your application.\n\n\n---------------------------------------------------------------------------\n7.   Quick install\n\nFirst, make sure library/HTMLPurifier/DefinitionCache/Serializer is\nwritable by the webserver (see Section 5: Caching above for details).\nIf your website is in UTF-8 and XHTML Transitional, use this code:\n\n<?php\n    require_once '/path/to/htmlpurifier/library/HTMLPurifier.auto.php';\n\n    $config = HTMLPurifier_Config::createDefault();\n    $purifier = new HTMLPurifier($config);\n    $clean_html = $purifier->purify($dirty_html);\n?>\n\nIf your website is in a different encoding or doctype, use this code:\n\n<?php\n    require_once '/path/to/htmlpurifier/library/HTMLPurifier.auto.php';\n\n    $config = HTMLPurifier_Config::createDefault();\n    $config->set('Core.Encoding', 'ISO-8859-1'); // replace with your encoding\n    $config->set('HTML.Doctype', 'HTML 4.01 Transitional'); // replace with your doctype\n    $purifier = new HTMLPurifier($config);\n\n    $clean_html = $purifier->purify($dirty_html);\n?>\n\n    vim: et sw=4 sts=4\n"
        },
        {
          "name": "INSTALL.fr.utf8",
          "type": "blob",
          "size": 1.8525390625,
          "content": "\nInstallation\n    Comment installer HTML Purifier\n\nAttention : Ce document est encodé en UTF-8, si les lettres avec des accents\nne s'affichent pas, prenez un meilleur éditeur de texte.\n\nL'installation de HTML Purifier est très simple, parce qu'il n'a pas besoin\nde configuration. Pour les utilisateurs impatients, le code se trouve dans le\npied de page, mais je recommande de lire le document.\n\n1.  Compatibilité\n\nHTML Purifier fonctionne avec PHP 5. PHP 5.3 est la dernière version testée.\nIl ne dépend pas d'autres librairies.\n\nLes extensions optionnelles sont iconv (généralement déjà installée) et tidy\n(répendue aussi). Si vous utilisez UTF-8 et que vous ne voulez pas l'indentation,\nvous pouvez utiliser HTML Purifier sans ces extensions.\n\n\n2.  Inclure la librairie\n\nQuand vous devez l'utilisez, incluez le :\n\n    require_once('/path/to/library/HTMLPurifier.auto.php');\n\nNe pas l'inclure si ce n'est pas nécessaire, car HTML Purifier est lourd.\n\nHTML Purifier utilise \"autoload\". Si vous avez défini la fonction __autoload,\nvous devez ajouter cette fonction :\n\n    spl_autoload_register('__autoload')\n\nPlus d'informations dans le document \"INSTALL\".\n\n3.  Installation rapide\n\nSi votre site Web est en UTF-8 et XHTML Transitional, utilisez :\n\n<?php\n    require_once('/path/to/htmlpurifier/library/HTMLPurifier.auto.php');\n    $purificateur = new HTMLPurifier();\n    $html_propre = $purificateur->purify($html_a_purifier);\n?>\n\nSinon, utilisez :\n\n<?php\n    require_once('/path/to/html/purifier/library/HTMLPurifier.auto.load');\n    $config = $HTMLPurifier_Config::createDefault();\n    $config->set('Core', 'Encoding', 'ISO-8859-1'); //Remplacez par votre\n    encodage\n    $config->set('Core', 'XHTML', true); //Remplacer par false si HTML 4.01\n    $purificateur = new HTMLPurifier($config);\n    $html_propre = $purificateur->purify($html_a_purifier);\n?>\n\n\n    vim: et sw=4 sts=4\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 25.8359375,
          "content": "\t\t  GNU LESSER GENERAL PUBLIC LICENSE\n\t\t       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n\t\t  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n\n    vim: et sw=4 sts=4\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 70.5439453125,
          "content": "# [4.18.0](https://github.com/ezyang/htmlpurifier/compare/v4.17.0...v4.18.0) (2024-11-01)\n\n\n### Bug Fixes\n\n* Adjust Core.AllowHostnameUnderscore to consider that \"_\" is defined as Unreserved Characters in RFC 3986 ([#406](https://github.com/ezyang/htmlpurifier/issues/406)) ([d9fbef8](https://github.com/ezyang/htmlpurifier/commit/d9fbef8e27f6a0848a8987a8534351de98eb0fa1))\n* Avoid a deprecated error when the attribute name is numeric and DirectLex is used ([#412](https://github.com/ezyang/htmlpurifier/issues/412)) ([f0fbf51](https://github.com/ezyang/htmlpurifier/commit/f0fbf510981b27fc03168efdb17d6bff48f521af))\n* checking that node has property name ([#399](https://github.com/ezyang/htmlpurifier/issues/399)) ([9ca5a36](https://github.com/ezyang/htmlpurifier/commit/9ca5a3687bd2e6e42ed9d5199b2cfb1dbd6dbdc2))\n* Ignore conditional comments ([#401](https://github.com/ezyang/htmlpurifier/issues/401)) ([4828fdf](https://github.com/ezyang/htmlpurifier/commit/4828fdf45a93eeeacfcbcc855f96f9a7e6b4ed44))\n* Support PHP 8.4 ([#396](https://github.com/ezyang/htmlpurifier/issues/396)) ([92da247](https://github.com/ezyang/htmlpurifier/commit/92da2473ffbb3ed5e894560d4166b1ca8032aeb3))\n* undefined array key warning ([#419](https://github.com/ezyang/htmlpurifier/issues/419)) ([01be377](https://github.com/ezyang/htmlpurifier/commit/01be377f93654fad4d3fbc8c81779f14316eaecf))\n\n\n### Features\n\n* Add allowfullscreen attr for iframe ([#411](https://github.com/ezyang/htmlpurifier/issues/411)) ([70754a2](https://github.com/ezyang/htmlpurifier/commit/70754a253342f67a67425cfa81029db3a5c1bd28))\n* add directive for removing blank nodes ([#404](https://github.com/ezyang/htmlpurifier/issues/404)) ([c9d60c9](https://github.com/ezyang/htmlpurifier/commit/c9d60c96d799c02bc357c88a49f422034b6914fd))\n* Add support for CSS aspect-ratio ([#408](https://github.com/ezyang/htmlpurifier/issues/408)) ([93bee73](https://github.com/ezyang/htmlpurifier/commit/93bee733497a098b65daf5910f1c435d347860a4))\n* Allow universal CSS values for all properties ([#410](https://github.com/ezyang/htmlpurifier/issues/410)) ([9723267](https://github.com/ezyang/htmlpurifier/commit/972326785d201b81e1095bc296b99bbcfa8c7fd4))\n\n# [4.17.0](https://github.com/ezyang/htmlpurifier/compare/v4.16.0...v4.17.0) (2023-11-17)\n\n\n### Bug Fixes\n\n* CSSTidy ImportantComments not handled properly ([#359](https://github.com/ezyang/htmlpurifier/issues/359)) ([78a9b4d](https://github.com/ezyang/htmlpurifier/commit/78a9b4d0dae8bce9a70e4e7e551bf51e9a23706d))\n* fix CI ([#361](https://github.com/ezyang/htmlpurifier/issues/361)) ([9ec687c](https://github.com/ezyang/htmlpurifier/commit/9ec687c904a1fe66a5395d22c50f7043e045d1d3))\n* Invalid scheme check in Attr.TargetBlank ([#363](https://github.com/ezyang/htmlpurifier/issues/363)) ([0176ef4](https://github.com/ezyang/htmlpurifier/commit/0176ef4bb6f57103fdcb60a802603e60e81ee93e))\n* semantic release ([#339](https://github.com/ezyang/htmlpurifier/issues/339)) ([d82f3d9](https://github.com/ezyang/htmlpurifier/commit/d82f3d996a0d9b0f23364946d9a14408c1ad72c5))\n* semantic release ([#341](https://github.com/ezyang/htmlpurifier/issues/341)) ([e55fead](https://github.com/ezyang/htmlpurifier/commit/e55fead09f39430d30f48438f06e7bc2326efc94)), closes [#339](https://github.com/ezyang/htmlpurifier/issues/339)\n* Support for locales using decimal separators other than . (dot) ([#372](https://github.com/ezyang/htmlpurifier/issues/372)) ([43f49ac](https://github.com/ezyang/htmlpurifier/commit/43f49ac9a51b81dfd07d3bc8dcfc5ec5637a5e3b))\n\n\n### Features\n\n* Add support for all text-decoration properties ([#360](https://github.com/ezyang/htmlpurifier/issues/360)) ([2d775c0](https://github.com/ezyang/htmlpurifier/commit/2d775c01874e2f676ba1a2d9fe69b47c2a823061))\n* Allows commas to be included in tel URI ([#389](https://github.com/ezyang/htmlpurifier/issues/389)) ([ec92490](https://github.com/ezyang/htmlpurifier/commit/ec924901392f088d334622f806b9449b17b75d7b)), closes [#388](https://github.com/ezyang/htmlpurifier/issues/388)\n\n\n### Reverts\n\n* Revert \"fix: semantic release (#339)\" (#340) ([3e83215](https://github.com/ezyang/htmlpurifier/commit/3e832152a6173f880c6495a3ab2b0e5235e253a6)), closes [#339](https://github.com/ezyang/htmlpurifier/issues/339) [#340](https://github.com/ezyang/htmlpurifier/issues/340)\n\nNEWS ( CHANGELOG and HISTORY )                                     HTMLPurifier\n|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n\n= KEY ====================\n    # Breaks back-compat\n    ! Feature\n    - Bugfix\n      + Sub-comment\n    . Internal change\n==========================\n\n4.15.0, released 2022-09-18\n! PHP 8.1 and 8.2 support, esp. fixes for deprecation warnings.  A joint effort\n  by David Rans, Tim Düsterhus, Kieran and John Flatness.\n! Allow contenteditable=\"false\" (#336), contributed by Kieran.\n- Replace PHP 8.1 deprecated utf8_ functions with mbstring (#326),\n  contributed by John Flatness.\n- Enhanced composer suggestions with extensions (#317), contributed by\n  func0der.\n\n4.14.0, released 2021-12-24\n! Add \"background-size\" support (#289), contributed by Václav Smítal\n! Transform deprecated width attribute when tidying HTML, contributed by\n  Kieran.\n- PHP 8 support, contributed by Maksims Sļotovs.\n- Improved PHP 7.3 compatibility, contributed by kishor.\n- Avoid spurious magic quotes notice in PHP 7.4.  Thanks\n  Jasper Zonneveld for the fix.\n- Do not remove thead from table even if there are no tbody/tr (#264).\n  Thanks Marcus Artner for the fix.\n- Fix \"Parameter must be an array or an object that implements\n  Countable\" (#285)\".  Thanks Kieran for this fix.\n. Fix unnecessary reference assignment, handling behavior change from\n  PHP5 and PHP7.  Thanks Arkadiusz Biczewski for the fix.\n\n4.13.0, released 2020-06-28\n! Add %HTML.Forms directive, which lets you accept forms in user\n  HTML without requiring full %HTML.Trusted.  Note that forms can\n  be (trivially) used to setup phishing; e.g., an attacker can\n  use CSS absolute positioning to overlay a form on top of a login\n  element, so please be sure to use this with care!   Fixes #213.\n  Thanks Mateusz Turcza for contributing this feature.\n! tr@bgcolor attribute is now supported.  Thanks Kieran Brahney\n  for this enhancement.\n- Further improvements to PHP 7.4 support, contributed by Witold\n  Wasiczko and Eloy Lafuente.\n- Fix PSR-0 compatibility.  Thanks Jordi Boggiano for contributing\n  part of this fix.\n- Fix bug with purifyArray where it doesn't work on empty arrays.\n  Thanks Fräntz Miccoli for the fix.\n- Reduce amount of maintenance scripts included in distribution\n  packages.  Thanks Sergei Morozov for this patch.\n- Remove leading zeros unless if it is only a zero, fixes #239.  Thanks\n  lubomirbartos for this fix.\n- Correct type hinting of maybeGet*, fixes #240.   Thanks Anders Jenbo\n  for this fix.\n\n4.12.0, released 2019-10-27\n! PHP 7.4 is supported, thank you Witold Wasiczko, Mateuz Turcza and\n  Edi Modrić\n- PHPDocs for HTMLModule::addElement() and Bool attr are fixed (thanks\n  Mateusz)\n\n4.11.0, released 2019-07-14\n# SafeScripting now matches case-sensitively against its whitelist (previously it was\n  case-insensitive.)  Thanks Dimitri Gritsajuk <gritsajuk.dimitri@gmail.com>\n  for reporting.\n! New directive %Core.AllowParseManyTags which allows parsing of many nested tags.\n  Thanks M. Suzuki <msuzuki1986@gmail.com> for contributing the patch.\n! purifyArray now supports multidimensional arrays.  Thanks\n  Sandro Miguel Marques <sandromiguel@sandromiguel.com> for contributing this patch.\n! initial and inherit settings available for width, height, and the min-/max-\n  versions thereof.  Thanks Michael Kliewe <info@phpgansta.de> for contributing\n  this patch.\n! More color names are supported.  Thanks Daijobou for contributing.\n- Compatibility fixes for PHP 7.3, including new CI for PHP 7.3\n  (thank you Lukas Neumann <lksnmnn@gmail.com>) and removal of\n  reserved words in our constants (thanks Darko Hrgovic <darko@darkodev.com>\n- Compatibility fixes for HHVM.  Thanks Mateusz Turcza for contributing\n  this fix.\n- HTML Purifier now never defines __autoload, fixing #196.  Thanks\n  Michael Kliewe for reporting.\n- In some situations, Config.php would report an undefined index: class\n  error; this has been fixed.  Thanks DiLong Fa for contributing\n  this fix.\n- We no longer produce <script /> tags; we always explicitly write\n  out the open and close tag.  Thanks Dimitri Gritsajuk\n  <gritsajuk.dimitri@gmail.com> for contributing this fix.\n- Better compatibility when IDNA constants are not present.  Thanks\n  Mateusz Turcza <xemlock@gmail.com> for contributing this fix.\n\n4.10.0, released 2018-02-22\n# PHP 5.3 is no longer officially supported by HTML Purifier\n  (we did not specifically break support, but we are no longer\n  testing on PHP 5.3)\n! Relative CSS length units are now supported\n- A few PHP 7.2 compatibility fixes, thanks John Flatness\n  <john@zerocrates.org>\n- Improve portability with old versions of libxml which don't\n  support accessing the data of a node\n- IDNA2008 is now used for converting domains to ASCII, fixing\n  some rather strange bugs with international domains\n- Fix race condition resulting in E_WARNING when creating\n  directories with Serializer\n\n4.9.3, released 2017-06-02\n- Workaround PHP 7.1 infinite loop when opcode cache is enabled.\n  Thanks @Xiphin (#134, #135)\n- Don't use autoloader when testing for DOMDocument.  Hypothetically,\n  this could cause your install to start using DirectLex if you had\n  previously been monkeypatching in a custom, autoloaded implementation\n  of DOMDocument.  Don't do that.  Thanks @Izumi-kun (#130)\n\n4.9.2, released 2017-03-12\n- Fixes PHP 5.3 compatibility\n- Fix breakage when decoding decimal entities.  Thanks @rybakit (#129)\n\n4.9.1, released 2017-03-08\n! %URI.DefaultScheme can now be set to null, in which case\n  all relative paths are removed.\n! New CSS properties: min-width, max-width, min-height, max-height (#94)\n! Transparency (rgba) and hsl/hsla supported where color CSS is present.\n  Thanks @fxbt for contributing the patch. (#118)\n- When idn_to_ascii is defined, we might accept malformed\n  hostnames.  Apply validation to the result in such cases.\n- Close directory when done in Serializer DefinitionCache (#100)\n- Deleted some asserts to avoid linters from choking (#97)\n- Rework Serializer cache behavior to avoid chmod'ing if possible (#32)\n- Embedded semicolons in strings in CSS are now handled correctly!\n- We accidentally dropped certain Unicode characters if there was\n  one or more invalid characters.  This has been fixed, thanks\n  to mpyw <ryosuke_i_628@yahoo.co.jp>\n- Fix for \"Don't truncate upon encountering </div> when using DOMLex\"\n  caused a regression with HTML 4.01 Strict parsing with libxml 2.9.1\n  (and maybe later versions, but known OK with libxml 2.9.4).  The\n  fix is to go about handling truncation a bit more cleverly so that\n  we can wrap with divs (sidestepping the bug) but slurping out the\n  rest of the text in case it ran off the end.  (#78)\n- Fix PREG_BACKTRACK_LIMIT_ERROR in HTMLPurifier_Filter_ExtractStyle.\n  Thanks @breathbath for contributing the report and fix (#120)\n- Fix entity decoding algorithm to be more conservative about\n  decoding entities that are missing trailing semicolon.\n  To get old behavior, set %Core.LegacyEntityDecoder to true.\n  (#119)\n- Workaround libxml bug when HTML tags are embedded inside\n  script tags.  To disable workaround set %Core.AggressivelyRemoveScript\n  to false. (#83)\n# By default, when a link has a target attribute associated\n  with it, we now also add rel=\"noopener\" in order to\n  prevent the new window from being able to overwrite\n  the original frame.  To disable this protection,\n  set %HTML.TargetNoopener to FALSE.\n\n4.9.0 was cut on Git but never properly released; when we did the\nreal release we decided to skip this version number.\n\n4.8.0, released 2016-07-16\n# By default, when a link has a target attribute associated\n  with it, we now also add rel=\"noreferrer\" in order to\n  prevent the new window from being able to overwrite\n  the original frame.  To disable this protection,\n  set %HTML.TargetNoreferrer to FALSE.\n! Full PHP 7 compatibility, the test suite is ALL GO.\n! %CSS.AllowDuplicates permits duplicate CSS properties.\n! Support for 'tel' URIs.\n! Partial support for 'border-radius' properties when %CSS.AllowProprietary is true.\n  The slash syntax, i.e., 'border-radius: 2em 1em 4em / 0.5em 3em' is not\n  yet supported.\n! %Attr.ID.HTML5 turns on HTML5-style ID handling.\n- alt truncation could result in malformed UTF-8 sequence. Don't\n  truncate.  Thanks Brandon Farber for reporting.\n- Linkify regex is smarter, based off of Gruber's regex.\n- IDNA supported natively on PHP 5.3 and later.\n- Non all-numeric top-level names (e.g., foo.1f, 1f) are now\n  allowed.\n- Minor bounds error fix to squash a PHP 7 notice.\n- Support non-/tmp temporary directories for data:// validation\n- Give a better error message when a user attempts to allow\n  ul/ol without allowing li.\n- On some versions of PHP, the Serializer DefinitionCache could\n  infinite loop when the directory exists but is not listable. (#49)\n- Don't match for <body> inside comments with\n  %Core.ConvertDocumentToFragment. (#67)\n- SafeObject is now less case sensitive. (#57)\n- AutoFormat.RemoveEmpty.Predicate now correctly renders in\n  web form. (#85)\n\n4.7.0, released 2015-08-04\n# opacity is now considered a \"tricky\" CSS property rather than a\n  proprietary one.\n! %AutoFormat.RemoveEmpty.Predicate for specifying exactly when\n  an element should be considered \"empty\" (maybe preserve if it\n  has attributes), and modify iframe support so that the iframe\n  is removed if it is missing a src attribute.  Thanks meeva for\n  reporting.\n- Don't truncate upon encountering </div> when using DOMLex.  Thanks\n  Myrto Christina for finally convincing me to fix this.\n- Update YouTube filter for new code.\n- Fix parsing of rgb() values with spaces in them for 'border'\n  attribute.\n- Don't remove foo=\"\" attributes if foo is a boolean attribute.  Thanks\n  valME for reporting.\n\n4.6.0, released 2013-11-30\n# Secure URI munge hashing algorithm has changed to hash_hmac(\"sha256\", $url, $secret).\n  Please update any verification scripts you may have.\n# URI parsing algorithm was made more strict, so only prefixes which\n  looks like schemes will actually be schemes.  Thanks\n  Michael Gusev <mgusev@sugarcrm.com> for fixing.\n# %Core.EscapeInvalidChildren is no longer supported, and no longer does\n  anything.\n! New directive %Core.AllowHostnameUnderscore which allows underscores\n  in hostnames.\n- Eliminate quadratic behavior in DOMLex by using a proper queue.\n  Thanks Ole Laursen for noticing this.\n- Rewritten MakeWellFormed/FixNesting implementation eliminates quadratic\n  behavior in the rest of the purificaiton pipeline.  Thanks Chedburn\n  Networks for sponsoring this work.\n- Made Linkify URL parser a bit less permissive, so that non-breaking\n  spaces and commas are not included as part of URL.  Thanks nAS for fixing.\n- Fix some bad interactions with %HTML.Allowed and injectors.  Thanks\n  David Hirtz for reporting.\n- Fix infinite loop in DirectLex. Thanks Ashar Javed (@soaj1664ashar)\n  for reporting.\n\n4.5.0, released 2013-02-17\n# Fix bug where stacked attribute transforms clobber each other;\n  this also means it's no longer possible to override attribute\n  transforms in later modules.  No internal code was using this\n  but this may break some clients.\n# We now use SHA-1 to identify cached definitions, instead of MD5.\n! Support display:inline-block\n! Support for more white-space CSS values.\n! Permit underscores in font families\n! Support for page-break-* CSS3 properties when proprietary properties\n  are enabled.\n! New directive %Core.DisableExcludes; can be set to 'true' to turn off\n  SGML excludes checking.  If HTML Purifier is removing too much text\n  and you don't care about full standards compliance, try setting this to\n  'true'.\n- Use prepend for SPL autoloading on PHP 5.3 and later.\n- Fix bug with nofollow transform when pre-existing rel exists.\n- Fix bug where background:url() always gets lower-cased\n  (but not background-image:url())\n- Fix bug with non lower-case color names in HTML\n- Fix bug where data URI validation doesn't remove temporary files.\n  Thanks Javier Marín Ros <javiermarinros@gmail.com> for reporting.\n- Don't remove certain empty tags on RemoveEmpty.\n\n4.4.0, released 2012-01-18\n# Removed PEARSax3 handler.\n# URI.Munge now munges URIs inside the same host that go from https\n  to http.  Reported by Neike Taika-Tessaro.\n# Core.EscapeNonASCIICharacters now always transforms entities to\n  entities, even if target encoding is UTF-8.\n# Tighten up selector validation in ExtractStyleBlocks.\n  Non-syntactically valid selectors are now rejected, along with\n  some of the more obscure ones such as attribute selectors, the\n  :lang pseudoselector, and anything not in CSS2.1.  Furthermore,\n  ID and class selectors now work properly with the relevant\n  configuration attributes.  Also, mute errors when parsing CSS\n  with CSS Tidy.  Reported by Mario Heiderich and Norman Hippert.\n! Added support for 'scope' attribute on tables.\n! Added %HTML.TargetBlank, which adds target=\"blank\" to all outgoing links.\n! Properly handle sub-lists directly nested inside of lists in\n  a standards compliant way, by moving them into the preceding <li>\n! Added %HTML.AllowedComments and %HTML.AllowedCommentsRegexp for\n  limited allowed comments in untrusted situations.\n! Implement iframes, and allow them to be used in untrusted mode with\n  %HTML.SafeIframe and %URI.SafeIframeRegexp.  Thanks Bradley M. Froehle\n  <brad.froehle@gmail.com> for submitting an initial version of the patch.\n! The Forms module now works properly for transitional doctypes.\n! Added support for internationalized domain names. You need the PEAR\n  Net_IDNA2 module to be in your path; if it is installed, ensure the\n  class can be loaded and then set %Core.EnableIDNA to true.\n- Color keywords are now case insensitive.  Thanks Yzmir Ramirez\n  <yramirez-htmlpurifier@adicio.com> for reporting.\n- Explicitly initialize anonModule variable to null.\n- Do not duplicate nofollow if already present.  Thanks 178\n  for reporting.\n- Do not add nofollow if hostname matches our current host.  Thanks 178\n  for reporting, and Neike Taika-Tessaro for helping diagnose.\n- Do not unset parser variable; this fixes intermittent serialization\n  problems.  Thanks Neike Taika-Tessaro for reporting, bill\n  <10010tiger@gmail.com> for diagnosing.\n- Fix iconv truncation bug, where non-UTF-8 target encodings see\n  output truncated after around 8000 characters.  Thanks Jörg Ludwig\n  <joerg.ludwig@iserv.eu> for reporting.\n- Fix broken table content model for XHTML1.1 (and also earlier\n  versions, although the W3C validator doesn't catch those violations).\n  Thanks GlitchMr <glitch.mr@gmail.com> for reporting.\n\n4.3.0, released 2011-03-27\n# Fixed broken caching of customized raw definitions, but requires an\n  API change.  The old API still works but will emit a warning,\n  see http://htmlpurifier.org/docs/enduser-customize.html#optimized\n  for how to upgrade your code.\n# Protect against Internet Explorer innerHTML behavior by specially\n  treating attributes with backticks but no angled brackets, quotes or\n  spaces.  This constitutes a slight semantic change, which can be\n  reverted using %Output.FixInnerHTML.  Reported by Neike Taika-Tessaro\n  and Mario Heiderich.\n# Protect against cssText/innerHTML by restricting allowed characters\n  used in fonts further than mandated by the specification and encoding\n  some extra special characters in URLs.  Reported by Neike\n  Taika-Tessaro and Mario Heiderich.\n! Added %HTML.Nofollow to add rel=\"nofollow\" to external links.\n! More types of SPL autoloaders allowed on later versions of PHP.\n! Implementations for position, top, left, right, bottom, z-index\n  when %CSS.Trusted is on.\n! Add %Cache.SerializerPermissions option for custom serializer\n  directory/file permissions\n! Fix longstanding bug in Flash support for non-IE browsers, and\n  allow more wmode attributes.\n! Add %CSS.AllowedFonts to restrict permissible font names.\n- Switch to an iterative traversal of the DOM, which prevents us\n  from running out of stack space for deeply nested documents.\n  Thanks Maxim Krizhanovsky for contributing a patch.\n- Make removal of conditional IE comments ungreedy; thanks Bernd\n  for reporting.\n- Escape CDATA before removing Internet Explorer comments.\n- Fix removal of id attributes under certain conditions by ensuring\n  armor attributes are preserved when recreating tags.\n- Check if schema.ser was corrupted.\n- Check if zend.ze1_compatibility_mode is on, and error out if it is.\n  This safety check is only done for HTMLPurifier.auto.php; if you\n  are using standalone or the specialized includes files, you're\n  expected to know what you're doing.\n- Stop repeatedly writing the cache file after I'm done customizing a\n  raw definition.  Reported by ajh.\n- Switch to using require_once in the Bootstrap to work around bad\n  interaction with Zend Debugger and APC.  Reported by Antonio Parraga.\n- Fix URI handling when hostname is missing but scheme is present.\n  Reported by Neike Taika-Tessaro.\n- Fix missing numeric entities on DirectLex; thanks Neike Taika-Tessaro\n  for reporting.\n- Fix harmless notice from indexing into empty string.  Thanks Matthijs\n  Kooijman <matthijs@stdin.nl> for reporting.\n- Don't autoclose no parent elements are able to support the element\n  that triggered the autoclose.  In particular fixes strange behavior\n  of stray <li> tags.  Thanks pkuliga@gmail.com for reporting and\n  Neike Taika-Tessaro <pinkgothic@gmail.com> for debugging assistance.\n\n4.2.0, released 2010-09-15\n! Added %Core.RemoveProcessingInstructions, which lets you remove\n  <? ... ?> statements.\n! Added %URI.DisableResources functionality; the directive originally\n  did nothing.  Thanks David Rothstein for reporting.\n! Add documentation about configuration directive types.\n! Add %CSS.ForbiddenProperties configuration directive.\n! Add %HTML.FlashAllowFullScreen to permit embedded Flash objects\n  to utilize full-screen mode.\n! Add optional support for the <code>file</code> URI scheme, enable\n  by explicitly setting %URI.AllowedSchemes.\n! Add %Core.NormalizeNewlines options to allow turning off newline\n  normalization.\n- Fix improper handling of Internet Explorer conditional comments\n  by parser.  Thanks zmonteca for reporting.\n- Fix missing attributes bug when running on Mac Snow Leopard and APC.\n  Thanks sidepodcast for the fix.\n- Warn if an element is allowed, but an attribute it requires is\n  not allowed.\n\n4.1.1, released 2010-05-31\n- Fix undefined index warnings in maintenance scripts.\n- Fix bug in DirectLex for parsing elements with a single attribute\n  with entities.\n- Rewrite CSS output logic for font-family and url().  Thanks Mario\n  Heiderich <mario.heiderich@googlemail.com> for reporting and Takeshi\n  Terada <t-terada@violet.plala.or.jp> for suggesting the fix.\n- Emit an error for CollectErrors if a body is extracted\n- Fix bug where in background-position for center keyword handling.\n- Fix infinite loop when a wrapper element is inserted in a context\n  where it's not allowed.  Thanks Lars <lars@renoz.dk> for reporting.\n- Remove +x bit and shebang from index.php; only supported mode is to\n  explicitly call it with php.\n- Make test script less chatty when log_errors is on.\n\n4.1.0, released 2010-04-26\n! Support proprietary height attribute on table element\n! Support YouTube slideshows that contain /cp/ in their URL.\n! Support for data: URI scheme; not enabled by default, add it using\n  %URI.AllowedSchemes\n! Support flashvars when using %HTML.SafeObject and %HTML.SafeEmbed.\n! Support for Internet Explorer compatibility with %HTML.SafeObject\n  using %Output.FlashCompat.\n! Handle <ol><ol> properly, by inserting the necessary <li> tag.\n- Always quote the insides of url(...) in CSS.\n\n4.0.0, released 2009-07-07\n# APIs for ConfigSchema subsystem have substantially changed. See\n  docs/dev-config-bcbreaks.txt for details; in essence, anything that\n  had both namespace and directive now have a single unified key.\n# Some configuration directives were renamed, specifically:\n    %AutoFormatParam.PurifierLinkifyDocURL -> %AutoFormat.PurifierLinkify.DocURL\n    %FilterParam.ExtractStyleBlocksEscaping -> %Filter.ExtractStyleBlocks.Escaping\n    %FilterParam.ExtractStyleBlocksScope -> %Filter.ExtractStyleBlocks.Scope\n    %FilterParam.ExtractStyleBlocksTidyImpl -> %Filter.ExtractStyleBlocks.TidyImpl\n  As usual, the old directive names will still work, but will throw E_NOTICE\n  errors.\n# The allowed values for class have been relaxed to allow all of CDATA for\n  doctypes that are not XHTML 1.1 or XHTML 2.0.  For old behavior, set\n  %Attr.ClassUseCDATA to false.\n# Instead of appending the content model to an old content model, a blank\n  element will replace the old content model.  You can use #SUPER to get\n  the old content model.\n! More robust support for name=\"\" and id=\"\"\n! HTMLPurifier_Config::inherit($config) allows you to inherit one\n  configuration, and have changes to that configuration be propagated\n  to all of its children.\n! Implement %HTML.Attr.Name.UseCDATA, which relaxes validation rules on\n  the name attribute when set. Use with care. Thanks Ian Cook for\n  sponsoring.\n! Implement %AutoFormat.RemoveEmpty.RemoveNbsp, which removes empty\n  tags that contain non-breaking spaces as well other whitespace. You\n  can also modify which tags should have &nbsp; maintained with\n  %AutoFormat.RemoveEmpty.RemoveNbsp.Exceptions.\n! Implement %Attr.AllowedClasses, which allows administrators to restrict\n  classes users can use to a specified finite set of classes, and\n  %Attr.ForbiddenClasses, which is the logical inverse.\n! You can now maintain your own configuration schema directories by\n  creating a config-schema.php file or passing an extra argument. Check\n  docs/dev-config-schema.html for more details.\n! Added HTMLPurifier_Config->serialize() method, which lets you save away\n  your configuration in a compact serial file, which you can unserialize\n  and use directly without having to go through the overhead of setup.\n- Fix bug where URIDefinition would not get cleared if it's directives got\n  changed.\n- Fix fatal error in HTMLPurifier_Encoder on certain platforms (probably NetBSD 5.0)\n- Fix bug in Linkify autoformatter involving <a><span>http://foo</span></a>\n- Make %URI.Munge not apply to links that have the same host as your host.\n- Prevent stray </body> tag from truncating output, if a second </body>\n  is present.\n. Created script maintenance/rename-config.php for renaming a configuration\n  directive while maintaining its alias.  This script does not change source code.\n. Implement namespace locking for definition construction, to prevent\n  bugs where a directive is used for definition construction but is not\n  used to construct the cache hash.\n\n3.3.0, released 2009-02-16\n! Implement CSS property 'overflow' when %CSS.AllowTricky is true.\n! Implement generic property list classess\n- Fix bug with testEncodingSupportsASCII() algorithm when iconv() implementation\n  does not do the \"right thing\" with characters not supported in the output\n  set.\n- Spellcheck UTF-8: The Secret To Character Encoding\n- Fix improper removal of the contents of elements with only whitespace. Thanks\n  Eric Wald for reporting.\n- Fix broken test suite in versions of PHP without spl_autoload_register()\n- Fix degenerate case with YouTube filter involving double hyphens.\n  Thanks Pierre Attar for reporting.\n- Fix YouTube rendering problem on certain versions of Firefox.\n- Fix CSSDefinition Printer problems with decorators\n- Add text parameter to unit tests, forces text output\n. Add verbose mode to command line test runner, use (--verbose)\n. Turn on unit tests for UnitConverter\n. Fix missing version number in configuration %Attr.DefaultImageAlt (added 3.2.0)\n. Fix newline errors that caused spurious failures when CRLF HTML Purifier was\n  tested on Linux.\n. Removed trailing whitespace from all text files, see\n  remote-trailing-whitespace.php maintenance script.\n. Convert configuration to use property list backend.\n\n3.2.0, released 2008-10-31\n# Using %Core.CollectErrors forces line number/column tracking on, whereas\n  previously you could theoretically turn it off.\n# HTMLPurifier_Injector->notifyEnd() is formally deprecated. Please\n  use handleEnd() instead.\n! %Output.AttrSort for when you need your attributes in alphabetical order to\n  deal with a bug in FCKEditor. Requested by frank farmer.\n! Enable HTML comments when %HTML.Trusted is on. Requested by Waldo Jaquith.\n! Proper support for name attribute. It is now allowed and equivalent to the id\n  attribute in a and img tags, and is only converted to id when %HTML.TidyLevel\n  is heavy (for all doctypes).\n! %AutoFormat.RemoveEmpty to remove some empty tags from documents. Please don't\n  use on hand-written HTML.\n! Add error-cases for unsupported elements in MakeWellFormed. This enables\n  the strategy to be used, standalone, on untrusted input.\n! %Core.AggressivelyFixLt is on by default. This causes more sensible\n  processing of left angled brackets in smileys and other whatnot.\n! Test scripts now have a 'type' parameter, which lets you say 'htmlpurifier',\n  'phpt', 'vtest', etc. in order to only execute those tests. This supercedes\n  the --only-phpt parameter, although for backwards-compatibility the flag\n  will still work.\n! AutoParagraph auto-formatter will now preserve double-newlines upon output.\n  Users who are not performing inbound filtering, this may seem a little\n  useless, but as a bonus, the test suite and handling of edge cases is also\n  improved.\n! Experimental implementation of forms for %HTML.Trusted\n! Track column numbers when maintain line numbers is on\n! Proprietary 'background' attribute on table-related elements converted into\n  corresponding CSS.  Thanks Fusemail for sponsoring this feature!\n! Add forward(), forwardUntilEndToken(), backward() and current() to Injector\n  supertype.\n! HTMLPurifier_Injector->handleEnd() permits modification to end tokens. The\n  time of operation varies slightly from notifyEnd() as *all* end tokens are\n  processed by the injector before they are subject to the well-formedness rules.\n! %Attr.DefaultImageAlt allows overriding default behavior of setting alt to\n  basename of image when not present.\n! %AutoFormat.DisplayLinkURI neuters <a> tags into plain text URLs.\n- Fix two bugs in %URI.MakeAbsolute; one involving empty paths in base URLs,\n  the other involving an undefined $is_folder error.\n- Throw error when %Core.Encoding is set to a spurious value. Previously,\n  this errored silently and returned false.\n- Redirected stderr to stdout for flush error output.\n- %URI.DisableExternal will now use the host in %URI.Base if %URI.Host is not\n  available.\n- Do not re-munge URL if the output URL has the same host as the input URL.\n  Requested by Chris.\n- Fix error in documentation regarding %Filter.ExtractStyleBlocks\n- Prevent <![CDATA[<body></body>]]> from triggering %Core.ConvertDocumentToFragment\n- Fix bug with inline elements in blockquotes conflicting with strict doctype\n- Detect if HTML support is disabled for DOM by checking for loadHTML() method.\n- Fix bug where dots and double-dots in absolute URLs without hostname were\n  not collapsed by URIFilter_MakeAbsolute.\n- Fix bug with anonymous modules operating on SafeEmbed or SafeObject elements\n  by reordering their addition.\n- Will now throw exception on many error conditions during lexer creation; also\n  throw an exception when MaintainLineNumbers is true, but a non-tracksLineNumbers\n  is being used.\n- Detect if domxml extension is loaded, and use DirectLEx accordingly.\n- Improve handling of big numbers with floating point arithmetic in UnitConverter.\n  Reported by David Morton.\n. Strategy_MakeWellFormed now operates in-place, saving memory and allowing\n  for more interesting filter-backtracking\n. New HTMLPurifier_Injector->rewind() functionality, allows injectors to rewind\n  index to reprocess tokens.\n. StringHashParser now allows for multiline sections with \"empty\" content;\n  previously the section would remain undefined.\n. Added --quick option to multitest.php, which tests only the most recent\n  release for each series.\n. Added --distro option to multitest.php, which accepts either 'normal' or\n  'standalone'. This supercedes --exclude-normal and --exclude-standalone\n\n3.1.1, released 2008-06-19\n# %URI.Munge now, by default, does not munge resources (for example, <img src=\"\">)\n  In order to enable this again, please set %URI.MungeResources to true.\n! More robust imagecrash protection with height/width CSS with %CSS.MaxImgLength,\n  and height/width HTML with %HTML.MaxImgLength.\n! %URI.MungeSecretKey for secure URI munging. Thanks Chris\n  for sponsoring this feature. Check out the corresponding documentation\n  for details. (Att Nightly testers: The API for this feature changed before\n  the general release. Namely, rename your directives %URI.SecureMungeSecretKey =>\n  %URI.MungeSecretKey and and %URI.SecureMunge => %URI.Munge)\n! Implemented post URI filtering. Set member variable $post to true to set\n  a URIFilter as such.\n! Allow modules to define injectors via $info_injector. Injectors are\n  automatically disabled if injector's needed elements are not found.\n! Support for \"safe\" objects added, use %HTML.SafeObject and %HTML.SafeEmbed.\n  Thanks Chris for sponsoring. If you've been using ad hoc code from the\n  forums, PLEASE use this instead.\n! Added substitutions for %e, %n, %a and %p in %URI.Munge (in order,\n  embedded, tag name, attribute name, CSS property name). See %URI.Munge\n  for more details. Requested by Jochem Blok.\n- Disable percent height/width attributes for img.\n- AttrValidator operations are now atomic; updates to attributes are not\n  manifest in token until end of operations. This prevents naughty internal\n  code from directly modifying CurrentToken when they're not supposed to.\n  This semantics change was requested by frank farmer.\n- Percent encoding checks enabled for URI query and fragment\n- Fix stray backslashes in font-family; CSS Unicode character escapes are\n  now properly resolved (although *only* in font-family). Thanks Takeshi Terada\n  for reporting.\n- Improve parseCDATA algorithm to take into account newline normalization\n- Account for browser confusion between Yen character and backslash in\n  Shift_JIS encoding. This fix generalizes to any other encoding which is not\n  a strict superset of printable ASCII. Thanks Takeshi Terada for reporting.\n- Fix missing configuration parameter in Generator calls. Thanks vs for the\n  partial patch.\n- Improved adherence to Unicode by checking for non-character codepoints.\n  Thanks Geoffrey Sneddon for reporting. This may result in degraded\n  performance for extremely large inputs.\n- Allow CSS property-value pair ''text-decoration: none''. Thanks Jochem Blok\n  for reporting.\n. Added HTMLPurifier_UnitConverter and HTMLPurifier_Length for convenient\n  handling of CSS-style lengths. HTMLPurifier_AttrDef_CSS_Length now uses\n  this class.\n. API of HTMLPurifier_AttrDef_CSS_Length changed from __construct($disable_negative)\n  to __construct($min, $max). __construct(true) is equivalent to\n  __construct('0').\n. Added HTMLPurifier_AttrDef_Switch class\n. Rename HTMLPurifier_HTMLModule_Tidy->construct() to setup() and bubble method\n  up inheritance hierarchy to HTMLPurifier_HTMLModule. All HTMLModules\n  get this called with the configuration object.  All modules now\n  use this rather than __construct(), although legacy code using constructors\n  will still work--the new format, however, lets modules access the\n  configuration object for HTML namespace dependant tweaks.\n. AttrDef_HTML_Pixels now takes a single construction parameter, pixels.\n. ConfigSchema data-structure heavily optimized; on average it uses a third\n  the memory it did previously. The interface has changed accordingly,\n  consult changes to HTMLPurifier_Config for details.\n. Variable parsing types now are magic integers instead of strings\n. Added benchmark for ConfigSchema\n. HTMLPurifier_Generator requires $config and $context parameters. If you\n  don't know what they should be, use HTMLPurifier_Config::createDefault()\n  and new HTMLPurifier_Context().\n. Printers now properly distinguish between output configuration, and\n  target configuration. This is not applicable to scripts using\n  the Printers for HTML Purifier related tasks.\n. HTML/CSS Printers must be primed with prepareGenerator($gen_config), otherwise\n  fatal errors will ensue.\n. URIFilter->prepare can return false in order to abort loading of the filter\n. Factory for AttrDef_URI implemented, URI#embedded to indicate URI that embeds\n  an external resource.\n. %URI.Munge functionality factored out into a post-filter class.\n. Added CurrentCSSProperty context variable during CSS validation\n\n3.1.0, released 2008-05-18\n# Unnecessary references to objects (vestiges of PHP4) removed from method\n  signatures.  The following methods do not need references when assigning from\n  them and will result in E_STRICT errors if you try:\n    + HTMLPurifier_Config->get*Definition() [* = HTML, CSS]\n    + HTMLPurifier_ConfigSchema::instance()\n    + HTMLPurifier_DefinitionCacheFactory::instance()\n    + HTMLPurifier_DefinitionCacheFactory->create()\n    + HTMLPurifier_DoctypeRegistry->register()\n    + HTMLPurifier_DoctypeRegistry->get()\n    + HTMLPurifier_HTMLModule->addElement()\n    + HTMLPurifier_HTMLModule->addBlankElement()\n    + HTMLPurifier_LanguageFactory::instance()\n# Printer_ConfigForm's get*() functions were static-ified\n# %HTML.ForbiddenAttributes requires attribute declarations to be in the\n  form of tag@attr, NOT tag.attr (which will throw an error and won't do\n  anything). This is for forwards compatibility with XML; you'd do best\n  to migrate an %HTML.AllowedAttributes directives to this syntax too.\n! Allow index to be false for config from form creation\n! Added HTMLPurifier::VERSION constant\n! Commas, not dashes, used for serializer IDs. This change is forwards-compatible\n  and allows for version numbers like \"3.1.0-dev\".\n! %HTML.Allowed deals gracefully with whitespace anywhere, anytime!\n! HTML Purifier's URI handling is a lot more robust, with much stricter\n  validation checks and better percent encoding handling. Thanks Gareth Heyes\n  for indicating security vulnerabilities from lax percent encoding.\n! Bootstrap autoloader deals more robustly with classes that don't exist,\n  preventing class_exists($class, true) from barfing.\n- InterchangeBuilder now alphabetizes its lists\n- Validation error in configdoc output fixed\n- Iconv and other encoding errors muted even with custom error handlers that\n  do not honor error_reporting\n- Add protection against imagecrash attack with CSS height/width\n- HTMLPurifier::instance() created for consistency, is equivalent to getInstance()\n- Fixed and revamped broken ConfigForm smoketest\n- Bug with bool/null fields in Printer_ConfigForm fixed\n- Bug with global forbidden attributes fixed\n- Improved error messages for allowed and forbidden HTML elements and attributes\n- Missing (or null) in configdoc documentation restored\n- If DOM throws and exception during parsing with PH5P (occurs in newer versions\n  of DOM), HTML Purifier punts to DirectLex\n- Fatal error with unserialization of ScriptRequired\n- Created directories are now chmod'ed properly\n- Fixed bug with fallback languages in LanguageFactory\n- Standalone testing setup properly with autoload\n. Out-of-date documentation revised\n. UTF-8 encoding check optimization as suggested by Diego\n. HTMLPurifier_Error removed in favor of exceptions\n. More copy() function removed; should use clone instead\n. More extensive unit tests for HTMLDefinition\n. assertPurification moved to central harness\n. HTMLPurifier_Generator accepts $config and $context parameters during\n  instantiation, not runtime\n. Double-quotes outside of attribute values are now unescaped\n\n3.1.0rc1, released 2008-04-22\n# Autoload support added. Internal require_once's removed in favor of an\n  explicit require list or autoloading. To use HTML Purifier,\n  you must now either use HTMLPurifier.auto.php\n  or HTMLPurifier.includes.php; setting the include path and including\n  HTMLPurifier.php is insufficient--in such cases include HTMLPurifier.autoload.php\n  as well to register our autoload handler (or modify your autoload function\n  to check HTMLPurifier_Bootstrap::getPath($class)). You can also use\n  HTMLPurifier.safe-includes.php for a less performance friendly but more\n  user-friendly library load.\n# HTMLPurifier_ConfigSchema static functions are officially deprecated. Schema\n  information is stored in the ConfigSchema directory, and the\n  maintenance/generate-schema-cache.php generates the schema.ser file, which\n  is now instantiated. Support for userland schema changes coming soon!\n# HTMLPurifier_Config will now throw E_USER_NOTICE when you use a directive\n  alias; to get rid of these errors just modify your configuration to use\n  the new directive name.\n# HTMLPurifier->addFilter is deprecated; built-in filters can now be\n  enabled using %Filter.$filter_name or by setting your own filters using\n  %Filter.Custom\n# Directive-level safety properties superceded in favor of module-level\n  safety. Internal method HTMLModule->addElement() has changed, although\n  the externally visible HTMLDefinition->addElement has *not* changed.\n! Extra utility classes for testing and non-library operations can\n  be found in extras/. Specifically, these are FSTools and ConfigDoc.\n  You may find a use for these in your own project, but right now they\n  are highly experimental and volatile.\n! Integration with PHPT allows for automated smoketests\n! Limited support for proprietary HTML elements, namely <marquee>, sponsored\n  by Chris. You can enable them with %HTML.Proprietary if your client\n  demands them.\n! Support for !important CSS cascade modifier. By default, this will be stripped\n  from CSS, but you can enable it using %CSS.AllowImportant\n! Support for display and visibility CSS properties added, set %CSS.AllowTricky\n  to true to use them.\n! HTML Purifier now has its own Exception hierarchy under HTMLPurifier_Exception.\n  Developer error (not enduser error) can cause these to be triggered.\n! Experimental kses() wrapper introduced with HTMLPurifier.kses.php\n! Finally %CSS.AllowedProperties for tweaking allowed CSS properties without\n  mucking around with HTMLPurifier_CSSDefinition\n! ConfigDoc output has been enhanced with version and deprecation info.\n! %HTML.ForbiddenAttributes and %HTML.ForbiddenElements implemented.\n- Autoclose now operates iteratively, i.e. <span><span><div> now has\n  both span tags closed.\n- Various HTMLPurifier_Config convenience functions now accept another parameter\n  $schema which defines what HTMLPurifier_ConfigSchema to use besides the\n  global default.\n- Fix bug with trusted script handling in libxml versions later than 2.6.28.\n- Fix bug in ExtractStyleBlocks with comments in style tags\n- Fix bug in comment parsing for DirectLex\n- Flush output now displayed when in command line mode for unit tester\n- Fix bug with rgb(0, 1, 2) color syntax with spaces inside shorthand syntax\n- HTMLPurifier_HTMLDefinition->addAttribute can now be called multiple times\n  on the same element without emitting errors.\n- Fixed fatal error in PH5P lexer with invalid tag names\n. Plugins now get their own changelogs according to project conventions.\n. Convert tokens to use instanceof, reducing memory footprint and\n  improving comparison speed.\n. Dry runs now supported in SimpleTest; testing facilities improved\n. Bootstrap class added for handling autoloading functionality\n. Implemented recursive glob at FSTools->globr\n. ConfigSchema now has instance methods for all corresponding define*\n  static methods.\n. A couple of new historical maintenance scripts were added.\n. HTMLPurifier/HTMLModule/Tidy/XHTMLAndHTML4.php split into two files\n. tests/index.php can now be run from any directory.\n. HTMLPurifier_Token subclasses split into seperate files\n. HTMLPURIFIER_PREFIX now is defined in Bootstrap.php, NOT HTMLPurifier.php\n. HTMLPURIFIER_PREFIX can now be defined outside of HTML Purifier\n. New --php=php flag added, allows PHP executable to be specified (command\n  line only!)\n. htmlpurifier_add_test() preferred method to translate test files in to\n  classes, because it handles PHPT files too.\n. Debugger class is deprecated and will be removed soon.\n. Command line argument parsing for testing scripts revamped, now --opt value\n  format is supported.\n. Smoketests now cleanup after magic quotes\n. Generator now can output comments (however, comments are still stripped\n  from HTML Purifier output)\n. HTMLPurifier_ConfigSchema->validate() deprecated in favor of\n  HTMLPurifier_VarParser->parse()\n. Integers auto-cast into float type by VarParser.\n. HTMLPURIFIER_STRICT removed; no validation is performed on runtime, only\n  during cache generation\n. Reordered script calls in maintenance/flush.php\n. Command line scripts now honor exit codes\n. When --flush fails in unit testers, abort tests and print message\n. Improved documentation in docs/dev-flush.html about the maintenance scripts\n. copy() methods removed in favor of clone keyword\n\n3.0.0, released 2008-01-06\n# HTML Purifier is PHP 5 only! The 2.1.x branch will be maintained\n  until PHP 4 is completely deprecated, but no new features will be added\n  to it.\n  + Visibility declarations added\n  + Constructor methods renamed to __construct()\n  + PHP4 reference cruft removed (in progress)\n! CSS properties are now case-insensitive\n! DefinitionCacheFactory now can register new implementations\n! New HTMLPurifier_Filter_ExtractStyleBlocks for extracting <style> from\n  documents and cleaning their contents up. Requires the CSSTidy library\n  <http://csstidy.sourceforge.net/>. You can access the blocks with the\n  'StyleBlocks' Context variable ($purifier->context->get('StyleBlocks')).\n  The output CSS can also be \"scoped\" for a specific element, use:\n  %Filter.ExtractStyleBlocksScope\n! Experimental support for some proprietary CSS attributes allowed:\n  opacity (and all of the browser-specific equivalents) and scrollbar colors.\n  Enable by setting %CSS.Proprietary to true.\n- Colors missing # but in hex form will be corrected\n- CSS Number algorithm improved\n- Unit testing and multi-testing now on steroids: command lines,\n  XML output, and other goodies now added.\n. Unit tests for Injector improved\n. New classes:\n  + HTMLPurifier_AttrDef_CSS_AlphaValue\n  + HTMLPurifier_AttrDef_CSS_Filter\n. Multitest now has a file docblock\n\n2.1.3, released 2007-11-05\n! tests/multitest.php allows you to test multiple versions by running\n  tests/index.php through multiple interpreters using `phpv` shell\n  script (you must provide this script!)\n- Fixed poor include ordering for Email URI AttrDefs, causes fatal errors\n  on some systems.\n- Injector algorithm further refined: off-by-one error regarding skip\n  counts for dormant injectors fixed\n- Corrective blockquote definition now enabled for HTML 4.01 Strict\n- Fatal error when <img> tag (or any other element with required attributes)\n  has 'id' attribute fixed, thanks NykO18 for reporting\n- Fix warning emitted when a non-supported URI scheme is passed to the\n  MakeAbsolute URIFilter, thanks NykO18 (again)\n- Further refine AutoParagraph injector. Behavior inside of elements\n  allowing paragraph tags clarified: only inline content delimeted by\n  double newlines (not block elements) are paragraphed.\n- Buggy treatment of end tags of elements that have required attributes\n  fixed (does not manifest on default tag-set)\n- Spurious internal content reorganization error suppressed\n- HTMLDefinition->addElement now returns a reference to the created\n  element object, as implied by the documentation\n- Phorum mod's HTML Purifier help message expanded (unreleased elsewhere)\n- Fix a theoretical class of infinite loops from DirectLex reported\n  by Nate Abele\n- Work around unnecessary DOMElement type-cast in PH5P that caused errors\n  in PHP 5.1\n- Work around PHP 4 SimpleTest lack-of-error complaining for one-time-only\n  HTMLDefinition errors, this may indicate problems with error-collecting\n  facilities in PHP 5\n- Make ErrorCollectorEMock work in both PHP 4 and PHP 5\n- Make PH5P work with PHP 5.0 by removing unnecessary array parameter typedef\n. %Core.AcceptFullDocuments renamed to %Core.ConvertDocumentToFragment\n  to better communicate its purpose\n. Error unit tests can now specify the expectation of no errors. Future\n  iterations of the harness will be extremely strict about what errors\n  are allowed\n. Extend Injector hooks to allow for more powerful injector routines\n. HTMLDefinition->addBlankElement created, as according to the HTMLModule\n  method\n. Doxygen configuration file updated, with minor improvements\n. Test runner now checks for similarly named files in conf/ directory too.\n. Minor cosmetic change to flush-definition-cache.php: trailing newline is\n  outputted\n. Maintenance script for generating PH5P patch added, original PH5P source\n  file also added under version control\n. Full unit test runner script title made more descriptive with PHP version\n. Updated INSTALL file to state that 4.3.7 is the earliest version we\n  are actively testing\n\n2.1.2, released 2007-09-03\n! Implemented Object module for trusted users\n! Implemented experimental HTML5 parsing mode using PH5P. To use, add\n  this to your code:\n        require_once 'HTMLPurifier/Lexer/PH5P.php';\n        $config->set('Core', 'LexerImpl', 'PH5P');\n  Note that this Lexer introduces some classes not in the HTMLPurifier\n  namespace.  Also, this is PHP5 only.\n! CSS property border-spacing implemented\n- Fix non-visible parsing error in DirectLex with empty tags that have\n  slashes inside attribute values.\n- Fix typo in CSS definition: border-collapse:seperate; was incorrectly\n  accepted as valid CSS. Usually non-visible, because this styling is the\n  default for tables in most browsers. Thanks Brett Zamir for pointing\n  this out.\n- Fix validation errors in configuration form\n- Hammer out a bunch of edge-case bugs in the standalone distribution\n- Inclusion reflection removed from URISchemeRegistry; you must manually\n  include any new schema files you wish to use\n- Numerous typo fixes in documentation thanks to Brett Zamir\n. Unit test refactoring for one logical test per test function\n. Config and context parameters in ComplexHarness deprecated: instead, edit\n  the $config and $context member variables\n. HTML wrapper in DOMLex now takes DTD identifiers into account; doesn't\n  really make a difference, but is good for completeness sake\n. merge-library.php script refactored for greater code reusability and\n  PHP4 compatibility\n\n2.1.1, released 2007-08-04\n- Fix show-stopper bug in %URI.MakeAbsolute functionality\n- Fix PHP4 syntax error in standalone version\n. Add prefix directory to include path for standalone, this prevents\n  other installations from clobbering the standalone's URI schemes\n. Single test methods can be invoked by prefixing with __only\n\n2.1.0, released 2007-08-02\n# flush-htmldefinition-cache.php superseded in favor of a generic\n  flush-definition-cache.php script, you can clear a specific cache\n  by passing its name as a parameter to the script\n! Phorum mod implemented for HTML Purifier\n! With %Core.AggressivelyFixLt, <3 and similar emoticons no longer\n  trigger HTML removal in PHP5 (DOMLex). This directive is not necessary\n  for PHP4 (DirectLex).\n! Standalone file now available, which greatly reduces the amount of\n  includes (although there are still a few files that reside in the\n  standalone folder)\n! Relative URIs can now be transformed into their absolute equivalents\n  using %URI.Base and %URI.MakeAbsolute\n! Ruby implemented for XHTML 1.1\n! You can now define custom URI filtering behavior, see enduser-uri-filter.html\n  for more details\n! UTF-8 font names now supported in CSS\n- AutoFormatters emit friendly error messages if tags or attributes they\n  need are not allowed\n- ConfigForm's compactification of directive names is now configurable\n- AutoParagraph autoformatter algorithm refined after field-testing\n- XHTML 1.1 now applies XHTML 1.0 Strict cleanup routines, namely\n  blockquote wrapping\n- Contents of <style> tags removed by default when tags are removed\n. HTMLPurifier_Config->getSerial() implemented, this is extremely useful\n  for output cache invalidation\n. ConfigForm printer now can retrieve CSS and JS files as strings, in\n  case HTML Purifier's directory is not publically accessible\n. Introduce new text/itext configuration directive values: these represent\n  longer strings that would be more appropriately edited with a textarea\n. Allow newlines to act as separators for lists, hashes, lookups and\n  %HTML.Allowed\n. ConfigForm generates textareas instead of text inputs for lists, hashes,\n  lookups, text and itext fields\n. Hidden element content removal genericized: %Core.HiddenElements can\n  be used to customize this behavior, by default <script> and <style> are\n  hidden\n. Added HTMLPURIFIER_PREFIX constant, should be used instead of dirname(__FILE__)\n. Custom ChildDef added to default include list\n. URIScheme reflection improved: will not attempt to include file if class\n  already exists. May clobber autoload, so I need to keep an eye on it\n. ConfigSchema heavily optimized, will only collect information and validate\n  definitions when HTMLPURIFIER_SCHEMA_STRICT is true.\n. AttrDef_URI unit tests and implementation refactored\n. benchmarks/ directory now protected from public view with .htaccess file;\n  run the tests via command line\n. URI scheme is munged off if there is no authority and the scheme is the\n  default one\n. All unit tests inherit from HTMLPurifier_Harness, not UnitTestCase\n. Interface for URIScheme changed\n. Generic URI object to hold components of URI added, most systems involved\n  in URI validation have been migrated to use it\n. Custom filtering for URIs factored out to URIDefinition interface for\n  maximum extensibility\n\n2.0.1, released 2007-06-27\n! Tag auto-closing now based on a ChildDef heuristic rather than a\n  manually set auto_close array; some behavior may change\n! Experimental AutoFormat functionality added: auto-paragraph and\n  linkify your HTML input by setting %AutoFormat.AutoParagraph and\n  %AutoFormat.Linkify to true\n! Newlines normalized internally, and then converted back to the\n  value of PHP_EOL. If this is not desired, set your newline format\n  using %Output.Newline.\n! Beta error collection, messages are implemented for the most generic\n  cases involving Lexing or Strategies\n- Clean up special case code for <script> tags\n- Reorder includes for DefinitionCache decorators, fixes a possible\n  missing class error\n- Fixed bug where manually modified definitions were not saved via cache\n  (mostly harmless, except for the fact that it would be a little slower)\n- Configuration objects with different serials do not clobber each\n  others when revision numbers are unequal\n- Improve Serializer DefinitionCache directory permissions checks\n- DefinitionCache no longer throws errors when it encounters old\n  serial files that do not conform to the current style\n- Stray xmlns attributes removed from configuration documentation\n- configForm.php smoketest no longer has XSS vulnerability due to\n  unescaped print_r output\n- Printer adheres to configuration's directives on output format\n- Fix improperly named form field in ConfigForm printer\n. Rewire some test-cases to swallow errors rather than expect them\n. HTMLDefinition printer updated with some of the new attributes\n. DefinitionCache keys reordered to reflect precedence: version number,\n  hash, then revision number\n. %Core.DefinitionCache renamed to %Cache.DefinitionImpl\n. Interlinking in configuration documentation added using\n  Injector_PurifierLinkify\n. Directives now keep track of aliases to themselves\n. Error collector now requires a severity to be passed, use PHP's internal\n  error constants for this\n. HTMLPurifier_Config::getAllowedDirectivesForForm implemented, allows\n  much easier selective embedding of configuration values\n. Doctype objects now accept public and system DTD identifiers\n. %HTML.Doctype is now constrained by specific values, to specify a custom\n  doctype use new %HTML.CustomDoctype\n. ConfigForm truncates long directives to keep the form small, and does\n  not re-output namespaces\n\n2.0.0, released 2007-06-20\n# Completely refactored HTMLModuleManager, decentralizing safety\n  information\n# Transform modules changed to Tidy modules, which offer more flexibility\n  and better modularization\n# Configuration object now finalizes itself when a read operation is\n  performed on it, ensuring that its internal state stays consistent.\n  To revert this behavior, you can set the $autoFinalize member variable\n  off, but it's not recommended.\n# New compact syntax for AttrDef objects that can be used to instantiate\n  new objects via make()\n# Definitions (esp. HTMLDefinition) are now cached for a significant\n  performance boost. You can disable caching by setting %Core.DefinitionCache\n  to null. You CANNOT edit raw definitions without setting the corresponding\n  DefinitionID directive (%HTML.DefinitionID for HTMLDefinition).\n# Contents between <script> tags are now completely removed if <script>\n  is not allowed\n# Prototype-declarations for Lexer removed in favor of configuration\n  determination of Lexer implementations.\n! HTML Purifier now works in PHP 4.3.2.\n! Configuration form-editing API makes tweaking HTMLPurifier_Config a\n  breeze!\n! Configuration directives that accept hashes now allow new string\n  format: key1:value1,key2:value2\n! ConfigDoc now factored into OOP design\n! All deprecated elements now natively supported\n! Implement TinyMCE styled whitelist specification format in\n  %HTML.Allowed\n! Config object gives more friendly error messages when things go wrong\n! Advanced API implemented: easy functions for creating elements (addElement)\n  and attributes (addAttribute) on HTMLDefinition\n! Add native support for required attributes\n- Deprecated and removed EnableRedundantUTF8Cleaning. It didn't even work!\n- DOMLex will not emit errors when a custom error handler that does not\n  honor error_reporting is used\n- StrictBlockquote child definition refrains from wrapping whitespace\n  in tags now.\n- Bug resulting from tag transforms to non-allowed elements fixed\n- ChildDef_Custom's regex generation has been improved, removing several\n  false positives\n. Unit test for ElementDef created, ElementDef behavior modified to\n  be more flexible\n. Added convenience functions for HTMLModule constructors\n. AttrTypes now has accessor functions that should be used instead\n  of directly manipulating info\n. TagTransform_Center deprecated in favor of generic TagTransform_Simple\n. Add extra protection in AttrDef_URI against phantom Schemes\n. Doctype object added to HTMLDefinition which describes certain aspects\n  of the operational document type\n. Lexer is now pre-emptively included, with a conditional include for the\n  PHP5 only version.\n. HTMLDefinition and CSSDefinition have a common parent class: Definition.\n. DirectLex can now track line-numbers\n. Preliminary error collector is in place, although no code actually reports\n  errors yet\n. Factor out most of ValidateAttributes to new AttrValidator class\n\n1.6.1, released 2007-05-05\n! Support for more deprecated attributes via transformations:\n  + hspace and vspace in img\n  + size and noshade in hr\n  + nowrap in td\n  + clear in br\n  + align in caption, table, img and hr\n  + type in ul, ol and li\n! DirectLex now preserves text in which a < bracket is followed by\n  a non-alphanumeric character. This means that certain emoticons\n  are now preserved.\n! %Core.RemoveInvalidImg is now operational, when set to false invalid\n  images will hang around with an empty src\n! target attribute in a tag supported, use %Attr.AllowedFrameTargets\n  to enable\n! CSS property white-space now allows nowrap (supported in all modern\n  browsers) but not others (which have spotty browser implementations)\n! XHTML 1.1 mode now sort-of works without any fatal errors, and\n  lang is now moved over to xml:lang.\n! Attribute transformation smoketest available at smoketests/attrTransform.php\n! Transformation of font's size attribute now handles super-large numbers\n- Possibly fatal bug with __autoload() fixed in module manager\n- Invert HTMLModuleManager->addModule() processing order to check\n  prefixes first and then the literal module\n- Empty strings get converted to empty arrays instead of arrays with\n  an empty string in them.\n- Merging in attribute lists now works.\n. Demo script removed: it has been added to the website's repository\n. Basic.php script modified to work out of the box\n. Refactor AttrTransform classes to reduce duplication\n. AttrTransform_TextAlign axed in favor of a more general\n  AttrTransform_EnumToCSS, refer to HTMLModule/TransformToStrict.php to\n  see how the new equivalent is implemented\n. Unit tests now use exclusively assertIdentical\n\n1.6.0, released 2007-04-01\n! Support for most common deprecated attributes via transformations:\n  + bgcolor in td, th, tr and table\n  + border in img\n  + name in a and img\n  + width in td, th and hr\n  + height in td, th\n! Support for CSS attribute 'height' added\n! Support for rel and rev attributes in a tags added, use %Attr.AllowedRel\n  and %Attr.AllowedRev to activate\n- You can define ID blacklists using regular expressions via\n  %Attr.IDBlacklistRegexp\n- Error messages are emitted when you attempt to \"allow\" elements or\n  attributes that HTML Purifier does not support\n- Fix segfault in unit test. The problem is not very reproduceable and\n  I don't know what causes it, but a six line patch fixed it.\n\n1.5.0, released 2007-03-23\n! Added a rudimentary I18N and L10N system modeled off MediaWiki. It\n  doesn't actually do anything yet, but keep your eyes peeled.\n! docs/enduser-utf8.html explains how to use UTF-8 and HTML Purifier\n! Newly structured HTMLDefinition modeled off of XHTML 1.1 modules.\n  I am loathe to release beta quality APIs, but this is exactly that;\n  don't use the internal interfaces if you're not willing to do migration\n  later on.\n- Allow 'x' subtag in language codes\n- Fixed buggy chameleon-support for ins and del\n. Added support for IDREF attributes (i.e. for)\n. Renamed HTMLPurifier_AttrDef_Class to HTMLPurifier_AttrDef_Nmtokens\n. Removed context variable ParentType, replaced with IsInline, which\n  is false when you're not inline and an integer of the parent that\n  caused you to become inline when you are (so possibly zero)\n. Removed ElementDef->type in favor of ElementDef->descendants_are_inline\n  and HTMLDefinition->content_sets\n. StrictBlockquote now reports what elements its supposed to allow,\n  rather than what it does allow\n. Removed HTMLDefinition->info_flow_elements in favor of\n  HTMLDefinition->content_sets['Flow']\n. Removed redundant \"exclusionary\" definitions from DTD roster\n. StrictBlockquote now requires a construction parameter as if it\n  were an Required ChildDef, this is the \"real\" set of allowed elements\n. AttrDef partitioned into HTML, CSS and URI segments\n. Modify Youtube filter regexp to be multiline\n. Require both PHP5 and DOM extension in order to use DOMLex, fixes\n  some edge cases where a DOMDocument class exists in a PHP4 environment\n  due to DOM XML extension.\n\n1.4.1, released 2007-01-21\n! docs/enduser-youtube.html updated according to new functionality\n- YouTube IDs can have underscores and dashes\n\n1.4.0, released 2007-01-21\n! Implemented list-style-image, URIs now allowed in list-style\n! Implemented background-image, background-repeat, background-attachment\n  and background-position CSS properties. Shorthand property background\n  supports all of these properties.\n! Configuration documentation looks nicer\n! Added %Core.EscapeNonASCIICharacters to workaround loss of Unicode\n  characters while %Core.Encoding is set to a non-UTF-8 encoding.\n! Support for configuration directive aliases added\n! Config object can now be instantiated from ini files\n! YouTube preservation code added to the core, with two lines of code\n  you can add it as a filter to your code. See smoketests/preserveYouTube.php\n  for sample code.\n! Moved SLOW to docs/enduser-slow.html and added code examples\n- Replaced version check with functionality check for DOM (thanks Stephen\n  Khoo)\n. Added smoketest 'all.php', which loads all other smoketests via frames\n. Implemented AttrDef_CSSURI for url(http://google.com) style declarations\n. Added convenient single test selector form on test runner\n\n1.3.2, released 2006-12-25\n! HTMLPurifier object now accepts configuration arrays, no need to manually\n  instantiate a configuration object\n! Context object now accessible to outside\n! Added enduser-youtube.html, explains how to embed YouTube videos. See\n  also corresponding smoketest preserveYouTube.php.\n! Added purifyArray(), which takes a list of HTML and purifies it all\n! Added static member variable $version to HTML Purifier with PHP-compatible\n  version number string.\n- Fixed fatal error thrown by upper-cased language attributes\n- printDefinition.php: added labels, added better clarification\n. HTMLPurifier_Config::create() added, takes mixed variable and converts into\n  a HTMLPurifier_Config object.\n\n1.3.1, released 2006-12-06\n! Added HTMLPurifier.func.php stub for a convenient function to call the library\n- Fixed bug in RemoveInvalidImg code that caused all images to be dropped\n  (thanks to .mario for reporting this)\n. Standardized all attribute handling variables to attr, made it plural\n\n1.3.0, released 2006-11-26\n# Invalid images are now removed, rather than replaced with a dud\n  <img src=\"\" alt=\"Invalid image\" />. Previous behavior can be restored\n  with new directive %Core.RemoveInvalidImg set to false.\n! (X)HTML Strict now supported\n  + Transparently handles inline elements in block context (blockquote)\n! Added GET method to demo for easier validation, added 50kb max input size\n! New directive %HTML.BlockWrapper, for block-ifying inline elements\n! New directive %HTML.Parent, allows you to only allow inline content\n! New directives %HTML.AllowedElements and %HTML.AllowedAttributes to let\n  users narrow the set of allowed tags\n! <li value=\"4\"> and <ul start=\"2\"> now allowed in loose mode\n! New directives %URI.DisableExternalResources and %URI.DisableResources\n! New directive %Attr.DisableURI, which eliminates all hyperlinking\n! New directive %URI.Munge, munges URI so you can use some sort of redirector\n  service to avoid PageRank leaks or warn users that they are exiting your site.\n! Added spiffy new smoketest printDefinition.php, which lets you twiddle with\n  the configuration settings and see how the internal rules are affected.\n! New directive %URI.HostBlacklist for blocking links to bad hosts.\n  xssAttacks.php smoketest updated accordingly.\n- Added missing type to ChildDef_Chameleon\n- Remove Tidy option from demo if there is not Tidy available\n. ChildDef_Required guards against empty tags\n. Lookup table HTMLDefinition->info_flow_elements added\n. Added peace-of-mind variable initialization to Strategy_FixNesting\n. Added HTMLPurifier->info_parent_def, parent child processing made special\n. Added internal documents briefly summarizing future progression of HTML\n. HTMLPurifier_Config->getBatch($namespace) added\n. More lenient casting to bool from string in HTMLPurifier_ConfigSchema\n. Refactored ChildDef classes into their own files\n\n1.2.0, released 2006-11-19\n# ID attributes now disabled by default. New directives:\n  + %HTML.EnableAttrID - restores old behavior by allowing IDs\n  + %Attr.IDPrefix - %Attr.IDBlacklist alternative that munges all user IDs\n    so that they don't collide with your IDs\n  + %Attr.IDPrefixLocal - Same as above, but for when there are multiple\n    instances of user content on the page\n  + Profuse documentation on how to use these available in docs/enduser-id.txt\n! Added MODx plugin <http://modxcms.com/forums/index.php/topic,6604.0.html>\n! Added percent encoding normalization\n! XSS attacks smoketest given facelift\n! Configuration documentation now has table of contents\n! Added %URI.DisableExternal, which prevents links to external websites.  You\n  can also use %URI.Host to permit absolute linking to subdomains\n! Non-accessible resources (ex. mailto) blocked from embedded URIs (img src)\n- Type variable in HTMLDefinition was not being set properly, fixed\n- Documentation updated\n  + TODO added request Phalanger\n  + TODO added request Native compression\n  + TODO added request Remove redundant tags\n  + TODO added possible plaintext formatter for HTML Purifier documentation\n  + Updated ConfigDoc TODO\n  + Improved inline comments in AttrDef/Class.php, AttrDef/CSS.php\n    and AttrDef/Host.php\n  + Revamped documentation into HTML, along with misc updates\n- HTMLPurifier_Context doesn't throw a variable reference error if you attempt\n  to retrieve a non-existent variable\n. Switched to purify()-wide Context object registry\n. Refactored unit tests to minimize duplication\n. XSS attack sheet updated\n. configdoc.xml now has xml:space attached to default value nodes\n. Allow configuration directives to permit null values\n. Cleaned up test-cases to remove unnecessary swallowErrors()\n\n1.1.2, released 2006-09-30\n! Add HTMLPurifier.auto.php stub file that configures include_path\n- Documentation updated\n  + INSTALL document rewritten\n  + TODO added semi-lossy conversion\n  + API Doxygen docs' file exclusions updated\n  + Added notes on HTML versus XML attribute whitespace handling\n  + Noted that HTMLPurifier_ChildDef_Custom isn't being used\n  + Noted that config object's definitions are cached versions\n- Fixed lack of attribute parsing in HTMLPurifier_Lexer_PEARSax3\n- ftp:// URIs now have their typecodes checked\n- Hooked up HTMLPurifier_ChildDef_Custom's unit tests (they weren't being run)\n. Line endings standardized throughout project (svn:eol-style standardized)\n. Refactored parseData() to general Lexer class\n. Tester named \"HTML Purifier\" not \"HTMLPurifier\"\n\n1.1.1, released 2006-09-24\n! Configuration option to optionally Tidy up output for indentation to make up\n  for dropped whitespace by DOMLex (pretty-printing for the entire application\n  should be done by a page-wide Tidy)\n- Various documentation updates\n- Fixed parse error in configuration documentation script\n- Fixed fatal error in benchmark scripts, slightly augmented\n- As far as possible, whitespace is preserved in-between table children\n- Sample test-settings.php file included\n\n1.1.0, released 2006-09-16\n! Directive documentation generation using XSLT\n! XHTML can now be turned off, output becomes <br>\n- Made URI validator more forgiving: will ignore leading and trailing\n  quotes, apostrophes and less than or greater than signs.\n- Enforce alphanumeric namespace and directive names for configuration.\n- Table child definition made more flexible, will fix up poorly ordered elements\n. Renamed ConfigDef to ConfigSchema\n\n1.0.1, released 2006-09-04\n- Fixed slight bug in DOMLex attribute parsing\n- Fixed rejection of case-insensitive configuration values when there is a\n  set of allowed values.  This manifested in %Core.Encoding.\n- Fixed rejection of inline style declarations that had lots of extra\n  space in them.  This manifested in TinyMCE.\n\n1.0.0, released 2006-09-01\n! Shorthand CSS properties implemented: font, border, background, list-style\n! Basic color keywords translated into hexadecimal values\n! Table CSS properties implemented\n! Support for charsets other than UTF-8 (defined by iconv)\n! Malformed UTF-8 and non-SGML character detection and cleaning implemented\n- Fixed broken numeric entity conversion\n- API documentation completed\n. (HTML|CSS)Definition de-singleton-ized\n\n1.0.0beta, released 2006-08-16\n! First public release, most functionality implemented. Notable omissions are:\n  + Shorthand CSS properties\n  + Table CSS properties\n  + Deprecated attribute transformations\n\n    vim: et sw=4 sts=4\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.2412109375,
          "content": "HTML Purifier [![Build Status](https://github.com/ezyang/htmlpurifier/actions/workflows/ci.yml/badge.svg?branch=master)](https://github.com/ezyang/htmlpurifier/actions/workflows/ci.yml)\n=============\n\nHTML Purifier is an HTML filtering solution that uses a unique combination\nof robust whitelists and aggressive parsing to ensure that not only are\nXSS attacks thwarted, but the resulting HTML is standards compliant.\n\nHTML Purifier is oriented towards richly formatted documents from\nuntrusted sources that require CSS and a full tag-set.  This library can\nbe configured to accept a more restrictive set of tags, but it won't be\nas efficient as more bare-bones parsers. It will, however, do the job\nright, which may be more important.\n\nPlaces to go:\n\n* See INSTALL for a quick installation guide\n* See docs/ for developer-oriented documentation, code examples and\n  an in-depth installation guide.\n* See WYSIWYG for information on editors like TinyMCE and FCKeditor\n\nHTML Purifier can be found on the web at: [http://htmlpurifier.org/](http://htmlpurifier.org/)\n\n## Installation\n\nPackage available on [Composer](https://packagist.org/packages/ezyang/htmlpurifier).\n\nIf you're using Composer to manage dependencies, you can use\n\n    $ composer require ezyang/htmlpurifier\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 6.671875,
          "content": "\nTODO List\n\n= KEY ====================\n    # Flagship\n    - Regular\n    ? Maybe I'll Do It\n==========================\n\nIf no interest is expressed for a feature that may require a considerable\namount of effort to implement, it may get endlessly delayed. Do not be\nafraid to cast your vote for the next feature to be implemented!\n\nThings to do as soon as possible:\n\n - http://htmlpurifier.org/phorum/read.php?3,5560,6307#msg-6307\n - Think about allowing explicit order of operations hooks for transforms\n - Fix \"<.<\" bug (trailing < is removed if not EOD)\n - Build in better internal state dumps and debugging tools for remote\n   debugging\n - Allowed/Allowed* have strange interactions when both set\n ? Transform lone embeds into object tags\n - Deprecated config options that emit warnings when you set them (with'\n   a way of muting the warning if you really want to)\n - Make HTML.Trusted work with Output.FlashCompat\n - HTML.Trusted and HTML.SafeObject have funny interaction; general\n   problem is what to do when a module \"supersedes\" another\n   (see also tables and basic tables.)  This is a little dicier\n   because HTML.SafeObject has some extra functionality that\n   trusted might find useful.  See http://htmlpurifier.org/phorum/read.php?3,5762,6100\n\nFUTURE VERSIONS\n---------------\n\n4.9 release [OMG CONFIG PONIES]\n ! Fix Printer. It's from the old days when we didn't have decent XML classes\n ! Factor demo.php into a set of Printer classes, and then create a stub\n   file for users here (inside the actual HTML Purifier library)\n - Fix error handling with form construction\n - Do encoding validation in Printers, or at least, where user data comes in\n - Config: Add examples to everything (make built-in which also automatically\n   gives output)\n - Add \"register\" field to config schemas to eliminate dependence on\n   naming conventions (try to remember why we ultimately decided on tihs)\n\n5.0 release [HTML 5]\n # Swap out code to use html5lib tokenizer and tree-builder\n ! Allow turning off of FixNesting and required attribute insertion\n\n5.1 release [It's All About Trust] (floating)\n # Implement untrusted, dangerous elements/attributes\n # Implement IDREF support (harder than it seems, since you cannot have\n   IDREFs to non-existent IDs)\n     - Implement <area> (client and server side image maps are blocking\n       on IDREF support)\n # Frameset XHTML 1.0 and HTML 4.01 doctypes\n - Figure out how to simultaneously set %CSS.Trusted and %HTML.Trusted (?)\n\n5.2 release [Error'ed]\n # Error logging for filtering/cleanup procedures\n # Additional support for poorly written HTML\n    - Microsoft Word HTML cleaning (i.e. MsoNormal, but research essential!)\n    - Friendly strict handling of <address> (block -> <br>)\n - XSS-attempt detection--certain errors are flagged XSS-like\n - Append something to duplicate IDs so they're still usable (impl. note: the\n   dupe detector would also need to detect the suffix as well)\n\n6.0 release [Beyond HTML]\n # Legit token based CSS parsing (will require revamping almost every\n   AttrDef class). Probably will use CSSTidy\n # More control over allowed CSS properties using a modularization\n # IRI support (this includes IDN)\n - Standardize token armor for all areas of processing\n\n7.0 release [To XML and Beyond]\n - Extended HTML capabilities based on namespacing and tag transforms (COMPLEX)\n    - Hooks for adding custom processors to custom namespaced tags and\n      attributes, offer default implementation\n    - Lots of documentation and samples\n\nOngoing\n - More refactoring to take advantage of PHP5's facilities\n - Refactor unit tests into lots of test methods\n - Plugins for major CMSes (COMPLEX)\n    - phpBB\n    - Also, a FAQ for extension writers with HTML Purifier\n\nAutoFormat\n - Smileys\n - Syntax highlighting (with GeSHi) with <pre> and possibly <?php\n - Look at http://drupal.org/project/Modules/category/63 for ideas\n\nNeat feature related\n ! Support exporting configuration, so users can easily tweak settings\n   in the demo, and then copy-paste into their own setup\n - Advanced URI filtering schemes (see docs/proposal-new-directives.txt)\n - Allow scoped=\"scoped\" attribute in <style> tags; may be troublesome\n   because regular CSS has no way of uniquely identifying nodes, so we'd\n   have to generate IDs\n - Explain how to use HTML Purifier in non-PHP languages / create\n   a simple command line stub (or complicated?)\n - Fixes for Firefox's inability to handle COL alignment props (Bug 915)\n - Automatically add non-breaking spaces to empty table cells when\n   empty-cells:show is applied to have compatibility with Internet Explorer\n - Table of Contents generation (XHTML Compiler might be reusable). May also\n   be out-of-band information.\n - Full set of color keywords. Also, a way to add onto them without\n   finalizing the configuration object.\n - Write a var_export and memcached DefinitionCache - Denis\n - Built-in support for target=\"_blank\" on all external links\n - Convert RTL/LTR override characters to <bdo> tags, or vice versa on demand.\n   Also, enable disabling of directionality\n ? Externalize inline CSS to promote clean HTML, proposed by Sander Tekelenburg\n ? Remove redundant tags, ex. <u><u>Underlined</u></u>. Implementation notes:\n    1. Analyzing which tags to remove duplicants\n    2. Ensure attributes are merged into the parent tag\n    3. Extend the tag exclusion system to specify whether or not the\n    contents should be dropped or not (currently, there's code that could do\n    something like this if it didn't drop the inner text too.)\n ? Make AutoParagraph also support paragraph-izing double <br> tags, and not\n   just double newlines.  This is kind of tough to do in the current framework,\n   though, and might be reasonably approximated by search replacing double <br>s\n   with newlines before running it through HTML Purifier.\n\nMaintenance related (slightly boring)\n # CHMOD install script for PEAR installs\n ! Factor out command line parser into its own class, and unit test it\n - Reduce size of internal data-structures (esp. HTMLDefinition)\n - Allow merging configurations.  Thus,\n        a -> b -> default\n        c -> d -> default\n   becomes\n        a -> b -> c -> d -> default\n   Maybe allow more fine-grained tuning of this behavior. Alternatively,\n   encourage people to use short plist depths before building them up.\n - Time PHPT tests\n\nChildDef related (very boring)\n - Abstract ChildDef_BlockQuote to work with all elements that only\n   allow blocks in them, required or optional\n - Implement lenient <ruby> child validation\n\nWontfix\n - Non-lossy smart alternate character encoding transformations (unless\n   patch provided)\n - Pretty-printing HTML: users can use Tidy on the output on entire page\n - Native content compression, whitespace stripping: use gzip if this is\n   really important\n\n    vim: et sw=4 sts=4\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "4.18.0"
        },
        {
          "name": "WYSIWYG",
          "type": "blob",
          "size": 0.8369140625,
          "content": "\nWYSIWYG - What You See Is What You Get\n    HTML Purifier: A Pretty Good Fit for TinyMCE and FCKeditor\n\nJavascript-based WYSIWYG editors, simply stated, are quite amazing.  But I've\nalways been wary about using them due to security issues: they handle the\nclient-side magic, but once you've been served a piping hot load of unfiltered\nHTML, what should be done then?  In some situations, you can serve it uncleaned,\nsince you only offer these facilities to trusted(?) authors.\n\nUnfortunantely, for blog comments and anonymous input, BBCode, Textile and\nother markup languages still reign supreme.  Put simply: filtering HTML is\nhard work, and these WYSIWYG authors don't offer anything to alleviate that\ntrouble.  Therein lies the solution:\n\nHTML Purifier is perfect for filtering pure-HTML input from WYSIWYG editors.\n\nEnough said.\n\n    vim: et sw=4 sts=4\n"
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.3916015625,
          "content": "{\n    \"name\": \"ezyang/htmlpurifier\",\n    \"description\": \"Standards compliant HTML filter written in PHP\",\n    \"type\": \"library\",\n    \"keywords\": [\"html\"],\n    \"homepage\": \"http://htmlpurifier.org/\",\n    \"license\": \"LGPL-2.1-or-later\",\n    \"authors\": [\n        {\n            \"name\": \"Edward Z. Yang\",\n            \"email\": \"admin@htmlpurifier.org\",\n            \"homepage\": \"http://ezyang.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"~5.6.0 || ~7.0.0 || ~7.1.0 || ~7.2.0 || ~7.3.0 || ~7.4.0 || ~8.0.0 || ~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\"\n    },\n    \"require-dev\": {\n        \"cerdic/css-tidy\": \"^1.7 || ^2.0\",\n        \"simpletest/simpletest\": \"dev-master\"\n    },\n    \"autoload\": {\n        \"psr-0\": { \"HTMLPurifier\": \"library/\" },\n        \"files\": [\"library/HTMLPurifier.composer.php\"],\n        \"exclude-from-classmap\": [\n            \"/library/HTMLPurifier/Language/\"\n        ]\n    },\n    \"suggest\": {\n        \"cerdic/css-tidy\": \"If you want to use the filter 'Filter.ExtractStyleBlocks'.\",\n        \"ext-iconv\": \"Converts text to and from non-UTF-8 encodings\",\n        \"ext-bcmath\": \"Used for unit conversion and imagecrash protection\",\n        \"ext-tidy\": \"Used for pretty-printing HTML\"\n    },\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"repositories\": [\n        {\n            \"type\": \"vcs\",\n            \"url\": \"https://github.com/ezyang/simpletest.git\",\n            \"no-api\": true\n        }\n    ]\n}\n"
        },
        {
          "name": "configdoc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "maintenance",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.php",
          "type": "blob",
          "size": 1.6748046875,
          "content": "<?php\n\nset_time_limit(0);\n\nrequire_once 'PEAR/PackageFileManager2.php';\nrequire_once 'PEAR/PackageFileManager/File.php';\nPEAR::setErrorHandling(PEAR_ERROR_PRINT);\n$pkg = new PEAR_PackageFileManager2;\n\n$pkg->setOptions(\n    array(\n        'baseinstalldir' => '/',\n        'packagefile' => 'package.xml',\n        'packagedirectory' => realpath(dirname(__FILE__) . '/library'),\n        'filelistgenerator' => 'file',\n        'include' => array('*'),\n        'dir_roles' => array('/' => 'php'), // hack to put *.ser files in the right place\n        'ignore' => array(\n            'HTMLPurifier.standalone.php',\n            'HTMLPurifier.path.php',\n            '*.tar.gz',\n            '*.tgz',\n            'standalone/'\n        ),\n    )\n);\n\n$pkg->setPackage('HTMLPurifier');\n$pkg->setLicense('LGPL', 'http://www.gnu.org/licenses/lgpl.html');\n$pkg->setSummary('Standards-compliant HTML filter');\n$pkg->setDescription(\n    'HTML Purifier is an HTML filter that will remove all malicious code\n    (better known as XSS) with a thoroughly audited, secure yet permissive\n    whitelist and will also make sure your documents are standards\n    compliant.'\n);\n\n$pkg->addMaintainer('lead', 'ezyang', 'Edward Z. Yang', 'admin@htmlpurifier.org', 'yes');\n\n$version = trim(file_get_contents('VERSION'));\n$api_version = substr($version, 0, strrpos($version, '.'));\n\n$pkg->setChannel('htmlpurifier.org');\n$pkg->setAPIVersion($api_version);\n$pkg->setAPIStability('stable');\n$pkg->setReleaseVersion($version);\n$pkg->setReleaseStability('stable');\n\n$pkg->addRelease();\n\n$pkg->setPackageType('php');\n\n$pkg->setPhpDep('5.0.0');\n$pkg->setPearinstallerDep('1.4.3');\n\n$pkg->generateContents();\n\n$pkg->writePackageFile();\n\n// vim: et sw=4 sts=4\n"
        },
        {
          "name": "phpdoc.ini",
          "type": "blob",
          "size": 3.947265625,
          "content": ";; phpDocumentor parse configuration file\n;;\n;; This file is designed to cut down on repetitive typing on the command-line or web interface\n;; You can copy this file to create a number of configuration files that can be used with the\n;; command-line switch -c, as in phpdoc -c default.ini or phpdoc -c myini.ini.  The web\n;; interface will automatically generate a list of .ini files that can be used.\n;;\n;; default.ini is used to generate the online manual at http://www.phpdoc.org/docs\n;;\n;; ALL .ini files must be in the user subdirectory of phpDocumentor with an extension of .ini\n;;\n;; Copyright 2002, Greg Beaver <cellog@users.sourceforge.net>\n;;\n;; WARNING: do not change the name of any command-line parameters, phpDocumentor will ignore them\n\n[Parse Data]\n;; title of all the documentation\n;; legal values: any string\ntitle = HTML Purifier API Documentation\n\n;; parse files that start with a . like .bash_profile\n;; legal values: true, false\nhidden = false\n\n;; show elements marked @access private in documentation by setting this to on\n;; legal values: on, off\nparseprivate = off\n\n;; parse with javadoc-like description (first sentence is always the short description)\n;; legal values: on, off\njavadocdesc = on\n\n;; add any custom @tags separated by commas here\n;; legal values: any legal tagname separated by commas.\n;customtags = mytag1,mytag2\n\n;; This is only used by the XML:DocBook/peardoc2 converter\ndefaultcategoryname = Documentation\n\n;; what is the main package?\n;; legal values: alphanumeric string plus - and _\ndefaultpackagename = HTMLPurifier\n\n;; output any parsing information?  set to on for cron jobs\n;; legal values: on\n;quiet = on\n\n;; parse a PEAR-style repository.  Do not turn this on if your project does\n;; not have a parent directory named \"pear\"\n;; legal values: on/off\n;pear = on\n\n;; where should the documentation be written?\n;; legal values: a legal path\ntarget = docs/phpdoc\n\n;; Which files should be parsed out as special documentation files, such as README,\n;; INSTALL and CHANGELOG?  This overrides the default files found in\n;; phpDocumentor.ini (this file is not a user .ini file, but the global file)\nreadmeinstallchangelog = README, INSTALL, NEWS, WYSIWYG, SLOW, LICENSE, CREDITS\n\n;; limit output to the specified packages, even if others are parsed\n;; legal values: package names separated by commas\n;packageoutput = package1,package2\n\n;; comma-separated list of files to parse\n;; legal values: paths separated by commas\n;filename = /path/to/file1,/path/to/file2,fileincurrentdirectory\n\n;; comma-separated list of directories to parse\n;; legal values: directory paths separated by commas\n;directory = /path1,/path2,.,..,subdirectory\n;directory = /home/jeichorn/cvs/pear\ndirectory = .\n\n;; template base directory (the equivalent directory of <installdir>/phpDocumentor)\n;templatebase = /path/to/my/templates\n\n;; directory to find any example files in through @example and {@example} tags\n;examplesdir = /path/to/my/templates\n\n;; comma-separated list of files, directories or wildcards ? and * (any wildcard) to ignore\n;; legal values: any wildcard strings separated by commas\n;ignore = /path/to/ignore*,*list.php,myfile.php,subdirectory/\nignore = *tests*,*benchmarks*,*docs*,*test-settings.php,*configdoc*,*maintenance*,*smoketests*,*standalone*,*.svn*,*conf*\n\nsourcecode = on\n\n;; comma-separated list of Converters to use in outputformat:Convertername:templatedirectory format\n;; legal values: HTML:frames:default,HTML:frames:l0l33t,HTML:frames:phpdoc.de,HTML:frames:phphtmllib,\n;;               HTML:frames:earthli,\n;;               HTML:frames:DOM/default,HTML:frames:DOM/l0l33t,HTML:frames:DOM/phpdoc.de,\n;;               HTML:frames:DOM/phphtmllib,HTML:frames:DOM/earthli\n;;               HTML:Smarty:default,HTML:Smarty:PHP,HTML:Smarty:HandS\n;;               PDF:default:default,CHM:default:default,XML:DocBook/peardoc2:default\noutput=HTML:frames:default\n\n;; turn this option on if you want highlighted source code for every file\n;; legal values: on/off\nsourcecode = on\n\n; vim: et sw=4 sts=4\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "release.config.js",
          "type": "blob",
          "size": 0.68359375,
          "content": "module.exports = {\n  debug: true,\n  branch: 'master',\n  plugins: [\n    '@semantic-release/commit-analyzer',\n    '@semantic-release/release-notes-generator',\n    [\n      '@semantic-release/changelog',\n      {\n        'changelogFile': 'NEWS'\n      }\n    ],\n    [\n      '@semantic-release/exec',\n      {\n        'prepareCmd': 'php update-for-release ${nextRelease.version}'\n      }\n    ],\n    [\n      '@semantic-release/git',\n      {\n        'assets': [\n          'VERSION',\n          'NEWS',\n          'Doxyfile',\n          ['library/**/*', '!library/standalone/**/*', '!library/HTMLPurifier.standalone.php'],\n          'configdoc/**/*',\n        ],\n      }\n    ],\n    '@semantic-release/github'\n  ],\n}\n"
        },
        {
          "name": "smoketests",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-settings.sample.php",
          "type": "blob",
          "size": 1.9599609375,
          "content": "<?php\n\n// ATTENTION! DO NOT EDIT THIS FILE!\n// This file is necessary to run the unit tests and profiling scripts.\n// Please copy it to 'test-settings.php' and make the necessary edits.\n\n// Note: The only external library you *need* is SimpleTest; everything else\n//       is optional.\n\n// We've got a lot of tests, so we recommend turning the limit off.\nset_time_limit(0);\n\n// Turning off output buffering will prevent mysterious errors from core dumps.\n$data = @ob_get_clean();\nif ($data !== false && $data !== '') {\n    echo \"Output buffer contains data [\".urlencode($data).\"]\\n\";\n    exit;\n}\n\n// -----------------------------------------------------------------------------\n// OPTIONAL SETTINGS\n\n// Note on running PHPT:\n//      Vanilla PHPT from https://github.com/tswicegood/PHPT_Core should\n//      work fine on Linux w/o multitest.\n//\n//      To do multitest or Windows testing, you'll need some more\n//      patches at https://github.com/ezyang/PHPT_Core\n//\n//      I haven't tested the Windows setup in a while so I don't know if\n//      it still works.\n\n// Should PHPT tests be enabled?\n$GLOBALS['HTMLPurifierTest']['PHPT'] = false;\n\n// If PHPT isn't in your Path via PEAR, set that here:\n// set_include_path('/path/to/phpt/Core/src' . PATH_SEPARATOR . get_include_path());\n\n// For tests/multitest.php, which versions to test?\n$versions_to_test    = array();\n\n// Stable PHP binary to use when invoking maintenance scripts.\n$php = 'php';\n\n// For tests/multitest.php, what is the multi-version executable? It must\n// accept an extra parameter (version number) before all other arguments\n$phpv = false;\n\n// Should PEAR tests be run? If you've got a valid PEAR installation, set this\n// to true (or, if it's not in the include path, to its install directory).\n$GLOBALS['HTMLPurifierTest']['PEAR'] = false;\n\n// If PEAR is enabled, what PEAR tests should be run? (Note: you will\n// need to ensure these libraries are installed)\n$GLOBALS['HTMLPurifierTest']['Net_IDNA2'] = false;\n\n// vim: et sw=4 sts=4\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "update-for-release",
          "type": "blob",
          "size": 2.474609375,
          "content": "<?php\n\n// release script\n// PHP 5.0 only\n\nif (php_sapi_name() != 'cli') {\n    echo 'Release script cannot be called from web-browser.';\n    exit;\n}\n\nif (!isset($argv[1])) {\n    echo\n'php release.php [version]\n    HTML Purifier release script\n';\n    exit;\n}\n\n$version = trim($argv[1]);\n\n// Bump version numbers:\n\n// ...in VERSION\nfile_put_contents('VERSION', $version);\n\n$is_dev = strpos($version, 'dev') === false;\n\n// ...in Doxyfile\n$doxyfile_c = preg_replace(\n    '/(?<=PROJECT_NUMBER {9}= )[^\\s]+/m', // brittle\n    $version,\n    file_get_contents('Doxyfile'),\n    1, $c\n);\nif (!$c) {\n    echo 'Could not update Doxyfile, missing PROJECT_NUMBER.' . PHP_EOL;\n    exit;\n}\nfile_put_contents('Doxyfile', $doxyfile_c);\n\n// ...in HTMLPurifier.php\n$htmlpurifier_c = file_get_contents('library/HTMLPurifier.php');\n$htmlpurifier_c = preg_replace(\n    '/HTML Purifier .+? - /',\n    \"HTML Purifier $version - \",\n    $htmlpurifier_c,\n    1, $c\n);\nif (!$c) {\n    echo 'Could not update HTMLPurifier.php, missing HTML Purifier [version] header.' . PHP_EOL;\n    exit;\n}\n$htmlpurifier_c = preg_replace(\n    '/public \\$version = \\'.+?\\';/',\n    \"public \\$version = '$version';\",\n    $htmlpurifier_c,\n    1, $c\n);\nif (!$c) {\n    echo 'Could not update HTMLPurifier.php, missing public $version.' . PHP_EOL;\n    exit;\n}\n$htmlpurifier_c = preg_replace(\n    '/const VERSION = \\'.+?\\';/',\n    \"const VERSION = '$version';\",\n    $htmlpurifier_c,\n    1, $c\n);\nif (!$c) {\n    echo 'Could not update HTMLPurifier.php, missing const $version.' . PHP_EOL;\n    exit;\n}\nfile_put_contents('library/HTMLPurifier.php', $htmlpurifier_c);\n\n$config_c = file_get_contents('library/HTMLPurifier/Config.php');\n$config_c = preg_replace(\n    '/public \\$version = \\'.+?\\';/',\n    \"public \\$version = '$version';\",\n    $config_c,\n    1, $c\n);\nif (!$c) {\n    echo 'Could not update Config.php, missing public $version.' . PHP_EOL;\n    exit;\n}\nfile_put_contents('library/HTMLPurifier/Config.php', $config_c);\n\n$includes = file_get_contents('library/HTMLPurifier.includes.php');\n$includes = preg_replace(\n    '/@version .+?/',\n    \"@version $version\",\n    $includes,\n    1, $c\n);\nif (!$c) {\n    echo 'Could not update HTMLPurifier.includes.php, missing @version docblock.' . PHP_EOL;\n    exit;\n}\nfile_put_contents('HTMLPurifier.includes.php', $includes);\n\npassthru('maintenance/flush.sh');\n\nif ($is_dev) echo \"Review changes, and then commit with log 'Release $version.'\" . PHP_EOL;\nelse echo \"Numbers updated to dev, no other modifications necessary!\";\n\n// vim: et sw=4 sts=4\n"
        }
      ]
    }
  ]
}