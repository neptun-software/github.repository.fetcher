{
  "metadata": {
    "timestamp": 1736711934228,
    "page": 351,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "laravel/cashier-stripe",
      "stars": 2401,
      "defaultBranch": "15.x",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.21484375,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.404296875,
          "content": "* text=auto\n\n*.blade.php diff=html\n*.css diff=css\n*.html diff=html\n*.md diff=markdown\n*.php diff=php\n\n/.github export-ignore\n/art export-ignore\n/tests export-ignore\n.editorconfig export-ignore\n.gitattributes export-ignore\n.gitignore export-ignore\n.styleci.yml export-ignore\nCHANGELOG.md export-ignore\nphpstan.neon.dist export-ignore\nphpunit.xml.dist export-ignore\nRELEASE.md export-ignore\nUPGRADE.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0556640625,
          "content": "/vendor\ncomposer.lock\n/phpunit.xml\n.phpunit.result.cache\n"
        },
        {
          "name": ".styleci.yml",
          "type": "blob",
          "size": 0.041015625,
          "content": "php:\n  preset: laravel\njs: true\ncss: true\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 55.8671875,
          "content": "# Release Notes\n\n## [Unreleased](https://github.com/laravel/cashier/compare/v15.6.0...15.x)\n\n## [v15.6.0](https://github.com/laravel/cashier/compare/v15.5.1...v15.6.0) - 2024-12-10\n\n* Added Support for New Usage Based Billing by [@Bark-fa](https://github.com/Bark-fa) in https://github.com/laravel/cashier-stripe/pull/1727\n\n## [v15.5.1](https://github.com/laravel/cashier/compare/v15.5.0...v15.5.1) - 2024-11-26\n\n* [15.x] Supports PHP 8.4 by [@crynobone](https://github.com/crynobone) in https://github.com/laravel/cashier-stripe/pull/1724\n\n## [v15.5.0](https://github.com/laravel/cashier/compare/v15.4.3...v15.5.0) - 2024-11-12\n\n* Update logo to support dark/light theme by [@milewski](https://github.com/milewski) in https://github.com/laravel/cashier-stripe/pull/1717\n* Bump stripe/stripe-php to v16 by [@karkowg](https://github.com/karkowg) in https://github.com/laravel/cashier-stripe/pull/1721\n* Fix repeated word \"the\" in code comment by [@caendesilva](https://github.com/caendesilva) in https://github.com/laravel/cashier-stripe/pull/1723\n\n## [v15.4.3](https://github.com/laravel/cashier/compare/v15.4.2...v15.4.3) - 2024-09-03\n\n* [15.x] Prevent mass assignment issue by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1713\n\n## [v15.4.2](https://github.com/laravel/cashier/compare/v15.4.1...v15.4.2) - 2024-08-20\n\n* Add missing docblocks by [@u01jmg3](https://github.com/u01jmg3) in https://github.com/laravel/cashier-stripe/pull/1694\n* Fixes SQLite migration rollback by [@crynobone](https://github.com/crynobone) in https://github.com/laravel/cashier-stripe/pull/1703\n* [15.x] Catch missing payment intents by [@shatterproof](https://github.com/shatterproof) in https://github.com/laravel/cashier-stripe/pull/1704\n\n## [v15.4.1](https://github.com/laravel/cashier/compare/v15.4.0...v15.4.1) - 2024-07-09\n\n* [15.x] Remove limitation from checkoutCharge by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1690\n\n## [v15.4.0](https://github.com/laravel/cashier/compare/v15.3.2...v15.4.0) - 2024-07-02\n\n* [15.x] Indicate if invoice is paid by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1686\n\n## [v15.3.2](https://github.com/laravel/cashier/compare/v15.3.1...v15.3.2) - 2024-04-12\n\n* Replace unpkg with jsdelivr by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1669\n\n## [v15.3.1](https://github.com/laravel/cashier/compare/v15.3.0...v15.3.1) - 2024-03-26\n\n* [15.x] Make commands lazy by [@timacdonald](https://github.com/timacdonald) in https://github.com/laravel/cashier-stripe/pull/1667\n\n## [v15.3.0](https://github.com/laravel/cashier/compare/v15.2.2...v15.3.0) - 2024-03-05\n\n* [15.x] Fix anchorBillingCycle for subscription checkout by [@ybert](https://github.com/ybert) in https://github.com/laravel/cashier-stripe/pull/1659\n* [15.x] Better align items by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1662\n* [15.x] Create stripe customer if not exists or update/sync by [@arafatkn](https://github.com/arafatkn) in https://github.com/laravel/cashier-stripe/pull/1661\n\n## [v15.2.2](https://github.com/laravel/cashier/compare/v15.2.1...v15.2.2) - 2024-02-13\n\n* [15.x] Fix payment behavior not being passed by [@skeemer](https://github.com/skeemer) in https://github.com/laravel/cashier-stripe/pull/1649\n\n## [v15.2.1](https://github.com/laravel/cashier/compare/15.2.1...v15.2.1) - 2024-01-30\n\n* Carbon v3 by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1643\n\n## [15.2.1](https://github.com/laravel/cashier/compare/v15.2.0...15.2.1) - 2024-01-30\n\n* Carbon v3 by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1643\n\n## [v15.2.0](https://github.com/laravel/cashier/compare/v15.1.1...v15.2.0) - 2024-01-16\n\n* [15.x] Merge Develop by [@nunomaduro](https://github.com/nunomaduro) in https://github.com/laravel/cashier-stripe/pull/1635\n\n## [v15.1.1](https://github.com/laravel/cashier/compare/v15.1.0...v15.1.1) - 2024-01-12\n\n* [15.x] Fix cancelation handling by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1633\n\n## [v15.1.0](https://github.com/laravel/cashier/compare/v15.0.0...v15.1.0) - 2024-01-09\n\n* [15.x] Clear the generic trial upon subscription creation by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1628\n* [15.x] Fix unset 'return_url' for embedded UI without redirection by [@lowbits](https://github.com/lowbits) in https://github.com/laravel/cashier-stripe/pull/1631\n\n## [v15.0.0](https://github.com/laravel/cashier/compare/v14.14.0...v15.0.0) - 2023-12-22\n\n* [15.x] Always end trial when subscription is cancelled by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1465\n* [15.x] Remove isDeleted method by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1529\n* Added expand option to Subscription latestInvoice() by [@quantumwebco](https://github.com/quantumwebco) in https://github.com/laravel/cashier-stripe/pull/1549\n* [15.x] Rename receipt to invoice by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1609\n* [15.x] Stops using `loadMigrationsFrom` by [@nunomaduro](https://github.com/nunomaduro) in https://github.com/laravel/cashier-stripe/pull/1613\n* [15.x] Stripe API and SDK update by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1615\n* [15.x] Bump Laravel and PHP versions by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1616\n* [15.x] Fetch all payment methods by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1617\n* [15.x] Change \"name\" column to \"type\" by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1620\n* [14.x] Use container to resolve `StripeClient` by [@orkhanahmadov](https://github.com/orkhanahmadov) in https://github.com/laravel/cashier-stripe/pull/1624\n\n## [v14.14.0](https://github.com/laravel/cashier/compare/v14.13.1...v14.14.0) - 2023-11-21\n\n- Update PaymentMethod.php method return type by [@jwjenkin](https://github.com/jwjenkin) in https://github.com/laravel/cashier-stripe/pull/1601\n- [14.x] Allow creation of checkouts with ui_mode=embedded by [@delassiter](https://github.com/delassiter) in https://github.com/laravel/cashier-stripe/pull/1605\n\n## [v14.13.1](https://github.com/laravel/cashier/compare/v14.13.0...v14.13.1) - 2023-11-08\n\n- [14.x] Prevent confirm email when in Checkout by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1600\n- [14.x] Fix soft deleted customers by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1599\n\n## [v14.13.0](https://github.com/laravel/cashier/compare/v14.12.12...v14.13.0) - 2023-11-07\n\n- Add support for Payment cancelation by [@jonathanroy](https://github.com/jonathanroy) in https://github.com/laravel/cashier-stripe/pull/1596\n- Early return upcoming invoice by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1597\n\n## [v14.12.12](https://github.com/laravel/cashier/compare/v14.12.11...v14.12.12) - 2023-11-02\n\n- Better cleanup for subscription items by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1595\n\n## [v14.12.11](https://github.com/laravel/cashier/compare/v14.12.10...v14.12.11) - 2023-10-31\n\n- Remove unique index from items table by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1594\n\n## [v14.12.10](https://github.com/laravel/cashier/compare/v14.12.9...v14.12.10) - 2023-10-25\n\n- Fix Tax ID collection requires updating business name on the customer by [@stevebauman](https://github.com/stevebauman) in https://github.com/laravel/cashier-stripe/pull/1586\n\n## [v14.12.9](https://github.com/laravel/cashier/compare/v14.12.8...v14.12.9) - 2023-10-24\n\n- Log more info about invalid pm exception by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1582\n\n## [v14.12.8](https://github.com/laravel/cashier/compare/v14.12.7...v14.12.8) - 2023-10-03\n\n- [14.x] Fix array merge for checkout by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1579\n- [14.x] Fix default sync by [@driesvints](https://github.com/driesvints) in https://github.com/laravel/cashier-stripe/pull/1580\n\n## [v14.12.7](https://github.com/laravel/cashier/compare/v14.12.6...v14.12.7) - 2023-09-26\n\n- Add `Conditionable` trait to subscription builder by [@maartenpaauw](https://github.com/maartenpaauw) in https://github.com/laravel/cashier-stripe/pull/1573\n\n## [v14.12.6](https://github.com/laravel/cashier/compare/v14.12.5...v14.12.6) - 2023-09-08\n\n- Prevent Sync From Deleting Existing Metadata by [@toddstoker](https://github.com/toddstoker) in https://github.com/laravel/cashier-stripe/pull/1565\n\n## [v14.12.5](https://github.com/laravel/cashier/compare/14.12.4...v14.12.5) - 2023-09-05\n\n- Fix: Invoke `static` method statically by [@localheinz](https://github.com/localheinz) in https://github.com/laravel/cashier-stripe/pull/1557\n- Fix: Remove reference to `CASHIER_MODEL` enviromment variable by [@localheinz](https://github.com/localheinz) in https://github.com/laravel/cashier-stripe/pull/1563\n\n## [14.12.4](https://github.com/laravel/cashier/compare/v14.12.3...14.12.4) - 2023-07-11\n\n- Update ManagesCustomer to include optional metadata when creating or syncing a user by [@dbhynds](https://github.com/dbhynds) in https://github.com/laravel/cashier-stripe/pull/1543\n- Update ManagesCustomer.php > createOrGetStripeCustomer() > allow \"expand\" when retrieving a Customer by [@Ronan](https://github.com/Ronan)-Lenor in https://github.com/laravel/cashier-stripe/pull/1547\n- createSetupIntent add customer stripe_id option by [@clementmas](https://github.com/clementmas) in https://github.com/laravel/cashier-stripe/pull/1545\n\n## [v14.12.3](https://github.com/laravel/cashier/compare/v14.12.2...v14.12.3) - 2023-06-13\n\n- Fix bug with customer_update in checkout by @driesvints in https://github.com/laravel/cashier-stripe/pull/1538\n\n## [v14.12.2](https://github.com/laravel/cashier/compare/v14.12.1...v14.12.2) - 2023-05-24\n\n- Handle automatic payment method updates by @shatterproof in https://github.com/laravel/cashier-stripe/pull/1534\n\n## [v14.12.1](https://github.com/laravel/cashier/compare/v14.12.0...v14.12.1) - 2023-05-09\n\n- Fallback for empty pm_type object on fillPaymentMethodDetails by @shatterproof in https://github.com/laravel/cashier-stripe/pull/1531\n\n## [v14.12.0](https://github.com/laravel/cashier/compare/v14.11.0...v14.12.0) - 2023-04-18\n\n- Add ability to set a description on \"one-off\" charge checkouts by @AmrAb-05 in https://github.com/laravel/cashier-stripe/pull/1525\n\n## [v14.11.0](https://github.com/laravel/cashier/compare/v14.10.0...v14.11.0) - 2023-04-11\n\n- Add ability to ignore incomplete payments by @driesvints in https://github.com/laravel/cashier-stripe/pull/1524\n\n## [v14.10.0](https://github.com/laravel/cashier/compare/v14.9.0...v14.10.0) - 2023-04-04\n\n- Set payment confirm options by @driesvints in https://github.com/laravel/cashier-stripe/pull/1516\n\n## [v14.9.0](https://github.com/laravel/cashier/compare/v14.8.2...v14.9.0) - 2023-03-02\n\n- Provide findSetupIntent method by @andycowan in https://github.com/laravel/cashier-stripe/pull/1505\n- Fix deletion of subscription items in swap() by @glspdotnet in https://github.com/laravel/cashier-stripe/pull/1509\n\n## [v14.8.2](https://github.com/laravel/cashier/compare/v14.8.1...v14.8.2) - 2023-02-21\n\n- Fix invoice line items by @driesvints in https://github.com/laravel/cashier-stripe/pull/1503\n\n## [v14.8.1](https://github.com/laravel/cashier/compare/v14.8.0...v14.8.1) - 2023-02-14\n\n### Fixed\n\n- Fix webhook command by @driesvints in https://github.com/laravel/cashier-stripe/pull/1499\n\n## [v14.8.0](https://github.com/laravel/cashier/compare/v14.7.2...v14.8.0) - 2023-02-09\n\n### Added\n\n- Add SyncCustomerDetails job by @driesvints in https://github.com/laravel/cashier-stripe/pull/1498\n\n## [v14.7.2](https://github.com/laravel/cashier/compare/v14.7.1...v14.7.2) - 2023-02-03\n\n### Fixed\n\n- Return null if attribute isn't found by @driesvints in https://github.com/laravel/cashier-stripe/pull/1496\n\n## [v14.7.1](https://github.com/laravel/cashier/compare/v14.7.0...v14.7.1) - 2023-01-31\n\n### Fixed\n\n- Fix wrong foreignKey on SubscriptionItem by @zofe in https://github.com/laravel/cashier-stripe/pull/1494\n\n## [v14.7.0](https://github.com/laravel/cashier/compare/v14.6.0...v14.7.0) - 2023-01-10\n\n### Added\n\n- Laravel v10 Support by @driesvints in https://github.com/laravel/cashier-stripe/pull/1486\n\n## [v14.6.0](https://github.com/laravel/cashier/compare/v14.4.0...v14.6.0) - 2023-01-03\n\n### Changed\n\n- Adds types to database migrations and factories by @nunomaduro in https://github.com/laravel/cashier-stripe/pull/1472\n\n## [v14.5.0](https://github.com/laravel/cashier/compare/v14.4.0...v14.5.0) - 2022-12-06\n\n### Added\n\n- Cursor pagination for invoices by @driesvints in https://github.com/laravel/cashier-stripe/pull/1479\n\n## [v14.4.0](https://github.com/laravel/cashier/compare/v14.3.1...v14.4.0) - 2022-11-29\n\n### Changed\n\n- Update Stripe API version and Stripe PHP SDK v10 support by @driesvints in https://github.com/laravel/cashier-stripe/pull/1478\n\n## [v14.3.1](https://github.com/laravel/cashier/compare/v14.3.0...v14.3.1) - 2022-11-15\n\n### Changed\n\n- Modernize migrations by @driesvints in https://github.com/laravel/cashier-stripe/pull/1471\n\n## [v14.3.0](https://github.com/laravel/cashier/compare/v14.2.2...v14.3.0) - 2022-11-01\n\n### Added\n\n- Allow incomplete subscriptions as active by @driesvints in https://github.com/laravel/cashier-stripe/pull/1466\n\n### Changed\n\n- Refactor dates property by @driesvints in https://github.com/laravel/cashier-stripe/pull/1462\n- Pass pay options to pay method by @driesvints in https://github.com/laravel/cashier-stripe/pull/1464\n\n## [v14.2.2](https://github.com/laravel/cashier/compare/v14.2.1...v14.2.2) - 2022-10-25\n\n### Fixed\n\n- Fix undefined property id notice by @Lyrisbee in https://github.com/laravel/cashier-stripe/pull/1448\n- fix minor typo by @owainjones74 in https://github.com/laravel/cashier-stripe/pull/1450\n- Fix StripeObject values problem by @Lyrisbee in https://github.com/laravel/cashier-stripe/pull/1449\n\n## [v14.2.1](https://github.com/laravel/cashier/compare/v14.2.0...v14.2.1) - 2022-09-27\n\n### Fixed\n\n- Add fallback for null value in unitAmountExcludingTax method by @jayan-blutui in https://github.com/laravel/cashier-stripe/pull/1447\n\n## [v14.2.0](https://github.com/laravel/cashier/compare/v14.1.1...v14.2.0) - 2022-09-27\n\n### Added\n\n- Fresh receipt template by @driesvints in https://github.com/laravel/cashier-stripe/pull/1446\n- Allow guest checkout by @alexgaal & @driesvints in https://github.com/laravel/cashier-stripe/pull/1438 & https://github.com/laravel/cashier-stripe/pull/1439\n\n### Changed\n\n- Configurable Webhook Enabled Events by @yob-yob in https://github.com/laravel/cashier-stripe/pull/1435\n- Add generic trial scopes by @lioneaglesolutions in https://github.com/laravel/cashier-stripe/pull/1436\n- Add days until due to sends invoice by @driesvints in https://github.com/laravel/cashier-stripe/pull/1437\n\n### Fixed\n\n- Fix applied balance on invoices by @driesvints in https://github.com/laravel/cashier-stripe/pull/1445\n\n## [v14.1.1](https://github.com/laravel/cashier/compare/v14.1.0...v14.1.1) - 2022-09-06\n\n### Fixed\n\n- Fix subscription invoicing bug by @driesvints in https://github.com/laravel/cashier-stripe/pull/1434\n\n## [v14.1.0](https://github.com/laravel/cashier/compare/v14.0.0...v14.1.0) - 2022-08-30\n\n### Changed\n\n- Add invoice.payment_succeeded event to WebhookCommand by @driesvints in https://github.com/laravel/cashier-stripe/pull/1428\n\n### Fixed\n\n- Fix applied balance on receipts by @driesvints in https://github.com/laravel/cashier-stripe/pull/1429\n- Renders the invoice item dates on invoices when set by @nicko170 in https://github.com/laravel/cashier-stripe/pull/1432\n\n## [v14.0.0](https://github.com/laravel/cashier/compare/v13.16.0...v14.0.0) - 2022-08-23\n\n### Added\n\n- Sync preferred locales by @driesvints in https://github.com/laravel/cashier-stripe/pull/1408\n- Add new balance transaction methods by @driesvints in https://github.com/laravel/cashier-stripe/pull/1423\n\n### Changed\n\n- Cascade Stripe exceptions when invoicing by @driesvints in https://github.com/laravel/cashier-stripe/pull/1210\n- Make invoice data optional by @driesvints in https://github.com/laravel/cashier-stripe/pull/1217\n- Make dompdf optional by @driesvints in https://github.com/laravel/cashier-stripe/pull/1312\n- Manage Checkout PM from Dashboard by @driesvints in https://github.com/laravel/cashier-stripe/pull/1400\n- Improves console output by @nunomaduro in https://github.com/laravel/cashier-stripe/pull/1401\n- Update to new Stripe version by @driesvints in https://github.com/laravel/cashier-stripe/pull/1417\n- New subscription behavior by @driesvints in https://github.com/laravel/cashier-stripe/pull/1420\n\n### Removed\n\n- Drop PHP 7.3 support by @driesvints in https://github.com/laravel/cashier-stripe/pull/1186\n- Remove Checkout button by @driesvints in https://github.com/laravel/cashier-stripe/pull/1219\n- Drop PHP 7.4 and Laravel v8 support by @driesvints in https://github.com/laravel/cashier-stripe/pull/1353\n- Remove deprecated functionality by @driesvints in https://github.com/laravel/cashier-stripe/pull/1418\n- Drop MoneyPHP 3.x by @driesvints in https://github.com/laravel/cashier-stripe/pull/1416\n\n## [v13.16.0](https://github.com/laravel/cashier-stripe/compare/v13.15.1...v13.16.0) - 2022-08-30\n\n### Added\n\n- Add new balance transaction methods by @driesvints in https://github.com/laravel/cashier-stripe/pull/1423\n\n### Changed\n\n- Add invoice.payment_succeeded event to WebhookCommand by @driesvints in https://github.com/laravel/cashier-stripe/pull/1428\n\n### Fixed\n\n- Fix applied balance on receipts by @driesvints in https://github.com/laravel/cashier-stripe/pull/1429\n\n## [v13.15.1](https://github.com/laravel/cashier-stripe/compare/v13.15.0...v13.15.1) - 2022-08-16\n\n### Fixed\n\n- Fix Stripe key not found by @driesvints in https://github.com/laravel/cashier-stripe/pull/1421\n\n## [v13.15.0](https://github.com/laravel/cashier-stripe/compare/v13.14.0...v13.15.0) - 2022-08-09\n\n### Added\n\n- Allow Stripe SDK v9 by @driesvints in https://github.com/laravel/cashier-stripe/pull/1413\n\n### Fixed\n\n- Fix issue with overwriting behavior by @driesvints in https://github.com/laravel/cashier-stripe/pull/1410\n\n## [v13.14.0](https://github.com/laravel/cashier-stripe/compare/v13.13.0...v13.14.0) - 2022-08-02\n\n### Added\n\n- Create invoices separately by @driesvints in https://github.com/laravel/cashier-stripe/pull/1409\n\n### Fixed\n\n- Fix webhook command by @driesvints in https://github.com/laravel/cashier-stripe/pull/1407\n\n## [v13.13.0](https://github.com/laravel/cashier-stripe/compare/v13.12.0...v13.13.0) - 2022-07-13\n\n### Changed\n\n- Allow dompdf v2 by @carlalexander in https://github.com/laravel/cashier-stripe/pull/1393\n\n### Fixed\n\n- Fix receipt totals and balance by @driesvints in https://github.com/laravel/cashier-stripe/pull/1388\n\n## [v13.12.0](https://github.com/laravel/cashier-stripe/compare/v13.11.1...v13.12.0) - 2022-06-28\n\n### Changed\n\n- Update reference to Stripe SDK by @driesvints in https://github.com/laravel/cashier-stripe/pull/1383\n- Re-add support for Sources API by @driesvints in https://github.com/laravel/cashier-stripe/pull/1384\n\n## [v13.11.1](https://github.com/laravel/cashier-stripe/compare/v13.11.0...v13.11.1) - 2022-06-21\n\n### Fixed\n\n- Fixed undefined quantity notice by @Lyrisbee in https://github.com/laravel/cashier-stripe/pull/1377\n\n## [v13.11.0](https://github.com/laravel/cashier-stripe/compare/v13.10.1...v13.11.0) - 2022-05-17\n\n### Added\n\n- Add new hasTrialExpired methods by @driesvints in https://github.com/laravel/cashier-stripe/pull/1366\n\n### Changed\n\n- Allow Stripe SDK v8 by @ankurk91 in https://github.com/laravel/cashier-stripe/pull/1365\n\n### Fixed\n\n- Fix reference to billable by @driesvints in https://github.com/laravel/cashier-stripe/pull/1363\n\n## [v13.10.1](https://github.com/laravel/cashier-stripe/compare/v13.10.0...v13.10.1) - 2022-05-05\n\n### Security\n\n- Bump Dompdf by @driesvints in https://github.com/laravel/cashier-stripe/pull/1360\n\n## [v13.10.0](https://github.com/laravel/cashier-stripe/compare/v13.9.0...v13.10.0) - 2022-05-03\n\n### Added\n\n- Discount improvements by @driesvints in https://github.com/laravel/cashier-stripe/pull/1354\n\n### Fixed\n\n- Fix deprecation with Carbon on receipts by @driesvints in https://github.com/laravel/cashier-stripe/pull/1356\n\n## [v13.9.0](https://github.com/laravel/cashier-stripe/compare/v13.8.6...v13.9.0) - 2022-04-27\n\n### Added\n\n- Add pay method by @mozex in https://github.com/laravel/cashier-stripe/pull/1345\n\n### Changed\n\n- Allow options with formatAmount by @driesvints in https://github.com/laravel/cashier-stripe/pull/1348\n\n## [v13.8.6](https://github.com/laravel/cashier-stripe/compare/v13.8.5...v13.8.6) - 2022-04-12\n\n### Fixed\n\n- Fix issue with zero tax on invoice by @driesvints in https://github.com/laravel/cashier-stripe/pull/1343\n\n## [v13.8.5](https://github.com/laravel/cashier-stripe/compare/v13.8.4...v13.8.5) - 2022-04-05\n\n### Changed\n\n- Pass locale to custom format amount by @driesvints in https://github.com/laravel/cashier-stripe/pull/1340\n\n## [v13.8.4](https://github.com/laravel/cashier-stripe/compare/v13.8.3...v13.8.4) - 2022-03-15\n\n### Changed\n\n- Make use of anonymous classes by @mmachatschek in https://github.com/laravel/cashier-stripe/pull/1329\n- Allow normal and metered prices in builder by @driesvints in https://github.com/laravel/cashier-stripe/pull/1336\n\n## [v13.8.3](https://github.com/laravel/cashier-stripe/compare/v13.8.2...v13.8.3) - 2022-02-22\n\n### Changed\n\n- Fix rawDiscountFor method by @driesvints in https://github.com/laravel/cashier-stripe/pull/1325\n- Fix swapping metered price of subscription item by @pietrantonio91 in https://github.com/laravel/cashier-stripe/pull/1328\n\n## [v13.8.2](https://github.com/laravel/cashier-stripe/compare/v13.8.1...v13.8.2) - 2022-02-08\n\n### Fixed\n\n- Fallback to null quantity for metered price when swapping a subscription ([#1319](https://github.com/laravel/cashier-stripe/pull/1319))\n\n## [v13.8.1 (2022-02-01)](https://github.com/laravel/cashier/compare/v13.8.0...v13.8.1)\n\n### Fixed\n\n- Prevent duplicate subscription creation ([#1308](https://github.com/laravel/cashier-stripe/pull/1308))\n\n## [v13.8.0 (2022-01-25)](https://github.com/laravel/cashier/compare/v13.7.0...v13.8.0)\n\n### Added\n\n- Implement invoice renderer ([#1304](https://github.com/laravel/cashier-stripe/pull/1304))\n\n## [v13.7.0 (2022-01-12)](https://github.com/laravel/cashier-stripe/compare/v13.6.1...v13.7.0)\n\n### Added\n\n- Add deletePaymentMethod ([#1298](https://github.com/laravel/cashier-stripe/pull/1298))\n\n### Changed\n\n- Laravel 9 Support ([#1299](https://github.com/laravel/cashier-stripe/pull/1299))\n\n## [v13.6.1 (2021-11-23)](https://github.com/laravel/cashier-stripe/compare/v13.6.0...v13.6.1)\n\n### Changed\n\n- Simplify cancelation check ([#1283](https://github.com/laravel/cashier-stripe/pull/1283))\n- Rename cancelled to canceled ([#1284](https://github.com/laravel/cashier-stripe/pull/1284))\n- Allow latest moneyphp version ([#1280](https://github.com/laravel/cashier-stripe/pull/1280), [#1286](https://github.com/laravel/cashier-stripe/pull/1286))\n\n### Fixed\n\n- Fix factory canceled state ([#1282](https://github.com/laravel/cashier-stripe/pull/1282))\n\n## [v13.6.0 (2021-11-09)](https://github.com/laravel/cashier-stripe/compare/v13.5.6...v13.6.0)\n\n### Added\n\n- Add `createAndSendInvoice` method ([#1276](https://github.com/laravel/cashier-stripe/pull/1276))\n\n### Changed\n\n- Allow the base url for the Stripe API to be customised ([#1273](https://github.com/laravel/cashier-stripe/pull/1273))\n\n## [v13.5.6 (2021-10-26)](https://github.com/laravel/cashier-stripe/compare/v13.5.5...v13.5.6)\n\n### Fixed\n\n- Fix enabling auto collecting in checkout ([#1270](https://github.com/laravel/cashier-stripe/pull/1270))\n\n## [v13.5.5 (2021-10-19)](https://github.com/laravel/cashier-stripe/compare/v13.5.4...v13.5.5)\n\n### Fixed\n\n- Fix confirming payments on the payment page ([#1268](https://github.com/laravel/cashier-stripe/pull/1268))\n\n## [v13.5.4 (2021-10-12)](https://github.com/laravel/cashier-stripe/compare/v13.5.3...v13.5.4)\n\n### Fixed\n\n- Handle Stripe Object lock timeout ([#1259](https://github.com/laravel/cashier-stripe/pull/1259))\n\n## [v13.5.3 (2021-09-05)](https://github.com/laravel/cashier-stripe/compare/v13.5.2...v13.5.3)\n\n### Fixed\n\n- Fix a stripe notice with SubscriptionBuilder and metered prices ([#1261](https://github.com/laravel/cashier-stripe/pull/1261))\n\n## [v13.5.2 (2021-09-28)](https://github.com/laravel/cashier-stripe/compare/v13.5.1...v13.5.2)\n\n### Changed\n\n- Use default name for subscription factory ([#1250](https://github.com/laravel/cashier-stripe/pull/1250))\n- PHP 8.1 compatibility ([#1251](https://github.com/laravel/cashier-stripe/pull/1251))\n\n### Fixed\n\n- Fallback to null quantity for metered price ([#1255](https://github.com/laravel/cashier-stripe/pull/1255))\n\n## [v13.5.1 (2021-09-01)](https://github.com/laravel/cashier-stripe/compare/v13.5.0...v13.5.1)\n\n### Fixed\n\n- Fix setting name on subscription ([5d00c21](https://github.com/laravel/cashier-stripe/commit/5d00c21d3b9d8d54d77845dcc07406b7e72d3be0))\n\n## [v13.5.0 (2021-08-31)](https://github.com/laravel/cashier-stripe/compare/v13.4.5...v13.5.0)\n\n### Added\n\n- Add invoices methods to subscription ([#1245](https://github.com/laravel/cashier-stripe/pull/1245))\n\n### Fixed\n\n- Fix webhook order issue ([#1243](https://github.com/laravel/cashier-stripe/pull/1243))\n- Send data when upcoming invoice is refreshed ([#1244](https://github.com/laravel/cashier-stripe/pull/1244))\n- Update customer details when tax id is collected ([#1246](https://github.com/laravel/cashier-stripe/pull/1246))\n\n## [v13.4.5 (2021-08-23)](https://github.com/laravel/cashier-stripe/compare/v13.4.4...v13.4.5)\n\n### Fixed\n\n- Fix quantity filling on subscriptions ([#1238](https://github.com/laravel/cashier-stripe/pull/1238))\n- Fix unreachable status value ([#1240](https://github.com/laravel/cashier-stripe/pull/1240))\n\n## [v13.4.4 (2021-08-17)](https://github.com/laravel/cashier-stripe/compare/v13.4.3...v13.4.4)\n\n### Changed\n\n- Add support for inline price data ([#1235](https://github.com/laravel/cashier-stripe/pull/1235))\n\n## [v13.4.3 (2021-08-10)](https://github.com/laravel/cashier-stripe/compare/v13.4.2...v13.4.3)\n\n### Changed\n\n- Allow promo codes on subscription updates ([#1230](https://github.com/laravel/cashier-stripe/pull/1230))\n\n### Fixed\n\n- Fix `asStripeCustomerBalanceTransaction` ([#1234](https://github.com/laravel/cashier-stripe/pull/1234))\n\n## [v13.4.2 (2021-08-03)](https://github.com/laravel/cashier-stripe/compare/v13.4.1...v13.4.2)\n\n### Fixed\n\n- Fix issue with `requires_action` ([#1226](https://github.com/laravel/cashier-stripe/pull/1226))\n- Fix async issue with webhooks ([#1227](https://github.com/laravel/cashier-stripe/pull/1227))\n\n## [v13.4.1 (2021-07-13)](https://github.com/laravel/cashier-stripe/compare/v13.4.0...v13.4.1)\n\n### Changed\n\n- Implement server side Checkout redirect ([#1218](https://github.com/laravel/cashier-stripe/pull/1218))\n\n## [v13.4.0 (2021-07-06)](https://github.com/laravel/cashier-stripe/compare/v13.3.0...v13.4.0)\n\n### Added\n\n- Implement customer balances ([#1216](https://github.com/laravel/cashier-stripe/pull/1216))\n\n## [v13.3.0 (2021-06-29)](https://github.com/laravel/cashier-stripe/compare/v13.2.1...v13.3.0)\n\n### Added\n\n- Add `invoicePrice` and `tabPrice` methods ([#1213](https://github.com/laravel/cashier-stripe/pull/1213))\n\n## [v13.2.1 (2021-06-24)](https://github.com/laravel/cashier-stripe/compare/v13.2.0...v13.2.1)\n\n### Fixed\n\n- Fix collecting tax ids ([#1209](https://github.com/laravel/cashier-stripe/pull/1209))\n\n## [v13.2.0 (2021-06-22)](https://github.com/laravel/cashier-stripe/compare/v13.1.0...v13.2.0)\n\n### Added\n\n- Implement new `calculateTaxes` call ([#1198](https://github.com/laravel/cashier-stripe/pull/1198))\n- Implement webhook command ([#1202](https://github.com/laravel/cashier-stripe/pull/1202), [1d9cce8](https://github.com/laravel/cashier-stripe/commit/1d9cce83d7f39014fe2957edadfb0cc7604563fb))\n\n### Changed\n\n- Prevent tax calculation for one-off charges ([#1206](https://github.com/laravel/cashier-stripe/pull/1206))\n\n### Fixed\n\n- Use correct method visibility ([#1200](https://github.com/laravel/cashier-stripe/pull/1200))\n\n## [v13.1.0 (2021-06-15)](https://github.com/laravel/cashier-stripe/compare/v13.0.0...v13.1.0)\n\n### Added\n\n- Implement support for Stripe Tax ([#1190](https://github.com/laravel/cashier-stripe/pull/1190))\n- Collect Tax IDs in Checkout ([#1191](https://github.com/laravel/cashier-stripe/pull/1191))\n\n### Fixed\n\n- Fix adding metered plan to subscription ([#1189](https://github.com/laravel/cashier-stripe/pull/1189))\n\n## [v13.0.0 (2021-06-08)](https://github.com/laravel/cashier-stripe/compare/v12.15.0...v13.0.0)\n\n### Added\n\n- Support more payment method types ([#1074](https://github.com/laravel/cashier-stripe/pull/1074))\n- Cashier Stripe Factories ([#1096](https://github.com/laravel/cashier-stripe/pull/1096))\n- Multiple discounts on receipts ([#1147](https://github.com/laravel/cashier-stripe/pull/1147))\n- Preview upcoming invoice ([#1146](https://github.com/laravel/cashier-stripe/pull/1146))\n- Add new metered price methods ([#1177](https://github.com/laravel/cashier-stripe/pull/1177))\n- Allow customers to be synced with Stripe ([#1178](https://github.com/laravel/cashier-stripe/pull/1178), [#1183](https://github.com/laravel/cashier-stripe/pull/1183))\n- Add `stripe_product` column to `subscriptions_items` table ([#1185](https://github.com/laravel/cashier-stripe/pull/1185))\n\n### Changed\n\n- Rename plans to prices ([#1166](https://github.com/laravel/cashier-stripe/pull/1166))\n- Stripe SDK refactor ([#1169](https://github.com/laravel/cashier-stripe/pull/1169))\n- Update stripe api version ([#1001](https://github.com/laravel/cashier-stripe/pull/1001))\n- Make plans optional for newSubscription ([#1066](https://github.com/laravel/cashier-stripe/pull/1066))\n- Drop PHP 7.2 support ([#1065](https://github.com/laravel/cashier-stripe/pull/1065))\n- Drop Laravel 6 & 7 support ([#1064](https://github.com/laravel/cashier-stripe/pull/1064))\n- Refactor payment exceptions ([#1095](https://github.com/laravel/cashier-stripe/pull/1095))\n- Refactor model config option ([#1100](https://github.com/laravel/cashier-stripe/pull/1100))\n- Billing portal arguments ([#1104](https://github.com/laravel/cashier-stripe/pull/1104))\n- Refactor receipts with more data from Stripe ([#1136](https://github.com/laravel/cashier-stripe/pull/1136))\n- Add array types ([#1152](https://github.com/laravel/cashier-stripe/pull/1152))\n- Throw payment exception for quantity methods ([#1155](https://github.com/laravel/cashier-stripe/pull/1155))\n- Throw payment exceptions on item swap ([#1157](https://github.com/laravel/cashier-stripe/pull/1157))\n- Payment page updates ([#1120](https://github.com/laravel/cashier-stripe/pull/1120))\n\n### Fixed\n\n- Fix trialEndsAt more closely represents onTrial ([#1129](https://github.com/laravel/cashier-stripe/pull/1129))\n\n### Removed\n\n- Remove legacy sources support ([#1077](https://github.com/laravel/cashier-stripe/pull/1077))\n\n## [v12.15.0 (2021-06-22)](https://github.com/laravel/cashier-stripe/compare/v12.14.1...v12.15.0)\n\n### Added\n\n- Implement webhook command ([#1202](https://github.com/laravel/cashier-stripe/pull/1202))\n\n## [v12.14.1 (2021-06-01)](https://github.com/laravel/cashier-stripe/compare/v12.14.0...v12.14.1)\n\n### Fixed\n\n- Fix broken `unit_amount` with `tab` ([9246063](https://github.com/laravel/cashier-stripe/commit/9246063882a09c29521e61a86e84f34cb86098c1))\n\n## [v12.14.0 (2021-05-25)](https://github.com/laravel/cashier-stripe/compare/v12.13.1...v12.14.0)\n\n### Added\n\n- Support prorations while extending trials ([#1151](https://github.com/laravel/cashier-stripe/pull/1151))\n- Add extra methods to invoice object ([#1167](https://github.com/laravel/cashier-stripe/pull/1167))\n\n### Fixed\n\n- Add extra 10 seconds of trial time for checkout session ([#1160](https://github.com/laravel/cashier-stripe/pull/1160))\n- Fix adding invoice item with quantities ([#1161](https://github.com/laravel/cashier-stripe/pull/1161))\n- Fix coupons with Stripe Checkout sessions ([#1165](https://github.com/laravel/cashier-stripe/pull/1165))\n- Fix checkout owner ([7bbfe23](https://github.com/laravel/cashier-stripe/commit/7bbfe234c5f1657eee1223f9aee73b03bdef9894))\n\n## [v12.13.1 (2021-05-11)](https://github.com/laravel/cashier-stripe/compare/v12.13.0...v12.13.1)\n\n### Fixed\n\n- Fix discount calculation ([#1144](https://github.com/laravel/cashier-stripe/pull/1144))\n\n## [v12.13.0 (2021-04-27)](https://github.com/laravel/cashier-stripe/compare/v12.12.0...v12.13.0)\n\n### Added\n\n- Add methods for managing TaxIDs ([#1137](https://github.com/laravel/cashier-stripe/pull/1137))\n\n### Fixed\n\n- Fix receipt comments ([#1131](https://github.com/laravel/cashier-stripe/pull/1131))\n\n## [v12.12.0 (2021-04-13)](https://github.com/laravel/cashier-stripe/compare/v12.11.0...v12.12.0)\n\n### Added\n\n- Implement object serialization ([#1116](https://github.com/laravel/cashier-stripe/pull/1116))\n\n### Changed\n\n- Replace `symfony/intl` dependency ([#1114](https://github.com/laravel/cashier-stripe/pull/1114))\n- Extract creating subscription to a separate method ([#1124](https://github.com/laravel/cashier-stripe/pull/1124))\n\n### Fixed\n\n- Fix `latest_invoice` retrieval ([#1115](https://github.com/laravel/cashier-stripe/pull/1115))\n- Fix coupon label on receipts ([#1118](https://github.com/laravel/cashier-stripe/pull/1118))\n\n## [v12.11.0 (2021-03-30)](https://github.com/laravel/cashier-stripe/compare/v12.10.0...v12.11.0)\n\n### Added\n\n- Implement `cancelAt` method ([#1106](https://github.com/laravel/cashier-stripe/pull/1106))\n\n## [v12.10.0 (2021-03-16)](https://github.com/laravel/cashier-stripe/compare/v12.9.3...v12.10.0)\n\n### Added\n\n- Added new payment status helper methods ([#1068](https://github.com/laravel/cashier-stripe/pull/1068))\n- Add capture method ([#1099](https://github.com/laravel/cashier-stripe/pull/1099))\n\n### Changed\n\n- Update description on receipt ([#1098](https://github.com/laravel/cashier-stripe/pull/1098))\n- Update payment page ([#1094](https://github.com/laravel/cashier-stripe/pull/1094))\n\n## [v12.9.3 (2021-03-09)](https://github.com/laravel/cashier-stripe/compare/v12.9.2...v12.9.3)\n\n### Changed\n\n- Use DejaVu Sans for receipts ([#1083](https://github.com/laravel/cashier-stripe/pull/1083))\n\n### Fixed\n\n- Subscription Update Webhook bugfix ([#1085](https://github.com/laravel/cashier-stripe/pull/1085), [3184afc](https://github.com/laravel/cashier-stripe/commit/3184afce07b65986d7aaa6f570b9ac44f502303c))\n\n## [v12.9.2 (2021-03-05)](https://github.com/laravel/cashier-stripe/compare/v12.9.1...v12.9.2)\n\n### Fixed\n\n- Fix missing method on WebhookController ([#1080](https://github.com/laravel/cashier-stripe/pull/1080))\n- Allow relative urls for redirect ([#1082](https://github.com/laravel/cashier-stripe/pull/1082))\n\n## [v12.9.1 (2021-02-23)](https://github.com/laravel/cashier-stripe/compare/v12.9.0...v12.9.1)\n\n### Changed\n\n- Allow model swapping ([#1067](https://github.com/laravel/cashier-stripe/pull/1067))\n\n### Fixed\n\n- Fix styles overwriting checkout button when class is set ([#1070](https://github.com/laravel/cashier-stripe/pull/1070))\n\n## [v12.9.0 (2021-02-19)](https://github.com/laravel/cashier-stripe/compare/v12.8.1...v12.9.0)\n\n### Added\n\n- Add `endTrial` method ([#1062](https://github.com/laravel/cashier-stripe/pull/1062))\n\n### Fixed\n\n- Fix removing tax rates ([d803ae5](https://github.com/laravel/cashier-stripe/commit/d803ae57ae20ee1e38ff8bf47484dfada7eef79d))\n\n## [v12.8.1 (2021-02-16)](https://github.com/laravel/cashier-stripe/compare/v12.8.0...v12.8.1)\n\n### Fixed\n\n- Fix removing tax rates ([#1059](https://github.com/laravel/cashier-stripe/pull/1059))\n\n## [v12.8.0 (2021-02-09)](https://github.com/laravel/cashier-stripe/compare/v12.7.1...v12.8.0)\n\n### Added\n\n- Metered billing ([#1048](https://github.com/laravel/cashier-stripe/pull/1048))\n\n### Changed\n\n- Allow Stripe dashboard subscriptions ([#1058](https://github.com/laravel/cashier-stripe/pull/1058))\n\n### Fixed\n\n- Fix return type for invoice line items ([#1053](https://github.com/laravel/cashier-stripe/pull/1053))\n\n## [v12.7.1 (2021-02-04)](https://github.com/laravel/cashier-stripe/compare/v12.7.0...v12.7.1)\n\n### Fixed\n\n- Fix tax rates for subscription checkouts ([#1050](https://github.com/laravel/cashier-stripe/pull/1050))\n\n## [v12.7.0 (2021-02-02)](https://github.com/laravel/cashier-stripe/compare/v12.6.3...v12.7.0)\n\n### Added\n\n- Stripe Checkout Support ([#1007](https://github.com/laravel/cashier-stripe/pull/1007))\n\n## [v12.6.3 (2021-01-19)](https://github.com/laravel/cashier-stripe/compare/v12.6.2...v12.6.3)\n\n### Fixed\n\n- Fix image support in PDF invoices ([#1045](https://github.com/laravel/cashier-stripe/pull/1045), [bb7d17e8](https://github.com/laravel/cashier-stripe/commit/bb7d17e8707700e3f71cb30ef3c60dc68071bb8f))\n\n## [v12.6.2 (2021-01-05)](https://github.com/laravel/cashier-stripe/compare/v12.6.1...v12.6.2)\n\n### Changed\n\n- Bump dompdf to v0.8.4 ([8a4b495](https://github.com/laravel/cashier-stripe/commit/8a4b495b5feffd9359e20c11e8ac9febc2d3995a))\n- Allow dompdf v1.0 ([4949af9](https://github.com/laravel/cashier-stripe/commit/4949af98b8e890fb062c134177f178cb5f375752))\n\n## [v12.6.1 (2020-12-08)](https://github.com/laravel/cashier-stripe/compare/v12.6.0...v12.6.1)\n\n### Fixed\n\n- Fix proration behaviour being forced when syncing tax rates ([#1028](https://github.com/laravel/cashier-stripe/pull/1028))\n\n## [v12.6.0 (2020-11-24)](https://github.com/laravel/cashier-stripe/compare/v12.5.0...v12.6.0)\n\n### Added\n\n- Add `withPromotionCode` method ([#1032](https://github.com/laravel/cashier-stripe/pull/1032))\n\n### Changed\n\n- Refactor duplicated code ([#1029](https://github.com/laravel/cashier-stripe/pull/1029))\n\n## [v12.5.0 (2020-11-03)](https://github.com/laravel/cashier-stripe/compare/v12.4.2...v12.5.0)\n\n### Added\n\n- PHP 8 Support ([#1020](https://github.com/laravel/cashier-stripe/pull/1020))\n\n## [v12.4.2 (2020-10-20)](https://github.com/laravel/cashier-stripe/compare/v12.4.1...v12.4.2)\n\n### Fixed\n\n- Fix trial ends at check ([#1015](https://github.com/laravel/cashier-stripe/pull/1015))\n\n## [v12.4.1 (2020-10-06)](https://github.com/laravel/cashier-stripe/compare/v12.4.0...v12.4.1)\n\n### Fixed\n\n- Fix n+1 problem with subscription retrieval ([#1009](https://github.com/laravel/cashier-stripe/pull/1009))\n\n## [v12.4.0 (2020-09-29)](https://github.com/laravel/cashier-stripe/compare/v12.3.1...v12.4.0)\n\n### Added\n\n- Implement `trialEndsAt` ([#1000](https://github.com/laravel/cashier-stripe/pull/1000))\n\n### Changed\n\n- Simplify subscription method ([#1003](https://github.com/laravel/cashier-stripe/pull/1003))\n\n### Fixed\n\n- Fix quantity preserving ([#999](https://github.com/laravel/cashier-stripe/pull/999))\n- Fix Models namespace for Laravel 8 ([9024107](https://github.com/laravel/cashier-stripe/commit/9024107f51bcdd69607395dc5606fdcd35498f85))\n\n## [v12.3.1 (2020-09-01)](https://github.com/laravel/cashier-stripe/compare/v12.3.0...v12.3.1)\n\n### Fixed\n\n- Fix double payment method ([#987](https://github.com/laravel/cashier-stripe/pull/987))\n\n## [v12.3.0 (2020-08-25)](https://github.com/laravel/cashier-stripe/compare/v12.2.0...v12.3.0)\n\n### Added\n\n- Support Laravel 8 ([#985](https://github.com/laravel/cashier-stripe/pull/985))\n\n### Changed\n\n- Stripe SDK minimum version is now `^7.39` ([#981](https://github.com/laravel/cashier-stripe/pull/981))\n\n### Fixed\n\n- Fix url checking for invalid urls ([#984](https://github.com/laravel/cashier-stripe/pull/984))\n\n## [v12.2.0 (2020-07-21)](https://github.com/laravel/cashier-stripe/compare/v12.1.0...v12.2.0)\n\n### Added\n\n- Apply prorate and invoice_now for cancelNow ([#975](https://github.com/laravel/cashier-stripe/pull/975))\n\n## [v12.1.0 (2020-06-30)](https://github.com/laravel/cashier-stripe/compare/v12.0.1...v12.1.0)\n\n### Added\n\n- Add support for Stripe's Customer Portal ([#966](https://github.com/laravel/cashier-stripe/pull/966))\n\n## [v12.0.1 (2020-06-16)](https://github.com/laravel/cashier-stripe/compare/v12.0.0...v12.0.1)\n\n### Fixed\n\n- Fix validating payment intent ([#959](https://github.com/laravel/cashier-stripe/pull/959))\n\n## [v12.0.0 (2020-06-09)](https://github.com/laravel/cashier-stripe/compare/v11.3.1...v12.0.0)\n\n### Changed\n\n- Implement new proration and pending updates ([#949](https://github.com/laravel/cashier-stripe/pull/949))\n\n## [v11.3.1 (2020-10-31)](https://github.com/laravel/cashier-stripe/compare/v11.3.0...v11.3.1)\n\n### Fixed\n\n- Fail url checking when url is invalid ([#1021](https://github.com/laravel/cashier-stripe/pull/1021))\n\n## [v11.3.0 (2020-05-26)](https://github.com/laravel/cashier-stripe/compare/v11.2.4...v11.3.0)\n\n### Added\n\n- Add convenience methods to update stripe objects ([#943](https://github.com/laravel/cashier-stripe/pull/943))\n\n### Fixed\n\n- Send invoice when charging automatically ([#942](https://github.com/laravel/cashier-stripe/pull/942))\n- Remove unnecessary if statement on receipt ([#946](https://github.com/laravel/cashier-stripe/pull/946))\n\n## [v11.2.4 (2020-05-08)](https://github.com/laravel/cashier-stripe/compare/v11.2.3...v11.2.4)\n\n### Fixed\n\n- Fix undefined redirect error ([0fc4c6e](https://github.com/laravel/cashier-stripe/commit/0fc4c6e7b3b44ea05cb7803820a87d11ddb29baa))\n\n## [v11.2.3 (2020-05-05)](https://github.com/laravel/cashier-stripe/compare/v11.2.2...v11.2.3)\n\n### Security\n\n- Protect against host mismatch ([#930](https://github.com/laravel/cashier-stripe/pull/930))\n\n## [v11.2.2 (2020-04-28)](https://github.com/laravel/cashier-stripe/compare/v11.2.1...v11.2.2)\n\n### Fixed\n\n- Fix add and remove plan ([#926](https://github.com/laravel/cashier-stripe/pull/926))\n- Fix quantity prorating ([#924](https://github.com/laravel/cashier-stripe/pull/924))\n- Fix multiplan subscription swapping ([#925](https://github.com/laravel/cashier-stripe/pull/925))\n\n## [v11.2.1 (2020-04-21)](https://github.com/laravel/cashier-stripe/compare/v11.2.0...v11.2.1)\n\n### Fixed\n\n- Fix quantity methods ([#919](https://github.com/laravel/cashier-stripe/pull/919))\n\n## [v11.2.0 (2020-04-16)](https://github.com/laravel/cashier-stripe/compare/v11.1.0...v11.2.0)\n\n### Changed\n\n- Re-add tax percentage ([#916](https://github.com/laravel/cashier-stripe/pull/916))\n\n### Fixed\n\n- Fix syncing of tax rates ([0489030](https://github.com/laravel/cashier-stripe/commit/0489030c50c0f5443abe37849c73935a34699387))\n- Remove null assignment ([8520443](https://github.com/laravel/cashier-stripe/commit/85204430cbc1681d776b50ca42d5b9194e8c14d7))\n\n## [v11.1.0 (2020-04-14)](https://github.com/laravel/cashier-stripe/compare/v11.0.0...v11.1.0)\n\n### Added\n\n- Multiplan swapping ([#915](https://github.com/laravel/cashier-stripe/pull/915))\n\n## [v11.0.0 (2020-04-07)](https://github.com/laravel/cashier-stripe/compare/v10.7.1...v11.0.0)\n\n### Added\n\n- Multiplan subscriptions ([#900](https://github.com/laravel/cashier-stripe/pull/900))\n- Tax Rates ([#830](https://github.com/laravel/cashier-stripe/pull/830))\n- Add new has payment method ([#838](https://github.com/laravel/cashier-stripe/pull/838))\n\n### Changed\n\n- Update stripe api version ([#905](https://github.com/laravel/cashier-stripe/pull/905))\n- Require PHP 7.2 ([f0f8cd1](https://github.com/laravel/cashier-stripe/commit/f0f8cd1c58751e98ad1d9387b37bf7cfe9883c4a))\n- Dropped Laravel 5.8 support ([b6256a2](https://github.com/laravel/cashier-stripe/commit/b6256a2a2e486478a26043cb2926dc744dc0a42a))\n- Allow for subscription options ([#868](https://github.com/laravel/cashier-stripe/pull/868), [#901](https://github.com/laravel/cashier-stripe/pull/901))\n- Use proper invoice number ([#878](https://github.com/laravel/cashier-stripe/pull/878))\n- Loosen exception throwing ([#882](https://github.com/laravel/cashier-stripe/pull/882))\n- Rename some exceptions ([#881](https://github.com/laravel/cashier-stripe/pull/881))\n- Allow for custom filename with downloadInvoice method ([#889](https://github.com/laravel/cashier-stripe/pull/889))\n- Split `Billable` trait into multiple concerns ([#898](https://github.com/laravel/cashier-stripe/pull/898))\n\n## [v10.7.1 (2020-03-24)](https://github.com/laravel/cashier-stripe/compare/v10.7.0...v10.7.1)\n\n### Fixed\n\n- Send along status for payment page ([#896](https://github.com/laravel/cashier-stripe/pull/896))\n\n## [v10.7.0 (2020-03-03)](https://github.com/laravel/cashier-stripe/compare/v10.6.0...v10.7.0)\n\n### Added\n\n- Add getters for owner instances to objects ([#877](https://github.com/laravel/cashier-stripe/pull/877))\n- Implement extending trials ([#884](https://github.com/laravel/cashier-stripe/pull/884))\n- Allow for custom email address attribute ([#887](https://github.com/laravel/cashier-stripe/pull/887))\n- Re-enable proration ([#886](https://github.com/laravel/cashier-stripe/pull/886))\n\n### Changed\n\n- Add @throws declaration to methods on Billable which can throw Payment exceptions ([#872](https://github.com/laravel/cashier-stripe/pull/872))\n- Update payment page with new JS method ([#879](https://github.com/laravel/cashier-stripe/pull/879))\n\n## [v10.6.0 (2020-02-18)](https://github.com/laravel/cashier-stripe/compare/v10.5.3...v10.6.0)\n\n### Added\n\n- Add `findBillable` method ([#869](https://github.com/laravel/cashier-stripe/pull/869))\n\n### Fixed\n\n- Prevent `createAsStripeCustomer` when `stripe_id` is set ([#871](https://github.com/laravel/cashier-stripe/pull/871))\n\n## [v10.5.3 (2020-01-14)](https://github.com/laravel/cashier-stripe/compare/v10.5.2...v10.5.3)\n\n### Fixed\n\n- Fix `findInvoiceOrFail` behavior ([#853](https://github.com/laravel/cashier-stripe/pull/853))\n\n## [v10.5.2 (2020-01-07)](https://github.com/laravel/cashier-stripe/compare/v10.5.1...v10.5.2)\n\n### Changed\n\n- Assert customer exists before retrieving ([#834](https://github.com/laravel/cashier-stripe/pull/834))\n- Simplify refund method ([#837](https://github.com/laravel/cashier-stripe/pull/837))\n\n### Fixed\n\n- Fix typo in exception message ([#846](https://github.com/laravel/cashier-stripe/pull/846))\n- Fix overriding notification subject translation ([59faaf3](https://github.com/laravel/cashier-stripe/commit/59faaf3d6163de95fd977511121bcee695fb6bbe))\n\n## [v10.5.1 (2019-11-26)](https://github.com/laravel/cashier-stripe/compare/v10.5.0...v10.5.1)\n\n### Added\n\n- Symfony 5 support ([#822](https://github.com/laravel/cashier-stripe/pull/822))\n\n## [v10.5.0 (2019-11-12)](https://github.com/laravel/cashier-stripe/compare/v10.4.0...v10.5.0)\n\n### Added\n\n- Webhook events ([#810](https://github.com/laravel/cashier-stripe/pull/810))\n\n### Fixed\n\n- Add missing `@throws` tags ([#813](https://github.com/laravel/cashier-stripe/pull/813))\n- Properly return `null` for find methods ([#817](https://github.com/laravel/cashier-stripe/pull/817))\n\n## [v10.4.0 (2019-10-29)](https://github.com/laravel/cashier-stripe/compare/v10.3.0...v10.4.0)\n\n### Added\n\n- Add findPaymentMethod method ([#801](https://github.com/laravel/cashier-stripe/pull/801))\n- Allow to set past due as active ([#802](https://github.com/laravel/cashier-stripe/pull/802))\n\n## [v10.3.0 (2019-10-01)](https://github.com/laravel/cashier-stripe/compare/v10.2.1...v10.3.0)\n\n### Added\n\n- Configure Stripe logger ([#790](https://github.com/laravel/cashier-stripe/pull/790), [4a53b46](https://github.com/laravel/cashier-stripe/commit/4a53b4620ea5a082f3d6e69d881a971889e8c3eb))\n\n### Changed\n\n- Add language line for full name placeholder ([#782](https://github.com/laravel/cashier-stripe/pull/782))\n- Update Stripe SDK to v7 ([#784](https://github.com/laravel/cashier-stripe/pull/784))\n- Refactor handling of invalid webhook signatures ([#791](https://github.com/laravel/cashier-stripe/pull/791))\n- Remove config repository dependency from webhook middleware ([#793](https://github.com/laravel/cashier-stripe/pull/793))\n\n### Fixed\n\n- Remove extra sign off from `ConfirmPayment` notification ([#779](https://github.com/laravel/cashier-stripe/pull/779))\n\n## [v10.2.1 (2019-09-10)](https://github.com/laravel/cashier-stripe/compare/v10.2.0...v10.2.1)\n\n### Fixed\n\n- Ensure SVG icons are visible even with a long success or error message ([#772](https://github.com/laravel/cashier-stripe/pull/772))\n\n## [v10.2.0 (2019-09-03)](https://github.com/laravel/cashier-stripe/compare/v10.1.1...v10.2.0)\n\n### Added\n\n- Add ability to ignore cashier routes ([#763](https://github.com/laravel/cashier-stripe/pull/763))\n\n### Fixed\n\n- Only mount card element if payment has not succeeded or been canceled ([#765](https://github.com/laravel/cashier-stripe/pull/765))\n- Set off_session parameter to true when creating a new subscription ([#764](https://github.com/laravel/cashier-stripe/pull/764))\n\n## [v10.1.1 (2019-08-27)](https://github.com/laravel/cashier-stripe/compare/v10.1.0...v10.1.1)\n\n### Fixed\n\n- Remove collation from migrations ([#761](https://github.com/laravel/cashier-stripe/pull/761))\n\n## [v10.1.0 (2019-08-20)](https://github.com/laravel/cashier-stripe/compare/v10.0.0...v10.1.0)\n\n### Added\n\n- Multiple stripe accounts ([#754](https://github.com/laravel/cashier-stripe/pull/754))\n- Set Stripe library info ([#756](https://github.com/laravel/cashier-stripe/pull/756))\n- Paper size can be set in config file ([#752](https://github.com/laravel/cashier-stripe/pull/752), [cb837d1](https://github.com/laravel/cashier-stripe/commit/cb837d13f570353b85b27bd381e8669d1fee3491))\n\n### Changed\n\n- Update Stripe API version to `2019-08-14` ([#749](https://github.com/laravel/cashier-stripe/pull/749))\n\n### Fixed\n\n- `syncStripeStatus` trying to update incorrect status column ([#748](https://github.com/laravel/cashier-stripe/pull/748))\n\n## [v10.0.0 (2019-08-13)](https://github.com/laravel/cashier-stripe/compare/v10.0.0-beta.2...v10.0.0)\n\n### Added\n\n- Allow hasIncompletePayment() to check other subscriptions than “default” ([#733](https://github.com/laravel/cashier-stripe/pull/733))\n- Add indexes to those columns used to lookup data in the database ([#739](https://github.com/laravel/cashier-stripe/pull/739))\n\n### Fixed\n\n- Fixed a label with an incorrect for attribute ([#732](https://github.com/laravel/cashier-stripe/pull/732))\n\n## [v10.0.0-beta.2 (2019-08-02)](https://github.com/laravel/cashier-stripe/compare/v10.0.0-beta...v10.0.0-beta.2)\n\n### Added\n\n- Add latestPayment method on Subscription ([#705](https://github.com/laravel/cashier-stripe/pull/705))\n- Allow custom filename for invoice download ([#723](https://github.com/laravel/cashier-stripe/pull/723))\n\n### Changed\n\n- Improve stripe statuses ([#707](https://github.com/laravel/cashier-stripe/pull/707))\n- Refactor active subscription state ([#712](https://github.com/laravel/cashier-stripe/pull/712))\n- Return invoice object when applicable ([#711](https://github.com/laravel/cashier-stripe/pull/711))\n- Refactor webhook responses ([#722](https://github.com/laravel/cashier-stripe/pull/722))\n- Refactor confirm payment mail to notification ([#727](https://github.com/laravel/cashier-stripe/pull/727))\n\n### Fixed\n\n- Fix createSetupIntent ([#704](https://github.com/laravel/cashier-stripe/pull/704))\n- Fix subscription invoicing ([#710](https://github.com/laravel/cashier-stripe/pull/710))\n- Fix `null` return for `latestPayment` method ([#730](https://github.com/laravel/cashier-stripe/pull/730))\n\n### Removed\n\n- Remove unused `$customer` parameter on `updateQuantity` method ([#729](https://github.com/laravel/cashier-stripe/pull/729))\n\n## [v10.0.0-beta (2019-07-17)](https://github.com/laravel/cashier-stripe/compare/v9.3.5...v10.0.0-beta)\n\nCashier 10.0 is a major release. Please review [the upgrade guide](UPGRADE.md) thoroughly.\n\n## [v9.3.5 (2019-07-30)](https://github.com/laravel/cashier-stripe/compare/v9.3.4...v9.3.5)\n\n### Changed\n\n- Remove old 5.9 version constraints ([c7664fc](https://github.com/laravel/cashier-stripe/commit/c7664fc90d0310d6fa3a52bec45e94868bff995d))\n\n### Fixed\n\n- Don't try and find a user when stripeId is null ([#721](https://github.com/laravel/cashier-stripe/pull/721))\n\n## [v9.3.4 (2019-07-29)](https://github.com/laravel/cashier-stripe/compare/v9.3.3...v9.3.4)\n\n### Changed\n\n- Updated version constraints for Laravel 6.0 ([4a4c5c2](https://github.com/laravel/cashier-stripe/commit/4a4c5c226bb98aa0726f57bb5970115d3eaab377))\n\n## [v9.3.3 (2019-06-14)](https://github.com/laravel/cashier-stripe/compare/v9.3.2...v9.3.3)\n\n### Fixed\n\n- Fix hasStartingBalance and subtotal on `Invoice` ([#684](https://github.com/laravel/cashier-stripe/pull/684))\n\n## [v9.3.2 (2019-06-04)](https://github.com/laravel/cashier-stripe/compare/v9.3.1...v9.3.2)\n\n### Changed\n\n- `VerifyWebhookSignature` is no longer `final` ([260de04](https://github.com/laravel/cashier-stripe/commit/260de0458fc76708f90eb955ddddef0ee6d68798))\n- Remove strict type check for `trialUntil()` ([#678](https://github.com/laravel/cashier-stripe/pull/678))\n\n## [v9.3.1 (2019-05-07)](https://github.com/laravel/cashier-stripe/compare/v9.3.0...v9.3.1)\n\n### Fixed\n\n- Fixing `defaultCard()` exception when user is not a Stripe customer ([#660](https://github.com/laravel/cashier-stripe/pull/660))\n\n## [v9.3.0 (2019-04-16)](https://github.com/laravel/cashier-stripe/compare/v9.2.1...v9.3.0)\n\n### Added\n\n- Able to update a Stripe customer ([#634](https://github.com/laravel/cashier-stripe/pull/634))\n\n### Fixed\n\n- Handle incomplete subscriptions upon creation ([#631](https://github.com/laravel/cashier-stripe/pull/631))\n- Handle card failure in plan swap ([#641](https://github.com/laravel/cashier-stripe/pull/641))\n\n## [v9.2.1 (2019-03-19)](https://github.com/laravel/cashier-stripe/compare/v9.2.0...v9.2.1)\n\n### Fixed\n\n- Use new created property on invoice ([4714ba4](https://github.com/laravel/cashier-stripe/commit/4714ba4ad909092a61bfe2d0704b3fce6070ed5b))\n\n## [v9.2.0 (2019-03-12)](https://github.com/laravel/cashier-stripe/compare/v9.1.0...v9.2.0)\n\n### Added\n\n- Add subscription state scopes ([#609](https://github.com/laravel/cashier-stripe/pull/609))\n\n### Changed\n\n- Test latest Stripe API version ([#611](https://github.com/laravel/cashier-stripe/pull/611))\n\n## [v9.1.0 (2019-02-12)](https://github.com/laravel/cashier-stripe/compare/v9.0.1...v9.1.0)\n\n### Added\n\n- Laravel 5.8 support ([291f4b2](https://github.com/laravel/cashier-stripe/commit/291f4b217ddbbd8a641072d8476fb11805b9801f))\n\n## [v9.0.1 (2019-02-03)](https://github.com/laravel/cashier-stripe/compare/v9.0.0...v9.0.1)\n\n### Added\n\n- Allow Carbon 2 installs ([a3b9d36](https://github.com/laravel/cashier-stripe/commit/a3b9d3688e21d3d9d3ae72ef58db585c80d96fa3))\n\n### Changed\n\n- Test against latest Stripe API version ([#603](https://github.com/laravel/cashier-stripe/pull/603))\n\n### Fixed\n\n- Correct PHP Doc @return tag ([#601](https://github.com/laravel/cashier-stripe/pull/601))\n\n## [v9.0.0 (2018-12-17)](https://github.com/laravel/cashier-stripe/compare/v8.0.1...v9.0.0)\n\n### Changed\n\n- Removed support for PHP 7.0 ([#595](https://github.com/laravel/cashier-stripe/pull/595))\n- Require Laravel 5.7 as minimum version ([#595](https://github.com/laravel/cashier-stripe/pull/595))\n- Extract `updateCard` from `createAsStripeCustomer` method ([#588](https://github.com/laravel/cashier-stripe/pull/588))\n- Remove `CASHIER_ENV` and event checks and encourage usage of `VerifyWebhookSignature` middleware ([#591](https://github.com/laravel/cashier-stripe/pull/591))\n- The `invoice` method now accepts an `$options` param ([#598](https://github.com/laravel/cashier-stripe/pull/598))\n- The `invoiceFor` method now accepts an `$invoiceOptions` param ([#598](https://github.com/laravel/cashier-stripe/pull/598))\n\n### Fixed\n\n- Fixed some DocBlocks ([#594](https://github.com/laravel/cashier-stripe/pull/594))\n- Fixed a bug where the `swap` and `incrementAndInvoice` methods on the `Subscription` model would sometimes invoice other pending invoice items ([#598](https://github.com/laravel/cashier-stripe/pull/598))\n\n## Version 2.0.4\n\n- Allow user to pass paramaters when fetching invoices.\n- Added a method to get the current subscription period's end date.\n- If a webhook endpoint is not defined for a given hook, an empty 200 response will be returned.\n\n## Version 2.0.3\n\n- Added space for extra / VAT information in receipts.\n- Implemented missing method on web hook controller.\n\n## Version 2.0.2\n\n- Fixed how credit cards are updated.\n\n## Version 2.0.1\n\n- Renamed WebhookController's failed payment method to handleInvoicePaymentFailed.\n- Added ability to webhook controller to automatically route all webhooks to appropriately named methods of they area available.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0498046875,
          "content": "The MIT License (MIT)\n\nCopyright (c) Taylor Otwell\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.810546875,
          "content": "<p align=\"center\"><img width=\"355\" height=\"62\" src=\"/art/logo.svg\" alt=\"Logo Laravel Cashier Stripe\"></p>\n\n<p align=\"center\">\n<a href=\"https://github.com/laravel/cashier/actions\"><img src=\"https://github.com/laravel/cashier/workflows/tests/badge.svg\" alt=\"Build Status\"></a>\n<a href=\"https://packagist.org/packages/laravel/cashier\"><img src=\"https://img.shields.io/packagist/dt/laravel/cashier\" alt=\"Total Downloads\"></a>\n<a href=\"https://packagist.org/packages/laravel/cashier\"><img src=\"https://img.shields.io/packagist/v/laravel/cashier\" alt=\"Latest Stable Version\"></a>\n<a href=\"https://packagist.org/packages/laravel/cashier\"><img src=\"https://img.shields.io/packagist/l/laravel/cashier\" alt=\"License\"></a>\n</p>\n\n## Introduction\n\nLaravel Cashier provides an expressive, fluent interface to [Stripe's](https://stripe.com) subscription billing services. It handles almost all of the boilerplate subscription billing code you are dreading writing. In addition to basic subscription management, Cashier can handle coupons, swapping subscription, subscription \"quantities\", cancellation grace periods, and even generate invoice PDFs.\n\n## Official Documentation\n\nDocumentation for Cashier can be found on the [Laravel website](https://laravel.com/docs/billing).\n\n## Contributing\n\nThank you for considering contributing to Cashier! You can read the contribution guide [here](.github/CONTRIBUTING.md).\n\n## Code of Conduct\n\nIn order to ensure that the Laravel community is welcoming to all, please review and abide by the [Code of Conduct](https://laravel.com/docs/contributions#code-of-conduct).\n\n## Security Vulnerabilities\n\nPlease review [our security policy](https://github.com/laravel/cashier/security/policy) on how to report security vulnerabilities.\n\n## License\n\nLaravel Cashier is open-sourced software licensed under the [MIT license](LICENSE.md).\n"
        },
        {
          "name": "RELEASE.md",
          "type": "blob",
          "size": 0.17578125,
          "content": "# Release Instructions\n\n1. Update the `VERSION` constant in [`Cashier.php`](./src/Cashier.php) and commit it\n2. Create a new GitHub release for this version with the release notes\n"
        },
        {
          "name": "UPGRADE.md",
          "type": "blob",
          "size": 51.1494140625,
          "content": "# Upgrade Guide\n\n## Upgrading To 15.0 From 14.x\n\n### Minimum Versions\n\nThe following required dependency versions have been updated:\n\n- The minimum PHP version is now v8.1\n- The minimum Laravel version is now v10.0\n\n### Stripe SDK Version\n\nPR: https://github.com/laravel/cashier-stripe/pull/1615\n\nThe Stripe SDK version is now fixed at v13.x.\n\n### Stripe API Version\n\nPR: https://github.com/laravel/cashier-stripe/pull/1615\n\nThe default Stripe API version for Cashier 15 is `2023-10-16`. If this is the latest Stripe API version when you upgrade to this Cashier version, then we recommend you also upgrade your Stripe API version settings [in your Stripe dashboard](https://dashboard.stripe.com/developers) to this version after deploying the Cashier upgrade. If this is no longer the latest Stripe API version, we recommend you do not modify your Stripe API version settings.\n\nIf you use the Stripe PHP SDK directly, make sure to properly test your integration after updating.\n\n#### Upgrading Your Webhook\n\nYou should ensure your webhook operates on the same API version as Cashier. To do so, you may use the `cashier:webhook` command from your production environment to create a new webhook that matches Cashier's Stripe API version:\n\n```bash\nphp artisan cashier:webhook --disabled\n```\n\nThis will create a new webhook [in your Stripe dashboard](https://dashboard.stripe.com/webhooks) with the same Stripe API version as Cashier. The webhook will be immediately disabled so it doesn't interfere with your existing production application until you are ready to enable it. By default, the webhook will be created using the `APP_URL` environment variable to determine the proper URL for your application. If you need to use a different URL, you can use the `--url` flag when invoking the command:\n\n```bash\nphp artisan cashier:webhook --disabled --url \"http://example.com/stripe/webhook\"\n```\n\nYou may use the following upgrade checklist to properly enable the new webhook:\n\n1. If you have webhook signature verification enabled, disable it on production by temporarily removing the `STRIPE_WEBHOOK_SECRET` environment variable.\n2. Add any extra Stripe events your application requires to the new webhook in your Stripe dashboard.\n3. Disable the old webhook in your Stripe dashboard.\n4. Enable the new webhook in your Stripe dashboard.\n5. Re-enable the new webhook secret by re-adding the `STRIPE_WEBHOOK_SECRET` environment variable in production with the secret from the new webhook.\n6. Remove the old webhook in your Stripe dashboard.\n\nAfter following this process, your new webhook will be active and ready to receive events.\n\n### Publishing Migrations\n\nCashier 15.0 no longer automatically loads migrations from its own migrations directory. Instead, you should run the following command to publish Cashier's migrations to your application:\n\n```bash\nphp artisan vendor:publish --tag=cashier-migrations\n```\n\nBecause of this change, the `Cashier::ignoreMigrations` method has been removed.\n\n### Renamed \"Name\" Column To \"Type\"\n\nPR: https://github.com/laravel/cashier-stripe/pull/1620\n\nTo better indicate the purpose of this column, we've renamed the `name` column on the `subscriptions` table to `type`. The purpose of this change is to resolve confusion surrouding the `name` column as many users believed it needed to be a customer-facing, user friendly \"name\", when in reality the column is mainly used to differentiate the different \"types\" of subscriptions your application may offer and is only used internally by Cashier. You should define the following schema change in a migration when upgrading:\n\n```php\nSchema::table('subscriptions', function (Blueprint $table) {\n    $table->renameColumn('name', 'type');\n});\n```\n\n### Rename Receipt To Invoice\n\nPR: https://github.com/laravel/cashier-stripe/pull/1609\n\nThe `receipt.blade.php` view was renamed to `invoice.blade.php`. If you exported Cashier's views you should rename this view manually. This view is typically located in `resources/views/vendor/laravel/cashier-stripe`.\n\n### Fetch All Payment Methods\n\nPR: https://github.com/laravel/cashier-stripe/pull/1617\n\nRetrieving payment methods is no longer limited to a single payment method type. Instead, by default, payment method related methods will now fetch all attached methods regardless of their type. However, to maintain the previous behavior of fetching card payment methods, you may provide the payment method type to the `hasPaymentMethod`, `paymentMethods`, and `deletePaymentMethods` methods:\n\n```php\n---$billable->hasPaymentMethod();\n---$billable->paymentMethods();\n---$billable->deletePaymentMethods();\n\n+++$billable->hasPaymentMethod('card');\n+++$billable->paymentMethods('card');\n+++$billable->deletePaymentMethods('card');\n```\n\n### Always End Subscription Trial When Canceling\n\nPR: https://github.com/laravel/cashier-stripe/pull/1465\n\nPreviously, when a subscription was canceled, any lingering trial on the subscription did not end. In Cashier v15, the trial for a subscription is always ended when the subscription is canceled.\n\n### `isDeleted` Method On Invoice Removed\n\nPR: https://github.com/laravel/cashier-stripe/pull/1529\n\nThe `deleted` status on invoices no longer exists and therefore its corresponding method has been removed.\n\n## Upgrading To 14.12.11 From 14.12.10\n\n### Remove Unique Index From Items Table\n\nPR: https://github.com/laravel/cashier-stripe/pull/1594\n\nThe unique constraint on the `subscription_items` table was converted to a regular index. You can use the migration below to adjust this index on your table:\n\n```php\npublic function up()\n{\n    Schema::table('subscription_items', function (Blueprint $table) {\n        $table->dropUnique(['subscription_id', 'stripe_price']);\n        $table->index(['subscription_id', 'stripe_price']);\n    });\n}\n```\n\n## Upgrading To 14.12.2 From 14.12\n\n### Webhook Added\n\nPR: https://github.com/laravel/cashier-stripe/pull/1534\n\n[Your Stripe webhook](https://dashboard.stripe.com/webhooks) should be updated to include `payment_method.automatically_updated` as one of the events sent to your application. This will ensure that user payment method information stays in sync between Cashier and Stripe when the information is automatically updated by the card issuer.\n\n## Upgrading To 14.4 From 14.3\n\n### Stripe API Version\n\nPR: https://github.com/laravel/cashier-stripe/pull/1478\n\nThe default Stripe API version for Cashier 14.4 is `2022-11-15`. If this is the latest Stripe API version when you upgrade to this Cashier version, then we recommend you also upgrade your Stripe API version settings [in your Stripe dashboard](https://dashboard.stripe.com/developers) to this version after deploying the Cashier upgrade. If this is no longer the latest Stripe API version, we recommend you do not modify your Stripe API version settings.\n\nIf you use the Stripe PHP SDK directly, make sure to properly test your integration after updating.\n\n#### Upgrading Your Webhook\n\nYou should ensure your webhook operates on the same API version as Cashier. To do so, you may use the `cashier:webhook` command from your production environment to create a new webhook that matches Cashier's Stripe API version:\n\n```bash\nphp artisan cashier:webhook --disabled\n```\n\nThis will create a new webhook [in your Stripe dashboard](https://dashboard.stripe.com/webhooks) with the same Stripe API version as Cashier. The webhook will be immediately disabled so it doesn't interfere with your existing production application until you are ready to enable it. By default, the webhook will be created using the `APP_URL` environment variable to determine the proper URL for your application. If you need to use a different URL, you can use the `--url` flag when invoking the command:\n\n```bash\nphp artisan cashier:webhook --disabled --url \"http://example.com/stripe/webhook\"\n```\n\nYou may use the following upgrade checklist to properly enable the new webhook:\n\n1. If you have webhook signature verification enabled, disable it on production by temporarily removing the `STRIPE_WEBHOOK_SECRET` environment variable.\n2. Add any extra Stripe events your application requires to the new webhook in your Stripe dashboard.\n3. Disable the old webhook in your Stripe dashboard.\n4. Enable the new webhook in your Stripe dashboard.\n5. Re-enable the new webhook secret by re-adding the `STRIPE_WEBHOOK_SECRET` environment variable in production with the secret from the new webhook.\n6. Remove the old webhook in your Stripe dashboard.\n\nAfter following this process, your new webhook will be active and ready to receive events.\n\n## Upgrading To 14.0 From 13.x\n\nWhen upgrading to a new major version, it's always a good idea to make sure your published configuration file is up to date with [the latest version of the configuration file in Cashier itself](/config/cashier.php).\n\n### Minimum Versions\n\nThe following required dependency versions have been updated:\n\n- The minimum PHP version is now v8.0\n- The minimum Laravel version is now v9.0\n- The minimum MoneyPHP version is now v4.0\n\n### Stripe API Version\n\nPR: https://github.com/laravel/cashier-stripe/pull/1417\n\nThe default Stripe API version for Cashier 14.x is `2022-08-01`. If this is the latest Stripe API version at the time that you're upgrading to this Cashier version then it's also recommended that you upgrade your own Stripe API version settings [in your Stripe dashboard](https://dashboard.stripe.com/developers) to this version after deploying the Cashier upgrade. If this is no longer the latest Stripe API version, we recommend you do not modify your Stripe API version settings.\n\nIf you use the Stripe PHP SDK directly, make sure to properly test your integration after updating.\n\n#### Upgrading Your Webhook\n\nYou should ensure your webhook operates on the same API version as Cashier. To do so, you may use the `cashier:webhook` command from your production environment to create a new webhook that matches Cashier's Stripe API version:\n\n```bash\nphp artisan cashier:webhook --disabled\n```\n\nThis will create a new webhook with the same Stripe API version as Cashier [in your Stripe dashboard](https://dashboard.stripe.com/webhooks). The webhook will be immediately disabled so it doesn't interfere with your existing production application until you are ready to enable it. By default, the webhook will be created using the `APP_URL` environment variable to determine the proper URL for your application. If you need to use a different URL, you can use the `--url` flag when invoking the command:\n\n```bash\nphp artisan cashier:webhook --disabled --url \"http://example.com/stripe/webhook\"\n```\n\nYou may use the following upgrade checklist to properly enable the new webhook:\n\n1. If you have webhook signature verification enabled, disable it on production by temporarily removing the `STRIPE_WEBHOOK_SECRET` environment variable.\n2. Add any extra Stripe events your application requires to the new webhook in your Stripe dashboard.\n3. Disable the old webhook in your Stripe dashboard.\n4. Enable the new webhook in your Stripe dashboard.\n5. Re-enable the new webhook secret by re-adding the `STRIPE_WEBHOOK_SECRET` environment variable in production with the secret from the new webhook.\n6. Remove the old webhook in your Stripe dashboard.\n\nAfter following this process, your new webhook will be active and ready to receive events.\n\n### Optional Dompdf Dependency\n\nPR: https://github.com/laravel/cashier-stripe/pull/1312\n\nDompdf is now an optional dependency. If you were using Cashier to generate and download invoice receipts (most applications), you should require this Composer dependency:\n\n```php\ncomposer require dompdf/dompdf\n```\n\n### New Subscription Behavior\n\nPR: https://github.com/laravel/cashier-stripe/pull/1420\n\nBeginning with Cashier 14, the new default `payment_behavior` value when starting new subscriptions and performing subscription updates is `default_incomplete` [as recommended by Stripe](https://stripe.com/docs/billing/subscriptions/overview#how-payments-work-subscriptions).\n\nIf you were specifically relying on the previously `allow_incomplete` default behavior, you should call the `allowPaymentFailures()` method before creating or updating subscriptions:\n\n```php\n// New subscriptions...\n$request->user()->newSubscription(\n    'default', 'price_monthly'\n)->allowPaymentFailures()->create($request->paymentMethodId);\n\n// Subscription changes...\n$user->subscription('default')\n    ->allowPaymentFailures()\n    ->swap('price_yearly');\n```\n\n### Cascading Invoice Exceptions\n\nPR: https://github.com/laravel/cashier-stripe/pull/1210\n\nIn previous Cashier versions, when using any of the invoicing methods (`invoice`, `invoiceFor`, `invoicePrice`), Stripe exceptions were caught internally and these methods would return `false`. In Cashier 14, these exceptions will bubble up to the application and should be handled by the application itself. `CardException`'s are still caught internally in order to trigger `IncompletePayment` exceptions.\n\n### Removed Checkout Button\n\nPR: https://github.com/laravel/cashier-stripe/pull/1219\n\nThe checkout button previously included with Cashier has been removed. Instead, you should use the checkout redirect from a controller:\n\n```php\nuse Illuminate\\Http\\Request;\n \nRoute::get('/product-checkout', function (Request $request) {\n    return $request->user()->checkout('price_tshirt');\n});\n```\n\n### Dashboard Payment Methods For Checkout\n\nPR: https://github.com/laravel/cashier-stripe/pull/1400\n\nPreviously, Cashier would set cards as the default payment methods when using Checkout. This has now been changed so that you can [manage your payment methods from your Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods). If you want to restore the previous behavior, you should  explicitly pass the payment methods you want to use via the `payment_method_types` option:\n\n```\n$request->user()->checkout('price_tshirt', [\n    'payment_method_types' => ['card'],\n]);\n```\n\n### Removed Functionality\n\nPR: https://github.com/laravel/cashier-stripe/pull/1418\n\nBelow is a list of methods that have been renamed in Cashier 14 and their corresponding replacements:\n\n```php\n// Removed...\n$user->removePaymentMethod($paymentMethod);\n$payment->isCancelled();\n$subscription->cancelled();\nSubscription::query()->cancelled()->get();\nSubscription::query()->notCancelled()->get();\n$subscription->markAsCancelled();\n\n// Replacement...\n$user->deletePaymentMethod($paymentMethod);\n$payment->isCanceled();\n$subscription->canceled();\nSubscription::query()->canceled()->get();\nSubscription::query()->notCanceled()->get();\n$subscription->markAsCanceled();\n```\n\n## Upgrading To 13.0 From 12.x\n\n### Minimum Versions\n\nThe following required dependency versions have been updated:\n\n- The minimum PHP version is now v7.3\n- The minimum Laravel version is now v8.0\n- The minimum Stripe PHP SDK version is now v7.39\n\n### Stripe API Version\n\nPR: https://github.com/laravel/cashier-stripe/pull/1001\n\nThe default Stripe API version for Cashier 13.x will be `2020-08-27`. If this is the latest Stripe API version at the time that you're upgrading to this Cashier version then it's also recommended that you upgrade your own Stripe API version settings [in your Stripe dashboard](https://dashboard.stripe.com/developers) to this version after deploying the Cashier upgrade. If this is no longer the latest Stripe API version, we recommend you do not modify your Stripe API version settings.\n\nIf you use the Stripe PHP SDK directly, make sure to properly test your integration after updating.\n\n#### Upgrading Your Webhook\n\nYou should ensure your webhook operates on the same API version as Cashier. To do so, you may use the `cashier:webhook` command from your production environment to create a new webhook that matches Cashier's Stripe API version:\n\n```bash\nphp artisan cashier:webhook --disabled\n```\n\nThis will create a new webhook with the same Stripe API version as Cashier [in your Stripe dashboard](https://dashboard.stripe.com/webhooks). The webhook will be immediately disabled so it doesn't interfere with your existing production application until you are ready to enable it. By default, the webhook will be created using the `APP_URL` environment variable to determine the proper URL for your application. If you need to use a different URL, you can use the `--url` flag when invoking the command:\n\n```bash\nphp artisan cashier:webhook --disabled --url \"http://example.com/stripe/webhook\"\n```\n\nYou may use the following upgrade checklist to properly enable to the new webhook:\n\n1. If you have webhook signature verification enabled, disable it on production by temporarily removing the `STRIPE_WEBHOOK_SECRET` environment variable.\n2. Add any extra Stripe events your application requires to the new webhook in your Stripe dashboard.\n3. Disable the old webhook in your Stripe dashboard.\n4. Enable the new webhook in your Stripe dashboard.\n5. Re-enable the new webhook secret by re-adding the `STRIPE_WEBHOOK_SECRET` environment variable in production with the secret from the new webhook.\n6. Remove the old webhook in your Stripe dashboard.\n\nAfter following this process, your new webhook will be active and ready to receive events.\n\n### Tax Percentage Removal\n\nPR: https://github.com/laravel/cashier-stripe/pull/1001\n\nDue to upgrading to a new Stripe API version, the `taxPercentage`, `syncTaxPercentage`, and `getTaxPercentageForPayload` methods have been removed from Cashier since they are deprecated by Stripe. We recommend that you upgrade to Stripe's new Tax Rates API. You can familiarize yourself with Tax Rates via Stripe's documentation on the topic:\n\nStripe migration guide: https://stripe.com/docs/billing/migration/taxes  \nTax Rates documentation: https://stripe.com/docs/billing/taxes/tax-rates  \nTax Rates on invoices: https://stripe.com/docs/billing/invoices/tax-rates  \n\nUsing Tax Rates with Laravel Cashier is also documented within the official Cashier documentation: https://laravel.com/docs/billing#subscription-taxes\n\n### Renaming \"Plans\" To Prices\n\nPR: https://github.com/laravel/cashier-stripe/pull/1166\n\nTo accommodate Stripe's phasing out of the \"Plans\" API, we've made the choice to completely migrate Cashier's public API to use the new \"Prices\" terminology. Doing so will bring us on par with Stripe's own documentation and will ease the translation between Stripe's documentation and Cashier's documentation and API.\n\nThe following methods were renamed:\n\n```php\n// Before...\n$user->subscribedToPlan('price_xxx');\n$user->onPlan('price_xxx');\n$user->planTaxRates();\n\n$user->newSubscription('default')->plan('price_xxx')->create($paymentMethod);\n$user->newSubscription('default')->meteredPlan('price_xxx')->create($paymentMethod);\n\n$user->subscription()->hasMultiplePlans();\n$user->subscription()->hasSinglePlan();\n$user->subscription()->hasPlan('price_xxx');\n$user->subscription()->addPlan('price_xxx');\n$user->subscription()->addPlanAndInvoice('price_xxx');\n$user->subscription()->removePlan('price_xxx');\n\n// After...\n$user->subscribedToPrice('price_xxx');\n$user->onPrice('price_xxx');\n$user->priceTaxRates();\n\n$user->newSubscription('default')->price('price_xxx')->create($paymentMethod);\n$user->newSubscription('default')->meteredPrice('price_xxx')->create($paymentMethod);\n\n$user->subscription()->hasMultiplePrices();\n$user->subscription()->hasSinglePrice();\n$user->subscription()->hasPrice('price_xxx');\n$user->subscription()->addPrice('price_xxx');\n$user->subscription()->addPriceAndInvoice('price_xxx');\n$user->subscription()->removePrice('price_xxx');\n```\n\nAll changes are mostly method renames.\n\nAdditionally, to fully migrate away from the \"Plans\" terminology, the `stripe_plan` columns on the `subscriptions` and `subscription_items` tables have been renamed to `stripe_price`.  You will need to write a migration to rename these columns:\n\n```php\nSchema::table('subscriptions', function (Blueprint $table) {\n    $table->renameColumn('stripe_plan', 'stripe_price');\n});\n\nSchema::table('subscription_items', function (Blueprint $table) {\n    $table->renameColumn('stripe_plan', 'stripe_price');\n});\n```\n\nRunning this migration requires you to [install the `doctrine/dbal` package](https://laravel.com/docs/migrations#renaming-columns).\n\n### StripeClient Introduction\n\nPR: https://github.com/laravel/cashier-stripe/pull/1169\n\nCashier now uses the new `StripeClient` object to do all API requests. This shouldn't have an impact on your application. However, improper usage of Stripe's API may cause exceptions as the new Stripe client is more strict than the previous resource based API calls.\n\nAdditionally, if you were overwriting the `stripeOptions` method in your billable model, you should now overwrite the `stripe` method instead.\n\n### Billable Model Customization Changes\n\nPR: https://github.com/laravel/cashier-stripe/pull/1100\n\nThe `cashier.model` configuration option has been removed from Cashier. Instead, you should use the `Cashier::useCustomerModel($customerModel)` method. Typically, this method should be called in the `boot` method of your application's `AppServiceProvider` class:\n\n```php\nuse App\\Models\\Cashier\\User;\nuse Laravel\\Cashier\\Cashier;\n\n/**\n * Bootstrap any application services.\n *\n * @return void\n */\npublic function boot()\n{\n    Cashier::useCustomerModel(User::class);\n}\n```\n\n### New Payment Methods Support\n\nPR: https://github.com/laravel/cashier-stripe/pull/1074\n\nCashier v13 supports new payment methods. Because of this, the `card` columns in the database have been renamed to accommodate for all types of payment methods. You will need to write a migration to rename the billable model table's `card_brand` and `card_last_four` columns accordingly:\n\n```php\nSchema::table('users', function (Blueprint $table) {\n    $table->renameColumn('card_brand', 'pm_type');\n    $table->renameColumn('card_last_four', 'pm_last_four');\n});\n```\n\nRunning this migration requires you to [install the `doctrine/dbal` package](https://laravel.com/docs/migrations#renaming-columns).\n\n### Simplified Payment Exceptions\n\nPR: https://github.com/laravel/cashier-stripe/pull/1095\n\nPayment exceptions thrown by Cashier on payment failures have been consolidated to a single `Laravel\\Cashier\\Exceptions\\IncompletePayment` exception. Before, you could catch an exception based on the status of the payment intent object, such as `PaymentActionRequired` or `PaymentFailure`. However, because this status is already easily derived from the encapsulated payment intent object, we have simplified to just a single exception.\n\nYou can now derive the specific payment status by inspecting the `payment` property on the exception instance:\n\n```php\nuse Laravel\\Cashier\\Exceptions\\IncompletePayment;\n\ntry {\n    $user->charge(1000, 'pm_card_threeDSecure2Required');\n} catch (IncompletePayment $exception) {\n    // Get the payment intent status...\n    $exception->payment->status;\n    \n    // Check specific conditions...\n    if ($exception->payment->requiresPaymentMethod()) {\n        // ...\n    } elseif ($exception->payment->requiresConfirmation()) {\n        // ...\n    }\n}\n```\n\n### Cashier Receipt Changes\n\nPR: https://github.com/laravel/cashier-stripe/pull/1136\n\nCashier receipts have been updated with additional information from the Stripe Invoice object. These updates primarily add more information, such as customer names and email addresses, to the receipt if the information was being stored in Stripe.\n\nIf you do not wish to receive these design updates, you should publish the receipt view *before* you update to Cashier v13:\n\n```bash\nphp artisan vendor:publish --tag=\"cashier-views\"\n```\n\nPlease note that this command will also publish the`checkout.blade.php` and `payment.blade.php` templates. If you do not plan on customizing these published templates, you may delete them.\n\nIf you do decide to publish the `receipt.blade.php` template before updating Cashier, you should replace the \"Discount\" block within the template with the following changes that were introduced to the template:\n\nhttps://github.com/laravel/cashier-stripe/blob/463c5c1c7a37e8748f5f5b5b1d54bd03c8f8137a/resources/views/receipt.blade.php#L249-L266\n\n### Invoice Object Changes\n\nPR: https://github.com/laravel/cashier-stripe/pull/1147\n\nDue to introducing support for displaying multiple discounts on receipts, some substantial changes were made to the `Invoice` class. Normally, these changed methods were only used in the `receipt.blade.php` template. If you weren't using these methods directly and had not published the `receipt.blade.php` template, these changes should not affect your application. If you were using the changed methods directly or have previously exported the `receipt.blade.php` template, we recommend you review the PR linked above to determine any changes relevant to your application.\n\n### Payment Exception Throwing\n\nPR: https://github.com/laravel/cashier-stripe/pull/1155\n\nA previous discrepancy between swapping subscriptions and increasing subscription quantities has been fixed. Previously, only the swapping of subscriptions would throw an `IncompletePayment` exception when a payment method failure occurred. This has been fixed so any use of the quantity methods on a subscription or subscription item will also throw this exception when a payment failure occurs.\n\nPR: https://github.com/laravel/cashier-stripe/pull/1157\n\nAdditionally, swapping prices on subscription items will now also throw an `IncompletePayment` exception when a payment method failure occurs.\n\n### Payment Page Updates\n\nPR: https://github.com/laravel/cashier-stripe/pull/1120\n\nThe hosted payment page for handling payment method failures has been improved to provide support for additional payment methods. No changes to your application are required if you have not published the `payment.blade.php` template. However, all translation support has been removed. If you were relying on this functionality you should publish the view and re-add the appropriate calls to Laravel's translation services.\n\n### Stripe Product Support\n\nPR: https://github.com/laravel/cashier-stripe/pull/1185\n\nCashier Stripe v13 comes with support for checking Stripe Product identifiers. To provide support for this feature, a new `stripe_product` column should be added to the `subscription_items` table:\n\n```php\nSchema::table('subscription_items', function (Blueprint $table) {\n    $table->string('stripe_product')->nullable()->after('stripe_id');\n});\n```\n\nIf you'd like to make use of the new `onProduct` & `subscribedToProduct` methods on your billable model, you should ensure the records in the `subscription_items` have their `stripe_product` column filled with the correct Product ID from Stripe.\n\n## Upgrading To 12.8 From 12.7\n\n### Metered Billing\n\nCashier v12.8.0 brings support for Metered Billing. In order to allow metered billing to work in your current Cashier Stripe application, you will need to write a migration to update the `subscription_items` table's `quantity` column to be nullable:\n\n```php\nSchema::table('subscription_items', function (Blueprint $table) {\n    $table->integer('quantity')->nullable()->change();\n});\n```\n\nRunning this migration requires you to [install the `doctrine/dbal` package](https://laravel.com/docs/migrations#modifying-columns).\n\n\n## Upgrading To 12.0 From 11.x\n\n### Proration Changes\n\nPR: https://github.com/laravel/cashier-stripe/pull/949\n\nCashier's proration features have been updated to make use of [all the new proration options](https://stripe.com/docs/api/subscriptions/update#update_subscription-proration_behavior) provided by Stripe. Previously, calling the `noProrate` method and calling any `xAndInvoice` method afterwards would not typically generate a new invoice. However, in Cashier 12.x, the `xAndInvoice` method will always generate a new invoice.\n\nAlthough all other Cashier behavior should remain the same, there might be a slight difference in behavior if you were specifically relying on the invoice to be explicitly generated as a separate HTTP request through the invoice endpoint when using any `xAndInvoice` method. This is now accomplished in a single request using the `always_invoice` proration option. Of course, you will likely want to test your entire billing flow before deploying to production to make sure your application behaves as expected.\n\nAll underlying proration logic has been updated to accommodate for the new proration logic. If you were relying directly on the `$prorate` property, this has been renamed to `$prorationBehavior`. Similarly, the `setProrate` method has been renamed to `setProrationBehavior`.\n\n\n## Upgrading To 11.0 From 10.x\n\n### Minimum Versions\n\nThe following required dependency versions have been updated:\n\n- The minimum PHP version is now v7.2\n- The minimum Laravel version is now v6.0\n- The minimum Stripe PHP SDK version is now v7.0\n\n### Stripe API Version\n\nPR: https://github.com/laravel/cashier-stripe/pull/905\n\nThe Stripe API version for Cashier 11.x will be `2020-03-02`. Even though Cashier uses this version, it's recommended that you upgrade your own settings [in your Stripe dashboard](https://dashboard.stripe.com/developers) to this API version as well after deploying the Cashier upgrade. If you use the Stripe SDK directly, make sure to properly test your integration after updating.\n\n### Multiplan Subscriptions\n\nPR: https://github.com/laravel/cashier-stripe/pull/900\n\nWith Cashier 11.x, multiple plans per subscription is now supported. To support this, the `stripe_plan` and `quantity` attributes on the `Subscription` model may now be `null`. This will occur only when a subscription has multiple plans. To accommodate these changes, please execute the following migration against your database:\n\n```php\nSchema::table('subscriptions', function (Blueprint $table) {\n     $table->string('stripe_plan')->nullable()->change();\n     $table->integer('quantity')->nullable()->change();\n});\n```\n\nIf you have disabled Cashier's migrations then you should also manually create a new migration to add a table for subscription items:\n\n```php\nSchema::create('subscription_items', function (Blueprint $table) {\n    $table->bigIncrements('id');\n    $table->unsignedBigInteger('subscription_id');\n    $table->string('stripe_id')->index();\n    $table->string('stripe_plan');\n    $table->integer('quantity');\n    $table->timestamps();\n\n    $table->unique(['subscription_id', 'stripe_plan']);\n});\n```\n\nIf you need to access the subscription's plans and their respective quantities you may do using the new `items` relationship available on the subscription:\n\n```php\nforeach ($subscription->items as $item) {\n    $item->stripe_plan;\n    $item->quantity;\n}\n```\n\nFor more information on subscriptions with multiple plans, please consult the [full Cashier documentation](https://laravel.com/docs/billing) available on the Laravel website.\n\n### Tax Rates Support\n\nPR: https://github.com/laravel/cashier-stripe/pull/830\n\nCashier 11.x includes support for Stripe's \"Tax Rates\" services. Several changes have been made to Cashier to support this new feature.\n\nFirst, instead of defining a default tax percentage on the `Billable` model, an array of Tax Rate IDs must be returned. If you were overriding the `taxPercentage` method you should rename it to `taxRates`. Instead of returning a percentage you'll need to return an array containing Stripe ID of a Tax Rate that you define [in your Stripe Dashboard](https://dashboard.stripe.com/tax-rates).\n\nSecondly, the `syncTaxPercentage` method has been renamed to `syncTaxRates` which, when using multiplan subscriptions, will also sync tax rates for any subscription items of the subscription.\n\nThirdly, the `InvoiceItem` class has been renamed to `InvoiceLineItem` which better represents what it actually is and is consistent with Stripe's own terminology. Several methods have also been renamed to better reflect this.\n\nLastly, the [`receipt.blade.php`](https://github.com/laravel/cashier-stripe/blob/11.x/resources/views/receipt.blade.php) view has been thoroughly updated. If you have previously exported this view we recommend that you export it again to receive these updates:\n\n    php artisan vendor:publish --tag=\"cashier-views\" --force\n\nWe also recommended that you familiarize yourself with Stripe's guides on Tax Rates:\n\nStripe migration guide: https://stripe.com/docs/billing/migration/taxes\nTax Rates documentation: https://stripe.com/docs/billing/taxes/tax-rates\nTax Rates on invoices: https://stripe.com/docs/billing/invoices/tax-rates\n\n### hasPaymentMethod Changes\n\nPR: https://github.com/laravel/cashier-stripe/pull/838\n\nThe `hasPaymentMethod` method previously returned `true` or `false` when the customer had a default payment method set. A new `hasDefaultPaymentMethod` method has been created for this purpose, while the `hasPaymentMethod` method will now return `true` or `false` when the customer has at least one payment method set.\n\n### Loosened Exception Throwing\n\nPR: https://github.com/laravel/cashier-stripe/pull/882\n\nPreviously, when a user wasn't yet a Stripe customer, the `upcomingInvoice`, `invoices`, and `paymentMethods` methods would throw an `InvalidStripeCustomer` exception. This has been adjusted so these methods return an empty collection for `invoices` and `paymentMethods`, and `null` for `upcomingInvoice`. An exception will no longer be thrown if the user is not a Stripe customer.\n\n### Renamed Exceptions\n\nPR: https://github.com/laravel/cashier-stripe/pull/881\n\nThe exception `Laravel\\Cashier\\Exceptions\\InvalidStripeCustomer` has been split up into two new exceptions: `Laravel\\Cashier\\Exceptions\\CustomerAlreadyCreated` and `Laravel\\Cashier\\Exceptions\\InvalidCustomer`. The `createAsStripeCustomer` method will now throw the new `CustomerAlreadyCreated` exception while old usages of `InvalidStripeCustomer` are replaced by `InvalidCustomer`.\n\n### Invoice Numbers\n\nPR: https://github.com/laravel/cashier-stripe/pull/878\n\nPreviously, in the default `receipt.blade.php` view, Cashier made use of the Stripe identifier of an invoice for an invoice number. This has been corrected to the proper `$invoice->number` attribute.\n\n\n## Upgrading To 10.0 From 9.x\n\nCashier 10.0 is a major release that provides support for new Stripe APIs as well as provide compliance with SCA regulations in Europe that begin September 2019. If you have a business in the EU, we recommend you review [Stripe's guide on PSD2 and SCA](https://stripe.com/guides/strong-customer-authentication) as well as [their documentation on the SCA API's](https://stripe.com/docs/strong-customer-authentication).\n\nIn this upgrade guide we'll try to cover as much as possible. Please read it thoroughly and also review the corresponding pull requests. Note that some code in the referenced pull requests may have been updated later by additional patches during the beta release process.\n\n> If you would like to review all changes, review the code diff between the 9.0 branch and the 10.0 release: https://github.com/laravel/cashier-stripe/compare/9.0...v10.0.0\n\n### Minimum Versions\n\nThe following dependencies were bumped to new minimum versions:\n\n- The minimum Laravel version is now v5.8\n- The minimum Symfony dependencies are now v4.3\n- The minimum Stripe PHP SDK version is now v6.40\n- The minimum Carbon version is now v2.0\n\n### Fixed API Version\n\nPR: https://github.com/laravel/cashier-stripe/pull/643\n\nThe Stripe API version is now fixed by Cashier. By controlling the API version within Cashier, we can more easily prevent bugs due to API drift and update to new API versions gradually.\n\n### Publishable Key / Secret Key\n\nPR: https://github.com/laravel/cashier-stripe/pull/653\n\nThe `STRIPE_KEY` environment variable is now always used as the publishable key and the `STRIPE_SECRET` environment variable is always used as the secret key.\n\n### Migrations\n\nPR: https://github.com/laravel/cashier-stripe/pull/663\n\nJust like in other Laravel packages, Cashier's migrations now ship with the package. These migrations are automatically registered and will be executed when you run `php artisan migrate`. If you have already run these migrations and want to disable additional migration being executed by Cashier, call `Cashier::ignoreMigrations();` from the `register` method in your `AppServiceProvider`.\n\n<a name=\"configuration-file\"></a>\n### Configuration File\n\nPR: https://github.com/laravel/cashier-stripe/pull/690\n\nCashier now ships with a dedicated configuration file like many other first-party Laravel packages. Settings that were previously stored in the `services.php` configuration file have been transferred to the new `cashier` configuration file. In addition, many methods from the `Cashier` class have been created as configuration options within this file.\n\nThe `STRIPE_MODEL` environment variable has been renamed to `CASHIER_MODEL`.\n\n### Payment Intents Support\n\nPR: https://github.com/laravel/cashier-stripe/pull/667\n\n#### New Exceptions\n\nAny payment action will now throw an exception when a payment either fails or when the payment requires a secondary confirmation action in order to be completed. This applies to single charges, invoicing customers, subscribing to a new plan, or swapping plans. After catching these exceptions, you have several options for how to properly handle them. You can either let Stripe handle everything for you (you may configure this in the Stripe dashboard) or use the new, built-in payment confirmation page that is included with Cashier.\n\n```php\nuse Laravel\\Cashier\\Exceptions\\IncompletePayment;\n\ntry {\n    $subscription = $user->newSubscription('default', $planId)\n        ->create($paymentMethod);\n} catch (IncompletePayment $exception) {\n    return redirect()->route(\n        'cashier.payment',\n        [$exception->payment->id, 'redirect' => route('home')]\n    );\n}\n```\n\nThe `IncompletePayment` exception above could be an instance of a `PaymentFailure` when a card failure occurred or an instance of `PaymentActionRequired` when a secondary confirmation action is needed to complete the payment. In the example above, the user is redirected to a new, dedicated payment page which ships with Cashier. Here, the user can confirm their payment details and fulfill the secondary action (such as 3D Secure). After confirming their payment, the user will be redirected to the URL provided in the `redirect` route parameter.\n\nExceptions may be thrown for the following methods: `charge`, `invoiceFor`, and `invoice` on the `Billable` user. When handling subscriptions, the `create` method and `swap` methods may throw exceptions. The payment page provided by Cashier offers an easy transition to handling the new European SCA requirements.\n\n> If you would like to let Stripe host your payment verification pages, [you may configure this in your Stripe settings](https://dashboard.stripe.com/account/billing/automatic). However, you should still handle payment exceptions in your application and inform the user they will receive an email with further payment confirmation instructions.\n\nIn addition, the subscription `create` method on the subscription builder previously immediately canceled any subscription with an `incomplete` or `incomplete_expired` status and threw a `SubscriptionCreationFailed` exception when a subscription could not be created. This has been replaced with the behavior described above and the `SubscriptionCreationFailed` exception has been removed.\n\n#### The Subscription `stripe_status` Column\n\nA new `stripe_status` database column has been introduced for the `subscriptions` table, which corresponds with and is kept in sync via webhooks with the subscription status provided by Stripe. You can add this column to your `subscriptions` table using the migration below:\n\n```php\nSchema::table('subscriptions', function (Blueprint $table) {\n    $table->string('stripe_status')->nullable();\n});\n```\n\nWhen a subscription is put into an `incomplete_expired` state, Cashier will automatically delete it from the database. More information on subscription statuses can be found here: https://stripe.com/docs/billing/lifecycle\n\n#### Past Due & Incomplete Subscriptions\n\nPR: https://github.com/laravel/cashier-stripe/pull/707\n\nDuring subscription operations that fail and require additional payment configuration, a subscription will receive a status of `incomplete` or `past_due`. When this happens, you will need to inform the user that their payment requires additional confirmation.\n\nYou can determine if a user needs to confirm a payment using the new `hasIncompletePayment` method provided by the `Billable` trait. If the user has an incomplete payment, you may use the `latestPayment` method on the `Subscription` model to retrieve the latest failed payment and redirect the user to Cashier's payment confirmation screen:\n\n```blade\n@if ($user->hasIncompletePayment())\n    <a href=\"{{ route('cashier.payment', $user->subscription()->latestPayment()->id) }}\">\n        Please confirm your payment.\n    </a>\n@endif\n```\n\n> When a subscription is in an incomplete state, no plan changes can occur and an `SubscriptionUpdateFailure` exception will occur when you try to call the `swap` or `updateQuantity` methods.\n\n#### Payment Notifications\n\n> If you have enabled Stripe's built-in payment confirmation notifications then you do not need to configure the Cashier payment confirmation notifications.\n\nSince SCA regulations require customers to occasionally verify their payment details even while their subscription is active, Cashier can send a payment notification to the customer when off-session payment confirmation is required. For example, this may occur when a subscription is renewing. Cashier's payment notification can be enabled by setting the `CASHIER_PAYMENT_NOTIFICATION` environment variable to a notification class. By default, this notification is disabled. Of course, Cashier includes a notification class you may use for this purpose, but you are free to provide your own notification class if desired:\n\n    CASHIER_PAYMENT_NOTIFICATION=Laravel\\Cashier\\Notifications\\ConfirmPayment\n\nTo ensure that off-session payment confirmation notifications are delivered, verify that [Stripe webhooks are configured](https://laravel.com/docs/billing#handling-stripe-webhooks) for your application and the `invoice.payment_action_required` webhook is enabled in your Stripe dashboard.\n\n### Cards And Payment Methods\n\nPR: https://github.com/laravel/cashier-stripe/pull/696\nPR: https://github.com/laravel/cashier-stripe/pull/701\n\nCashier has migrated to the new recommended [Stripe Payment Methods API](https://stripe.com/docs/payments/payment-methods). This API effectively [replaces the former Sources and Tokens API](https://stripe.com/docs/payments/payment-methods#transitioning). At the moment, the Payment Methods API only supports cards but support for all of the other payment flows [is planned](https://stripe.com/docs/payments/payment-methods#transitioning).\n\nPayment Methods are backwards compatible with the Sources and Tokens APIs, meaning that if you've saved cards as a source on a customer, they can be retrieved with the new Payment Methods API. However, at the moment there isn't a way to retrieve the default source from a customer through the Payment Methods API. Therefore, the `defaultPaymentMethod` method on the `Billable` user will return an instance of a `Stripe\\Card` or `Stripe\\BankAccount` if no default Payment Method could be found.\n\nIt's important to note that any default source set on a customer will still continue to work when creating new subscriptions. However, considering new SCA regulations which take affect September 2019, it's important that you update your integration to the new Payment Methods API as soon as possible and do not use the Sources or Tokens APIs any longer. In fact, if your users do not have a `Laravel\\Cashier\\PaymentMethod` attached to their account, you may wish to create one before creating a new subscription:\n\n```php\nuse Stripe\\Card as StripeCard;\nuse Stripe\\BankAccount as StripeBankAccount;\n\n$defaultPaymentMethod = $user->defaultPaymentMethod();\n\nif ($defaultPaymentMethod instanceof StripeCard ||\n    $defaultPaymentMethod instanceof StripeBankAccount) {\n    // Gather payment method and store it using new payment method APIs...\n}\n```\n\nDue to these changes, the `Laravel\\Cashier\\Card` class has been replaced with `Laravel\\Cashier\\PaymentMethod` class and the old card methods on the Billable trait were removed.\n\nFor more information regarding storing payment methods, review the [Setup Intents](#setup-intents) documentation below.\n\n<a name=\"setup-intents\"></a>\n#### Setup Intents\n\nPR: https://github.com/laravel/cashier-stripe/pull/700\n\nWhen storing payment methods, you should now use the Stripe Setup Intent API if you want to ensure your off-session recurring payments for your subscription keep working and do not trigger secondary payment confirmation actions.\n\n**To learn more about Setup Intents and creating payment methods for subscription billing or single charges, review the [full Cashier documentation](https://laravel.com/docs/billing/#payment-methods).**\n\n### Single Charges\n\n#### Payment Method\n\nPR: https://github.com/laravel/cashier-stripe/pull/697\n\nThe `charge` method now requires a payment method identifier instead of a token. You will need to update your Stripe.js integration to retrieve a payment method identifier instead of a source token. \"Payment methods\" are now Stripe's recommended way of dealing with customer payment information. [More information about payments can be found in the official Stripe documentation](https://stripe.com/docs/payments/payment-intents/migration#web).\n\nBecause Stripe doesn't offer a way to set a default payment method for single charges, the charge method now explicitly requires a payment method identifier as its second parameter:\n\n```php\n$user->charge(1000, $paymentMethod);\n```\n\n**You can retrieve a payment method by implementing [the new payment method Stripe.js integration](https://laravel.com/docs/billing/#payment-methods).**\n\n### Webhooks\n\nPR: https://github.com/laravel/cashier-stripe/pull/672\n\nBecause of updates in Stripe's recommended payment and subscription handling, properly handling Stripe's webhooks is now required in order to use Cashier. Thankfully, Cashier provides a controller which will properly handle these webhooks for you. [You can read more about enabling webhooks in the full Cashier documentation](https://laravel.com/docs/billing#handling-stripe-webhooks).\n\nThe Cashier webhook handler route is now automatically registered for you and does not need to be manually added to your routes file anymore.\n\n### Invoices\n\nPR: https://github.com/laravel/cashier-stripe/pull/685\nPR: https://github.com/laravel/cashier-stripe/pull/711\nPR: https://github.com/laravel/cashier-stripe/pull/690\n\nCashier now uses the `moneyphp/money` library to format currency values for display on invoices. Because of this, the `useCurrencySymbol`, `usesCurrencySymbol` and `guessCurrencySymbol` methods have been removed.\n\nThe `useCurrency` method has been replaced by a configuration option in the new [Cashier configuration file](#configuration-file) and the `usesCurrency` method has been removed.\n\nIn addition, all `raw` methods on the `Invoice` object now return integers instead of floats. These integers represent money values in cents.\n\n#### Invoice Object\n\nAll invoice methods in Cashier now return an instance of `Laravel\\Cashier\\Invoice` instead of a `Stripe\\Invoice` object.\n\n### Subscriptions\n\n#### Swap Options\n\nPR: https://github.com/laravel/cashier-stripe/pull/620\n\nThe `swap` method now accepts an `$options` argument.\n\n#### Swapping And Invoicing\n\nPR: https://github.com/laravel/cashier-stripe/pull/710\n\nThe `swap` method will no longer automatically invoice the customer. Instead, a dedicated `swapAndInvoice` method has been added to Cashier. The `swapAndInvoice` method may be used if you want to immediately invoice a customer when they change their plan.\n\n### Customers\n\nPR: https://github.com/laravel/cashier-stripe/pull/682\n\nThe following methods now require that the `Billable` user has an associated Stripe customer account created by your application: `tab`, `invoice`, `upcomingInvoice`, `invoices`, `applyCoupon`. An exception will be thrown if you attempt to call these methods without first creating a Stripe customer account for the user.\n\n\n## Upgrading To 9.3 From 9.2\n\n### Custom Subscription Creation Exception\n\n[In their 2019-03-14 API update](https://stripe.com/docs/upgrades#2019-03-14), Stripe changed the way they handle new subscriptions when card payment fails. Instead of letting the creation of the subscription fail, the subscription is failed with an \"incomplete\" status. Because of this a Cashier customer will always get a successful subscription. Previously a card exception was thrown.\n\nTo accommodate for this new behavior from now on Cashier will cancel that subscription immediately and throw a custom `SubscriptionCreationFailed` exception when a subscription is created with an \"incomplete\" or \"incomplete_expired\" status. We've decided to do this because in general you want to let a customer only start using your product when payment was received.\n\nIf you were relying on catching the `\\Stripe\\Error\\Card` exception before you should now rely on catching the `Laravel\\Cashier\\Exceptions\\SubscriptionCreationFailed` exception instead.\n\n### Card Failure When Swapping Plans\n\nPreviously, when a user attempted to change subscription plans and their payment failed, the resulting exception bubbled up to the end user and the update to the subscription in the application was not performed. However, the subscription was still updated in Stripe itself resulting in the application and Stripe becoming out of sync.\n\nHowever, Cashier will now catch the payment failure exception while allowing the plan swap to continue. The payment failure will be handled by Stripe and Stripe may attempt to retry the payment at a later time. If the payment fails during the final retry attempt, Stripe will execute the action you have configured in your billing settings: https://stripe.com/docs/billing/lifecycle#settings\n\nTherefore, you should ensure you have configured Cashier to handle Stripe's webhooks. When configured properly, this will allow Cashier to mark the subscription as canceled when the final payment retry attempt fails and Stripe notifies your application via a webhook request. Please refer to our [instructions for setting up Stripe webhooks with Cashier.](https://laravel.com/docs/master/billing#handling-stripe-webhooks).\n\n\n## Upgrading To 9.0 From 8.x\n\n### PHP & Laravel Version Requirements\n\nLike the latest releases of the Laravel framework, Laravel Cashier now requires PHP >= 7.1.3. We encourage you to upgrade to the latest versions of PHP and Laravel before upgrading to Cashier 9.0.\n\n### The `createAsStripeCustomer` Method\n\nThe `updateCard` call was extracted from the `createAsStripeCustomer` method on the `Billable` trait in PR [#588](https://github.com/laravel/cashier-stripe/pull/588). In addition, the `$token` parameter was removed.\n\nIf you were calling the `createAsStripeCustomer` method directly you now should call the `updateCard` method separately after calling the `createAsStripeCustomer` method. This provides the opportunity for more granularity when handling errors for the two calls.\n\n### WebhookController Changes\n\nInstead of calling the Stripe API to verify incoming webhook events, Cashier now only uses webhook signatures to verify that events it receives are authentic as of [PR #591](https://github.com/laravel/cashier-stripe/pull/591).\n\nThe `VerifyWebhookSignature` middleware is now automatically added to the `WebhookController` if the `services.stripe.webhook.secret` value is set in your `services.php` configuration file. By default, this configuration value uses the `STRIPE_WEBHOOK_SECRET` environment variable.\n\nIf you manually added the `VerifyWebhookSignature` middleware to your Cashier webhook route, you may remove it since it will now be added automatically.\n\nIf you were using the `CASHIER_ENV` environment variable to test incoming webhooks, you should set the `STRIPE_WEBHOOK_SECRET` environment variable to `null` to achieve the same behavior.\n\nMore information about verifying webhooks can be found [in the Cashier documentation](https://laravel.com/docs/5.7/billing#verifying-webhook-signatures).\n"
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.3681640625,
          "content": "{\n    \"name\": \"laravel/cashier\",\n    \"description\": \"Laravel Cashier provides an expressive, fluent interface to Stripe's subscription billing services.\",\n    \"keywords\": [\"laravel\", \"stripe\", \"billing\"],\n    \"license\": \"MIT\",\n    \"support\": {\n        \"issues\": \"https://github.com/laravel/cashier/issues\",\n        \"source\": \"https://github.com/laravel/cashier\"\n    },\n    \"authors\": [\n        {\n            \"name\": \"Taylor Otwell\",\n            \"email\": \"taylor@laravel.com\"\n        },\n        {\n            \"name\": \"Dries Vints\",\n            \"email\": \"dries@laravel.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.1\",\n        \"ext-json\": \"*\",\n        \"illuminate/console\": \"^10.0|^11.0\",\n        \"illuminate/contracts\": \"^10.0|^11.0\",\n        \"illuminate/database\": \"^10.0|^11.0\",\n        \"illuminate/http\": \"^10.0|^11.0\",\n        \"illuminate/log\": \"^10.0|^11.0\",\n        \"illuminate/notifications\": \"^10.0|^11.0\",\n        \"illuminate/pagination\": \"^10.0|^11.0\",\n        \"illuminate/routing\": \"^10.0|^11.0\",\n        \"illuminate/support\": \"^10.0|^11.0\",\n        \"illuminate/view\": \"^10.0|^11.0\",\n        \"moneyphp/money\": \"^4.0\",\n        \"nesbot/carbon\": \"^2.0|^3.0\",\n        \"stripe/stripe-php\": \"^16.2\",\n        \"symfony/console\": \"^6.0|^7.0\",\n        \"symfony/http-kernel\": \"^6.0|^7.0\",\n        \"symfony/polyfill-intl-icu\": \"^1.22.1\"\n    },\n    \"require-dev\": {\n        \"dompdf/dompdf\": \"^2.0\",\n        \"mockery/mockery\": \"^1.0\",\n        \"orchestra/testbench\": \"^8.18|^9.0\",\n        \"phpstan/phpstan\": \"^1.10\",\n        \"phpunit/phpunit\": \"^10.4\"\n    },\n    \"suggest\": {\n        \"ext-intl\": \"Allows for more locales besides the default \\\"en\\\" when formatting money values.\",\n        \"dompdf/dompdf\": \"Required when generating and downloading invoice PDF's using Dompdf (^1.0.1|^2.0).\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Laravel\\\\Cashier\\\\\": \"src/\",\n            \"Laravel\\\\Cashier\\\\Database\\\\Factories\\\\\": \"database/factories/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Laravel\\\\Cashier\\\\Tests\\\\\": \"tests/\"\n        }\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"15.x-dev\"\n        },\n        \"laravel\": {\n            \"providers\": [\n                \"Laravel\\\\Cashier\\\\CashierServiceProvider\"\n            ]\n        }\n    },\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "database",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.140625,
          "content": "parameters:\n  paths:\n    - config\n    - database\n    - routes\n    - src\n\n  level: 0\n\n  ignoreErrors:\n    - \"#Unsafe usage of new static\\\\(\\\\)#\"\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.517578125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit colors=\"true\">\n    <testsuites>\n        <testsuite name=\"Unit\">\n            <directory suffix=\"Test.php\">./tests/Unit</directory>\n        </testsuite>\n        <testsuite name=\"Feature\">\n            <directory suffix=\"Test.php\">./tests/Feature</directory>\n        </testsuite>\n    </testsuites>\n    <php>\n        <env name=\"DB_CONNECTION\" value=\"testing\"/>\n        <env name=\"CASHIER_PAYMENT_NOTIFICATION\" value=\"Laravel\\Cashier\\Notifications\\ConfirmPayment\"/>\n    </php>\n</phpunit>\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "routes",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "testbench.yaml",
          "type": "blob",
          "size": 0.1650390625,
          "content": "providers:\n  - Laravel\\Cashier\\CashierServiceProvider\n\nmigrations:\n  - database/migrations\n\nworkbench:\n  build:\n    - create-sqlite-db\n    - db:wipe\n    - migrate:fresh\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}