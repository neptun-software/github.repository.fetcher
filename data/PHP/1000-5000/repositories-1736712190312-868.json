{
  "metadata": {
    "timestamp": 1736712190312,
    "page": 868,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "florianv/swap",
      "stars": 1317,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3046875,
          "content": "; This file is for unifying the coding style for different editors and IDEs.\n; More information at http://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2392578125,
          "content": "* text=auto\n\n/doc export-ignore\n/tests export-ignore\n.editorconfig export-ignore\n.gitattributes export-ignore\n.gitignore export-ignore\n.scrutinizer.yml export-ignore\n.styleci.yml export-ignore\n.travis.yml export-ignore\nphpunit.xml export-ignore\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.08203125,
          "content": ".idea/\n/bin/\n/vendor/\ncomposer.lock\nphpunit.xml\n.php_cs.cache\n.phpunit.result.cache\n"
        },
        {
          "name": ".php_cs.dist",
          "type": "blob",
          "size": 0.4775390625,
          "content": "<?php\nreturn PhpCsFixer\\Config::create()\n    ->setRules(array(\n        '@Symfony' => true,\n        '@Symfony:risky' => true,\n        'array_syntax' => array('syntax' => 'short'),\n        'no_unreachable_default_argument_value' => false,\n        'heredoc_to_nowdoc' => false,\n        'phpdoc_annotation_without_dot' => false,\n    ))\n    ->setRiskyAllowed(true)\n    ->setFinder(\n        PhpCsFixer\\Finder::create()\n            ->in(__DIR__.'/src')\n            ->in(__DIR__.'/tests')\n    )\n;\n"
        },
        {
          "name": ".scrutinizer.yml",
          "type": "blob",
          "size": 0.494140625,
          "content": "filter:\n    excluded_paths: [tests/*]\n\nchecks:\n    php:\n        remove_extra_empty_lines: true\n        remove_php_closing_tag: true\n        remove_trailing_whitespace: true\n        fix_use_statements:\n            remove_unused: true\n            preserve_multiple: false\n            preserve_blanklines: true\n            order_alphabetically: true\n        fix_php_opening_tag: true\n        fix_linefeed: true\n        fix_line_ending: true\n        fix_identation_4spaces: true\n        fix_doc_comments: true\n"
        },
        {
          "name": ".styleci.yml",
          "type": "blob",
          "size": 0.0673828125,
          "content": "preset: symfony\n\nfinder:\n    path:\n        - \"src\"\n        - \"tests\"\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.341796875,
          "content": "language: php\n\nsudo: false\n\nenv:\n  global:\n    - PREFER=\"--prefer-dist\"\n\nmatrix:\n    fast_finish: true\n    include:\n        - php: 7.1\n        - php: 7.2\n        - php: 7.3\n        - php: 7.4\n        - php: 8.0\n\ncache:\n  directories:\n    - $HOME/.composer/cache\n\nbefore_script:\n  - composer update --no-interaction $PREFER\n\nscript:\n  - composer test\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.6953125,
          "content": "# Release Notes\n\n## 4.0\n\n- Migrated from PHP 5.5 to PHP 7.1+\n- Updated PHP HTTP dependency to version 2\n- Removed the deprecated Yahoo service which has been removed by Yahoo\n- Removed the deprecated Google service which has been very unreliable and unstable on different platforms\n- Fixed the exchange rate value to always be a float instead of a string\n- Added information about which service returned a rate with `ExchangeRate::getProviderName()`\n- Removed the `InternalException` only used in the `PhpArray` service\n- Modified the PHPArray service to only support scalars as rates (rate objects are not compatible)\n- We now rely on PSR-16 Simple Cache instead of PSR-6 Cache. You can use https://github.com/php-cache/simple-cache-bridge\nas a bridge between PSR-6 and PSR-16.\n- Added a `getCurrencyPair()` to the exchange rate objects\n- Removed the Historical service class in favor of the `SupportsHistoricalQueries` trait\n\n## 3.0\n\nThis log contains the important changes for the 3.x versions.\n\n- Added CurrencyConverterApi service\n- Fixed Fixer service which now requires an access_key\n- Added Forge service\n- Added CurrencyDataFeed service\n- Supported historical rates in National Bank Of Romania\n- Support crypto currencies via Cryptonator\n- New Russian Central Bank service\n\n- e5234ea Added a .gitattributes file\n- 24ba8f3 Use Httplug instead of egeloen\n- 638255b PSR Cache implementation\n- 80abb02 Add documentation about caching\n- acd8eb6 Removed currency codes enumeration\n- b0a8aba Added interfaces for CurrencyPair and Rate\n- eefb252 Removed unused InvalidCurrencyCodeException\n- 457a72a New Swap\n- 02f0b66 Updated the documentation\n- 55ab175 Rely on Exchanger 0.1\n- 92a7d2c Updated README\n- feb6102 Added a CHANGELOG file\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0654296875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 - 2019 Florian Voutzinos\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.4013671875,
          "content": "# <img src=\"https://s3.amazonaws.com/swap.assets/swap_logo.png\" height=\"30px\" width=\"30px\"/> Swap\n\n[![Build status](http://img.shields.io/travis/florianv/swap.svg?style=flat-square)](https://travis-ci.org/florianv/swap)\n[![Total Downloads](https://img.shields.io/packagist/dt/florianv/swap.svg?style=flat-square)](https://packagist.org/packages/florianv/swap)\n[![Version](http://img.shields.io/packagist/v/florianv/swap.svg?style=flat-square)](https://packagist.org/packages/florianv/swap)\n\nSwap allows you to retrieve currency exchange rates from various services such as **[Fixer](https://fixer.io/)**, **[Currency Data](https://currencylayer.com)** or **[Exchange Rates Data](https://exchangeratesapi.io/)** and optionally cache the results. \nIt is integrated to other libraries like [moneyphp/money](https://github.com/moneyphp/money) and provides\na [Symfony Bundle](https://github.com/florianv/FlorianvSwapBundle) and a [Laravel Package](https://github.com/florianv/laravel-swap).\n\n## Sponsors\n\n<table>\n   <tr>\n      <td><img src=\"https://assets.apilayer.com/apis/fixer.png\" width=\"50px\"/></td>\n      <td><a href=\"https://fixer.io/\">Fixer</a> is a simple and lightweight API for foreign exchange rates that supports up to 170 world currencies.</td>\n   </tr>\n   <tr>\n     <td><img src=\"https://assets.apilayer.com/apis/currency_data.png\" width=\"50px\"/></td>\n     <td><a href=\"https://currencylayer.com\">currencylayer</a> provides reliable exchange rates and currency conversions for your business up to 168 world currencies.</td>\n   </tr>\n   <tr>\n     <td><img src=\"https://assets.apilayer.com/apis/exchangerates_data.png\" width=\"50px\"/></td>\n     <td><a href=\"https://exchangeratesapi.io/\">exchangerates</a> provides reliable exchange rates and currency conversions for your business with over 15 data sources.</td>\n   </tr>\n</table>\n\n## QuickStart\n\n```bash\n$ composer require php-http/curl-client nyholm/psr7 php-http/message florianv/swap\n```\n\n```php\nuse Swap\\Builder;\n\n// Build Swap\n$swap = (new Builder())\n\n    // Use the Fixer service as first level provider\n    ->add('apilayer_fixer', ['api_key' => 'Get your key here: https://fixer.io/'])\n     \n    // Use the currencylayer service as first fallback\n    ->add('apilayer_currency_data', ['api_key' => 'Get your key here: https://currencylayer.com'])\n    \n    // Use the exchangerates service as second fallback\n    ->add('apilayer_exchange_rates_data', ['api_key' => 'Get your key here: https://exchangeratesapi.io/'])\n->build();\n    \n// Get the latest EUR/USD rate\n$rate = $swap->latest('EUR/USD');\n\n// 1.129\n$rate->getValue();\n\n// 2016-08-26\n$rate->getDate()->format('Y-m-d');\n\n// Get the EUR/USD rate 15 days ago\n$rate = $swap->historical('EUR/USD', (new \\DateTime())->modify('-15 days'));\n```\n\n> We recommend to use the [services that support our project](#sponsors), providing a free plan up to 100 requests per month.\n\n## Documentation\n\nThe documentation for the current branch can be found [here](https://github.com/florianv/swap/blob/master/doc/readme.md).\n\n## Services\n\nHere is the list of the currently implemented services:\n\n| Service | Base Currency | Quote Currency | Historical |\n|---------------------------------------------------------------------------|----------------------|----------------|----------------|\n| [Fixer](https://fixer.io/) | EUR (free, no SSL), * (paid) | * | Yes |\n| [Currency Data](https://currencylayer.com) | USD (free), * (paid) | * | Yes |\n| [Exchange Rates Data](https://exchangeratesapi.io/) | USD (free), * (paid) | * | Yes |\n| [Abstract](https://www.abstractapi.com) | * | * | Yes |\n| [coinlayer](https://coinlayer.com) | * Crypto (Limited standard currencies) | * Crypto (Limited standard currencies) | Yes |\n| [Fixer](https://fixer.io) | EUR (free, no SSL), * (paid) | * | Yes |\n| [Currency Data](https://currencylayer.com) | USD (free), * (paid) | * | Yes |\n| [exchangeratesapi](https://exchangeratesapi.io) | USD (free), * (paid) | * | Yes |\n| [European Central Bank](https://www.ecb.europa.eu/home/html/index.en.html) | EUR | * | Yes |\n| [National Bank of Georgia](https://nbg.gov.ge) | * | GEL | Yes |\n| [National Bank of the Republic of Belarus](https://www.nbrb.by) | * | BYN (from 01-07-2016),<br>BYR (01-01-2000 - 30-06-2016),<br>BYB (25-05-1992 - 31-12-1999) | Yes |\n| [National Bank of Romania](http://www.bnr.ro) | RON, AED, AUD, BGN, BRL, CAD, CHF, CNY, CZK, DKK, EGP, EUR, GBP, HRK, HUF, INR, JPY, KRW, MDL, MXN, NOK, NZD, PLN, RSD, RUB, SEK, TRY, UAH, USD, XAU, XDR, ZAR | RON, AED, AUD, BGN, BRL, CAD, CHF, CNY, CZK, DKK, EGP, EUR, GBP, HRK, HUF, INR, JPY, KRW, MDL, MXN, NOK, NZD, PLN, RSD, RUB, SEK, TRY, UAH, USD, XAU, XDR, ZAR | Yes |\n| [National Bank of Ukranie](https://bank.gov.ua) | * | UAH | Yes |\n| [Central Bank of the Republic of Turkey](http://www.tcmb.gov.tr) | * | TRY | Yes |\n| [Central Bank of the Republic of Uzbekistan](https://cbu.uz) | * | UZS | Yes |\n| [Central Bank of the Czech Republic](https://www.cnb.cz) | * | CZK | Yes |\n| [Central Bank of Russia](https://cbr.ru) | * | RUB | Yes |\n| [Bulgarian National Bank](http://bnb.bg) | * | BGN | Yes |\n| [WebserviceX](http://www.webservicex.net) | * | * | No |\n| [1Forge](https://1forge.com) | * (free but limited or paid) | * (free but limited or paid) | No |\n| [Cryptonator](https://www.cryptonator.com) | * Crypto (Limited standard currencies) | * Crypto (Limited standard currencies)  | No |\n| [CurrencyDataFeed](https://currencydatafeed.com) | * (free but limited or paid) | * (free but limited or paid) | No |\n| [Open Exchange Rates](https://openexchangerates.org) | USD (free), * (paid) | * | Yes |\n| [Xignite](https://www.xignite.com) | * | * | Yes |\n| [Currency Converter API](https://www.currencyconverterapi.com) | * | * | Yes (free but limited or paid) |\n| [xChangeApi.com](https://xchangeapi.com) | * | * | Yes |\n| [fastFOREX.io](https://www.fastforex.io) | USD (free), * (paid) | * | No |\n| [exchangerate.host](https://www.exchangerate.host) | * | * | Yes |\n| Array | * | * | Yes |\n\nAdditionally, you can add your own services as long as they implement the `ExchangeRateService` interface.\n\n## Integrations\n\n- A Symfony Bundle [FlorianvSwapBundle](https://github.com/florianv/FlorianvSwapBundle)\n- A Laravel Package [florianv/laravel-swap](https://github.com/florianv/laravel-swap)\n\n## Credits\n\n- [Florian Voutzinos](https://github.com/florianv)\n- [All Contributors](https://github.com/florianv/swap/contributors)\n\n## License\n\nThe MIT License (MIT). Please see [LICENSE](https://github.com/florianv/swap/blob/master/LICENSE) for more information.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.298828125,
          "content": "{\n    \"name\": \"florianv/swap\",\n    \"description\": \"Exchange rates library for PHP\",\n    \"keywords\": [\"currency\", \"money\", \"rate\", \"conversion\", \"exchange rates\"],\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Florian Voutzinos\",\n            \"email\": \"florian@voutzinos.com\",\n            \"homepage\": \"https://voutzinos.com\"\n        }\n    ],\n    \"autoload\": {\n        \"psr-4\": {\n            \"Swap\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Swap\\\\Tests\\\\\": \"tests/\"\n        }\n    },\n    \"require\": {\n        \"php\": \"^7.1.3 || ^8.0\",\n        \"florianv/exchanger\": \"^2.0\",\n        \"symfony/http-client\": \"^5.4\",\n        \"php-http/message-factory\": \"^1.1\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^7 || ^8 || ^9\",\n        \"php-http/mock-client\": \"^1.0\",\n        \"php-http/message\": \"^1.7\",\n        \"nyholm/psr7\": \"^1.0\",\n        \"php-http/discovery\": \"^1.0\"\n    },\n    \"suggest\": {\n        \"php-http/discovery\": \"If you are not using `useHttpClient` but instead want to auto-discover HttpClient\"\n    },\n    \"scripts\": {\n        \"test\": \"vendor/bin/phpunit\"\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"4.0-dev\"\n        }\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"php-http/discovery\": true\n        }\n    }\n}\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.1962890625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit colors=\"true\" bootstrap=\"vendor/autoload.php\">\n    <testsuite name=\"Swap Tests Suite\">\n        <directory>tests</directory>\n    </testsuite>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}