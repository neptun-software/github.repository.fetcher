{
  "metadata": {
    "timestamp": 1736712033824,
    "page": 547,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jenssegers/date",
      "stars": 1816,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codacy.yml",
          "type": "blob",
          "size": 0.4091796875,
          "content": "---\nengines:\n  phpmd:\n    enabled: true\n    config:\n      rulesets: \"phpmd.xml\"\n  rubocop:\n    enabled: true\n  shellcheck:\n    enabled: true\n  stylelint:\n    enabled: true\n  duplication:\n    enabled: true\n  metrics:\n    enabled: true\n  coverage:\n    enabled: true\n  structure:\n    enabled: true\n  sonar-php:\n    enabled: true\n  fixme:\n    enabled: true\n  phpcodesniffer:\n    enabled: true\nexclude_paths:\n  - 'tests/**'\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1669921875,
          "content": "/tests              export-ignore\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/.travis.yml        export-ignore\n/phpunit.xml        export-ignore\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0771484375,
          "content": ".DS_Store\nphpunit.phar\n/vendor\ncomposer.phar\ncomposer.lock\n.idea\n.php_cs.cache\n"
        },
        {
          "name": ".php_cs",
          "type": "blob",
          "size": 0.5625,
          "content": "<?php\n\nuse PhpCsFixer\\Config;\nuse PhpCsFixer\\Finder;\n\n$finder = Finder::create()\n    ->in(['src', 'tests']);\n\nreturn Config::create()\n    ->setRules([\n        '@Symfony' => true,\n        'ordered_imports' => true,\n        'phpdoc_align' => false,\n        'phpdoc_to_comment' => false,\n        'phpdoc_inline_tag' => false,\n        'yoda_style' => false,\n        'blank_line_before_statement' => false,\n        'phpdoc_separation' => false,\n        'pre_increment' => false,\n        'increment_style' => false,\n        'phpdoc_types' => false,\n    ])\n    ->setFinder($finder);\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.5732421875,
          "content": "language: php\n\nphp:\n  - 7.1\n  - 7.2\n  - 7.3\n\nsudo: false\n\nmatrix:\n  include:\n    - php: 7.3\n      env:\n        - CARBON_PRE_RELEASE='yes'\n\nbefore_install:\n  - travis_retry composer self-update\n\ninstall:\n  - if [[ $CARBON_PRE_RELEASE == \"yes\" ]]; then travis_retry composer require nesbot/carbon=dev-master; fi;\n  - travis_retry composer update --dev --no-interaction --prefer-source\n\nscript:\n  - mkdir -p build/logs\n  - ./vendor/bin/phpunit --coverage-clover build/logs/clover.xml\n\nafter_success:\n  - sh -c 'if [ \"$TRAVIS_PHP_VERSION\" != \"hhvm\" ]; then php vendor/bin/coveralls -v; fi;'\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.052734375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Jens Segers\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.931640625,
          "content": "Date\n====\n\n[![Latest Stable Version](http://img.shields.io/github/release/jenssegers/date.svg)](https://packagist.org/packages/jenssegers/date) [![Total Downloads](http://img.shields.io/packagist/dm/jenssegers/date.svg)](https://packagist.org/packages/jenssegers/date) [![Build Status](http://img.shields.io/travis/jenssegers/date.svg)](https://travis-ci.org/jenssegers/date) [![Coverage Status](https://coveralls.io/repos/github/jenssegers/date/badge.svg?branch=master)](https://coveralls.io/github/jenssegers/date?branch=master) [![Donate](https://img.shields.io/badge/donate-paypal-blue.svg)](https://www.paypal.me/jenssegers)\n\nThis date library extends [Carbon](https://github.com/briannesbitt/Carbon) with multi-language support. Methods such as `format`, `diffForHumans`, `parse`, `createFromFormat` and the new `timespan`, will now be translated based on your locale.\n\n> All translations made by contributors have been moved to the Carbon 2 package. This package now uses the Carbon translations to provide you with better multi-language support. Translation issues should be reported on the [Carbon repository](https://github.com/briannesbitt/Carbon). Please also check out the original documentation [here](https://carbon.nesbot.com/docs).\n\nInstallation\n------------\n\nInstall using composer:\n\n```bash\ncomposer require jenssegers/date\n```\n\nLaravel\n-------\n\nThere is a service provider included for integration with the Laravel framework. This provider will get the application locale setting and use this for translations. This service will be automatically registered if you use Laravel 5.5+ using the auto-discovery. Else to register the service provider, add the following to the providers array in `config/app.php`:\n\n```php\nJenssegers\\Date\\DateServiceProvider::class,\n```\n\nYou can also add it as a Facade in `config/app.php`:\n\n```php\n'Date' => Jenssegers\\Date\\Date::class,\n```\n\nLanguages\n---------\n\nThis package contains language files for the following languages (https://carbon.nesbot.com/docs/#supported-locales):\n\n- Afar (aa)\n- Afrikaans (af)\n- Aghem (agq)\n- Aguaruna (agr)\n- Akan (ak)\n- Amharic (am)\n- Aragonese (an)\n- Angika (anp)\n- Arabic (ar)\n- Assamese (as)\n- Asu (asa)\n- Asturian (ast)\n- Southern Aymara (ayc)\n- Azerbaijani (az)\n- Basaa (bas)\n- Belarusian (be)\n- Bemba (bem)\n- ber (ber)\n- Bena (bez)\n- Bulgarian (bg)\n- Bhili (bhb)\n- Bhojpuri (bho)\n- Bislama (bi)\n- Bambara (bm)\n- Bengali (bn)\n- Tibetan (bo)\n- Breton (br)\n- Bodo (brx)\n- Bosnian (bs)\n- Bilin (byn)\n- Catalan (ca)\n- Chakma (ccp)\n- Chechen (ce)\n- Chiga (cgg)\n- Cherokee (chr)\n- Chinese (cmn)\n- Crimean Turkish (crh)\n- Czech (cs)\n- Kashubian (csb)\n- Church Slavic (cu)\n- Chuvash (cv)\n- Welsh (cy)\n- Danish (da)\n- Taita (dav)\n- German (de)\n- Zarma (dje)\n- Dogri (macrolanguage) (doi)\n- Lower Sorbian (dsb)\n- Duala (dua)\n- Divehi (dv)\n- Jola-Fonyi (dyo)\n- Dzongkha (dz)\n- Embu (ebu)\n- Ewe (ee)\n- Greek (modern) (el)\n- English (en)\n- Esperanto (eo)\n- Spanish (es)\n- Estonian (et)\n- Basque (eu)\n- Ewondo (ewo)\n- Persian (fa)\n- Fulah (ff)\n- Finnish (fi)\n- Filipino (fil)\n- Faroese (fo)\n- French (fr)\n- Friulian (fur)\n- Western Frisian (fy)\n- Irish (ga)\n- Gaelic (gd)\n- Geez (gez)\n- Galician (gl)\n- Konkani (gom)\n- Swiss German (gsw)\n- Gujarati (gu)\n- Gusii (guz)\n- Manx (gv)\n- Hausa (ha)\n- Hakka Chinese (hak)\n- Hawaiian (haw)\n- Hebrew (modern) (he)\n- Hindi (hi)\n- Fiji Hindi (hif)\n- Chhattisgarhi (hne)\n- Croatian (hr)\n- Upper Sorbian (hsb)\n- Haitian (ht)\n- Hungarian (hu)\n- Armenian (hy)\n- i18n (i18n)\n- Interlingua (ia)\n- Indonesian (id)\n- Igbo (ig)\n- Sichuan Yi (ii)\n- Inupiaq (ik)\n- in (in)\n- Icelandic (is)\n- Italian (it)\n- Inuktitut (iu)\n- iw (iw)\n- Japanese (ja)\n- Ngomba (jgo)\n- Machame (jmc)\n- Javanese (jv)\n- Georgian (ka)\n- Kabyle (kab)\n- Kamba (kam)\n- Makonde (kde)\n- Kabuverdianu (kea)\n- Koyra Chiini (khq)\n- Kikuyu (ki)\n- Kazakh (kk)\n- Kako (kkj)\n- Kalaallisut (kl)\n- Kalenjin (kln)\n- Central Khmer (km)\n- Kannada (kn)\n- Korean (ko)\n- Konkani (kok)\n- Kashmiri (ks)\n- Shambala (ksb)\n- Bafia (ksf)\n- Colognian (ksh)\n- Kurdish (ku)\n- Cornish (kw)\n- Kirghiz (ky)\n- Langi (lag)\n- Luxembourgish (lb)\n- Ganda (lg)\n- Limburgan (li)\n- Ligurian (lij)\n- Lakota (lkt)\n- Lingala (ln)\n- Lao (lo)\n- Northern Luri (lrc)\n- Lithuanian (lt)\n- Luba-Katanga (lu)\n- Luo (luo)\n- Luyia (luy)\n- Latvian (lv)\n- Literary Chinese (lzh)\n- Magahi (mag)\n- Maithili (mai)\n- Masai (mas)\n- Meru (mer)\n- Morisyen (mfe)\n- Malagasy (mg)\n- Makhuwa-Meetto (mgh)\n- Metaʼ (mgo)\n- Eastern Mari (mhr)\n- Maori (mi)\n- Mískito (miq)\n- Karbi (mjw)\n- Macedonian (mk)\n- Malayalam (ml)\n- Mongolian (mn)\n- Manipuri (mni)\n- mo (mo)\n- Marathi (mr)\n- Malay (ms)\n- Maltese (mt)\n- Mundang (mua)\n- Burmese (my)\n- Mazanderani (mzn)\n- Min Nan Chinese (nan)\n- Nama (naq)\n- Norwegian Bokmål (nb)\n- North Ndebele (nd)\n- Low German (nds)\n- Nepali (ne)\n- Central Nahuatl (nhn)\n- Niuean (niu)\n- Dutch (nl)\n- Kwasio (nmg)\n- Norwegian Nynorsk (nn)\n- Ngiemboon (nnh)\n- Norwegian (no)\n- South Ndebele (nr)\n- Northern Sotho (nso)\n- Nuer (nus)\n- Nyankole (nyn)\n- Occitan (oc)\n- Oromo (om)\n- Oriya (or)\n- Ossetian (os)\n- Panjabi (pa)\n- Papiamento (pap)\n- Polish (pl)\n- Prussian (prg)\n- Pashto (ps)\n- Portuguese (pt)\n- Quechua (qu)\n- Cusco Quechua (quz)\n- Rajasthani (raj)\n- Romansh (rm)\n- Rundi (rn)\n- Romanian (ro)\n- Rombo (rof)\n- Russian (ru)\n- Kinyarwanda (rw)\n- Rwa (rwk)\n- Sanskrit (sa)\n- Sakha (sah)\n- Samburu (saq)\n- Santali (sat)\n- Sangu (sbp)\n- Sardinian (sc)\n- Sindhi (sd)\n- Northern Sami (se)\n- Sena (seh)\n- Koyraboro Senni (ses)\n- Sango (sg)\n- Samogitian (sgs)\n- sh (sh)\n- Tachelhit (shi)\n- Shan (shn)\n- Shuswap (shs)\n- Sinhala (si)\n- Sidamo (sid)\n- Slovak (sk)\n- Slovene (sl)\n- Samoan (sm)\n- Inari Sami (smn)\n- Shona (sn)\n- Somali (so)\n- Albanian (sq)\n- Serbian (sr)\n- Swati (ss)\n- Southern Sotho (st)\n- Swedish (sv)\n- Swahili (sw)\n- Silesian (szl)\n- Tamil (ta)\n- Tulu (tcy)\n- Telugu (te)\n- Teso (teo)\n- Tetum (tet)\n- Tajik (tg)\n- Thai (th)\n- Chitwania Tharu (the)\n- Tigrinya (ti)\n- Tigre (tig)\n- Turkmen (tk)\n- Tagalog (tl)\n- Klingon (tlh)\n- Tswana (tn)\n- Tongan (Tonga Islands) (to)\n- Tok Pisin (tpi)\n- Turkish (tr)\n- Tsonga (ts)\n- Tatar (tt)\n- Tasawaq (twq)\n- Talossan (tzl)\n- Tamazight (tzm)\n- Uighur (ug)\n- Ukrainian (uk)\n- Unami (unm)\n- Urdu (ur)\n- Uzbek (uz)\n- Vai (vai)\n- Venda (ve)\n- Vietnamese (vi)\n- Volapük (vo)\n- Vunjo (vun)\n- Walloon (wa)\n- Walser (wae)\n- Wolaytta (wal)\n- Wolof (wo)\n- Xhosa (xh)\n- Soga (xog)\n- Yangben (yav)\n- Yiddish (yi)\n- Yoruba (yo)\n- Cantonese (yue)\n- Yau (Morobe Province) (yuw)\n- Standard Moroccan Tamazight (zgh)\n- Chinese (zh)\n- Zulu (zu)\n\nUsage\n-----\n\nThe Date class extends the Carbon methods such as `format` and `diffForHumans`, and translates them based on your locale:\n\n```php\nuse Jenssegers\\Date\\Date;\n\nDate::setLocale('nl');\n\necho Date::now()->format('l j F Y H:i:s'); // zondag 28 april 2013 21:58:16\n\necho Date::parse('-1 day')->diffForHumans(); // 1 dag geleden\n```\n\nThe Date class also added some aliases and additional methods such as: `ago` which is an alias for `diffForHumans`, and the `timespan` method:\n\n```php\necho $date->timespan(); // 3 months, 1 week, 1 day, 3 hours, 20 minutes\n```\n\nMethods such as `parse` and `createFromFormat` also support \"reverse translations\". When calling these methods with translated input, it will try to translate it to English before passing it to DateTime:\n\n```php\n$date = Date::createFromFormat('l d F Y', 'zaterdag 21 maart 2015');\n```\n\nCarbon\n------\n\nCarbon is the library the Date class is based on. All of the original Carbon operations are still available, check out <https://carbon.nesbot.com/docs> for more information. Here are some of the available methods:\n\n### Creating dates\n\nYou can create Date objects just like the DateTime object (<http://www.php.net/manual/en/datetime.construct.php>):\n\n```php\n$date = new Date();\n$date = new Date('2000-01-31');\n$date = new Date('2000-01-31 12:00:00');\n\n// With time zone\n$date = new Date('2000-01-31', new DateTimeZone('Europe/Brussels'));\n```\n\nYou can skip the creation of a DateTimeZone object:\n\n```php\n$date = new Date('2000-01-31', 'Europe/Brussels');\n```\n\nCreate Date objects from a relative format (<http://www.php.net/manual/en/datetime.formats.relative.php>):\n\n```php\n$date = new Date('now');\n$date = new Date('today');\n$date = new Date('+1 hour');\n$date = new Date('next monday');\n```\n\nThis is also available using these static methods:\n\n```php\n$date = Date::parse('now');\n$date = Date::now();\n```\n\nCreating a Date from a timestamp:\n\n```php\n$date = new Date(1367186296);\n```\n\nOr from an existing date or time:\n\n```php\n$date = Date::createFromDate(2000, 1, 31);\n$date = Date::createFromTime(12, 0, 0);\n$date = Date::create(2000, 1, 31, 12, 0, 0);\n```\n\n### Formatting Dates\n\nYou can format a Date object like the DateTime object (<http://www.php.net/manual/en/function.date.php>):\n\n```php\necho Date::now()->format('Y-m-d'); // 2000-01-31\n```\n\nThe Date object can be cast to a string:\n\n```php\necho Date::now(); // 2000-01-31 12:00:00\n```\n\nGet a human readable output (alias for diffForHumans):\n\n```php\necho $date->ago(); // 5 days ago\n```\n\nCalculate a timespan:\n\n```php\n$date = new Date('+1000 days');\necho Date::now()->timespan($date);\n// 2 years, 8 months, 3 weeks, 5 days\n\n// or even\necho Date::now()->timespan('+1000 days');\n```\n\nGet years since date:\n\n```php\n$date = new Date('-10 years');\necho $date->age; // 10\n\n$date = new Date('+10 years');\necho $date->age; // -10\n```\n\n### Manipulating Dates\n\nYou can manipulate by using the *add* and *sub* methods, with relative intervals (<http://www.php.net/manual/en/datetime.formats.relative.php>):\n\n```php\n$yesterday = Date::now()->sub('1 day');\n$tomorrow  = Date::now()->add('1 day');\n\n// ISO 8601\n$date = Date::now()->add('P2Y4DT6H8M');\n```\n\nYou can access and modify all date attributes as an object:\n\n```php\n$date->year = 2013:\n$date->month = 1;\n$date->day = 31;\n\n$date->hour = 12;\n$date->minute = 0;\n$date->second = 0;\n```\n\n## Contributing\n\nLanguage contributions should made to <https://github.com/briannesbitt/Carbon>.\n\n## License\n\nLaravel Date is licensed under [The MIT License (MIT)](LICENSE).\n\n## Security contact information\n\nTo report a security vulnerability, follow [these steps](https://tidelift.com/security).\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.0712890625,
          "content": "{\n    \"name\": \"jenssegers/date\",\n    \"description\": \"A date library to help you work with dates in different languages\",\n    \"keywords\": [\"laravel\", \"date\", \"time\", \"datetime\", \"i18n\", \"translation\", \"carbon\"],\n    \"homepage\": \"https://github.com/jenssegers/date\",\n    \"license\" : \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Jens Segers\",\n            \"homepage\": \"https://jenssegers.com\"\n        }\n    ],\n    \"require\": {\n        \"nesbot/carbon\": \"^2.72.0\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^10.4.0\",\n        \"php-coveralls/php-coveralls\": \"^2.7\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Jenssegers\\\\Date\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Tests\\\\Jenssegers\\\\\": \"tests/\"\n        }\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"3.1-dev\"\n        },\n        \"laravel\": {\n            \"providers\": [\n                \"Jenssegers\\\\Date\\\\DateServiceProvider\"\n            ],\n            \"aliases\": {\n                \"Date\": \"Jenssegers\\\\Date\\\\Date\"\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "phpmd.xml",
          "type": "blob",
          "size": 1.1640625,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\"Mess detection rules for Jenssegers\\Date\"\n         xmlns=\"http://pmd.sf.net/ruleset/1.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://pmd.sf.net/ruleset/1.0.0\n                     http://pmd.sf.net/ruleset_xml_schema.xsd\"\n         xsi:noNamespaceSchemaLocation=\"\n                     http://pmd.sf.net/ruleset_xml_schema.xsd\">\n    <description>\n        Mess detection rules for Jenssegers\\Date\n    </description>\n    <rule ref=\"rulesets/codesize.xml\" />\n    <rule ref=\"rulesets/cleancode.xml\" />\n    <rule ref=\"rulesets/controversial.xml\" />\n    <rule ref=\"rulesets/design.xml\" />\n    <rule ref=\"rulesets/naming.xml/BooleanGetMethodName\" />\n    <rule ref=\"rulesets/naming.xml/ConstructorWithNameAsEnclosingClass\" />\n    <rule ref=\"rulesets/naming.xml/ConstantNamingConventions\" />\n    <rule ref=\"rulesets/naming.xml/LongVariable\">\n        <properties>\n            <property name=\"maximum\" value=\"25\" />\n        </properties>\n    </rule>\n    <rule ref=\"rulesets/naming.xml/ShortVariable\" />\n    <rule ref=\"rulesets/naming.xml/ShortMethodName\" />\n    <rule ref=\"rulesets/unusedcode.xml\" />\n</ruleset>\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.466796875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" backupGlobals=\"false\" bootstrap=\"vendor/autoload.php\" colors=\"true\" processIsolation=\"false\" stopOnFailure=\"false\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.5/phpunit.xsd\" cacheDirectory=\".phpunit.cache\" backupStaticProperties=\"false\">\n  <testsuites>\n    <testsuite name=\"all\">\n      <directory>tests/</directory>\n    </testsuite>\n  </testsuites>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}