{
  "metadata": {
    "timestamp": 1736712112644,
    "page": 701,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "beyondcode/laravel-dump-server",
      "stars": 1536,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3046875,
          "content": "; This file is for unifying the coding style for different editors and IDEs.\n; More information at http://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4189453125,
          "content": "# Path-based git attributes\n# https://www.kernel.org/pub/software/scm/git/docs/gitattributes.html\n\n# Ignore all test and documentation with \"export-ignore\".\n/tests              export-ignore\n/.editorconfig      export-ignore\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/.scrutinizer.yml   export-ignore\n/.styleci.yml       export-ignore\n/.travis.yml        export-ignore\n/phpunit.xml.dist   export-ignore\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0615234375,
          "content": "build\ncomposer.lock\nvendor\ncoverage\n.idea\n.phpunit.result.cache"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.1640625,
          "content": "# Changelog\n\nAll notable changes to `laravel-dump-server` will be documented in this file\n\n## Unreleased\n\n- laravel 9 support\n\n## 1.0.0 - 2018-07-09\n\n- initial release\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.90234375,
          "content": "# Contributing\n\nContributions are **welcome** and will be fully **credited**.\n\nPlease read and understand the contribution guide before creating an issue or pull request.\n\n## Etiquette\n\nThis project is open source, and as such, the maintainers give their free time to build and maintain the source code\nheld within. They make the code freely available in the hope that it will be of use to other developers. It would be\nextremely unfair for them to suffer abuse or anger for their hard work.\n\nPlease be considerate towards maintainers when raising issues or presenting pull requests. Let's show the\nworld that developers are civilized and selfless people.\n\nIt's the duty of the maintainer to ensure that all submissions to the project are of sufficient\nquality to benefit the project. Many developers have different skillsets, strengths, and weaknesses. Respect the maintainer's decision, and do not be upset or abusive if your submission is not used.\n\n## Viability\n\nWhen requesting or submitting new features, first consider whether it might be useful to others. Open\nsource projects are used by many developers, who may have entirely different needs to your own. Think about\nwhether or not your feature is likely to be used by other users of the project.\n\n## Procedure\n\nBefore filing an issue:\n\n- Attempt to replicate the problem, to ensure that it wasn't a coincidental incident.\n- Check to make sure your feature suggestion isn't already present within the project.\n- Check the pull requests tab to ensure that the bug doesn't have a fix in progress.\n- Check the pull requests tab to ensure that the feature isn't already in progress.\n\nBefore submitting a pull request:\n\n- Check the codebase to ensure that your feature doesn't already exist.\n- Check the pull requests to ensure that another person hasn't already submitted the feature or fix.\n\n## Requirements\n\nIf the project maintainer has any additional requirements, you will find them listed here.\n\n- **[PSR-2 Coding Standard](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md)** - The easiest way to apply the conventions is to install [PHP Code Sniffer](https://pear.php.net/package/PHP_CodeSniffer).\n\n- **Add tests!** - Your patch won't be accepted if it doesn't have tests.\n\n- **Document any change in behaviour** - Make sure the `README.md` and any other relevant documentation are kept up-to-date.\n\n- **Consider our release cycle** - We try to follow [SemVer v2.0.0](https://semver.org/). Randomly breaking public APIs is not an option.\n\n- **One pull request per feature** - If you want to do more than one thing, send multiple pull requests.\n\n- **Send coherent history** - Make sure each individual commit in your pull request is meaningful. If you had to make multiple intermediate commits while developing, please [squash them](https://www.git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Changing-Multiple-Commit-Messages) before submitting.\n\n**Happy coding**!\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.072265625,
          "content": "The MIT License (MIT)\n\nCopyright (c) Beyond Code GmbH <hello@beyondco.de>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.837890625,
          "content": "# Laravel Dump Server\n\n[![Latest Version on Packagist](https://img.shields.io/packagist/v/beyondcode/laravel-dump-server.svg?style=flat-square)](https://packagist.org/packages/beyondcode/laravel-dump-server)\n[![Total Downloads](https://img.shields.io/packagist/dt/beyondcode/laravel-dump-server.svg?style=flat-square)](https://packagist.org/packages/beyondcode/laravel-dump-server)\n\nBringing the [Symfony Var-Dump Server](https://symfony.com/doc/current/components/var_dumper.html#the-dump-server) to Laravel.\n\nThis package will give you a dump server, that collects all your `dump` call outputs, so that it does not interfere with HTTP / API responses.\n\n## Installation\n\nYou can install the package via composer:\n\n```bash\ncomposer require --dev beyondcode/laravel-dump-server\n```\n\n## Documentation\n\nYou can find the documentation on the [Beyond Code website](https://beyondco.de/docs/laravel-dump-server/installation).\n\n## Looking for `dump` on steroids? Check out Laravel Herd!\n<img src=\"https://github.com/beyondcode/laravel-dump-server/assets/26432041/28a74ab1-35bd-42d1-bcfe-98e7f7101c1e\" alt=\"Herd logo\" style=\"width: 150px\"/>\n\n\nHerd Pro gives you a powerful interface to help you watch and collect your debug information.\n\nAll of your application's `dump()` and `dd()` calls will be beautifully formatted and can be filtered from Herd's separate Dump window.\n\nJust keep using `dump()` as usual â€“ Herd will take care of the rest.\n\n[herd.laravel.com](https://herd.laravel.com)\n\n## Contributing\n\nPlease see [CONTRIBUTING](CONTRIBUTING.md) for details.\n\n### Security\n\nIf you discover any security related issues, please email marcel@beyondco.de instead of using the issue tracker.\n\n## Credits\n\n- [Marcel Pociot](https://github.com/mpociot)\n- [All Contributors](../../contributors)\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.5634765625,
          "content": "{\n    \"name\": \"beyondcode/laravel-dump-server\",\n    \"description\": \"Symfony Var-Dump Server for Laravel\",\n    \"keywords\": [\n        \"beyondcode\",\n        \"laravel-dump-server\"\n    ],\n    \"homepage\": \"https://github.com/beyondcode/laravel-dump-server\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Marcel Pociot\",\n            \"email\": \"marcel@beyondco.de\",\n            \"homepage\": \"https://beyondco.de\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"conflict\": {\n        \"spatie/laravel-ray\": \"*\"\n    },\n    \"require\": {\n        \"php\": \">=7.2.5\",\n        \"illuminate/console\": \"5.6.*|5.7.*|5.8.*|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n        \"illuminate/http\": \"5.6.*|5.7.*|5.8.*|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n        \"illuminate/support\": \"5.6.*|5.7.*|5.8.*|^6.0|^7.0|^8.0|^9.0|^10.0|^11.0\",\n        \"symfony/var-dumper\": \"^5.0|^6.0|^7.0\"\n    },\n    \"require-dev\": {\n        \"larapack/dd\": \"^1.0\",\n        \"phpunit/phpunit\": \"^7.0|^9.3|^10.5\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"BeyondCode\\\\DumpServer\\\\\": \"src\"\n        },\n        \"files\": [\n            \"helpers.php\"\n        ]\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"BeyondCode\\\\DumpServer\\\\Tests\\\\\": \"tests\"\n        }\n    },\n    \"scripts\": {\n        \"test\": \"vendor/bin/phpunit\",\n        \"test-coverage\": \"vendor/bin/phpunit --coverage-html coverage\"\n    },\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"extra\": {\n        \"laravel\": {\n            \"providers\": [\n                \"BeyondCode\\\\DumpServer\\\\DumpServerServiceProvider\"\n            ]\n        }\n    }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "helpers.php",
          "type": "blob",
          "size": 0.3623046875,
          "content": "<?php\n\nif (! function_exists('config_path')) {\n    /**\n     * Get the configuration path.\n     *\n     * This is a polyfill for the missing shorthand function in lumen.\n     *\n     * @param  string  $path\n     * @return string\n     */\n    function config_path($path = '')\n    {\n        return app()->basePath('config').($path ? DIRECTORY_SEPARATOR.$path : $path);\n    }\n}\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.5380859375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit bootstrap=\"vendor/autoload.php\"\n         backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         colors=\"true\"\n         verbose=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\">\n    <testsuites>\n        <testsuite name=\"BeyondCode Test Suite\">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}