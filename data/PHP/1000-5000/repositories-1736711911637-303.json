{
  "metadata": {
    "timestamp": 1736711911637,
    "page": 303,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "php-http/httplug",
      "stars": 2581,
      "defaultBranch": "2.x",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1435546875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.54296875,
          "content": ".editorconfig           export-ignore\n.gitattributes         export-ignore\n/.github/              export-ignore\n.gitignore             export-ignore\n/.php_cs.dist          export-ignore\n/.scrutinizer.yml      export-ignore\n/.styleci.yml          export-ignore\n/.travis.yml           export-ignore\n/phpspec.ci.yml        export-ignore\n/phpspec.yml.dist      export-ignore\n/phpstan-baseline.neon export-ignore\n/phpstan.neon.dist     export-ignore\n/phpunit.xml.dist      export-ignore\n/spec/                 export-ignore\n/tests/                export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.09375,
          "content": ".php-cs-fixer.php\n.php-cs-fixer.cache\n/build/\n/composer.lock\n/phpspec.yml\n/phpunit.xml\n/vendor/\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 0.2939453125,
          "content": "<?php\n\n$finder = PhpCsFixer\\Finder::create()\n    ->in(__DIR__.'/src')\n    ->name('*.php')\n;\n\n$config = (new PhpCsFixer\\Config())\n    ->setRiskyAllowed(true)\n    ->setRules([\n        '@Symfony' => true,\n        'trailing_comma_in_multiline' => false,\n    ])\n    ->setFinder($finder)\n;\n\nreturn $config;\n"
        },
        {
          "name": ".scrutinizer.yml",
          "type": "blob",
          "size": 0.1328125,
          "content": "filter:\n    paths: [src/*]\nchecks:\n    php:\n        code_rating: true\n        duplication: true\ntools:\n    external_code_coverage: true\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.3603515625,
          "content": "# Change Log\n\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n## [2.4.1] - 2024-09-23\n\n- Updated code to not raise warnings for nullable parameters in PHP 8.4.\n\n## [2.4.0] - 2023-04-14\n\n### Changed\n\n- Allow `psr/http-message` v2 in addition to v1\n- Deprecate `Http\\Client\\HttpClient`, use [PSR-18](https://www.php-fig.org/psr/psr-18/) instead\n\n## [2.3.0] - 2022-02-21\n\n### Changed\n\n- Enabled the `$onRejected` callback of `HttpRejectedPromise` to return a promise for implementing a retry\n  mechanism [#168](https://github.com/php-http/httplug/pull/168)\n\n## [2.2.0] - 2020-07-13\n\n### Changed\n\n- Support PHP 7.1-8.0\n\n## [2.1.0] - 2019-12-27\n\n### Changed\n\n- `Http\\Client\\Exception\\NetworkException` no longer extends `Http\\Client\\Exception\\RequestException`,\n  in accordance with [PSR-18](https://www.php-fig.org/psr/psr-18/)\n\n## [2.0.0] - 2018-10-31\n\nThis version is no BC break for consumers using HTTPlug. However, HTTP clients that\nimplement HTTPlug need to adjust because we add return type declarations.\n\n### Added\n\n- Support for PSR-18 (HTTP client).\n\n### Changed\n\n- **BC Break:** `HttpClient::sendRequest(RequestInterface $request)` has a return type annotation. The new\nsignature is `HttpClient::sendRequest(RequestInterface $request): ResponseInterface`.\n- **BC Break:** `RequestException::getRequest()` has a return type annotation. The new\nsignature is `RequestException::getRequest(): RequestInterface`.\n\n### Removed\n\n- PHP 5 support\n\n\n## [1.1.0] - 2016-08-31\n\n### Added\n\n- HttpFulfilledPromise and HttpRejectedPromise which respect the HttpAsyncClient interface\n\n\n## [1.0.0] - 2016-01-26\n\n### Removed\n\n- Stability configuration from composer\n\n\n## [1.0.0-RC1] - 2016-01-12\n\n### Changed\n\n- Updated package files\n- Updated promise dependency to RC1\n\n\n## [1.0.0-beta] - 2015-12-17\n\n### Added\n\n- Puli configuration and binding types\n\n### Changed\n\n- Exception concept\n\n\n## [1.0.0-alpha3] - 2015-12-13\n\n### Changed\n\n- Async client does not throw exceptions\n\n### Removed\n\n- Promise interface moved to its own repository: [php-http/promise](https://github.com/php-http/promise)\n\n\n## [1.0.0-alpha2] - 2015-11-16\n\n### Added\n\n- Async client and Promise interface\n\n\n## [1.0.0-alpha] - 2015-10-26\n\n### Added\n\n- Better domain exceptions.\n\n### Changed\n\n- Purpose of the library: general HTTP CLient abstraction.\n\n### Removed\n\n- Request options: they should be configured at construction time.\n- Multiple request sending: should be done asynchronously using Async Client.\n- `getName` method\n\n\n## 0.1.0 - 2015-06-03\n\n### Added\n\n- Initial release\n\n\n[Unreleased]: https://github.com/php-http/httplug/compare/v2.0.0...HEAD\n[2.0.0]: https://github.com/php-http/httplug/compare/v1.1.0...HEAD\n[1.1.0]: https://github.com/php-http/httplug/compare/v1.0.0...v1.1.0\n[1.0.0]: https://github.com/php-http/httplug/compare/v1.0.0-RC1...v1.0.0\n[1.0.0-RC1]: https://github.com/php-http/httplug/compare/v1.0.0-beta...v1.0.0-RC1\n[1.0.0-beta]: https://github.com/php-http/httplug/compare/v1.0.0-alpha3...v1.0.0-beta\n[1.0.0-alpha3]: https://github.com/php-http/httplug/compare/v1.0.0-alpha2...v1.0.0-alpha3\n[1.0.0-alpha2]: https://github.com/php-http/httplug/compare/v1.0.0-alpha...v1.0.0-alpha2\n[1.0.0-alpha]: https://github.com/php-http/httplug/compare/v0.1.0...v1.0.0-alpha\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.10546875,
          "content": "Copyright (c) 2014 Eric GELOEN <geloen.eric@gmail.com>\nCopyright (c) 2015 PHP HTTP Team <team@php-http.org>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.85546875,
          "content": "# HTTPlug\n\n[![Latest Version](https://img.shields.io/github/release/php-http/httplug.svg?style=flat-square)](https://github.com/php-http/httplug/releases)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE)\n[![Build Status](https://github.com/php-http/httplug/actions/workflows/ci.yml/badge.svg)](https://github.com/php-http/httplug/actions/workflows/ci.yml)\n[![Code Coverage](https://img.shields.io/scrutinizer/coverage/g/php-http/httplug.svg?style=flat-square)](https://scrutinizer-ci.com/g/php-http/httplug)\n[![Quality Score](https://img.shields.io/scrutinizer/g/php-http/httplug.svg?style=flat-square)](https://scrutinizer-ci.com/g/php-http/httplug)\n[![Total Downloads](https://img.shields.io/packagist/dt/php-http/httplug.svg?style=flat-square)](https://packagist.org/packages/php-http/httplug)\n\n[![Email](https://img.shields.io/badge/email-team@httplug.io-blue.svg?style=flat-square)](mailto:team@httplug.io)\n\n**HTTPlug, the HTTP client abstraction for PHP.**\n\n\n## Intro\n\nHTTP client standard built on [PSR-7](http://www.php-fig.org/psr/psr-7/) HTTP\nmessages. The HttpAsyncClient defines an asynchronous HTTP client for PHP.\n\nThis package also provides a synchronous HttpClient interface with the same\nmethod signature as the [PSR-18](http://www.php-fig.org/psr/psr-18/) client.\nFor synchronous requests, we recommend using PSR-18 directly.\n\n\n## History\n\nHTTPlug is the official successor of the [ivory http adapter](https://github.com/egeloen/ivory-http-adapter).\nHTTPlug is a predecessor of [PSR-18](http://www.php-fig.org/psr/psr-18/)\n\n\n## Install\n\nVia Composer\n\n``` bash\n$ composer require php-http/httplug\n```\n\n\n## Documentation\n\nPlease see the [official documentation](http://docs.php-http.org).\n\n\n## Testing\n\n``` bash\n$ composer test\n```\n\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE) for more information.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.0234375,
          "content": "{\n    \"name\": \"php-http/httplug\",\n    \"description\": \"HTTPlug, the HTTP client abstraction for PHP\",\n    \"keywords\": [\n        \"http\",\n        \"client\"\n    ],\n    \"homepage\": \"http://httplug.io\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Eric GELOEN\",\n            \"email\": \"geloen.eric@gmail.com\"\n        },\n        {\n            \"name\": \"Márk Sági-Kazár\",\n            \"email\": \"mark.sagikazar@gmail.com\",\n            \"homepage\": \"https://sagikazarmark.hu\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^7.1 || ^8.0\",\n        \"php-http/promise\": \"^1.1\",\n        \"psr/http-client\": \"^1.0\",\n        \"psr/http-message\": \"^1.0 || ^2.0\"\n    },\n    \"require-dev\": {\n        \"friends-of-phpspec/phpspec-code-coverage\": \"^4.1 || ^5.0 || ^6.0\",\n        \"phpspec/phpspec\": \"^5.1 || ^6.0 || ^7.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Http\\\\Client\\\\\": \"src/\"\n        }\n    },\n    \"scripts\": {\n        \"test\": \"vendor/bin/phpspec run\",\n        \"test-ci\": \"vendor/bin/phpspec run -c phpspec.ci.yml\"\n    }\n}\n"
        },
        {
          "name": "phpspec.ci.yml",
          "type": "blob",
          "size": 0.2509765625,
          "content": "suites:\n    client_suite:\n        namespace: Http\\Client\n        psr4_prefix: Http\\Client\nformatter.name: pretty\nextensions:\n    FriendsOfPhpSpec\\PhpSpec\\CodeCoverage\\CodeCoverageExtension: ~\ncode_coverage:\n    format: clover\n    output: build/coverage.xml\n"
        },
        {
          "name": "phpspec.yml.dist",
          "type": "blob",
          "size": 0.1103515625,
          "content": "suites:\n    client_suite:\n        namespace: Http\\Client\n        psr4_prefix: Http\\Client\nformatter.name: pretty\n"
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 0.67578125,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Client\\\\\\\\Exception\\\\\\\\HttpException\\\\:\\\\:create\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Exception/HttpException.php\n\n\t\t-\n\t\t\tmessage: \"#^Unsafe usage of new static\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Exception/HttpException.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Client\\\\\\\\Exception\\\\\\\\NetworkException\\\\:\\\\:setRequest\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Exception/NetworkException.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Client\\\\\\\\Exception\\\\\\\\RequestException\\\\:\\\\:setRequest\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Exception/RequestException.php\n"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.0888671875,
          "content": "includes:\n    - phpstan-baseline.neon\n\nparameters:\n    level: max\n    paths:\n        - src\n"
        },
        {
          "name": "puli.json",
          "type": "blob",
          "size": 0.2705078125,
          "content": "{\n    \"version\": \"1.0\",\n    \"name\": \"php-http/httplug\",\n    \"binding-types\": {\n        \"Http\\\\Client\\\\HttpAsyncClient\": {\n            \"description\": \"Async HTTP Client\"\n        },\n        \"Http\\\\Client\\\\HttpClient\": {\n            \"description\": \"HTTP Client\"\n        }\n    }\n}\n"
        },
        {
          "name": "spec",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}