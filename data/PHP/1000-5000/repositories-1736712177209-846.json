{
  "metadata": {
    "timestamp": 1736712177209,
    "page": 846,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "spatie/pdf-to-image",
      "stars": 1338,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3046875,
          "content": "; This file is for unifying the coding style for different editors and IDEs.\n; More information at http://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3525390625,
          "content": "# Path-based git attributes\n# https://www.kernel.org/pub/software/scm/git/docs/gitattributes.html\n\n# Ignore all test and documentation with \"export-ignore\".\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/.travis.yml        export-ignore\n/phpunit.xml.dist   export-ignore\n/.scrutinizer.yml   export-ignore\n/tests              export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.07421875,
          "content": "build\ncomposer.lock\ndocs\nvendor\n.php_cs.cache\n.phpunit.result.cache\n*.cache\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.587890625,
          "content": "# Changelog\n\nAll notable changes to `pdf-to-image` will be documented in this file\n\n## 3.1.0 - 2024-09-14\n\n### What's Changed\n\n* Add background color setting for the output image by @waithawoo in https://github.com/spatie/pdf-to-image/pull/239\n\n### New Contributors\n\n* @waithawoo made their first contribution in https://github.com/spatie/pdf-to-image/pull/239\n\n**Full Changelog**: https://github.com/spatie/pdf-to-image/compare/3.0.0...3.1.0\n\n## 3.0.0 - 2024-06-10\n\nThis release updates the package to a new major version, `v3.0.0`.\n\n### Major changes:\n\n- Dropped support for PHP versions < 8.2.\n- Many breaking API changes (see below).\n- Added support for saving multiple pages to images using `selectPages()`.\n- Native Backed Enum implementations to enforce allowed values in several places.\n- Dropped support for reading remote PDF files for security reasons.\n- Added property, argument and return types.\n- Removed Imagick instance creation in constructor, replaced calls to `readImage()` with `pingImage()` *(test suite runs ~33% faster)*.\n\n### Breaking API Changes\n\nThere are breaking API changes from v2 to v3. These changes streamline the developer experience, enhance understanding of the functionality of the methods, and reduce cognitive overload by simplifying method names.  See the updated `README.md` for a full list of the new API methods and method names.\n\n### Additional Changes\n\n- `php-cs-fixer` configuration and workflow was dropped in favor of Laravel Pint.\n- Readme updated to include all available methods, fix a few grammatical errors, etc.\n- Fixed several minor, previously unknown bugs.\n- Test coverage increased from ~65% to ~93%.\n- Pest upgraded to v2, migrated PHPUnit configuration to v10.\n- Unit tests were reorganized/restructured to be more manageable, and Pest configuration files were added.\n\n### What's Changed\n\n* Bump dependabot/fetch-metadata from 1.6.0 to 2.1.0 by @dependabot in https://github.com/spatie/pdf-to-image/pull/228\n* Major version: v3 by @patinthehat in https://github.com/spatie/pdf-to-image/pull/230\n\n**Full Changelog**: https://github.com/spatie/pdf-to-image/compare/2.3.0...3.0.0\n\n## 2.3.0 - 2024-03-07\n\n### What's Changed\n\n* Silently ignore pingImage failure and load number of pages lazily by @bobvandevijver in https://github.com/spatie/pdf-to-image/pull/187\n* Add Dependabot Automation by @patinthehat in https://github.com/spatie/pdf-to-image/pull/203\n* Fix failing tests by @patinthehat in https://github.com/spatie/pdf-to-image/pull/205\n* Add PHP 8.2 Support by @patinthehat in https://github.com/spatie/pdf-to-image/pull/202\n* Fix php-cs-fixer workflow by @patinthehat in https://github.com/spatie/pdf-to-image/pull/206\n* Minor dependabot auto-merge workflow improvements by @patinthehat in https://github.com/spatie/pdf-to-image/pull/220\n* Adding webp to the validOutputFormats by @ntaylor-86 in https://github.com/spatie/pdf-to-image/pull/221\n* Add PHP 8.3 to the test run workflow by @patinthehat in https://github.com/spatie/pdf-to-image/pull/223\n\n### New Contributors\n\n* @bobvandevijver made their first contribution in https://github.com/spatie/pdf-to-image/pull/187\n* @patinthehat made their first contribution in https://github.com/spatie/pdf-to-image/pull/203\n* @dependabot made their first contribution in https://github.com/spatie/pdf-to-image/pull/204\n\n**Full Changelog**: https://github.com/spatie/pdf-to-image/compare/2.2.0...2.3.0\n\n## 2.2.0 - 2022-03-08\n\n## What's Changed\n\n- Converting PHPUnit to Pest tests by @ntaylor-86 in https://github.com/spatie/pdf-to-image/pull/189\n- Adding a thumbnail method by @ntaylor-86 in https://github.com/spatie/pdf-to-image/pull/188\n\n## New Contributors\n\n- @ntaylor-86 made their first contribution in https://github.com/spatie/pdf-to-image/pull/189\n\n**Full Changelog**: https://github.com/spatie/pdf-to-image/compare/2.1.0...2.2.0\n\n## 2.1.0 - 2020-11-12\n\n- add support for PHP 8\n\n## 2.0.1 - 2020-04-29\n\n- add usage of Imagick `pingImage` to speedup the page count\n\n## 2.0.0 - 2020-01-08\n\n- added typehints\n- removal of ability of loading pdfs via URLs\n\n## 1.8.2 - 2019-07-31\n\n- add exception message to `PdfDoesNotExist`\n\n## 1.8.1 - 2018-06-02\n\n- throw exception when trying to fetch a negative page number\n\n## 1.8.0 - 2018-04-03\n\n- add method getOutputFormat and update saveImage for auto set filename\n\n## 1.7.0 - 2018-03-14\n\n- make `imagick` public\n\n## 1.6.1 - 2018-03-14\n\n- fix bug around `setCompressionQuality`\n\n## 1.6.0 - 2017-12-20\n\n- add `setCompressionQuality`\n\n## 1.5.0 - 2017-10-11\n\n- add `setColorspace`\n\n## 1.4.6 - 2017-10-11\n\n- fix remote pdf handling\n\n## 1.4.5 - 2017-07-18\n\n- fix flattening of pdf\n\n## 1.4.4 - 2017-07-07\n\n- fix where `getNumberOfPages` would report the wrong number when looping through the pdf\n\n## 1.4.3 - 2017-07-07\n\n- fix bugs introduced in 1.4.2\n\n## 1.4.2 - 2017-07-01\n\n- fix for setting custom resolution\n\n## 1.4.1 - 2017-06-28\n\n- fix `setLayerMethod` method\n\n## 1.4.0 - 2017-06-15\n\n- add `setLayerMethod` method\n\n## 1.3.3 - 2017-04-25\n\n- remove use of `Imagick::LAYERMETHOD_FLATTEN` as it messes up the rendering of specific pages\n\n## 1.3.2 - 2017-04-25\n\n- set default format\n\n## 1.3.1 - 2017-04-16\n\n- performance improvements\n\n## 1.3.0 - 2017-03-23\n\n- allow pdf to be loaded from a URL\n\n## 1.2.2 - 2016-12-14\n\n- improve return value\n\n## 1.2.1 - 2016-09-08\n\n- fix for pdf's with transparent backgrounds\n\n## 1.2.0 - 2016-04-29\n\n- added `saveAllPagesAsImages`-function.\n\n## 1.1.0 - 2015-04-13\n\n- added `getImageData`-function.\n\n## 1.0.3 - 2015-01-22\n\n### Bugfix\n\n- Exceptions now live in the right namespace.\n\n## 1.0.1 - 2015-07-03\n\n### Bugfix\n\n- setPage is now working as excepted.\n\n## 1.0.0 - 2015-07-02\n\n### Added\n\n- It's so first release, so everything was added.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.064453125,
          "content": "The MIT License (MIT)\n\nCopyright (c) Spatie bvba <info@spatie.be>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.4384765625,
          "content": "# Convert a PDF to an image\n\n[![Latest Version on Packagist](https://img.shields.io/packagist/v/spatie/pdf-to-image.svg?style=flat-square)](https://packagist.org/packages/spatie/pdf-to-image)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE.md)\n[![Quality Score](https://img.shields.io/scrutinizer/g/spatie/pdf-to-image.svg?style=flat-square)](https://scrutinizer-ci.com/g/spatie/pdf-to-image)\n[![Total Downloads](https://img.shields.io/packagist/dt/spatie/pdf-to-image.svg?style=flat-square)](https://packagist.org/packages/spatie/pdf-to-image)\n\nThis package provides an easy-to-work-with class to convert a PDF to one or more image.\n\n## Requirements\n\nYou should have [Imagick](http://php.net/manual/en/imagick.setresolution.php) and [Ghostscript](http://www.ghostscript.com/) installed. \nSee [issues regarding Ghostscript](#issues-regarding-ghostscript) and [Imagick Issues](#imagick-issues) for more information.\n\n## Installation\n\nThe package can be installed via composer and requires PHP 8.2+:\n\n```bash\ncomposer require spatie/pdf-to-image\n```\n\n> If you are using PHP < 8.2, use version 2.0 of this package.\n\n## Usage\n\nConverting a PDF to an image is easy.\n\n```php\n$pdf = new \\Spatie\\PdfToImage\\Pdf($pathToPdf);\n$pdf->save($pathToWhereImageShouldBeStored);\n```\n\nIf the filename you pass to `saveImage` has the extensions `jpg`, `jpeg`, `png`, or `webp` the image will be saved in that format; otherwise the output format will be `jpg`.\n\nThe `save()` method returns an array with the filenames of the saved images if multiple images are saved, otherwise returns a string with the path to the saved image.\n\n## Other methods\n\nGet the total number of pages in the pdf:\n\n```php\n/** @var int $numberOfPages */\n$numberOfPages = $pdf->pageCount();\n```\n\nCheck if a file type is a supported output format:\n\n```php\n/** @var bool $isSupported */\n$isSupported = $pdf->isValidOutputFormat('jpg');\n```\n\nBy default, only the first page of the PDF will be rendered. To render another page, call the `selectPage()` method:\n\n```php\n$pdf->selectPage(2)\n    ->save($pathToWhereImageShouldBeStored); //saves the second page\n```\n\nOr, select multiple pages with the `selectPages()` method:\n\n```php\n$pdf->selectPages(2, 4, 5)\n    ->save($directoryToWhereImageShouldBeStored); //saves the 2nd, 4th and 5th pages\n```\n\nChange the output format:\n\n```php\n$pdf->format(\\Spatie\\PdfToImage\\Enums\\OutputFormat::Webp)\n    ->save($pathToWhereImageShouldBeStored); //the saved image will be in webp format\n```\n\nSet the output quality _(the compression quality)_ from 0 to 100:\n\n```php\n$pdf->quality(90) // set an output quality of 90%\n    ->save($pathToWhereImageShouldBeStored);\n```\n\nSet the output resolution DPI:\n\n```php\n$pdf->resolution(300) // resolution of 300 dpi\n    ->save($pathToWhereImageShouldBeStored);\n```\n\nSpecify the thumbnail size of the output image:\n\n```php\n$pdf\n   ->thumbnailSize(400) // set thumbnail width to 400px; height is calculated automatically\n   ->save($pathToWhereImageShouldBeStored);\n\n// or:\n$pdf\n   ->thumbnailSize(400, 300) // set thumbnail width to 400px and the height to 300px\n   ->save($pathToWhereImageShouldBeStored);\n```\n\nSet the output image width:\n\n```php\n$pdf->size(400) // set the width to 400px; height is calculated automatically\n    ->save($pathToWhereImageShouldBeStored);\n```\n\nSet the output image width and height:\n\n```php\n$pdf->size(400, 300) // set the width to 400px and the height to 300px\n    ->save($pathToWhereImageShouldBeStored);\n```\n\nGet the dimensions of the PDF. This can be used to determine if the PDF is extremely high-resolution.\n\n```php\n/** @var \\Spatie\\PdfToImage\\DTOs\\PageSize $size */\n$size = $pdf->getSize();\n\n$width = $size->width;\n$height = $size->height;\n```\n\n> [!NOTE]\n> $directoryToWhereImagesShouldBeStored must be an existing directory\n\nSave all pages to images:\n\n```php\n$pdf->saveAllPages($directoryToWhereImagesShouldBeStored);\n```\n\nSet the Merge Layer Method for Imagick:\n\n```php\n$pdf->layerMethod(\\Spatie\\PdfToImage\\Enums\\LayerMethod::Merge);\n\n// or disable layer merging:\n$pdf->layerMethod(\\Spatie\\PdfToImage\\Enums\\LayerMethod::None);\n```\n\nSet the background color of the output image:\n\n```php\n$pdf->backgroundColor('white') // simple text for 'white' color\n    ->save($pathToWhereImageShouldBeStored);\n\n$pdf->backgroundColor('#fff') // code for 'white' color\n    ->save($pathToWhereImageShouldBeStored);\n\n$pdf->backgroundColor('rgb(255,255,255)') // rgb for 'white' color\n    ->save($pathToWhereImageShouldBeStored);\n```\n\n## Issues regarding Ghostscript\n\nThis package uses Ghostscript through Imagick. For this to work Ghostscripts `gs` command should be accessible from the PHP process. For the PHP CLI process (e.g. Laravel's asynchronous jobs, commands, etc...) this is usually already the case. \n\nHowever for PHP on FPM (e.g. when running this package \"in the browser\") you might run into the following problem:\n\n```\nUncaught ImagickException: FailedToExecuteCommand 'gs'\n```\n\nThis can be fixed by adding the following line at the end of your `php-fpm.conf` file and restarting PHP FPM. If you're unsure where the `php-fpm.conf` file is located you can check `phpinfo()`. If you are using Laravel Valet the `php-fpm.conf` file will be located in the `/usr/local/etc/php/YOUR-PHP-VERSION` directory.\n\n```\nenv[PATH] = /usr/local/bin:/usr/bin:/bin\n```\n\nThis will instruct PHP FPM to look for the `gs` binary in the right places.\n\n## Imagick Issues\n\nIf you receive an error with the message `attempt to perform an operation not allowed by the security policy 'PDF'`, you may need to add the following line to your `policy.xml` file. This file is usually located in `/etc/ImageMagick-[VERSION]/policy.xml`, such as `/etc/ImageMagick-7/policy.xml`.\n\n```xml\n<policy domain=\"coder\" rights=\"read | write\" pattern=\"PDF\" />\n```\n\n## Testing\n\n`spatie/pdf-to-image` uses the PEST framework for unit tests. They can be run with the following command:\n\n``` bash\n./vendor/bin/pest\n```\n\n## Changelog\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information on what has changed recently.\n\n## Contributing\n\nPlease see [CONTRIBUTING](https://github.com/spatie/.github/blob/main/CONTRIBUTING.md) for details.\n\n## Security Vulnerabilities\n\nPlease review [our security policy](../../security/policy) on how to report security vulnerabilities.\n\n## Credits\n\n- [Freek Van der Herten](https://github.com/freekmurze)\n- [Patrick Organ](https://github.com/patinthehat)\n- [All Contributors](../../contributors)\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.17578125,
          "content": "{\n    \"name\": \"spatie/pdf-to-image\",\n    \"description\": \"Convert a pdf to an image\",\n    \"keywords\": [\n        \"spatie\",\n        \"pdf-to-image\",\n        \"pdf\",\n        \"convert\",\n        \"image\"\n    ],\n    \"homepage\": \"https://github.com/spatie/pdf-to-image\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Freek Van der Herten\",\n            \"email\": \"freek@spatie.be\",\n            \"homepage\": \"https://spatie.be\",\n            \"role\": \"Developer\"\n        },\n        {\n            \"name\": \"Patrick Organ\",\n            \"email\": \"patrick@permafrost.dev\",\n            \"homepage\": \"https://permafrost.dev\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"require\": {\n        \"php\" : \"^8.2\",\n        \"ext-imagick\" : \"*\"\n    },\n    \"require-dev\": {\n        \"pestphp/pest\": \"^2.34\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Spatie\\\\PdfToImage\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Spatie\\\\PdfToImage\\\\Test\\\\\": \"tests\"\n        }\n    },\n    \"scripts\": {\n        \"test\": \"vendor/bin/pest\"\n    },\n    \"config\": {\n        \"sort-packages\": true,\n        \"allow-plugins\": {\n            \"pestphp/pest-plugin\": true\n        }\n    }\n}\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.8427734375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" bootstrap=\"vendor/autoload.php\" backupGlobals=\"false\" colors=\"true\" processIsolation=\"false\" stopOnFailure=\"false\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.5/phpunit.xsd\" cacheDirectory=\".phpunit.cache\" backupStaticProperties=\"false\">\n  <coverage>\n    <report>\n      <clover outputFile=\"build/logs/clover.xml\"/>\n      <html outputDirectory=\"build/coverage\"/>\n      <text outputFile=\"build/coverage.txt\"/>\n    </report>\n  </coverage>\n  <testsuites>\n    <testsuite name=\"League Test Suite\">\n      <directory>tests</directory>\n    </testsuite>\n  </testsuites>\n  <logging>\n    <junit outputFile=\"build/report.junit.xml\"/>\n  </logging>\n  <source>\n    <include>\n      <directory suffix=\".php\">src/</directory>\n    </include>\n  </source>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}