{
  "metadata": {
    "timestamp": 1736712182688,
    "page": 858,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "reactjs/react-php-v8js",
      "stars": 1327,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0341796875,
          "content": "example/node_modules\nexample/build\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4814453125,
          "content": "BSD License for React-PHP-V8Js\n\nCopyright (c) 2014, Facebook, Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n * Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n * Neither the name Facebook nor the names of its contributors may be used to\n   endorse or promote products derived from this software without specific\n   prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "PATENTS",
          "type": "blob",
          "size": 1.9365234375,
          "content": "Additional Grant of Patent Rights Version 2\n\n\"Software\" means the React-PHP-V8Js software distributed by Facebook, Inc.\n\nFacebook, Inc. (\"Facebook\") hereby grants to each recipient of the Software\n(\"you\") a perpetual, worldwide, royalty-free, non-exclusive, irrevocable\n(subject to the termination provision below) license under any Necessary\nClaims, to make, have made, use, sell, offer to sell, import, and otherwise\ntransfer the Software. For avoidance of doubt, no license is granted under\nFacebook's rights in any patent claims that are infringed by (i) modifications\nto the Software made by you or any third party or (ii) the Software in\ncombination with any software or other technology.\n\nThe license granted hereunder will terminate, automatically and without notice,\nif you (or any of your subsidiaries, corporate affiliates or agents) initiate\ndirectly or indirectly, or take a direct financial interest in, any Patent\nAssertion: (i) against Facebook or any of its subsidiaries or corporate\naffiliates, (ii) against any party if such Patent Assertion arises in whole or\nin part from any software, technology, product or service of Facebook or any of\nits subsidiaries or corporate affiliates, or (iii) against any party relating\nto the Software. Notwithstanding the foregoing, if Facebook or any of its\nsubsidiaries or corporate affiliates files a lawsuit alleging patent\ninfringement against you in the first instance, and you respond by filing a\npatent infringement counterclaim in that lawsuit against that party that is\nunrelated to the Software, the license granted hereunder will not terminate\nunder section (i) of this paragraph due to such counterclaim.\n\nA \"Necessary Claim\" is a claim of a patent owned by Facebook that is\nnecessarily infringed by the Software standing alone.\n\nA \"Patent Assertion\" is any lawsuit or other action alleging direct, indirect,\nor contributory infringement or inducement to infringe any patent, including a\ncross-claim or counterclaim.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8095703125,
          "content": "React-PHP-V8Js\n===========\n\nReact-PHP-V8Js is an experimental library that uses the power of Facebook's\n[React](http://facebook.github.io/react/) library to render UI components\non the server-side with PHP as well as on the client.\n\nPrerequisites\n===========\n* Server running PHP 5.3.3+\n* [V8Js PHP extension](http://php.net/v8js)\n\nFor a walkthrough how to setup V8Js PHP extension, use the links below:\n\n- [On Linux](https://github.com/preillyme/v8js/blob/master/README.Linux.md)\n- [On MacOS](https://github.com/preillyme/v8js/blob/master/README.MacOS.md)\n- [On Windows](https://github.com/preillyme/v8js/blob/master/README.Win32.md)\n\nUsage\n===========\n```php\n// the library\n$react_source = file_get_contents('/path/to/build/react.js');\n// all custom code concatenated\n$app_source = file_get_contents('/path/to/custom/components.js');\n\n$rjs = new ReactJS($react_source, $app_source);\n$rjs->setComponent('MyComponent', array(\n  'any'   =>  1,\n  'props' =>  2\n  )\n);\n\n/// ...\n\n// print rendered markup\necho '<div id=\"here\">' . $rjs->getMarkup() . '</div>';\n\n/// ...\n\n// load JavaScript somehow - concatenated, from CDN, etc\n// including react.js and custom/components.js\n\n// init client\necho '<script>' . $rjs->getJS(\"#here\") . '</script>'; \n\n/// ...\n\n// repeat setComponent(), getMarkup(), getJS() as necessary\n// to render more components\n```\n\nLicense\n=======\nBSD License for React-PHP-V8Js\n\nCopyright (c) 2014, Facebook, Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n * Neither the name Facebook nor the names of its contributors may be used to\n   endorse or promote products derived from this software without specific\n   prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
        },
        {
          "name": "ReactJS.php",
          "type": "blob",
          "size": 4.591796875,
          "content": "<?php\n/**!\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * A PHP class to render React components on the server\n * and then hook the components on the client side.\n * Requires V8JS PHP extension: http://php.net/v8js\n */\nclass ReactJS {\n\n  private\n    /**\n     * Name of the component to render\n     * @var string\n     */\n    $component,\n\n    /**\n     * Properties that go along with the component\n     * @var mixed\n     */\n    $data = null,\n\n    /**\n     * Instance of V8Js class\n     * @var object\n     */\n    $v8,\n\n    /**\n     * Custom error handler\n     * @var callable\n     */\n    $errorHandler;\n\n  /**\n   * Initialize by passing JS code as a string.\n   * The application source code is concatenated string\n   * of all custom components and app code\n   *\n   * @param string $libsrc React's source code\n   * @param string $appsrc Application source code\n   */\n  function __construct($libsrc, $appsrc) {\n    $react = array();\n    // stubs, react\n    $react[] = \"var console = {warn: function(){}, error: print};\";\n    $react[] = \"var global = global || this, self = self || this, window = window || this;\";\n    $react[] = $libsrc;\n    $react[] = \"var React = global.React, ReactDOM = global.ReactDOM, ReactDOMServer = global.ReactDOMServer;\";\n    // app's components\n    $react[] = $appsrc;\n    $react[] = ';';\n\n    $concatenated = implode(\";\\n\", $react);\n\n    $this->v8 = new V8Js();\n    $this->executeJS($concatenated);\n  }\n\n  /**\n   * Which components is to be rendered along with it's data\n   * E.g.\n   *   $rjs->setComponent('MyTable', array('content' => $q4_results));\n   *\n   * @param string $component Component name\n   * @param mixed $data Any type of data to be passed as params\n   *              when initializing the component. Optional.\n   * @return object $this instance\n   */\n  function setComponent($component, $data = null) {\n    $this->component = $component;\n    $this->data = json_encode($data);\n    return $this;\n  }\n\n  /**\n   * Custom error handler. The default one var_dumps the exception\n   * and die()s.\n   *\n   * @param callable $err Callback passed to call_user_func()\n   * @return object $this instance\n   */\n  function setErrorHandler($err) {\n    $this->errorHandler = $err;\n    return $this;\n  }\n\n  /**\n   * Returns the markup to print to the page\n   *\n   * @return string HTML string\n   */\n  function getMarkup() {\n    $js = sprintf(\n      \"print(ReactDOMServer.renderToString(React.createElement(%s, %s)))\",\n      $this->component,\n      $this->data);\n\n    return $this->executeJS($js);\n  }\n\n  /**\n   * Returns JS to be inlined in the page (without <script> tags)\n   * It instantiates the client side, once the JS arrives\n   *\n   * NOTE: This class makes no attempt to load files JS so you can load it\n   * however is appropriate - from a CDN, asynchronously, etc.\n   *\n   * e.g. getJS('document.body');\n   *     renders in body and doesn't retain a var\n   * e.g. getJS('#page', \"GLOB\");\n   *      renders in element id=\"page\" and assigns the component to\n   *      a JavaScript variable named GLOB for later use if needed\n   * @param string $where A reference to a DOM object, or an ID\n   *               for convenience if prefixed by a #. E.g. \"#page\"\n   *               It will be passed to document.getElementById('page')\n   * @param string $return_var Optional name of JS variable to be assigned to\n   *               the rendered component\n   * @return string JS code\n   */\n  function getJS($where, $return_var = null) {\n    // special case for IDs\n    if (substr($where, 0, 1) === '#') {\n      $where = sprintf(\n        'document.getElementById(\"%s\")',\n        substr($where, 1)\n      );\n    }\n    return\n      ($return_var ? \"var $return_var = \" : \"\") .\n      sprintf(\n        \"ReactDOM.render(React.createElement(%s, %s), %s);\",\n        $this->component,\n        $this->data,\n        $where\n      );\n  }\n\n  /**\n   * Executes Javascript using V8JS, with primitive exception handling\n   *\n   * @param string $js JS code to be executed\n   * @return string The execution response\n   */\n  private function executeJS($js) {\n    try {\n      ob_start();\n      $this->v8->executeString($js);\n      return ob_get_clean();\n    } catch (V8JsException $e) {\n      if ($this->errorHandler) {\n        call_user_func($this->errorHandler, $e);\n      } else {\n        // default error handler blows up bad\n        echo \"<pre>\";\n        echo $e->getMessage();\n        echo \"</pre>\";\n        die();\n      }\n    }\n  }\n\n}\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.236328125,
          "content": "{\n  \"name\": \"reactjs/react-php-v8js\",\n  \"description\": \"PHP library that renders React components on the server\",\n  \"require\": {\n    \"ext-v8js\": \">=0.1.3\"\n  },\n  \"license\": \"BSD-3-Clause\",\n  \"autoload\": {\n    \"classmap\": [\"ReactJS.php\"]\n  }\n}"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}