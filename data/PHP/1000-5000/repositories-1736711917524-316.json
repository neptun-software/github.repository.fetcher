{
  "metadata": {
    "timestamp": 1736711917524,
    "page": 316,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lexik/LexikJWTAuthenticationBundle",
      "stars": 2537,
      "defaultBranch": "3.x",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.158203125,
          "content": ".* export-ignore\n*.rst export-ignore\n*.md export-ignore\nResources/doc export-ignore\nTests export-ignore\nphpunit.xml.dist export-ignore\nphpstan.neon export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0595703125,
          "content": "phpunit.xml\nbuild\nvendor\ncomposer.lock\n.phpunit.result.cache\n"
        },
        {
          "name": ".symfony.bundle.yaml",
          "type": "blob",
          "size": 0.154296875,
          "content": "branches: ['1.x', '2.x', '3.x']\nmaintained_branches: ['2.x', '3.x']\ncurrent_branch: \"3.x\"\ndev_branch: \"3.x\"\ndoc_dir: 'Resources/doc/'\ndev_branch_alias: '3.x'\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 43.2197265625,
          "content": "CHANGELOG\n=========\n\nFor a diff between two versions https://github.com/lexik/LexikJWTAuthenticationBundle/compare/v1.0.0...v3.1.1\n\n## [3.1.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v3.1.1) (2025-01-06)\n\n* bug [\\#1267](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1267) Fix wrongly silenced signing failure ([@BackEndTea](https://github.com/BackEndTea))\n* bug [\\#1259](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1259) fix issue #1258 JWTCookieProvider does set flags cookie flags when value is false ([@mustapayev](https://github.com/mustapayev))\n* bug [\\#1225](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1225) Fix default values in WebToken services when encryption disabled ([@NeuralClone](https://github.com/NeuralClone))\n* bug [\\#1238](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1238) chore: add testrun for PHP 8.4. Fix implicit nullable parameter ([@Chris8934](https://github.com/Chris8934), [@chalasr](https://github.com/chalasr))\n\n## [3.1.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v3.1.0) (2024-07-03)\n\n* bug [\\#1226](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1226) feature: fix deprecation of Extension ([@Chris8934](https://github.com/Chris8934))\n\n## [3.0.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v3.0.0) (2024-05-05)\n\n* feature [\\#1202](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1202) Remove support for Symfony <6.4 and PHP <8.2 ([@maxhelias](https://github.com/maxhelias))\n* feature [\\5b5400b](https://github.com/lexik/LexikJWTAuthenticationBundle/commit/5b5400b) Remove namshi/jose on 3.x ([@maxhelias](https://github.com/maxhelias))\n* feature [\\#1056](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1056) Drop PHP <7.1 and Symfony <5.3 support ([@wouter-toppy](https://github.com/wouter-toppy))\n\n## [2.21.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.21.0) (2024-04-27)\n\n* feature [\\#1218](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1170) Invalidate a JWT token ([@ldaspt](https://github.com/ldaspt))\n* feature [\\#1170](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1170) Invalidate a JWT token ([@ldaspt](https://github.com/ldaspt))\n* feature [\\#1207](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1207) Web-Token Framework simplified ([@Spomky](https://github.com/Spomky))\n* bug [\\60770f1](https://github.com/lexik/LexikJWTAuthenticationBundle/commit/60770f1fb9ec0b8b0f27a0ee9e2bf441ca4a1db9) Fix CI & web-token encryption support ([@Spomky](https://github.com/Spomky))\n\n## [2.20.3](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.20.3) (2023-12-14)\n\n* bug [\\#1184](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1174) Wrong type exception for AccessTokenLoader with certain configuration ([@athanasius-kircher](https://github.com/athanasius-kircher))\n* bug [\\#1183](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1174) Fix for PHP <7.4 compatibility ([@fracsi](https://github.com/fracsi))\n\n## [2.20.2](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.20.2) (2023-12-05)\n\n* bug [\\#1174](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1174) Fix for PHP <7.4 compatibility ([@fracsi](https://github.com/fracsi))\n\n## [2.20.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.20.1) (2023-12-02)\n\n* bug [\\#1172](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1172) Removed constructor property promotion to fix compatibility with PHP 7.x ([@webhdx](https://github.com/webhdx))\n\n## [2.20.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.20.0) (2023-12-01)\n\n* feature [\\#1041](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1041) WebToken support integration ([@Spomky](https://github.com/Spomky))\n* feature [\\#1159](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1159) Added: JWT security scheme to openapi ([@Ninos](https://github.com/Ninos))\n* feature [\\#1167](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1167) add support for partitioned cookies ([@EmilePerron](https://github.com/EmilePerron))\n* feature [\\#1165](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1165) Support Symfony 7 ([@endroid](https://github.com/endroid), [@chalasr](https://github.com/chalasr))\n\n## [2.19.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.19.1) (2023-07-03)\n\n* bug [\\#1149](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1149) add description to authentication path ([@Altherius](https://github.com/Altherius))\n* bug [\\#1144](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1144) Fix missing array claims BC break in 2.9.0 ([@ostrolucky](https://github.com/ostrolucky))\n\n## [2.19.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.19.0) (2023-06-05)\n\n* bug [\\#1119](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1119) Fix API Platform integration ([@maxhelias](https://github.com/maxhelias))\n* bug [\\#1120](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1120) Remove deprecation symfony 6.3 ([@maxhelias](https://github.com/maxhelias))\n* bug [\\#1133](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1133) Fixed issue with option user_id_claim ([@koftikes](https://github.com/koftikes))\n* bug [\\#1134](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1134) Fix ForwardCompatAuthenticatorTrait with OPCache preload ([@elavrom](https://github.com/elavrom))\n* feature [\\#1125](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1125) Allow lcobucci/jwt v5 ([@maxhelias](https://github.com/maxhelias))\n\n## [2.18.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.18.1) (2023-13-02)\n\n* bug [\\#1115](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1115) Fix compatibility with lcobucci v3.4 ([maxhelias](https://github.com/maxhelias))\n\n## [2.18.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.18) (2023-08-02)\n\n* bug [\\#1109](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1109) Replaced deprecated ValidAt() with LooseValidAt() ([carcabot](https://github.com/carcabot))\n* feature [\\#1112](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1112) Better API Platform and json_login compatibility ([alanpoulain](https://github.com/alanpoulain))\n\n## [2.17.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.17) (2023-03-02)\n\n* bug [\\#1110](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1110) Use the Security domain for translated messages ([jderusse](https://github.com/jderusse))\n* bug [\\#1105](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1105) Fix creation of dynamic property ([SpartakusMd](https://github.com/SpartakusMd))\n* feature [\\#1098](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1098) Add API Platform compatibility ([vincentchalamon](https://github.com/vincentchalamon))\n* bug [\\#1096](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1096) Test under Symfony 6.2 / PHP 8.2 ([chalasr](https://github.com/chalasr))\n* feature [\\#1092](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1092) allow environment variables for `remove_token_from_body_when_cookies_used` ([usu](https://github.com/usu))\n* bug [\\#1067](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1067) Fixes TypeError in JWTManager ([magikid](https://github.com/magikid))\n* feature [\\#1072](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1072) Inject Clock in LcobucciJWSProvider ([dbrumann](https://github.com/dbrumann))\n* bug [\\#1069](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1069) Improve user_identity_field deprecation message ([lobodol](https://github.com/lobodol))\n* feature [\\#1046](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1046) try to invalidate realpath cache if keypair loading failed ([lobodol](https://github.com/lobodol))\n\n## [2.16.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.16) (2022-06-12)\n\n* feature [\\#1037](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1037) Deprecate user_identity_field config option ([chalasr](https://github.com/chalasr))\n* feature [\\#1020](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1020) Add `allow_no_expiration` option to allow validating tokens without ttl ([pluk77](https://github.com/pluk77))\n* bug [\\#1019](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1019) Fix lexik#944: Separate CompatFailureResponse from FailureResponse ([GErpeldinger](https://github.com/GErpeldinger))\n* bug [\\#1015](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1015) Fix ECDSA algo names in LcobucciJWSProvider ([lovenunu](https://github.com/lovenunu))\n* feature [\\#1007](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1007) Allow for creation of tokens without exp ([pluk77](https://github.com/pluk77))\n* bug [\\#1001](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/1001) Fix deprecations on Symfony 6.1 ([chalasr](https://github.com/chalasr))\n\n_## [2.15.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.15) (2022-04-06)_\n\n* bug [\\#999](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/999) Unify audience claim ([aerrasti](https://github.com/aerrasti))\n* feature [\\#995](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/995) Add Request object into AuthenticationFailureEvent ([dmytro-shulyakov](https://github.com/dmytro-shulyakov))\n\n## [2.15.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.15) (2022-04-04)\n\n* feature [\\#995](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/995) Add Request object into AuthenticationFailureEvent ([dmytro-shulyakov](https://github.com/dmytro-shulyakov))\n* bug [\\#982](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/982) Fix a type related depreciation with php 8.1 ([RiffFred](https://github.com/RiffFred))\n* feature [\\#973](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/973) Translate message errors ([flohw](https://github.com/flohw))\n* bug [\\#976](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/976) Fix authentication with integer as useridentifier ([Floruzus](https://github.com/Floruzus))\n\n## [2.14.4](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.14) (2022-01-05)\n\n* bug [\\#972](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/972) Typo-Fix in the ChainUserProvider ([KhorneHoly](https://github.com/KhorneHoly))\n\n## [2.14.3](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.14) (2021-12-15)\n\n* feature [\\#940](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/940) Add `remove_token_from_body_when_cookies_used` config option ([TjorvenB](https://github.com/TjorvenB))\n* feature [\\#928](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/928) Add support of multiple public keys to verify tokens with a set of keys ([alexandre-daubois](https://github.com/alexandre-daubois))\n* feature [\\#958](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/958) Allowing session cookie (split cookie) ([JeremyPasco](https://github.com/JeremyPasco))\n* bug [\\#969](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/969) Fix PHP 8.1 deprecation - avoid passing null to is_file() ([chalasr](https://github.com/chalasr))\n* bug [\\#966](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/966) fix getIterator compatible with php 8.1 ([eerison](https://github.com/eerison))\n\n## [2.14.2](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.14) (2021-12-05)\n\n* bug [\\#961](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/961) Allow symfony/deprecations-contract v3.0 ([bravik](https://github.com/bravik))\n* bug [\\#951](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/951) Test  instanceof Passport instead of more restrictive SelfValidatingPassport ([TristanPouliquen](https://github.com/TristanPouliquen))\n\n## [2.14.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.14) (2021-11-02)\n\n* bug [\\#942](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/942) Fix Symfony 5.3 compatibility ([chalasr](https://github.com/chalasr))\n\n## [2.14.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.14) (2021-11-01)\n\n* feature [\\#923](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/923) Add 3 new getter method to JWTTokenAuthenticator ([fd6130](https://github.com/fd6130))\n* bug [\\#931](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/931) Only attempt split_cookie extraction if all of the cookies are present ([carlobeltrame](https://github.com/carlobeltrame))\n* feature [\\#925](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/925) Allow to set provider in jwt authenticator ([fd6130](https://github.com/fd6130))\n* feature [\\#937](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/937) Symfony 6 Compatibility ([mbabker](https://github.com/mbabker))\n* bug [\\#922](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/922) Fix error when trying to decode token using new authenticator system ([fd6130](https://github.com/fd6130))\n\n## [2.13.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.13) (2021-09-15)\n\n* feature [\\#916](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/916) Allow to use custom authenticator by extending JWTAuthenticator ([fd6130](https://github.com/fd6130))\n* bug [\\#914](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/914) Bundle breaks application if Symfony Console not installed ([yivi](https://github.com/yivi))\n* feature [\\#912](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/912) Added argument to AuthenticationSuccessHandler to stop token from being removed from response  ([naitsirch](https://github.com/naitsirch))\n* bug [\\#905](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/905) Changed `JWTAuthenticator::start` method return type to more generic `Response` type ([aurimasniekis](https://github.com/aurimasniekis))\n* feature [\\#903](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/903) Implement `AuthenticatorInterface::createToken()` (Symfony 5.4) ([chalasr](https://github.com/chalasr))\n\n## [2.12.6](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.12.6) (2021-07-30)\n\n* bug 66ec1e0 Fix missing import ([chalasr](https://github.com/chalasr))\n\n## [2.12.5](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.12.5) (2021-07-29)\n\n* bug [\\#897](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/897) Fix unexpected deprecation about Guard (bis) ([chalasr](https://github.com/chalasr))\n\n## [2.12.4](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.12.4) (2021-07-28)\n\n* bug [\\#895](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/895) Fix unexpected deprecation about Guard ([chalasr](https://github.com/chalasr))\n\n## [2.12.3](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.12.3) (2021-07-7)\n\n* bug [\\#887](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/887) JWTAuthenticator logic fix ([ergnuor](https://github.com/ergnuor))\n\n## [2.12.2](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.12.2) (2021-07-3)\n\n* bug [\\#886](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/886) Fix remaining deprecations on Symfony 5.3 ([chalasr](https://github.com/chalasr))\n\n## [2.12.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.12.1) (2021-06-28)\n\n* bug [\\#884](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/884) Remove development files from releases ([chalasr](https://github.com/chalasr))\n\n## [2.12.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.12.0) (2021-06-23)\n\n* feature [\\#872](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/872) Add new `jwt` authenticator for Symfony 5.3+ Security system ([TristanPouliquen](https://github.com/TristanPouliquen), [chalasr](https://github.com/chalasr))\n* bug [\\#878](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/878) Handle misc. Symfony 5.3 deprecations, update CI config ([mbabker](https://github.com/mbabker))\n* bug [\\#864](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/864) Remove development files from releases ([phansys](https://github.com/phansys))\n\n## [2.11.3](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.11.3) (2021-05-12)\n\n* bug [a175d6dab9](https://github.com/lexik/LexikJWTAuthenticationBundle/commit/a175d6dab968d93e96a3e4f80c495435f71d5eb7) Prevent user enumeration via response content ([chalasr](https://github.com/chalasr))\n\n## [2.11.2](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.11.2) (2021-02-17)\n\n* bug [\\#840](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/840) [Security] On Authentication failure, replace MessageData ([mpiot](https://github.com/mpiot))\n* bug [\\#838](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/838) Fix wiring GenerateKeyPairCommand when key paths are null ([chalasr](https://github.com/chalasr))\n\n## [2.11.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.11.1) (2021-02-10)\n\n* bug [\\#835](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/835) Fix #834: Re-add namshi/jose as required dependency until v3 ([filisko](https://github.com/filisko))\n\n## [2.11.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.11.0) (2021-02-9)\n\n* bug [\\#833](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/833) KeyLoaderInterface::getPassphrase() might return null and we need a string ([drupol](https://github.com/drupol))\n* feature [\\#832](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/832) Make AbstractKeyLoader::getSigningKey() and AbstractKeyLoader::getPublicKey public ([drupol](https://github.com/drupol))\n* feature [\\#817](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/817) Feat: add keypair generation command ([bpolaszek](https://github.com/bpolaszek))\n* feature [\\#816](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/816) Remove support for lcobucci/jwt <3.4 & symfony/* <4.4 ([chalasr](https://github.com/chalasr))\n\n## [2.10.7](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.10.7) (2021-05-12)\n\n* bug [a175d6dab9](https://github.com/lexik/LexikJWTAuthenticationBundle/commit/a175d6dab968d93e96a3e4f80c495435f71d5eb7) Prevent user enumeration via response content ([chalasr](https://github.com/chalasr))\n\n## [2.10.6](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.10.6) (2021-01-20)\n\n* bug [\\#827](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/827) Use named constructor for lcobucci/jwt Ecdsa signers ([chalasr](https://github.com/chalasr))\n* bug [\\#826](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/826) Fix creating tokens when iat is already set in the payload ([chalasr](https://github.com/chalasr))\n\n## [2.10.5](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.10.5) (2020-12-19)\n\n* bug [\\#815](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/815) Fix compatibility for lcobucci/jwt v3.x (bis) ([chalasr](https://github.com/chalasr))\n\n## [2.10.4](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.10.4) (2020-12-18)\n\n* bug [\\#813](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/813) Fix undefined variable ([chalasr](https://github.com/chalasr))\n\n## [2.10.3](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.10.3) (2020-11-30)\n\n* bug [\\#804](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/804) Fix ability to set extra standard claims in the input payload (bis) ([chalasr](https://github.com/chalasr))\n* bug [\\#807](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/807) Fix compatibility with locbucci/jwt 3.2 ([chalasr](https://github.com/chalasr))\n\n## [2.10.2](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.10.2) (2020-11-30)\n\n* bug [\\#801](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/801) Fix ability to set extra standard claims in the input payload ([chalasr](https://github.com/chalasr))\n* bug [\\#796](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/796) Set Token on ExpiredTokenException ([AdrienBr](https://github.com/AdrienBr))\n\n## [2.10.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.10.1) (2020-11-28)\n\n* bug [\\#797](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/797) Fix support for lcobucci/jwt v3.4 and 4.0 ([chalasr](https://github.com/chalasr))\n\n## [2.10.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.10.0) (2020-11-23)\n\n* feature [\\#790](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/790) Fix Symfony 5.2 getProviderKey deprecation ([ogizanagi](https://github.com/ogizanagi))\n* feature [\\#792](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/792) PHP 8 Support ([chalasr](https://github.com/chalasr))\n\n## [2.9.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.9.0) (2020-10-27)\n\n* feature #769 Added support for composed cookies ([lukacovicadam](https://github.com/lukacovicadam))\n* bug #787 fix day saving transition php ([flaugere](https://github.com/flaugere))\n* bug #780 Add deprecation message argument to JWTFactory.php ([chrBrd](https://github.com/chrBrd))\n* feature #786 Allow token creation from an existing payload ([RicoLannez](https://github.com/RicoLannez))\n* feature #677 chore/implement-against-key-loader-interface ([TiMESPLiNTER](https://github.com/TiMESPLiNTER))\n* feature #767 Added the possibility to choose if the cookie is \"secure\" or not ([Mael-91](https://github.com/Mael-91))\n\n## [2.8.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.8.0) (2020-06-14)\n\n* feature [\\#761](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/761) Expose payload in encode/decode exceptions ([chalasr](https://github.com/chalasr))\n* bug [\\#755](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/755) Drop php 5.5 compat, Test against php 7.4 + symfony 5.1 and fix deprecations ([acrobat](https://github.com/acrobat))\n* bug [\\#683](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/683) Handle ChainUserProvider ([Gemorroj](https://github.com/Gemorroj))\n\n## [2.7.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.7.0) (2020-05-29)\n\n* feature [\\#753](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/753) Add `set_cookies` option to store JWT in secure cookies ([chalasr](https://github.com/chalasr))\n* feature [\\#737](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/737) Enable to keep the modified payload after decode ([cedriclombardot](https://github.com/cedriclombardot))\n\n## [2.6.5](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.6.5) (2019-11-22)\n\n* bug [\\#689](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/689) Symfony 4.4/5.0 compatibility ([Deuchnord](https://github.com/Deuchnord))\n* bug [\\#687](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/687) Authentication Exception Message from its key ([arslan](https://github.com/arslan))\n* bug [\\#675](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/675) Use late static binding on JWTUser ([kaznovac](https://github.com/kaznovac))\n\n## [2.6.4](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.6.4) (2019-07-27)\n\n* bug [\\#669](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/669) Fix dispatch signature on SF > 4.3 ([Webonaute](https://github.com/Webonaute))\n* bug [\\#650](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/650) Fixed AuthenticaionFailureHandler to utilize messages from custom exceptions ([EresDev](https://github.com/EresDev))\n\n## [2.6.3](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.6.3) (2018-04-17)\n\n* bug [\\#644](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/644) Fix FC/BC layer for EventDispatcher ([nicolas-grekas](https://github.com/nicolas-grekas))\n\n## [2.6.2](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.6.2) (2018-04-1)\n\n* bug [\\#637](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/637) Fix deprecations on symfony/event-dispatcher:4.3 ([chalasr](https://github.com/chalasr))\n* bug [\\#620](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/620) Fix missing $config variable ([Oliboy50](https://github.com/Oliboy50))\n* bug [\\#618](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/618) Use the JWTTokenManagerInterface ([trsteel88](https://github.com/trsteel88))\n* bug [\\#593](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/593) Make JWTManager::$userIdClaim nullable ([chalasr](https://github.com/chalasr))\n\n## [2.6.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.6.1) (2018-11-18)\n\n* bug [\\#577](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/577) Fix argument order in JWTProvider service declaration ([fjogeleit](https://github.com/fjogeleit))\n\n## [2.6.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.6.0) (2018-11-1)\n\n* bug [\\#574](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/574) fix clockSkew not taken into account in some case ([mu4ddi3](https://github.com/mu4ddi3))\n* bug [\\#554](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/554) Fix deprecations on Symfony 4.2 ([chalasr](https://github.com/chalasr))\n* feature [\\#537](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/537) Customizable User ID Claim  ([Spomky](https://github.com/Spomky))\n* feature [\\#503](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/503) Allow setting the \"exp\" claim from event listeners ([MaximeMaillet](https://github.com/MaximeMaillet))\n\n## [2.5.4](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.5.4) (2018-08-2)\n\n* bug [\\#542](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/542) Fix missing implemenets breaking JWT header alteration ([tucksaun](https://github.com/tucksaun))\n\n## [2.5.3](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.5.3) (2018-07-6)\n\n* bug [\\#525](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/525) Make openssl key loader service deprecated ([Faecie](https://github.com/Faecie))\n\n## [2.5.2](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.5.2) (2018-07-3)\n\n* bug [\\#522](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/522) Fix clock skew + deprecation message ([chalasr](https://github.com/chalasr))\n\n## [2.5.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.5.1) (2018-06-30)\n\n* bug [\\#515](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/515) Re-add namshi/jose as an hard requirement until 3.0 ([chalasr](https://github.com/chalasr))\n\n## [2.5.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.5.0) (2018-06-29)\n\n* feature [\\#508](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/508) Replace namshi/jose by lcobucci/jwt ([chalasr](https://github.com/chalasr))\n* feature [\\#485](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/485) Add a `lexik:jwt:generate-token` command ([sroze](https://github.com/sroze))\n* feature [\\#369](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/369) Fix HMAC support ([chalasr](https://github.com/chalasr))\n* feature [\\#492](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/492) Clock skew ([patrickjDE](https://github.com/patrickjDE))\n* feature [\\#433](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/433) Added setPayload to JWTDecodedEvent analogous to JWTCreatedEvent. ([vgeyer](https://github.com/vgeyer))\n* feature [\\#412](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/412) Make the token type case insensitive ([greg0ire](https://github.com/greg0ire))\n* feature [\\#404](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/404) CheckConfigCommand should not be container aware ([chalasr](https://github.com/chalasr))\n* feature [\\#352](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/352) JWT header alteration ([Spomky](https://github.com/Spomky))\n* feature [\\#344](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/344) Add an extension point on the PayloadAwareUserProviderInterface ([sroze](https://github.com/sroze))\n\n## [2.4.3](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.4.3) (2017-11-6)\n\n* bug [\\#408](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/408) Response classes shouldn't have the @internal PhpDoc tag ([lashae](https://github.com/lashae))\n* bug [\\#403](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/403) Switch to PSR-4 namespaces for PHPUnit ([chalasr](https://github.com/chalasr))\n* bug [\\#399](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/399) Fix sf3.4 command autoregistration deprecation ([ogizanagi](https://github.com/ogizanagi))\n\n## [2.4.2](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.4.2) (2017-10-19)\n\n* bug [\\#398](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/398) Fix Symfony 4 compatibility ([benji07](https://github.com/benji07))\n* bug [\\#383](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/383) Don't register lcobucci encoder if lcobucci/jwt is not installed ([chalasr](https://github.com/chalasr))\n\n## [2.4.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.4.1) (2017-08-29)\n\n* bug [\\#356](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/356) Dont use DefinitionDecorator on Symfony 3.3+ ([chalasr](https://github.com/chalasr))\n\n## [2.4.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.4.0) (2017-05-10)\n\n* feature [\\#330](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/330) Allow empty ttl for testing purpose ([chalasr](https://github.com/chalasr))\n* bug [\\#328](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/328) Fix autowiring for upcoming Symfony 3.3 ([chalasr](https://github.com/chalasr))\n\n## [2.3.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.3.0) (2017-04-14)\n\n* bug [\\#325](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/325) Move ttl `is_numeric` check from build time to runtime to allow use of %env()% ([DrBenton](https://github.com/DrBenton))\n* feature [\\#320](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/320) Allow for Response Body without JWT Token ([Batch1211](https://github.com/Batch1211))\n* feature [\\#317](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/317) Use symfony/phpunit-bridge for testing ([chalasr](https://github.com/chalasr))\n\n## [2.2.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.2.0) (2017-03-09)\n\n* feature [\\#312](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/312) Ease sharing keys between parties ([chalasr](https://github.com/chalasr))\n* bug [\\#311](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/311) Handle empty or null authorization header prefix ([chteuchteu](https://github.com/chteuchteu))\n* feature [\\#303](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/303) Throw less missleading exception if SSL keys could not be loaded ([phansys](https://github.com/phansys))\n\n## [2.1.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.1.1) (2017-01-23)\n\n* bug [\\#302](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/302) Return user object from User Provider refresh ([MisterGlass](https://github.com/MisterGlass))\n\n## [2.1.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.1.0) (2016-12-30)\n\n* feature [\\#278](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/278) Add JWTUserProvider for loading users from the JWT itself ([chalasr](https://github.com/chalasr))\n* bug [\\#287](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/287) Avoid override existing properties in failure response ([kevin-lot](https://github.com/kevin-lot))\n\n## [2.0.3](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.0.3) (2016-12-05)\n* bug [\\#285](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/285) Avoid validating key paths before container compilation ([chalasr](https://github.com/chalasr))\n* feature [\\#283](https//github.com/lexik/LexikJWTAuthenticationBundle/pull/283) Ease creating tokens programatically ([chalasr](https://github.com/chalasr))\n* bug [\\#282](https//github.com/lexik/LexikJWTAuthenticationBundle/pull/282) Catch exception from lcobucci parser on invalid but correctly formatted token ([chalasr](https://github.com/chalasr))\n* feature [\\#276](https//github.com/lexik/LexikJWTAuthenticationBundle/pull/276) Added `getProviderKey()` to JWTUserToken ([eXtreme](https://github.com/eXtreme))\n* [\\#280](https//github.com/lexik/LexikJWTAuthenticationBundle/pull/280) Travis: build on sf 3.2 + highest/lowest deps, fix build on hhvm ([chalasr](https://github.com/chalasr))\n* [\\#269](https//github.com/lexik/LexikJWTAuthenticationBundle/pull/269) Improve the structure of the documentation ([chalasr](https://github.com/chalasr))\n\n## [2.0.2](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.0.2) (2016-10-27)\n\n* feature [\\#262](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/262) Add composer test script ([chalasr](https://github.com/chalasr))\n* bug [\\#261](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/261) The security token must be authenticated no matter of the user's roles ([chalasr](https://github.com/chalasr))\n\n## [2.0.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.0.1) (2016-10-20)\n\n* feature [\\#257](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/257) Set autowiring types on services with many alternatives \n\n## [2.0.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v2.0.0) (2016-10-16)\n\n* feature [\\#249](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/249) Avoid setting exp claim from JWTManager ([chalasr](https://github.com/chalasr))\n* feature [\\#246](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/246) Add a simple built-in encoder based on lcobucci/jwt ([chalasr](https://github.com/chalasr))\n* feature [\\#240](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/240) Add iat check ([chalasr](https://github.com/chalasr))\n* feature [\\#230](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/230) Introduce JWTExpiredEvent ([chalasr](https://github.com/chalasr))\n* feature [\\#184](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/184) [Security] Deprecate current system in favor of a JWTTokenAuthenticator (Guard) ([chalasr](https://github.com/chalasr))\n* feature [\\#218](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/218) Add more flexibility in token extractors configuration ([chalasr](https://github.com/chalasr))\n* feature [\\#217](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/217) Refactor TokenExtractors loading for easy overriding ([chalasr](https://github.com/chalasr))\n* feature [\\#202](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/202) Exceptions simplified ([Spomky](https://github.com/Spomky))\n* feature [\\#201](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/201) Remove deprecated request injections ([chalasr](https://github.com/chalasr))\n* feature [\\#196](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/196) Make *_key_path config options not mandatory ([chalasr](https://github.com/chalasr))\n* feature [\\#177](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/177) Add JWTAuthenticationResponse ([chalasr](https://github.com/chalasr))\n* feature [\\#162](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/162) [Encoder] Handle OpenSSL/phpseclib engines and algorithms ([chalasr](https://github.com/chalasr))\n\n* [\\#175](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/175) Stop ensuring support for PHP versions smaller than 5.0 ([chalasr](https://github.com/chalasr))\n\n* [\\#167](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/167) and [\\#169](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/169) Stop ensuring support Symfony versions smaller than 2.8 ([chalasr](https://github.com/chalasr))\n\n## [1.7.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.7.0) (2016-08-06)\n\n* feature [\\#200](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/200) Deprecate injection of Request instances ([chalasr](https://github.com/chalasr))\n\n## [v1.6.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.6.0) (2016-07-07)\n\n* feature [\\#188](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/188) Add JWTNotFoundEvent ([chalasr](https://github.com/chalasr))\n\n## [v1.5.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.5.1) (2016-04-11)\n\n* bug [\\#159](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/159) Fix anonymous access by removing the AuthenticationCredentialsNotFoundException  ([chalasr](https://github.com/chalasr))\n\n## [v1.5.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.5.0) (2016-04-07)\n\n* feature [\\#157](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/157) Allow to set a custom response in case of authentication failure or invalid/not found token ([chalasr](https://github.com/chalasr))\n* feature [\\#154](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/154) Add OpenSSLKeyLoader ([chalasr](https://github.com/chalasr))\n* feature [\\#147](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/147) Made the public and private key paths not required… ([ovidiumght](https://github.com/ovidiumght))\n* bug [\\#142](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/142) Add response message in case of invalid token ([chalasr](https://github.com/chalasr))\n\n## [v1.4.3](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.4.3) (2016-01-30)\n\n* feature [\\#133](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/133) Always call for master request from request stack ([stloyd](https://github.com/stloyd))\n\n## [v1.4.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.4.1) (2016-01-21)\n\n* feature [\\#126](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/126) Use requestStack instead of request ([SmurfyFR](https://github.com/SmurfyFR))\n\n## [v1.4.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.4.0) (2016-01-20)\n\n* feature [\\#117](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/117) Allow empty ttl ([soyuka](https://github.com/soyuka))\n* feature [\\#113](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/113) Add symfony 3.0 support ([Ener-Getick](https://github.com/Ener-Getick))\n* feature [\\#110](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/110) Updated to newest namshi/jose. Dropped support for PHP 5.3 ([TiS](https://github.com/TiS))\n* feature [\\#103](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/103) added functional boot test ([slashfan](https://github.com/slashfan))\n* feature [\\#96](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/96) Add custom authorization header name ([pdoreau](https://github.com/pdoreau))\n\n## [v1.3.1](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.3.1) (2015-10-21)\n\n* bug [\\#101](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/101) Fatal error on console cache:clear ([ngandemer](https://github.com/ngandemer))\n\n## [v1.3.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.3.0) (2015-10-21)\n\n* feature [\\#100](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/100) Add authentication_listener option ([yelmontaser](https://github.com/yelmontaser))\n\n## [v1.2.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.2.0) (2015-09-28)\n\n* bug [\\#92](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/92) Fix authentication event propagation ([mRoca](https://github.com/mRoca))\n* feature [\\#88](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/88) Add WWW-Authenticate response header on 401 ([teohhanhui](https://github.com/teohhanhui))\n* feature [\\#76](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/76) Add cookie token extractor ([tnucera](https://github.com/tnucera))\n\n## [v1.1.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.1.0) (2015-07-08)\n\n* feature [\\#73](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/73) add JWTEncodedEvent so JWT string is available after its creation ([9orky](https://github.com/9orky))\n* feature [\\#69](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/69) Added new event when token is authenticated ([gamringer](https://github.com/gamringer))\n\n## [v1.0.10](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.0.10) (2015-06-05)\n\n* feature [\\#71](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/71) Fixing a missing use statement for Reference ([adetwiler](https://github.com/adetwiler))\n\n## [v1.0.9](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.0.9) (2015-06-05)\n\n* bug [\\#70](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/70) fixed deprecated errors for symfony 2.6 plus ([slashfan](https://github.com/slashfan))\n* feature [\\#67](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/67) Move security details to parameters.yml.dist ([Maltronic](https://github.com/Maltronic))\n\n## [v1.0.8](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.0.8) (2015-04-20)\n\n* feature [\\#63](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/63) Improve JWTProvider ([JJK801](https://github.com/JJK801))\n\n## [v1.0.6](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.0.6) (2015-02-17)\n\n* feature [\\#45](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/45) Adding AuthenticationException to the AuthenticationFailureEvent ([ghost](https://github.com/ghost))\n* feature [\\#43](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/43) Added identity field funcionality and its unit test. ([victuxbb](https://github.com/victuxbb))\n* feature [\\#40](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/40) Add flexibilty to the provider and manager ([slashfan](https://github.com/slashfan))\n\n## [v1.0.5](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.0.5) (2014-09-16)\n\n* feature [\\#28](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/28) Improve response and dispatch event in AuthenticationFailureHandler ([EmmanuelVella](https://github.com/EmmanuelVella))\n\n## [v1.0.4](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.0.4) (2014-08-13)\n\n* feature [\\#27](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/27) Added encoder / decoder service customization \\(\\#24\\) ([slashfan](https://github.com/slashfan))\n* feature [\\#19](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/19) Add response in success event ([EmmanuelVella](https://github.com/EmmanuelVella))\n* feature [\\#18](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/18) Improve json 401 exception ([EmmanuelVella](https://github.com/EmmanuelVella))\n\n## [v1.0.2](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.0.2) (2014-07-11)\n\n* feature [\\#15](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/15) Added JWT Creator service ([gfreeau](https://github.com/gfreeau))\n\n## [v1.0.0](https://github.com/lexik/LexikJWTAuthenticationBundle/tree/v1.0.0) (2014-05-16)\n\n* feature [\\#10](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/10) Added ability to throw exceptions for handling later and to disable the catch-all entry point ([gfreeau](https://github.com/gfreeau))\n* feature [\\#9](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/9) Changed entry point to contain a message and return json ([gfreeau](https://github.com/gfreeau))\n* bug [\\#7](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/7) Jwt entry point fix \\#6 ([jaugustin](https://github.com/jaugustin))\n* feature [\\#5](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/5) Firewall config ([slashfan](https://github.com/slashfan))\n* feature [\\#2](https://github.com/lexik/LexikJWTAuthenticationBundle/pull/2) Symfony2.3+ compatibility ([slashfan](https://github.com/slashfan))\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.4443359375,
          "content": "Contributing\n============\n\nFirst of all, **thank you** for contributing, **you are awesome**!\n\nHere are a few rules to follow in order to ease code reviews, and discussions before\nmaintainers accept and merge your work.\n\nCoding standards\n----------------\n\nYou MUST follow the [PSR-12](http://www.php-fig.org/psr/12/).\nIf you don't know about any of them, you should really read the recommendations.\nCan't wait? Use the [symplify/easy-coding-standard](https://github.com/symplify/easy-coding-standard):\n\n```\n$ vendor/bin/ecs --fix\n```\n\nIn addition, we try to use the baseline code as close as the current PHP version features.\nFor that, we use [Rector](https://github.com/rectorphp/rector-src).\n\n```\n$ vendor/bin/rector process\n```\n\n__Note:__ Never fix coding standards in some existing code as it makes code review more difficult.\n\nRunning the test suite\n-----------------------\n\nYou MUST run the test suite.\n\n- Setup the project using [Composer](http://getcomposer.org/):\n  ```\n  $ composer install\n  ```\n\n- Run the test suite:\n  ```\n  $ composer test\n  ```\n\nYou MUST write (or update) unit tests.\n\nDocumentation\n-------------\n\nYou SHOULD write documentation.\n\nAdditional notes\n----------------\n\nBefore submitting your Pull Request, please [rebase your branch](http://git-scm.com/book/en/Git-Branching-Rebasing).  \nWhen submitting your Pull Request, please choose a title that makes sense, it will be used as message for the merge commit if your change is accepted.\n\nThank you!\n"
        },
        {
          "name": "Command",
          "type": "tree",
          "content": null
        },
        {
          "name": "DependencyInjection",
          "type": "tree",
          "content": null
        },
        {
          "name": "Encoder",
          "type": "tree",
          "content": null
        },
        {
          "name": "Event",
          "type": "tree",
          "content": null
        },
        {
          "name": "EventListener",
          "type": "tree",
          "content": null
        },
        {
          "name": "Events.php",
          "type": "blob",
          "size": 3.431640625,
          "content": "<?php\n\nnamespace Lexik\\Bundle\\JWTAuthenticationBundle;\n\n/**\n * Events.\n *\n * @author Dev Lexik <dev@lexik.fr>\n */\nfinal class Events\n{\n    /**\n     * Dispatched after the token generation to allow sending more data\n     * on the authentication success response.\n     *\n     * @Event(\"Lexik\\Bundle\\JWTAuthenticationBundle\\Event\\AuthenticationSuccessEvent\")\n     */\n    public const AUTHENTICATION_SUCCESS = 'lexik_jwt_authentication.on_authentication_success';\n\n    /**\n     * Dispatched after an authentication failure.\n     * Hook into this event to add a custom error message in the response body.\n     *\n     * @Event(\"Lexik\\Bundle\\JWTAuthenticationBundle\\Event\\AuthenticationFailureEvent\")\n     */\n    public const AUTHENTICATION_FAILURE = 'lexik_jwt_authentication.on_authentication_failure';\n\n    /**\n     * Dispatched before the token payload is encoded by the configured encoder (JWTEncoder by default).\n     * Hook into this event to add extra fields to the payload.\n     *\n     * @Event(\"Lexik\\Bundle\\JWTAuthenticationBundle\\Event\\JWTCreatedEvent\")\n     */\n    public const JWT_CREATED = 'lexik_jwt_authentication.on_jwt_created';\n\n    /**\n     * Dispatched right after token string is created.\n     * Hook into this event to get token representation itself.\n     *\n     * @Event(\"Lexik\\Bundle\\JWTAuthenticationBundle\\Event\\JWTEncodedEvent\")\n     */\n    public const JWT_ENCODED = 'lexik_jwt_authentication.on_jwt_encoded';\n\n    /**\n     * Dispatched after the token payload has been decoded by the configured encoder (JWTEncoder by default).\n     * Hook into this event to perform additional validation on the received payload.\n     *\n     * @Event(\"Lexik\\Bundle\\JWTAuthenticationBundle\\Event\\JWTDecodedEvent\")\n     */\n    public const JWT_DECODED = 'lexik_jwt_authentication.on_jwt_decoded';\n\n    /**\n     * Dispatched after the token payload has been authenticated by the provider.\n     * Hook into this event to perform additional modification to the authenticated token using the payload.\n     *\n     * @Event(\"Lexik\\Bundle\\JWTAuthenticationBundle\\Event\\JWTAuthenticatedEvent\")\n     */\n    public const JWT_AUTHENTICATED = 'lexik_jwt_authentication.on_jwt_authenticated';\n\n    /**\n     * Dispatched after the token has been invalidated by the provider.\n     * Hook into this event to add a custom error message in the response body.\n     *\n     * @Event(\"Lexik\\Bundle\\JWTAuthenticationBundle\\Event\\JWTInvalidEvent\")\n     */\n    public const JWT_INVALID = 'lexik_jwt_authentication.on_jwt_invalid';\n\n    /**\n     * Dispatched when no token can be found in a request.\n     * Hook into this event to set a custom response.\n     *\n     * @Event(\"Lexik\\Bundle\\JWTAuthenticationBundle\\Event\\JWTNotFoundEvent\")\n     */\n    public const JWT_NOT_FOUND = 'lexik_jwt_authentication.on_jwt_not_found';\n\n    /**\n     * Dispatched when the token is expired.\n     * The expired token's payload can be retrieved by hooking into this event, so you can set a different\n     * response.\n     *\n     * @Event(\"Lexik\\Bundle\\JWTAuthenticationBundle\\Event\\JWTExpiredEvent\")\n     */\n    public const JWT_EXPIRED = 'lexik_jwt_authentication.on_jwt_expired';\n\n    /**\n     * Dispatched before the JWE is computed.\n     * This event allow the JWE header parameters to be changed.\n     * It is only dispatched when using Web-Token\n     *\n     * @Event(\"Lexik\\Bundle\\JWTAuthenticationBundle\\Event\\BeforeJWEComputationEvent\")\n     */\n    public const BEFORE_JWE_COMPUTATION = 'lexik_jwt_authentication.before_jwe_computation';\n}\n"
        },
        {
          "name": "Exception",
          "type": "tree",
          "content": null
        },
        {
          "name": "Helper",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.08203125,
          "content": "Copyright (C) 2014-2020 Lexik <dev@lexik.fr>, Robin Chalas <robin.chalas@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "LexikJWTAuthenticationBundle.php",
          "type": "blob",
          "size": 1.6318359375,
          "content": "<?php\n\nnamespace Lexik\\Bundle\\JWTAuthenticationBundle;\n\nuse Lexik\\Bundle\\JWTAuthenticationBundle\\DependencyInjection\\Compiler\\ApiPlatformOpenApiPass;\nuse Lexik\\Bundle\\JWTAuthenticationBundle\\DependencyInjection\\Compiler\\CollectPayloadEnrichmentsPass;\nuse Lexik\\Bundle\\JWTAuthenticationBundle\\DependencyInjection\\Compiler\\WireGenerateTokenCommandPass;\nuse Lexik\\Bundle\\JWTAuthenticationBundle\\DependencyInjection\\Security\\Factory\\JWTAuthenticatorFactory;\nuse Lexik\\Bundle\\JWTAuthenticationBundle\\DependencyInjection\\Security\\Factory\\JWTUserFactory;\nuse Symfony\\Bundle\\SecurityBundle\\DependencyInjection\\SecurityExtension;\nuse Symfony\\Component\\DependencyInjection\\Compiler\\PassConfig;\nuse Symfony\\Component\\DependencyInjection\\ContainerBuilder;\nuse Symfony\\Component\\HttpKernel\\Bundle\\Bundle;\n\n/**\n * LexikJWTAuthenticationBundle.\n *\n * @author Nicolas Cabot <n.cabot@lexik.fr>\n */\nclass LexikJWTAuthenticationBundle extends Bundle\n{\n    /**\n     * {@inheritdoc}\n     */\n    public function build(ContainerBuilder $container): void\n    {\n        parent::build($container);\n\n        $container->addCompilerPass(new WireGenerateTokenCommandPass(), PassConfig::TYPE_BEFORE_OPTIMIZATION, 0);\n        $container->addCompilerPass(new ApiPlatformOpenApiPass(), PassConfig::TYPE_BEFORE_OPTIMIZATION, 0);\n        $container->addCompilerPass(new CollectPayloadEnrichmentsPass(), PassConfig::TYPE_BEFORE_OPTIMIZATION, 0);\n\n        /** @var SecurityExtension $extension */\n        $extension = $container->getExtension('security');\n\n        $extension->addUserProviderFactory(new JWTUserFactory());\n\n        $extension->addAuthenticatorFactory(new JWTAuthenticatorFactory());\n    }\n}\n"
        },
        {
          "name": "OpenApi",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.9296875,
          "content": "LexikJWTAuthenticationBundle\n============================\n\n[![Latest Stable Version](https://poser.pugx.org/lexik/jwt-authentication-bundle/v/stable.svg)](https://packagist.org/packages/lexik/jwt-authentication-bundle)\n\nThis bundle provides JWT (Json Web Token) authentication for your Symfony API.\n\nIt is compatible (and tested) with PHP > 8.2 up to 8.4 and Symfony > 6.4 up to 7.2.\n\nDocumentation\n-------------\n\nThe bulk of the documentation is stored in the [`Resources/doc`](Resources/doc/index.rst) directory of this bundle:\n\n* [Getting started](Resources/doc/index.rst#getting-started)\n  * [Prerequisites](Resources/doc/index.rst#prerequisites)\n  * [Installation](Resources/doc/index.rst#installation)\n  * [Configuration](Resources/doc/index.rst#configuration)\n  * [Usage](Resources/doc/index.rst#usage)\n  * [Notes](Resources/doc/index.rst#notes)\n* [Further documentation](Resources/doc/index.rst#further-documentation)\n  * [Configuration reference](Resources/doc/1-configuration-reference.rst)\n  * [Data customization and validation](Resources/doc/2-data-customization.rst)\n  * [Functional testing](Resources/doc/3-functional-testing.rst)\n  * [Working with CORS requests](Resources/doc/4-cors-requests.rst)\n  * [JWT encoder service customization](Resources/doc/5-encoder-service.rst)\n  * [Extending Authenticator](Resources/doc/6-extending-jwt-authenticator.rst)\n  * [Creating JWT tokens programmatically](Resources/doc/7-manual-token-creation.rst)\n  * [A database-less user provider](Resources/doc/8-jwt-user-provider.rst)\n  * [Accessing the authenticated JWT token](Resources/doc/9-access-authenticated-jwt-token.rst)\n  * [Invalidate token on logout](Resources/doc/11-invalidate-token.rst)\n\nCommunity Support\n-----------------\n\nPlease consider [opening a question on StackOverflow](http://stackoverflow.com/questions/ask) using the [`lexikjwtauthbundle` tag](http://stackoverflow.com/questions/tagged/lexikjwtauthbundle),  it is the official support platform for this bundle.\n  \nGithub Issues are dedicated to bug reports and feature requests.\n\nContributing\n------------\n\nSee the [CONTRIBUTING](CONTRIBUTING.md) file.\n\n\nSponsoring\n----------\n\nHuge thanks to [Blackfire](https://blackfire.io) and [JetBrains](https://jetbrains.com) for providing this project with free open-source licenses.\n\n[![Blackfire](https://user-images.githubusercontent.com/7502063/178457752-520de30a-a2bc-4529-983b-6a3ff4f76045.png)](https://blackfire.io)\n\nIf you or your company use this package, please consider [sponsoring its maintenance and development](https://github.com/sponsors/chalasr).\n\nUpgrading from 1.x\n-------------------\n\nPlease see the [UPGRADE](UPGRADE-2.0.md) file.\n\nCredits\n-------\n\n* [Robin Chalas](https://github.com/chalasr)\n* Lexik <dev@lexik.fr>\n* [All contributors](https://github.com/lexik/LexikJWTAuthenticationBundle/graphs/contributors)\n\nLicense\n-------\n\nThis bundle is under the MIT license.  \nFor the whole copyright, see the [LICENSE](LICENSE) file distributed with this source code.\n"
        },
        {
          "name": "Resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "Response",
          "type": "tree",
          "content": null
        },
        {
          "name": "Security",
          "type": "tree",
          "content": null
        },
        {
          "name": "Services",
          "type": "tree",
          "content": null
        },
        {
          "name": "Signature",
          "type": "tree",
          "content": null
        },
        {
          "name": "Subscriber",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "TokenExtractor",
          "type": "tree",
          "content": null
        },
        {
          "name": "UPGRADE-2.0.md",
          "type": "blob",
          "size": 6.38671875,
          "content": "UPGRADE FROM 1.x to 2.0\n=======================\n\nConfiguration\n-------------\n\n* The JWT authentication system has been deprecated in favor of a Guard authenticator  \n  called `JWTTokenAuthenticator`.  \n  By the way, the security configuration has been simplified. Most of the options that was  \n  set from the JWT-secured firewall configuration have been moved to the bundle configuration,  \n  keeping the same names and default values.\n  \n  __Removed options__\n  - `create_entry_point`: The new authenticator being an entry point after all, this option doesn't bring any value anymore.  \n  If a firewall allows anonymous, the entry point will not be called at all, letting the request continue.  \n  If it doesn't, the entry point will dispatch a `on_jwt_not_found` event that can be subscribed to customize the default failure response that will be returned by the entry point.\n  - `throw_exceptions`: This option doesn't make sense anymore as the exceptions thrown during the authentication process are needed, involving call of the good method in the good time, dispatching the good events, so a custom response can be easily set, as its content no more depends on the exception thrown.\n  - `authentication_provider` and `authentication_listener`: It's now part of the authenticator role, simplifiying a lot the corresponding code that can now be found/overriden from one place.\n\n  __Before__\n\n  ```yaml\n  # app/config/security.yml\n  firewalls:\n      api:\n          lexik_jwt:\n              authorization_header: ~\n              cookie: ~\n              query_parameter: ~\n              throw_exceptions: false\n              create_entry_point: true\n              authentication_provider: lexik_jwt_authentication.security.authentication.provider\n              authentication_listener: lexik_jwt_authentication.security.authentication.listener\n  ```\n\n  __After__\n\n  ```yaml\n  # app/config/security.yml\n  firewalls:\n      api:\n          guard:\n              authenticators:\n                  - lexik_jwt_authentication.jwt_token_authenticator\n\n  # app/config/config.yml\n  lexik_jwt_authentication:\n      # ...\n      token_extractors:\n          authorization_header: ~\n          cookie: ~\n          query_parameter: ~\n  ```\n  \n* The `token_ttl` option __must__ be a numeric value, having an infinite token lifetime is no more \n  supported by the built-in encoders (the `exp` claim is automatically set), see issue [\\#250](https://github.com/lexik/LexikJWTAuthenticationBundle/issues/250) for more details.\n\n  \nEvents\n-------\n\n* The ability of retrieving `Request` instances from `Event` classes has been removed,\n  as the current `Request` is no more injected into when they are dispatched.  \n  Being able to access them was mainly useful for doing stuff depending on informations \n  retrieved from.  \n  Fortunately, you can reproduce the same behaviour in a more efficient way:\n\n  __Before__\n  \n  ```yaml\n  services:\n      jwt_event_listener:\n          class: AppBundle\\EventListener\\JWTCreatedListener\n          tags:\n              - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }\n  ```\n  \n  ```php\n  use Lexik\\Bundle\\JWTAuthenticationBundle\\Event\\JWTCreatedEvent;\n  \n  class JWTCreatedListener\n  {\n      public function onJWTCreated(JWTCreatedEvent $event)\n      {\n          $request = $event->getRequest();\n      }\n  }\n  ```\n  \n  __After__\n  \n  ```yaml\n  services:\n      jwt_event_listener:\n          class: AppBundle\\EventListener\\JWTCreatedListener\n          arguments: [ '@request_stack' ]\n          tags:\n              - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }\n  ```\n  \n  ```php  \n  use Lexik\\Bundle\\JWTAuthenticationBundle\\Event\\JWTCreatedEvent;\n  use Symfony\\Component\\HttpFoundation\\RequestStack;\n\n  class JWTCreatedListener\n  {\n      private $requestStack;\n      \n      public function __construct(RequestStack $requestStack)\n      {\n          $this->requestStack = $requestStack;\n      }\n      \n      public function onJWTCreated(JWTCreatedEvent $event)\n      {\n          $request = $this->requestStack->getCurrentRequest();\n      }\n  }\n  ```\n\n* Introduced JWTExpiredEvent\n  In 1.x, trying to authenticate an user with an expired token was causing a JWTInvalidEvent to be dispatched, \n  as for several other mixed reasons. Now in 2.x, this failure reason has its own event on which you can listen on.\n  \nEncoder\n-------\n\n* The service `lexik_jwt_authentication.jwt_encoder` has been removed in favor  \n  of `lexik_jwt_authentication.encoder.default` that supports OpenSSL and  \n  phpseclib crypto engines.\n  \n* The class `Lexik\\Bundle\\JWTAuthenticationBundle\\Encoder\\JWTEncoder` has been  \n  removed in favor of `Lexik\\Bundle\\JWTAuthenticationBundle\\Encoder\\DefaultEncoder`.\n\n  It was used by the `lexik_jwt_authentication.jwt_encoder` service that has been removed.  \n  \n* The `Lexik\\Bundle\\JWTAuthenticationBundle\\Encoder\\JWTEncoderInterface` has been changed,  \n  the `encode` and `decode` methods now throw exceptions rather than returning `false`  \n  in case of error.\n  \n* The `Lexik\\Bundle\\JWTAuthenticationBundle\\Encoder\\DefaultEncoder` default encoder used via service\n  \"lexik_jwt_authentication.encoder.default\" now checks for a `iat` claim existance and validity when decoding a token\n  using `DefaultEncoder::decode()`.\n\nKeyLoader\n---------\n\n* The `lexik_jwt_authentication.openssl_key_loader` has been removed  \n  in favor of `lexik_jwt_authentication.key_loader`.\n\n* The class `Lexik\\Bundle\\JWTAuthenticationBundle\\Services\\OpenSSLKeyLoader` has been  \n  removed in favor of `Lexik\\Bundle\\JWTAuthenticationBundle\\Services\\KeyLoader\\OpenSSLKeyLoader`.\n  \n  It was used by the `lexik_jwt_authentication.openssl_key_loader` that has been removed.\n  \nCommand\n-------\n\n* The `lexik:jwt:check-open-ssl` command has been renamed to `lexik:jwt:check-config`  \n  as the bundle now supports several crypto engines.\n\nSecurity\n--------\n\n* The `JWTManagerInterface` has been deprecated in favor of a new `JWTTokenManagerInterface` \n  implementing two new methods: `setUserIdentityField` and `getUserIdentityField`.\n  These methods were already implemented by the JWTManager class in 1.x but not guaranteed\n  by the old interface.\n\n* The `JWTManager` is no more responsible of setting the token \n  `exp` claim, meaning that its constructor takes one less argument (the last one). This logic has been moved to the `Encoder` that is responsible of creating signed tokens and verifying/validating existing ones.\n"
        },
        {
          "name": "UPGRADE-2.12.md",
          "type": "blob",
          "size": 1.5517578125,
          "content": "UPGRADE FROM 2.11 to 2.12\n=========================\n\n### Configuration\n\n * A new authenticator has been introduced for projects running on Symfony 5.3 \n   with the new security-http' authenticator system.\n\n   If you are using Symfony 5.3+ then consider updating your security configuration as follows.\n   \n   #### Before:\n   \n   ```yaml\n   # config/packages/security.yaml\n   \n   security:\n       firewalls:\n           api:\n               pattern: ^/api\n               guard:\n                   authenticators: \n                       - lexik_jwt_authentication.jwt_token_authenticator\n   ```\n\n   #### After:\n\n   ```yaml\n   # config/packages/security.yaml\n   \n   security:\n       enable_authenticator_manager: true\n       firewalls:\n           api:\n               pattern: ^/api\n               jwt: ~\n   ```\n\n   _Note_  \n   The changes above are related to this bundle only. \n   The new `jwt` authenticator behaves the same as the guard one, but you need to take care \n   of upgrading the rest of your security configuration according to the new authenticator system.  \n   For more information, check https://symfony.com/doc/current/security/authenticator_manager.html.\n\n### API\n\n * Added method `JWTTokenManagerInterface::parse()` which takes the raw token as only argument.\n   Consider using this method over `decode()` as it is more inline with the new Symfony authenticator system.  \n   The `JWTTokenManagerInterface::decode()` method may be deprecated in a future version.\n\n * Added class `Security\\Authenticator\\JWTAuthenticator` that is wired by the `JWTAuthenticatorFactory` class.\n"
        },
        {
          "name": "UPGRADE-2.5.md",
          "type": "blob",
          "size": 1.4453125,
          "content": "UPGRADE FROM 2.x to 2.5\n=======================\n\nConfiguration\n-------------\n\n* The following config options have been deprecated and will be removed in 3.0:\n\n  - `private_key_path`: Replaced by `secret_key` which accepts a raw key (string) as value or a file path.\n\n  - `public_key_path`: Replaced by `public_key` which accepts a raw key (string) as value or a file path.\n\n  - `encoder.crypto_engine`: Support for using PHPSecLib will be removed in 3.0 along with the dependency to\n    the `namshi/jose` library (see below). As such, OpenSSL will remain the only supported crypto engine.\n\n* Only one of `public_key` and `secret_key` is required, which makes it possible for a server to be the\n  unique secret key holder thus the only part being able to deliver tokens.\n  Clients can just hold the public key only for token verification.\n  \nJOSE\n----\n\n* The `DefaultJWTEncoder` class and the corresponding `lexik_jwt_authentication.encoder.default` service\n  have been deprecated. It is based on the [namshi/jose](https://github.com/namshi/jose) library which itself\n  is deprecated. The bundle now uses the [lcobucci/jwt](https://github.com/lcobucci/jwt) library as default JOSE library.\n  Set the `encoder.service` configuration key to `lexik_jwt_authentication.encoder.lcobucci` or omit it instead \n  (relying on the default value).\n  \n  **We highly recommend to upgrade as early as possible since the namshi/jose library might contain known security issues as time goes by**.\n"
        },
        {
          "name": "UPGRADE-3.0.md",
          "type": "blob",
          "size": 1.2861328125,
          "content": "UPGRADE FROM 3.x to 3.0\n=======================\n\n### Configuration\n\n * The JWT Authentication system based on Guard authenticator called `JWTTokenAuthenticator` has been removed.\n\n * The config options `private_key_path`, `public_key_path`, `encoder.crypto_engine` and `user_identity_field` have been removed.\n\n### JOSE\n\n * The `DefaultJWTEncoder` class and the corresponding `lexik_jwt_authentication.encoder.default` service have been removed.\n\n * The `DefaultJWSProvider` class and the corresponding `lexik_jwt_authentication.jws_provider.default` service have been removed. \n\n### KeyLoader\n\n * BC: The `KeyLoaderInterface` interface have three new methods `getSigningKey`, `getPublicKey` and `getAdditionalPublicKeys`.\n\n * The `OpenSSLKeyLoader` class and the corresponding `lexik_jwt_authentication.key_loader.openssl` service have been removed.\n\n### Security\n\n * The `JWTManagerInterface` interface has be removed.\n\n * The method `JWTTokenManagerInterface::setUserIdentityField` has been removed.\n\n * The method `PayloadAwareUserProviderInterface::loadUserByUsernameAndPayload` has been removed.\n\n * BC: The `PayloadAwareUserProviderInterface` interface has a new methods `loadUserByIdentifierAndPayload`.\n\n * BC: The `JWTTokenManagerInterface` interface have two new methods `createFromPayload` and `parse`.\n\n\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 3.19140625,
          "content": "{\n    \"name\": \"lexik/jwt-authentication-bundle\",\n    \"type\": \"symfony-bundle\",\n    \"description\": \"This bundle provides JWT authentication for your Symfony REST API\",\n    \"keywords\": [\"Symfony\", \"bundle\", \"jwt\", \"jws\", \"authentication\", \"api\", \"rest\"],\n    \"homepage\": \"https://github.com/lexik/LexikJWTAuthenticationBundle\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Jeremy Barthe\",\n            \"email\": \"j.barthe@lexik.fr\",\n            \"homepage\": \"https://github.com/jeremyb\"\n        },\n        {\n            \"name\": \"Nicolas Cabot\",\n            \"email\": \"n.cabot@lexik.fr\",\n            \"homepage\": \"https://github.com/slashfan\"\n        },\n        {\n            \"name\": \"Cedric Girard\",\n            \"email\": \"c.girard@lexik.fr\",\n            \"homepage\": \"https://github.com/cedric-g\"\n        },\n        {\n            \"name\": \"Dev Lexik\",\n            \"email\": \"dev@lexik.fr\",\n            \"homepage\": \"https://github.com/lexik\"\n        },\n        {\n            \"name\": \"Robin Chalas\",\n            \"email\": \"robin.chalas@gmail.com\",\n            \"homepage\": \"https://github.com/chalasr\"\n        },\n        {\n            \"name\": \"Lexik Community\",\n            \"homepage\": \"https://github.com/lexik/LexikJWTAuthenticationBundle/graphs/contributors\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=8.2\",\n        \"ext-openssl\": \"*\",\n        \"lcobucci/jwt\": \"^5.0\",\n        \"lcobucci/clock\": \"^3.0\",\n        \"symfony/config\": \"^6.4|^7.0\",\n        \"symfony/dependency-injection\": \"^6.4|^7.0\",\n        \"symfony/deprecation-contracts\": \"^2.4|^3.0\",\n        \"symfony/event-dispatcher\": \"^6.4|^7.0\",\n        \"symfony/http-foundation\": \"^6.4|^7.0\",\n        \"symfony/http-kernel\": \"^6.4|^7.0\",\n        \"symfony/property-access\": \"^6.4|^7.0\",\n        \"symfony/security-bundle\": \"^6.4|^7.0\",\n        \"symfony/translation-contracts\": \"^1.0|^2.0|^3.0\"\n    },\n    \"require-dev\": {\n        \"api-platform/core\": \"^3.0|^4.0\",\n        \"rector/rector\": \"^1.2\",\n        \"symfony/browser-kit\": \"^6.4|^7.0\",\n        \"symfony/console\": \"^6.4|^7.0\",\n        \"symfony/dom-crawler\": \"^6.4|^7.0\",\n        \"symfony/filesystem\": \"^6.4|^7.0\",\n        \"symfony/framework-bundle\": \"^6.4|^7.0\",\n        \"symfony/phpunit-bridge\": \"^6.4|^7.0\",\n        \"symfony/var-dumper\": \"^6.4|^7.0\",\n        \"symfony/yaml\": \"^6.4|^7.0\"\n    },\n    \"suggest\": {\n        \"gesdinet/jwt-refresh-token-bundle\": \"Implements a refresh token system over Json Web Tokens in Symfony\",\n        \"spomky-labs/lexik-jose-bridge\": \"Provides a JWT Token encoder with encryption support\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Lexik\\\\Bundle\\\\JWTAuthenticationBundle\\\\\": \"\"\n        },\n        \"exclude-from-classmap\": [\n            \"/Tests/\"\n        ]\n    },\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"scripts\": {\n        \"test\": [\n            \"vendor/bin/simple-phpunit --exclude-group web-token\",\n            \"ENCODER=lcobucci vendor/bin/simple-phpunit --exclude-group web-token\",\n            \"ENCODER=lcobucci ALGORITHM=HS256 vendor/bin/simple-phpunit --exclude-group web-token\",\n            \"ENCODER=user_id_claim vendor/bin/simple-phpunit --exclude-group web-token\",\n            \"PROVIDER=lexik_jwt vendor/bin/simple-phpunit --exclude-group web-token\"\n        ]\n    }\n}\n"
        },
        {
          "name": "ecs.php",
          "type": "blob",
          "size": 0.6884765625,
          "content": "<?php\n\ndeclare(strict_types=1);\n\nuse PhpCsFixer\\Fixer\\ArrayNotation\\ArraySyntaxFixer;\nuse PhpCsFixer\\Fixer\\Import\\OrderedImportsFixer;\nuse PhpCsFixer\\Fixer\\Phpdoc\\PhpdocScalarFixer;\nuse Symplify\\EasyCodingStandard\\Config\\ECSConfig;\nuse Symplify\\EasyCodingStandard\\ValueObject\\Set\\SetList;\n\nreturn static function (ECSConfig $config): void {\n    $config->sets([SetList::PSR_12]);\n    $config->rule(OrderedImportsFixer::class);\n    $config->ruleWithConfiguration(ArraySyntaxFixer::class, [\n        'syntax' => 'short',\n    ]);\n\n    $config->parallel();\n    $config->paths([__DIR__]);\n    $config->skip([\n        __DIR__ . '/.github',\n        __DIR__ . '/vendor',\n        PhpdocScalarFixer::class\n    ]);\n};\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.0693359375,
          "content": "parameters:\n    excludes_analyse:\n        - vendor/*\n        - Tests/*\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 1.625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<!-- https://phpunit.readthedocs.io/en/latest/configuration.html -->\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n         backupGlobals=\"false\"\n         bootstrap=\"vendor/autoload.php\"\n         beStrictAboutOutputDuringTests=\"true\"\n         beStrictAboutTodoAnnotatedTests=\"true\"\n         colors=\"true\"\n         verbose=\"true\"\n        >\n\n    <php>\n        <ini name=\"error_reporting\" value=\"-1\" />\n        <server name=\"KERNEL_CLASS\" value=\"Lexik\\Bundle\\JWTAuthenticationBundle\\Tests\\Functional\\AppKernel\" />\n        <server name=\"APP_ENV\" value=\"test\"  force=\"true\" />\n        <server name=\"APP_DEBUG\" value=\"true\" force=\"true\" />\n        <server name=\"SHELL_VERBOSITY\" value=\"-1\" />\n        <server name=\"SYMFONY_PHPUNIT_REMOVE\" value=\"\" />\n        <server name=\"SYMFONY_DEPRECATIONS_HELPER\" value=\"max[self]=0&amp;max[direct]=27\" />\n    </php>\n\n    <testsuites>\n        <testsuite name=\"LexikJWTAuthenticationBundle Test Suite\">\n            <directory>./Tests/</directory>\n        </testsuite>\n    </testsuites>\n\n    <coverage processUncoveredFiles=\"true\" cacheDirectory=\".coverage-cache\">\n        <include>\n            <directory suffix=\".php\">./</directory>\n        </include>\n        <exclude>\n            <directory suffix=\".php\">./Resources</directory>\n            <directory suffix=\".php\">./Tests</directory>\n            <directory suffix=\".php\">./vendor</directory>\n        </exclude>\n    </coverage>\n\n    <listeners>\n        <listener class=\"Symfony\\Bridge\\PhpUnit\\SymfonyTestsListener\" />\n    </listeners>\n</phpunit>\n"
        },
        {
          "name": "rector.php",
          "type": "blob",
          "size": 1.248046875,
          "content": "<?php\n\ndeclare(strict_types=1);\n\nuse Rector\\Config\\RectorConfig;\nuse Rector\\Core\\ValueObject\\PhpVersion;\nuse Rector\\Php73\\Rector\\FuncCall\\JsonThrowOnErrorRector;\nuse Rector\\Set\\ValueObject\\LevelSetList;\nuse Rector\\Symfony\\Set\\SymfonySetList;\nuse Rector\\TypeDeclaration\\Rector\\ClassMethod\\ReturnNeverTypeRector;\n\nreturn static function (RectorConfig $rectorConfig): void {\n    $rectorConfig->sets([\n        LevelSetList::UP_TO_PHP_71,\n        SymfonySetList::SYMFONY_CODE_QUALITY,\n        SymfonySetList::SYMFONY_CONSTRUCTOR_INJECTION,\n    ]);\n    $rectorConfig->phpVersion(\\Rector\\ValueObject\\PhpVersion::PHP_71);\n    $rectorConfig->importShortClasses(false);\n    $rectorConfig->importNames();\n    $rectorConfig->bootstrapFiles([\n        __DIR__ . '/vendor/autoload.php',\n    ]);\n    $rectorConfig->parallel();\n    $rectorConfig->paths([__DIR__]);\n    $rectorConfig->skip([\n        // Path\n        __DIR__ . '/.github',\n        __DIR__ . '/DependencyInjection/Configuration.php',\n        __DIR__ . '/Tests/DependencyInjection/LexikJWTAuthenticationExtensionTest.php',\n        __DIR__ . '/vendor',\n\n        // Rules\n        JsonThrowOnErrorRector::class,\n        ReturnNeverTypeRector::class => [\n            __DIR__ . '/Security/User/JWTUserProvider.php',\n        ],\n    ]);\n};\n"
        }
      ]
    }
  ]
}