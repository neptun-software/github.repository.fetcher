{
  "metadata": {
    "timestamp": 1736712043407,
    "page": 565,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thephpleague/html-to-markdown",
      "stars": 1787,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1845703125,
          "content": "; top-most EditorConfig file\nroot = true\n\n# All files.\n[*]\nend_of_line = LF\nindent_style = space\nindent_size = 4\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4853515625,
          "content": "# Path-based git attributes\n# https://www.kernel.org/pub/software/scm/git/docs/gitattributes.html\n\n# Ignore all test and documentation with \"export-ignore\".\n/.editorconfig      export-ignore\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/.scrutinizer.yml   export-ignore\n/.styleci.yml       export-ignore\n/.travis.yml        export-ignore\n/CONTRIBUTING.md    export-ignore\n/circle.yml         export-ignore\n/phpunit.xml.dist   export-ignore\n/tests              export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.052734375,
          "content": "~*\n/build/\n.phpunit.result.cache\nvendor\ncomposer.lock\n"
        },
        {
          "name": ".scrutinizer.yml",
          "type": "blob",
          "size": 1.0517578125,
          "content": "filter:\n    excluded_paths: [tests/*]\nbuild:\n    nodes:\n        analysis:\n            tests:\n                override:\n                    - php-scrutinizer-run\nchecks:\n    php:\n        code_rating: true\n        remove_extra_empty_lines: true\n        remove_php_closing_tag: true\n        remove_trailing_whitespace: true\n        fix_use_statements:\n            remove_unused: true\n            preserve_multiple: false\n            preserve_blanklines: true\n            order_alphabetically: true\n        fix_php_opening_tag: true\n        fix_linefeed: true\n        fix_line_ending: true\n        fix_identation_4spaces: true\n        fix_doc_comments: true\n\ntools:\n    external_code_coverage:\n        timeout: 1200\n        runs: 3\n    php_analyzer: true\n    php_code_coverage: false\n    php_code_sniffer:\n        config:\n            standard: PSR2\n        filter:\n            paths: ['src']\n    php_cpd:\n        enabled: true\n        excluded_dirs: [vendor, tests]\n    php_loc:\n        enabled: true\n        excluded_dirs: [vendor, tests]\n    php_pdepend: true\n    php_sim: true\n\n"
        },
        {
          "name": ".styleci.yml",
          "type": "blob",
          "size": 0.150390625,
          "content": "preset: recommended\n\nenabled:\n  - concat_with_spaces\n  - strict\n\ndisabled:\n  - concat_without_spaces\n  - phpdoc_short_description\n  - short_array_syntax\n\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 12.1171875,
          "content": "# Change Log\nAll notable changes to this project will be documented in this file.\nUpdates should follow the [Keep a CHANGELOG](http://keepachangelog.com/) principles.\n\n## [Unreleased][unreleased]\n\n## [5.1.1] - 2023-07-12\n\n### Fixed\n\n- Fixed `<pre>` tags with attributes not being parsed (#215, #238)\n- Fixed missing type checks and coercions\n\n## [5.1.0] - 2022-03-02\n\n### Changed\n\n - Changed horizontal rule style (#218, #219)\n\n### Fixed\n\n - Fixed `Element::getValue()` not handling possible nulls\n\n## [5.0.2] - 2021-11-06\n\n### Fixed\n\n - Fixed missplaced comment nodes appearing at the start of the HTML input (#212)\n\n## [5.0.1] - 2021-09-17\n\n### Fixed\n\n - Fixed lists not using the correct amount of indentation (#211)\n\n## [5.0.0] - 2021-03-28\n\n### Added\n\n - Added support for tables (#203)\n    - This feature is disable by default - see README for how to enable it\n - Added new `strip_placeholder_links` option to strip `<a>` tags without `href` attributes (#196)\n - Added new methods to `ElementInterface`:\n    - `hasParent()`\n    - `getNextSibling()`\n    - `getPreviousSibling()`\n    - `getListItemLevel()`\n - Added several parameter and return types across all classes\n - Added new `PreConverterInterface` to allow converters to perform any necessary pre-parsing\n\n### Changed\n\n - Supported PHP versions increased to PHP 7.2 - 8.0\n - `HtmlConverter::convert()` may now throw a `\\RuntimeException` when unexpected `DOMDocument`-related errors occur\n\n### Fixed\n\n - Fixed complex nested lists containing heading and paragraphs (#198)\n - Fixed consecutive emphasis producing incorrect markdown (#202)\n\n## [4.10.0] - 2020-06-30\n### Added\n\n - Added the ability to disable autolinking with a configuration option (#187, #188)\n\n## [4.9.1] - 2019-12-27\n### Fixed\n - Fixed issue with HTML entity escaping in text (#184)\n\n## [4.9.0] - 2019-11-02\n### Added\n - Added new option to preserve comments (#177, #179)\n\n## [4.8.3] - 2019-10-31\n### Fixed\n - Fixed whitespace preservation around `<code>` tags (#174, #178)\n\n## [4.8.2] - 2019-08-02\n### Fixed\n - Fixed headers not being placed onto a new line in some cases (#172)\n - Fixed handling of links containing spaces (#175)\n\n### Removed\n - Removed support for HHVM\n\n## [4.8.1] - 2018-12-24\n### Added\n - Added support for PHP 7.3\n\n### Fixed\n - Fixed paragraphs following tables (#165, #166)\n - Fixed incorrect list item escaping (#168, #169)\n\n## [4.8.0] - 2018-09-18\n### Added\n - Added support for email auto-linking\n - Added a new interface (`HtmlConverterInterface`) for the main `HtmlConverter` class\n - Added additional test cases (#14)\n\n### Changed\n - The `italic_style` option now defaults to `'*'` so that in-word emphasis is handled properly (#75)\n\n### Fixed\n - Fixed several issues of `<code>` and `<pre>` tags not converting to blocks or inlines properly (#26, #70, #102, #140, #161, #162)\n - Fixed in-word emphasis using underscores as delimiter (#75)\n - Fixed character escaping inside of `<div>` elements\n - Fixed header edge cases\n\n### Deprecated\n - The `bold_style` and `italic_style` options have been deprecated (#75)\n\n## [4.7.0] - 2018-05-19\n### Added\n - Added `setOptions()` function for chainable calling (#149)\n - Added new `list_item_style_alternate` option for converting every-other list with a different character (#155)\n\n### Fixed\n - Fixed insufficient newlines after code blocks (#144, #148)\n - Fixed trailing spaces not being preserved in link anchors (#157)\n - Fixed list-like lines not being escaped inside of lists items (#159)\n\n## [4.6.2]\n### Fixed\n - Fixed issue with emphasized spaces (#146)\n\n## [4.6.1]\n### Fixed\n - Fixed conversion of `<pre>` tags (#145)\n\n## [4.6.0]\n### Added\n - Added support for ordered lists starting at numbers other than 1\n\n### Fixed\n - Fixed overly-eager escaping of list-like text (#141)\n\n## [4.5.0]\n### Added\n - Added configuration option for list item style (#135, #136)\n\n## [4.4.1]\n\n### Fixed\n - Fixed autolinking of invalid URLs (#129)\n\n## [4.4.0]\n\n### Added\n - Added `hard_break` configuration option (#112, #115)\n - The `HtmlConverter` can now be instantiated with an `Environment` (#118)\n\n### Fixed\n - Fixed handling of paragraphs in list item elements (#47, #110)\n - Fixed phantom spaces when newlines follow `br` elements (#116, #117)\n - Fixed link converter not sanitizing inner spaces properly (#119, #120)\n\n## [4.3.1]\n### Changed\n - Revised the sanitization implementation (#109)\n\n### Fixed\n - Fixed tag-like content not being escaped (#67, #109)\n - Fixed thematic break-like content not being escaped (#65, #109)\n - Fixed codefence-like content not being escaped (#64, #109)\n\n## [4.3.0]\n### Added\n - Added full support for PHP 7.0 and 7.1\n\n### Changed\n - Changed `<pre>` and `<pre><code>` conversions to use backticks instead of indendation (#102)\n\n### Fixed\n - Fixed issue where specified code language was not preserved (#70, #102)\n - Fixed issue where `<code>` tags nested in `<pre>` was not converted properly (#70, #102)\n - Fixed header-like content not being escaped (#76, #105)\n - Fixed blockquote-like content not being escaped (#77, #103)\n - Fixed ordered list-like content not being escaped (#73, #106)\n - Fixed unordered list-like content not being escaped (#71, #107)\n\n## [4.2.2]\n### Fixed\n - Fixed sanitization bug which sometimes removes desired content (#63, #101)\n\n## [4.2.1]\n### Fixed\n - Fixed path to autoload.php when used as a library (#98)\n - Fixed edge case for tags containing only whitespace (#99)\n\n### Removed\n - Removed double HTML entity decoding, as this is not desireable (#60)\n\n## [4.2.0]\n\n### Added\n - Added the ability to invoke HtmlConverter objects as functions (#85)\n\n### Fixed\n - Fixed improper handling of nested list items (#19 and #84)\n - Fixed preceeding or trailing spaces within emphasis tags (#83)\n\n## [4.1.1]\n\n### Fixed\n - Fixed conversion of empty paragraphs (#78)\n - Fixed `preg_replace` so it wouldn't break UTF-8 characters (#79)\n\n## [4.1.0]\n\n### Added\n - Added `bin/html-to-markdown` script\n\n### Changed\n - Changed default italic character to `_` (#58)\n\n## [4.0.1]\n\n### Fixed\n - Added escaping to avoid * and _ in a text being rendered as emphasis (#48)\n\n### Removed\n - Removed the demo (#51)\n - `.styleci.yml` and `CONTRIBUTING.md` are no longer included in distributions (#50)\n\n## [4.0.0]\n\nThis release changes the visibility of several methods/properties. #42 and #43 brought to light that some visiblities were\nnot ideally set, so this releases fixes that. Moving forwards this should reduce the chance of introducing BC-breaking changes.\n\n### Added\n - Added new `HtmlConverter::getEnvironment()` method to expose the `Environment` (#42, #43)\n\n### Changed\n - Changed `Environment::addConverter()` from `protected` to `public`, enabling custom converters to be added (#42, #43)\n - Changed `HtmlConverter::createDOMDocument()` from `protected` to `private`\n - Changed `Element::nextCached` from `protected` to `private`\n - Made the `Environment` class `final`\n\n## [3.1.1]\n### Fixed\n - Empty HTML strings now result in empty Markdown documents (#40, #41)\n\n## [3.1.0]\n### Added\n - Added new `equals` method to `Element` to check for equality\n\n### Changes\n - Use Linux line endings consistently instead of plaform-specific line endings (#36)\n\n### Fixed\n - Cleaned up code style\n\n## [3.0.0]\n### Changed\n - Changed namespace to `League\\HTMLToMarkdown`\n - Changed packagist name to `league/html-to-markdown`\n - Re-organized code into several separate classes\n - `<a>` tags with identical href and inner text are now rendered using angular bracket syntax (#31)\n - `<div>` elements are now treated as block-level elements (#33)\n\n## [2.2.2]\n### Added\n - Added support for PHP 5.6 and HHVM\n - Enabled testing against PHP 7 nightlies\n - Added this CHANGELOG.md\n\n### Fixed\n - Fixed whitespace preservation between inline elements (#9 and #10)\n\n## [2.2.1]\n### Fixed\n - Preserve placeholder links (#22)\n\n## [2.2.0]\n### Added\n - Added CircleCI config\n\n### Changed\n - `<pre>` blocks are now treated as code elements\n\n### Removed\n - Dropped support for PHP 5.2\n - Removed incorrect README comment regarding `#text` nodes (#17)\n\n## [2.1.2]\n### Added\n - Added the ability to blacklist/remove specific node types (#11)\n\n### Changed\n - Line breaks are now placed after divs instead of before them\n - Newlines inside of link texts are now removed\n - Updated the minimum PHPUnit version to 4.*\n\n## [2.1.1]\n### Added\n - Added options to customize emphasis characters\n\n## [2.1.0]\n### Added\n - Added option to strip HTML tags without Markdown equivalents\n - Added `convert()` method for converter reuse\n - Added ability to set options after instance construction\n - Documented the required PHP extensions (#4)\n\n### Changed\n - ATX style now used for h1 and h2 tags inside blockquotes\n\n### Fixed\n - Newlines inside blockquotes are now started with a bracket\n - Fixed some incorrect docblocks\n - `__toString()` now returns an empty string if input is empty\n - Convert head tag if body tag is empty (#7)\n - Preserve special characters inside tags without md equivalents (#6)\n\n\n## [2.0.1]\n### Fixed\n - Fixed first line indentation for multi-line code blocks\n - Fixed consecutive anchors get separating spaces stripped (#3)\n\n## [2.0.0]\n### Added\n - Initial release\n\n[unreleased]: https://github.com/thephpleague/html-to-markdown/compare/5.1.1...master\n[5.1.1]: https://github.com/thephpleague/html-to-markdown/compare/5.1.0...5.1.1\n[5.1.0]: https://github.com/thephpleague/html-to-markdown/compare/5.0.2...5.1.0\n[5.0.2]: https://github.com/thephpleague/html-to-markdown/compare/5.0.1...5.0.2\n[5.0.1]: https://github.com/thephpleague/html-to-markdown/compare/5.0.0...5.0.1\n[5.0.0]: https://github.com/thephpleague/html-to-markdown/compare/4.10.0...5.0.0\n[4.10.0]: https://github.com/thephpleague/html-to-markdown/compare/4.9.1...4.10.0\n[4.9.1]: https://github.com/thephpleague/html-to-markdown/compare/4.9.0...4.9.1\n[4.9.0]: https://github.com/thephpleague/html-to-markdown/compare/4.8.3...4.9.0\n[4.8.3]: https://github.com/thephpleague/html-to-markdown/compare/4.8.2...4.8.3\n[4.8.2]: https://github.com/thephpleague/html-to-markdown/compare/4.8.1...4.8.2\n[4.8.1]: https://github.com/thephpleague/html-to-markdown/compare/4.8.0...4.8.1\n[4.8.0]: https://github.com/thephpleague/html-to-markdown/compare/4.7.0...4.8.0\n[4.7.0]: https://github.com/thephpleague/html-to-markdown/compare/4.6.2...4.7.0\n[4.6.2]: https://github.com/thephpleague/html-to-markdown/compare/4.6.1...4.6.2\n[4.6.1]: https://github.com/thephpleague/html-to-markdown/compare/4.6.0...4.6.1\n[4.6.0]: https://github.com/thephpleague/html-to-markdown/compare/4.5.0...4.6.0\n[4.5.0]: https://github.com/thephpleague/html-to-markdown/compare/4.4.1...4.5.0\n[4.4.1]: https://github.com/thephpleague/html-to-markdown/compare/4.4.0...4.4.1\n[4.4.0]: https://github.com/thephpleague/html-to-markdown/compare/4.3.1...4.4.0\n[4.3.1]: https://github.com/thephpleague/html-to-markdown/compare/4.3.0...4.3.1\n[4.3.0]: https://github.com/thephpleague/html-to-markdown/compare/4.2.2...4.3.0\n[4.2.2]: https://github.com/thephpleague/html-to-markdown/compare/4.2.1...4.2.2\n[4.2.1]: https://github.com/thephpleague/html-to-markdown/compare/4.2.0...4.2.1\n[4.2.0]: https://github.com/thephpleague/html-to-markdown/compare/4.1.1...4.2.0\n[4.1.1]: https://github.com/thephpleague/html-to-markdown/compare/4.1.0...4.1.1\n[4.1.0]: https://github.com/thephpleague/html-to-markdown/compare/4.0.1...4.1.0\n[4.0.1]: https://github.com/thephpleague/html-to-markdown/compare/4.0.0...4.0.1\n[4.0.0]: https://github.com/thephpleague/html-to-markdown/compare/3.1.1...4.0.0\n[3.1.1]: https://github.com/thephpleague/html-to-markdown/compare/3.1.0...3.1.1\n[3.1.0]: https://github.com/thephpleague/html-to-markdown/compare/3.0.0...3.1.0\n[3.0.0]: https://github.com/thephpleague/html-to-markdown/compare/2.2.2...3.0.0\n[2.2.2]: https://github.com/thephpleague/html-to-markdown/compare/2.2.1...2.2.2\n[2.2.1]: https://github.com/thephpleague/html-to-markdown/compare/2.2.0...2.2.1\n[2.2.0]: https://github.com/thephpleague/html-to-markdown/compare/2.1.2...2.2.0\n[2.1.2]: https://github.com/thephpleague/html-to-markdown/compare/2.1.1...2.1.2\n[2.1.1]: https://github.com/thephpleague/html-to-markdown/compare/2.1.0...2.1.1\n[2.1.0]: https://github.com/thephpleague/html-to-markdown/compare/2.0.1...2.1.0\n[2.0.1]: https://github.com/thephpleague/html-to-markdown/compare/2.0.0...2.0.1\n[2.0.0]: https://github.com/thephpleague/html-to-markdown/compare/775f91e...2.0.0\n\n"
        },
        {
          "name": "CONDUCT.md",
          "type": "blob",
          "size": 1.9345703125,
          "content": "# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.2.0, available at [http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.3193359375,
          "content": "# Contributing\n\nContributions are **welcome** and will be fully **credited**.\n\nWe accept contributions via Pull Requests on [Github](https://github.com/thephpleague/html-to-markdown).\n\n\n## Pull Requests\n\n- **[PSR-2 Coding Standard](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md)** - The easiest way to apply the conventions is to install [PHP Code Sniffer](http://pear.php.net/package/PHP_CodeSniffer).\n\n- **Add tests!** - Your patch won't be accepted if it doesn't have tests.\n\n- **Document any change in behaviour** - Make sure the `README.md` and any other relevant documentation are kept up-to-date.\n\n- **Consider our release cycle** - We try to follow [SemVer v2.0.0](http://semver.org/). Randomly breaking public APIs is not an option.\n\n- **Create feature branches** - Don't ask us to pull from your master branch.\n\n- **One pull request per feature** - If you want to do more than one thing, send multiple pull requests.\n\n- **Send coherent history** - Make sure each individual commit in your pull request is meaningful. If you had to make multiple intermediate commits while developing, please [squash them](http://www.git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Changing-Multiple-Commit-Messages) before submitting.\n\n\n## Running Tests\n\n``` bash\n$ ./vendor/bin/phpunit\n```\n\n\n**Happy coding**!\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0869140625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Colin O'Dell; Originally created by Nick Cernis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.0380859375,
          "content": "HTML To Markdown for PHP\n========================\n\n[![Latest Version](https://img.shields.io/packagist/v/league/html-to-markdown.svg?style=flat-square)](https://packagist.org/packages/league/html-to-markdown)\n[![Software License](http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE)\n[![Build Status](https://img.shields.io/github/workflow/status/thephpleague/html-to-markdown/Tests/master.svg?style=flat-square)](https://github.com/thephpleague/html-to-markdown/actions?query=workflow%3ATests+branch%3Amaster)\n[![Coverage Status](https://img.shields.io/scrutinizer/coverage/g/thephpleague/html-to-markdown.svg?style=flat-square)](https://scrutinizer-ci.com/g/thephpleague/html-to-markdown/code-structure)\n[![Quality Score](https://img.shields.io/scrutinizer/g/thephpleague/html-to-markdown.svg?style=flat-square)](https://scrutinizer-ci.com/g/thephpleague/html-to-markdown)\n[![Total Downloads](https://img.shields.io/packagist/dt/league/html-to-markdown.svg?style=flat-square)](https://packagist.org/packages/league/html-to-markdown)\n\nLibrary which converts HTML to [Markdown](http://daringfireball.net/projects/markdown/) for your sanity and convenience.\n\n\n**Requires**: PHP 7.2+\n\n**Lead Developer**: [@colinodell](http://twitter.com/colinodell)\n\n**Original Author**: [@nickcernis](http://twitter.com/nickcernis)\n\n\n### Why convert HTML to Markdown?\n\n*\"What alchemy is this?\"* you mutter. *\"I can see why you'd convert [Markdown to HTML](https://github.com/thephpleague/commonmark),\"* you continue, already labouring the question somewhat, *\"but why go the other way?\"*\n\nTypically you would convert HTML to Markdown if:\n\n1. You have an existing HTML document that needs to be edited by people with good taste.\n2. You want to store new content in HTML format but edit it as Markdown.\n3. You want to convert HTML email to plain text email.\n4. You know a guy who's been converting HTML to Markdown for years, and now he can speak Elvish. You'd quite like to be able to speak Elvish.\n5. You just really like Markdown.\n\n### How to use it\n\nRequire the library by issuing this command:\n\n```bash\ncomposer require league/html-to-markdown\n```\n\nAdd `require 'vendor/autoload.php';` to the top of your script.\n\nNext, create a new HtmlConverter instance, passing in your valid HTML code to its `convert()` function:\n\n```php\nuse League\\HTMLToMarkdown\\HtmlConverter;\n\n$converter = new HtmlConverter();\n\n$html = \"<h3>Quick, to the Batpoles!</h3>\";\n$markdown = $converter->convert($html);\n```\n\nThe `$markdown` variable now contains the Markdown version of your HTML as a string:\n\n```php\necho $markdown; // ==> ### Quick, to the Batpoles!\n```\n\nThe included `demo` directory contains an HTML->Markdown conversion form to try out.\n\n### Conversion options\n\n> [!CAUTION]  \n> By default, this library preserves HTML tags without Markdown equivalents, like `<span>`, `<div>`, `<iframe>`, `<script>`, etc. If you will be parsing untrusted input from users, **please consider setting the `strip_tags` and/or `remove_nodes` options** documented below, and also using a library (like [HTML Purifier](https://github.com/ezyang/htmlpurifier)) to provide additional HTML filtering.\n\nTo strip HTML tags that don't have a Markdown equivalent while preserving the content inside them, set `strip_tags` to true, like this:\n\n```php\n$converter = new HtmlConverter(array('strip_tags' => true));\n\n$html = '<span>Turnips!</span>';\n$markdown = $converter->convert($html); // $markdown now contains \"Turnips!\"\n```\n\nOr more explicitly, like this:\n\n```php\n$converter = new HtmlConverter();\n$converter->getConfig()->setOption('strip_tags', true);\n\n$html = '<span>Turnips!</span>';\n$markdown = $converter->convert($html); // $markdown now contains \"Turnips!\"\n```\n\nNote that only the tags themselves are stripped, not the content they hold.\n\nTo strip tags and their content, pass a space-separated list of tags in `remove_nodes`, like this:\n\n```php\n$converter = new HtmlConverter(array('remove_nodes' => 'span div'));\n\n$html = '<span>Turnips!</span><div>Monkeys!</div>';\n$markdown = $converter->convert($html); // $markdown now contains \"\"\n```\n\nBy default, all comments are stripped from the content. To preserve them, use the `preserve_comments` option, like this:\n\n```php\n$converter = new HtmlConverter(array('preserve_comments' => true));\n\n$html = '<span>Turnips!</span><!-- Monkeys! -->';\n$markdown = $converter->convert($html); // $markdown now contains \"Turnips!<!-- Monkeys! -->\"\n```\n\nTo preserve only specific comments, set `preserve_comments` with an array of strings, like this:\n\n```php\n$converter = new HtmlConverter(array('preserve_comments' => array('Eggs!')));\n\n$html = '<span>Turnips!</span><!-- Monkeys! --><!-- Eggs! -->';\n$markdown = $converter->convert($html); // $markdown now contains \"Turnips!<!-- Eggs! -->\"\n```\n\nBy default, placeholder links are preserved. To strip the placeholder links, use the `strip_placeholder_links` option, like this:\n\n```php\n$converter = new HtmlConverter(array('strip_placeholder_links' => true));\n\n$html = '<a>Github</a>';\n$markdown = $converter->convert($html); // $markdown now contains \"Github\"\n```\n\n### Style options\n\nBy default bold tags are converted using the asterisk syntax, and italic tags are converted using the underlined syntax. Change these by using the `bold_style` and `italic_style` options.\n\n```php\n$converter = new HtmlConverter();\n$converter->getConfig()->setOption('italic_style', '*');\n$converter->getConfig()->setOption('bold_style', '__');\n\n$html = '<em>Italic</em> and a <strong>bold</strong>';\n$markdown = $converter->convert($html); // $markdown now contains \"*Italic* and a __bold__\"\n```\n\n### Line break options\n\nBy default, `br` tags are converted to two spaces followed by a newline character as per [traditional Markdown](https://daringfireball.net/projects/markdown/syntax#p). Set `hard_break` to `true` to omit the two spaces, as per GitHub Flavored Markdown (GFM).\n\n```php\n$converter = new HtmlConverter();\n$html = '<p>test<br>line break</p>';\n\n$converter->getConfig()->setOption('hard_break', true);\n$markdown = $converter->convert($html); // $markdown now contains \"test\\nline break\"\n\n$converter->getConfig()->setOption('hard_break', false); // default\n$markdown = $converter->convert($html); // $markdown now contains \"test  \\nline break\"\n```\n\n### Autolinking options\n\nBy default, `a` tags are converted to the easiest possible link syntax, i.e. if no text or title is available, then the `<url>` syntax will be used rather than the full `[url](url)` syntax. Set `use_autolinks` to `false` to change this behavior to always use the full link syntax.\n\n```php\n$converter = new HtmlConverter();\n$html = '<p><a href=\"https://thephpleague.com\">https://thephpleague.com</a></p>';\n\n$converter->getConfig()->setOption('use_autolinks', true);\n$markdown = $converter->convert($html); // $markdown now contains \"<https://thephpleague.com>\"\n\n$converter->getConfig()->setOption('use_autolinks', false); // default\n$markdown = $converter->convert($html); // $markdown now contains \"[https://thephpleague.com](https://thephpleague.com)\"\n```\n\n### Passing custom Environment object\n\nYou can pass current `Environment` object to customize i.e. which converters should be used.\n\n```php\n$environment = new Environment(array(\n    // your configuration here\n));\n$environment->addConverter(new HeaderConverter()); // optionally - add converter manually\n\n$converter = new HtmlConverter($environment);\n\n$html = '<h3>Header</h3>\n<img src=\"\" />\n';\n$markdown = $converter->convert($html); // $markdown now contains \"### Header\" and \"<img src=\"\" />\"\n```\n\n### Table support\n\nSupport for Markdown tables is not enabled by default because it is not part of the original Markdown syntax. To use tables add the converter explicitly:\n\n```php\nuse League\\HTMLToMarkdown\\HtmlConverter;\nuse League\\HTMLToMarkdown\\Converter\\TableConverter;\n\n$converter = new HtmlConverter();\n$converter->getEnvironment()->addConverter(new TableConverter());\n\n$html = \"<table><tr><th>A</th></tr><tr><td>a</td></tr></table>\";\n$markdown = $converter->convert($html);\n```\n\n### Limitations\n\n- Markdown Extra, MultiMarkdown and other variants aren't supported – just Markdown.\n\n### Style notes\n\n- Setext (underlined) headers are the default for H1 and H2. If you prefer the ATX style for H1 and H2 (# Header 1 and ## Header 2), set `header_style` to 'atx' in the options array when you instantiate the object:\n\n    `$converter = new HtmlConverter(array('header_style'=>'atx'));`\n\n     Headers of H3 priority and lower always use atx style.\n\n- Links and images are referenced inline. Footnote references (where image src and anchor href attributes are listed in the footnotes) are not used.\n- Blockquotes aren't line wrapped – it makes the converted Markdown easier to edit.\n\n### Dependencies\n\nHTML To Markdown requires PHP's [xml](http://www.php.net/manual/en/xml.installation.php), [lib-xml](http://www.php.net/manual/en/libxml.installation.php), and [dom](http://www.php.net/manual/en/dom.installation.php) extensions, all of which are enabled by default on most distributions.\n\nErrors such as \"Fatal error: Class 'DOMDocument' not found\" on distributions such as CentOS that disable PHP's xml extension can be resolved by installing php-xml.\n\n### Contributors\n\nMany thanks to all [contributors](https://github.com/thephpleague/html-to-markdown/graphs/contributors) so far. Further improvements and feature suggestions are very welcome.\n\n### How it works\n\nHTML To Markdown creates a DOMDocument from the supplied HTML, walks through the tree, and converts each node to a text node containing the equivalent markdown, starting from the most deeply nested node and working inwards towards the root node.\n\n### To-do\n\n- Support for nested lists and lists inside blockquotes.\n- Offer an option to preserve tags as HTML if they contain attributes that can't be represented with Markdown (e.g. `style`).\n\n### Trying to convert Markdown to HTML?\n\nUse one of these great libraries:\n\n - [league/commonmark](https://github.com/thephpleague/commonmark) (recommended)\n - [cebe/markdown](https://github.com/cebe/markdown)\n - [PHP Markdown](https://michelf.ca/projects/php-markdown/)\n - [Parsedown](https://github.com/erusev/parsedown)\n\nNo guarantees about the Elvish, though.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.76953125,
          "content": "{\n    \"name\": \"league/html-to-markdown\",\n    \"type\": \"library\",\n    \"description\": \"An HTML-to-markdown conversion helper for PHP\",\n    \"keywords\": [\"markdown\", \"html\"],\n    \"homepage\": \"https://github.com/thephpleague/html-to-markdown\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Colin O'Dell\",\n            \"email\": \"colinodell@gmail.com\",\n            \"homepage\": \"https://www.colinodell.com\",\n            \"role\": \"Lead Developer\"\n        },\n        {\n            \"name\": \"Nick Cernis\",\n            \"email\": \"nick@cern.is\",\n            \"homepage\": \"http://modernnerd.net\",\n            \"role\": \"Original Author\"\n        }\n    ],\n    \"autoload\": {\n        \"psr-4\": {\n            \"League\\\\HTMLToMarkdown\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"League\\\\HTMLToMarkdown\\\\Test\\\\\": \"tests\"\n        }\n    },\n    \"require\": {\n        \"php\": \"^7.2.5 || ^8.0\",\n        \"ext-dom\": \"*\",\n        \"ext-xml\": \"*\"\n    },\n    \"require-dev\": {\n        \"mikehaertl/php-shellcommand\": \"^1.1.0\",\n        \"phpstan/phpstan\": \"^1.8.8\",\n        \"phpunit/phpunit\": \"^8.5 || ^9.2\",\n        \"scrutinizer/ocular\": \"^1.6\",\n        \"unleashedtech/php-coding-standard\": \"^2.7 || ^3.0\",\n        \"vimeo/psalm\": \"^4.22 || ^5.0\"\n    },\n    \"bin\": [\"bin/html-to-markdown\"],\n    \"scripts\": {\n        \"phpcs\": \"phpcs\",\n        \"phpstan\": \"phpstan analyse\",\n        \"phpunit\": \"phpunit --no-coverage\",\n        \"psalm\": \"psalm --stats\",\n        \"test\": [\n            \"@phpcs\",\n            \"@phpstan\",\n            \"@psalm\",\n            \"@phpunit\"\n        ]\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"5.2-dev\"\n        }\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"dealerdirect/phpcodesniffer-composer-installer\": true\n        }\n    }\n}\n"
        },
        {
          "name": "phpcs.xml.dist",
          "type": "blob",
          "size": 0.8291015625,
          "content": "<?xml version=\"1.0\"?>\n<ruleset>\n    <arg name=\"basepath\" value=\".\"/>\n    <arg name=\"extensions\" value=\"php\"/>\n    <arg name=\"parallel\" value=\"80\"/>\n    <arg name=\"cache\" value=\".phpcs-cache\"/>\n    <arg name=\"colors\"/>\n\n    <!-- Ignore warnings, show progress of the run and show sniff names -->\n    <arg value=\"nps\"/>\n\n    <!-- Directories to be checked -->\n    <file>src</file>\n    <file>tests</file>\n\n    <!-- Include full Unleashed Coding Standard -->\n    <rule ref=\"Unleashed\"/>\n\n    <rule ref=\"SlevomatCodingStandard.Commenting.ForbiddenAnnotations.AnnotationForbidden\">\n        <exclude-pattern>src/HtmlConverter*\\.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.Commenting.DocCommentSpacing.IncorrectOrderOfAnnotationsGroup\">\n        <exclude-pattern>src/HtmlConverter*\\.php</exclude-pattern>\n    </rule>\n\n</ruleset>\n"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.04296875,
          "content": "parameters:\n  level: max\n  paths:\n    - src\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 1.03125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit bootstrap=\"vendor/autoload.php\"\n         backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         colors=\"true\"\n         verbose=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\">\n    <testsuites>\n        <testsuite name=\"HTML To Markdown Test Suite\">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist>\n            <directory suffix=\".php\">src/</directory>\n        </whitelist>\n    </filter>\n    <logging>\n        <log type=\"tap\" target=\"build/report.tap\"/>\n        <log type=\"junit\" target=\"build/report.junit.xml\"/>\n        <log type=\"coverage-html\" target=\"build/coverage\" charset=\"UTF-8\" yui=\"true\" highlight=\"true\"/>\n        <log type=\"coverage-text\" target=\"build/coverage.txt\"/>\n        <log type=\"coverage-clover\" target=\"build/logs/clover.xml\"/>\n    </logging>\n</phpunit>\n"
        },
        {
          "name": "psalm.xml",
          "type": "blob",
          "size": 0.43359375,
          "content": "<?xml version=\"1.0\"?>\n<psalm\n    errorLevel=\"3\"\n    resolveFromConfigFile=\"true\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"https://getpsalm.org/schema/config\"\n    xsi:schemaLocation=\"https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd\"\n>\n    <projectFiles>\n        <directory name=\"src\" />\n        <ignoreFiles>\n            <directory name=\"vendor\" />\n        </ignoreFiles>\n    </projectFiles>\n</psalm>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}