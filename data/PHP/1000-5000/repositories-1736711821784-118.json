{
  "metadata": {
    "timestamp": 1736711821784,
    "page": 118,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "silexphp/Silex",
      "stars": 3569,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.04296875,
          "content": "/phpunit.xml\n/vendor\n/build\n/composer.lock\n\n"
        },
        {
          "name": ".php_cs.dist",
          "type": "blob",
          "size": 0.65625,
          "content": "<?php\n\nreturn PhpCsFixer\\Config::create()\n    ->setRules(array(\n        '@Symfony' => true,\n        '@Symfony:risky' => true,\n        '@PHPUnit48Migration:risky' => true,\n        'php_unit_no_expectation_annotation' => false, // part of `PHPUnitXYMigration:risky` ruleset, to be enabled when PHPUnit 4.x support will be dropped, as we don't want to rewrite exceptions handling twice\n        'array_syntax' => array('syntax' => 'short'),\n        'protected_to_private' => false,\n    ))\n    ->setRiskyAllowed(true)\n    ->setFinder(\n        PhpCsFixer\\Finder::create()\n            ->in(__DIR__.'/src/')\n            ->in(__DIR__.'/tests/')\n            ->name('*.php')\n    )\n;\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.45703125,
          "content": "language: php\n\nsudo: false\n\nenv:\n    global:\n        - SYMFONY_DEPRECATIONS_HELPER=weak\n        - SYMFONY_PHPUNIT_DIR=$HOME/.symfony-phpunit\n\ncache:\n    directories:\n      - $HOME/.composer/cache/files\n      - $HOME/.symfony-phpunit\n\nbefore_install:\n    - phpenv config-rm xdebug.ini\n    - composer update --no-suggest\n\ninstall:\n    - ./vendor/bin/simple-phpunit install\n\nscript: ./vendor/bin/simple-phpunit\n\nmatrix:\n    include:\n        - php: 7.1\n        - php: 7.2\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "Copyright (c) 2010-2017 Fabien Potencier\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 1.734375,
          "content": "Silex, a simple Web Framework\n=============================\n\n**WARNING**: Silex is in maintenance mode only. Ends of life is set to June\n2018. Read more on `Symfony's blog <https://symfony.com/blog/the-end-of-silex>`_.\n\nSilex is a PHP micro-framework to develop websites based on `Symfony\ncomponents`_:\n\n.. code-block:: php\n\n    <?php\n\n    require_once __DIR__.'/../vendor/autoload.php';\n\n    $app = new Silex\\Application();\n\n    $app->get('/hello/{name}', function ($name) use ($app) {\n      return 'Hello '.$app->escape($name);\n    });\n\n    $app->run();\n\nSilex works with PHP 7.1.3 or later.\n\nInstallation\n------------\n\nThe recommended way to install Silex is through `Composer`_:\n\n.. code-block:: bash\n\n    composer require silex/silex \"~2.0\"\n\nAlternatively, you can download the `silex.zip`_ file and extract it.\n\nMore Information\n----------------\n\nRead the `documentation`_ for more information and `changelog\n<doc/changelog.rst>`_ for upgrading information.\n\nTests\n-----\n\nTo run the test suite, you need `Composer`_ and `PHPUnit`_:\n\n.. code-block:: bash\n\n    composer install\n    phpunit\n\nSupport\n-------\n\nIf you have a configuration problem use the `silex tag`_ on StackOverflow to ask a question.\n\nIf you think there is an actual problem in Silex, please `open an issue`_ if there isn't one already created.\n\nLicense\n-------\n\nSilex is licensed under the MIT license.\n\n.. _Symfony components: https://symfony.com\n.. _Composer:           https://getcomposer.org\n.. _PHPUnit:            https://phpunit.de\n.. _silex.zip:          https://silex.symfony.com/download\n.. _documentation:      https://silex.symfony.com/documentation\n.. _silex tag:          https://stackoverflow.com/questions/tagged/silex\n.. _open an issue:      https://github.com/silexphp/Silex/issues/new\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.9853515625,
          "content": "{\n    \"name\": \"silex/silex\",\n    \"description\": \"The PHP micro-framework based on the Symfony Components\",\n    \"keywords\": [\"microframework\"],\n    \"homepage\": \"https://silex.symfony.com\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Fabien Potencier\",\n            \"email\": \"fabien@symfony.com\"\n        },\n        {\n            \"name\": \"Igor Wiedler\",\n            \"email\": \"igor@wiedler.ch\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=7.1.3\",\n        \"pimple/pimple\": \"^3.0\",\n        \"symfony/event-dispatcher\": \"^4.0\",\n        \"symfony/http-foundation\": \"^4.0\",\n        \"symfony/http-kernel\": \"^4.0\",\n        \"symfony/routing\": \"^4.0\"\n    },\n    \"require-dev\": {\n        \"symfony/asset\": \"^4.0\",\n        \"symfony/expression-language\": \"^4.0\",\n        \"symfony/security\": \"^4.0\",\n        \"symfony/config\": \"^4.0\",\n        \"symfony/form\": \"^4.0\",\n        \"symfony/browser-kit\": \"^4.0\",\n        \"symfony/css-selector\": \"^4.0\",\n        \"symfony/debug\": \"^4.0\",\n        \"symfony/dom-crawler\": \"^4.0\",\n        \"symfony/finder\": \"^4.0\",\n        \"symfony/intl\": \"^4.0\",\n        \"symfony/monolog-bridge\": \"^4.0\",\n        \"symfony/doctrine-bridge\": \"^4.0\",\n        \"symfony/options-resolver\": \"^4.0\",\n        \"symfony/phpunit-bridge\": \"^3.2\",\n        \"symfony/process\": \"^4.0\",\n        \"symfony/serializer\": \"^4.0\",\n        \"symfony/translation\": \"^4.0\",\n        \"symfony/twig-bridge\": \"^4.0\",\n        \"symfony/validator\": \"^4.0\",\n        \"symfony/var-dumper\": \"^4.0\",\n        \"twig/twig\": \"^2.0\",\n        \"doctrine/dbal\": \"^2.2\",\n        \"swiftmailer/swiftmailer\": \"^5\",\n        \"monolog/monolog\": \"^1.4.1\",\n        \"symfony/web-link\": \"^4.0\"\n    },\n    \"replace\": {\n        \"silex/api\": \"self.version\",\n        \"silex/providers\": \"self.version\"\n    },\n    \"autoload\": {\n        \"psr-4\": { \"Silex\\\\\": \"src/Silex\" }\n    },\n    \"autoload-dev\" : {\n        \"psr-4\": { \"Silex\\\\Tests\\\\\" : \"tests/Silex/Tests\" }\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"2.3.x-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.654296875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\"\n         syntaxCheck=\"false\"\n         bootstrap=\"vendor/autoload.php\"\n>\n    <testsuites>\n        <testsuite name=\"Silex Test Suite\">\n            <directory>./tests/Silex/</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist>\n            <directory>./src</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}