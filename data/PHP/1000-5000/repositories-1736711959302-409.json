{
  "metadata": {
    "timestamp": 1736711959302,
    "page": 409,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sebastianbergmann/phpcpd",
      "stars": 2214,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3427734375,
          "content": "/.github                export-ignore\n/.phive                 export-ignore\n/.php-cs-fixer.dist.php export-ignore\n/build                  export-ignore\n/build.xml              export-ignore\n/phpunit.xml            export-ignore\n/tests                  export-ignore\n/tools                  export-ignore\n/tools/*                binary\n\n*.php diff=php\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1103515625,
          "content": "/build/phar\n/build/*.phar*\n/.idea\n/vendor\n/.php-cs-fixer.php\n/.php-cs-fixer.cache\n/.phpunit.cache\n/composer.lock\n"
        },
        {
          "name": ".phive",
          "type": "tree",
          "content": null
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 10.6474609375,
          "content": "<?php declare(strict_types=1);\n$header = <<<'EOF'\nThis file is part of PHP Copy/Paste Detector (PHPCPD).\n\n(c) Sebastian Bergmann <sebastian@phpunit.de>\n\nFor the full copyright and license information, please view the LICENSE\nfile that was distributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/unit');\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAllowed(true)\n    ->setRules([\n        'align_multiline_comment' => true,\n        'array_indentation' => true,\n        'array_push' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'backtick_to_shell_exec' => true,\n        'binary_operator_spaces' => [\n            'operators' => [\n                '=' => 'align_single_space_minimal',\n                '=>' => 'align_single_space_minimal',\n            ],\n        ],\n        'blank_line_after_namespace' => true,\n        'blank_line_before_statement' => [\n            'statements' => [\n                'break',\n                'continue',\n                'declare',\n                'default',\n                'do',\n                'exit',\n                'for',\n                'foreach',\n                'goto',\n                'if',\n                'include',\n                'include_once',\n                'require',\n                'require_once',\n                'return',\n                'switch',\n                'throw',\n                'try',\n                'while',\n                'yield',\n            ],\n        ],\n        'braces' => true,\n        'cast_spaces' => true,\n        'class_attributes_separation' => [\n            'elements' => [\n                'const' => 'one',\n                'method' => 'one',\n                'property' => 'one'\n            ]\n        ],\n        'class_definition' => true,\n        'clean_namespace' => true,\n        'combine_consecutive_issets' => true,\n        'combine_consecutive_unsets' => true,\n        'combine_nested_dirname' => true,\n        'compact_nullable_typehint' => true,\n        'concat_space' => ['spacing' => 'one'],\n        'constant_case' => true,\n        'declare_equal_normalize' => ['space' => 'none'],\n        'declare_strict_types' => true,\n        'dir_constant' => true,\n        'echo_tag_syntax' => true,\n        'elseif' => true,\n        'encoding' => true,\n        'ereg_to_preg' => true,\n        'explicit_indirect_variable' => true,\n        'explicit_string_variable' => true,\n        'fopen_flag_order' => true,\n        'full_opening_tag' => true,\n        'fully_qualified_strict_types' => true,\n        'function_declaration' => true,\n        'function_to_constant' => true,\n        'function_typehint_space' => true,\n        'global_namespace_import' => [\n            'import_classes' => true,\n            'import_constants' => true,\n            'import_functions' => true,\n        ],\n        'header_comment' => ['header' => $header, 'separate' => 'none'],\n        'heredoc_to_nowdoc' => true,\n        'implode_call' => true,\n        'include' => true,\n        'increment_style' => [\n            'style' => PhpCsFixer\\Fixer\\Operator\\IncrementStyleFixer::STYLE_POST,\n        ],\n        'indentation_type' => true,\n        'is_null' => true,\n        'lambda_not_used_import' => true,\n        'line_ending' => true,\n        'list_syntax' => ['syntax' => 'short'],\n        'logical_operators' => true,\n        'lowercase_cast' => true,\n        'lowercase_keywords' => true,\n        'lowercase_static_reference' => true,\n        'magic_constant_casing' => true,\n        'magic_method_casing' => true,\n        'method_argument_space' => [\n            'on_multiline' => 'ensure_fully_multiline',\n        ],\n        'modernize_types_casting' => true,\n        'multiline_comment_opening_closing' => true,\n        'multiline_whitespace_before_semicolons' => true,\n        'native_constant_invocation' => false,\n        'native_function_casing' => false,\n        'native_function_invocation' => false,\n        'native_function_type_declaration_casing' => true,\n        'new_with_braces' => false,\n        'no_alias_functions' => true,\n        'no_alias_language_construct_call' => true,\n        'no_alternative_syntax' => true,\n        'no_binary_string' => true,\n        'no_blank_lines_after_class_opening' => true,\n        'no_blank_lines_after_phpdoc' => true,\n        'no_blank_lines_before_namespace' => true,\n        'no_break_comment' => true,\n        'no_closing_tag' => true,\n        'no_empty_comment' => true,\n        'no_empty_phpdoc' => true,\n        'no_empty_statement' => true,\n        'no_extra_blank_lines' => true,\n        'no_homoglyph_names' => true,\n        'no_leading_import_slash' => true,\n        'no_leading_namespace_whitespace' => true,\n        'no_mixed_echo_print' => ['use' => 'print'],\n        'no_multiline_whitespace_around_double_arrow' => true,\n        'no_null_property_initialization' => true,\n        'no_php4_constructor' => true,\n        'no_short_bool_cast' => true,\n        'no_singleline_whitespace_before_semicolons' => true,\n        'no_spaces_after_function_name' => true,\n        'no_spaces_around_offset' => true,\n        'no_spaces_inside_parenthesis' => true,\n        'no_superfluous_elseif' => true,\n        'no_superfluous_phpdoc_tags' => [\n            'allow_mixed' => true,\n        ],\n        'no_trailing_comma_in_list_call' => true,\n        'no_trailing_comma_in_singleline_array' => true,\n        'no_trailing_whitespace' => true,\n        'no_trailing_whitespace_in_comment' => true,\n        'no_trailing_whitespace_in_string' => true,\n        'no_unneeded_control_parentheses' => true,\n        'no_unneeded_curly_braces' => true,\n        'no_unneeded_final_method' => true,\n        'no_unreachable_default_argument_value' => true,\n        'no_unset_cast' => true,\n        'no_unset_on_property' => true,\n        'no_unused_imports' => true,\n        'no_useless_else' => true,\n        'no_useless_return' => true,\n        'no_useless_sprintf' => true,\n        'no_whitespace_before_comma_in_array' => true,\n        'no_whitespace_in_blank_line' => true,\n        'non_printable_character' => true,\n        'normalize_index_brace' => true,\n        'object_operator_without_whitespace' => true,\n        'operator_linebreak' => [\n            'only_booleans' => true,\n            'position' => 'end',\n        ],\n        'ordered_class_elements' => [\n            'order' => [\n                'use_trait',\n                'constant_public',\n                'constant_protected',\n                'constant_private',\n                'property_public_static',\n                'property_protected_static',\n                'property_private_static',\n                'property_public',\n                'property_protected',\n                'property_private',\n                'method_public_static',\n                'construct',\n                'destruct',\n                'magic',\n                'phpunit',\n                'method_public',\n                'method_protected',\n                'method_private',\n                'method_protected_static',\n                'method_private_static',\n            ],\n        ],\n        'ordered_imports' => [\n            'imports_order' => [\n                PhpCsFixer\\Fixer\\Import\\OrderedImportsFixer::IMPORT_TYPE_CONST,\n                PhpCsFixer\\Fixer\\Import\\OrderedImportsFixer::IMPORT_TYPE_FUNCTION,\n                PhpCsFixer\\Fixer\\Import\\OrderedImportsFixer::IMPORT_TYPE_CLASS,\n            ]\n        ],\n        'ordered_interfaces' => [\n            'direction' => 'ascend',\n            'order' => 'alpha',\n        ],\n        'ordered_traits' => true,\n        'php_unit_set_up_tear_down_visibility' => true,\n        'php_unit_test_case_static_method_calls' => [\n            'call_type' => 'this',\n        ],\n        'phpdoc_add_missing_param_annotation' => false,\n        'phpdoc_align' => true,\n        'phpdoc_annotation_without_dot' => true,\n        'phpdoc_indent' => true,\n        'phpdoc_inline_tag_normalizer' => true,\n        'phpdoc_no_access' => true,\n        'phpdoc_no_alias_tag' => true,\n        'phpdoc_no_empty_return' => true,\n        'phpdoc_no_package' => true,\n        'phpdoc_no_useless_inheritdoc' => true,\n        'phpdoc_order' => true,\n        'phpdoc_order_by_value' => [\n            'annotations' => [\n                'covers',\n                'dataProvider',\n                'throws',\n                'uses',\n            ],\n        ],\n        'phpdoc_return_self_reference' => true,\n        'phpdoc_scalar' => true,\n        'phpdoc_separation' => true,\n        'phpdoc_single_line_var_spacing' => true,\n        'phpdoc_summary' => true,\n        'phpdoc_tag_casing' => true,\n        'phpdoc_tag_type' => true,\n        'phpdoc_to_comment' => true,\n        'phpdoc_trim' => true,\n        'phpdoc_trim_consecutive_blank_line_separation' => true,\n        'phpdoc_types' => ['groups' => ['simple', 'meta']],\n        'phpdoc_types_order' => true,\n        'phpdoc_var_annotation_correct_order' => true,\n        'phpdoc_var_without_name' => true,\n        'pow_to_exponentiation' => true,\n        'protected_to_private' => true,\n        'return_assignment' => true,\n        'return_type_declaration' => ['space_before' => 'none'],\n        'self_accessor' => true,\n        'self_static_accessor' => true,\n        'semicolon_after_instruction' => true,\n        'set_type_to_cast' => true,\n        'short_scalar_cast' => true,\n        'simple_to_complex_string_variable' => true,\n        'simplified_null_return' => false,\n        'single_blank_line_at_eof' => true,\n        'single_class_element_per_statement' => true,\n        'single_import_per_statement' => true,\n        'single_line_after_imports' => true,\n        'single_quote' => true,\n        'single_space_after_construct' => true,\n        'single_trait_insert_per_statement' => true,\n        'space_after_semicolon' => true,\n        'standardize_increment' => true,\n        'standardize_not_equals' => true,\n        'static_lambda' => true,\n        'strict_param' => true,\n        'string_line_ending' => true,\n        'switch_case_semicolon_to_colon' => true,\n        'switch_case_space' => true,\n        'switch_continue_to_break' => true,\n        'ternary_operator_spaces' => true,\n        'ternary_to_elvis_operator' => true,\n        'ternary_to_null_coalescing' => true,\n        'trailing_comma_in_multiline' => [\n            'elements' => [\n                'arrays'\n            ]\n        ],\n        'trim_array_spaces' => true,\n        'types_spaces' => [\n            'space' => 'none',\n        ],\n        'unary_operator_spaces' => true,\n        'visibility_required' => [\n            'elements' => [\n                'const',\n                'method',\n                'property',\n            ],\n        ],\n        'void_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\nreturn $config;\n"
        },
        {
          "name": ".psalm",
          "type": "tree",
          "content": null
        },
        {
          "name": "ChangeLog.md",
          "type": "blob",
          "size": 3.4658203125,
          "content": "# Changes in PHPCPD\n\nAll notable changes in PHPCPD are documented in this file using the [Keep a CHANGELOG](http://keepachangelog.com/) principles.\n\n## [7.0.0] - 2022-MM-DD\n\n### Added\n\n* [#199](https://github.com/sebastianbergmann/phpcpd/pull/199): Suffix Tree-based algorithm for code clone detection\n\n### Removed\n\n* Removed support for PHP versions older than PHP 8.1\n\n## [6.0.3] - 2020-12-07\n\n### Changed\n\n* Changed PHP version constraint in `composer.json` from `^7.3` to `>=7.3`\n\n## [6.0.2] - 2020-08-18\n\n### Fixed\n\n* [#187](https://github.com/sebastianbergmann/phpcpd/issues/187): Exclude arguments are being handled as prefixes\n\n## [6.0.1] - 2020-08-13\n\n### Fixed\n\n* The `--verbose` CLI option had no effect\n\n## [6.0.0] - 2020-08-13\n\n### Removed\n\n* The `--names` CLI option has been removed; use the `--suffix` CLI option instead\n* The `--names-exclude` CLI option has been removed; use the `--exclude` CLI option instead\n* The `--regexps-exclude` CLI option has been removed\n* The `--progress` CLI option has been removed\n\n## [5.0.2] - 2020-02-22\n\n### Changed\n\n* Require `sebastian/version` version 3 and `phpunit/php-timer` version 3 to allow Composer-based installation alongside `phploc/phploc` version 6 and `phpunit/phpunit` version 9 \n\n## [5.0.1] - 2020-02-20\n\n### Fixed\n\n* [#181](https://github.com/sebastianbergmann/phpcpd/issues/181): `--min-lines`, `--min-tokens`, and `--fuzzy` commandline options do not work\n\n## [5.0.0] - 2020-02-20\n\n### Removed\n\n* Removed support for PHP versions older than PHP 7.3\n\n## [4.1.0] - 2018-09-17\n\n### Added\n\n* Implemented [#117](https://github.com/sebastianbergmann/phpcpd/issues/117): Report average and maximum length of code clone\n\n### Changed\n\n* The text logger now prints code clones sorted by size (in descending order)\n\n## [4.0.0] - 2018-01-02\n\n### Removed\n\n* Removed support for PHP versions older than PHP 7.1\n\n## [3.0.1] - 2017-11-16\n\n### Fixed\n\n* [#147](https://github.com/sebastianbergmann/phpcpd/issues/147): Wrong exit code when no files were found to be scanned\n* [#152](https://github.com/sebastianbergmann/phpcpd/issues/152): Version requirement for `sebastian/version` is too strict\n\n## [3.0.0] - 2017-02-05\n\n### Added\n\n* [#90](https://github.com/sebastianbergmann/phpcpd/pull/90): The PMD logger now replaces all characters that are invalid XML with `U+FFFD`\n* [#100](https://github.com/sebastianbergmann/phpcpd/pull/100): Added the `--regexps-exclude` option\n\n### Changed\n\n* When the Xdebug extension is loaded, PHPCPD disables as much of Xdebug's functionality as possible to minimize the performance impact\n\n### Removed\n\n* Removed support for PHP versions older than PHP 5.6\n\n[7.0.0]: https://github.com/sebastianbergmann/phpcpd/compare/6.0.3...master\n[6.0.3]: https://github.com/sebastianbergmann/phpcpd/compare/6.0.2...6.0.3\n[6.0.2]: https://github.com/sebastianbergmann/phpcpd/compare/6.0.1...6.0.2\n[6.0.1]: https://github.com/sebastianbergmann/phpcpd/compare/6.0.0...6.0.1\n[6.0.0]: https://github.com/sebastianbergmann/phpcpd/compare/5.0.2...6.0.0\n[5.0.2]: https://github.com/sebastianbergmann/phpcpd/compare/5.0.1...5.0.2\n[5.0.1]: https://github.com/sebastianbergmann/phpcpd/compare/5.0.0...5.0.1\n[5.0.0]: https://github.com/sebastianbergmann/phpcpd/compare/4.1.0...5.0.0\n[4.1.0]: https://github.com/sebastianbergmann/phpcpd/compare/4.0.0...4.1.0\n[4.0.0]: https://github.com/sebastianbergmann/phpcpd/compare/3.0.1...4.0.0\n[3.0.1]: https://github.com/sebastianbergmann/phpcpd/compare/3.0.0...3.0.1\n[3.0.0]: https://github.com/sebastianbergmann/phpcpd/compare/2.0...3.0.0\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4951171875,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2009-2023, Sebastian Bergmann\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.353515625,
          "content": "**This project is no longer maintained and its repository is only kept for archival purposes.**\n\n# PHP Copy/Paste Detector (PHPCPD)\n\n`phpcpd` is a Copy/Paste Detector (CPD) for PHP code.\n\n## Installation\n\nThis tool is distributed as a [PHP Archive (PHAR)](https://php.net/phar):\n\n```bash\n$ wget https://phar.phpunit.de/phpcpd.phar\n\n$ php phpcpd.phar --version\n```\n\nUsing [Phive](https://phar.io/) is the recommended way for managing the tool dependencies of your project:\n\n```bash\n$ phive install phpcpd\n\n$ ./tools/phpcpd --version\n```\n\n**[It is not recommended to use Composer to download and install this tool.](https://twitter.com/s_bergmann/status/999635212723212288)**\n\n## Usage Example\n\n```\n$ php phpcpd.phar --fuzzy wordpress-5.5\nphpcpd 6.0.0 by Sebastian Bergmann.\n\nFound 121 clones with 8137 duplicated lines in 69 files:\n\n  - /home/sb/wordpress-5.5/wp-includes/sodium_compat/src/Core/Curve25519/H.php:19-1466 (1447 lines)\n    /home/sb/wordpress-5.5/wp-includes/sodium_compat/src/Core32/Curve25519/H.php:19-1466\n.\n.\n.\n  - /home/sb/wordpress-5.5/wp-includes/sodium_compat/src/Core32/Curve25519.php:879-889 (10 lines)\n    /home/sb/wordpress-5.5/wp-includes/sodium_compat/src/Core32/Curve25519.php:1072-1082\n\n1.82% duplicated lines out of 446676 total lines of code.\nAverage size of duplication is 67 lines, largest clone has 1447 of lines\n\nTime: 00:02.980, Memory: 318.00 MB\n```\n"
        },
        {
          "name": "build.xml",
          "type": "blob",
          "size": 4.4814453125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"phpcpd\" default=\"setup\">\n    <target name=\"setup\" depends=\"clean,install-dependencies\"/>\n\n    <target name=\"clean\" description=\"Cleanup build artifacts\">\n        <delete dir=\"${basedir}/vendor\"/>\n        <delete file=\"${basedir}/composer.lock\"/>\n        <delete>\n            <fileset dir=\"${basedir}/build\">\n                <include name=\"**/phpcpd*.phar\"/>\n                <include name=\"**/phpcpd*.phar.asc\"/>\n            </fileset>\n        </delete>\n    </target>\n\n    <target name=\"install-dependencies\" unless=\"dependencies-installed\" depends=\"-dependencies-installed\" description=\"Install dependencies with Composer\">\n        <exec executable=\"${basedir}/tools/composer\" taskname=\"composer\">\n            <arg value=\"update\"/>\n            <arg value=\"--no-interaction\"/>\n            <arg value=\"--no-progress\"/>\n            <arg value=\"--no-ansi\"/>\n        </exec>\n    </target>\n\n    <target name=\"update-tools\">\n        <exec executable=\"phive\">\n            <arg value=\"--no-progress\"/>\n            <arg value=\"update\"/>\n        </exec>\n    </target>\n\n    <target name=\"signed-phar\" description=\"Create signed PHAR archive of PHPCPD and all its dependencies (release)\" depends=\"phar\">\n        <exec executable=\"bash\" outputproperty=\"version\">\n            <arg value=\"-c\" />\n            <arg value=\"${basedir}/phpcpd --version | awk 'BEGIN { ORS = &quot;&quot;; } {print $2}'\" />\n        </exec>\n\n        <exec executable=\"gpg\" failonerror=\"true\">\n            <arg value=\"--armor\" />\n            <arg value=\"--detach-sign\" />\n            <arg path=\"${basedir}/build/phpcpd-${version}.phar\" />\n        </exec>\n    </target>\n\n    <target name=\"phar\" description=\"Create PHAR archive of phpcpd and all its dependencies\" depends=\"setup,phar-build\">\n    </target>\n\n    <target name=\"phar-build\">\n        <exec executable=\"bash\" outputproperty=\"version\">\n            <arg value=\"-c\" />\n            <arg value=\"${basedir}/phpcpd --version | awk 'BEGIN { ORS = &quot;&quot;; } {print $2}'\" />\n        </exec>\n\n        <copy todir=\"${basedir}/build/phar/src\">\n            <fileset dir=\"${basedir}/src\">\n                <include name=\"**/*.php\" />\n            </fileset>\n        </copy>\n\n        <copy file=\"${basedir}/vendor/sebastian/cli-parser/LICENSE\" tofile=\"${basedir}/build/phar/sebastian-cli-parser/LICENSE\"/>\n        <copy todir=\"${basedir}/build/phar/sebastian-cli-parser\">\n            <fileset dir=\"${basedir}/vendor/sebastian/cli-parser/src\">\n                <include name=\"**/*.php\" />\n            </fileset>\n        </copy>\n\n        <copy file=\"${basedir}/vendor/sebastian/version/LICENSE\" tofile=\"${basedir}/build/phar/sebastian-version/LICENSE\"/>\n        <copy todir=\"${basedir}/build/phar/sebastian-version\">\n            <fileset dir=\"${basedir}/vendor/sebastian/version/src\">\n                <include name=\"**/*.php\" />\n            </fileset>\n        </copy>\n\n        <copy file=\"${basedir}/vendor/phpunit/php-file-iterator/LICENSE\" tofile=\"${basedir}/build/phar/phpunit-php-file-iterator/LICENSE\"/>\n        <copy todir=\"${basedir}/build/phar/phpunit-php-file-iterator\">\n            <fileset dir=\"${basedir}/vendor/phpunit/php-file-iterator/src\">\n                <include name=\"**/*.php\" />\n            </fileset>\n        </copy>\n\n        <copy file=\"${basedir}/vendor/phpunit/php-timer/LICENSE\" tofile=\"${basedir}/build/phar/phpunit-php-timer/LICENSE\"/>\n        <copy todir=\"${basedir}/build/phar/phpunit-php-timer\">\n            <fileset dir=\"${basedir}/vendor/phpunit/php-timer/src\">\n                <include name=\"**/*.php\" />\n            </fileset>\n        </copy>\n\n        <exec executable=\"${basedir}/build/phar-manifest.php\" output=\"${basedir}/build/phar/manifest.txt\"/>\n\n        <exec executable=\"${basedir}/tools/phpab\">\n            <arg value=\"--all\" />\n            <arg value=\"--phar\" />\n            <arg value=\"--hash\" />\n            <arg value=\"SHA-512\" />\n            <arg value=\"--output\" />\n            <arg path=\"${basedir}/build/phpcpd-${version}.phar\" />\n            <arg value=\"--template\" />\n            <arg path=\"${basedir}/build/phar-autoload.php.in\" />\n            <arg value=\"--indent\" />\n            <arg value=\"            \" />\n            <arg path=\"${basedir}/build/phar\" />\n        </exec>\n\n        <chmod file=\"${basedir}/build/phpcpd-${version}.phar\" perm=\"ugo+rx\"/>\n\n        <delete dir=\"${basedir}/build/phar\"/>\n    </target>\n\n    <target name=\"-dependencies-installed\">\n        <available file=\"${basedir}/vendor\" property=\"dependencies-installed\" type=\"dir\"/>\n    </target>\n</project>\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.0908203125,
          "content": "{\n    \"name\": \"sebastian/phpcpd\",\n    \"description\": \"Copy/Paste Detector (CPD) for PHP code.\",\n    \"homepage\": \"https://github.com/sebastianbergmann/phpcpd\",\n    \"license\": \"BSD-3-Clause\",\n    \"authors\": [\n        {\n            \"name\": \"Sebastian Bergmann\",\n            \"email\": \"sebastian@phpunit.de\",\n            \"role\": \"lead\"\n        }\n    ],\n    \"support\": {\n        \"issues\": \"https://github.com/sebastianbergmann/phpcpd/issues\"\n    },\n    \"config\": {\n        \"platform\": {\n            \"php\": \"8.1.0\"\n        },\n        \"optimize-autoloader\": true,\n        \"sort-packages\": true\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"require\": {\n        \"php\": \">=8.1\",\n        \"ext-dom\": \"*\",\n        \"sebastian/cli-parser\": \"^2.0\",\n        \"sebastian/version\": \"^4.0\",\n        \"phpunit/php-file-iterator\": \"^4.0\",\n        \"phpunit/php-timer\": \"^6.0\",\n        \"ext-mbstring\": \"*\"\n    },\n    \"autoload\": {\n        \"classmap\": [\n            \"src/\"\n        ]\n    },\n    \"bin\": [\n        \"phpcpd\"\n    ],\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-main\": \"7.0-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "phpcpd",
          "type": "blob",
          "size": 1.119140625,
          "content": "#!/usr/bin/env php\n<?php\n/*\n * This file is part of PHP Copy/Paste Detector (PHPCPD).\n *\n * (c) Sebastian Bergmann <sebastian@phpunit.de>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nif (version_compare('8.1.0', PHP_VERSION, '>')) {\n    fwrite(\n        STDERR,\n        sprintf(\n            'This version of PHPCPD requires PHP 8.1 (or later).' . PHP_EOL .\n            'You are using PHP %s%s.' . PHP_EOL,\n            PHP_VERSION,\n            defined('PHP_BINARY') ? ' (' . PHP_BINARY . ')' : ''\n        )\n    );\n\n    die(1);\n}\n\n$loaded = false;\n\nforeach (array(__DIR__ . '/../../autoload.php', __DIR__ . '/vendor/autoload.php') as $file) {\n    if (file_exists($file)) {\n        require $file;\n        $loaded = true;\n        break;\n    }\n}\n\nif (!$loaded) {\n    die(\n        'You need to set up the project dependencies using the following commands:' . PHP_EOL .\n        'wget http://getcomposer.org/composer.phar' . PHP_EOL .\n        'php composer.phar install' . PHP_EOL\n    );\n}\n\nexit((new \\SebastianBergmann\\PHPCPD\\Application)->run($_SERVER['argv']));\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.892578125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.5/phpunit.xsd\"\n         bootstrap=\"vendor/autoload.php\"\n         cacheResultFile=\".phpunit.cache/test-results\"\n         executionOrder=\"depends,defects\"\n         forceCoversAnnotation=\"true\"\n         beStrictAboutCoversAnnotation=\"true\"\n         beStrictAboutOutputDuringTests=\"true\"\n         failOnRisky=\"true\"\n         failOnWarning=\"true\"\n         colors=\"true\"\n         verbose=\"true\">\n    <testsuites>\n        <testsuite name=\"default\">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n\n    <coverage cacheDirectory=\".phpunit.cache/code-coverage\"\n              processUncoveredFiles=\"true\">\n        <include>\n            <directory suffix=\".php\">src</directory>\n        </include>\n    </coverage>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}