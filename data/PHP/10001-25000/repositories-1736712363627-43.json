{
  "metadata": {
    "timestamp": 1736712363627,
    "page": 43,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "typecho/typecho",
      "stars": 11591,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1376953125,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 4\n\n[*.yml]\nindent_size = 2\n\n[*.scss]\nindent_size = 2\n\n[*.php]\ninsert_final_newline = true"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.376953125,
          "content": "# Set default behaviour, in case users don't have core.autocrlf set.\n* text=auto\n\n# Explicitly declare text files we want to always be normalized and converted \n# to native line endings on checkout.\n*.php text eol=lf\n*.js text eol=lf\n*.css text eol=lf\n*.html text eol=lf\n*.xml text eol=lf\n\n# Denote all files that are truly binary and should not be modified.\n*.png binary\n*.jpg binary\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.36328125,
          "content": ".*.swp\n.*.swo\n._*\n.DS_Store\n/ImgCache/\n/Backup_rar/\n/Debug/\n/debug/\n/upload/\n/avatar/\n/.idea/\n.svn/\n*.orig\n*.aps\n*.APS\n*.chm\n*.exp\n*.pdb\n*.rar\n*.mo\n*.po\n*.pot\n.smbdelete*\n*.sublime*\n.sass-cache\nconfig.rb\nprepros.config\nconfig.inc.*\nusr/uploads/\nusr/*.db\nusr/plugins/\n!usr/plugins/HelloWorld\nusr/themes/*\n!usr/themes/default\n!usr/themes/classic-22\nnode_modules/\ntools/tmp/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".phpstorm.meta.php",
          "type": "blob",
          "size": 1.7177734375,
          "content": "<?php\n\nnamespace PHPSTORM_META {\n    override(\\Typecho\\Widget::widget(0), map([\n        '' => '@'\n    ]));\n\n    exitPoint(\\Typecho\\Widget\\Response::redirect());\n    exitPoint(\\Typecho\\Widget\\Response::throwContent());\n    exitPoint(\\Typecho\\Widget\\Response::throwFile());\n    exitPoint(\\Typecho\\Widget\\Response::throwJson());\n    exitPoint(\\Typecho\\Widget\\Response::throwXml());\n    exitPoint(\\Typecho\\Widget\\Response::goBack());\n\n    override(\\Widget\\Options::__get(0), map([\n        'feedUrl'               =>  string,\n        'feedRssUrl'            =>  string,\n        'feedAtomUrl'           =>  string,\n        'commentsFeedUrl'       =>  string,\n        'commentsFeedRssUrl'    =>  string,\n        'commentsFeedAtomUrl'   =>  string,\n        'xmlRpcUrl'             =>  string,\n        'index'                 =>  string,\n        'siteUrl'               =>  string,\n        'routingTable'          =>  \\ArrayObject::class,\n        'rootUrl'               =>  string,\n        'themeUrl'              =>  string,\n        'pluginUrl'             =>  string,\n        'adminUrl'              =>  string,\n        'loginUrl'              =>  string,\n        'loginAction'           =>  string,\n        'registerUrl'           =>  string,\n        'registerAction'        =>  string,\n        'profileUrl'            =>  string,\n        'logoutUrl'             =>  string,\n        'serverTimezone'        =>  int,\n        'contentType'           =>  string,\n        'software'              =>  string,\n        'version'               =>  string,\n        'markdown'              =>  int,\n        'allowedAttachmentTypes'=>  \\ArrayObject::class\n    ]));\n\n    override(\\Typecho\\Widget::__get(0), map([\n        'sequence' => int,\n        'length'   => int\n    ]));\n}"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.0966796875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nadmin@typecho.org.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.1513671875,
          "content": "Contributing to Typecho\n=======================\n\nThanks for considering contributing to Typecho! There are many ways to contribute to Typecho, and we appreciate all of them.\n\n## Reporting Bugs\n\nIf you find a bug in the source code, you can help us by [submitting an issue](https://github.com/typecho/typecho/issues) \nto our [GitHub Repository](https://github.com/typecho/typecho). Even better, you can submit a Pull Request with a fix.\n\n## Contributing Code\n\nIf you would like to contribute code to Typecho, please read the following guidelines:\n\n* [Code of Conduct](CODE_OF_CONDUCT.md)\n* [Contributing Guide](CONTRIBUTING.md)\n* [Coding Style Guide](CODING_STYLE.md)\n\n## Translations\n\nPlease see [TRANSLATION](https://github.com/typecho/languages) for details.\n\n## Plugin Development\n\nPlease see [Plugin Development](http://docs.typecho.org/plugins) for details.\n\n## Theme Development\n\nPlease see [Theme Development](http://docs.typecho.org/themes) for details.\n\n## Community\n\n* [Telegram Channel](https://t.me/typechodev)\n* [Homepage](http://typecho.org/)\n* [Documents](http://docs.typecho.org/)\n* [Community](http://forum.typecho.org/)\n* [Download](http://typecho.org/download)"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 14.623046875,
          "content": "The GNU General Public License (GPL)\nVersion 2, June 1991\n\nCopyright (C) 1989, 1991 Free Software Foundation, Inc.\n\n59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\nEveryone is permitted to copy and distribute verbatim copies\n\nof this license document, but changing it is not allowed.\n\nPreamble\n\nThe licenses for most software are designed to take away your\nfreedom to share and change it. By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users. This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it. (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.) You can apply it to\nyour programs, too.\n\nWhen we speak of free software, we are referring to freedom, not\nprice. Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\nTo protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\nFor example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have. You must make sure that they, too, receive or can get the\nsource code. And you must show them these terms so they know their\nrights.\n\nWe protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\nAlso, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware. If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\nFinally, any free program is threatened constantly by software\npatents. We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary. To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\nThe precise terms and conditions for copying, distribution and\nmodification follow.\n\nTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License. The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage. (Hereinafter, translation is included without limitation in\nthe term \"modification\".) Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope. The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License. (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole. If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works. But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code. (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it. For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable. However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License. Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n5. You are not required to accept this License, since you have not\nsigned it. However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works. These actions are\nprohibited by law if you do not accept this License. Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions. You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License. If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all. For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices. Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded. In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time. Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number. If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation. If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission. For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this. Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\nNO WARRANTY\n\n11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\nEND OF TERMS AND CONDITIONS"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.6884765625,
          "content": "Typecho Blogging Platform\n=========================\n\nTypecho is a PHP-based blog software and is designed to be the most powerful blog engine in the world.\nTypecho is released under the GNU General Public License 2.0.\n\n## Main Features\n\n* Multiple databases support (MySQL, SQLite, PostgreSQL)\n* Markdown Support\n* Plugin Support\n* Theme Support\n* Custom Fields\n* Custom Pages\n\n## Requirements\n\n* PHP 7.4.0 or higher\n* Database (MySQL, SQLite, PostgreSQL)\n  * MySQL 5.5.3 or higher\n  * SQLite 3.7.11 or higher\n  * PostgreSQL 9.1 or higher\n\n## Screenshots\n\n![Typecho](https://typecho.org/usr/themes/bluecode/img/screenshot/st1.png)\n\n## Contributing\n\nPlease see [CONTRIBUTING](CONTRIBUTING.md) for details.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.08203125,
          "content": "# Security Policy\n\nVulnerabilities can be reported by emailing security@typecho.org\n"
        },
        {
          "name": "admin",
          "type": "tree",
          "content": null
        },
        {
          "name": "changelog.txt",
          "type": "blob",
          "size": 2.0849609375,
          "content": "Version 0.8.1/12.4.1\n\n修复同级子目录下安装多个站点引起的登录失效\n增加评论黑名单插件\n修复评论接口重用导致启用评论验证插件后，后台无法评论的bug\n修正年份路由的bug\n修正由于flash的cookie丢失bug导致的文件无法上传bug\n增加对ini_get的判断\n提交对Sina App Engine的兼容性判断\n增加对Sina App Engine环境的支持\n增加对ini_get的判断\n修正新注册用户登录后跳转错误bug\n修正对ssl的支持\nfix issue 510\n修复使用多层代理时, 获取ip地址错误\n修正修改文章时上传控件无法载入的问题\n修改后台错别字\n修正错别字\n兼容server不支持http 1.1的情况，典型问题如 sae环境404页面乱码\n修正由于SAE更改常用导致的数据库信息无法自动读入的问题\n增加上传插件接口\n提交Sina App Engine专用的文件上传插件，\n使用SAE的Storage做持久化存储。\n修正SaeUpload插件的说明地址\nnew version library\n只是一些小修正\nfix bug report on segmentfault\nfix issue 536\nfix Issue 541\nfix Issue 544\nfix Issue 544\nfix Issue 540\nfix Issue 537\nfix Issue 529\nfix Issue 532\nfix issue 526\n文章增加待审核功能，下一步给文章增加private属性\n更新后台表单样式, 新增文章预览功能\ncss细节微调\n文章增加private属性显示\n修正插件显示空白问题, 预览框box修正\n修改预览内容样式，修改预览选项位置，高级选项->权限控制增加“允许游客访问”选项，用于私密浏览\nfix Issue 545\n实现文章公开度：公开、密码保护、私有、未审核\nlittle change\n实现功能：1,当用户之前有审核通过的评论，再次发评论会直接为通过审核（可关闭）；2,未通过审核的评论，评论作者可以在前台看到（他人不可见）；3,隐藏功能；\n修正后台修改或添加页面状态错误的问题；修正保存私密、审核日志时会新增一篇同样日志的问题\n简单增强搜索功能 Issue 480\n添加有密码和未发布图标\nfix Issue 551\n将文章管理页的公开度草稿等信息改为文字\n接受插件返回的header\n"
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 0.703125,
          "content": "<?php\n/**\n * Typecho Blog Platform\n *\n * @copyright  Copyright (c) 2008 Typecho team (http://www.typecho.org)\n * @license    GNU General Public License 2.0\n * @version    $Id: index.php 1153 2009-07-02 10:53:22Z magike.net $\n */\n\n/** 载入配置支持 */\nif (!defined('__TYPECHO_ROOT_DIR__') && !@include_once 'config.inc.php') {\n    file_exists('./install.php') ? header('Location: install.php') : print('Missing Config File');\n    exit;\n}\n\n/** 初始化组件 */\n\\Widget\\Init::alloc();\n\n/** 注册一个初始化插件 */\n\\Typecho\\Plugin::factory('index.php')->call('begin');\n\n/** 开始路由分发 */\n\\Typecho\\Router::dispatch();\n\n/** 注册一个结束插件 */\n\\Typecho\\Plugin::factory('index.php')->call('end');\n"
        },
        {
          "name": "install.php",
          "type": "blob",
          "size": 49.70703125,
          "content": "<?php\n\nif (!file_exists(dirname(__FILE__) . '/config.inc.php')) {\n    // site root path\n    define('__TYPECHO_ROOT_DIR__', dirname(__FILE__));\n\n    // plugin directory (relative path)\n    define('__TYPECHO_PLUGIN_DIR__', '/usr/plugins');\n\n    // theme directory (relative path)\n    define('__TYPECHO_THEME_DIR__', '/usr/themes');\n\n    // admin directory (relative path)\n    define('__TYPECHO_ADMIN_DIR__', '/admin/');\n\n    // register autoload\n    require_once __TYPECHO_ROOT_DIR__ . '/var/Typecho/Common.php';\n\n    // init\n    \\Typecho\\Common::init();\n} else {\n    require_once dirname(__FILE__) . '/config.inc.php';\n    $installDb = \\Typecho\\Db::get();\n}\n\n/**\n * get lang\n *\n * @return string\n */\nfunction install_get_lang(): string\n{\n    $serverLang = \\Typecho\\Request::getInstance()->getServer('TYPECHO_LANG');\n\n    if (!empty($serverLang)) {\n        return $serverLang;\n    } else {\n        $lang = 'zh_CN';\n        $request = \\Typecho\\Request::getInstance();\n\n        if ($request->is('lang')) {\n            $lang = $request->get('lang');\n            \\Typecho\\Cookie::set('lang', $lang);\n        }\n\n        return \\Typecho\\Cookie::get('lang', $lang);\n    }\n}\n\n/**\n * get site url\n *\n * @return string\n */\nfunction install_get_site_url(): string\n{\n    $request = \\Typecho\\Request::getInstance();\n    return install_is_cli() ? $request->getServer('TYPECHO_SITE_URL', 'http://localhost') : $request->getRequestRoot();\n}\n\n/**\n * detect cli mode\n *\n * @return bool\n */\nfunction install_is_cli(): bool\n{\n    return \\Typecho\\Request::getInstance()->isCli();\n}\n\n/**\n * get default router\n *\n * @return string[][]\n */\nfunction install_get_default_routers(): array\n{\n    return [\n        'index'              =>\n            [\n                'url'    => '/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'archive'            =>\n            [\n                'url'    => '/blog/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'do'                 =>\n            [\n                'url'    => '/action/[action:alpha]',\n                'widget' => '\\Widget\\Action',\n                'action' => 'action',\n            ],\n        'post'               =>\n            [\n                'url'    => '/archives/[cid:digital]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'attachment'         =>\n            [\n                'url'    => '/attachment/[cid:digital]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'category'           =>\n            [\n                'url'    => '/category/[slug]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'tag'                =>\n            [\n                'url'    => '/tag/[slug]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'author'             =>\n            [\n                'url'    => '/author/[uid:digital]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'search'             =>\n            [\n                'url'    => '/search/[keywords]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'index_page'         =>\n            [\n                'url'    => '/page/[page:digital]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'archive_page'       =>\n            [\n                'url'    => '/blog/page/[page:digital]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'category_page'      =>\n            [\n                'url'    => '/category/[slug]/[page:digital]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'tag_page'           =>\n            [\n                'url'    => '/tag/[slug]/[page:digital]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'author_page'        =>\n            [\n                'url'    => '/author/[uid:digital]/[page:digital]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'search_page'        =>\n            [\n                'url'    => '/search/[keywords]/[page:digital]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'archive_year'       =>\n            [\n                'url'    => '/[year:digital:4]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'archive_month'      =>\n            [\n                'url'    => '/[year:digital:4]/[month:digital:2]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'archive_day'        =>\n            [\n                'url'    => '/[year:digital:4]/[month:digital:2]/[day:digital:2]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'archive_year_page'  =>\n            [\n                'url'    => '/[year:digital:4]/page/[page:digital]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'archive_month_page' =>\n            [\n                'url'    => '/[year:digital:4]/[month:digital:2]/page/[page:digital]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'archive_day_page'   =>\n            [\n                'url'    => '/[year:digital:4]/[month:digital:2]/[day:digital:2]/page/[page:digital]/',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n        'comment_page'       =>\n            [\n                'url'    => '[permalink:string]/comment-page-[commentPage:digital]',\n                'widget' => '\\Widget\\CommentPage',\n                'action' => 'action',\n            ],\n        'feed'               =>\n            [\n                'url'    => '/feed[feed:string:0]',\n                'widget' => '\\Widget\\Feed',\n                'action' => 'render',\n            ],\n        'feedback'           =>\n            [\n                'url'    => '[permalink:string]/[type:alpha]',\n                'widget' => '\\Widget\\Feedback',\n                'action' => 'action',\n            ],\n        'page'               =>\n            [\n                'url'    => '/[slug].html',\n                'widget' => '\\Widget\\Archive',\n                'action' => 'render',\n            ],\n    ];\n}\n\n/**\n * list all default options\n *\n * @return array\n */\nfunction install_get_default_options(): array\n{\n    static $options;\n\n    if (empty($options)) {\n        $options = [\n            'theme' => 'default',\n            'theme:default' => json_encode([\n                'logoUrl' => '',\n                'sidebarBlock' => [\n                    'ShowRecentPosts',\n                    'ShowRecentComments',\n                    'ShowCategory',\n                    'ShowArchive',\n                    'ShowOther'\n                ]\n            ]),\n            'timezone' => '28800',\n            'lang' => install_get_lang(),\n            'charset' => 'UTF-8',\n            'contentType' => 'text/html',\n            'gzip' => 0,\n            'generator' => 'Typecho ' . \\Typecho\\Common::VERSION,\n            'title' => 'Hello World',\n            'description' => 'Your description here.',\n            'keywords' => 'typecho,php,blog',\n            'rewrite' => 0,\n            'frontPage' => 'recent',\n            'frontArchive' => 0,\n            'commentsRequireMail' => 1,\n            'commentsWhitelist' => 0,\n            'commentsRequireUrl' => 0,\n            'commentsRequireModeration' => 0,\n            'plugins' => 'a:0:{}',\n            'commentDateFormat' => 'F jS, Y \\a\\t h:i a',\n            'siteUrl' => install_get_site_url(),\n            'defaultCategory' => 1,\n            'allowRegister' => 0,\n            'defaultAllowComment' => 1,\n            'defaultAllowPing' => 1,\n            'defaultAllowFeed' => 1,\n            'pageSize' => 5,\n            'postsListSize' => 10,\n            'commentsListSize' => 10,\n            'commentsHTMLTagAllowed' => null,\n            'postDateFormat' => 'Y-m-d',\n            'feedFullText' => 1,\n            'editorSize' => 350,\n            'autoSave' => 0,\n            'markdown' => 1,\n            'xmlrpcMarkdown' => 0,\n            'commentsMaxNestingLevels' => 5,\n            'commentsPostTimeout' => 24 * 3600 * 30,\n            'commentsUrlNofollow' => 1,\n            'commentsShowUrl' => 1,\n            'commentsMarkdown' => 0,\n            'commentsPageBreak' => 0,\n            'commentsThreaded' => 1,\n            'commentsPageSize' => 20,\n            'commentsPageDisplay' => 'last',\n            'commentsOrder' => 'ASC',\n            'commentsCheckReferer' => 1,\n            'commentsAutoClose' => 0,\n            'commentsPostIntervalEnable' => 1,\n            'commentsPostInterval' => 60,\n            'commentsShowCommentOnly' => 0,\n            'commentsAvatar' => 1,\n            'commentsAvatarRating' => 'G',\n            'commentsAntiSpam' => 1,\n            'routingTable' => json_encode(install_get_default_routers()),\n            'actionTable' => json_encode([]),\n            'panelTable' => json_encode([]),\n            'attachmentTypes' => '@image@',\n            'secret' => \\Typecho\\Common::randString(32, true),\n            'installed' => 0,\n            'allowXmlRpc' => 2\n        ];\n    }\n\n    return $options;\n}\n\n/**\n * get database driver type\n *\n * @param string $driver\n * @return string\n */\nfunction install_get_db_type(string $driver): string\n{\n    $parts = explode('_', $driver);\n    return $driver == 'Mysqli' ? 'Mysql' : array_pop($parts);\n}\n\n/**\n * list all available database drivers\n *\n * @return array\n */\nfunction install_get_db_drivers(): array\n{\n    $drivers = [];\n\n    if (\\Typecho\\Db\\Adapter\\Pdo\\Mysql::isAvailable()) {\n        $drivers['Pdo_Mysql'] = _t('Pdo 驱动 Mysql 适配器');\n    }\n\n    if (\\Typecho\\Db\\Adapter\\Pdo\\SQLite::isAvailable()) {\n        $drivers['Pdo_SQLite'] = _t('Pdo 驱动 SQLite 适配器');\n    }\n\n    if (\\Typecho\\Db\\Adapter\\Pdo\\Pgsql::isAvailable()) {\n        $drivers['Pdo_Pgsql'] = _t('Pdo 驱动 PostgreSql 适配器');\n    }\n\n    if (\\Typecho\\Db\\Adapter\\Mysqli::isAvailable()) {\n        $drivers['Mysqli'] = _t('Mysql 原生函数适配器');\n    }\n\n    if (\\Typecho\\Db\\Adapter\\SQLite::isAvailable()) {\n        $drivers['SQLite'] = _t('SQLite 原生函数适配器');\n    }\n\n    if (\\Typecho\\Db\\Adapter\\Pgsql::isAvailable()) {\n        $drivers['Pgsql'] = _t('Pgsql 原生函数适配器');\n    }\n\n    return $drivers;\n}\n\n/**\n * get current db driver\n *\n * @return string\n */\nfunction install_get_current_db_driver(): string\n{\n    global $installDb;\n\n    if (empty($installDb)) {\n        $driver = \\Typecho\\Request::getInstance()->get('driver');\n        $drivers = install_get_db_drivers();\n\n        if (empty($driver) || !isset($drivers[$driver])) {\n            return key($drivers);\n        }\n\n        return $driver;\n    } else {\n        return $installDb->getAdapterName();\n    }\n}\n\n/**\n * generate config file\n *\n * @param string $adapter\n * @param string $dbPrefix\n * @param array $dbConfig\n * @param bool $return\n * @return string\n */\nfunction install_config_file(string $adapter, string $dbPrefix, array $dbConfig, bool $return = false): string\n{\n    global $configWritten;\n\n    $code = \"<\" . \"?php\n// site root path\ndefine('__TYPECHO_ROOT_DIR__', dirname(__FILE__));\n\n// plugin directory (relative path)\ndefine('__TYPECHO_PLUGIN_DIR__', '/usr/plugins');\n\n// theme directory (relative path)\ndefine('__TYPECHO_THEME_DIR__', '/usr/themes');\n\n// admin directory (relative path)\ndefine('__TYPECHO_ADMIN_DIR__', '/admin/');\n\n// register autoload\nrequire_once __TYPECHO_ROOT_DIR__ . '/var/Typecho/Common.php';\n\n// init\n\\Typecho\\Common::init();\n\n// config db\n\\$db = new \\Typecho\\Db('{$adapter}', '{$dbPrefix}');\n\\$db->addServer(\" . (var_export($dbConfig, true)) . \", \\Typecho\\Db::READ | \\Typecho\\Db::WRITE);\n\\Typecho\\Db::set(\\$db);\n\";\n\n    $configWritten = false;\n\n    if (!$return) {\n        $configWritten = @file_put_contents(__TYPECHO_ROOT_DIR__ . '/config.inc.php', $code) !== false;\n    }\n\n    return $code;\n}\n\n/**\n * remove config file if written\n */\nfunction install_remove_config_file()\n{\n    global $configWritten;\n\n    if ($configWritten) {\n        unlink(__TYPECHO_ROOT_DIR__ . '/config.inc.php');\n    }\n}\n\n/**\n * check install\n *\n * @param string $type\n * @return bool\n */\nfunction install_check(string $type): bool\n{\n    switch ($type) {\n        case 'config':\n            return file_exists(__TYPECHO_ROOT_DIR__ . '/config.inc.php');\n        case 'db_structure':\n        case 'db_data':\n            global $installDb;\n\n            if (empty($installDb)) {\n                return false;\n            }\n\n            try {\n                // check if table exists\n                $installed = $installDb->fetchRow($installDb->select()->from('table.options')\n                    ->where('user = 0 AND name = ?', 'installed'));\n\n                if ($type == 'db_data' && empty($installed['value'])) {\n                    return false;\n                }\n            } catch (\\Typecho\\Db\\Adapter\\ConnectionException $e) {\n                return true;\n            } catch (\\Typecho\\Db\\Adapter\\SQLException $e) {\n                return false;\n            }\n\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * raise install error\n *\n * @param mixed $error\n * @param mixed $config\n */\nfunction install_raise_error($error, $config = null)\n{\n    if (install_is_cli()) {\n        if (is_array($error)) {\n            foreach ($error as $key => $value) {\n                echo (is_int($key) ? '' : $key . ': ') . $value . \"\\n\";\n            }\n        } else {\n            echo $error . \"\\n\";\n        }\n\n        exit(1);\n    } else {\n        install_throw_json([\n            'success' => 0,\n            'message' => is_string($error) ? nl2br($error) : $error,\n            'config' => $config\n        ]);\n    }\n}\n\n/**\n * @param $step\n * @param array|null $config\n */\nfunction install_success($step, ?array $config = null)\n{\n    global $installDb;\n\n    if (install_is_cli()) {\n        if ($step == 3) {\n            \\Typecho\\Db::set($installDb);\n        }\n\n        if ($step > 0) {\n            $method = 'install_step_' . $step . '_perform';\n            $method();\n        }\n\n        if (!empty($config)) {\n            [$userName, $userPassword] = $config;\n            echo _t('安装成功') . \"\\n\";\n            echo _t('您的用户名是') . \" {$userName}\\n\";\n            echo _t('您的密码是') . \" {$userPassword}\\n\";\n        }\n\n        exit(0);\n    } else {\n        install_throw_json([\n            'success' => 1,\n            'message' => $step,\n            'config'  => $config\n        ]);\n    }\n}\n\n/**\n * @param $data\n */\nfunction install_throw_json($data)\n{\n    \\Typecho\\Response::getInstance()->setContentType('application/json')\n        ->addResponder(function () use ($data) {\n            echo json_encode($data);\n        })\n        ->respond();\n}\n\n/**\n * @param string $url\n */\nfunction install_redirect(string $url)\n{\n    \\Typecho\\Response::getInstance()->setStatus(302)\n        ->setHeader('Location', $url)\n        ->respond();\n}\n\n/**\n * add common js support\n */\nfunction install_js_support()\n{\n    ?>\n    <div id=\"success\" class=\"row typecho-page-main hidden\">\n        <div class=\"col-mb-12 col-tb-8 col-tb-offset-2\">\n            <div class=\"typecho-page-title\">\n                <h2><?php _e('安装成功'); ?></h2>\n            </div>\n            <div id=\"typecho-welcome\">\n                <p class=\"keep-word\">\n                    <?php _e('您选择了使用原有的数据, 您的用户名和密码和原来的一致'); ?>\n                </p>\n                <p class=\"fresh-word\">\n                    <?php _e('您的用户名是'); ?>: <strong class=\"warning\" id=\"success-user\"></strong><br>\n                    <?php _e('您的密码是'); ?>: <strong class=\"warning\" id=\"success-password\"></strong>\n                </p>\n                <ul>\n                    <li><a id=\"login-url\" href=\"\"><?php _e('点击这里访问您的控制面板'); ?></a></li>\n                    <li><a id=\"site-url\" href=\"\"><?php _e('点击这里查看您的 Blog'); ?></a></li>\n                </ul>\n                <p><?php _e('希望您能尽情享用 Typecho 带来的乐趣!'); ?></p>\n            </div>\n        </div>\n    </div>\n    <script>\n        let form = $('form'), errorBox = $('<div></div>');\n\n        errorBox.addClass('message error')\n            .prependTo(form);\n\n        function showError(error) {\n            if (typeof error == 'string') {\n                $(window).scrollTop(0);\n\n                errorBox\n                    .html(error)\n                    .addClass('fade');\n            } else {\n                for (let k in error) {\n                    let input = $('#' + k), msg = error[k], p = $('<p></p>');\n\n                    p.addClass('message error')\n                        .html(msg)\n                        .insertAfter(input);\n\n                    input.on('input', function () {\n                        p.remove();\n                    });\n                }\n            }\n\n            return errorBox;\n        }\n\n        form.submit(function (e) {\n            e.preventDefault();\n\n            errorBox.removeClass('fade');\n            $('button', form).attr('disabled', 'disabled');\n            $('.typecho-option .error', form).remove();\n\n            $.ajax({\n                url: form.attr('action'),\n                processData: false,\n                contentType: false,\n                type: 'POST',\n                data: new FormData(this),\n                success: function (data) {\n                    $('button', form).removeAttr('disabled');\n\n                    if (data.success) {\n                        if (data.message) {\n                            location.href = '?step=' + data.message;\n                        } else {\n                            let success = $('#success').removeClass('hidden');\n\n                            form.addClass('hidden');\n\n                            if (data.config) {\n                                success.addClass('fresh');\n\n                                $('.typecho-page-main:first').addClass('hidden');\n                                $('#success-user').html(data.config[0]);\n                                $('#success-password').html(data.config[1]);\n\n                                $('#login-url').attr('href', data.config[2]);\n                                $('#site-url').attr('href', data.config[3]);\n                            } else {\n                                success.addClass('keep');\n                            }\n                        }\n                    } else {\n                        let el = showError(data.message);\n\n                        if (typeof configError == 'function' && data.config) {\n                            configError(form, data.config, el);\n                        }\n                    }\n                },\n                error: function (xhr, error) {\n                    showError(error)\n                }\n            });\n        });\n    </script>\n    <?php\n}\n\n/**\n * @param string[] $extensions\n * @return string|null\n */\nfunction install_check_extension(array $extensions): ?string\n{\n    foreach ($extensions as $extension) {\n        if (extension_loaded($extension)) {\n            return null;\n        }\n    }\n\n    return _n('缺少PHP扩展', '请在服务器上安装以下PHP扩展中的至少一个', count($extensions))\n        . ': ' . implode(', ', $extensions);\n}\n\nfunction install_step_1()\n{\n    $langs = \\Widget\\Options\\General::getLangs();\n    $lang = install_get_lang();\n    ?>\n    <div class=\"row typecho-page-main\">\n        <div class=\"col-mb-12 col-tb-8 col-tb-offset-2\">\n            <div class=\"typecho-page-title\">\n                <h2><?php _e('欢迎使用 Typecho'); ?></h2>\n            </div>\n            <div id=\"typecho-welcome\">\n                <form autocomplete=\"off\" method=\"post\" action=\"install.php\">\n                    <h3><?php _e('安装说明'); ?></h3>\n                    <p class=\"warning\">\n                        <strong><?php _e('本安装程序将自动检测服务器环境是否符合最低配置需求. 如果不符合, 将在上方出现提示信息, 请按照提示信息检查您的主机配置. 如果服务器环境符合要求, 将在下方出现 \"开始下一步\" 的按钮, 点击此按钮即可一步完成安装.'); ?></strong>\n                    </p>\n                    <h3><?php _e('许可及协议'); ?></h3>\n                    <ul>\n                        <li><?php _e('Typecho 基于 <a href=\"https://www.gnu.org/copyleft/gpl.html\">GPL</a> 协议发布, 我们允许用户在 GPL 协议许可的范围内使用, 拷贝, 修改和分发此程序.'); ?>\n                            <?php _e('在GPL许可的范围内, 您可以自由地将其用于商业以及非商业用途.'); ?></li>\n                        <li><?php _e('Typecho 软件由其社区提供支持, 核心开发团队负责维护程序日常开发工作以及新特性的制定.'); ?>\n                            <?php _e('如果您遇到使用上的问题, 程序中的 BUG, 以及期许的新功能, 欢迎您在社区中交流或者直接向我们贡献代码.'); ?>\n                            <?php _e('对于贡献突出者, 他的名字将出现在贡献者名单中.'); ?></li>\n                    </ul>\n\n                    <p class=\"submit\">\n                        <button class=\"btn primary\" type=\"submit\"><?php _e('我准备好了, 开始下一步 &raquo;'); ?></button>\n                        <input type=\"hidden\" name=\"step\" value=\"1\">\n\n                        <?php if (count($langs) > 1) : ?>\n                            <select style=\"float: right\" onchange=\"location.href='?lang=' + this.value\">\n                                <?php foreach ($langs as $key => $val) : ?>\n                                    <option value=\"<?php echo $key; ?>\"<?php if ($lang == $key) :\n                                        ?> selected<?php\n                                                   endif; ?>><?php echo $val; ?></option>\n                                <?php endforeach; ?>\n                            </select>\n                        <?php endif; ?>\n                    </p>\n                </form>\n            </div>\n        </div>\n    </div>\n    <?php\n    install_js_support();\n}\n\n/**\n * check dependencies before install\n */\nfunction install_step_1_perform()\n{\n    $errors = [];\n    $checks = [\n        'mbstring',\n        'json',\n        'Reflection',\n        ['mysqli', 'sqlite3', 'pgsql', 'pdo_mysql', 'pdo_sqlite', 'pdo_pgsql']\n    ];\n\n    foreach ($checks as $check) {\n        $error = install_check_extension(is_array($check) ? $check : [$check]);\n\n        if (!empty($error)) {\n            $errors[] = $error;\n        }\n    }\n\n    $uploadDir = '/usr/uploads';\n    $realUploadDir = \\Typecho\\Common::url($uploadDir, __TYPECHO_ROOT_DIR__);\n    $writeable = true;\n    if (is_dir($realUploadDir)) {\n        if (!is_writable($realUploadDir) || !is_readable($realUploadDir)) {\n            if (!@chmod($realUploadDir, 0755)) {\n                $writeable = false;\n            }\n        }\n    } else {\n        if (!@mkdir($realUploadDir, 0755)) {\n            $writeable = false;\n        }\n    }\n\n    if (!$writeable) {\n        $errors[] = _t('上传目录无法写入, 请手动将安装目录下的 %s 目录的权限设置为可写然后继续升级', $uploadDir);\n    }\n\n    if (empty($errors)) {\n        install_success(2);\n    } else {\n        install_raise_error(implode(\"\\n\", $errors));\n    }\n}\n\n/**\n * display step 2\n */\nfunction install_step_2()\n{\n    global $installDb;\n\n    $drivers = install_get_db_drivers();\n    $adapter = install_get_current_db_driver();\n    $type = install_get_db_type($adapter);\n\n    if (!empty($installDb)) {\n        $config = $installDb->getConfig(\\Typecho\\Db::WRITE)->toArray();\n        $config['prefix'] = $installDb->getPrefix();\n        $config['adapter'] = $adapter;\n    }\n    ?>\n    <div class=\"row typecho-page-main\">\n        <div class=\"col-mb-12 col-tb-8 col-tb-offset-2\">\n            <div class=\"typecho-page-title\">\n                <h2><?php _e('初始化配置'); ?></h2>\n            </div>\n            <form autocomplete=\"off\" action=\"install.php\" method=\"post\">\n                <ul class=\"typecho-option\">\n                    <li>\n                        <label for=\"dbAdapter\" class=\"typecho-label\"><?php _e('数据库适配器'); ?></label>\n                        <select name=\"dbAdapter\" id=\"dbAdapter\" onchange=\"location.href='?step=2&driver=' + this.value\">\n                            <?php foreach ($drivers as $driver => $name) : ?>\n                                <option value=\"<?php echo $driver; ?>\"<?php if ($driver == $adapter) :\n                                    ?> selected=\"selected\"<?php\n                                               endif; ?>><?php echo $name; ?></option>\n                            <?php endforeach; ?>\n                        </select>\n                        <p class=\"description\"><?php _e('请根据您的数据库类型选择合适的适配器'); ?></p>\n                        <input type=\"hidden\" id=\"dbNext\" name=\"dbNext\" value=\"none\">\n                    </li>\n                </ul>\n                <ul class=\"typecho-option\">\n                    <li>\n                        <label class=\"typecho-label\" for=\"dbPrefix\"><?php _e('数据库前缀'); ?></label>\n                        <input type=\"text\" class=\"text\" name=\"dbPrefix\" id=\"dbPrefix\" value=\"typecho_\" />\n                        <p class=\"description\"><?php _e('默认前缀是 \"typecho_\"'); ?></p>\n                    </li>\n                </ul>\n                <?php require_once './install/' . $type . '.php'; ?>\n\n\n                <ul class=\"typecho-option typecho-option-submit\">\n                    <li>\n                        <button id=\"confirm\" type=\"submit\" class=\"btn primary\"><?php _e('确认, 开始安装 &raquo;'); ?></button>\n                        <input type=\"hidden\" name=\"step\" value=\"2\">\n                    </li>\n                </ul>\n            </form>\n        </div>\n    </div>\n    <script>\n        function configError(form, config, errorBox) {\n            let next = $('#dbNext'),\n                line = $('<p></p>');\n\n            if (config.code) {\n                let text = $('<textarea></textarea>'),\n                    btn = $('<button></button>');\n\n                btn.html('<?php _e('创建完毕, 继续安装 &raquo;'); ?>')\n                    .attr('type', 'button')\n                    .addClass('btn btn-s primary');\n\n                btn.click(function () {\n                    next.val('config');\n                    form.trigger('submit');\n                });\n\n                text.val(config.code)\n                    .addClass('mono')\n                    .attr('readonly', 'readonly');\n\n                errorBox.append(text)\n                    .append(btn);\n                return;\n            }\n\n            errorBox.append(line);\n\n            for (let key in config) {\n                let word = config[key],\n                    btn = $('<button></button>');\n\n                btn.html(word)\n                    .attr('type', 'button')\n                    .addClass('btn btn-s primary')\n                    .click(function () {\n                        next.val(key);\n                        form.trigger('submit');\n                    });\n\n                line.append(btn);\n            }\n        }\n\n        $('#confirm').click(function () {\n            $('#dbNext').val('none');\n        });\n\n        <?php if (!empty($config)) : ?>\n        function fillInput(config) {\n            for (let k in config) {\n                let value = config[k],\n                    key = 'db' + k.charAt(0).toUpperCase() + k.slice(1),\n                    input = $('#' + key)\n                        .attr('readonly', 'readonly')\n                        .val(value);\n\n                $('option:not(:selected)', input).attr('disabled', 'disabled');\n            }\n        }\n\n        fillInput(<?php echo json_encode($config); ?>);\n        <?php endif; ?>\n    </script>\n    <?php\n    install_js_support();\n}\n\n/**\n * perform install step 2\n */\nfunction install_step_2_perform()\n{\n    global $installDb;\n\n    $request = \\Typecho\\Request::getInstance();\n    $drivers = install_get_db_drivers();\n\n    $configMap = [\n        'Mysql' => [\n            'dbHost' => 'localhost',\n            'dbPort' => 3306,\n            'dbUser' => null,\n            'dbPassword' => null,\n            'dbCharset' => 'utf8mb4',\n            'dbDatabase' => null,\n            'dbEngine' => 'InnoDB',\n            'dbSslCa' => null,\n            'dbSslVerify' => 'off',\n        ],\n        'Pgsql' => [\n            'dbHost' => 'localhost',\n            'dbPort' => 5432,\n            'dbUser' => null,\n            'dbPassword' => null,\n            'dbCharset' => 'utf8',\n            'dbDatabase' => null,\n            'dbSslVerify' => 'off',\n        ],\n        'SQLite' => [\n            'dbFile' => __TYPECHO_ROOT_DIR__ . '/usr/' . uniqid() . '.db'\n        ]\n    ];\n\n    if (install_is_cli()) {\n        $config = [\n            'dbHost' => $request->getServer('TYPECHO_DB_HOST'),\n            'dbUser' => $request->getServer('TYPECHO_DB_USER'),\n            'dbPassword' => $request->getServer('TYPECHO_DB_PASSWORD'),\n            'dbCharset' => $request->getServer('TYPECHO_DB_CHARSET'),\n            'dbPort' => $request->getServer('TYPECHO_DB_PORT'),\n            'dbDatabase' => $request->getServer('TYPECHO_DB_DATABASE'),\n            'dbFile' => $request->getServer('TYPECHO_DB_FILE'),\n            'dbDsn' => $request->getServer('TYPECHO_DB_DSN'),\n            'dbEngine' => $request->getServer('TYPECHO_DB_ENGINE'),\n            'dbPrefix' => $request->getServer('TYPECHO_DB_PREFIX', 'typecho_'),\n            'dbAdapter' => $request->getServer('TYPECHO_DB_ADAPTER', install_get_current_db_driver()),\n            'dbNext' => $request->getServer('TYPECHO_DB_NEXT', 'none'),\n            'dbSslCa' => $request->getServer('TYPECHO_DB_SSL_CA'),\n            'dbSslVerify' => $request->getServer('TYPECHO_DB_SSL_VERIFY', 'off'),\n        ];\n    } else {\n        $config = $request->from([\n            'dbHost',\n            'dbUser',\n            'dbPassword',\n            'dbCharset',\n            'dbPort',\n            'dbDatabase',\n            'dbFile',\n            'dbDsn',\n            'dbEngine',\n            'dbPrefix',\n            'dbAdapter',\n            'dbNext',\n            'dbSslCa',\n            'dbSslVerify',\n        ]);\n    }\n\n    $error = (new \\Typecho\\Validate())\n        ->addRule('dbPrefix', 'required', _t('确认您的配置'))\n        ->addRule('dbPrefix', 'minLength', _t('确认您的配置'), 1)\n        ->addRule('dbPrefix', 'maxLength', _t('确认您的配置'), 16)\n        ->addRule('dbPrefix', 'alphaDash', _t('确认您的配置'))\n        ->addRule('dbAdapter', 'required', _t('确认您的配置'))\n        ->addRule('dbAdapter', 'enum', _t('确认您的配置'), array_keys($drivers))\n        ->addRule('dbNext', 'required', _t('确认您的配置'))\n        ->addRule('dbNext', 'enum', _t('确认您的配置'), ['none', 'delete', 'keep', 'config'])\n        ->run($config);\n\n    if (!empty($error)) {\n        install_raise_error($error);\n    }\n\n    $type = install_get_db_type($config['dbAdapter']);\n    $dbConfig = [];\n\n    foreach ($configMap[$type] as $key => $value) {\n        $config[$key] = !isset($config[$key]) ? (install_is_cli() ? $value : null) : $config[$key];\n    }\n\n    switch ($type) {\n        case 'Mysql':\n            $error = (new \\Typecho\\Validate())\n                ->addRule('dbHost', 'required', _t('确认您的配置'))\n                ->addRule('dbPort', 'required', _t('确认您的配置'))\n                ->addRule('dbPort', 'isInteger', _t('确认您的配置'))\n                ->addRule('dbUser', 'required', _t('确认您的配置'))\n                ->addRule('dbCharset', 'required', _t('确认您的配置'))\n                ->addRule('dbCharset', 'enum', _t('确认您的配置'), ['utf8', 'utf8mb4'])\n                ->addRule('dbDatabase', 'required', _t('确认您的配置'))\n                ->addRule('dbEngine', 'required', _t('确认您的配置'))\n                ->addRule('dbEngine', 'enum', _t('确认您的配置'), ['InnoDB', 'MyISAM'])\n                ->addRule('dbSslCa', 'file_exists', _t('确认您的配置'))\n                ->addRule('dbSslVerify', 'enum', _t('确认您的配置'), ['on', 'off'])\n                ->run($config);\n            break;\n        case 'Pgsql':\n            $error = (new \\Typecho\\Validate())\n                ->addRule('dbHost', 'required', _t('确认您的配置'))\n                ->addRule('dbPort', 'required', _t('确认您的配置'))\n                ->addRule('dbPort', 'isInteger', _t('确认您的配置'))\n                ->addRule('dbUser', 'required', _t('确认您的配置'))\n                ->addRule('dbCharset', 'required', _t('确认您的配置'))\n                ->addRule('dbCharset', 'enum', _t('确认您的配置'), ['utf8'])\n                ->addRule('dbDatabase', 'required', _t('确认您的配置'))\n                ->addRule('dbSslVerify', 'enum', _t('确认您的配置'), ['on', 'off'])\n                ->run($config);\n            break;\n        case 'SQLite':\n            $error = (new \\Typecho\\Validate())\n                ->addRule('dbFile', 'required', _t('确认您的配置'))\n                ->addRule('dbFile', function (string $path) {\n                    $pattern = \"/^(\\/[._a-z0-9-]+)*[a-z0-9]+\\.[a-z0-9]{2,}$/i\";\n                    if (strstr(PHP_OS, 'WIN')) {\n                        $pattern = \"/(\\/[._a-z0-9-]+)*[a-z0-9]+\\.[a-z0-9]{2,}$/i\";\n                    }\n                    return !!preg_match($pattern, $path);\n                }, _t('确认您的配置'))\n                ->run($config);\n            break;\n        default:\n            install_raise_error(_t('确认您的配置'));\n            break;\n    }\n\n    if (!empty($error)) {\n        install_raise_error($error);\n    }\n\n    foreach ($configMap[$type] as $key => $value) {\n        $dbConfig[lcfirst(substr($key, 2))] = $config[$key];\n    }\n\n    // intval port number\n    if (isset($dbConfig['port'])) {\n        $dbConfig['port'] = intval($dbConfig['port']);\n    }\n\n    // bool ssl verify\n    if (isset($dbConfig['sslVerify'])) {\n        $dbConfig['sslVerify'] = $dbConfig['sslVerify'] == 'on' || !empty($dbConfig['sslCa']);\n    }\n\n    if (isset($dbConfig['file']) && preg_match(\"/^[a-z0-9]+\\.[a-z0-9]{2,}$/i\", $dbConfig['file'])) {\n        $dbConfig['file'] = __DIR__ . '/usr/' . $dbConfig['file'];\n    }\n\n    // check config file\n    if ($config['dbNext'] == 'config' && !install_check('config')) {\n        $code = install_config_file($config['dbAdapter'], $config['dbPrefix'], $dbConfig, true);\n        install_raise_error(_t('没有检测到您手动创建的配置文件, 请检查后再次创建'), ['code' => $code]);\n    } elseif (empty($installDb)) {\n        // detect db config\n        try {\n            $installDb = new \\Typecho\\Db($config['dbAdapter'], $config['dbPrefix']);\n            $installDb->addServer($dbConfig, \\Typecho\\Db::READ | \\Typecho\\Db::WRITE);\n            $installDb->query('SELECT 1=1');\n        } catch (\\Typecho\\Db\\Adapter\\ConnectionException $e) {\n            $code = $e->getCode();\n            if (('Mysql' == $type && 1049 == $code) || ('Pgsql' == $type && 7 == $code)) {\n                install_raise_error(_t('数据库: \"%s\"不存在，请手动创建后重试', $config['dbDatabase']));\n            } else {\n                install_raise_error(_t('对不起, 无法连接数据库, 请先检查数据库配置再继续进行安装: \"%s\"', $e->getMessage()));\n            }\n        } catch (\\Typecho\\Db\\Exception $e) {\n            install_raise_error(_t('安装程序捕捉到以下错误: \"%s\". 程序被终止, 请检查您的配置信息.', $e->getMessage()));\n        }\n\n        $code = install_config_file($config['dbAdapter'], $config['dbPrefix'], $dbConfig);\n\n        if (!install_check('config')) {\n            install_raise_error(\n                _t('安装程序无法自动创建 <strong>config.inc.php</strong> 文件') . \"\\n\" .\n                _t('您可以在网站根目录下手动创建 <strong>config.inc.php</strong> 文件, 并复制如下代码至其中'),\n                [\n                'code' => $code\n                ]\n            );\n        }\n    }\n\n    // delete exists db\n    if ($config['dbNext'] == 'delete') {\n        $tables = [\n            $config['dbPrefix'] . 'comments',\n            $config['dbPrefix'] . 'contents',\n            $config['dbPrefix'] . 'fields',\n            $config['dbPrefix'] . 'metas',\n            $config['dbPrefix'] . 'options',\n            $config['dbPrefix'] . 'relationships',\n            $config['dbPrefix'] . 'users'\n        ];\n\n        try {\n            foreach ($tables as $table) {\n                switch ($type) {\n                    case 'Mysql':\n                        $installDb->query(\"DROP TABLE IF EXISTS `{$table}`\");\n                        break;\n                    case 'Pgsql':\n                    case 'SQLite':\n                        $installDb->query(\"DROP TABLE {$table}\");\n                        break;\n                }\n            }\n        } catch (\\Typecho\\Db\\Exception $e) {\n            install_raise_error(_t('安装程序捕捉到以下错误: \"%s\". 程序被终止, 请检查您的配置信息.', $e->getMessage()));\n        }\n    }\n\n    // init db structure\n    try {\n        $scripts = file_get_contents(__TYPECHO_ROOT_DIR__ . '/install/' . $type . '.sql');\n        $scripts = str_replace('typecho_', $config['dbPrefix'], $scripts);\n\n        if (isset($dbConfig['charset'])) {\n            $scripts = str_replace('%charset%', $dbConfig['charset'], $scripts);\n        }\n\n        if (isset($dbConfig['engine'])) {\n            $scripts = str_replace('%engine%', $dbConfig['engine'], $scripts);\n        }\n\n        $scripts = explode(';', $scripts);\n        foreach ($scripts as $script) {\n            $script = trim($script);\n            if ($script) {\n                $installDb->query($script, \\Typecho\\Db::WRITE);\n            }\n        }\n    } catch (\\Typecho\\Db\\Exception $e) {\n        $code = $e->getCode();\n\n        if (\n            ('Mysql' == $type && (1050 == $code || '42S01' == $code)) ||\n            ('SQLite' == $type && ('HY000' == $code || 1 == $code)) ||\n            ('Pgsql' == $type && '42P07' == $code)\n        ) {\n            if ($config['dbNext'] == 'keep') {\n                if (install_check('db_data')) {\n                    install_success(0);\n                } else {\n                    install_success(3);\n                }\n            } elseif ($config['dbNext'] == 'none') {\n                install_remove_config_file();\n\n                install_raise_error(_t('安装程序检查到原有数据表已经存在.'), [\n                    'delete' => _t('删除原有数据'),\n                    'keep' => _t('使用原有数据')\n                ]);\n            }\n        } else {\n            install_remove_config_file();\n\n            install_raise_error(_t('安装程序捕捉到以下错误: \"%s\". 程序被终止, 请检查您的配置信息.', $e->getMessage()));\n        }\n    }\n\n    install_success(3);\n}\n\n/**\n * display step 3\n */\nfunction install_step_3()\n{\n    $options = \\Widget\\Options::alloc();\n    ?>\n    <div class=\"row typecho-page-main\">\n        <div class=\"col-mb-12 col-tb-8 col-tb-offset-2\">\n            <div class=\"typecho-page-title\">\n                <h2><?php _e('创建您的管理员帐号'); ?></h2>\n            </div>\n            <form autocomplete=\"off\" action=\"install.php\" method=\"post\">\n                <ul class=\"typecho-option\">\n                    <li>\n                        <label class=\"typecho-label\" for=\"userUrl\"><?php _e('网站地址'); ?></label>\n                        <input autocomplete=\"new-password\" type=\"text\" name=\"userUrl\" id=\"userUrl\" class=\"text\" value=\"<?php $options->rootUrl(); ?>\" />\n                        <p class=\"description\"><?php _e('这是程序自动匹配的网站路径, 如果不正确请修改它'); ?></p>\n                    </li>\n                </ul>\n                <ul class=\"typecho-option\">\n                    <li>\n                        <label class=\"typecho-label\" for=\"userName\"><?php _e('用户名'); ?></label>\n                        <input autocomplete=\"new-password\" type=\"text\" name=\"userName\" id=\"userName\" class=\"text\" />\n                        <p class=\"description\"><?php _e('请填写您的用户名'); ?></p>\n                    </li>\n                </ul>\n                <ul class=\"typecho-option\">\n                    <li>\n                        <label class=\"typecho-label\" for=\"userPassword\"><?php _e('登录密码'); ?></label>\n                        <input type=\"password\" name=\"userPassword\" id=\"userPassword\" class=\"text\" />\n                        <p class=\"description\"><?php _e('请填写您的登录密码, 如果留空系统将为您随机生成一个'); ?></p>\n                    </li>\n                </ul>\n                <ul class=\"typecho-option\">\n                    <li>\n                        <label class=\"typecho-label\" for=\"userMail\"><?php _e('邮件地址'); ?></label>\n                        <input autocomplete=\"new-password\" type=\"text\" name=\"userMail\" id=\"userMail\" class=\"text\" />\n                        <p class=\"description\"><?php _e('请填写一个您的常用邮箱'); ?></p>\n                    </li>\n                </ul>\n                <ul class=\"typecho-option typecho-option-submit\">\n                    <li>\n                        <button type=\"submit\" class=\"btn primary\"><?php _e('继续安装 &raquo;'); ?></button>\n                        <input type=\"hidden\" name=\"step\" value=\"3\">\n                    </li>\n                </ul>\n            </form>\n        </div>\n    </div>\n    <?php\n    install_js_support();\n}\n\n/**\n * perform step 3\n */\nfunction install_step_3_perform()\n{\n    global $installDb;\n\n    $request = \\Typecho\\Request::getInstance();\n    $defaultPassword = \\Typecho\\Common::randString(8);\n    $options = \\Widget\\Options::alloc();\n\n    if (install_is_cli()) {\n        $config = [\n            'userUrl' => $request->getServer('TYPECHO_SITE_URL'),\n            'userName' => $request->getServer('TYPECHO_USER_NAME', 'typecho'),\n            'userPassword' => $request->getServer('TYPECHO_USER_PASSWORD'),\n            'userMail' => $request->getServer('TYPECHO_USER_MAIL', 'admin@localhost.local')\n        ];\n    } else {\n        $config = $request->from([\n            'userUrl',\n            'userName',\n            'userPassword',\n            'userMail',\n        ]);\n    }\n\n    $error = (new \\Typecho\\Validate())\n        ->addRule('userUrl', 'required', _t('请填写站点地址'))\n        ->addRule('userUrl', 'url', _t('请填写一个合法的URL地址'))\n        ->addRule('userName', 'required', _t('必须填写用户名称'))\n        ->addRule('userName', 'xssCheck', _t('请不要在用户名中使用特殊字符'))\n        ->addRule('userName', 'maxLength', _t('用户名长度超过限制, 请不要超过 32 个字符'), 32)\n        ->addRule('userMail', 'required', _t('必须填写电子邮箱'))\n        ->addRule('userMail', 'email', _t('电子邮箱格式错误'))\n        ->addRule('userMail', 'maxLength', _t('邮箱长度超过限制, 请不要超过 200 个字符'), 200)\n        ->run($config);\n\n    if (!empty($error)) {\n        install_raise_error($error);\n    }\n\n    if (empty($config['userPassword'])) {\n        $config['userPassword'] = $defaultPassword;\n    }\n\n    try {\n        // write user\n        $hasher = new \\Utils\\PasswordHash(8, true);\n        $installDb->query(\n            $installDb->insert('table.users')->rows([\n                'name' => $config['userName'],\n                'password' => $hasher->hashPassword($config['userPassword']),\n                'mail' => $config['userMail'],\n                'url' => $config['userUrl'],\n                'screenName' => $config['userName'],\n                'group' => 'administrator',\n                'created' => \\Typecho\\Date::time()\n            ])\n        );\n\n        // write category\n        $installDb->query(\n            $installDb->insert('table.metas')\n                ->rows([\n                    'name' => _t('默认分类'),\n                    'slug' => 'default',\n                    'type' => 'category',\n                    'description' => _t('只是一个默认分类'),\n                    'count' => 1\n                ])\n        );\n\n        $installDb->query($installDb->insert('table.relationships')->rows(['cid' => 1, 'mid' => 1]));\n\n        // write first page and post\n        $installDb->query(\n            $installDb->insert('table.contents')->rows([\n                'title' => _t('欢迎使用 Typecho'),\n                'slug' => 'start', 'created' => \\Typecho\\Date::time(),\n                'modified' => \\Typecho\\Date::time(),\n                'text' => '<!--markdown-->' . _t('如果您看到这篇文章,表示您的 blog 已经安装成功.'),\n                'authorId' => 1,\n                'type' => 'post',\n                'status' => 'publish',\n                'commentsNum' => 1,\n                'allowComment' => 1,\n                'allowPing' => 1,\n                'allowFeed' => 1,\n                'parent' => 0\n            ])\n        );\n\n        $installDb->query(\n            $installDb->insert('table.contents')->rows([\n                'title' => _t('关于'),\n                'slug' => 'start-page',\n                'created' => \\Typecho\\Date::time(),\n                'modified' => \\Typecho\\Date::time(),\n                'text' => '<!--markdown-->' . _t('本页面由 Typecho 创建, 这只是个测试页面.'),\n                'authorId' => 1,\n                'order' => 0,\n                'type' => 'page',\n                'status' => 'publish',\n                'commentsNum' => 0,\n                'allowComment' => 1,\n                'allowPing' => 1,\n                'allowFeed' => 1,\n                'parent' => 0\n            ])\n        );\n\n        // write comment\n        $installDb->query(\n            $installDb->insert('table.comments')->rows([\n                'cid' => 1, 'created' => \\Typecho\\Date::time(),\n                'author' => 'Typecho',\n                'ownerId' => 1,\n                'url' => 'https://typecho.org',\n                'ip' => '127.0.0.1',\n                'agent' => $options->generator,\n                'text' => _t('欢迎加入 Typecho 大家族'),\n                'type' => 'comment',\n                'status' => 'approved',\n                'parent' => 0\n            ])\n        );\n\n        // write options\n        foreach (install_get_default_options() as $key => $value) {\n            // mark installing finished\n            if ($key == 'installed') {\n                $value = 1;\n            }\n\n            $installDb->query(\n                $installDb->insert('table.options')->rows(['name' => $key, 'user' => 0, 'value' => $value])\n            );\n        }\n    } catch (\\Typecho\\Db\\Exception $e) {\n        install_raise_error($e->getMessage());\n    }\n\n    $parts = parse_url($options->loginAction);\n    $parts['query'] = http_build_query([\n            'name'  => $config['userName'],\n            'password' => $config['userPassword'],\n            'referer' => $options->adminUrl\n        ]);\n    $loginUrl = \\Typecho\\Common::buildUrl($parts);\n\n    install_success(0, [\n        $config['userName'],\n        $config['userPassword'],\n        \\Widget\\Security::alloc()->getTokenUrl($loginUrl, $request->getReferer()),\n        $config['userUrl']\n    ]);\n}\n\n/**\n * dispatch install action\n *\n */\nfunction install_dispatch()\n{\n    // disable root url on cli mode\n    if (install_is_cli()) {\n        define('__TYPECHO_ROOT_URL__', 'http://localhost');\n    }\n\n    // init default options\n    $options = \\Widget\\Options::alloc(install_get_default_options());\n    \\Widget\\Init::alloc();\n\n    // display version\n    if (install_is_cli()) {\n        echo $options->generator . \"\\n\";\n        echo 'PHP ' . PHP_VERSION . \"\\n\";\n    }\n\n    // install finished yet\n    if (\n        install_check('config')\n        && install_check('db_structure')\n        && install_check('db_data')\n    ) {\n        // redirect to siteUrl if not cli\n        if (!install_is_cli()) {\n            install_redirect($options->siteUrl);\n        }\n\n        exit(1);\n    }\n\n    if (install_is_cli()) {\n        install_step_1_perform();\n    } else {\n        $request = \\Typecho\\Request::getInstance();\n        $step = $request->get('step');\n\n        $action = 1;\n\n        switch (true) {\n            case $step == 2:\n                if (!install_check('db_structure')) {\n                    $action = 2;\n                } else {\n                    install_redirect('install.php?step=3');\n                }\n                break;\n            case $step == 3:\n                if (install_check('db_structure')) {\n                    $action = 3;\n                } else {\n                    install_redirect('install.php?step=2');\n                }\n                break;\n            default:\n                break;\n        }\n\n        $method = 'install_step_' . $action;\n\n        if ($request->isPost()) {\n            $method .= '_perform';\n            $method();\n            exit;\n        }\n        ?>\n<!DOCTYPE HTML>\n<html>\n<head>\n    <meta charset=\"<?php _e('UTF-8'); ?>\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\">\n    <title><?php _e('Typecho 安装程序'); ?></title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"<?php $options->adminStaticUrl('css', 'normalize.css') ?>\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"<?php $options->adminStaticUrl('css', 'grid.css') ?>\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"<?php $options->adminStaticUrl('css', 'style.css') ?>\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"<?php $options->adminStaticUrl('css', 'install.css') ?>\" />\n    <script src=\"<?php $options->adminStaticUrl('js', 'jquery.js'); ?>\"></script>\n</head>\n<body>\n    <div class=\"body container\">\n        <h1><a href=\"https://typecho.org\" target=\"_blank\" class=\"i-logo\">Typecho</a></h1>\n        <?php $method(); ?>\n    </div>\n</body>\n</html>\n        <?php\n    }\n}\n\ninstall_dispatch();\n"
        },
        {
          "name": "install",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "usr",
          "type": "tree",
          "content": null
        },
        {
          "name": "var",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}