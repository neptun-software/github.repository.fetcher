{
  "metadata": {
    "timestamp": 1736712345887,
    "page": 9,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "WordPress/WordPress",
      "stars": 19766,
      "defaultBranch": "master",
      "files": [
        {
          "name": "index.php",
          "type": "blob",
          "size": 0.3955078125,
          "content": "<?php\n/**\n * Front to the WordPress application. This file doesn't do anything, but loads\n * wp-blog-header.php which does and tells WordPress to load the theme.\n *\n * @package WordPress\n */\n\n/**\n * Tells WordPress to load the WordPress theme and output it.\n *\n * @var bool\n */\ndefine( 'WP_USE_THEMES', true );\n\n/** Loads the WordPress Environment and Template */\nrequire __DIR__ . '/wp-blog-header.php';\n"
        },
        {
          "name": "license.txt",
          "type": "blob",
          "size": 19.4482421875,
          "content": "WordPress - Web publishing software\r\n\r\nCopyright 2011-2025 by the contributors\r\n\r\nThis program is free software; you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation; either version 2 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program; if not, write to the Free Software\r\nFoundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\r\n\r\nThis program incorporates work covered by the following copyright and\r\npermission notices:\r\n\r\n  b2 is (c) 2001, 2002 Michel Valdrighi - https://cafelog.com\r\n\r\n  Wherever third party code has been used, credit has been given in the code's\r\n  comments.\r\n\r\n  b2 is released under the GPL\r\n\r\nand\r\n\r\n  WordPress - Web publishing software\r\n\r\n  Copyright 2003-2010 by the contributors\r\n\r\n  WordPress is released under the GPL\r\n\r\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\n\r\n                    GNU GENERAL PUBLIC LICENSE\r\n                       Version 2, June 1991\r\n\r\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\r\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\r\n Everyone is permitted to copy and distribute verbatim copies\r\n of this license document, but changing it is not allowed.\r\n\r\n                            Preamble\r\n\r\n  The licenses for most software are designed to take away your\r\nfreedom to share and change it.  By contrast, the GNU General Public\r\nLicense is intended to guarantee your freedom to share and change free\r\nsoftware--to make sure the software is free for all its users.  This\r\nGeneral Public License applies to most of the Free Software\r\nFoundation's software and to any other program whose authors commit to\r\nusing it.  (Some other Free Software Foundation software is covered by\r\nthe GNU Lesser General Public License instead.)  You can apply it to\r\nyour programs, too.\r\n\r\n  When we speak of free software, we are referring to freedom, not\r\nprice.  Our General Public Licenses are designed to make sure that you\r\nhave the freedom to distribute copies of free software (and charge for\r\nthis service if you wish), that you receive source code or can get it\r\nif you want it, that you can change the software or use pieces of it\r\nin new free programs; and that you know you can do these things.\r\n\r\n  To protect your rights, we need to make restrictions that forbid\r\nanyone to deny you these rights or to ask you to surrender the rights.\r\nThese restrictions translate to certain responsibilities for you if you\r\ndistribute copies of the software, or if you modify it.\r\n\r\n  For example, if you distribute copies of such a program, whether\r\ngratis or for a fee, you must give the recipients all the rights that\r\nyou have.  You must make sure that they, too, receive or can get the\r\nsource code.  And you must show them these terms so they know their\r\nrights.\r\n\r\n  We protect your rights with two steps: (1) copyright the software, and\r\n(2) offer you this license which gives you legal permission to copy,\r\ndistribute and/or modify the software.\r\n\r\n  Also, for each author's protection and ours, we want to make certain\r\nthat everyone understands that there is no warranty for this free\r\nsoftware.  If the software is modified by someone else and passed on, we\r\nwant its recipients to know that what they have is not the original, so\r\nthat any problems introduced by others will not reflect on the original\r\nauthors' reputations.\r\n\r\n  Finally, any free program is threatened constantly by software\r\npatents.  We wish to avoid the danger that redistributors of a free\r\nprogram will individually obtain patent licenses, in effect making the\r\nprogram proprietary.  To prevent this, we have made it clear that any\r\npatent must be licensed for everyone's free use or not licensed at all.\r\n\r\n  The precise terms and conditions for copying, distribution and\r\nmodification follow.\r\n\r\n                    GNU GENERAL PUBLIC LICENSE\r\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\r\n\r\n  0. This License applies to any program or other work which contains\r\na notice placed by the copyright holder saying it may be distributed\r\nunder the terms of this General Public License.  The \"Program\", below,\r\nrefers to any such program or work, and a \"work based on the Program\"\r\nmeans either the Program or any derivative work under copyright law:\r\nthat is to say, a work containing the Program or a portion of it,\r\neither verbatim or with modifications and/or translated into another\r\nlanguage.  (Hereinafter, translation is included without limitation in\r\nthe term \"modification\".)  Each licensee is addressed as \"you\".\r\n\r\nActivities other than copying, distribution and modification are not\r\ncovered by this License; they are outside its scope.  The act of\r\nrunning the Program is not restricted, and the output from the Program\r\nis covered only if its contents constitute a work based on the\r\nProgram (independent of having been made by running the Program).\r\nWhether that is true depends on what the Program does.\r\n\r\n  1. You may copy and distribute verbatim copies of the Program's\r\nsource code as you receive it, in any medium, provided that you\r\nconspicuously and appropriately publish on each copy an appropriate\r\ncopyright notice and disclaimer of warranty; keep intact all the\r\nnotices that refer to this License and to the absence of any warranty;\r\nand give any other recipients of the Program a copy of this License\r\nalong with the Program.\r\n\r\nYou may charge a fee for the physical act of transferring a copy, and\r\nyou may at your option offer warranty protection in exchange for a fee.\r\n\r\n  2. You may modify your copy or copies of the Program or any portion\r\nof it, thus forming a work based on the Program, and copy and\r\ndistribute such modifications or work under the terms of Section 1\r\nabove, provided that you also meet all of these conditions:\r\n\r\n    a) You must cause the modified files to carry prominent notices\r\n    stating that you changed the files and the date of any change.\r\n\r\n    b) You must cause any work that you distribute or publish, that in\r\n    whole or in part contains or is derived from the Program or any\r\n    part thereof, to be licensed as a whole at no charge to all third\r\n    parties under the terms of this License.\r\n\r\n    c) If the modified program normally reads commands interactively\r\n    when run, you must cause it, when started running for such\r\n    interactive use in the most ordinary way, to print or display an\r\n    announcement including an appropriate copyright notice and a\r\n    notice that there is no warranty (or else, saying that you provide\r\n    a warranty) and that users may redistribute the program under\r\n    these conditions, and telling the user how to view a copy of this\r\n    License.  (Exception: if the Program itself is interactive but\r\n    does not normally print such an announcement, your work based on\r\n    the Program is not required to print an announcement.)\r\n\r\nThese requirements apply to the modified work as a whole.  If\r\nidentifiable sections of that work are not derived from the Program,\r\nand can be reasonably considered independent and separate works in\r\nthemselves, then this License, and its terms, do not apply to those\r\nsections when you distribute them as separate works.  But when you\r\ndistribute the same sections as part of a whole which is a work based\r\non the Program, the distribution of the whole must be on the terms of\r\nthis License, whose permissions for other licensees extend to the\r\nentire whole, and thus to each and every part regardless of who wrote it.\r\n\r\nThus, it is not the intent of this section to claim rights or contest\r\nyour rights to work written entirely by you; rather, the intent is to\r\nexercise the right to control the distribution of derivative or\r\ncollective works based on the Program.\r\n\r\nIn addition, mere aggregation of another work not based on the Program\r\nwith the Program (or with a work based on the Program) on a volume of\r\na storage or distribution medium does not bring the other work under\r\nthe scope of this License.\r\n\r\n  3. You may copy and distribute the Program (or a work based on it,\r\nunder Section 2) in object code or executable form under the terms of\r\nSections 1 and 2 above provided that you also do one of the following:\r\n\r\n    a) Accompany it with the complete corresponding machine-readable\r\n    source code, which must be distributed under the terms of Sections\r\n    1 and 2 above on a medium customarily used for software interchange; or,\r\n\r\n    b) Accompany it with a written offer, valid for at least three\r\n    years, to give any third party, for a charge no more than your\r\n    cost of physically performing source distribution, a complete\r\n    machine-readable copy of the corresponding source code, to be\r\n    distributed under the terms of Sections 1 and 2 above on a medium\r\n    customarily used for software interchange; or,\r\n\r\n    c) Accompany it with the information you received as to the offer\r\n    to distribute corresponding source code.  (This alternative is\r\n    allowed only for noncommercial distribution and only if you\r\n    received the program in object code or executable form with such\r\n    an offer, in accord with Subsection b above.)\r\n\r\nThe source code for a work means the preferred form of the work for\r\nmaking modifications to it.  For an executable work, complete source\r\ncode means all the source code for all modules it contains, plus any\r\nassociated interface definition files, plus the scripts used to\r\ncontrol compilation and installation of the executable.  However, as a\r\nspecial exception, the source code distributed need not include\r\nanything that is normally distributed (in either source or binary\r\nform) with the major components (compiler, kernel, and so on) of the\r\noperating system on which the executable runs, unless that component\r\nitself accompanies the executable.\r\n\r\nIf distribution of executable or object code is made by offering\r\naccess to copy from a designated place, then offering equivalent\r\naccess to copy the source code from the same place counts as\r\ndistribution of the source code, even though third parties are not\r\ncompelled to copy the source along with the object code.\r\n\r\n  4. You may not copy, modify, sublicense, or distribute the Program\r\nexcept as expressly provided under this License.  Any attempt\r\notherwise to copy, modify, sublicense or distribute the Program is\r\nvoid, and will automatically terminate your rights under this License.\r\nHowever, parties who have received copies, or rights, from you under\r\nthis License will not have their licenses terminated so long as such\r\nparties remain in full compliance.\r\n\r\n  5. You are not required to accept this License, since you have not\r\nsigned it.  However, nothing else grants you permission to modify or\r\ndistribute the Program or its derivative works.  These actions are\r\nprohibited by law if you do not accept this License.  Therefore, by\r\nmodifying or distributing the Program (or any work based on the\r\nProgram), you indicate your acceptance of this License to do so, and\r\nall its terms and conditions for copying, distributing or modifying\r\nthe Program or works based on it.\r\n\r\n  6. Each time you redistribute the Program (or any work based on the\r\nProgram), the recipient automatically receives a license from the\r\noriginal licensor to copy, distribute or modify the Program subject to\r\nthese terms and conditions.  You may not impose any further\r\nrestrictions on the recipients' exercise of the rights granted herein.\r\nYou are not responsible for enforcing compliance by third parties to\r\nthis License.\r\n\r\n  7. If, as a consequence of a court judgment or allegation of patent\r\ninfringement or for any other reason (not limited to patent issues),\r\nconditions are imposed on you (whether by court order, agreement or\r\notherwise) that contradict the conditions of this License, they do not\r\nexcuse you from the conditions of this License.  If you cannot\r\ndistribute so as to satisfy simultaneously your obligations under this\r\nLicense and any other pertinent obligations, then as a consequence you\r\nmay not distribute the Program at all.  For example, if a patent\r\nlicense would not permit royalty-free redistribution of the Program by\r\nall those who receive copies directly or indirectly through you, then\r\nthe only way you could satisfy both it and this License would be to\r\nrefrain entirely from distribution of the Program.\r\n\r\nIf any portion of this section is held invalid or unenforceable under\r\nany particular circumstance, the balance of the section is intended to\r\napply and the section as a whole is intended to apply in other\r\ncircumstances.\r\n\r\nIt is not the purpose of this section to induce you to infringe any\r\npatents or other property right claims or to contest validity of any\r\nsuch claims; this section has the sole purpose of protecting the\r\nintegrity of the free software distribution system, which is\r\nimplemented by public license practices.  Many people have made\r\ngenerous contributions to the wide range of software distributed\r\nthrough that system in reliance on consistent application of that\r\nsystem; it is up to the author/donor to decide if he or she is willing\r\nto distribute software through any other system and a licensee cannot\r\nimpose that choice.\r\n\r\nThis section is intended to make thoroughly clear what is believed to\r\nbe a consequence of the rest of this License.\r\n\r\n  8. If the distribution and/or use of the Program is restricted in\r\ncertain countries either by patents or by copyrighted interfaces, the\r\noriginal copyright holder who places the Program under this License\r\nmay add an explicit geographical distribution limitation excluding\r\nthose countries, so that distribution is permitted only in or among\r\ncountries not thus excluded.  In such case, this License incorporates\r\nthe limitation as if written in the body of this License.\r\n\r\n  9. The Free Software Foundation may publish revised and/or new versions\r\nof the General Public License from time to time.  Such new versions will\r\nbe similar in spirit to the present version, but may differ in detail to\r\naddress new problems or concerns.\r\n\r\nEach version is given a distinguishing version number.  If the Program\r\nspecifies a version number of this License which applies to it and \"any\r\nlater version\", you have the option of following the terms and conditions\r\neither of that version or of any later version published by the Free\r\nSoftware Foundation.  If the Program does not specify a version number of\r\nthis License, you may choose any version ever published by the Free Software\r\nFoundation.\r\n\r\n  10. If you wish to incorporate parts of the Program into other free\r\nprograms whose distribution conditions are different, write to the author\r\nto ask for permission.  For software which is copyrighted by the Free\r\nSoftware Foundation, write to the Free Software Foundation; we sometimes\r\nmake exceptions for this.  Our decision will be guided by the two goals\r\nof preserving the free status of all derivatives of our free software and\r\nof promoting the sharing and reuse of software generally.\r\n\r\n                            NO WARRANTY\r\n\r\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\r\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\r\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\r\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\r\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\r\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\r\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\r\nREPAIR OR CORRECTION.\r\n\r\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\r\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\r\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\r\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\r\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\r\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\r\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\r\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\r\nPOSSIBILITY OF SUCH DAMAGES.\r\n\r\n                     END OF TERMS AND CONDITIONS\r\n\r\n            How to Apply These Terms to Your New Programs\r\n\r\n  If you develop a new program, and you want it to be of the greatest\r\npossible use to the public, the best way to achieve this is to make it\r\nfree software which everyone can redistribute and change under these terms.\r\n\r\n  To do so, attach the following notices to the program.  It is safest\r\nto attach them to the start of each source file to most effectively\r\nconvey the exclusion of warranty; and each file should have at least\r\nthe \"copyright\" line and a pointer to where the full notice is found.\r\n\r\n    <one line to give the program's name and a brief idea of what it does.>\r\n    Copyright (C) <year>  <name of author>\r\n\r\n    This program is free software; you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation; either version 2 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License along\r\n    with this program; if not, write to the Free Software Foundation, Inc.,\r\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\r\n\r\nAlso add information on how to contact you by electronic and paper mail.\r\n\r\nIf the program is interactive, make it output a short notice like this\r\nwhen it starts in an interactive mode:\r\n\r\n    Gnomovision version 69, Copyright (C) year name of author\r\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\r\n    This is free software, and you are welcome to redistribute it\r\n    under certain conditions; type `show c' for details.\r\n\r\nThe hypothetical commands `show w' and `show c' should show the appropriate\r\nparts of the General Public License.  Of course, the commands you use may\r\nbe called something other than `show w' and `show c'; they could even be\r\nmouse-clicks or menu items--whatever suits your program.\r\n\r\nYou should also get your employer (if you work as a programmer) or your\r\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\r\nnecessary.  Here is a sample; alter the names:\r\n\r\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\r\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\r\n\r\n  <signature of Ty Coon>, 1 April 1989\r\n  Ty Coon, President of Vice\r\n\r\nThis General Public License does not permit incorporating your program into\r\nproprietary programs.  If your program is a subroutine library, you may\r\nconsider it more useful to permit linking proprietary applications with the\r\nlibrary.  If this is what you want to do, use the GNU Lesser General\r\nPublic License instead of this License.\r\n\r\nWRITTEN OFFER\r\n\r\nThe source code for any program binaries or compressed scripts that are\r\nincluded with WordPress can be freely obtained at the following URL:\r\n\r\n\thttps://wordpress.org/download/source/\r\n"
        },
        {
          "name": "readme.html",
          "type": "blob",
          "size": 7.2353515625,
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta name=\"viewport\" content=\"width=device-width\" />\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\t<title>WordPress &#8250; ReadMe</title>\n\t<link rel=\"stylesheet\" href=\"wp-admin/css/install.css?ver=20100228\" type=\"text/css\" />\n</head>\n<body>\n<h1 id=\"logo\">\n\t<a href=\"https://wordpress.org/\"><img alt=\"WordPress\" src=\"wp-admin/images/wordpress-logo.png\" /></a>\n</h1>\n<p style=\"text-align: center\">Semantic Personal Publishing Platform</p>\n\n<h2>First Things First</h2>\n<p>Welcome. WordPress is a very special project to me. Every developer and contributor adds something unique to the mix, and together we create something beautiful that I am proud to be a part of. Thousands of hours have gone into WordPress, and we are dedicated to making it better every day. Thank you for making it part of your world.</p>\n<p style=\"text-align: right\">&#8212; Matt Mullenweg</p>\n\n<h2>Installation: Famous 5-minute install</h2>\n<ol>\n\t<li>Unzip the package in an empty directory and upload everything.</li>\n\t<li>Open <span class=\"file\"><a href=\"wp-admin/install.php\">wp-admin/install.php</a></span> in your browser. It will take you through the process to set up a <code>wp-config.php</code> file with your database connection details.\n\t\t<ol>\n\t\t\t<li>If for some reason this does not work, do not worry. It may not work on all web hosts. Open up <code>wp-config-sample.php</code> with a text editor like WordPad or similar and fill in your database connection details.</li>\n\t\t\t<li>Save the file as <code>wp-config.php</code> and upload it.</li>\n\t\t\t<li>Open <span class=\"file\"><a href=\"wp-admin/install.php\">wp-admin/install.php</a></span> in your browser.</li>\n\t\t</ol>\n\t</li>\n\t<li>Once the configuration file is set up, the installer will set up the tables needed for your site. If there is an error, double check your <code>wp-config.php</code> file, and try again. If it fails again, please go to the <a href=\"https://wordpress.org/support/forums/\">WordPress support forums</a> with as much data as you can gather.</li>\n\t<li><strong>If you did not enter a password, note the password given to you.</strong> If you did not provide a username, it will be <code>admin</code>.</li>\n\t<li>The installer should then send you to the <a href=\"wp-login.php\">login page</a>. Sign in with the username and password you chose during the installation. If a password was generated for you, you can then click on &#8220;Profile&#8221; to change the password.</li>\n</ol>\n\n<h2>Updating</h2>\n<h3>Using the Automatic Updater</h3>\n<ol>\n\t<li>Open <span class=\"file\"><a href=\"wp-admin/update-core.php\">wp-admin/update-core.php</a></span> in your browser and follow the instructions.</li>\n\t<li>You wanted more, perhaps? That&#8217;s it!</li>\n</ol>\n\n<h3>Updating Manually</h3>\n<ol>\n\t<li>Before you update anything, make sure you have backup copies of any files you may have modified such as <code>index.php</code>.</li>\n\t<li>Delete your old WordPress files, saving ones you&#8217;ve modified.</li>\n\t<li>Upload the new files.</li>\n\t<li>Point your browser to <span class=\"file\"><a href=\"wp-admin/upgrade.php\">/wp-admin/upgrade.php</a>.</span></li>\n</ol>\n\n<h2>Migrating from other systems</h2>\n<p>WordPress can <a href=\"https://developer.wordpress.org/advanced-administration/wordpress/import/\">import from a number of systems</a>. First you need to get WordPress installed and working as described above, before using <a href=\"wp-admin/import.php\">our import tools</a>.</p>\n\n<h2>System Requirements</h2>\n<ul>\n\t<li><a href=\"https://www.php.net/\">PHP</a> version <strong>7.2.24</strong> or greater.</li>\n\t<li><a href=\"https://www.mysql.com/\">MySQL</a> version <strong>5.5.5</strong> or greater.</li>\n</ul>\n\n<h3>Recommendations</h3>\n<ul>\n\t<li><a href=\"https://www.php.net/\">PHP</a> version <strong>7.4</strong> or greater.</li>\n\t<li><a href=\"https://www.mysql.com/\">MySQL</a> version <strong>8.0</strong> or greater OR <a href=\"https://mariadb.org/\">MariaDB</a> version <strong>10.5</strong> or greater.</li>\n\t<li>The <a href=\"https://httpd.apache.org/docs/2.2/mod/mod_rewrite.html\">mod_rewrite</a> Apache module.</li>\n\t<li><a href=\"https://wordpress.org/news/2016/12/moving-toward-ssl/\">HTTPS</a> support.</li>\n\t<li>A link to <a href=\"https://wordpress.org/\">wordpress.org</a> on your site.</li>\n</ul>\n\n<h2>Online Resources</h2>\n<p>If you have any questions that are not addressed in this document, please take advantage of WordPress&#8217; numerous online resources:</p>\n<dl>\n\t<dt><a href=\"https://wordpress.org/documentation/\">HelpHub</a></dt>\n\t\t<dd>HelpHub is the encyclopedia of all things WordPress. It is the most comprehensive source of information for WordPress available.</dd>\n\t<dt><a href=\"https://wordpress.org/news/\">The WordPress Blog</a></dt>\n\t\t<dd>This is where you&#8217;ll find the latest updates and news related to WordPress. Recent WordPress news appears in your administrative dashboard by default.</dd>\n\t<dt><a href=\"https://planet.wordpress.org/\">WordPress Planet</a></dt>\n\t\t<dd>The WordPress Planet is a news aggregator that brings together posts from WordPress blogs around the web.</dd>\n\t<dt><a href=\"https://wordpress.org/support/forums/\">WordPress Support Forums</a></dt>\n\t\t<dd>If you&#8217;ve looked everywhere and still cannot find an answer, the support forums are very active and have a large community ready to help. To help them help you be sure to use a descriptive thread title and describe your question in as much detail as possible.</dd>\n\t<dt><a href=\"https://make.wordpress.org/support/handbook/appendix/other-support-locations/introduction-to-irc/\">WordPress <abbr>IRC</abbr> (Internet Relay Chat) Channel</a></dt>\n\t\t<dd>There is an online chat channel that is used for discussion among people who use WordPress and occasionally support topics. The above wiki page should point you in the right direction. (<a href=\"https://web.libera.chat/#wordpress\">irc.libera.chat #wordpress</a>)</dd>\n</dl>\n\n<h2>Final Notes</h2>\n<ul>\n\t<li>If you have any suggestions, ideas, or comments, or if you (gasp!) found a bug, join us in the <a href=\"https://wordpress.org/support/forums/\">Support Forums</a>.</li>\n\t<li>WordPress has a robust plugin <abbr>API</abbr> (Application Programming Interface) that makes extending the code easy. If you are a developer interested in utilizing this, see the <a href=\"https://developer.wordpress.org/plugins/\">Plugin Developer Handbook</a>. You shouldn&#8217;t modify any of the core code.</li>\n</ul>\n\n<h2>Share the Love</h2>\n<p>WordPress has no multi-million dollar marketing campaign or celebrity sponsors, but we do have something even better&#8212;you. If you enjoy WordPress please consider telling a friend, setting it up for someone less knowledgeable than yourself, or writing the author of a media article that overlooks us.</p>\n\n<p>WordPress is the official continuation of <a href=\"https://cafelog.com/\">b2/caf&#233;log</a>, which came from Michel V. The work has been continued by the <a href=\"https://wordpress.org/about/\">WordPress developers</a>. If you would like to support WordPress, please consider <a href=\"https://wordpress.org/donate/\">donating</a>.</p>\n\n<h2>License</h2>\n<p>WordPress is free software, and is released under the terms of the <abbr>GPL</abbr> (GNU General Public License) version 2 or (at your option) any later version. See <a href=\"license.txt\">license.txt</a>.</p>\n\n</body>\n</html>\n"
        },
        {
          "name": "wp-activate.php",
          "type": "blob",
          "size": 7.2138671875,
          "content": "<?php\n/**\n * Confirms that the activation key that is sent in an email after a user signs\n * up for a new site matches the key for that user and then displays confirmation.\n *\n * @package WordPress\n */\n\ndefine( 'WP_INSTALLING', true );\n\n/** Sets up the WordPress Environment. */\nrequire __DIR__ . '/wp-load.php';\n\nrequire __DIR__ . '/wp-blog-header.php';\n\nif ( ! is_multisite() ) {\n\twp_redirect( wp_registration_url() );\n\tdie();\n}\n\n$valid_error_codes = array( 'already_active', 'blog_taken' );\n\nlist( $activate_path ) = explode( '?', wp_unslash( $_SERVER['REQUEST_URI'] ) );\n$activate_cookie       = 'wp-activate-' . COOKIEHASH;\n\n$key    = '';\n$result = null;\n\nif ( isset( $_GET['key'] ) && isset( $_POST['key'] ) && $_GET['key'] !== $_POST['key'] ) {\n\twp_die( __( 'A key value mismatch has been detected. Please follow the link provided in your activation email.' ), __( 'An error occurred during the activation' ), 400 );\n} elseif ( ! empty( $_GET['key'] ) ) {\n\t$key = $_GET['key'];\n} elseif ( ! empty( $_POST['key'] ) ) {\n\t$key = $_POST['key'];\n}\n\nif ( $key ) {\n\t$redirect_url = remove_query_arg( 'key' );\n\n\tif ( remove_query_arg( false ) !== $redirect_url ) {\n\t\tsetcookie( $activate_cookie, $key, 0, $activate_path, COOKIE_DOMAIN, is_ssl(), true );\n\t\twp_safe_redirect( $redirect_url );\n\t\texit;\n\t} else {\n\t\t$result = wpmu_activate_signup( $key );\n\t}\n}\n\nif ( null === $result && isset( $_COOKIE[ $activate_cookie ] ) ) {\n\t$key    = $_COOKIE[ $activate_cookie ];\n\t$result = wpmu_activate_signup( $key );\n\tsetcookie( $activate_cookie, ' ', time() - YEAR_IN_SECONDS, $activate_path, COOKIE_DOMAIN, is_ssl(), true );\n}\n\nif ( null === $result || ( is_wp_error( $result ) && 'invalid_key' === $result->get_error_code() ) ) {\n\tstatus_header( 404 );\n} elseif ( is_wp_error( $result ) ) {\n\t$error_code = $result->get_error_code();\n\n\tif ( ! in_array( $error_code, $valid_error_codes, true ) ) {\n\t\tstatus_header( 400 );\n\t}\n}\n\nnocache_headers();\n\nif ( is_object( $wp_object_cache ) ) {\n\t$wp_object_cache->cache_enabled = false;\n}\n\n// Fix for page title.\n$wp_query->is_404 = false;\n\n/**\n * Fires before the Site Activation page is loaded.\n *\n * @since 3.0.0\n */\ndo_action( 'activate_header' );\n\n/**\n * Adds an action hook specific to this page.\n *\n * Fires on {@see 'wp_head'}.\n *\n * @since MU (3.0.0)\n */\nfunction do_activate_header() {\n\t/**\n\t * Fires within the `<head>` section of the Site Activation page.\n\t *\n\t * Fires on the {@see 'wp_head'} action.\n\t *\n\t * @since 3.0.0\n\t */\n\tdo_action( 'activate_wp_head' );\n}\nadd_action( 'wp_head', 'do_activate_header' );\n\n/**\n * Loads styles specific to this page.\n *\n * @since MU (3.0.0)\n */\nfunction wpmu_activate_stylesheet() {\n\t?>\n\t<style type=\"text/css\">\n\t\t.wp-activate-container { width: 90%; margin: 0 auto; }\n\t\t.wp-activate-container form { margin-top: 2em; }\n\t\t#submit, #key { width: 100%; font-size: 24px; box-sizing: border-box; }\n\t\t#language { margin-top: 0.5em; }\n\t\t.wp-activate-container .error { background: #f66; color: #333; }\n\t\tspan.h3 { padding: 0 8px; font-size: 1.3em; font-weight: 600; }\n\t</style>\n\t<?php\n}\nadd_action( 'wp_head', 'wpmu_activate_stylesheet' );\nadd_action( 'wp_head', 'wp_strict_cross_origin_referrer' );\nadd_filter( 'wp_robots', 'wp_robots_sensitive_page' );\n\nget_header( 'wp-activate' );\n\n$blog_details = get_site();\n?>\n\n<div id=\"signup-content\" class=\"widecolumn\">\n\t<div class=\"wp-activate-container\">\n\t<?php if ( ! $key ) { ?>\n\n\t\t<h2><?php _e( 'Activation Key Required' ); ?></h2>\n\t\t<form name=\"activateform\" id=\"activateform\" method=\"post\" action=\"<?php echo esc_url( network_site_url( $blog_details->path . 'wp-activate.php' ) ); ?>\">\n\t\t\t<p>\n\t\t\t\t<label for=\"key\"><?php _e( 'Activation Key:' ); ?></label>\n\t\t\t\t<br /><input type=\"text\" name=\"key\" id=\"key\" value=\"\" size=\"50\" autofocus=\"autofocus\" />\n\t\t\t</p>\n\t\t\t<p class=\"submit\">\n\t\t\t\t<input id=\"submit\" type=\"submit\" name=\"Submit\" class=\"submit\" value=\"<?php esc_attr_e( 'Activate' ); ?>\" />\n\t\t\t</p>\n\t\t</form>\n\n\t\t<?php\n\t} else {\n\t\tif ( is_wp_error( $result ) && in_array( $result->get_error_code(), $valid_error_codes, true ) ) {\n\t\t\t$signup = $result->get_error_data();\n\t\t\t?>\n\t\t\t<h2><?php _e( 'Your account is now active!' ); ?></h2>\n\t\t\t<?php\n\t\t\techo '<p class=\"lead-in\">';\n\t\t\tif ( '' === $signup->domain . $signup->path ) {\n\t\t\t\tprintf(\n\t\t\t\t\t/* translators: 1: Login URL, 2: Username, 3: User email address, 4: Lost password URL. */\n\t\t\t\t\t__( 'Your account has been activated. You may now <a href=\"%1$s\">log in</a> to the site using your chosen username of &#8220;%2$s&#8221;. Please check your email inbox at %3$s for your password and login instructions. If you do not receive an email, please check your junk or spam folder. If you still do not receive an email within an hour, you can <a href=\"%4$s\">reset your password</a>.' ),\n\t\t\t\t\tesc_url( network_site_url( $blog_details->path . 'wp-login.php', 'login' ) ),\n\t\t\t\t\tesc_html( $signup->user_login ),\n\t\t\t\t\tesc_html( $signup->user_email ),\n\t\t\t\t\tesc_url( wp_lostpassword_url() )\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tprintf(\n\t\t\t\t\t/* translators: 1: Site URL, 2: Username, 3: User email address, 4: Lost password URL. */\n\t\t\t\t\t__( 'Your site at %1$s is active. You may now log in to your site using your chosen username of &#8220;%2$s&#8221;. Please check your email inbox at %3$s for your password and login instructions. If you do not receive an email, please check your junk or spam folder. If you still do not receive an email within an hour, you can <a href=\"%4$s\">reset your password</a>.' ),\n\t\t\t\t\tsprintf( '<a href=\"http://%1$s\">%1$s</a>', esc_url( $signup->domain . $blog_details->path ) ),\n\t\t\t\t\tesc_html( $signup->user_login ),\n\t\t\t\t\tesc_html( $signup->user_email ),\n\t\t\t\t\tesc_url( wp_lostpassword_url() )\n\t\t\t\t);\n\t\t\t}\n\t\t\techo '</p>';\n\t\t} elseif ( null === $result || is_wp_error( $result ) ) {\n\t\t\t?>\n\t\t\t<h2><?php _e( 'An error occurred during the activation' ); ?></h2>\n\t\t\t<?php if ( is_wp_error( $result ) ) : ?>\n\t\t\t\t<p><?php echo esc_html( $result->get_error_message() ); ?></p>\n\t\t\t<?php endif; ?>\n\t\t\t<?php\n\t\t} else {\n\t\t\t$url  = isset( $result['blog_id'] ) ? esc_url( get_home_url( (int) $result['blog_id'] ) ) : '';\n\t\t\t$user = get_userdata( (int) $result['user_id'] );\n\t\t\t?>\n\t\t\t<h2><?php _e( 'Your account is now active!' ); ?></h2>\n\n\t\t\t<div id=\"signup-welcome\">\n\t\t\t<p><span class=\"h3\"><?php _e( 'Username:' ); ?></span> <?php echo esc_html( $user->user_login ); ?></p>\n\t\t\t<p><span class=\"h3\"><?php _e( 'Password:' ); ?></span> <?php echo esc_html( $result['password'] ); ?></p>\n\t\t\t</div>\n\n\t\t\t<?php\n\t\t\tif ( $url && network_home_url( '', 'http' ) !== $url ) :\n\t\t\t\tswitch_to_blog( (int) $result['blog_id'] );\n\t\t\t\t$login_url = wp_login_url();\n\t\t\t\trestore_current_blog();\n\t\t\t\t?>\n\t\t\t\t<p class=\"view\">\n\t\t\t\t<?php\n\t\t\t\t\t/* translators: 1: Site URL, 2: Login URL. */\n\t\t\t\t\tprintf( __( 'Your account is now activated. <a href=\"%1$s\">View your site</a> or <a href=\"%2$s\">Log in</a>' ), esc_url( $url ), esc_url( $login_url ) );\n\t\t\t\t?>\n\t\t\t\t</p>\n\t\t\t<?php else : ?>\n\t\t\t\t<p class=\"view\">\n\t\t\t\t<?php\n\t\t\t\t\tprintf(\n\t\t\t\t\t\t/* translators: 1: Login URL, 2: Network home URL. */\n\t\t\t\t\t\t__( 'Your account is now activated. <a href=\"%1$s\">Log in</a> or go back to the <a href=\"%2$s\">homepage</a>.' ),\n\t\t\t\t\t\tesc_url( network_site_url( $blog_details->path . 'wp-login.php', 'login' ) ),\n\t\t\t\t\t\tesc_url( network_home_url( $blog_details->path ) )\n\t\t\t\t\t);\n\t\t\t\t?>\n\t\t\t\t</p>\n\t\t\t\t<?php\n\t\t\t\tendif;\n\t\t}\n\t}\n\t?>\n\t</div>\n</div>\n<?php\nget_footer( 'wp-activate' );\n"
        },
        {
          "name": "wp-admin",
          "type": "tree",
          "content": null
        },
        {
          "name": "wp-blog-header.php",
          "type": "blob",
          "size": 0.3427734375,
          "content": "<?php\n/**\n * Loads the WordPress environment and template.\n *\n * @package WordPress\n */\n\nif ( ! isset( $wp_did_header ) ) {\n\n\t$wp_did_header = true;\n\n\t// Load the WordPress library.\n\trequire_once __DIR__ . '/wp-load.php';\n\n\t// Set up the WordPress query.\n\twp();\n\n\t// Load the theme template.\n\trequire_once ABSPATH . WPINC . '/template-loader.php';\n\n}\n"
        },
        {
          "name": "wp-comments-post.php",
          "type": "blob",
          "size": 2.2685546875,
          "content": "<?php\n/**\n * Handles Comment Post to WordPress and prevents duplicate comment posting.\n *\n * @package WordPress\n */\n\nif ( 'POST' !== $_SERVER['REQUEST_METHOD'] ) {\n\t$protocol = $_SERVER['SERVER_PROTOCOL'];\n\tif ( ! in_array( $protocol, array( 'HTTP/1.1', 'HTTP/2', 'HTTP/2.0', 'HTTP/3' ), true ) ) {\n\t\t$protocol = 'HTTP/1.0';\n\t}\n\n\theader( 'Allow: POST' );\n\theader( \"$protocol 405 Method Not Allowed\" );\n\theader( 'Content-Type: text/plain' );\n\texit;\n}\n\n/** Sets up the WordPress Environment. */\nrequire __DIR__ . '/wp-load.php';\n\nnocache_headers();\n\n$comment = wp_handle_comment_submission( wp_unslash( $_POST ) );\nif ( is_wp_error( $comment ) ) {\n\t$data = (int) $comment->get_error_data();\n\tif ( ! empty( $data ) ) {\n\t\twp_die(\n\t\t\t'<p>' . $comment->get_error_message() . '</p>',\n\t\t\t__( 'Comment Submission Failure' ),\n\t\t\tarray(\n\t\t\t\t'response'  => $data,\n\t\t\t\t'back_link' => true,\n\t\t\t)\n\t\t);\n\t} else {\n\t\texit;\n\t}\n}\n\n$user            = wp_get_current_user();\n$cookies_consent = ( isset( $_POST['wp-comment-cookies-consent'] ) );\n\n/**\n * Fires after comment cookies are set.\n *\n * @since 3.4.0\n * @since 4.9.6 The `$cookies_consent` parameter was added.\n *\n * @param WP_Comment $comment         Comment object.\n * @param WP_User    $user            Comment author's user object. The user may not exist.\n * @param bool       $cookies_consent Comment author's consent to store cookies.\n */\ndo_action( 'set_comment_cookies', $comment, $user, $cookies_consent );\n\n$location = empty( $_POST['redirect_to'] ) ? get_comment_link( $comment ) : $_POST['redirect_to'] . '#comment-' . $comment->comment_ID;\n\n// If user didn't consent to cookies, add specific query arguments to display the awaiting moderation message.\nif ( ! $cookies_consent && 'unapproved' === wp_get_comment_status( $comment ) && ! empty( $comment->comment_author_email ) ) {\n\t$location = add_query_arg(\n\t\tarray(\n\t\t\t'unapproved'      => $comment->comment_ID,\n\t\t\t'moderation-hash' => wp_hash( $comment->comment_date_gmt ),\n\t\t),\n\t\t$location\n\t);\n}\n\n/**\n * Filters the location URI to send the commenter after posting.\n *\n * @since 2.0.5\n *\n * @param string     $location The 'redirect_to' URI sent via $_POST.\n * @param WP_Comment $comment  Comment object.\n */\n$location = apply_filters( 'comment_post_redirect', $location, $comment );\n\nwp_safe_redirect( $location );\nexit;\n"
        },
        {
          "name": "wp-config-sample.php",
          "type": "blob",
          "size": 3.2578125,
          "content": "<?php\r\n/**\r\n * The base configuration for WordPress\r\n *\r\n * The wp-config.php creation script uses this file during the installation.\r\n * You don't have to use the website, you can copy this file to \"wp-config.php\"\r\n * and fill in the values.\r\n *\r\n * This file contains the following configurations:\r\n *\r\n * * Database settings\r\n * * Secret keys\r\n * * Database table prefix\r\n * * ABSPATH\r\n *\r\n * @link https://developer.wordpress.org/advanced-administration/wordpress/wp-config/\r\n *\r\n * @package WordPress\r\n */\r\n\r\n// ** Database settings - You can get this info from your web host ** //\r\n/** The name of the database for WordPress */\r\ndefine( 'DB_NAME', 'database_name_here' );\r\n\r\n/** Database username */\r\ndefine( 'DB_USER', 'username_here' );\r\n\r\n/** Database password */\r\ndefine( 'DB_PASSWORD', 'password_here' );\r\n\r\n/** Database hostname */\r\ndefine( 'DB_HOST', 'localhost' );\r\n\r\n/** Database charset to use in creating database tables. */\r\ndefine( 'DB_CHARSET', 'utf8' );\r\n\r\n/** The database collate type. Don't change this if in doubt. */\r\ndefine( 'DB_COLLATE', '' );\r\n\r\n/**#@+\r\n * Authentication unique keys and salts.\r\n *\r\n * Change these to different unique phrases! You can generate these using\r\n * the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}.\r\n *\r\n * You can change these at any point in time to invalidate all existing cookies.\r\n * This will force all users to have to log in again.\r\n *\r\n * @since 2.6.0\r\n */\r\ndefine( 'AUTH_KEY',         'put your unique phrase here' );\r\ndefine( 'SECURE_AUTH_KEY',  'put your unique phrase here' );\r\ndefine( 'LOGGED_IN_KEY',    'put your unique phrase here' );\r\ndefine( 'NONCE_KEY',        'put your unique phrase here' );\r\ndefine( 'AUTH_SALT',        'put your unique phrase here' );\r\ndefine( 'SECURE_AUTH_SALT', 'put your unique phrase here' );\r\ndefine( 'LOGGED_IN_SALT',   'put your unique phrase here' );\r\ndefine( 'NONCE_SALT',       'put your unique phrase here' );\r\n\r\n/**#@-*/\r\n\r\n/**\r\n * WordPress database table prefix.\r\n *\r\n * You can have multiple installations in one database if you give each\r\n * a unique prefix. Only numbers, letters, and underscores please!\r\n *\r\n * At the installation time, database tables are created with the specified prefix.\r\n * Changing this value after WordPress is installed will make your site think\r\n * it has not been installed.\r\n *\r\n * @link https://developer.wordpress.org/advanced-administration/wordpress/wp-config/#table-prefix\r\n */\r\n$table_prefix = 'wp_';\r\n\r\n/**\r\n * For developers: WordPress debugging mode.\r\n *\r\n * Change this to true to enable the display of notices during development.\r\n * It is strongly recommended that plugin and theme developers use WP_DEBUG\r\n * in their development environments.\r\n *\r\n * For information on other constants that can be used for debugging,\r\n * visit the documentation.\r\n *\r\n * @link https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\r\n */\r\ndefine( 'WP_DEBUG', false );\r\n\r\n/* Add any custom values between this line and the \"stop editing\" line. */\r\n\r\n\r\n\r\n/* That's all, stop editing! Happy publishing. */\r\n\r\n/** Absolute path to the WordPress directory. */\r\nif ( ! defined( 'ABSPATH' ) ) {\r\n\tdefine( 'ABSPATH', __DIR__ . '/' );\r\n}\r\n\r\n/** Sets up WordPress vars and included files. */\r\nrequire_once ABSPATH . 'wp-settings.php';\r\n"
        },
        {
          "name": "wp-content",
          "type": "tree",
          "content": null
        },
        {
          "name": "wp-cron.php",
          "type": "blob",
          "size": 5.4853515625,
          "content": "<?php\n/**\n * A pseudo-cron daemon for scheduling WordPress tasks.\n *\n * WP-Cron is triggered when the site receives a visit. In the scenario\n * where a site may not receive enough visits to execute scheduled tasks\n * in a timely manner, this file can be called directly or via a server\n * cron daemon for X number of times.\n *\n * Defining DISABLE_WP_CRON as true and calling this file directly are\n * mutually exclusive and the latter does not rely on the former to work.\n *\n * The HTTP request to this file will not slow down the visitor who happens to\n * visit when a scheduled cron event runs.\n *\n * @package WordPress\n */\n\nignore_user_abort( true );\n\nif ( ! headers_sent() ) {\n\theader( 'Expires: Wed, 11 Jan 1984 05:00:00 GMT' );\n\theader( 'Cache-Control: no-cache, must-revalidate, max-age=0' );\n}\n\n// Don't run cron until the request finishes, if possible.\nif ( function_exists( 'fastcgi_finish_request' ) ) {\n\tfastcgi_finish_request();\n} elseif ( function_exists( 'litespeed_finish_request' ) ) {\n\tlitespeed_finish_request();\n}\n\nif ( ! empty( $_POST ) || defined( 'DOING_AJAX' ) || defined( 'DOING_CRON' ) ) {\n\tdie();\n}\n\n/**\n * Tell WordPress the cron task is running.\n *\n * @var bool\n */\ndefine( 'DOING_CRON', true );\n\nif ( ! defined( 'ABSPATH' ) ) {\n\t/** Set up WordPress environment */\n\trequire_once __DIR__ . '/wp-load.php';\n}\n\n// Attempt to raise the PHP memory limit for cron event processing.\nwp_raise_memory_limit( 'cron' );\n\n/**\n * Retrieves the cron lock.\n *\n * Returns the uncached `doing_cron` transient.\n *\n * @ignore\n * @since 3.3.0\n *\n * @global wpdb $wpdb WordPress database abstraction object.\n *\n * @return string|int|false Value of the `doing_cron` transient, 0|false otherwise.\n */\nfunction _get_cron_lock() {\n\tglobal $wpdb;\n\n\t$value = 0;\n\tif ( wp_using_ext_object_cache() ) {\n\t\t/*\n\t\t * Skip local cache and force re-fetch of doing_cron transient\n\t\t * in case another process updated the cache.\n\t\t */\n\t\t$value = wp_cache_get( 'doing_cron', 'transient', true );\n\t} else {\n\t\t$row = $wpdb->get_row( $wpdb->prepare( \"SELECT option_value FROM $wpdb->options WHERE option_name = %s LIMIT 1\", '_transient_doing_cron' ) );\n\t\tif ( is_object( $row ) ) {\n\t\t\t$value = $row->option_value;\n\t\t}\n\t}\n\n\treturn $value;\n}\n\n$crons = wp_get_ready_cron_jobs();\nif ( empty( $crons ) ) {\n\tdie();\n}\n\n$gmt_time = microtime( true );\n\n// The cron lock: a unix timestamp from when the cron was spawned.\n$doing_cron_transient = get_transient( 'doing_cron' );\n\n// Use global $doing_wp_cron lock, otherwise use the GET lock. If no lock, try to grab a new lock.\nif ( empty( $doing_wp_cron ) ) {\n\tif ( empty( $_GET['doing_wp_cron'] ) ) {\n\t\t// Called from external script/job. Try setting a lock.\n\t\tif ( $doing_cron_transient && ( $doing_cron_transient + WP_CRON_LOCK_TIMEOUT > $gmt_time ) ) {\n\t\t\treturn;\n\t\t}\n\t\t$doing_wp_cron        = sprintf( '%.22F', microtime( true ) );\n\t\t$doing_cron_transient = $doing_wp_cron;\n\t\tset_transient( 'doing_cron', $doing_wp_cron );\n\t} else {\n\t\t$doing_wp_cron = $_GET['doing_wp_cron'];\n\t}\n}\n\n/*\n * The cron lock (a unix timestamp set when the cron was spawned),\n * must match $doing_wp_cron (the \"key\").\n */\nif ( $doing_cron_transient !== $doing_wp_cron ) {\n\treturn;\n}\n\nforeach ( $crons as $timestamp => $cronhooks ) {\n\tif ( $timestamp > $gmt_time ) {\n\t\tbreak;\n\t}\n\n\tforeach ( $cronhooks as $hook => $keys ) {\n\n\t\tforeach ( $keys as $k => $v ) {\n\n\t\t\t$schedule = $v['schedule'];\n\n\t\t\tif ( $schedule ) {\n\t\t\t\t$result = wp_reschedule_event( $timestamp, $schedule, $hook, $v['args'], true );\n\n\t\t\t\tif ( is_wp_error( $result ) ) {\n\t\t\t\t\terror_log(\n\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t/* translators: 1: Hook name, 2: Error code, 3: Error message, 4: Event data. */\n\t\t\t\t\t\t\t__( 'Cron reschedule event error for hook: %1$s, Error code: %2$s, Error message: %3$s, Data: %4$s' ),\n\t\t\t\t\t\t\t$hook,\n\t\t\t\t\t\t\t$result->get_error_code(),\n\t\t\t\t\t\t\t$result->get_error_message(),\n\t\t\t\t\t\t\twp_json_encode( $v )\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Fires if an error happens when rescheduling a cron event.\n\t\t\t\t\t *\n\t\t\t\t\t * @since 6.1.0\n\t\t\t\t\t *\n\t\t\t\t\t * @param WP_Error $result The WP_Error object.\n\t\t\t\t\t * @param string   $hook   Action hook to execute when the event is run.\n\t\t\t\t\t * @param array    $v      Event data.\n\t\t\t\t\t */\n\t\t\t\t\tdo_action( 'cron_reschedule_event_error', $result, $hook, $v );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$result = wp_unschedule_event( $timestamp, $hook, $v['args'], true );\n\n\t\t\tif ( is_wp_error( $result ) ) {\n\t\t\t\terror_log(\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t/* translators: 1: Hook name, 2: Error code, 3: Error message, 4: Event data. */\n\t\t\t\t\t\t__( 'Cron unschedule event error for hook: %1$s, Error code: %2$s, Error message: %3$s, Data: %4$s' ),\n\t\t\t\t\t\t$hook,\n\t\t\t\t\t\t$result->get_error_code(),\n\t\t\t\t\t\t$result->get_error_message(),\n\t\t\t\t\t\twp_json_encode( $v )\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * Fires if an error happens when unscheduling a cron event.\n\t\t\t\t *\n\t\t\t\t * @since 6.1.0\n\t\t\t\t *\n\t\t\t\t * @param WP_Error $result The WP_Error object.\n\t\t\t\t * @param string   $hook   Action hook to execute when the event is run.\n\t\t\t\t * @param array    $v      Event data.\n\t\t\t\t */\n\t\t\t\tdo_action( 'cron_unschedule_event_error', $result, $hook, $v );\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Fires scheduled events.\n\t\t\t *\n\t\t\t * @ignore\n\t\t\t * @since 2.1.0\n\t\t\t *\n\t\t\t * @param string $hook Name of the hook that was scheduled to be fired.\n\t\t\t * @param array  $args The arguments to be passed to the hook.\n\t\t\t */\n\t\t\tdo_action_ref_array( $hook, $v['args'] );\n\n\t\t\t// If the hook ran too long and another cron process stole the lock, quit.\n\t\t\tif ( _get_cron_lock() !== $doing_wp_cron ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\nif ( _get_cron_lock() === $doing_wp_cron ) {\n\tdelete_transient( 'doing_cron' );\n}\n\ndie();\n"
        },
        {
          "name": "wp-includes",
          "type": "tree",
          "content": null
        },
        {
          "name": "wp-links-opml.php",
          "type": "blob",
          "size": 2.443359375,
          "content": "<?php\n/**\n * Outputs the OPML XML format for getting the links defined in the link\n * administration. This can be used to export links from one blog over to\n * another. Links aren't exported by the WordPress export, so this file handles\n * that.\n *\n * This file is not added by default to WordPress theme pages when outputting\n * feed links. It will have to be added manually for browsers and users to pick\n * up that this file exists.\n *\n * @package WordPress\n */\n\nrequire_once __DIR__ . '/wp-load.php';\n\nheader( 'Content-Type: text/xml; charset=' . get_option( 'blog_charset' ), true );\n$link_cat = '';\nif ( ! empty( $_GET['link_cat'] ) ) {\n\t$link_cat = $_GET['link_cat'];\n\tif ( ! in_array( $link_cat, array( 'all', '0' ), true ) ) {\n\t\t$link_cat = absint( (string) urldecode( $link_cat ) );\n\t}\n}\n\necho '<?xml version=\"1.0\"?' . \">\\n\";\n?>\n<opml version=\"1.0\">\n\t<head>\n\t\t<title>\n\t\t<?php\n\t\t\t/* translators: %s: Site title. */\n\t\t\tprintf( __( 'Links for %s' ), esc_attr( get_bloginfo( 'name', 'display' ) ) );\n\t\t?>\n\t\t</title>\n\t\t<dateCreated><?php echo gmdate( 'D, d M Y H:i:s' ); ?> GMT</dateCreated>\n\t\t<?php\n\t\t/**\n\t\t * Fires in the OPML header.\n\t\t *\n\t\t * @since 3.0.0\n\t\t */\n\t\tdo_action( 'opml_head' );\n\t\t?>\n\t</head>\n\t<body>\n<?php\nif ( empty( $link_cat ) ) {\n\t$cats = get_categories(\n\t\tarray(\n\t\t\t'taxonomy'     => 'link_category',\n\t\t\t'hierarchical' => 0,\n\t\t)\n\t);\n} else {\n\t$cats = get_categories(\n\t\tarray(\n\t\t\t'taxonomy'     => 'link_category',\n\t\t\t'hierarchical' => 0,\n\t\t\t'include'      => $link_cat,\n\t\t)\n\t);\n}\n\nforeach ( (array) $cats as $cat ) :\n\t/** This filter is documented in wp-includes/bookmark-template.php */\n\t$catname = apply_filters( 'link_category', $cat->name );\n\n\t?>\n<outline type=\"category\" title=\"<?php echo esc_attr( $catname ); ?>\">\n\t<?php\n\t$bookmarks = get_bookmarks( array( 'category' => $cat->term_id ) );\n\tforeach ( (array) $bookmarks as $bookmark ) :\n\t\t/**\n\t\t * Filters the OPML outline link title text.\n\t\t *\n\t\t * @since 2.2.0\n\t\t *\n\t\t * @param string $title The OPML outline title text.\n\t\t */\n\t\t$title = apply_filters( 'link_title', $bookmark->link_name );\n\t\t?>\n<outline text=\"<?php echo esc_attr( $title ); ?>\" type=\"link\" xmlUrl=\"<?php echo esc_url( $bookmark->link_rss ); ?>\" htmlUrl=\"<?php echo esc_url( $bookmark->link_url ); ?>\" updated=\"\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif ( '0000-00-00 00:00:00' !== $bookmark->link_updated ) {\n\t\t\t\t\t\t\t\techo $bookmark->link_updated;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\" />\n\t\t<?php\n\tendforeach; // $bookmarks\n\t?>\n</outline>\n\t<?php\nendforeach; // $cats\n?>\n</body>\n</opml>\n"
        },
        {
          "name": "wp-load.php",
          "type": "blob",
          "size": 3.8447265625,
          "content": "<?php\n/**\n * Bootstrap file for setting the ABSPATH constant\n * and loading the wp-config.php file. The wp-config.php\n * file will then load the wp-settings.php file, which\n * will then set up the WordPress environment.\n *\n * If the wp-config.php file is not found then an error\n * will be displayed asking the visitor to set up the\n * wp-config.php file.\n *\n * Will also search for wp-config.php in WordPress' parent\n * directory to allow the WordPress directory to remain\n * untouched.\n *\n * @package WordPress\n */\n\n/** Define ABSPATH as this file's directory */\nif ( ! defined( 'ABSPATH' ) ) {\n\tdefine( 'ABSPATH', __DIR__ . '/' );\n}\n\n/*\n * The error_reporting() function can be disabled in php.ini. On systems where that is the case,\n * it's best to add a dummy function to the wp-config.php file, but as this call to the function\n * is run prior to wp-config.php loading, it is wrapped in a function_exists() check.\n */\nif ( function_exists( 'error_reporting' ) ) {\n\t/*\n\t * Initialize error reporting to a known set of levels.\n\t *\n\t * This will be adapted in wp_debug_mode() located in wp-includes/load.php based on WP_DEBUG.\n\t * @see https://www.php.net/manual/en/errorfunc.constants.php List of known error levels.\n\t */\n\terror_reporting( E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_ERROR | E_WARNING | E_PARSE | E_USER_ERROR | E_USER_WARNING | E_RECOVERABLE_ERROR );\n}\n\n/*\n * If wp-config.php exists in the WordPress root, or if it exists in the root and wp-settings.php\n * doesn't, load wp-config.php. The secondary check for wp-settings.php has the added benefit\n * of avoiding cases where the current directory is a nested installation, e.g. / is WordPress(a)\n * and /blog/ is WordPress(b).\n *\n * If neither set of conditions is true, initiate loading the setup process.\n */\nif ( file_exists( ABSPATH . 'wp-config.php' ) ) {\n\n\t/** The config file resides in ABSPATH */\n\trequire_once ABSPATH . 'wp-config.php';\n\n} elseif ( @file_exists( dirname( ABSPATH ) . '/wp-config.php' ) && ! @file_exists( dirname( ABSPATH ) . '/wp-settings.php' ) ) {\n\n\t/** The config file resides one level above ABSPATH but is not part of another installation */\n\trequire_once dirname( ABSPATH ) . '/wp-config.php';\n\n} else {\n\n\t// A config file doesn't exist.\n\n\tdefine( 'WPINC', 'wp-includes' );\n\trequire_once ABSPATH . WPINC . '/version.php';\n\trequire_once ABSPATH . WPINC . '/compat.php';\n\trequire_once ABSPATH . WPINC . '/load.php';\n\n\t// Check for the required PHP version and for the MySQL extension or a database drop-in.\n\twp_check_php_mysql_versions();\n\n\t// Standardize $_SERVER variables across setups.\n\twp_fix_server_vars();\n\n\tdefine( 'WP_CONTENT_DIR', ABSPATH . 'wp-content' );\n\trequire_once ABSPATH . WPINC . '/functions.php';\n\n\t$path = wp_guess_url() . '/wp-admin/setup-config.php';\n\n\t// Redirect to setup-config.php.\n\tif ( ! str_contains( $_SERVER['REQUEST_URI'], 'setup-config' ) ) {\n\t\theader( 'Location: ' . $path );\n\t\texit;\n\t}\n\n\twp_load_translations_early();\n\n\t// Die with an error message.\n\t$die = '<p>' . sprintf(\n\t\t/* translators: %s: wp-config.php */\n\t\t__( \"There doesn't seem to be a %s file. It is needed before the installation can continue.\" ),\n\t\t'<code>wp-config.php</code>'\n\t) . '</p>';\n\t$die .= '<p>' . sprintf(\n\t\t/* translators: 1: Documentation URL, 2: wp-config.php */\n\t\t__( 'Need more help? <a href=\"%1$s\">Read the support article on %2$s</a>.' ),\n\t\t__( 'https://developer.wordpress.org/advanced-administration/wordpress/wp-config/' ),\n\t\t'<code>wp-config.php</code>'\n\t) . '</p>';\n\t$die .= '<p>' . sprintf(\n\t\t/* translators: %s: wp-config.php */\n\t\t__( \"You can create a %s file through a web interface, but this doesn't work for all server setups. The safest way is to manually create the file.\" ),\n\t\t'<code>wp-config.php</code>'\n\t) . '</p>';\n\t$die .= '<p><a href=\"' . $path . '\" class=\"button button-large\">' . __( 'Create a Configuration File' ) . '</a></p>';\n\n\twp_die( $die, __( 'WordPress &rsaquo; Error' ) );\n}\n"
        },
        {
          "name": "wp-login.php",
          "type": "blob",
          "size": 50.1630859375,
          "content": "<?php\n/**\n * WordPress User Page\n *\n * Handles authentication, registering, resetting passwords, forgot password,\n * and other user handling.\n *\n * @package WordPress\n */\n\n/** Make sure that the WordPress bootstrap has run before continuing. */\nrequire __DIR__ . '/wp-load.php';\n\n// Redirect to HTTPS login if forced to use SSL.\nif ( force_ssl_admin() && ! is_ssl() ) {\n\tif ( str_starts_with( $_SERVER['REQUEST_URI'], 'http' ) ) {\n\t\twp_safe_redirect( set_url_scheme( $_SERVER['REQUEST_URI'], 'https' ) );\n\t\texit;\n\t} else {\n\t\twp_safe_redirect( 'https://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'] );\n\t\texit;\n\t}\n}\n\n/**\n * Outputs the login page header.\n *\n * @since 2.1.0\n *\n * @global string      $error         Login error message set by deprecated pluggable wp_login() function\n *                                    or plugins replacing it.\n * @global bool|string $interim_login Whether interim login modal is being displayed. String 'success'\n *                                    upon successful login.\n * @global string      $action        The action that brought the visitor to the login page.\n *\n * @param string|null   $title    Optional. WordPress login page title to display in the `<title>` element.\n *                                Defaults to 'Log In'.\n * @param string        $message  Optional. Message to display in header. Default empty.\n * @param WP_Error|null $wp_error Optional. The error to pass. Defaults to a WP_Error instance.\n */\nfunction login_header( $title = null, $message = '', $wp_error = null ) {\n\tglobal $error, $interim_login, $action;\n\n\tif ( null === $title ) {\n\t\t$title = __( 'Log In' );\n\t}\n\n\t// Don't index any of these forms.\n\tadd_filter( 'wp_robots', 'wp_robots_sensitive_page' );\n\tadd_action( 'login_head', 'wp_strict_cross_origin_referrer' );\n\n\tadd_action( 'login_head', 'wp_login_viewport_meta' );\n\n\tif ( ! is_wp_error( $wp_error ) ) {\n\t\t$wp_error = new WP_Error();\n\t}\n\n\t// Shake it!\n\t$shake_error_codes = array( 'empty_password', 'empty_email', 'invalid_email', 'invalidcombo', 'empty_username', 'invalid_username', 'incorrect_password', 'retrieve_password_email_failure' );\n\t/**\n\t * Filters the error codes array for shaking the login form.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string[] $shake_error_codes Error codes that shake the login form.\n\t */\n\t$shake_error_codes = apply_filters( 'shake_error_codes', $shake_error_codes );\n\n\tif ( $shake_error_codes && $wp_error->has_errors() && in_array( $wp_error->get_error_code(), $shake_error_codes, true ) ) {\n\t\tadd_action( 'login_footer', 'wp_shake_js', 12 );\n\t}\n\n\t$login_title = get_bloginfo( 'name', 'display' );\n\n\t/* translators: Login screen title. 1: Login screen name, 2: Network or site name. */\n\t$login_title = sprintf( __( '%1$s &lsaquo; %2$s &#8212; WordPress' ), $title, $login_title );\n\n\tif ( wp_is_recovery_mode() ) {\n\t\t/* translators: %s: Login screen title. */\n\t\t$login_title = sprintf( __( 'Recovery Mode &#8212; %s' ), $login_title );\n\t}\n\n\t/**\n\t * Filters the title tag content for login page.\n\t *\n\t * @since 4.9.0\n\t *\n\t * @param string $login_title The page title, with extra context added.\n\t * @param string $title       The original page title.\n\t */\n\t$login_title = apply_filters( 'login_title', $login_title, $title );\n\n\t?><!DOCTYPE html>\n\t<html <?php language_attributes(); ?>>\n\t<head>\n\t<meta http-equiv=\"Content-Type\" content=\"<?php bloginfo( 'html_type' ); ?>; charset=<?php bloginfo( 'charset' ); ?>\" />\n\t<title><?php echo $login_title; ?></title>\n\t<?php\n\n\twp_enqueue_style( 'login' );\n\n\t/*\n\t * Remove all stored post data on logging out.\n\t * This could be added by add_action('login_head'...) like wp_shake_js(),\n\t * but maybe better if it's not removable by plugins.\n\t */\n\tif ( 'loggedout' === $wp_error->get_error_code() ) {\n\t\tob_start();\n\t\t?>\n\t\t<script>if(\"sessionStorage\" in window){try{for(var key in sessionStorage){if(key.indexOf(\"wp-autosave-\")!=-1){sessionStorage.removeItem(key)}}}catch(e){}};</script>\n\t\t<?php\n\t\twp_print_inline_script_tag( wp_remove_surrounding_empty_script_tags( ob_get_clean() ) );\n\t}\n\n\t/**\n\t * Enqueues scripts and styles for the login page.\n\t *\n\t * @since 3.1.0\n\t */\n\tdo_action( 'login_enqueue_scripts' );\n\n\t/**\n\t * Fires in the login page header after scripts are enqueued.\n\t *\n\t * @since 2.1.0\n\t */\n\tdo_action( 'login_head' );\n\n\t$login_header_url = __( 'https://wordpress.org/' );\n\n\t/**\n\t * Filters link URL of the header logo above login form.\n\t *\n\t * @since 2.1.0\n\t *\n\t * @param string $login_header_url Login header logo URL.\n\t */\n\t$login_header_url = apply_filters( 'login_headerurl', $login_header_url );\n\n\t$login_header_title = '';\n\n\t/**\n\t * Filters the title attribute of the header logo above login form.\n\t *\n\t * @since 2.1.0\n\t * @deprecated 5.2.0 Use {@see 'login_headertext'} instead.\n\t *\n\t * @param string $login_header_title Login header logo title attribute.\n\t */\n\t$login_header_title = apply_filters_deprecated(\n\t\t'login_headertitle',\n\t\tarray( $login_header_title ),\n\t\t'5.2.0',\n\t\t'login_headertext',\n\t\t__( 'Usage of the title attribute on the login logo is not recommended for accessibility reasons. Use the link text instead.' )\n\t);\n\n\t$login_header_text = empty( $login_header_title ) ? __( 'Powered by WordPress' ) : $login_header_title;\n\n\t/**\n\t * Filters the link text of the header logo above the login form.\n\t *\n\t * @since 5.2.0\n\t *\n\t * @param string $login_header_text The login header logo link text.\n\t */\n\t$login_header_text = apply_filters( 'login_headertext', $login_header_text );\n\n\t$classes = array( 'login-action-' . $action, 'wp-core-ui' );\n\n\tif ( is_rtl() ) {\n\t\t$classes[] = 'rtl';\n\t}\n\n\tif ( $interim_login ) {\n\t\t$classes[] = 'interim-login';\n\n\t\t?>\n\t\t<style type=\"text/css\">html{background-color: transparent;}</style>\n\t\t<?php\n\n\t\tif ( 'success' === $interim_login ) {\n\t\t\t$classes[] = 'interim-login-success';\n\t\t}\n\t}\n\n\t$classes[] = ' locale-' . sanitize_html_class( strtolower( str_replace( '_', '-', get_locale() ) ) );\n\n\t/**\n\t * Filters the login page body classes.\n\t *\n\t * @since 3.5.0\n\t *\n\t * @param string[] $classes An array of body classes.\n\t * @param string   $action  The action that brought the visitor to the login page.\n\t */\n\t$classes = apply_filters( 'login_body_class', $classes, $action );\n\n\t?>\n\t</head>\n\t<body class=\"login no-js <?php echo esc_attr( implode( ' ', $classes ) ); ?>\">\n\t<?php\n\twp_print_inline_script_tag( \"document.body.className = document.body.className.replace('no-js','js');\" );\n\t?>\n\n\t<?php\n\t/**\n\t * Fires in the login page header after the body tag is opened.\n\t *\n\t * @since 4.6.0\n\t */\n\tdo_action( 'login_header' );\n\t?>\n\t<?php\n\tif ( 'confirm_admin_email' !== $action && ! empty( $title ) ) :\n\t\t?>\n\t\t<h1 class=\"screen-reader-text\"><?php echo $title; ?></h1>\n\t\t<?php\n\tendif;\n\t?>\n\t<div id=\"login\">\n\t\t<h1 role=\"presentation\" class=\"wp-login-logo\"><a href=\"<?php echo esc_url( $login_header_url ); ?>\"><?php echo $login_header_text; ?></a></h1>\n\t<?php\n\t/**\n\t * Filters the message to display above the login form.\n\t *\n\t * @since 2.1.0\n\t *\n\t * @param string $message Login message text.\n\t */\n\t$message = apply_filters( 'login_message', $message );\n\n\tif ( ! empty( $message ) ) {\n\t\techo $message . \"\\n\";\n\t}\n\n\t// In case a plugin uses $error rather than the $wp_errors object.\n\tif ( ! empty( $error ) ) {\n\t\t$wp_error->add( 'error', $error );\n\t\tunset( $error );\n\t}\n\n\tif ( $wp_error->has_errors() ) {\n\t\t$error_list = array();\n\t\t$messages   = '';\n\n\t\tforeach ( $wp_error->get_error_codes() as $code ) {\n\t\t\t$severity = $wp_error->get_error_data( $code );\n\t\t\tforeach ( $wp_error->get_error_messages( $code ) as $error_message ) {\n\t\t\t\tif ( 'message' === $severity ) {\n\t\t\t\t\t$messages .= '<p>' . $error_message . '</p>';\n\t\t\t\t} else {\n\t\t\t\t\t$error_list[] = $error_message;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $error_list ) ) {\n\t\t\t$errors = '';\n\n\t\t\tif ( count( $error_list ) > 1 ) {\n\t\t\t\t$errors .= '<ul class=\"login-error-list\">';\n\n\t\t\t\tforeach ( $error_list as $item ) {\n\t\t\t\t\t$errors .= '<li>' . $item . '</li>';\n\t\t\t\t}\n\n\t\t\t\t$errors .= '</ul>';\n\t\t\t} else {\n\t\t\t\t$errors .= '<p>' . $error_list[0] . '</p>';\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Filters the error messages displayed above the login form.\n\t\t\t *\n\t\t\t * @since 2.1.0\n\t\t\t *\n\t\t\t * @param string $errors Login error messages.\n\t\t\t */\n\t\t\t$errors = apply_filters( 'login_errors', $errors );\n\n\t\t\twp_admin_notice(\n\t\t\t\t$errors,\n\t\t\t\tarray(\n\t\t\t\t\t'type'           => 'error',\n\t\t\t\t\t'id'             => 'login_error',\n\t\t\t\t\t'paragraph_wrap' => false,\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tif ( ! empty( $messages ) ) {\n\t\t\t/**\n\t\t\t * Filters instructional messages displayed above the login form.\n\t\t\t *\n\t\t\t * @since 2.5.0\n\t\t\t *\n\t\t\t * @param string $messages Login messages.\n\t\t\t */\n\t\t\t$messages = apply_filters( 'login_messages', $messages );\n\n\t\t\twp_admin_notice(\n\t\t\t\t$messages,\n\t\t\t\tarray(\n\t\t\t\t\t'type'               => 'info',\n\t\t\t\t\t'id'                 => 'login-message',\n\t\t\t\t\t'additional_classes' => array( 'message' ),\n\t\t\t\t\t'paragraph_wrap'     => false,\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n} // End of login_header().\n\n/**\n * Outputs the footer for the login page.\n *\n * @since 3.1.0\n *\n * @global bool|string $interim_login Whether interim login modal is being displayed. String 'success'\n *                                    upon successful login.\n *\n * @param string $input_id Which input to auto-focus.\n */\nfunction login_footer( $input_id = '' ) {\n\tglobal $interim_login;\n\n\t// Don't allow interim logins to navigate away from the page.\n\tif ( ! $interim_login ) {\n\t\t?>\n\t\t<p id=\"backtoblog\">\n\t\t\t<?php\n\t\t\t$html_link = sprintf(\n\t\t\t\t'<a href=\"%s\">%s</a>',\n\t\t\t\tesc_url( home_url( '/' ) ),\n\t\t\t\tsprintf(\n\t\t\t\t\t/* translators: %s: Site title. */\n\t\t\t\t\t_x( '&larr; Go to %s', 'site' ),\n\t\t\t\t\tget_bloginfo( 'title', 'display' )\n\t\t\t\t)\n\t\t\t);\n\t\t\t/**\n\t\t\t * Filters the \"Go to site\" link displayed in the login page footer.\n\t\t\t *\n\t\t\t * @since 5.7.0\n\t\t\t *\n\t\t\t * @param string $link HTML link to the home URL of the current site.\n\t\t\t */\n\t\t\techo apply_filters( 'login_site_html_link', $html_link );\n\t\t\t?>\n\t\t</p>\n\t\t<?php\n\n\t\tthe_privacy_policy_link( '<div class=\"privacy-policy-page-link\">', '</div>' );\n\t}\n\n\t?>\n\t</div><?php // End of <div id=\"login\">. ?>\n\n\t<?php\n\tif (\n\t\t! $interim_login &&\n\t\t/**\n\t\t * Filters whether to display the Language selector on the login screen.\n\t\t *\n\t\t * @since 5.9.0\n\t\t *\n\t\t * @param bool $display Whether to display the Language selector on the login screen.\n\t\t */\n\t\tapply_filters( 'login_display_language_dropdown', true )\n\t) {\n\t\t$languages = get_available_languages();\n\n\t\tif ( ! empty( $languages ) ) {\n\t\t\t?>\n\t\t\t<div class=\"language-switcher\">\n\t\t\t\t<form id=\"language-switcher\" method=\"get\">\n\n\t\t\t\t\t<label for=\"language-switcher-locales\">\n\t\t\t\t\t\t<span class=\"dashicons dashicons-translation\" aria-hidden=\"true\"></span>\n\t\t\t\t\t\t<span class=\"screen-reader-text\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t/* translators: Hidden accessibility text. */\n\t\t\t\t\t\t\t_e( 'Language' );\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</label>\n\n\t\t\t\t\t<?php\n\t\t\t\t\t$args = array(\n\t\t\t\t\t\t'id'                          => 'language-switcher-locales',\n\t\t\t\t\t\t'name'                        => 'wp_lang',\n\t\t\t\t\t\t'selected'                    => determine_locale(),\n\t\t\t\t\t\t'show_available_translations' => false,\n\t\t\t\t\t\t'explicit_option_en_us'       => true,\n\t\t\t\t\t\t'languages'                   => $languages,\n\t\t\t\t\t);\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Filters default arguments for the Languages select input on the login screen.\n\t\t\t\t\t *\n\t\t\t\t\t * The arguments get passed to the wp_dropdown_languages() function.\n\t\t\t\t\t *\n\t\t\t\t\t * @since 5.9.0\n\t\t\t\t\t *\n\t\t\t\t\t * @param array $args Arguments for the Languages select input on the login screen.\n\t\t\t\t\t */\n\t\t\t\t\twp_dropdown_languages( apply_filters( 'login_language_dropdown_args', $args ) );\n\t\t\t\t\t?>\n\n\t\t\t\t\t<?php if ( $interim_login ) { ?>\n\t\t\t\t\t\t<input type=\"hidden\" name=\"interim-login\" value=\"1\" />\n\t\t\t\t\t<?php } ?>\n\n\t\t\t\t\t<?php if ( isset( $_GET['redirect_to'] ) && '' !== $_GET['redirect_to'] ) { ?>\n\t\t\t\t\t\t<input type=\"hidden\" name=\"redirect_to\" value=\"<?php echo sanitize_url( $_GET['redirect_to'] ); ?>\" />\n\t\t\t\t\t<?php } ?>\n\n\t\t\t\t\t<?php if ( isset( $_GET['action'] ) && '' !== $_GET['action'] ) { ?>\n\t\t\t\t\t\t<input type=\"hidden\" name=\"action\" value=\"<?php echo esc_attr( $_GET['action'] ); ?>\" />\n\t\t\t\t\t<?php } ?>\n\n\t\t\t\t\t\t<input type=\"submit\" class=\"button\" value=\"<?php esc_attr_e( 'Change' ); ?>\">\n\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t<?php } ?>\n\t<?php } ?>\n\n\t<?php\n\n\tif ( ! empty( $input_id ) ) {\n\t\tob_start();\n\t\t?>\n\t\t<script>\n\t\ttry{document.getElementById('<?php echo $input_id; ?>').focus();}catch(e){}\n\t\tif(typeof wpOnload==='function')wpOnload();\n\t\t</script>\n\t\t<?php\n\t\twp_print_inline_script_tag( wp_remove_surrounding_empty_script_tags( ob_get_clean() ) );\n\t}\n\n\t/**\n\t * Fires in the login page footer.\n\t *\n\t * @since 3.1.0\n\t */\n\tdo_action( 'login_footer' );\n\n\t?>\n\t</body>\n\t</html>\n\t<?php\n}\n\n/**\n * Outputs the JavaScript to handle the form shaking on the login page.\n *\n * @since 3.0.0\n */\nfunction wp_shake_js() {\n\twp_print_inline_script_tag( \"document.querySelector('form').classList.add('shake');\" );\n}\n\n/**\n * Outputs the viewport meta tag for the login page.\n *\n * @since 3.7.0\n */\nfunction wp_login_viewport_meta() {\n\t?>\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t<?php\n}\n\n/*\n * Main part.\n *\n * Check the request and redirect or display a form based on the current action.\n */\n\n$action = isset( $_REQUEST['action'] ) ? $_REQUEST['action'] : 'login';\n$errors = new WP_Error();\n\nif ( isset( $_GET['key'] ) ) {\n\t$action = 'resetpass';\n}\n\nif ( isset( $_GET['checkemail'] ) ) {\n\t$action = 'checkemail';\n}\n\n$default_actions = array(\n\t'confirm_admin_email',\n\t'postpass',\n\t'logout',\n\t'lostpassword',\n\t'retrievepassword',\n\t'resetpass',\n\t'rp',\n\t'register',\n\t'checkemail',\n\t'confirmaction',\n\t'login',\n\tWP_Recovery_Mode_Link_Service::LOGIN_ACTION_ENTERED,\n);\n\n// Validate action so as to default to the login screen.\nif ( ! in_array( $action, $default_actions, true ) && false === has_filter( 'login_form_' . $action ) ) {\n\t$action = 'login';\n}\n\nnocache_headers();\n\nheader( 'Content-Type: ' . get_bloginfo( 'html_type' ) . '; charset=' . get_bloginfo( 'charset' ) );\n\nif ( defined( 'RELOCATE' ) && RELOCATE ) { // Move flag is set.\n\tif ( isset( $_SERVER['PATH_INFO'] ) && ( $_SERVER['PATH_INFO'] !== $_SERVER['PHP_SELF'] ) ) {\n\t\t$_SERVER['PHP_SELF'] = str_replace( $_SERVER['PATH_INFO'], '', $_SERVER['PHP_SELF'] );\n\t}\n\n\t$url = dirname( set_url_scheme( 'http://' . $_SERVER['HTTP_HOST'] . $_SERVER['PHP_SELF'] ) );\n\n\tif ( get_option( 'siteurl' ) !== $url ) {\n\t\tupdate_option( 'siteurl', $url );\n\t}\n}\n\n// Set a cookie now to see if they are supported by the browser.\n$secure = ( 'https' === parse_url( wp_login_url(), PHP_URL_SCHEME ) );\nsetcookie( TEST_COOKIE, 'WP Cookie check', 0, COOKIEPATH, COOKIE_DOMAIN, $secure );\n\nif ( SITECOOKIEPATH !== COOKIEPATH ) {\n\tsetcookie( TEST_COOKIE, 'WP Cookie check', 0, SITECOOKIEPATH, COOKIE_DOMAIN, $secure );\n}\n\nif ( isset( $_GET['wp_lang'] ) ) {\n\tsetcookie( 'wp_lang', sanitize_text_field( $_GET['wp_lang'] ), 0, COOKIEPATH, COOKIE_DOMAIN, $secure );\n}\n\n/**\n * Fires when the login form is initialized.\n *\n * @since 3.2.0\n */\ndo_action( 'login_init' );\n\n/**\n * Fires before a specified login form action.\n *\n * The dynamic portion of the hook name, `$action`, refers to the action\n * that brought the visitor to the login form.\n *\n * Possible hook names include:\n *\n *  - `login_form_checkemail`\n *  - `login_form_confirm_admin_email`\n *  - `login_form_confirmaction`\n *  - `login_form_entered_recovery_mode`\n *  - `login_form_login`\n *  - `login_form_logout`\n *  - `login_form_lostpassword`\n *  - `login_form_postpass`\n *  - `login_form_register`\n *  - `login_form_resetpass`\n *  - `login_form_retrievepassword`\n *  - `login_form_rp`\n *\n * @since 2.8.0\n */\ndo_action( \"login_form_{$action}\" );\n\n$http_post     = ( 'POST' === $_SERVER['REQUEST_METHOD'] );\n$interim_login = isset( $_REQUEST['interim-login'] );\n\n/**\n * Filters the separator used between login form navigation links.\n *\n * @since 4.9.0\n *\n * @param string $login_link_separator The separator used between login form navigation links.\n */\n$login_link_separator = apply_filters( 'login_link_separator', ' | ' );\n\nswitch ( $action ) {\n\n\tcase 'confirm_admin_email':\n\t\t/*\n\t\t * Note that `is_user_logged_in()` will return false immediately after logging in\n\t\t * as the current user is not set, see wp-includes/pluggable.php.\n\t\t * However this action runs on a redirect after logging in.\n\t\t */\n\t\tif ( ! is_user_logged_in() ) {\n\t\t\twp_safe_redirect( wp_login_url() );\n\t\t\texit;\n\t\t}\n\n\t\tif ( ! empty( $_REQUEST['redirect_to'] ) ) {\n\t\t\t$redirect_to = $_REQUEST['redirect_to'];\n\t\t} else {\n\t\t\t$redirect_to = admin_url();\n\t\t}\n\n\t\tif ( current_user_can( 'manage_options' ) ) {\n\t\t\t$admin_email = get_option( 'admin_email' );\n\t\t} else {\n\t\t\twp_safe_redirect( $redirect_to );\n\t\t\texit;\n\t\t}\n\n\t\t/**\n\t\t * Filters the interval for dismissing the admin email confirmation screen.\n\t\t *\n\t\t * If `0` (zero) is returned, the \"Remind me later\" link will not be displayed.\n\t\t *\n\t\t * @since 5.3.1\n\t\t *\n\t\t * @param int $interval Interval time (in seconds). Default is 3 days.\n\t\t */\n\t\t$remind_interval = (int) apply_filters( 'admin_email_remind_interval', 3 * DAY_IN_SECONDS );\n\n\t\tif ( ! empty( $_GET['remind_me_later'] ) ) {\n\t\t\tif ( ! wp_verify_nonce( $_GET['remind_me_later'], 'remind_me_later_nonce' ) ) {\n\t\t\t\twp_safe_redirect( wp_login_url() );\n\t\t\t\texit;\n\t\t\t}\n\n\t\t\tif ( $remind_interval > 0 ) {\n\t\t\t\tupdate_option( 'admin_email_lifespan', time() + $remind_interval );\n\t\t\t}\n\n\t\t\t$redirect_to = add_query_arg( 'admin_email_remind_later', 1, $redirect_to );\n\t\t\twp_safe_redirect( $redirect_to );\n\t\t\texit;\n\t\t}\n\n\t\tif ( ! empty( $_POST['correct-admin-email'] ) ) {\n\t\t\tif ( ! check_admin_referer( 'confirm_admin_email', 'confirm_admin_email_nonce' ) ) {\n\t\t\t\twp_safe_redirect( wp_login_url() );\n\t\t\t\texit;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Filters the interval for redirecting the user to the admin email confirmation screen.\n\t\t\t *\n\t\t\t * If `0` (zero) is returned, the user will not be redirected.\n\t\t\t *\n\t\t\t * @since 5.3.0\n\t\t\t *\n\t\t\t * @param int $interval Interval time (in seconds). Default is 6 months.\n\t\t\t */\n\t\t\t$admin_email_check_interval = (int) apply_filters( 'admin_email_check_interval', 6 * MONTH_IN_SECONDS );\n\n\t\t\tif ( $admin_email_check_interval > 0 ) {\n\t\t\t\tupdate_option( 'admin_email_lifespan', time() + $admin_email_check_interval );\n\t\t\t}\n\n\t\t\twp_safe_redirect( $redirect_to );\n\t\t\texit;\n\t\t}\n\n\t\tlogin_header( __( 'Confirm your administration email' ), '', $errors );\n\n\t\t/**\n\t\t * Fires before the admin email confirm form.\n\t\t *\n\t\t * @since 5.3.0\n\t\t *\n\t\t * @param WP_Error $errors A `WP_Error` object containing any errors generated by using invalid\n\t\t *                         credentials. Note that the error object may not contain any errors.\n\t\t */\n\t\tdo_action( 'admin_email_confirm', $errors );\n\n\t\t?>\n\n\t\t<form class=\"admin-email-confirm-form\" name=\"admin-email-confirm-form\" action=\"<?php echo esc_url( site_url( 'wp-login.php?action=confirm_admin_email', 'login_post' ) ); ?>\" method=\"post\">\n\t\t\t<?php\n\t\t\t/**\n\t\t\t * Fires inside the admin-email-confirm-form form tags, before the hidden fields.\n\t\t\t *\n\t\t\t * @since 5.3.0\n\t\t\t */\n\t\t\tdo_action( 'admin_email_confirm_form' );\n\n\t\t\twp_nonce_field( 'confirm_admin_email', 'confirm_admin_email_nonce' );\n\n\t\t\t?>\n\t\t\t<input type=\"hidden\" name=\"redirect_to\" value=\"<?php echo esc_attr( $redirect_to ); ?>\" />\n\n\t\t\t<h1 class=\"admin-email__heading\">\n\t\t\t\t<?php _e( 'Administration email verification' ); ?>\n\t\t\t</h1>\n\t\t\t<p class=\"admin-email__details\">\n\t\t\t\t<?php _e( 'Please verify that the <strong>administration email</strong> for this website is still correct.' ); ?>\n\t\t\t\t<?php\n\n\t\t\t\t/* translators: URL to the WordPress help section about admin email. */\n\t\t\t\t$admin_email_help_url = __( 'https://wordpress.org/documentation/article/settings-general-screen/#email-address' );\n\n\t\t\t\t$accessibility_text = sprintf(\n\t\t\t\t\t'<span class=\"screen-reader-text\"> %s</span>',\n\t\t\t\t\t/* translators: Hidden accessibility text. */\n\t\t\t\t\t__( '(opens in a new tab)' )\n\t\t\t\t);\n\n\t\t\t\tprintf(\n\t\t\t\t\t'<a href=\"%s\" target=\"_blank\">%s%s</a>',\n\t\t\t\t\tesc_url( $admin_email_help_url ),\n\t\t\t\t\t__( 'Why is this important?' ),\n\t\t\t\t\t$accessibility_text\n\t\t\t\t);\n\n\t\t\t\t?>\n\t\t\t</p>\n\t\t\t<p class=\"admin-email__details\">\n\t\t\t\t<?php\n\n\t\t\t\tprintf(\n\t\t\t\t\t/* translators: %s: Admin email address. */\n\t\t\t\t\t__( 'Current administration email: %s' ),\n\t\t\t\t\t'<strong>' . esc_html( $admin_email ) . '</strong>'\n\t\t\t\t);\n\n\t\t\t\t?>\n\t\t\t</p>\n\t\t\t<p class=\"admin-email__details\">\n\t\t\t\t<?php _e( 'This email may be different from your personal email address.' ); ?>\n\t\t\t</p>\n\n\t\t\t<div class=\"admin-email__actions\">\n\t\t\t\t<div class=\"admin-email__actions-primary\">\n\t\t\t\t\t<?php\n\n\t\t\t\t\t$change_link = admin_url( 'options-general.php' );\n\t\t\t\t\t$change_link = add_query_arg( 'highlight', 'confirm_admin_email', $change_link );\n\n\t\t\t\t\t?>\n\t\t\t\t\t<a class=\"button button-large\" href=\"<?php echo esc_url( $change_link ); ?>\"><?php _e( 'Update' ); ?></a>\n\t\t\t\t\t<input type=\"submit\" name=\"correct-admin-email\" id=\"correct-admin-email\" class=\"button button-primary button-large\" value=\"<?php esc_attr_e( 'The email is correct' ); ?>\" />\n\t\t\t\t</div>\n\t\t\t\t<?php if ( $remind_interval > 0 ) : ?>\n\t\t\t\t\t<div class=\"admin-email__actions-secondary\">\n\t\t\t\t\t\t<?php\n\n\t\t\t\t\t\t$remind_me_link = wp_login_url( $redirect_to );\n\t\t\t\t\t\t$remind_me_link = add_query_arg(\n\t\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t\t'action'          => 'confirm_admin_email',\n\t\t\t\t\t\t\t\t'remind_me_later' => wp_create_nonce( 'remind_me_later_nonce' ),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t$remind_me_link\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<a href=\"<?php echo esc_url( $remind_me_link ); ?>\"><?php _e( 'Remind me later' ); ?></a>\n\t\t\t\t\t</div>\n\t\t\t\t<?php endif; ?>\n\t\t\t</div>\n\t\t</form>\n\n\t\t<?php\n\n\t\tlogin_footer();\n\t\tbreak;\n\n\tcase 'postpass':\n\t\tif ( ! isset( $_POST['post_password'] ) || ! is_string( $_POST['post_password'] ) ) {\n\t\t\twp_safe_redirect( wp_get_referer() );\n\t\t\texit;\n\t\t}\n\n\t\trequire_once ABSPATH . WPINC . '/class-phpass.php';\n\t\t$hasher = new PasswordHash( 8, true );\n\n\t\t/**\n\t\t * Filters the life span of the post password cookie.\n\t\t *\n\t\t * By default, the cookie expires 10 days from creation. To turn this\n\t\t * into a session cookie, return 0.\n\t\t *\n\t\t * @since 3.7.0\n\t\t *\n\t\t * @param int $expires The expiry time, as passed to setcookie().\n\t\t */\n\t\t$expire  = apply_filters( 'post_password_expires', time() + 10 * DAY_IN_SECONDS );\n\t\t$referer = wp_get_referer();\n\n\t\tif ( $referer ) {\n\t\t\t$secure = ( 'https' === parse_url( $referer, PHP_URL_SCHEME ) );\n\t\t} else {\n\t\t\t$secure = false;\n\t\t}\n\n\t\tsetcookie( 'wp-postpass_' . COOKIEHASH, $hasher->HashPassword( wp_unslash( $_POST['post_password'] ) ), $expire, COOKIEPATH, COOKIE_DOMAIN, $secure );\n\n\t\twp_safe_redirect( wp_get_referer() );\n\t\texit;\n\n\tcase 'logout':\n\t\tcheck_admin_referer( 'log-out' );\n\n\t\t$user = wp_get_current_user();\n\n\t\twp_logout();\n\n\t\tif ( ! empty( $_REQUEST['redirect_to'] ) && is_string( $_REQUEST['redirect_to'] ) ) {\n\t\t\t$redirect_to           = $_REQUEST['redirect_to'];\n\t\t\t$requested_redirect_to = $redirect_to;\n\t\t} else {\n\t\t\t$redirect_to = add_query_arg(\n\t\t\t\tarray(\n\t\t\t\t\t'loggedout' => 'true',\n\t\t\t\t\t'wp_lang'   => get_user_locale( $user ),\n\t\t\t\t),\n\t\t\t\twp_login_url()\n\t\t\t);\n\n\t\t\t$requested_redirect_to = '';\n\t\t}\n\n\t\t/**\n\t\t * Filters the log out redirect URL.\n\t\t *\n\t\t * @since 4.2.0\n\t\t *\n\t\t * @param string  $redirect_to           The redirect destination URL.\n\t\t * @param string  $requested_redirect_to The requested redirect destination URL passed as a parameter.\n\t\t * @param WP_User $user                  The WP_User object for the user that's logging out.\n\t\t */\n\t\t$redirect_to = apply_filters( 'logout_redirect', $redirect_to, $requested_redirect_to, $user );\n\n\t\twp_safe_redirect( $redirect_to );\n\t\texit;\n\n\tcase 'lostpassword':\n\tcase 'retrievepassword':\n\t\tif ( $http_post ) {\n\t\t\t$errors = retrieve_password();\n\n\t\t\tif ( ! is_wp_error( $errors ) ) {\n\t\t\t\t$redirect_to = ! empty( $_REQUEST['redirect_to'] ) ? $_REQUEST['redirect_to'] : 'wp-login.php?checkemail=confirm';\n\t\t\t\twp_safe_redirect( $redirect_to );\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $_GET['error'] ) ) {\n\t\t\tif ( 'invalidkey' === $_GET['error'] ) {\n\t\t\t\t$errors->add( 'invalidkey', __( '<strong>Error:</strong> Your password reset link appears to be invalid. Please request a new link below.' ) );\n\t\t\t} elseif ( 'expiredkey' === $_GET['error'] ) {\n\t\t\t\t$errors->add( 'expiredkey', __( '<strong>Error:</strong> Your password reset link has expired. Please request a new link below.' ) );\n\t\t\t}\n\t\t}\n\n\t\t$lostpassword_redirect = ! empty( $_REQUEST['redirect_to'] ) ? $_REQUEST['redirect_to'] : '';\n\t\t/**\n\t\t * Filters the URL redirected to after submitting the lostpassword/retrievepassword form.\n\t\t *\n\t\t * @since 3.0.0\n\t\t *\n\t\t * @param string $lostpassword_redirect The redirect destination URL.\n\t\t */\n\t\t$redirect_to = apply_filters( 'lostpassword_redirect', $lostpassword_redirect );\n\n\t\t/**\n\t\t * Fires before the lost password form.\n\t\t *\n\t\t * @since 1.5.1\n\t\t * @since 5.1.0 Added the `$errors` parameter.\n\t\t *\n\t\t * @param WP_Error $errors A `WP_Error` object containing any errors generated by using invalid\n\t\t *                         credentials. Note that the error object may not contain any errors.\n\t\t */\n\t\tdo_action( 'lost_password', $errors );\n\n\t\tlogin_header(\n\t\t\t__( 'Lost Password' ),\n\t\t\twp_get_admin_notice(\n\t\t\t\t__( 'Please enter your username or email address. You will receive an email message with instructions on how to reset your password.' ),\n\t\t\t\tarray(\n\t\t\t\t\t'type'               => 'info',\n\t\t\t\t\t'additional_classes' => array( 'message' ),\n\t\t\t\t)\n\t\t\t),\n\t\t\t$errors\n\t\t);\n\n\t\t$user_login = '';\n\n\t\tif ( isset( $_POST['user_login'] ) && is_string( $_POST['user_login'] ) ) {\n\t\t\t$user_login = wp_unslash( $_POST['user_login'] );\n\t\t}\n\n\t\t?>\n\n\t\t<form name=\"lostpasswordform\" id=\"lostpasswordform\" action=\"<?php echo esc_url( network_site_url( 'wp-login.php?action=lostpassword', 'login_post' ) ); ?>\" method=\"post\">\n\t\t\t<p>\n\t\t\t\t<label for=\"user_login\"><?php _e( 'Username or Email Address' ); ?></label>\n\t\t\t\t<input type=\"text\" name=\"user_login\" id=\"user_login\" class=\"input\" value=\"<?php echo esc_attr( $user_login ); ?>\" size=\"20\" autocapitalize=\"off\" autocomplete=\"username\" required=\"required\" />\n\t\t\t</p>\n\t\t\t<?php\n\n\t\t\t/**\n\t\t\t * Fires inside the lostpassword form tags, before the hidden fields.\n\t\t\t *\n\t\t\t * @since 2.1.0\n\t\t\t */\n\t\t\tdo_action( 'lostpassword_form' );\n\n\t\t\t?>\n\t\t\t<input type=\"hidden\" name=\"redirect_to\" value=\"<?php echo esc_attr( $redirect_to ); ?>\" />\n\t\t\t<p class=\"submit\">\n\t\t\t\t<input type=\"submit\" name=\"wp-submit\" id=\"wp-submit\" class=\"button button-primary button-large\" value=\"<?php esc_attr_e( 'Get New Password' ); ?>\" />\n\t\t\t</p>\n\t\t</form>\n\n\t\t<p id=\"nav\">\n\t\t\t<a class=\"wp-login-log-in\" href=\"<?php echo esc_url( wp_login_url() ); ?>\"><?php _e( 'Log in' ); ?></a>\n\t\t\t<?php\n\n\t\t\tif ( get_option( 'users_can_register' ) ) {\n\t\t\t\t$registration_url = sprintf( '<a class=\"wp-login-register\" href=\"%s\">%s</a>', esc_url( wp_registration_url() ), __( 'Register' ) );\n\n\t\t\t\techo esc_html( $login_link_separator );\n\n\t\t\t\t/** This filter is documented in wp-includes/general-template.php */\n\t\t\t\techo apply_filters( 'register', $registration_url );\n\t\t\t}\n\n\t\t\t?>\n\t\t</p>\n\t\t<?php\n\n\t\tlogin_footer( 'user_login' );\n\t\tbreak;\n\n\tcase 'resetpass':\n\tcase 'rp':\n\t\tlist( $rp_path ) = explode( '?', wp_unslash( $_SERVER['REQUEST_URI'] ) );\n\t\t$rp_cookie       = 'wp-resetpass-' . COOKIEHASH;\n\n\t\tif ( isset( $_GET['key'] ) && isset( $_GET['login'] ) ) {\n\t\t\t$value = sprintf( '%s:%s', wp_unslash( $_GET['login'] ), wp_unslash( $_GET['key'] ) );\n\t\t\tsetcookie( $rp_cookie, $value, 0, $rp_path, COOKIE_DOMAIN, is_ssl(), true );\n\n\t\t\twp_safe_redirect( remove_query_arg( array( 'key', 'login' ) ) );\n\t\t\texit;\n\t\t}\n\n\t\tif ( isset( $_COOKIE[ $rp_cookie ] ) && 0 < strpos( $_COOKIE[ $rp_cookie ], ':' ) ) {\n\t\t\tlist( $rp_login, $rp_key ) = explode( ':', wp_unslash( $_COOKIE[ $rp_cookie ] ), 2 );\n\n\t\t\t$user = check_password_reset_key( $rp_key, $rp_login );\n\n\t\t\tif ( isset( $_POST['pass1'] ) && ! hash_equals( $rp_key, $_POST['rp_key'] ) ) {\n\t\t\t\t$user = false;\n\t\t\t}\n\t\t} else {\n\t\t\t$user = false;\n\t\t}\n\n\t\tif ( ! $user || is_wp_error( $user ) ) {\n\t\t\tsetcookie( $rp_cookie, ' ', time() - YEAR_IN_SECONDS, $rp_path, COOKIE_DOMAIN, is_ssl(), true );\n\n\t\t\tif ( $user && $user->get_error_code() === 'expired_key' ) {\n\t\t\t\twp_redirect( site_url( 'wp-login.php?action=lostpassword&error=expiredkey' ) );\n\t\t\t} else {\n\t\t\t\twp_redirect( site_url( 'wp-login.php?action=lostpassword&error=invalidkey' ) );\n\t\t\t}\n\n\t\t\texit;\n\t\t}\n\n\t\t$errors = new WP_Error();\n\n\t\t// Check if password is one or all empty spaces.\n\t\tif ( ! empty( $_POST['pass1'] ) ) {\n\t\t\t$_POST['pass1'] = trim( $_POST['pass1'] );\n\n\t\t\tif ( empty( $_POST['pass1'] ) ) {\n\t\t\t\t$errors->add( 'password_reset_empty_space', __( 'The password cannot be a space or all spaces.' ) );\n\t\t\t}\n\t\t}\n\n\t\t// Check if password fields do not match.\n\t\tif ( ! empty( $_POST['pass1'] ) && trim( $_POST['pass2'] ) !== $_POST['pass1'] ) {\n\t\t\t$errors->add( 'password_reset_mismatch', __( '<strong>Error:</strong> The passwords do not match.' ) );\n\t\t}\n\n\t\t/**\n\t\t * Fires before the password reset procedure is validated.\n\t\t *\n\t\t * @since 3.5.0\n\t\t *\n\t\t * @param WP_Error         $errors WP Error object.\n\t\t * @param WP_User|WP_Error $user   WP_User object if the login and reset key match. WP_Error object otherwise.\n\t\t */\n\t\tdo_action( 'validate_password_reset', $errors, $user );\n\n\t\tif ( ( ! $errors->has_errors() ) && isset( $_POST['pass1'] ) && ! empty( $_POST['pass1'] ) ) {\n\t\t\treset_password( $user, $_POST['pass1'] );\n\t\t\tsetcookie( $rp_cookie, ' ', time() - YEAR_IN_SECONDS, $rp_path, COOKIE_DOMAIN, is_ssl(), true );\n\t\t\tlogin_header(\n\t\t\t\t__( 'Password Reset' ),\n\t\t\t\twp_get_admin_notice(\n\t\t\t\t\t__( 'Your password has been reset.' ) . ' <a href=\"' . esc_url( wp_login_url() ) . '\">' . __( 'Log in' ) . '</a>',\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'type'               => 'info',\n\t\t\t\t\t\t'additional_classes' => array( 'message', 'reset-pass' ),\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t\tlogin_footer();\n\t\t\texit;\n\t\t}\n\n\t\twp_enqueue_script( 'utils' );\n\t\twp_enqueue_script( 'user-profile' );\n\n\t\tlogin_header(\n\t\t\t__( 'Reset Password' ),\n\t\t\twp_get_admin_notice(\n\t\t\t\t__( 'Enter your new password below or generate one.' ),\n\t\t\t\tarray(\n\t\t\t\t\t'type'               => 'info',\n\t\t\t\t\t'additional_classes' => array( 'message', 'reset-pass' ),\n\t\t\t\t)\n\t\t\t),\n\t\t\t$errors\n\t\t);\n\n\t\t?>\n\t\t<form name=\"resetpassform\" id=\"resetpassform\" action=\"<?php echo esc_url( network_site_url( 'wp-login.php?action=resetpass', 'login_post' ) ); ?>\" method=\"post\" autocomplete=\"off\">\n\t\t\t<input type=\"hidden\" id=\"user_login\" value=\"<?php echo esc_attr( $rp_login ); ?>\" autocomplete=\"off\" />\n\n\t\t\t<div class=\"user-pass1-wrap\">\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"pass1\"><?php _e( 'New password' ); ?></label>\n\t\t\t\t</p>\n\n\t\t\t\t<div class=\"wp-pwd\">\n\t\t\t\t\t<input type=\"password\" name=\"pass1\" id=\"pass1\" class=\"input password-input\" size=\"24\" value=\"\" autocomplete=\"new-password\" spellcheck=\"false\" data-reveal=\"1\" data-pw=\"<?php echo esc_attr( wp_generate_password( 16 ) ); ?>\" aria-describedby=\"pass-strength-result\" />\n\n\t\t\t\t\t<button type=\"button\" class=\"button button-secondary wp-hide-pw hide-if-no-js\" data-toggle=\"0\" aria-label=\"<?php esc_attr_e( 'Hide password' ); ?>\">\n\t\t\t\t\t\t<span class=\"dashicons dashicons-hidden\" aria-hidden=\"true\"></span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<div id=\"pass-strength-result\" class=\"hide-if-no-js\" aria-live=\"polite\"><?php _e( 'Strength indicator' ); ?></div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"pw-weak\">\n\t\t\t\t\t<input type=\"checkbox\" name=\"pw_weak\" id=\"pw-weak\" class=\"pw-checkbox\" />\n\t\t\t\t\t<label for=\"pw-weak\"><?php _e( 'Confirm use of weak password' ); ?></label>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<p class=\"user-pass2-wrap\">\n\t\t\t\t<label for=\"pass2\"><?php _e( 'Confirm new password' ); ?></label>\n\t\t\t\t<input type=\"password\" name=\"pass2\" id=\"pass2\" class=\"input\" size=\"20\" value=\"\" autocomplete=\"new-password\" spellcheck=\"false\" />\n\t\t\t</p>\n\n\t\t\t<p class=\"description indicator-hint\"><?php echo wp_get_password_hint(); ?></p>\n\n\t\t\t<?php\n\n\t\t\t/**\n\t\t\t * Fires following the 'Strength indicator' meter in the user password reset form.\n\t\t\t *\n\t\t\t * @since 3.9.0\n\t\t\t *\n\t\t\t * @param WP_User $user User object of the user whose password is being reset.\n\t\t\t */\n\t\t\tdo_action( 'resetpass_form', $user );\n\n\t\t\t?>\n\t\t\t<input type=\"hidden\" name=\"rp_key\" value=\"<?php echo esc_attr( $rp_key ); ?>\" />\n\t\t\t<p class=\"submit reset-pass-submit\">\n\t\t\t\t<button type=\"button\" class=\"button wp-generate-pw hide-if-no-js skip-aria-expanded\"><?php _e( 'Generate Password' ); ?></button>\n\t\t\t\t<input type=\"submit\" name=\"wp-submit\" id=\"wp-submit\" class=\"button button-primary button-large\" value=\"<?php esc_attr_e( 'Save Password' ); ?>\" />\n\t\t\t</p>\n\t\t</form>\n\n\t\t<p id=\"nav\">\n\t\t\t<a class=\"wp-login-log-in\" href=\"<?php echo esc_url( wp_login_url() ); ?>\"><?php _e( 'Log in' ); ?></a>\n\t\t\t<?php\n\n\t\t\tif ( get_option( 'users_can_register' ) ) {\n\t\t\t\t$registration_url = sprintf( '<a class=\"wp-login-register\" href=\"%s\">%s</a>', esc_url( wp_registration_url() ), __( 'Register' ) );\n\n\t\t\t\techo esc_html( $login_link_separator );\n\n\t\t\t\t/** This filter is documented in wp-includes/general-template.php */\n\t\t\t\techo apply_filters( 'register', $registration_url );\n\t\t\t}\n\n\t\t\t?>\n\t\t</p>\n\t\t<?php\n\n\t\tlogin_footer( 'pass1' );\n\t\tbreak;\n\n\tcase 'register':\n\t\tif ( is_multisite() ) {\n\t\t\t/**\n\t\t\t * Filters the Multisite sign up URL.\n\t\t\t *\n\t\t\t * @since 3.0.0\n\t\t\t *\n\t\t\t * @param string $sign_up_url The sign up URL.\n\t\t\t */\n\t\t\twp_redirect( apply_filters( 'wp_signup_location', network_site_url( 'wp-signup.php' ) ) );\n\t\t\texit;\n\t\t}\n\n\t\tif ( ! get_option( 'users_can_register' ) ) {\n\t\t\twp_redirect( site_url( 'wp-login.php?registration=disabled' ) );\n\t\t\texit;\n\t\t}\n\n\t\t$user_login = '';\n\t\t$user_email = '';\n\n\t\tif ( $http_post ) {\n\t\t\tif ( isset( $_POST['user_login'] ) && is_string( $_POST['user_login'] ) ) {\n\t\t\t\t$user_login = wp_unslash( $_POST['user_login'] );\n\t\t\t}\n\n\t\t\tif ( isset( $_POST['user_email'] ) && is_string( $_POST['user_email'] ) ) {\n\t\t\t\t$user_email = wp_unslash( $_POST['user_email'] );\n\t\t\t}\n\n\t\t\t$errors = register_new_user( $user_login, $user_email );\n\n\t\t\tif ( ! is_wp_error( $errors ) ) {\n\t\t\t\t$redirect_to = ! empty( $_POST['redirect_to'] ) ? $_POST['redirect_to'] : 'wp-login.php?checkemail=registered';\n\t\t\t\twp_safe_redirect( $redirect_to );\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\t$registration_redirect = ! empty( $_REQUEST['redirect_to'] ) ? $_REQUEST['redirect_to'] : '';\n\n\t\t/**\n\t\t * Filters the registration redirect URL.\n\t\t *\n\t\t * @since 3.0.0\n\t\t * @since 5.9.0 Added the `$errors` parameter.\n\t\t *\n\t\t * @param string       $registration_redirect The redirect destination URL.\n\t\t * @param int|WP_Error $errors                User id if registration was successful,\n\t\t *                                            WP_Error object otherwise.\n\t\t */\n\t\t$redirect_to = apply_filters( 'registration_redirect', $registration_redirect, $errors );\n\n\t\tlogin_header(\n\t\t\t__( 'Registration Form' ),\n\t\t\twp_get_admin_notice(\n\t\t\t\t__( 'Register For This Site' ),\n\t\t\t\tarray(\n\t\t\t\t\t'type'               => 'info',\n\t\t\t\t\t'additional_classes' => array( 'message', 'register' ),\n\t\t\t\t)\n\t\t\t),\n\t\t\t$errors\n\t\t);\n\n\t\t?>\n\t\t<form name=\"registerform\" id=\"registerform\" action=\"<?php echo esc_url( site_url( 'wp-login.php?action=register', 'login_post' ) ); ?>\" method=\"post\" novalidate=\"novalidate\">\n\t\t\t<p>\n\t\t\t\t<label for=\"user_login\"><?php _e( 'Username' ); ?></label>\n\t\t\t\t<input type=\"text\" name=\"user_login\" id=\"user_login\" class=\"input\" value=\"<?php echo esc_attr( $user_login ); ?>\" size=\"20\" autocapitalize=\"off\" autocomplete=\"username\" required=\"required\" />\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<label for=\"user_email\"><?php _e( 'Email' ); ?></label>\n\t\t\t\t<input type=\"email\" name=\"user_email\" id=\"user_email\" class=\"input\" value=\"<?php echo esc_attr( $user_email ); ?>\" size=\"25\" autocomplete=\"email\" required=\"required\" />\n\t\t\t</p>\n\t\t\t<?php\n\n\t\t\t/**\n\t\t\t * Fires following the 'Email' field in the user registration form.\n\t\t\t *\n\t\t\t * @since 2.1.0\n\t\t\t */\n\t\t\tdo_action( 'register_form' );\n\n\t\t\t?>\n\t\t\t<p id=\"reg_passmail\">\n\t\t\t\t<?php _e( 'Registration confirmation will be emailed to you.' ); ?>\n\t\t\t</p>\n\t\t\t<input type=\"hidden\" name=\"redirect_to\" value=\"<?php echo esc_attr( $redirect_to ); ?>\" />\n\t\t\t<p class=\"submit\">\n\t\t\t\t<input type=\"submit\" name=\"wp-submit\" id=\"wp-submit\" class=\"button button-primary button-large\" value=\"<?php esc_attr_e( 'Register' ); ?>\" />\n\t\t\t</p>\n\t\t</form>\n\n\t\t<p id=\"nav\">\n\t\t\t<a class=\"wp-login-log-in\" href=\"<?php echo esc_url( wp_login_url() ); ?>\"><?php _e( 'Log in' ); ?></a>\n\t\t\t<?php\n\n\t\t\techo esc_html( $login_link_separator );\n\n\t\t\t$html_link = sprintf( '<a class=\"wp-login-lost-password\" href=\"%s\">%s</a>', esc_url( wp_lostpassword_url() ), __( 'Lost your password?' ) );\n\n\t\t\t/** This filter is documented in wp-login.php */\n\t\t\techo apply_filters( 'lost_password_html_link', $html_link );\n\n\t\t\t?>\n\t\t</p>\n\t\t<?php\n\n\t\tlogin_footer( 'user_login' );\n\t\tbreak;\n\n\tcase 'checkemail':\n\t\t$redirect_to = admin_url();\n\t\t$errors      = new WP_Error();\n\n\t\tif ( 'confirm' === $_GET['checkemail'] ) {\n\t\t\t$errors->add(\n\t\t\t\t'confirm',\n\t\t\t\tsprintf(\n\t\t\t\t\t/* translators: %s: Link to the login page. */\n\t\t\t\t\t__( 'Check your email for the confirmation link, then visit the <a href=\"%s\">login page</a>.' ),\n\t\t\t\t\twp_login_url()\n\t\t\t\t),\n\t\t\t\t'message'\n\t\t\t);\n\t\t} elseif ( 'registered' === $_GET['checkemail'] ) {\n\t\t\t$errors->add(\n\t\t\t\t'registered',\n\t\t\t\tsprintf(\n\t\t\t\t\t/* translators: %s: Link to the login page. */\n\t\t\t\t\t__( 'Registration complete. Please check your email, then visit the <a href=\"%s\">login page</a>.' ),\n\t\t\t\t\twp_login_url()\n\t\t\t\t),\n\t\t\t\t'message'\n\t\t\t);\n\t\t}\n\n\t\t/** This action is documented in wp-login.php */\n\t\t$errors = apply_filters( 'wp_login_errors', $errors, $redirect_to );\n\n\t\tlogin_header( __( 'Check your email' ), '', $errors );\n\t\tlogin_footer();\n\t\tbreak;\n\n\tcase 'confirmaction':\n\t\tif ( ! isset( $_GET['request_id'] ) ) {\n\t\t\twp_die( __( 'Missing request ID.' ) );\n\t\t}\n\n\t\tif ( ! isset( $_GET['confirm_key'] ) ) {\n\t\t\twp_die( __( 'Missing confirm key.' ) );\n\t\t}\n\n\t\t$request_id = (int) $_GET['request_id'];\n\t\t$key        = sanitize_text_field( wp_unslash( $_GET['confirm_key'] ) );\n\t\t$result     = wp_validate_user_request_key( $request_id, $key );\n\n\t\tif ( is_wp_error( $result ) ) {\n\t\t\twp_die( $result );\n\t\t}\n\n\t\t/**\n\t\t * Fires an action hook when the account action has been confirmed by the user.\n\t\t *\n\t\t * Using this you can assume the user has agreed to perform the action by\n\t\t * clicking on the link in the confirmation email.\n\t\t *\n\t\t * After firing this action hook the page will redirect to wp-login a callback\n\t\t * redirects or exits first.\n\t\t *\n\t\t * @since 4.9.6\n\t\t *\n\t\t * @param int $request_id Request ID.\n\t\t */\n\t\tdo_action( 'user_request_action_confirmed', $request_id );\n\n\t\t$message = _wp_privacy_account_request_confirmed_message( $request_id );\n\n\t\tlogin_header( __( 'User action confirmed.' ), $message );\n\t\tlogin_footer();\n\t\texit;\n\n\tcase 'login':\n\tdefault:\n\t\t$secure_cookie   = '';\n\t\t$customize_login = isset( $_REQUEST['customize-login'] );\n\n\t\tif ( $customize_login ) {\n\t\t\twp_enqueue_script( 'customize-base' );\n\t\t}\n\n\t\t// If the user wants SSL but the session is not SSL, force a secure cookie.\n\t\tif ( ! empty( $_POST['log'] ) && ! force_ssl_admin() ) {\n\t\t\t$user_name = sanitize_user( wp_unslash( $_POST['log'] ) );\n\t\t\t$user      = get_user_by( 'login', $user_name );\n\n\t\t\tif ( ! $user && strpos( $user_name, '@' ) ) {\n\t\t\t\t$user = get_user_by( 'email', $user_name );\n\t\t\t}\n\n\t\t\tif ( $user ) {\n\t\t\t\tif ( get_user_option( 'use_ssl', $user->ID ) ) {\n\t\t\t\t\t$secure_cookie = true;\n\t\t\t\t\tforce_ssl_admin( true );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $_REQUEST['redirect_to'] ) && is_string( $_REQUEST['redirect_to'] ) ) {\n\t\t\t$redirect_to = $_REQUEST['redirect_to'];\n\t\t\t// Redirect to HTTPS if user wants SSL.\n\t\t\tif ( $secure_cookie && str_contains( $redirect_to, 'wp-admin' ) ) {\n\t\t\t\t$redirect_to = preg_replace( '|^http://|', 'https://', $redirect_to );\n\t\t\t}\n\t\t} else {\n\t\t\t$redirect_to = admin_url();\n\t\t}\n\n\t\t$reauth = empty( $_REQUEST['reauth'] ) ? false : true;\n\n\t\t$user = wp_signon( array(), $secure_cookie );\n\n\t\tif ( empty( $_COOKIE[ LOGGED_IN_COOKIE ] ) ) {\n\t\t\tif ( headers_sent() ) {\n\t\t\t\t$user = new WP_Error(\n\t\t\t\t\t'test_cookie',\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t/* translators: 1: Browser cookie documentation URL, 2: Support forums URL. */\n\t\t\t\t\t\t__( '<strong>Error:</strong> Cookies are blocked due to unexpected output. For help, please see <a href=\"%1$s\">this documentation</a> or try the <a href=\"%2$s\">support forums</a>.' ),\n\t\t\t\t\t\t__( 'https://developer.wordpress.org/advanced-administration/wordpress/cookies/' ),\n\t\t\t\t\t\t__( 'https://wordpress.org/support/forums/' )\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} elseif ( isset( $_POST['testcookie'] ) && empty( $_COOKIE[ TEST_COOKIE ] ) ) {\n\t\t\t\t// If cookies are disabled, the user can't log in even with a valid username and password.\n\t\t\t\t$user = new WP_Error(\n\t\t\t\t\t'test_cookie',\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t/* translators: %s: Browser cookie documentation URL. */\n\t\t\t\t\t\t__( '<strong>Error:</strong> Cookies are blocked or not supported by your browser. You must <a href=\"%s\">enable cookies</a> to use WordPress.' ),\n\t\t\t\t\t\t__( 'https://developer.wordpress.org/advanced-administration/wordpress/cookies/#enable-cookies-in-your-browser' )\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t$requested_redirect_to = isset( $_REQUEST['redirect_to'] ) && is_string( $_REQUEST['redirect_to'] ) ? $_REQUEST['redirect_to'] : '';\n\n\t\t/**\n\t\t * Filters the login redirect URL.\n\t\t *\n\t\t * @since 3.0.0\n\t\t *\n\t\t * @param string           $redirect_to           The redirect destination URL.\n\t\t * @param string           $requested_redirect_to The requested redirect destination URL passed as a parameter.\n\t\t * @param WP_User|WP_Error $user                  WP_User object if login was successful, WP_Error object otherwise.\n\t\t */\n\t\t$redirect_to = apply_filters( 'login_redirect', $redirect_to, $requested_redirect_to, $user );\n\n\t\tif ( ! is_wp_error( $user ) && ! $reauth ) {\n\t\t\tif ( $interim_login ) {\n\t\t\t\t$message       = '<p class=\"message\">' . __( 'You have logged in successfully.' ) . '</p>';\n\t\t\t\t$interim_login = 'success';\n\t\t\t\tlogin_header( '', $message );\n\n\t\t\t\t?>\n\t\t\t\t</div>\n\t\t\t\t<?php\n\n\t\t\t\t/** This action is documented in wp-login.php */\n\t\t\t\tdo_action( 'login_footer' );\n\n\t\t\t\tif ( $customize_login ) {\n\t\t\t\t\tob_start();\n\t\t\t\t\t?>\n\t\t\t\t\t<script>setTimeout( function(){ new wp.customize.Messenger({ url: '<?php echo wp_customize_url(); ?>', channel: 'login' }).send('login') }, 1000 );</script>\n\t\t\t\t\t<?php\n\t\t\t\t\twp_print_inline_script_tag( wp_remove_surrounding_empty_script_tags( ob_get_clean() ) );\n\t\t\t\t}\n\n\t\t\t\t?>\n\t\t\t\t</body></html>\n\t\t\t\t<?php\n\n\t\t\t\texit;\n\t\t\t}\n\n\t\t\t// Check if it is time to add a redirect to the admin email confirmation screen.\n\t\t\tif ( $user instanceof WP_User && $user->exists() && $user->has_cap( 'manage_options' ) ) {\n\t\t\t\t$admin_email_lifespan = (int) get_option( 'admin_email_lifespan' );\n\n\t\t\t\t/*\n\t\t\t\t * If `0` (or anything \"falsey\" as it is cast to int) is returned, the user will not be redirected\n\t\t\t\t * to the admin email confirmation screen.\n\t\t\t\t */\n\t\t\t\t/** This filter is documented in wp-login.php */\n\t\t\t\t$admin_email_check_interval = (int) apply_filters( 'admin_email_check_interval', 6 * MONTH_IN_SECONDS );\n\n\t\t\t\tif ( $admin_email_check_interval > 0 && time() > $admin_email_lifespan ) {\n\t\t\t\t\t$redirect_to = add_query_arg(\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'action'  => 'confirm_admin_email',\n\t\t\t\t\t\t\t'wp_lang' => get_user_locale( $user ),\n\t\t\t\t\t\t),\n\t\t\t\t\t\twp_login_url( $redirect_to )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ( empty( $redirect_to ) || 'wp-admin/' === $redirect_to || admin_url() === $redirect_to ) ) {\n\t\t\t\t// If the user doesn't belong to a blog, send them to user admin. If the user can't edit posts, send them to their profile.\n\t\t\t\tif ( is_multisite() && ! get_active_blog_for_user( $user->ID ) && ! is_super_admin( $user->ID ) ) {\n\t\t\t\t\t$redirect_to = user_admin_url();\n\t\t\t\t} elseif ( is_multisite() && ! $user->has_cap( 'read' ) ) {\n\t\t\t\t\t$redirect_to = get_dashboard_url( $user->ID );\n\t\t\t\t} elseif ( ! $user->has_cap( 'edit_posts' ) ) {\n\t\t\t\t\t$redirect_to = $user->has_cap( 'read' ) ? admin_url( 'profile.php' ) : home_url();\n\t\t\t\t}\n\n\t\t\t\twp_redirect( $redirect_to );\n\t\t\t\texit;\n\t\t\t}\n\n\t\t\twp_safe_redirect( $redirect_to );\n\t\t\texit;\n\t\t}\n\n\t\t$errors = $user;\n\t\t// Clear errors if loggedout is set.\n\t\tif ( ! empty( $_GET['loggedout'] ) || $reauth ) {\n\t\t\t$errors = new WP_Error();\n\t\t}\n\n\t\tif ( empty( $_POST ) && $errors->get_error_codes() === array( 'empty_username', 'empty_password' ) ) {\n\t\t\t$errors = new WP_Error( '', '' );\n\t\t}\n\n\t\tif ( $interim_login ) {\n\t\t\tif ( ! $errors->has_errors() ) {\n\t\t\t\t$errors->add( 'expired', __( 'Your session has expired. Please log in to continue where you left off.' ), 'message' );\n\t\t\t}\n\t\t} else {\n\t\t\t// Some parts of this script use the main login form to display a message.\n\t\t\tif ( isset( $_GET['loggedout'] ) && $_GET['loggedout'] ) {\n\t\t\t\t$errors->add( 'loggedout', __( 'You are now logged out.' ), 'message' );\n\t\t\t} elseif ( isset( $_GET['registration'] ) && 'disabled' === $_GET['registration'] ) {\n\t\t\t\t$errors->add( 'registerdisabled', __( '<strong>Error:</strong> User registration is currently not allowed.' ) );\n\t\t\t} elseif ( str_contains( $redirect_to, 'about.php?updated' ) ) {\n\t\t\t\t$errors->add( 'updated', __( '<strong>You have successfully updated WordPress!</strong> Please log back in to see what&#8217;s new.' ), 'message' );\n\t\t\t} elseif ( WP_Recovery_Mode_Link_Service::LOGIN_ACTION_ENTERED === $action ) {\n\t\t\t\t$errors->add( 'enter_recovery_mode', __( 'Recovery Mode Initialized. Please log in to continue.' ), 'message' );\n\t\t\t} elseif ( isset( $_GET['redirect_to'] ) && is_string( $_GET['redirect_to'] )\n\t\t\t\t&& str_contains( $_GET['redirect_to'], 'wp-admin/authorize-application.php' )\n\t\t\t) {\n\t\t\t\t$query_component = wp_parse_url( $_GET['redirect_to'], PHP_URL_QUERY );\n\t\t\t\t$query           = array();\n\t\t\t\tif ( $query_component ) {\n\t\t\t\t\tparse_str( $query_component, $query );\n\t\t\t\t}\n\n\t\t\t\tif ( ! empty( $query['app_name'] ) ) {\n\t\t\t\t\t/* translators: 1: Website name, 2: Application name. */\n\t\t\t\t\t$message = sprintf( 'Please log in to %1$s to authorize %2$s to connect to your account.', get_bloginfo( 'name', 'display' ), '<strong>' . esc_html( $query['app_name'] ) . '</strong>' );\n\t\t\t\t} else {\n\t\t\t\t\t/* translators: %s: Website name. */\n\t\t\t\t\t$message = sprintf( 'Please log in to %s to proceed with authorization.', get_bloginfo( 'name', 'display' ) );\n\t\t\t\t}\n\n\t\t\t\t$errors->add( 'authorize_application', $message, 'message' );\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Filters the login page errors.\n\t\t *\n\t\t * @since 3.6.0\n\t\t *\n\t\t * @param WP_Error $errors      WP Error object.\n\t\t * @param string   $redirect_to Redirect destination URL.\n\t\t */\n\t\t$errors = apply_filters( 'wp_login_errors', $errors, $redirect_to );\n\n\t\t// Clear any stale cookies.\n\t\tif ( $reauth ) {\n\t\t\twp_clear_auth_cookie();\n\t\t}\n\n\t\tlogin_header( __( 'Log In' ), '', $errors );\n\n\t\tif ( isset( $_POST['log'] ) ) {\n\t\t\t$user_login = ( 'incorrect_password' === $errors->get_error_code() || 'empty_password' === $errors->get_error_code() ) ? wp_unslash( $_POST['log'] ) : '';\n\t\t}\n\n\t\t$rememberme = ! empty( $_POST['rememberme'] );\n\n\t\t$aria_describedby = '';\n\t\t$has_errors       = $errors->has_errors();\n\n\t\tif ( $has_errors ) {\n\t\t\t$aria_describedby = ' aria-describedby=\"login_error\"';\n\t\t}\n\n\t\tif ( $has_errors && 'message' === $errors->get_error_data() ) {\n\t\t\t$aria_describedby = ' aria-describedby=\"login-message\"';\n\t\t}\n\n\t\twp_enqueue_script( 'user-profile' );\n\t\t?>\n\n\t\t<form name=\"loginform\" id=\"loginform\" action=\"<?php echo esc_url( site_url( 'wp-login.php', 'login_post' ) ); ?>\" method=\"post\">\n\t\t\t<p>\n\t\t\t\t<label for=\"user_login\"><?php _e( 'Username or Email Address' ); ?></label>\n\t\t\t\t<input type=\"text\" name=\"log\" id=\"user_login\"<?php echo $aria_describedby; ?> class=\"input\" value=\"<?php echo esc_attr( $user_login ); ?>\" size=\"20\" autocapitalize=\"off\" autocomplete=\"username\" required=\"required\" />\n\t\t\t</p>\n\n\t\t\t<div class=\"user-pass-wrap\">\n\t\t\t\t<label for=\"user_pass\"><?php _e( 'Password' ); ?></label>\n\t\t\t\t<div class=\"wp-pwd\">\n\t\t\t\t\t<input type=\"password\" name=\"pwd\" id=\"user_pass\"<?php echo $aria_describedby; ?> class=\"input password-input\" value=\"\" size=\"20\" autocomplete=\"current-password\" spellcheck=\"false\" required=\"required\" />\n\t\t\t\t\t<button type=\"button\" class=\"button button-secondary wp-hide-pw hide-if-no-js\" data-toggle=\"0\" aria-label=\"<?php esc_attr_e( 'Show password' ); ?>\">\n\t\t\t\t\t\t<span class=\"dashicons dashicons-visibility\" aria-hidden=\"true\"></span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<?php\n\n\t\t\t/**\n\t\t\t * Fires following the 'Password' field in the login form.\n\t\t\t *\n\t\t\t * @since 2.1.0\n\t\t\t */\n\t\t\tdo_action( 'login_form' );\n\n\t\t\t?>\n\t\t\t<p class=\"forgetmenot\"><input name=\"rememberme\" type=\"checkbox\" id=\"rememberme\" value=\"forever\" <?php checked( $rememberme ); ?> /> <label for=\"rememberme\"><?php esc_html_e( 'Remember Me' ); ?></label></p>\n\t\t\t<p class=\"submit\">\n\t\t\t\t<input type=\"submit\" name=\"wp-submit\" id=\"wp-submit\" class=\"button button-primary button-large\" value=\"<?php esc_attr_e( 'Log In' ); ?>\" />\n\t\t\t\t<?php\n\n\t\t\t\tif ( $interim_login ) {\n\t\t\t\t\t?>\n\t\t\t\t\t<input type=\"hidden\" name=\"interim-login\" value=\"1\" />\n\t\t\t\t\t<?php\n\t\t\t\t} else {\n\t\t\t\t\t?>\n\t\t\t\t\t<input type=\"hidden\" name=\"redirect_to\" value=\"<?php echo esc_attr( $redirect_to ); ?>\" />\n\t\t\t\t\t<?php\n\t\t\t\t}\n\n\t\t\t\tif ( $customize_login ) {\n\t\t\t\t\t?>\n\t\t\t\t\t<input type=\"hidden\" name=\"customize-login\" value=\"1\" />\n\t\t\t\t\t<?php\n\t\t\t\t}\n\n\t\t\t\t?>\n\t\t\t\t<input type=\"hidden\" name=\"testcookie\" value=\"1\" />\n\t\t\t</p>\n\t\t</form>\n\n\t\t<?php\n\n\t\tif ( ! $interim_login ) {\n\t\t\t?>\n\t\t\t<p id=\"nav\">\n\t\t\t\t<?php\n\n\t\t\t\tif ( get_option( 'users_can_register' ) ) {\n\t\t\t\t\t$registration_url = sprintf( '<a class=\"wp-login-register\" href=\"%s\">%s</a>', esc_url( wp_registration_url() ), __( 'Register' ) );\n\n\t\t\t\t\t/** This filter is documented in wp-includes/general-template.php */\n\t\t\t\t\techo apply_filters( 'register', $registration_url );\n\n\t\t\t\t\techo esc_html( $login_link_separator );\n\t\t\t\t}\n\n\t\t\t\t$html_link = sprintf( '<a class=\"wp-login-lost-password\" href=\"%s\">%s</a>', esc_url( wp_lostpassword_url() ), __( 'Lost your password?' ) );\n\n\t\t\t\t/**\n\t\t\t\t * Filters the link that allows the user to reset the lost password.\n\t\t\t\t *\n\t\t\t\t * @since 6.1.0\n\t\t\t\t *\n\t\t\t\t * @param string $html_link HTML link to the lost password form.\n\t\t\t\t */\n\t\t\t\techo apply_filters( 'lost_password_html_link', $html_link );\n\n\t\t\t\t?>\n\t\t\t</p>\n\t\t\t<?php\n\t\t}\n\n\t\t$login_script  = 'function wp_attempt_focus() {';\n\t\t$login_script .= 'setTimeout( function() {';\n\t\t$login_script .= 'try {';\n\n\t\tif ( $user_login ) {\n\t\t\t$login_script .= 'd = document.getElementById( \"user_pass\" ); d.value = \"\";';\n\t\t} else {\n\t\t\t$login_script .= 'd = document.getElementById( \"user_login\" );';\n\n\t\t\tif ( $errors->get_error_code() === 'invalid_username' ) {\n\t\t\t\t$login_script .= 'd.value = \"\";';\n\t\t\t}\n\t\t}\n\n\t\t$login_script .= 'd.focus(); d.select();';\n\t\t$login_script .= '} catch( er ) {}';\n\t\t$login_script .= '}, 200);';\n\t\t$login_script .= \"}\\n\"; // End of wp_attempt_focus().\n\n\t\t/**\n\t\t * Filters whether to print the call to `wp_attempt_focus()` on the login screen.\n\t\t *\n\t\t * @since 4.8.0\n\t\t *\n\t\t * @param bool $print Whether to print the function call. Default true.\n\t\t */\n\t\tif ( apply_filters( 'enable_login_autofocus', true ) && ! $error ) {\n\t\t\t$login_script .= \"wp_attempt_focus();\\n\";\n\t\t}\n\n\t\t// Run `wpOnload()` if defined.\n\t\t$login_script .= \"if ( typeof wpOnload === 'function' ) { wpOnload() }\";\n\n\t\twp_print_inline_script_tag( $login_script );\n\n\t\tif ( $interim_login ) {\n\t\t\tob_start();\n\t\t\t?>\n\t\t\t<script>\n\t\t\t( function() {\n\t\t\t\ttry {\n\t\t\t\t\tvar i, links = document.getElementsByTagName( 'a' );\n\t\t\t\t\tfor ( i in links ) {\n\t\t\t\t\t\tif ( links[i].href ) {\n\t\t\t\t\t\t\tlinks[i].target = '_blank';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch( er ) {}\n\t\t\t}());\n\t\t\t</script>\n\t\t\t<?php\n\t\t\twp_print_inline_script_tag( wp_remove_surrounding_empty_script_tags( ob_get_clean() ) );\n\t\t}\n\n\t\tlogin_footer();\n\t\tbreak;\n} // End action switch.\n"
        },
        {
          "name": "wp-mail.php",
          "type": "blob",
          "size": 8.3427734375,
          "content": "<?php\n/**\n * Gets the email message from the user's mailbox to add as\n * a WordPress post. Mailbox connection information must be\n * configured under Settings > Writing\n *\n * @package WordPress\n */\n\n/** Make sure that the WordPress bootstrap has run before continuing. */\nrequire __DIR__ . '/wp-load.php';\n\n/** This filter is documented in wp-admin/options.php */\nif ( ! apply_filters( 'enable_post_by_email_configuration', true ) ) {\n\twp_die( __( 'This action has been disabled by the administrator.' ), 403 );\n}\n\n$mailserver_url = get_option( 'mailserver_url' );\n\nif ( 'mail.example.com' === $mailserver_url || empty( $mailserver_url ) ) {\n\twp_die( __( 'This action has been disabled by the administrator.' ), 403 );\n}\n\n/**\n * Fires to allow a plugin to do a complete takeover of Post by Email.\n *\n * @since 2.9.0\n */\ndo_action( 'wp-mail.php' ); // phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\n/** Get the POP3 class with which to access the mailbox. */\nrequire_once ABSPATH . WPINC . '/class-pop3.php';\n\n/** Only check at this interval for new messages. */\nif ( ! defined( 'WP_MAIL_INTERVAL' ) ) {\n\tdefine( 'WP_MAIL_INTERVAL', 5 * MINUTE_IN_SECONDS );\n}\n\n$last_checked = get_transient( 'mailserver_last_checked' );\n\nif ( $last_checked ) {\n\twp_die( __( 'Slow down cowboy, no need to check for new mails so often!' ) );\n}\n\nset_transient( 'mailserver_last_checked', true, WP_MAIL_INTERVAL );\n\n$time_difference = (int) ( (float) get_option( 'gmt_offset' ) * HOUR_IN_SECONDS );\n\n$phone_delim = '::';\n\n$pop3 = new POP3();\n\nif ( ! $pop3->connect( get_option( 'mailserver_url' ), get_option( 'mailserver_port' ) ) || ! $pop3->user( get_option( 'mailserver_login' ) ) ) {\n\twp_die( esc_html( $pop3->ERROR ) );\n}\n\n$count = $pop3->pass( get_option( 'mailserver_pass' ) );\n\nif ( false === $count ) {\n\twp_die( esc_html( $pop3->ERROR ) );\n}\n\nif ( 0 === $count ) {\n\t$pop3->quit();\n\twp_die( __( 'There does not seem to be any new mail.' ) );\n}\n\n// Always run as an unauthenticated user.\nwp_set_current_user( 0 );\n\nfor ( $i = 1; $i <= $count; $i++ ) {\n\n\t$message = $pop3->get( $i );\n\n\t$bodysignal                = false;\n\t$boundary                  = '';\n\t$charset                   = '';\n\t$content                   = '';\n\t$content_type              = '';\n\t$content_transfer_encoding = '';\n\t$post_author               = 1;\n\t$author_found              = false;\n\t$post_date                 = null;\n\t$post_date_gmt             = null;\n\n\tforeach ( $message as $line ) {\n\t\t// Body signal.\n\t\tif ( strlen( $line ) < 3 ) {\n\t\t\t$bodysignal = true;\n\t\t}\n\t\tif ( $bodysignal ) {\n\t\t\t$content .= $line;\n\t\t} else {\n\t\t\tif ( preg_match( '/Content-Type: /i', $line ) ) {\n\t\t\t\t$content_type = trim( $line );\n\t\t\t\t$content_type = substr( $content_type, 14, strlen( $content_type ) - 14 );\n\t\t\t\t$content_type = explode( ';', $content_type );\n\t\t\t\tif ( ! empty( $content_type[1] ) ) {\n\t\t\t\t\t$charset = explode( '=', $content_type[1] );\n\t\t\t\t\t$charset = ( ! empty( $charset[1] ) ) ? trim( $charset[1] ) : '';\n\t\t\t\t}\n\t\t\t\t$content_type = $content_type[0];\n\t\t\t}\n\t\t\tif ( preg_match( '/Content-Transfer-Encoding: /i', $line ) ) {\n\t\t\t\t$content_transfer_encoding = trim( $line );\n\t\t\t\t$content_transfer_encoding = substr( $content_transfer_encoding, 27, strlen( $content_transfer_encoding ) - 27 );\n\t\t\t\t$content_transfer_encoding = explode( ';', $content_transfer_encoding );\n\t\t\t\t$content_transfer_encoding = $content_transfer_encoding[0];\n\t\t\t}\n\t\t\tif ( 'multipart/alternative' === $content_type && str_contains( $line, 'boundary=\"' ) && '' === $boundary ) {\n\t\t\t\t$boundary = trim( $line );\n\t\t\t\t$boundary = explode( '\"', $boundary );\n\t\t\t\t$boundary = $boundary[1];\n\t\t\t}\n\t\t\tif ( preg_match( '/Subject: /i', $line ) ) {\n\t\t\t\t$subject = trim( $line );\n\t\t\t\t$subject = substr( $subject, 9, strlen( $subject ) - 9 );\n\t\t\t\t// Captures any text in the subject before $phone_delim as the subject.\n\t\t\t\tif ( function_exists( 'iconv_mime_decode' ) ) {\n\t\t\t\t\t$subject = iconv_mime_decode( $subject, 2, get_option( 'blog_charset' ) );\n\t\t\t\t} else {\n\t\t\t\t\t$subject = wp_iso_descrambler( $subject );\n\t\t\t\t}\n\t\t\t\t$subject = explode( $phone_delim, $subject );\n\t\t\t\t$subject = $subject[0];\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Set the author using the email address (From or Reply-To, the last used)\n\t\t\t * otherwise use the site admin.\n\t\t\t */\n\t\t\tif ( ! $author_found && preg_match( '/^(From|Reply-To): /', $line ) ) {\n\t\t\t\tif ( preg_match( '|[a-z0-9_.-]+@[a-z0-9_.-]+(?!.*<)|i', $line, $matches ) ) {\n\t\t\t\t\t$author = $matches[0];\n\t\t\t\t} else {\n\t\t\t\t\t$author = trim( $line );\n\t\t\t\t}\n\t\t\t\t$author = sanitize_email( $author );\n\t\t\t\tif ( is_email( $author ) ) {\n\t\t\t\t\t$userdata = get_user_by( 'email', $author );\n\t\t\t\t\tif ( ! empty( $userdata ) ) {\n\t\t\t\t\t\t$post_author  = $userdata->ID;\n\t\t\t\t\t\t$author_found = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( preg_match( '/Date: /i', $line ) ) { // Of the form '20 Mar 2002 20:32:37 +0100'.\n\t\t\t\t$ddate = str_replace( 'Date: ', '', trim( $line ) );\n\t\t\t\t// Remove parenthesized timezone string if it exists, as this confuses strtotime().\n\t\t\t\t$ddate           = preg_replace( '!\\s*\\(.+\\)\\s*$!', '', $ddate );\n\t\t\t\t$ddate_timestamp = strtotime( $ddate );\n\t\t\t\t$post_date       = gmdate( 'Y-m-d H:i:s', $ddate_timestamp + $time_difference );\n\t\t\t\t$post_date_gmt   = gmdate( 'Y-m-d H:i:s', $ddate_timestamp );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set $post_status based on $author_found and on author's publish_posts capability.\n\tif ( $author_found ) {\n\t\t$user        = new WP_User( $post_author );\n\t\t$post_status = ( $user->has_cap( 'publish_posts' ) ) ? 'publish' : 'pending';\n\t} else {\n\t\t// Author not found in DB, set status to pending. Author already set to admin.\n\t\t$post_status = 'pending';\n\t}\n\n\t$subject = trim( $subject );\n\n\tif ( 'multipart/alternative' === $content_type ) {\n\t\t$content = explode( '--' . $boundary, $content );\n\t\t$content = $content[2];\n\n\t\t// Match case-insensitive Content-Transfer-Encoding.\n\t\tif ( preg_match( '/Content-Transfer-Encoding: quoted-printable/i', $content, $delim ) ) {\n\t\t\t$content = explode( $delim[0], $content );\n\t\t\t$content = $content[1];\n\t\t}\n\t\t$content = strip_tags( $content, '<img><p><br><i><b><u><em><strong><strike><font><span><div>' );\n\t}\n\t$content = trim( $content );\n\n\t/**\n\t * Filters the original content of the email.\n\t *\n\t * Give Post-By-Email extending plugins full access to the content, either\n\t * the raw content, or the content of the last quoted-printable section.\n\t *\n\t * @since 2.8.0\n\t *\n\t * @param string $content The original email content.\n\t */\n\t$content = apply_filters( 'wp_mail_original_content', $content );\n\n\tif ( false !== stripos( $content_transfer_encoding, 'quoted-printable' ) ) {\n\t\t$content = quoted_printable_decode( $content );\n\t}\n\n\tif ( function_exists( 'iconv' ) && ! empty( $charset ) ) {\n\t\t$content = iconv( $charset, get_option( 'blog_charset' ), $content );\n\t}\n\n\t// Captures any text in the body after $phone_delim as the body.\n\t$content = explode( $phone_delim, $content );\n\t$content = empty( $content[1] ) ? $content[0] : $content[1];\n\n\t$content = trim( $content );\n\n\t/**\n\t * Filters the content of the post submitted by email before saving.\n\t *\n\t * @since 1.2.0\n\t *\n\t * @param string $content The email content.\n\t */\n\t$post_content = apply_filters( 'phone_content', $content );\n\n\t$post_title = xmlrpc_getposttitle( $content );\n\n\tif ( '' === trim( $post_title ) ) {\n\t\t$post_title = $subject;\n\t}\n\n\t$post_category = array( get_option( 'default_email_category' ) );\n\n\t$post_data = compact( 'post_content', 'post_title', 'post_date', 'post_date_gmt', 'post_author', 'post_category', 'post_status' );\n\t$post_data = wp_slash( $post_data );\n\n\t$post_ID = wp_insert_post( $post_data );\n\tif ( is_wp_error( $post_ID ) ) {\n\t\techo \"\\n\" . $post_ID->get_error_message();\n\t}\n\n\t// The post wasn't inserted or updated, for whatever reason. Better move forward to the next email.\n\tif ( empty( $post_ID ) ) {\n\t\tcontinue;\n\t}\n\n\t/**\n\t * Fires after a post submitted by email is published.\n\t *\n\t * @since 1.2.0\n\t *\n\t * @param int $post_ID The post ID.\n\t */\n\tdo_action( 'publish_phone', $post_ID );\n\n\techo \"\\n<p><strong>\" . __( 'Author:' ) . '</strong> ' . esc_html( $post_author ) . '</p>';\n\techo \"\\n<p><strong>\" . __( 'Posted title:' ) . '</strong> ' . esc_html( $post_title ) . '</p>';\n\n\tif ( ! $pop3->delete( $i ) ) {\n\t\techo '<p>' . sprintf(\n\t\t\t/* translators: %s: POP3 error. */\n\t\t\t__( 'Oops: %s' ),\n\t\t\tesc_html( $pop3->ERROR )\n\t\t) . '</p>';\n\t\t$pop3->reset();\n\t\texit;\n\t} else {\n\t\techo '<p>' . sprintf(\n\t\t\t/* translators: %s: The message ID. */\n\t\t\t__( 'Mission complete. Message %s deleted.' ),\n\t\t\t'<strong>' . $i . '</strong>'\n\t\t) . '</p>';\n\t}\n}\n\n$pop3->quit();\n"
        },
        {
          "name": "wp-settings.php",
          "type": "blob",
          "size": 29.0185546875,
          "content": "<?php\n/**\n * Used to set up and fix common variables and include\n * the WordPress procedural and class library.\n *\n * Allows for some configuration in wp-config.php (see default-constants.php)\n *\n * @package WordPress\n */\n\n/**\n * Stores the location of the WordPress directory of functions, classes, and core content.\n *\n * @since 1.0.0\n */\ndefine( 'WPINC', 'wp-includes' );\n\n/**\n * Version information for the current WordPress release.\n *\n * These can't be directly globalized in version.php. When updating,\n * include version.php from another installation and don't override\n * these values if already set.\n *\n * @global string $wp_version             The WordPress version string.\n * @global int    $wp_db_version          WordPress database version.\n * @global string $tinymce_version        TinyMCE version.\n * @global string $required_php_version   The required PHP version string.\n * @global string $required_mysql_version The required MySQL version string.\n * @global string $wp_local_package       Locale code of the package.\n */\nglobal $wp_version, $wp_db_version, $tinymce_version, $required_php_version, $required_mysql_version, $wp_local_package;\nrequire ABSPATH . WPINC . '/version.php';\nrequire ABSPATH . WPINC . '/compat.php';\nrequire ABSPATH . WPINC . '/load.php';\n\n// Check for the required PHP version and for the MySQL extension or a database drop-in.\nwp_check_php_mysql_versions();\n\n// Include files required for initialization.\nrequire ABSPATH . WPINC . '/class-wp-paused-extensions-storage.php';\nrequire ABSPATH . WPINC . '/class-wp-exception.php';\nrequire ABSPATH . WPINC . '/class-wp-fatal-error-handler.php';\nrequire ABSPATH . WPINC . '/class-wp-recovery-mode-cookie-service.php';\nrequire ABSPATH . WPINC . '/class-wp-recovery-mode-key-service.php';\nrequire ABSPATH . WPINC . '/class-wp-recovery-mode-link-service.php';\nrequire ABSPATH . WPINC . '/class-wp-recovery-mode-email-service.php';\nrequire ABSPATH . WPINC . '/class-wp-recovery-mode.php';\nrequire ABSPATH . WPINC . '/error-protection.php';\nrequire ABSPATH . WPINC . '/default-constants.php';\nrequire_once ABSPATH . WPINC . '/plugin.php';\n\n/**\n * If not already configured, `$blog_id` will default to 1 in a single site\n * configuration. In multisite, it will be overridden by default in ms-settings.php.\n *\n * @since 2.0.0\n *\n * @global int $blog_id\n */\nglobal $blog_id;\n\n// Set initial default constants including WP_MEMORY_LIMIT, WP_MAX_MEMORY_LIMIT, WP_DEBUG, SCRIPT_DEBUG, WP_CONTENT_DIR and WP_CACHE.\nwp_initial_constants();\n\n// Register the shutdown handler for fatal errors as soon as possible.\nwp_register_fatal_error_handler();\n\n// WordPress calculates offsets from UTC.\n// phpcs:ignore WordPress.DateTime.RestrictedFunctions.timezone_change_date_default_timezone_set\ndate_default_timezone_set( 'UTC' );\n\n// Standardize $_SERVER variables across setups.\nwp_fix_server_vars();\n\n// Check if the site is in maintenance mode.\nwp_maintenance();\n\n// Start loading timer.\ntimer_start();\n\n// Check if WP_DEBUG mode is enabled.\nwp_debug_mode();\n\n/**\n * Filters whether to enable loading of the advanced-cache.php drop-in.\n *\n * This filter runs before it can be used by plugins. It is designed for non-web\n * run-times. If false is returned, advanced-cache.php will never be loaded.\n *\n * @since 4.6.0\n *\n * @param bool $enable_advanced_cache Whether to enable loading advanced-cache.php (if present).\n *                                    Default true.\n */\nif ( WP_CACHE && apply_filters( 'enable_loading_advanced_cache_dropin', true ) && file_exists( WP_CONTENT_DIR . '/advanced-cache.php' ) ) {\n\t// For an advanced caching plugin to use. Uses a static drop-in because you would only want one.\n\tinclude WP_CONTENT_DIR . '/advanced-cache.php';\n\n\t// Re-initialize any hooks added manually by advanced-cache.php.\n\tif ( $wp_filter ) {\n\t\t$wp_filter = WP_Hook::build_preinitialized_hooks( $wp_filter );\n\t}\n}\n\n// Define WP_LANG_DIR if not set.\nwp_set_lang_dir();\n\n// Load early WordPress files.\nrequire ABSPATH . WPINC . '/class-wp-list-util.php';\nrequire ABSPATH . WPINC . '/class-wp-token-map.php';\nrequire ABSPATH . WPINC . '/formatting.php';\nrequire ABSPATH . WPINC . '/meta.php';\nrequire ABSPATH . WPINC . '/functions.php';\nrequire ABSPATH . WPINC . '/class-wp-meta-query.php';\nrequire ABSPATH . WPINC . '/class-wp-matchesmapregex.php';\nrequire ABSPATH . WPINC . '/class-wp.php';\nrequire ABSPATH . WPINC . '/class-wp-error.php';\nrequire ABSPATH . WPINC . '/pomo/mo.php';\nrequire ABSPATH . WPINC . '/l10n/class-wp-translation-controller.php';\nrequire ABSPATH . WPINC . '/l10n/class-wp-translations.php';\nrequire ABSPATH . WPINC . '/l10n/class-wp-translation-file.php';\nrequire ABSPATH . WPINC . '/l10n/class-wp-translation-file-mo.php';\nrequire ABSPATH . WPINC . '/l10n/class-wp-translation-file-php.php';\n\n/**\n * @since 0.71\n *\n * @global wpdb $wpdb WordPress database abstraction object.\n */\nglobal $wpdb;\n// Include the wpdb class and, if present, a db.php database drop-in.\nrequire_wp_db();\n\n/**\n * @since 3.3.0\n *\n * @global string $table_prefix The database table prefix.\n */\n$GLOBALS['table_prefix'] = $table_prefix;\n\n// Set the database table prefix and the format specifiers for database table columns.\nwp_set_wpdb_vars();\n\n// Start the WordPress object cache, or an external object cache if the drop-in is present.\nwp_start_object_cache();\n\n// Attach the default filters.\nrequire ABSPATH . WPINC . '/default-filters.php';\n\n// Initialize multisite if enabled.\nif ( is_multisite() ) {\n\trequire ABSPATH . WPINC . '/class-wp-site-query.php';\n\trequire ABSPATH . WPINC . '/class-wp-network-query.php';\n\trequire ABSPATH . WPINC . '/ms-blogs.php';\n\trequire ABSPATH . WPINC . '/ms-settings.php';\n} elseif ( ! defined( 'MULTISITE' ) ) {\n\tdefine( 'MULTISITE', false );\n}\n\nregister_shutdown_function( 'shutdown_action_hook' );\n\n// Stop most of WordPress from being loaded if SHORTINIT is enabled.\nif ( SHORTINIT ) {\n\treturn false;\n}\n\n// Load the L10n library.\nrequire_once ABSPATH . WPINC . '/l10n.php';\nrequire_once ABSPATH . WPINC . '/class-wp-textdomain-registry.php';\nrequire_once ABSPATH . WPINC . '/class-wp-locale.php';\nrequire_once ABSPATH . WPINC . '/class-wp-locale-switcher.php';\n\n// Run the installer if WordPress is not installed.\nwp_not_installed();\n\n// Load most of WordPress.\nrequire ABSPATH . WPINC . '/class-wp-walker.php';\nrequire ABSPATH . WPINC . '/class-wp-ajax-response.php';\nrequire ABSPATH . WPINC . '/capabilities.php';\nrequire ABSPATH . WPINC . '/class-wp-roles.php';\nrequire ABSPATH . WPINC . '/class-wp-role.php';\nrequire ABSPATH . WPINC . '/class-wp-user.php';\nrequire ABSPATH . WPINC . '/class-wp-query.php';\nrequire ABSPATH . WPINC . '/query.php';\nrequire ABSPATH . WPINC . '/class-wp-date-query.php';\nrequire ABSPATH . WPINC . '/theme.php';\nrequire ABSPATH . WPINC . '/class-wp-theme.php';\nrequire ABSPATH . WPINC . '/class-wp-theme-json-schema.php';\nrequire ABSPATH . WPINC . '/class-wp-theme-json-data.php';\nrequire ABSPATH . WPINC . '/class-wp-theme-json.php';\nrequire ABSPATH . WPINC . '/class-wp-theme-json-resolver.php';\nrequire ABSPATH . WPINC . '/class-wp-duotone.php';\nrequire ABSPATH . WPINC . '/global-styles-and-settings.php';\nrequire ABSPATH . WPINC . '/class-wp-block-template.php';\nrequire ABSPATH . WPINC . '/class-wp-block-templates-registry.php';\nrequire ABSPATH . WPINC . '/block-template-utils.php';\nrequire ABSPATH . WPINC . '/block-template.php';\nrequire ABSPATH . WPINC . '/theme-templates.php';\nrequire ABSPATH . WPINC . '/theme-previews.php';\nrequire ABSPATH . WPINC . '/template.php';\nrequire ABSPATH . WPINC . '/https-detection.php';\nrequire ABSPATH . WPINC . '/https-migration.php';\nrequire ABSPATH . WPINC . '/class-wp-user-request.php';\nrequire ABSPATH . WPINC . '/user.php';\nrequire ABSPATH . WPINC . '/class-wp-user-query.php';\nrequire ABSPATH . WPINC . '/class-wp-session-tokens.php';\nrequire ABSPATH . WPINC . '/class-wp-user-meta-session-tokens.php';\nrequire ABSPATH . WPINC . '/general-template.php';\nrequire ABSPATH . WPINC . '/link-template.php';\nrequire ABSPATH . WPINC . '/author-template.php';\nrequire ABSPATH . WPINC . '/robots-template.php';\nrequire ABSPATH . WPINC . '/post.php';\nrequire ABSPATH . WPINC . '/class-walker-page.php';\nrequire ABSPATH . WPINC . '/class-walker-page-dropdown.php';\nrequire ABSPATH . WPINC . '/class-wp-post-type.php';\nrequire ABSPATH . WPINC . '/class-wp-post.php';\nrequire ABSPATH . WPINC . '/post-template.php';\nrequire ABSPATH . WPINC . '/revision.php';\nrequire ABSPATH . WPINC . '/post-formats.php';\nrequire ABSPATH . WPINC . '/post-thumbnail-template.php';\nrequire ABSPATH . WPINC . '/category.php';\nrequire ABSPATH . WPINC . '/class-walker-category.php';\nrequire ABSPATH . WPINC . '/class-walker-category-dropdown.php';\nrequire ABSPATH . WPINC . '/category-template.php';\nrequire ABSPATH . WPINC . '/comment.php';\nrequire ABSPATH . WPINC . '/class-wp-comment.php';\nrequire ABSPATH . WPINC . '/class-wp-comment-query.php';\nrequire ABSPATH . WPINC . '/class-walker-comment.php';\nrequire ABSPATH . WPINC . '/comment-template.php';\nrequire ABSPATH . WPINC . '/rewrite.php';\nrequire ABSPATH . WPINC . '/class-wp-rewrite.php';\nrequire ABSPATH . WPINC . '/feed.php';\nrequire ABSPATH . WPINC . '/bookmark.php';\nrequire ABSPATH . WPINC . '/bookmark-template.php';\nrequire ABSPATH . WPINC . '/kses.php';\nrequire ABSPATH . WPINC . '/cron.php';\nrequire ABSPATH . WPINC . '/deprecated.php';\nrequire ABSPATH . WPINC . '/script-loader.php';\nrequire ABSPATH . WPINC . '/taxonomy.php';\nrequire ABSPATH . WPINC . '/class-wp-taxonomy.php';\nrequire ABSPATH . WPINC . '/class-wp-term.php';\nrequire ABSPATH . WPINC . '/class-wp-term-query.php';\nrequire ABSPATH . WPINC . '/class-wp-tax-query.php';\nrequire ABSPATH . WPINC . '/update.php';\nrequire ABSPATH . WPINC . '/canonical.php';\nrequire ABSPATH . WPINC . '/shortcodes.php';\nrequire ABSPATH . WPINC . '/embed.php';\nrequire ABSPATH . WPINC . '/class-wp-embed.php';\nrequire ABSPATH . WPINC . '/class-wp-oembed.php';\nrequire ABSPATH . WPINC . '/class-wp-oembed-controller.php';\nrequire ABSPATH . WPINC . '/media.php';\nrequire ABSPATH . WPINC . '/http.php';\nrequire ABSPATH . WPINC . '/html-api/html5-named-character-references.php';\nrequire ABSPATH . WPINC . '/html-api/class-wp-html-attribute-token.php';\nrequire ABSPATH . WPINC . '/html-api/class-wp-html-span.php';\nrequire ABSPATH . WPINC . '/html-api/class-wp-html-doctype-info.php';\nrequire ABSPATH . WPINC . '/html-api/class-wp-html-text-replacement.php';\nrequire ABSPATH . WPINC . '/html-api/class-wp-html-decoder.php';\nrequire ABSPATH . WPINC . '/html-api/class-wp-html-tag-processor.php';\nrequire ABSPATH . WPINC . '/html-api/class-wp-html-unsupported-exception.php';\nrequire ABSPATH . WPINC . '/html-api/class-wp-html-active-formatting-elements.php';\nrequire ABSPATH . WPINC . '/html-api/class-wp-html-open-elements.php';\nrequire ABSPATH . WPINC . '/html-api/class-wp-html-token.php';\nrequire ABSPATH . WPINC . '/html-api/class-wp-html-stack-event.php';\nrequire ABSPATH . WPINC . '/html-api/class-wp-html-processor-state.php';\nrequire ABSPATH . WPINC . '/html-api/class-wp-html-processor.php';\nrequire ABSPATH . WPINC . '/class-wp-http.php';\nrequire ABSPATH . WPINC . '/class-wp-http-streams.php';\nrequire ABSPATH . WPINC . '/class-wp-http-curl.php';\nrequire ABSPATH . WPINC . '/class-wp-http-proxy.php';\nrequire ABSPATH . WPINC . '/class-wp-http-cookie.php';\nrequire ABSPATH . WPINC . '/class-wp-http-encoding.php';\nrequire ABSPATH . WPINC . '/class-wp-http-response.php';\nrequire ABSPATH . WPINC . '/class-wp-http-requests-response.php';\nrequire ABSPATH . WPINC . '/class-wp-http-requests-hooks.php';\nrequire ABSPATH . WPINC . '/widgets.php';\nrequire ABSPATH . WPINC . '/class-wp-widget.php';\nrequire ABSPATH . WPINC . '/class-wp-widget-factory.php';\nrequire ABSPATH . WPINC . '/nav-menu-template.php';\nrequire ABSPATH . WPINC . '/nav-menu.php';\nrequire ABSPATH . WPINC . '/admin-bar.php';\nrequire ABSPATH . WPINC . '/class-wp-application-passwords.php';\nrequire ABSPATH . WPINC . '/rest-api.php';\nrequire ABSPATH . WPINC . '/rest-api/class-wp-rest-server.php';\nrequire ABSPATH . WPINC . '/rest-api/class-wp-rest-response.php';\nrequire ABSPATH . WPINC . '/rest-api/class-wp-rest-request.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-posts-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-attachments-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-global-styles-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-post-types-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-post-statuses-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-revisions-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-global-styles-revisions-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-template-revisions-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-autosaves-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-template-autosaves-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-taxonomies-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-terms-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-menu-items-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-menus-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-menu-locations-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-users-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-comments-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-search-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-blocks-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-block-types-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-block-renderer-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-settings-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-themes-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-plugins-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-block-directory-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-edit-site-export-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-pattern-directory-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-block-patterns-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-block-pattern-categories-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-application-passwords-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-site-health-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-sidebars-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-widget-types-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-widgets-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-templates-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-url-details-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-navigation-fallback-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-font-families-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-font-faces-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/endpoints/class-wp-rest-font-collections-controller.php';\nrequire ABSPATH . WPINC . '/rest-api/fields/class-wp-rest-meta-fields.php';\nrequire ABSPATH . WPINC . '/rest-api/fields/class-wp-rest-comment-meta-fields.php';\nrequire ABSPATH . WPINC . '/rest-api/fields/class-wp-rest-post-meta-fields.php';\nrequire ABSPATH . WPINC . '/rest-api/fields/class-wp-rest-term-meta-fields.php';\nrequire ABSPATH . WPINC . '/rest-api/fields/class-wp-rest-user-meta-fields.php';\nrequire ABSPATH . WPINC . '/rest-api/search/class-wp-rest-search-handler.php';\nrequire ABSPATH . WPINC . '/rest-api/search/class-wp-rest-post-search-handler.php';\nrequire ABSPATH . WPINC . '/rest-api/search/class-wp-rest-term-search-handler.php';\nrequire ABSPATH . WPINC . '/rest-api/search/class-wp-rest-post-format-search-handler.php';\nrequire ABSPATH . WPINC . '/sitemaps.php';\nrequire ABSPATH . WPINC . '/sitemaps/class-wp-sitemaps.php';\nrequire ABSPATH . WPINC . '/sitemaps/class-wp-sitemaps-index.php';\nrequire ABSPATH . WPINC . '/sitemaps/class-wp-sitemaps-provider.php';\nrequire ABSPATH . WPINC . '/sitemaps/class-wp-sitemaps-registry.php';\nrequire ABSPATH . WPINC . '/sitemaps/class-wp-sitemaps-renderer.php';\nrequire ABSPATH . WPINC . '/sitemaps/class-wp-sitemaps-stylesheet.php';\nrequire ABSPATH . WPINC . '/sitemaps/providers/class-wp-sitemaps-posts.php';\nrequire ABSPATH . WPINC . '/sitemaps/providers/class-wp-sitemaps-taxonomies.php';\nrequire ABSPATH . WPINC . '/sitemaps/providers/class-wp-sitemaps-users.php';\nrequire ABSPATH . WPINC . '/class-wp-block-bindings-source.php';\nrequire ABSPATH . WPINC . '/class-wp-block-bindings-registry.php';\nrequire ABSPATH . WPINC . '/class-wp-block-editor-context.php';\nrequire ABSPATH . WPINC . '/class-wp-block-type.php';\nrequire ABSPATH . WPINC . '/class-wp-block-pattern-categories-registry.php';\nrequire ABSPATH . WPINC . '/class-wp-block-patterns-registry.php';\nrequire ABSPATH . WPINC . '/class-wp-block-styles-registry.php';\nrequire ABSPATH . WPINC . '/class-wp-block-type-registry.php';\nrequire ABSPATH . WPINC . '/class-wp-block.php';\nrequire ABSPATH . WPINC . '/class-wp-block-list.php';\nrequire ABSPATH . WPINC . '/class-wp-block-metadata-registry.php';\nrequire ABSPATH . WPINC . '/class-wp-block-parser-block.php';\nrequire ABSPATH . WPINC . '/class-wp-block-parser-frame.php';\nrequire ABSPATH . WPINC . '/class-wp-block-parser.php';\nrequire ABSPATH . WPINC . '/class-wp-classic-to-block-menu-converter.php';\nrequire ABSPATH . WPINC . '/class-wp-navigation-fallback.php';\nrequire ABSPATH . WPINC . '/block-bindings.php';\nrequire ABSPATH . WPINC . '/block-bindings/pattern-overrides.php';\nrequire ABSPATH . WPINC . '/block-bindings/post-meta.php';\nrequire ABSPATH . WPINC . '/blocks.php';\nrequire ABSPATH . WPINC . '/blocks/index.php';\nrequire ABSPATH . WPINC . '/block-editor.php';\nrequire ABSPATH . WPINC . '/block-patterns.php';\nrequire ABSPATH . WPINC . '/class-wp-block-supports.php';\nrequire ABSPATH . WPINC . '/block-supports/utils.php';\nrequire ABSPATH . WPINC . '/block-supports/align.php';\nrequire ABSPATH . WPINC . '/block-supports/custom-classname.php';\nrequire ABSPATH . WPINC . '/block-supports/generated-classname.php';\nrequire ABSPATH . WPINC . '/block-supports/settings.php';\nrequire ABSPATH . WPINC . '/block-supports/elements.php';\nrequire ABSPATH . WPINC . '/block-supports/colors.php';\nrequire ABSPATH . WPINC . '/block-supports/typography.php';\nrequire ABSPATH . WPINC . '/block-supports/border.php';\nrequire ABSPATH . WPINC . '/block-supports/layout.php';\nrequire ABSPATH . WPINC . '/block-supports/position.php';\nrequire ABSPATH . WPINC . '/block-supports/spacing.php';\nrequire ABSPATH . WPINC . '/block-supports/dimensions.php';\nrequire ABSPATH . WPINC . '/block-supports/duotone.php';\nrequire ABSPATH . WPINC . '/block-supports/shadow.php';\nrequire ABSPATH . WPINC . '/block-supports/background.php';\nrequire ABSPATH . WPINC . '/block-supports/block-style-variations.php';\nrequire ABSPATH . WPINC . '/style-engine.php';\nrequire ABSPATH . WPINC . '/style-engine/class-wp-style-engine.php';\nrequire ABSPATH . WPINC . '/style-engine/class-wp-style-engine-css-declarations.php';\nrequire ABSPATH . WPINC . '/style-engine/class-wp-style-engine-css-rule.php';\nrequire ABSPATH . WPINC . '/style-engine/class-wp-style-engine-css-rules-store.php';\nrequire ABSPATH . WPINC . '/style-engine/class-wp-style-engine-processor.php';\nrequire ABSPATH . WPINC . '/fonts/class-wp-font-face-resolver.php';\nrequire ABSPATH . WPINC . '/fonts/class-wp-font-collection.php';\nrequire ABSPATH . WPINC . '/fonts/class-wp-font-face.php';\nrequire ABSPATH . WPINC . '/fonts/class-wp-font-library.php';\nrequire ABSPATH . WPINC . '/fonts/class-wp-font-utils.php';\nrequire ABSPATH . WPINC . '/fonts.php';\nrequire ABSPATH . WPINC . '/class-wp-script-modules.php';\nrequire ABSPATH . WPINC . '/script-modules.php';\nrequire ABSPATH . WPINC . '/interactivity-api/class-wp-interactivity-api.php';\nrequire ABSPATH . WPINC . '/interactivity-api/class-wp-interactivity-api-directives-processor.php';\nrequire ABSPATH . WPINC . '/interactivity-api/interactivity-api.php';\nrequire ABSPATH . WPINC . '/class-wp-plugin-dependencies.php';\n\nadd_action( 'after_setup_theme', array( wp_script_modules(), 'add_hooks' ) );\nadd_action( 'after_setup_theme', array( wp_interactivity(), 'add_hooks' ) );\n\n/**\n * @since 3.3.0\n *\n * @global WP_Embed $wp_embed WordPress Embed object.\n */\n$GLOBALS['wp_embed'] = new WP_Embed();\n\n/**\n * WordPress Textdomain Registry object.\n *\n * Used to support just-in-time translations for manually loaded text domains.\n *\n * @since 6.1.0\n *\n * @global WP_Textdomain_Registry $wp_textdomain_registry WordPress Textdomain Registry.\n */\n$GLOBALS['wp_textdomain_registry'] = new WP_Textdomain_Registry();\n$GLOBALS['wp_textdomain_registry']->init();\n\n// Load multisite-specific files.\nif ( is_multisite() ) {\n\trequire ABSPATH . WPINC . '/ms-functions.php';\n\trequire ABSPATH . WPINC . '/ms-default-filters.php';\n\trequire ABSPATH . WPINC . '/ms-deprecated.php';\n}\n\n// Define constants that rely on the API to obtain the default value.\n// Define must-use plugin directory constants, which may be overridden in the sunrise.php drop-in.\nwp_plugin_directory_constants();\n\n/**\n * @since 3.9.0\n *\n * @global array $wp_plugin_paths\n */\n$GLOBALS['wp_plugin_paths'] = array();\n\n// Load must-use plugins.\nforeach ( wp_get_mu_plugins() as $mu_plugin ) {\n\t$_wp_plugin_file = $mu_plugin;\n\tinclude_once $mu_plugin;\n\t$mu_plugin = $_wp_plugin_file; // Avoid stomping of the $mu_plugin variable in a plugin.\n\n\t/**\n\t * Fires once a single must-use plugin has loaded.\n\t *\n\t * @since 5.1.0\n\t *\n\t * @param string $mu_plugin Full path to the plugin's main file.\n\t */\n\tdo_action( 'mu_plugin_loaded', $mu_plugin );\n}\nunset( $mu_plugin, $_wp_plugin_file );\n\n// Load network activated plugins.\nif ( is_multisite() ) {\n\tforeach ( wp_get_active_network_plugins() as $network_plugin ) {\n\t\twp_register_plugin_realpath( $network_plugin );\n\n\t\t$_wp_plugin_file = $network_plugin;\n\t\tinclude_once $network_plugin;\n\t\t$network_plugin = $_wp_plugin_file; // Avoid stomping of the $network_plugin variable in a plugin.\n\n\t\t/**\n\t\t * Fires once a single network-activated plugin has loaded.\n\t\t *\n\t\t * @since 5.1.0\n\t\t *\n\t\t * @param string $network_plugin Full path to the plugin's main file.\n\t\t */\n\t\tdo_action( 'network_plugin_loaded', $network_plugin );\n\t}\n\tunset( $network_plugin, $_wp_plugin_file );\n}\n\n/**\n * Fires once all must-use and network-activated plugins have loaded.\n *\n * @since 2.8.0\n */\ndo_action( 'muplugins_loaded' );\n\nif ( is_multisite() ) {\n\tms_cookie_constants();\n}\n\n// Define constants after multisite is loaded.\nwp_cookie_constants();\n\n// Define and enforce our SSL constants.\nwp_ssl_constants();\n\n// Create common globals.\nrequire ABSPATH . WPINC . '/vars.php';\n\n// Make taxonomies and posts available to plugins and themes.\n// @plugin authors: warning: these get registered again on the init hook.\ncreate_initial_taxonomies();\ncreate_initial_post_types();\n\nwp_start_scraping_edited_file_errors();\n\n// Register the default theme directory root.\nregister_theme_directory( get_theme_root() );\n\nif ( ! is_multisite() && wp_is_fatal_error_handler_enabled() ) {\n\t// Handle users requesting a recovery mode link and initiating recovery mode.\n\twp_recovery_mode()->initialize();\n}\n\n// To make get_plugin_data() available in a way that's compatible with plugins also loading this file, see #62244.\nrequire_once ABSPATH . 'wp-admin/includes/plugin.php';\n\n// Load active plugins.\nforeach ( wp_get_active_and_valid_plugins() as $plugin ) {\n\twp_register_plugin_realpath( $plugin );\n\n\t$_wp_plugin_file = $plugin;\n\tinclude_once $plugin;\n\t$plugin = $_wp_plugin_file; // Avoid stomping of the $plugin variable in a plugin.\n\n\t/**\n\t * Fires once a single activated plugin has loaded.\n\t *\n\t * @since 5.1.0\n\t *\n\t * @param string $plugin Full path to the plugin's main file.\n\t */\n\tdo_action( 'plugin_loaded', $plugin );\n\n\t$plugin_data = get_plugin_data( $plugin, false, false );\n\n\t$textdomain = $plugin_data['TextDomain'];\n\tif ( $textdomain ) {\n\t\tif ( $plugin_data['DomainPath'] ) {\n\t\t\t$GLOBALS['wp_textdomain_registry']->set_custom_path( $textdomain, dirname( $plugin ) . $plugin_data['DomainPath'] );\n\t\t} else {\n\t\t\t$GLOBALS['wp_textdomain_registry']->set_custom_path( $textdomain, dirname( $plugin ) );\n\t\t}\n\t}\n}\nunset( $plugin, $_wp_plugin_file, $plugin_data, $textdomain );\n\n// Load pluggable functions.\nrequire ABSPATH . WPINC . '/pluggable.php';\nrequire ABSPATH . WPINC . '/pluggable-deprecated.php';\n\n// Set internal encoding.\nwp_set_internal_encoding();\n\n// Run wp_cache_postload() if object cache is enabled and the function exists.\nif ( WP_CACHE && function_exists( 'wp_cache_postload' ) ) {\n\twp_cache_postload();\n}\n\n/**\n * Fires once activated plugins have loaded.\n *\n * Pluggable functions are also available at this point in the loading order.\n *\n * @since 1.5.0\n */\ndo_action( 'plugins_loaded' );\n\n// Define constants which affect functionality if not already defined.\nwp_functionality_constants();\n\n// Add magic quotes and set up $_REQUEST ( $_GET + $_POST ).\nwp_magic_quotes();\n\n/**\n * Fires when comment cookies are sanitized.\n *\n * @since 2.0.11\n */\ndo_action( 'sanitize_comment_cookies' );\n\n/**\n * WordPress Query object\n *\n * @since 2.0.0\n *\n * @global WP_Query $wp_the_query WordPress Query object.\n */\n$GLOBALS['wp_the_query'] = new WP_Query();\n\n/**\n * Holds the reference to {@see $wp_the_query}.\n * Use this global for WordPress queries\n *\n * @since 1.5.0\n *\n * @global WP_Query $wp_query WordPress Query object.\n */\n$GLOBALS['wp_query'] = $GLOBALS['wp_the_query'];\n\n/**\n * Holds the WordPress Rewrite object for creating pretty URLs\n *\n * @since 1.5.0\n *\n * @global WP_Rewrite $wp_rewrite WordPress rewrite component.\n */\n$GLOBALS['wp_rewrite'] = new WP_Rewrite();\n\n/**\n * WordPress Object\n *\n * @since 2.0.0\n *\n * @global WP $wp Current WordPress environment instance.\n */\n$GLOBALS['wp'] = new WP();\n\n/**\n * WordPress Widget Factory Object\n *\n * @since 2.8.0\n *\n * @global WP_Widget_Factory $wp_widget_factory\n */\n$GLOBALS['wp_widget_factory'] = new WP_Widget_Factory();\n\n/**\n * WordPress User Roles\n *\n * @since 2.0.0\n *\n * @global WP_Roles $wp_roles WordPress role management object.\n */\n$GLOBALS['wp_roles'] = new WP_Roles();\n\n/**\n * Fires before the theme is loaded.\n *\n * @since 2.6.0\n */\ndo_action( 'setup_theme' );\n\n// Define the template related constants and globals.\nwp_templating_constants();\nwp_set_template_globals();\n\n// Load the default text localization domain.\nload_default_textdomain();\n\n$locale      = get_locale();\n$locale_file = WP_LANG_DIR . \"/$locale.php\";\nif ( ( 0 === validate_file( $locale ) ) && is_readable( $locale_file ) ) {\n\trequire $locale_file;\n}\nunset( $locale_file );\n\n/**\n * WordPress Locale object for loading locale domain date and various strings.\n *\n * @since 2.1.0\n *\n * @global WP_Locale $wp_locale WordPress date and time locale object.\n */\n$GLOBALS['wp_locale'] = new WP_Locale();\n\n/**\n * WordPress Locale Switcher object for switching locales.\n *\n * @since 4.7.0\n *\n * @global WP_Locale_Switcher $wp_locale_switcher WordPress locale switcher object.\n */\n$GLOBALS['wp_locale_switcher'] = new WP_Locale_Switcher();\n$GLOBALS['wp_locale_switcher']->init();\n\n// Load the functions for the active theme, for both parent and child theme if applicable.\nforeach ( wp_get_active_and_valid_themes() as $theme ) {\n\t$wp_theme = wp_get_theme( basename( $theme ) );\n\n\tif ( file_exists( $theme . '/functions.php' ) ) {\n\t\tinclude $theme . '/functions.php';\n\t}\n\n\t$wp_theme->load_textdomain();\n}\nunset( $theme, $wp_theme );\n\n/**\n * Fires after the theme is loaded.\n *\n * @since 3.0.0\n */\ndo_action( 'after_setup_theme' );\n\n// Create an instance of WP_Site_Health so that Cron events may fire.\nif ( ! class_exists( 'WP_Site_Health' ) ) {\n\trequire_once ABSPATH . 'wp-admin/includes/class-wp-site-health.php';\n}\nWP_Site_Health::get_instance();\n\n// Set up current user.\n$GLOBALS['wp']->init();\n\n/**\n * Fires after WordPress has finished loading but before any headers are sent.\n *\n * Most of WP is loaded at this stage, and the user is authenticated. WP continues\n * to load on the {@see 'init'} hook that follows (e.g. widgets), and many plugins instantiate\n * themselves on it for all sorts of reasons (e.g. they need a user, a taxonomy, etc.).\n *\n * If you wish to plug an action once WP is loaded, use the {@see 'wp_loaded'} hook below.\n *\n * @since 1.5.0\n */\ndo_action( 'init' );\n\n// Check site status.\nif ( is_multisite() ) {\n\t$file = ms_site_check();\n\tif ( true !== $file ) {\n\t\trequire $file;\n\t\tdie();\n\t}\n\tunset( $file );\n}\n\n/**\n * This hook is fired once WP, all plugins, and the theme are fully loaded and instantiated.\n *\n * Ajax requests should use wp-admin/admin-ajax.php. admin-ajax.php can handle requests for\n * users not logged in.\n *\n * @link https://developer.wordpress.org/plugins/javascript/ajax\n *\n * @since 3.0.0\n */\ndo_action( 'wp_loaded' );\n"
        },
        {
          "name": "wp-signup.php",
          "type": "blob",
          "size": 33.724609375,
          "content": "<?php\n/**\n * WordPress Signup Page\n *\n * Handles the user registration and site creation process for multisite installations.\n *\n * @package WordPress\n */\n\n/** Sets up the WordPress Environment. */\nrequire __DIR__ . '/wp-load.php';\n\nadd_filter( 'wp_robots', 'wp_robots_no_robots' );\n\nrequire __DIR__ . '/wp-blog-header.php';\n\nnocache_headers();\n\nif ( is_array( get_site_option( 'illegal_names' ) ) && isset( $_GET['new'] ) && in_array( $_GET['new'], get_site_option( 'illegal_names' ), true ) ) {\n\twp_redirect( network_home_url() );\n\tdie();\n}\n\n/**\n * Prints signup_header via wp_head.\n *\n * @since MU (3.0.0)\n */\nfunction do_signup_header() {\n\t/**\n\t * Fires within the head section of the site sign-up screen.\n\t *\n\t * @since 3.0.0\n\t */\n\tdo_action( 'signup_header' );\n}\nadd_action( 'wp_head', 'do_signup_header' );\n\nif ( ! is_multisite() ) {\n\twp_redirect( wp_registration_url() );\n\tdie();\n}\n\nif ( ! is_main_site() ) {\n\twp_redirect( network_site_url( 'wp-signup.php' ) );\n\tdie();\n}\n\n// Fix for page title.\n$wp_query->is_404 = false;\n\n/**\n * Fires before the Site Sign-up page is loaded.\n *\n * @since 4.4.0\n */\ndo_action( 'before_signup_header' );\n\n/**\n * Prints styles for front-end Multisite Sign-up pages.\n *\n * @since MU (3.0.0)\n */\nfunction wpmu_signup_stylesheet() {\n\t?>\n\t<style type=\"text/css\">\n\t\t.mu_register { width: 90%; margin: 0 auto; }\n\t\t.mu_register form { margin-top: 2em; }\n\t\t.mu_register fieldset,\n\t\t\t.mu_register legend { margin: 0; padding: 0; border: none; }\n\t\t.mu_register .error { font-weight: 600; padding: 10px; color: #333; background: #ffebe8; border: 1px solid #c00; }\n\t\t.mu_register input[type=\"submit\"],\n\t\t\t.mu_register #blog_title,\n\t\t\t.mu_register #user_email,\n\t\t\t.mu_register #blogname,\n\t\t\t.mu_register #user_name { width: 100%; font-size: 24px; margin: 5px 0; box-sizing: border-box; }\n\t\t.mu_register #site-language { display: block; }\n\t\t.mu_register .prefix_address,\n\t\t\t.mu_register .suffix_address { font-size: 18px; display: inline-block; direction: ltr; }\n\t\t.mu_register label,\n\t\t\t.mu_register legend,\n\t\t\t.mu_register .label-heading { font-weight: 600; font-size: 15px; display: block; margin: 10px 0; }\n\t\t.mu_register legend + p,\n\t\t\t.mu_register input + p { margin-top: 0; }\n\t\t.mu_register label.checkbox { display: inline; }\n\t\t.mu_register .mu_alert { font-weight: 600; padding: 10px; color: #333; background: #ffffe0; border: 1px solid #e6db55; }\n\t\t.mu_register .mu_alert a { color: inherit; text-decoration: underline; }\n\t\t.mu_register .signup-options .wp-signup-radio-button { display: block; }\n\t\t.mu_register .privacy-intro .wp-signup-radio-button { margin-right: 0.5em; }\n\t\t.rtl .mu_register .wp-signup-blogname { direction: ltr; text-align: right; }\n\t</style>\n\t<?php\n}\nadd_action( 'wp_head', 'wpmu_signup_stylesheet' );\n\nget_header( 'wp-signup' );\n\n/**\n * Fires before the site Sign-up form.\n *\n * @since 3.0.0\n */\ndo_action( 'before_signup_form' );\n?>\n<div id=\"signup-content\" class=\"widecolumn\">\n<div class=\"mu_register wp-signup-container\" role=\"main\">\n<?php\n/**\n * Generates and displays the Sign-up and Create Site forms.\n *\n * @since MU (3.0.0)\n *\n * @param string          $blogname   The new site name.\n * @param string          $blog_title The new site title.\n * @param WP_Error|string $errors     A WP_Error object containing existing errors. Defaults to empty string.\n */\nfunction show_blog_form( $blogname = '', $blog_title = '', $errors = '' ) {\n\tif ( ! is_wp_error( $errors ) ) {\n\t\t$errors = new WP_Error();\n\t}\n\n\t$current_network = get_network();\n\t// Site name.\n\tif ( ! is_subdomain_install() ) {\n\t\techo '<label for=\"blogname\">' . __( 'Site Name (subdirectory only):' ) . '</label>';\n\t} else {\n\t\techo '<label for=\"blogname\">' . __( 'Site Domain (subdomain only):' ) . '</label>';\n\t}\n\n\t$errmsg_blogname      = $errors->get_error_message( 'blogname' );\n\t$errmsg_blogname_aria = '';\n\tif ( $errmsg_blogname ) {\n\t\t$errmsg_blogname_aria = 'wp-signup-blogname-error ';\n\t\techo '<p class=\"error\" id=\"wp-signup-blogname-error\">' . $errmsg_blogname . '</p>';\n\t}\n\n\tif ( ! is_subdomain_install() ) {\n\t\techo '<div class=\"wp-signup-blogname\"><span class=\"prefix_address\" id=\"prefix-address\">' . $current_network->domain . $current_network->path . '</span><input name=\"blogname\" type=\"text\" id=\"blogname\" value=\"' . esc_attr( $blogname ) . '\" maxlength=\"60\" autocomplete=\"off\" required=\"required\" aria-describedby=\"' . $errmsg_blogname_aria . 'prefix-address\" /></div>';\n\t} else {\n\t\t$site_domain = preg_replace( '|^www\\.|', '', $current_network->domain );\n\t\techo '<div class=\"wp-signup-blogname\"><input name=\"blogname\" type=\"text\" id=\"blogname\" value=\"' . esc_attr( $blogname ) . '\" maxlength=\"60\" autocomplete=\"off\" required=\"required\" aria-describedby=\"' . $errmsg_blogname_aria . 'suffix-address\" /><span class=\"suffix_address\" id=\"suffix-address\">.' . esc_html( $site_domain ) . '</span></div>';\n\t}\n\n\tif ( ! is_user_logged_in() ) {\n\t\tif ( ! is_subdomain_install() ) {\n\t\t\t$site = $current_network->domain . $current_network->path . __( 'sitename' );\n\t\t} else {\n\t\t\t$site = __( 'domain' ) . '.' . $site_domain . $current_network->path;\n\t\t}\n\n\t\tprintf(\n\t\t\t'<p>(<strong>%s</strong>) %s</p>',\n\t\t\t/* translators: %s: Site address. */\n\t\t\tsprintf( __( 'Your address will be %s.' ), $site ),\n\t\t\t__( 'Must be at least 4 characters, letters and numbers only. It cannot be changed, so choose carefully!' )\n\t\t);\n\t}\n\n\t// Site Title.\n\t?>\n\t<label for=\"blog_title\"><?php _e( 'Site Title:' ); ?></label>\n\t<?php\n\t$errmsg_blog_title      = $errors->get_error_message( 'blog_title' );\n\t$errmsg_blog_title_aria = '';\n\tif ( $errmsg_blog_title ) {\n\t\t$errmsg_blog_title_aria = ' aria-describedby=\"wp-signup-blog-title-error\"';\n\t\techo '<p class=\"error\" id=\"wp-signup-blog-title-error\">' . $errmsg_blog_title . '</p>';\n\t}\n\techo '<input name=\"blog_title\" type=\"text\" id=\"blog_title\" value=\"' . esc_attr( $blog_title ) . '\" required=\"required\" autocomplete=\"off\"' . $errmsg_blog_title_aria . ' />';\n\t?>\n\n\t<?php\n\t// Site Language.\n\t$languages = signup_get_available_languages();\n\n\tif ( ! empty( $languages ) ) :\n\t\t?>\n\t\t<p>\n\t\t\t<label for=\"site-language\"><?php _e( 'Site Language:' ); ?></label>\n\t\t\t<?php\n\t\t\t// Network default.\n\t\t\t$lang = get_site_option( 'WPLANG' );\n\n\t\t\tif ( isset( $_POST['WPLANG'] ) ) {\n\t\t\t\t$lang = $_POST['WPLANG'];\n\t\t\t}\n\n\t\t\t// Use US English if the default isn't available.\n\t\t\tif ( ! in_array( $lang, $languages, true ) ) {\n\t\t\t\t$lang = '';\n\t\t\t}\n\n\t\t\twp_dropdown_languages(\n\t\t\t\tarray(\n\t\t\t\t\t'name'                        => 'WPLANG',\n\t\t\t\t\t'id'                          => 'site-language',\n\t\t\t\t\t'selected'                    => $lang,\n\t\t\t\t\t'languages'                   => $languages,\n\t\t\t\t\t'show_available_translations' => false,\n\t\t\t\t)\n\t\t\t);\n\t\t\t?>\n\t\t</p>\n\t\t<?php\n\t\tendif; // Languages.\n\n\t\t$blog_public_on_checked  = '';\n\t\t$blog_public_off_checked = '';\n\tif ( isset( $_POST['blog_public'] ) && '0' === $_POST['blog_public'] ) {\n\t\t$blog_public_off_checked = 'checked=\"checked\"';\n\t} else {\n\t\t$blog_public_on_checked = 'checked=\"checked\"';\n\t}\n\t?>\n\n\t<div id=\"privacy\">\n\t\t<fieldset class=\"privacy-intro\">\n\t\t\t<legend>\n\t\t\t\t<span class=\"label-heading\"><?php _e( 'Privacy:' ); ?></span>\n\t\t\t\t<?php _e( 'Allow search engines to index this site.' ); ?>\n\t\t\t</legend>\n\t\t\t<p class=\"wp-signup-radio-buttons\">\n\t\t\t\t<span class=\"wp-signup-radio-button\">\n\t\t\t\t\t<input type=\"radio\" id=\"blog_public_on\" name=\"blog_public\" value=\"1\" <?php echo $blog_public_on_checked; ?> />\n\t\t\t\t\t<label class=\"checkbox\" for=\"blog_public_on\"><?php _e( 'Yes' ); ?></label>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"wp-signup-radio-button\">\n\t\t\t\t\t<input type=\"radio\" id=\"blog_public_off\" name=\"blog_public\" value=\"0\" <?php echo $blog_public_off_checked; ?> />\n\t\t\t\t\t<label class=\"checkbox\" for=\"blog_public_off\"><?php _e( 'No' ); ?></label>\n\t\t\t\t</span>\n\t\t\t</p>\n\t\t</fieldset>\n\t</div>\n\n\t<?php\n\t/**\n\t * Fires after the site sign-up form.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param WP_Error $errors A WP_Error object possibly containing 'blogname' or 'blog_title' errors.\n\t */\n\tdo_action( 'signup_blogform', $errors );\n}\n\n/**\n * Validates the new site sign-up.\n *\n * @since MU (3.0.0)\n *\n * @return array Contains the new site data and error messages.\n *               See wpmu_validate_blog_signup() for details.\n */\nfunction validate_blog_form() {\n\t$user = '';\n\tif ( is_user_logged_in() ) {\n\t\t$user = wp_get_current_user();\n\t}\n\n\treturn wpmu_validate_blog_signup( $_POST['blogname'], $_POST['blog_title'], $user );\n}\n\n/**\n * Displays the fields for the new user account registration form.\n *\n * @since MU (3.0.0)\n *\n * @param string          $user_name  The entered username.\n * @param string          $user_email The entered email address.\n * @param WP_Error|string $errors     A WP_Error object containing existing errors. Defaults to empty string.\n */\nfunction show_user_form( $user_name = '', $user_email = '', $errors = '' ) {\n\tif ( ! is_wp_error( $errors ) ) {\n\t\t$errors = new WP_Error();\n\t}\n\n\t// Username.\n\techo '<label for=\"user_name\">' . __( 'Username:' ) . '</label>';\n\t$errmsg_username      = $errors->get_error_message( 'user_name' );\n\t$errmsg_username_aria = '';\n\tif ( $errmsg_username ) {\n\t\t$errmsg_username_aria = 'wp-signup-username-error ';\n\t\techo '<p class=\"error\" id=\"wp-signup-username-error\">' . $errmsg_username . '</p>';\n\t}\n\t?>\n\t<input name=\"user_name\" type=\"text\" id=\"user_name\" value=\"<?php echo esc_attr( $user_name ); ?>\" autocapitalize=\"none\" autocorrect=\"off\" maxlength=\"60\" autocomplete=\"username\" required=\"required\" aria-describedby=\"<?php echo $errmsg_username_aria; ?>wp-signup-username-description\" />\n\t<p id=\"wp-signup-username-description\"><?php _e( '(Must be at least 4 characters, lowercase letters and numbers only.)' ); ?></p>\n\n\t<?php\n\t// Email address.\n\techo '<label for=\"user_email\">' . __( 'Email&nbsp;Address:' ) . '</label>';\n\t$errmsg_email      = $errors->get_error_message( 'user_email' );\n\t$errmsg_email_aria = '';\n\tif ( $errmsg_email ) {\n\t\t$errmsg_email_aria = 'wp-signup-email-error ';\n\t\techo '<p class=\"error\" id=\"wp-signup-email-error\">' . $errmsg_email . '</p>';\n\t}\n\t?>\n\t<input name=\"user_email\" type=\"email\" id=\"user_email\" value=\"<?php echo esc_attr( $user_email ); ?>\" maxlength=\"200\" autocomplete=\"email\" required=\"required\" aria-describedby=\"<?php echo $errmsg_email_aria; ?>wp-signup-email-description\" />\n\t<p id=\"wp-signup-email-description\"><?php _e( 'Your registration email is sent to this address. (Double-check your email address before continuing.)' ); ?></p>\n\n\t<?php\n\t// Extra fields.\n\t$errmsg_generic = $errors->get_error_message( 'generic' );\n\tif ( $errmsg_generic ) {\n\t\techo '<p class=\"error\" id=\"wp-signup-generic-error\">' . $errmsg_generic . '</p>';\n\t}\n\t/**\n\t * Fires at the end of the new user account registration form.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param WP_Error $errors A WP_Error object containing 'user_name' or 'user_email' errors.\n\t */\n\tdo_action( 'signup_extra_fields', $errors );\n}\n\n/**\n * Validates user sign-up name and email.\n *\n * @since MU (3.0.0)\n *\n * @return array Contains username, email, and error messages.\n *               See wpmu_validate_user_signup() for details.\n */\nfunction validate_user_form() {\n\treturn wpmu_validate_user_signup( $_POST['user_name'], $_POST['user_email'] );\n}\n\n/**\n * Shows a form for returning users to sign up for another site.\n *\n * @since MU (3.0.0)\n *\n * @param string          $blogname   The new site name\n * @param string          $blog_title The new site title.\n * @param WP_Error|string $errors     A WP_Error object containing existing errors. Defaults to empty string.\n */\nfunction signup_another_blog( $blogname = '', $blog_title = '', $errors = '' ) {\n\t$current_user = wp_get_current_user();\n\n\tif ( ! is_wp_error( $errors ) ) {\n\t\t$errors = new WP_Error();\n\t}\n\n\t$signup_defaults = array(\n\t\t'blogname'   => $blogname,\n\t\t'blog_title' => $blog_title,\n\t\t'errors'     => $errors,\n\t);\n\n\t/**\n\t * Filters the default site sign-up variables.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param array $signup_defaults {\n\t *     An array of default site sign-up variables.\n\t *\n\t *     @type string   $blogname   The site blogname.\n\t *     @type string   $blog_title The site title.\n\t *     @type WP_Error $errors     A WP_Error object possibly containing 'blogname' or 'blog_title' errors.\n\t * }\n\t */\n\t$filtered_results = apply_filters( 'signup_another_blog_init', $signup_defaults );\n\n\t$blogname   = $filtered_results['blogname'];\n\t$blog_title = $filtered_results['blog_title'];\n\t$errors     = $filtered_results['errors'];\n\n\t/* translators: %s: Network title. */\n\techo '<h2>' . sprintf( __( 'Get <em>another</em> %s site in seconds' ), get_network()->site_name ) . '</h2>';\n\n\tif ( $errors->has_errors() ) {\n\t\techo '<p>' . __( 'There was a problem, please correct the form below and try again.' ) . '</p>';\n\t}\n\t?>\n\t<p>\n\t\t<?php\n\t\tprintf(\n\t\t\t/* translators: %s: Current user's display name. */\n\t\t\t__( 'Welcome back, %s. By filling out the form below, you can <strong>add another site to your account</strong>. There is no limit to the number of sites you can have, so create to your heart&#8217;s content, but write responsibly!' ),\n\t\t\t$current_user->display_name\n\t\t);\n\t\t?>\n\t</p>\n\n\t<?php\n\t$blogs = get_blogs_of_user( $current_user->ID );\n\tif ( ! empty( $blogs ) ) {\n\t\t?>\n\n\t\t\t<p><?php _e( 'Sites you are already a member of:' ); ?></p>\n\t\t\t<ul>\n\t\t\t\t<?php\n\t\t\t\tforeach ( $blogs as $blog ) {\n\t\t\t\t\t$home_url = get_home_url( $blog->userblog_id );\n\t\t\t\t\techo '<li><a href=\"' . esc_url( $home_url ) . '\">' . $home_url . '</a></li>';\n\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</ul>\n\t<?php } ?>\n\n\t<p><?php _e( 'If you are not going to use a great site domain, leave it for a new user. Now have at it!' ); ?></p>\n\t<form id=\"setupform\" method=\"post\" action=\"wp-signup.php\">\n\t\t<input type=\"hidden\" name=\"stage\" value=\"gimmeanotherblog\" />\n\t\t<?php\n\t\t/**\n\t\t * Fires when hidden sign-up form fields output when creating another site or user.\n\t\t *\n\t\t * @since MU (3.0.0)\n\t\t *\n\t\t * @param string $context A string describing the steps of the sign-up process. The value can be\n\t\t *                        'create-another-site', 'validate-user', or 'validate-site'.\n\t\t */\n\t\tdo_action( 'signup_hidden_fields', 'create-another-site' );\n\t\t?>\n\t\t<?php show_blog_form( $blogname, $blog_title, $errors ); ?>\n\t\t<p class=\"submit\"><input type=\"submit\" name=\"submit\" class=\"submit\" value=\"<?php esc_attr_e( 'Create Site' ); ?>\" /></p>\n\t</form>\n\t<?php\n}\n\n/**\n * Validates a new site sign-up for an existing user.\n *\n * @since MU (3.0.0)\n *\n * @global string   $blogname   The new site's subdomain or directory name.\n * @global string   $blog_title The new site's title.\n * @global WP_Error $errors     Existing errors in the global scope.\n * @global string   $domain     The new site's domain.\n * @global string   $path       The new site's path.\n *\n * @return null|bool True if site signup was validated, false on error.\n *                   The function halts all execution if the user is not logged in.\n */\nfunction validate_another_blog_signup() {\n\tglobal $blogname, $blog_title, $errors, $domain, $path;\n\t$current_user = wp_get_current_user();\n\tif ( ! is_user_logged_in() ) {\n\t\tdie();\n\t}\n\n\t$result = validate_blog_form();\n\n\t// Extracted values set/overwrite globals.\n\t$domain     = $result['domain'];\n\t$path       = $result['path'];\n\t$blogname   = $result['blogname'];\n\t$blog_title = $result['blog_title'];\n\t$errors     = $result['errors'];\n\n\tif ( $errors->has_errors() ) {\n\t\tsignup_another_blog( $blogname, $blog_title, $errors );\n\t\treturn false;\n\t}\n\n\t$public = (int) $_POST['blog_public'];\n\n\t$blog_meta_defaults = array(\n\t\t'lang_id' => 1,\n\t\t'public'  => $public,\n\t);\n\n\t// Handle the language setting for the new site.\n\tif ( ! empty( $_POST['WPLANG'] ) ) {\n\n\t\t$languages = signup_get_available_languages();\n\n\t\tif ( in_array( $_POST['WPLANG'], $languages, true ) ) {\n\t\t\t$language = wp_unslash( sanitize_text_field( $_POST['WPLANG'] ) );\n\n\t\t\tif ( $language ) {\n\t\t\t\t$blog_meta_defaults['WPLANG'] = $language;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Filters the new site meta variables.\n\t *\n\t * Use the {@see 'add_signup_meta'} filter instead.\n\t *\n\t * @since MU (3.0.0)\n\t * @deprecated 3.0.0 Use the {@see 'add_signup_meta'} filter instead.\n\t *\n\t * @param array $blog_meta_defaults An array of default blog meta variables.\n\t */\n\t$meta_defaults = apply_filters_deprecated( 'signup_create_blog_meta', array( $blog_meta_defaults ), '3.0.0', 'add_signup_meta' );\n\n\t/**\n\t * Filters the new default site meta variables.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param array $meta {\n\t *     An array of default site meta variables.\n\t *\n\t *     @type int $lang_id     The language ID.\n\t *     @type int $blog_public Whether search engines should be discouraged from indexing the site. 1 for true, 0 for false.\n\t * }\n\t */\n\t$meta = apply_filters( 'add_signup_meta', $meta_defaults );\n\n\t$blog_id = wpmu_create_blog( $domain, $path, $blog_title, $current_user->ID, $meta, get_current_network_id() );\n\n\tif ( is_wp_error( $blog_id ) ) {\n\t\treturn false;\n\t}\n\n\tconfirm_another_blog_signup( $domain, $path, $blog_title, $current_user->user_login, $current_user->user_email, $meta, $blog_id );\n\treturn true;\n}\n\n/**\n * Shows a message confirming that the new site has been created.\n *\n * @since MU (3.0.0)\n * @since 4.4.0 Added the `$blog_id` parameter.\n *\n * @param string $domain     The domain URL.\n * @param string $path       The site root path.\n * @param string $blog_title The site title.\n * @param string $user_name  The username.\n * @param string $user_email The user's email address.\n * @param array  $meta       Any additional meta from the {@see 'add_signup_meta'} filter in validate_blog_signup().\n * @param int    $blog_id    The site ID.\n */\nfunction confirm_another_blog_signup( $domain, $path, $blog_title, $user_name, $user_email = '', $meta = array(), $blog_id = 0 ) {\n\n\tif ( $blog_id ) {\n\t\tswitch_to_blog( $blog_id );\n\t\t$home_url  = home_url( '/' );\n\t\t$login_url = wp_login_url();\n\t\trestore_current_blog();\n\t} else {\n\t\t$home_url  = 'http://' . $domain . $path;\n\t\t$login_url = 'http://' . $domain . $path . 'wp-login.php';\n\t}\n\n\t$site = sprintf(\n\t\t'<a href=\"%1$s\">%2$s</a>',\n\t\tesc_url( $home_url ),\n\t\t$blog_title\n\t);\n\n\t?>\n\t<h2>\n\t<?php\n\t\t/* translators: %s: Site title. */\n\t\tprintf( __( 'The site %s is yours.' ), $site );\n\t?>\n\t</h2>\n\t<p>\n\t\t<?php\n\t\tprintf(\n\t\t\t/* translators: 1: Link to new site, 2: Login URL, 3: Username. */\n\t\t\t__( '%1$s is your new site. <a href=\"%2$s\">Log in</a> as &#8220;%3$s&#8221; using your existing password.' ),\n\t\t\tsprintf(\n\t\t\t\t'<a href=\"%s\">%s</a>',\n\t\t\t\tesc_url( $home_url ),\n\t\t\t\tuntrailingslashit( $domain . $path )\n\t\t\t),\n\t\t\tesc_url( $login_url ),\n\t\t\t$user_name\n\t\t);\n\t\t?>\n\t</p>\n\t<?php\n\t/**\n\t * Fires when the site or user sign-up process is complete.\n\t *\n\t * @since 3.0.0\n\t */\n\tdo_action( 'signup_finished' );\n}\n\n/**\n * Shows a form for a visitor to sign up for a new user account.\n *\n * @since MU (3.0.0)\n *\n * @global string $active_signup String that returns registration type. The value can be\n *                               'all', 'none', 'blog', or 'user'.\n *\n * @param string          $user_name  The username.\n * @param string          $user_email The user's email.\n * @param WP_Error|string $errors     A WP_Error object containing existing errors. Defaults to empty string.\n */\nfunction signup_user( $user_name = '', $user_email = '', $errors = '' ) {\n\tglobal $active_signup;\n\n\tif ( ! is_wp_error( $errors ) ) {\n\t\t$errors = new WP_Error();\n\t}\n\n\t$signup_for = isset( $_POST['signup_for'] ) ? esc_html( $_POST['signup_for'] ) : 'blog';\n\n\t$signup_user_defaults = array(\n\t\t'user_name'  => $user_name,\n\t\t'user_email' => $user_email,\n\t\t'errors'     => $errors,\n\t);\n\n\t/**\n\t * Filters the default user variables used on the user sign-up form.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param array $signup_user_defaults {\n\t *     An array of default user variables.\n\t *\n\t *     @type string   $user_name  The user username.\n\t *     @type string   $user_email The user email address.\n\t *     @type WP_Error $errors     A WP_Error object with possible errors relevant to the sign-up user.\n\t * }\n\t */\n\t$filtered_results = apply_filters( 'signup_user_init', $signup_user_defaults );\n\t$user_name        = $filtered_results['user_name'];\n\t$user_email       = $filtered_results['user_email'];\n\t$errors           = $filtered_results['errors'];\n\n\t?>\n\n\t<h2>\n\t<?php\n\t\t/* translators: %s: Name of the network. */\n\t\tprintf( __( 'Get your own %s account in seconds' ), get_network()->site_name );\n\t?>\n\t</h2>\n\t<form id=\"setupform\" method=\"post\" action=\"wp-signup.php\" novalidate=\"novalidate\">\n\t\t<input type=\"hidden\" name=\"stage\" value=\"validate-user-signup\" />\n\t\t<?php\n\t\t/** This action is documented in wp-signup.php */\n\t\tdo_action( 'signup_hidden_fields', 'validate-user' );\n\t\t?>\n\t\t<?php show_user_form( $user_name, $user_email, $errors ); ?>\n\n\t\t<?php if ( 'blog' === $active_signup ) : ?>\n\t\t\t<input id=\"signupblog\" type=\"hidden\" name=\"signup_for\" value=\"blog\" />\n\t\t<?php elseif ( 'user' === $active_signup ) : ?>\n\t\t\t<input id=\"signupblog\" type=\"hidden\" name=\"signup_for\" value=\"user\" />\n\t\t<?php else : ?>\n\t\t\t<fieldset class=\"signup-options\">\n\t\t\t\t<legend><?php _e( 'Create a site or only a username:' ); ?></legend>\n\t\t\t\t<p class=\"wp-signup-radio-buttons\">\n\t\t\t\t\t<span class=\"wp-signup-radio-button\">\n\t\t\t\t\t\t<input id=\"signupblog\" type=\"radio\" name=\"signup_for\" value=\"blog\" <?php checked( $signup_for, 'blog' ); ?> />\n\t\t\t\t\t\t<label class=\"checkbox\" for=\"signupblog\"><?php _e( 'Gimme a site!' ); ?></label>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"wp-signup-radio-button\">\n\t\t\t\t\t\t<input id=\"signupuser\" type=\"radio\" name=\"signup_for\" value=\"user\" <?php checked( $signup_for, 'user' ); ?> />\n\t\t\t\t\t\t<label class=\"checkbox\" for=\"signupuser\"><?php _e( 'Just a username, please.' ); ?></label>\n\t\t\t\t\t</span>\n\t\t\t\t</p>\n\t\t\t</fieldset>\n\t\t<?php endif; ?>\n\n\t\t<p class=\"submit\"><input type=\"submit\" name=\"submit\" class=\"submit\" value=\"<?php esc_attr_e( 'Next' ); ?>\" /></p>\n\t</form>\n\t<?php\n}\n\n/**\n * Validates the new user sign-up.\n *\n * @since MU (3.0.0)\n *\n * @return bool True if new user sign-up was validated, false on error.\n */\nfunction validate_user_signup() {\n\t$result     = validate_user_form();\n\t$user_name  = $result['user_name'];\n\t$user_email = $result['user_email'];\n\t$errors     = $result['errors'];\n\n\tif ( $errors->has_errors() ) {\n\t\tsignup_user( $user_name, $user_email, $errors );\n\t\treturn false;\n\t}\n\n\tif ( 'blog' === $_POST['signup_for'] ) {\n\t\tsignup_blog( $user_name, $user_email );\n\t\treturn false;\n\t}\n\n\t/** This filter is documented in wp-signup.php */\n\twpmu_signup_user( $user_name, $user_email, apply_filters( 'add_signup_meta', array() ) );\n\n\tconfirm_user_signup( $user_name, $user_email );\n\treturn true;\n}\n\n/**\n * Shows a message confirming that the new user has been registered and is awaiting activation.\n *\n * @since MU (3.0.0)\n *\n * @param string $user_name  The username.\n * @param string $user_email The user's email address.\n */\nfunction confirm_user_signup( $user_name, $user_email ) {\n\t?>\n\t<h2>\n\t<?php\n\t/* translators: %s: Username. */\n\tprintf( __( '%s is your new username' ), $user_name )\n\t?>\n\t</h2>\n\t<p><?php _e( 'But, before you can start using your new username, <strong>you must activate it</strong>.' ); ?></p>\n\t<p>\n\t<?php\n\t/* translators: %s: The user email address. */\n\tprintf( __( 'Check your inbox at %s and click on the given link.' ), '<strong>' . $user_email . '</strong>' );\n\t?>\n\t</p>\n\t<p><?php _e( 'If you do not activate your username within two days, you will have to sign up again.' ); ?></p>\n\t<?php\n\t/** This action is documented in wp-signup.php */\n\tdo_action( 'signup_finished' );\n}\n\n/**\n * Shows a form for a user or visitor to sign up for a new site.\n *\n * @since MU (3.0.0)\n *\n * @param string          $user_name  The username.\n * @param string          $user_email The user's email address.\n * @param string          $blogname   The site name.\n * @param string          $blog_title The site title.\n * @param WP_Error|string $errors     A WP_Error object containing existing errors. Defaults to empty string.\n */\nfunction signup_blog( $user_name = '', $user_email = '', $blogname = '', $blog_title = '', $errors = '' ) {\n\tif ( ! is_wp_error( $errors ) ) {\n\t\t$errors = new WP_Error();\n\t}\n\n\t$signup_blog_defaults = array(\n\t\t'user_name'  => $user_name,\n\t\t'user_email' => $user_email,\n\t\t'blogname'   => $blogname,\n\t\t'blog_title' => $blog_title,\n\t\t'errors'     => $errors,\n\t);\n\n\t/**\n\t * Filters the default site creation variables for the site sign-up form.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param array $signup_blog_defaults {\n\t *     An array of default site creation variables.\n\t *\n\t *     @type string   $user_name  The user username.\n\t *     @type string   $user_email The user email address.\n\t *     @type string   $blogname   The blogname.\n\t *     @type string   $blog_title The title of the site.\n\t *     @type WP_Error $errors     A WP_Error object with possible errors relevant to new site creation variables.\n\t * }\n\t */\n\t$filtered_results = apply_filters( 'signup_blog_init', $signup_blog_defaults );\n\n\t$user_name  = $filtered_results['user_name'];\n\t$user_email = $filtered_results['user_email'];\n\t$blogname   = $filtered_results['blogname'];\n\t$blog_title = $filtered_results['blog_title'];\n\t$errors     = $filtered_results['errors'];\n\n\tif ( empty( $blogname ) ) {\n\t\t$blogname = $user_name;\n\t}\n\t?>\n\t<form id=\"setupform\" method=\"post\" action=\"wp-signup.php\">\n\t\t<input type=\"hidden\" name=\"stage\" value=\"validate-blog-signup\" />\n\t\t<input type=\"hidden\" name=\"user_name\" value=\"<?php echo esc_attr( $user_name ); ?>\" />\n\t\t<input type=\"hidden\" name=\"user_email\" value=\"<?php echo esc_attr( $user_email ); ?>\" />\n\t\t<?php\n\t\t/** This action is documented in wp-signup.php */\n\t\tdo_action( 'signup_hidden_fields', 'validate-site' );\n\t\t?>\n\t\t<?php show_blog_form( $blogname, $blog_title, $errors ); ?>\n\t\t<p class=\"submit\"><input type=\"submit\" name=\"submit\" class=\"submit\" value=\"<?php esc_attr_e( 'Sign up' ); ?>\" /></p>\n\t</form>\n\t<?php\n}\n\n/**\n * Validates new site signup.\n *\n * @since MU (3.0.0)\n *\n * @return bool True if the site sign-up was validated, false on error.\n */\nfunction validate_blog_signup() {\n\t// Re-validate user info.\n\t$user_result = wpmu_validate_user_signup( $_POST['user_name'], $_POST['user_email'] );\n\t$user_name   = $user_result['user_name'];\n\t$user_email  = $user_result['user_email'];\n\t$user_errors = $user_result['errors'];\n\n\tif ( $user_errors->has_errors() ) {\n\t\tsignup_user( $user_name, $user_email, $user_errors );\n\t\treturn false;\n\t}\n\n\t$result     = wpmu_validate_blog_signup( $_POST['blogname'], $_POST['blog_title'] );\n\t$domain     = $result['domain'];\n\t$path       = $result['path'];\n\t$blogname   = $result['blogname'];\n\t$blog_title = $result['blog_title'];\n\t$errors     = $result['errors'];\n\n\tif ( $errors->has_errors() ) {\n\t\tsignup_blog( $user_name, $user_email, $blogname, $blog_title, $errors );\n\t\treturn false;\n\t}\n\n\t$public      = (int) $_POST['blog_public'];\n\t$signup_meta = array(\n\t\t'lang_id' => 1,\n\t\t'public'  => $public,\n\t);\n\n\t// Handle the language setting for the new site.\n\tif ( ! empty( $_POST['WPLANG'] ) ) {\n\n\t\t$languages = signup_get_available_languages();\n\n\t\tif ( in_array( $_POST['WPLANG'], $languages, true ) ) {\n\t\t\t$language = wp_unslash( sanitize_text_field( $_POST['WPLANG'] ) );\n\n\t\t\tif ( $language ) {\n\t\t\t\t$signup_meta['WPLANG'] = $language;\n\t\t\t}\n\t\t}\n\t}\n\n\t/** This filter is documented in wp-signup.php */\n\t$meta = apply_filters( 'add_signup_meta', $signup_meta );\n\n\twpmu_signup_blog( $domain, $path, $blog_title, $user_name, $user_email, $meta );\n\tconfirm_blog_signup( $domain, $path, $blog_title, $user_name, $user_email, $meta );\n\treturn true;\n}\n\n/**\n * Shows a message confirming that the new site has been registered and is awaiting activation.\n *\n * @since MU (3.0.0)\n *\n * @param string $domain     The domain or subdomain of the site.\n * @param string $path       The path of the site.\n * @param string $blog_title The title of the new site.\n * @param string $user_name  The user's username.\n * @param string $user_email The user's email address.\n * @param array  $meta       Any additional meta from the {@see 'add_signup_meta'} filter in validate_blog_signup().\n */\nfunction confirm_blog_signup( $domain, $path, $blog_title, $user_name = '', $user_email = '', $meta = array() ) {\n\t?>\n\t<h2>\n\t<?php\n\t/* translators: %s: Site address. */\n\tprintf( __( 'Congratulations! Your new site, %s, is almost ready.' ), \"<a href='http://{$domain}{$path}'>{$blog_title}</a>\" )\n\t?>\n\t</h2>\n\n\t<p><?php _e( 'But, before you can start using your site, <strong>you must activate it</strong>.' ); ?></p>\n\t<p>\n\t<?php\n\t/* translators: %s: The user email address. */\n\tprintf( __( 'Check your inbox at %s and click on the given link.' ), '<strong>' . $user_email . '</strong>' );\n\t?>\n\t</p>\n\t<p><?php _e( 'If you do not activate your site within two days, you will have to sign up again.' ); ?></p>\n\t<h2><?php _e( 'Still waiting for your email?' ); ?></h2>\n\t<p><?php _e( 'If you have not received your email yet, there are a number of things you can do:' ); ?></p>\n\t<ul id=\"noemail-tips\">\n\t\t<li><p><strong><?php _e( 'Wait a little longer. Sometimes delivery of email can be delayed by processes outside of our control.' ); ?></strong></p></li>\n\t\t<li><p><?php _e( 'Check the junk or spam folder of your email client. Sometime emails wind up there by mistake.' ); ?></p></li>\n\t\t<li>\n\t\t<?php\n\t\t\t/* translators: %s: Email address. */\n\t\t\tprintf( __( 'Have you entered your email correctly? You have entered %s, if it&#8217;s incorrect, you will not receive your email.' ), $user_email );\n\t\t?>\n\t\t</li>\n\t</ul>\n\t<?php\n\t/** This action is documented in wp-signup.php */\n\tdo_action( 'signup_finished' );\n}\n\n/**\n * Retrieves languages available during the site/user sign-up process.\n *\n * @since 4.4.0\n *\n * @see get_available_languages()\n *\n * @return string[] Array of available language codes. Language codes are formed by\n *                  stripping the .mo extension from the language file names.\n */\nfunction signup_get_available_languages() {\n\t/**\n\t * Filters the list of available languages for front-end site sign-ups.\n\t *\n\t * Passing an empty array to this hook will disable output of the setting on the\n\t * sign-up form, and the default language will be used when creating the site.\n\t *\n\t * Languages not already installed will be stripped.\n\t *\n\t * @since 4.4.0\n\t *\n\t * @param string[] $languages Array of available language codes. Language codes are formed by\n\t *                            stripping the .mo extension from the language file names.\n\t */\n\t$languages = (array) apply_filters( 'signup_get_available_languages', get_available_languages() );\n\n\t/*\n\t * Strip any non-installed languages and return.\n\t *\n\t * Re-call get_available_languages() here in case a language pack was installed\n\t * in a callback hooked to the 'signup_get_available_languages' filter before this point.\n\t */\n\treturn array_intersect_assoc( $languages, get_available_languages() );\n}\n\n// Main.\n$active_signup = get_site_option( 'registration', 'none' );\n\n/**\n * Filters the type of site sign-up.\n *\n * @since 3.0.0\n *\n * @param string $active_signup String that returns registration type. The value can be\n *                              'all', 'none', 'blog', or 'user'.\n */\n$active_signup = apply_filters( 'wpmu_active_signup', $active_signup );\n\nif ( current_user_can( 'manage_network' ) ) {\n\techo '<div class=\"mu_alert\">';\n\t_e( 'Greetings Network Administrator!' );\n\techo ' ';\n\n\tswitch ( $active_signup ) {\n\t\tcase 'none':\n\t\t\t_e( 'The network currently disallows registrations.' );\n\t\t\tbreak;\n\t\tcase 'blog':\n\t\t\t_e( 'The network currently allows site registrations.' );\n\t\t\tbreak;\n\t\tcase 'user':\n\t\t\t_e( 'The network currently allows user registrations.' );\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t_e( 'The network currently allows both site and user registrations.' );\n\t\t\tbreak;\n\t}\n\n\techo ' ';\n\n\t/* translators: %s: URL to Network Settings screen. */\n\tprintf( __( 'To change or disable registration go to your <a href=\"%s\">Options page</a>.' ), esc_url( network_admin_url( 'settings.php' ) ) );\n\techo '</div>';\n}\n\n$newblogname = isset( $_GET['new'] ) ? strtolower( preg_replace( '/^-|-$|[^-a-zA-Z0-9]/', '', $_GET['new'] ) ) : null;\n\n$current_user = wp_get_current_user();\nif ( 'none' === $active_signup ) {\n\t_e( 'Registration has been disabled.' );\n} elseif ( 'blog' === $active_signup && ! is_user_logged_in() ) {\n\t$login_url = wp_login_url( network_site_url( 'wp-signup.php' ) );\n\t/* translators: %s: Login URL. */\n\tprintf( __( 'You must first <a href=\"%s\">log in</a>, and then you can create a new site.' ), $login_url );\n} else {\n\t$stage = isset( $_POST['stage'] ) ? $_POST['stage'] : 'default';\n\tswitch ( $stage ) {\n\t\tcase 'validate-user-signup':\n\t\t\tif ( 'all' === $active_signup\n\t\t\t\t|| ( 'blog' === $_POST['signup_for'] && 'blog' === $active_signup )\n\t\t\t\t|| ( 'user' === $_POST['signup_for'] && 'user' === $active_signup )\n\t\t\t) {\n\t\t\t\tvalidate_user_signup();\n\t\t\t} else {\n\t\t\t\t_e( 'User registration has been disabled.' );\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'validate-blog-signup':\n\t\t\tif ( 'all' === $active_signup || 'blog' === $active_signup ) {\n\t\t\t\tvalidate_blog_signup();\n\t\t\t} else {\n\t\t\t\t_e( 'Site registration has been disabled.' );\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'gimmeanotherblog':\n\t\t\tvalidate_another_blog_signup();\n\t\t\tbreak;\n\t\tcase 'default':\n\t\tdefault:\n\t\t\t$user_email = isset( $_POST['user_email'] ) ? $_POST['user_email'] : '';\n\t\t\t/**\n\t\t\t * Fires when the site sign-up form is sent.\n\t\t\t *\n\t\t\t * @since 3.0.0\n\t\t\t */\n\t\t\tdo_action( 'preprocess_signup_form' );\n\t\t\tif ( is_user_logged_in() && ( 'all' === $active_signup || 'blog' === $active_signup ) ) {\n\t\t\t\tsignup_another_blog( $newblogname );\n\t\t\t} elseif ( ! is_user_logged_in() && ( 'all' === $active_signup || 'user' === $active_signup ) ) {\n\t\t\t\tsignup_user( $newblogname, $user_email );\n\t\t\t} elseif ( ! is_user_logged_in() && ( 'blog' === $active_signup ) ) {\n\t\t\t\t_e( 'Sorry, new registrations are not allowed at this time.' );\n\t\t\t} else {\n\t\t\t\t_e( 'You are logged in already. No need to register again!' );\n\t\t\t}\n\n\t\t\tif ( $newblogname ) {\n\t\t\t\t$newblog = get_blogaddress_by_name( $newblogname );\n\n\t\t\t\tif ( 'blog' === $active_signup || 'all' === $active_signup ) {\n\t\t\t\t\tprintf(\n\t\t\t\t\t\t/* translators: %s: Site address. */\n\t\t\t\t\t\t'<p>' . __( 'The site you were looking for, %s, does not exist, but you can create it now!' ) . '</p>',\n\t\t\t\t\t\t'<strong>' . $newblog . '</strong>'\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tprintf(\n\t\t\t\t\t\t/* translators: %s: Site address. */\n\t\t\t\t\t\t'<p>' . __( 'The site you were looking for, %s, does not exist.' ) . '</p>',\n\t\t\t\t\t\t'<strong>' . $newblog . '</strong>'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n}\n?>\n</div>\n</div>\n<?php\n/**\n * Fires after the sign-up forms, before wp_footer.\n *\n * @since 3.0.0\n */\ndo_action( 'after_signup_form' );\n?>\n\n<?php\nget_footer( 'wp-signup' );\n"
        },
        {
          "name": "wp-trackback.php",
          "type": "blob",
          "size": 4.982421875,
          "content": "<?php\n/**\n * Handle Trackbacks and Pingbacks Sent to WordPress\n *\n * @since 0.71\n *\n * @package WordPress\n * @subpackage Trackbacks\n */\n\nif ( empty( $wp ) ) {\n\trequire_once __DIR__ . '/wp-load.php';\n\twp( array( 'tb' => '1' ) );\n}\n\n// Always run as an unauthenticated user.\nwp_set_current_user( 0 );\n\n/**\n * Response to a trackback.\n *\n * Responds with an error or success XML message.\n *\n * @since 0.71\n *\n * @param int|bool $error         Whether there was an error.\n *                                Default '0'. Accepts '0' or '1', true or false.\n * @param string   $error_message Error message if an error occurred. Default empty string.\n */\nfunction trackback_response( $error = 0, $error_message = '' ) {\n\theader( 'Content-Type: text/xml; charset=' . get_option( 'blog_charset' ) );\n\n\tif ( $error ) {\n\t\techo '<?xml version=\"1.0\" encoding=\"utf-8\"?' . \">\\n\";\n\t\techo \"<response>\\n\";\n\t\techo \"<error>1</error>\\n\";\n\t\techo \"<message>$error_message</message>\\n\";\n\t\techo '</response>';\n\t\tdie();\n\t} else {\n\t\techo '<?xml version=\"1.0\" encoding=\"utf-8\"?' . \">\\n\";\n\t\techo \"<response>\\n\";\n\t\techo \"<error>0</error>\\n\";\n\t\techo '</response>';\n\t}\n}\n\nif ( ! isset( $_GET['tb_id'] ) || ! $_GET['tb_id'] ) {\n\t$post_id = explode( '/', $_SERVER['REQUEST_URI'] );\n\t$post_id = (int) $post_id[ count( $post_id ) - 1 ];\n}\n\n$trackback_url = isset( $_POST['url'] ) ? $_POST['url'] : '';\n$charset       = isset( $_POST['charset'] ) ? $_POST['charset'] : '';\n\n// These three are stripslashed here so they can be properly escaped after mb_convert_encoding().\n$title     = isset( $_POST['title'] ) ? wp_unslash( $_POST['title'] ) : '';\n$excerpt   = isset( $_POST['excerpt'] ) ? wp_unslash( $_POST['excerpt'] ) : '';\n$blog_name = isset( $_POST['blog_name'] ) ? wp_unslash( $_POST['blog_name'] ) : '';\n\nif ( $charset ) {\n\t$charset = str_replace( array( ',', ' ' ), '', strtoupper( trim( $charset ) ) );\n\n\t// Validate the specified \"sender\" charset is available on the receiving site.\n\tif ( function_exists( 'mb_list_encodings' ) && ! in_array( $charset, mb_list_encodings(), true ) ) {\n\t\t$charset = '';\n\t}\n}\n\nif ( ! $charset ) {\n\t$charset = 'ASCII, UTF-8, ISO-8859-1, JIS, EUC-JP, SJIS';\n}\n\n// No valid uses for UTF-7.\nif ( str_contains( $charset, 'UTF-7' ) ) {\n\tdie;\n}\n\n// For international trackbacks.\nif ( function_exists( 'mb_convert_encoding' ) ) {\n\t$title     = mb_convert_encoding( $title, get_option( 'blog_charset' ), $charset );\n\t$excerpt   = mb_convert_encoding( $excerpt, get_option( 'blog_charset' ), $charset );\n\t$blog_name = mb_convert_encoding( $blog_name, get_option( 'blog_charset' ), $charset );\n}\n\n// Escape values to use in the trackback.\n$title     = wp_slash( $title );\n$excerpt   = wp_slash( $excerpt );\n$blog_name = wp_slash( $blog_name );\n\nif ( is_single() || is_page() ) {\n\t$post_id = $posts[0]->ID;\n}\n\nif ( ! isset( $post_id ) || ! (int) $post_id ) {\n\ttrackback_response( 1, __( 'I really need an ID for this to work.' ) );\n}\n\nif ( empty( $title ) && empty( $trackback_url ) && empty( $blog_name ) ) {\n\t// If it doesn't look like a trackback at all.\n\twp_redirect( get_permalink( $post_id ) );\n\texit;\n}\n\nif ( ! empty( $trackback_url ) && ! empty( $title ) ) {\n\t/**\n\t * Fires before the trackback is added to a post.\n\t *\n\t * @since 4.7.0\n\t *\n\t * @param int    $post_id       Post ID related to the trackback.\n\t * @param string $trackback_url Trackback URL.\n\t * @param string $charset       Character set.\n\t * @param string $title         Trackback title.\n\t * @param string $excerpt       Trackback excerpt.\n\t * @param string $blog_name     Site name.\n\t */\n\tdo_action( 'pre_trackback_post', $post_id, $trackback_url, $charset, $title, $excerpt, $blog_name );\n\n\theader( 'Content-Type: text/xml; charset=' . get_option( 'blog_charset' ) );\n\n\tif ( ! pings_open( $post_id ) ) {\n\t\ttrackback_response( 1, __( 'Sorry, trackbacks are closed for this item.' ) );\n\t}\n\n\t$title   = wp_html_excerpt( $title, 250, '&#8230;' );\n\t$excerpt = wp_html_excerpt( $excerpt, 252, '&#8230;' );\n\n\t$comment_post_id      = (int) $post_id;\n\t$comment_author       = $blog_name;\n\t$comment_author_email = '';\n\t$comment_author_url   = $trackback_url;\n\t$comment_content      = \"<strong>$title</strong>\\n\\n$excerpt\";\n\t$comment_type         = 'trackback';\n\n\t$dupe = $wpdb->get_results(\n\t\t$wpdb->prepare(\n\t\t\t\"SELECT * FROM $wpdb->comments WHERE comment_post_ID = %d AND comment_author_url = %s\",\n\t\t\t$comment_post_id,\n\t\t\t$comment_author_url\n\t\t)\n\t);\n\n\tif ( $dupe ) {\n\t\ttrackback_response( 1, __( 'There is already a ping from that URL for this post.' ) );\n\t}\n\n\t$commentdata = array(\n\t\t'comment_post_ID' => $comment_post_id,\n\t);\n\n\t$commentdata += compact(\n\t\t'comment_author',\n\t\t'comment_author_email',\n\t\t'comment_author_url',\n\t\t'comment_content',\n\t\t'comment_type'\n\t);\n\n\t$result = wp_new_comment( $commentdata );\n\n\tif ( is_wp_error( $result ) ) {\n\t\ttrackback_response( 1, $result->get_error_message() );\n\t}\n\n\t$trackback_id = $wpdb->insert_id;\n\n\t/**\n\t * Fires after a trackback is added to a post.\n\t *\n\t * @since 1.2.0\n\t *\n\t * @param int $trackback_id Trackback ID.\n\t */\n\tdo_action( 'trackback_post', $trackback_id );\n\n\ttrackback_response( 0 );\n}\n"
        },
        {
          "name": "xmlrpc.php",
          "type": "blob",
          "size": 3.1298828125,
          "content": "<?php\n/**\n * XML-RPC protocol support for WordPress\n *\n * @package WordPress\n */\n\n/**\n * Whether this is an XML-RPC Request.\n *\n * @var bool\n */\ndefine( 'XMLRPC_REQUEST', true );\n\n// Discard unneeded cookies sent by some browser-embedded clients.\n$_COOKIE = array();\n\n// $HTTP_RAW_POST_DATA was deprecated in PHP 5.6 and removed in PHP 7.0.\n// phpcs:disable PHPCompatibility.Variables.RemovedPredefinedGlobalVariables.http_raw_post_dataDeprecatedRemoved\nif ( ! isset( $HTTP_RAW_POST_DATA ) ) {\n\t$HTTP_RAW_POST_DATA = file_get_contents( 'php://input' );\n}\n\n// Fix for mozBlog and other cases where '<?xml' isn't on the very first line.\n$HTTP_RAW_POST_DATA = trim( $HTTP_RAW_POST_DATA );\n// phpcs:enable\n\n/** Include the bootstrap for setting up WordPress environment */\nrequire_once __DIR__ . '/wp-load.php';\n\nif ( isset( $_GET['rsd'] ) ) { // https://cyber.harvard.edu/blogs/gems/tech/rsd.html\n\theader( 'Content-Type: text/xml; charset=' . get_option( 'blog_charset' ), true );\n\techo '<?xml version=\"1.0\" encoding=\"' . get_option( 'blog_charset' ) . '\"?' . '>';\n\t?>\n<rsd version=\"1.0\" xmlns=\"http://archipelago.phrasewise.com/rsd\">\n\t<service>\n\t\t<engineName>WordPress</engineName>\n\t\t<engineLink>https://wordpress.org/</engineLink>\n\t\t<homePageLink><?php bloginfo_rss( 'url' ); ?></homePageLink>\n\t\t<apis>\n\t\t\t<api name=\"WordPress\" blogID=\"1\" preferred=\"true\" apiLink=\"<?php echo site_url( 'xmlrpc.php', 'rpc' ); ?>\" />\n\t\t\t<api name=\"Movable Type\" blogID=\"1\" preferred=\"false\" apiLink=\"<?php echo site_url( 'xmlrpc.php', 'rpc' ); ?>\" />\n\t\t\t<api name=\"MetaWeblog\" blogID=\"1\" preferred=\"false\" apiLink=\"<?php echo site_url( 'xmlrpc.php', 'rpc' ); ?>\" />\n\t\t\t<api name=\"Blogger\" blogID=\"1\" preferred=\"false\" apiLink=\"<?php echo site_url( 'xmlrpc.php', 'rpc' ); ?>\" />\n\t\t\t<?php\n\t\t\t/**\n\t\t\t * Fires when adding APIs to the Really Simple Discovery (RSD) endpoint.\n\t\t\t *\n\t\t\t * @link https://cyber.harvard.edu/blogs/gems/tech/rsd.html\n\t\t\t *\n\t\t\t * @since 3.5.0\n\t\t\t */\n\t\t\tdo_action( 'xmlrpc_rsd_apis' );\n\t\t\t?>\n\t\t</apis>\n\t</service>\n</rsd>\n\t<?php\n\texit;\n}\n\nrequire_once ABSPATH . 'wp-admin/includes/admin.php';\nrequire_once ABSPATH . WPINC . '/class-IXR.php';\nrequire_once ABSPATH . WPINC . '/class-wp-xmlrpc-server.php';\n\n/**\n * Posts submitted via the XML-RPC interface get that title\n *\n * @name post_default_title\n * @var string\n */\n$post_default_title = '';\n\n/**\n * Filters the class used for handling XML-RPC requests.\n *\n * @since 3.1.0\n *\n * @param string $class The name of the XML-RPC server class.\n */\n$wp_xmlrpc_server_class = apply_filters( 'wp_xmlrpc_server_class', 'wp_xmlrpc_server' );\n$wp_xmlrpc_server       = new $wp_xmlrpc_server_class();\n\n// Fire off the request.\n$wp_xmlrpc_server->serve_request();\n\nexit;\n\n/**\n * logIO() - Writes logging info to a file.\n *\n * @since 1.2.0\n * @deprecated 3.4.0 Use error_log()\n * @see error_log()\n *\n * @global int|bool $xmlrpc_logging Whether to enable XML-RPC logging.\n *\n * @param string $io  Whether input or output.\n * @param string $msg Information describing logging reason.\n */\nfunction logIO( $io, $msg ) {\n\t_deprecated_function( __FUNCTION__, '3.4.0', 'error_log()' );\n\tif ( ! empty( $GLOBALS['xmlrpc_logging'] ) ) {\n\t\terror_log( $io . ' - ' . $msg );\n\t}\n}\n"
        }
      ]
    }
  ]
}