{
  "metadata": {
    "timestamp": 1736712347328,
    "page": 12,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "barryvdh/laravel-debugbar",
      "stars": 17708,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1826171875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1923828125,
          "content": "* text=auto\n\n/.github export-ignore\n/tests export-ignore\n.editorconfig export-ignore\n.gitattributes export-ignore\n.gitignore export-ignore\nchangelog.md export-ignore\nphpunit.xml.dist export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0830078125,
          "content": "/.idea\n/build\n/vendor\ncomposer.phar\ncomposer.lock\n.DS_Store\n.phpunit*\n/tests/Browser\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 2.1640625,
          "content": "# Changelog\n\n## v3.14.10 - 2024-12-23\n\n### What's Changed\n\n* Fix Debugbar spelling inconsistencies by @ralphjsmit in https://github.com/barryvdh/laravel-debugbar/pull/1626\n* Fix Visual Explain confirm message by @barryvdh in https://github.com/barryvdh/laravel-debugbar/pull/1709\n\n### New Contributors\n\n* @ralphjsmit made their first contribution in https://github.com/barryvdh/laravel-debugbar/pull/1626\n\n**Full Changelog**: https://github.com/barryvdh/laravel-debugbar/compare/v3.14.9...v3.14.10\n\n## v3.14.9 - 2024-11-25\n\n### What's Changed\n\n* Fix custom prototype array by @barryvdh in https://github.com/barryvdh/laravel-debugbar/pull/1706\n\n**Full Changelog**: https://github.com/barryvdh/laravel-debugbar/compare/v3.14.8...v3.14.9\n\n## v3.14.8 - 2024-11-25\n\n### What's Changed\n\n* Add fix + failing test for custom array prototype by @barryvdh in https://github.com/barryvdh/laravel-debugbar/pull/1705\n\n**Full Changelog**: https://github.com/barryvdh/laravel-debugbar/compare/v3.14.7...v3.14.8\n\n## v3.14.7 - 2024-11-14\n\n### What's Changed\n\n* Make better use of query tab space by @erikn69 in https://github.com/barryvdh/laravel-debugbar/pull/1694\n* Do not open query details on text selecting by @erikn69 in https://github.com/barryvdh/laravel-debugbar/pull/1693\n* Add (initial) support for PHP 8.4 by @jnoordsij in https://github.com/barryvdh/laravel-debugbar/pull/1631\n* More warnings by @barryvdh in https://github.com/barryvdh/laravel-debugbar/pull/1696\n* Fix sql-duplicate highlight by @erikn69 in https://github.com/barryvdh/laravel-debugbar/pull/1699\n* ci: Use GitHub Actions V4 by @erikn69 in https://github.com/barryvdh/laravel-debugbar/pull/1700\n* Fix \"Uncaught TypeError: is not iterable\" by @erikn69 in https://github.com/barryvdh/laravel-debugbar/pull/1701\n* Fix Exception when QueryCollector softLimit exceeded by @johnkary in https://github.com/barryvdh/laravel-debugbar/pull/1702\n* Test soft/hard limit queries by @barryvdh in https://github.com/barryvdh/laravel-debugbar/pull/1703\n\n### New Contributors\n\n* @johnkary made their first contribution in https://github.com/barryvdh/laravel-debugbar/pull/1702\n\n**Full Changelog**: https://github.com/barryvdh/laravel-debugbar/compare/v3.14.6...v3.14.7\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "Copyright (C) 2013-present Barry vd. Heuvel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.1005859375,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nPlease report security issues to `barryvdh@gmail.com`\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.583984375,
          "content": "{\n    \"name\": \"barryvdh/laravel-debugbar\",\n    \"description\": \"PHP Debugbar integration for Laravel\",\n    \"keywords\": [\n        \"laravel\",\n        \"debugbar\",\n        \"profiler\",\n        \"debug\",\n        \"webprofiler\",\n        \"dev\"\n    ],\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Barry vd. Heuvel\",\n            \"email\": \"barryvdh@gmail.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.0\",\n        \"maximebf/debugbar\": \"~1.23.0|~1.24.0\",\n        \"illuminate/routing\": \"^9|^10|^11\",\n        \"illuminate/session\": \"^9|^10|^11\",\n        \"illuminate/support\": \"^9|^10|^11\",\n        \"symfony/finder\": \"^6|^7\"\n    },\n    \"require-dev\": {\n        \"mockery/mockery\": \"^1.3.3\",\n        \"orchestra/testbench-dusk\": \"^5|^6|^7|^8|^9\",\n        \"phpunit/phpunit\": \"^9.6|^10.5\",\n        \"squizlabs/php_codesniffer\": \"^3.5\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Barryvdh\\\\Debugbar\\\\\": \"src/\"\n        },\n        \"files\": [\n            \"src/helpers.php\"\n        ]\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Barryvdh\\\\Debugbar\\\\Tests\\\\\": \"tests\"\n        }\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"3.15-dev\"\n        },\n        \"laravel\": {\n            \"providers\": [\n                \"Barryvdh\\\\Debugbar\\\\ServiceProvider\"\n            ],\n            \"aliases\": {\n                \"Debugbar\": \"Barryvdh\\\\Debugbar\\\\Facades\\\\Debugbar\"\n            }\n        }\n    },\n    \"scripts\": {\n        \"check-style\": \"phpcs\",\n        \"fix-style\": \"phpcbf\",\n        \"test\": \"phpunit\"\n    }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "database",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpcs.xml",
          "type": "blob",
          "size": 0.39453125,
          "content": "<?xml version=\"1.0\"?>\n<ruleset\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:noNamespaceSchemaLocation=\"vendor/squizlabs/php_codesniffer/phpcs.xsd\"\n>\n    <file>config</file>\n    <file>src</file>\n    <file>tests</file>\n\n    <exclude-pattern>src/Resources/*</exclude-pattern>\n    <exclude-pattern>*.blade.php</exclude-pattern>\n\n    <arg value=\"p\"/>\n\n    <rule ref=\"PSR12\" />\n</ruleset>\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 1.1826171875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit bootstrap=\"vendor/autoload.php\"\n         backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         colors=\"true\"\n         verbose=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\">\n    <testsuites>\n        <testsuite name=\"Laravel Debugbar Test Suite\">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist>\n            <directory suffix=\".php\">src/</directory>\n        </whitelist>\n    </filter>\n    <logging>\n        <log type=\"junit\" target=\"build/report.junit.xml\"/>\n        <log type=\"coverage-html\" target=\"build/coverage\"/>\n        <log type=\"coverage-text\" target=\"build/coverage.txt\"/>\n        <log type=\"coverage-clover\" target=\"build/logs/clover.xml\"/>\n    </logging>\n    <php>\n        <env name=\"DEBUGBAR_ENABLED\" value=\"true\"/>\n        <env name=\"DB_CONNECTION\" value=\"testing\"/>\n        <env name=\"DB_CONNECTION\" value=\"testing\"/>\n        <ini name=\"xdebug.file_link_format\" value=\"vscode://file/%f:%l\"/>\n    </php>\n</phpunit>\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 8.90625,
          "content": "## Debugbar for Laravel\n![Unit Tests](https://github.com/barryvdh/laravel-debugbar/workflows/Unit%20Tests/badge.svg)\n[![Packagist License](https://img.shields.io/badge/Licence-MIT-blue)](http://choosealicense.com/licenses/mit/)\n[![Latest Stable Version](https://img.shields.io/packagist/v/barryvdh/laravel-debugbar?label=Stable)](https://packagist.org/packages/barryvdh/laravel-debugbar)\n[![Total Downloads](https://img.shields.io/packagist/dt/barryvdh/laravel-debugbar?label=Downloads)](https://packagist.org/packages/barryvdh/laravel-debugbar)\n[![Fruitcake](https://img.shields.io/badge/Powered%20By-Fruitcake-b2bc35.svg)](https://fruitcake.nl/)\n\nThis is a package to integrate [PHP Debug Bar](http://phpdebugbar.com/) with Laravel.\nIt includes a ServiceProvider to register the debugbar and attach it to the output. You can publish assets and configure it through Laravel.\nIt bootstraps some Collectors to work with Laravel and implements a couple custom DataCollectors, specific for Laravel.\nIt is configured to display Redirects and (jQuery) Ajax Requests. (Shown in a dropdown)\nRead [the documentation](http://phpdebugbar.com/docs/) for more configuration options.\n\n![Debugbar Dark Mode screenshot](https://github.com/barryvdh/laravel-debugbar/assets/973269/6600837a-8b2d-4acb-ab0c-158c9ca5439c)\n\n> [!CAUTION]\n> Use the DebugBar only in development. Do not use Debugbar on publicly accessible websites, as it will leak information from stored requests (by design).\n\n> [!WARNING]\n>  It can also slow the application down (because it has to gather and render data). So when experiencing slowness, try disabling some of the collectors.\n\nThis package includes some custom collectors:\n - QueryCollector: Show all queries, including binding + timing\n - RouteCollector: Show information about the current Route.\n - ViewCollector: Show the currently loaded views. (Optionally: display the shared data)\n - EventsCollector: Show all events\n - LaravelCollector: Show the Laravel version and Environment. (disabled by default)\n - SymfonyRequestCollector: replaces the RequestCollector with more information about the request/response\n - LogsCollector: Show the latest log entries from the storage logs. (disabled by default)\n - FilesCollector: Show the files that are included/required by PHP. (disabled by default)\n - ConfigCollector: Display the values from the config files. (disabled by default)\n - CacheCollector: Display all cache events. (disabled by default)\n\nBootstraps the following collectors for Laravel:\n - LogCollector: Show all Log messages\n - SymfonyMailCollector for Mail\n\nAnd the default collectors:\n - PhpInfoCollector\n - MessagesCollector\n - TimeDataCollector (With Booting and Application timing)\n - MemoryCollector\n - ExceptionsCollector\n\nIt also provides a facade interface (`Debugbar`) for easy logging Messages, Exceptions and Time\n\n## Installation\n\nRequire this package with composer. It is recommended to only require the package for development.\n\n```shell\ncomposer require barryvdh/laravel-debugbar --dev\n```\n\nLaravel uses Package Auto-Discovery, so doesn't require you to manually add the ServiceProvider.\n\nThe Debugbar will be enabled when `APP_DEBUG` is `true`.\n\n> If you use a catch-all/fallback route, make sure you load the Debugbar ServiceProvider before your own App ServiceProviders.\n\n### Laravel without auto-discovery:\n\nIf you don't use auto-discovery, add the ServiceProvider to the providers list. For Laravel 11 or newer, add the ServiceProvider in bootstrap/providers.php. For Laravel 10 or older, add the ServiceProvider in config/app.php.\n\n```php\nBarryvdh\\Debugbar\\ServiceProvider::class,\n```\n\nIf you want to use the facade to log messages, add this within the `register` method of `app/Providers/AppServiceProvider.php` class:\n\n```php\npublic function register(): void\n{\n    $loader = \\Illuminate\\Foundation\\AliasLoader::getInstance();\n    $loader->alias('Debugbar', \\Barryvdh\\Debugbar\\Facades\\Debugbar::class);\n}\n```\n\nThe profiler is enabled by default, if you have APP_DEBUG=true. You can override that in the config (`debugbar.enabled`) or by setting `DEBUGBAR_ENABLED` in your `.env`. See more options in `config/debugbar.php`\nYou can also set in your config if you want to include/exclude the vendor files also (FontAwesome, Highlight.js and jQuery). If you already use them in your site, set it to false.\nYou can also only display the js or css vendors, by setting it to 'js' or 'css'. (Highlight.js requires both css + js, so set to `true` for syntax highlighting)\n\n#### Copy the package config to your local config with the publish command:\n\n```shell\nphp artisan vendor:publish --provider=\"Barryvdh\\Debugbar\\ServiceProvider\"\n```\n\n### Laravel with Octane:\n\nMake sure to add LaravelDebugbar to your flush list in `config/octane.php`.\n\n```php\n    'flush' => [\n        \\Barryvdh\\Debugbar\\LaravelDebugbar::class,\n    ],\n```\n\n### Lumen:\n\nFor Lumen, register a different Provider in `bootstrap/app.php`:\n\n```php\nif (env('APP_DEBUG')) {\n $app->register(Barryvdh\\Debugbar\\LumenServiceProvider::class);\n}\n```\n\nTo change the configuration, copy the file to your config folder and enable it:\n\n```php\n$app->configure('debugbar');\n```\n\n## Usage\n\nYou can now add messages using the Facade (when added), using the PSR-3 levels (debug, info, notice, warning, error, critical, alert, emergency):\n\n```php\nDebugbar::info($object);\nDebugbar::error('Error!');\nDebugbar::warning('Watch out…');\nDebugbar::addMessage('Another message', 'mylabel');\n```\n\nAnd start/stop timing:\n\n```php\nDebugbar::startMeasure('render','Time for rendering');\nDebugbar::stopMeasure('render');\nDebugbar::addMeasure('now', LARAVEL_START, microtime(true));\nDebugbar::measure('My long operation', function() {\n    // Do something…\n});\n```\n\nOr log exceptions:\n\n```php\ntry {\n    throw new Exception('foobar');\n} catch (Exception $e) {\n    Debugbar::addThrowable($e);\n}\n```\n\nThere are also helper functions available for the most common calls:\n\n```php\n// All arguments will be dumped as a debug message\ndebug($var1, $someString, $intValue, $object);\n\n// `$collection->debug()` will return the collection and dump it as a debug message. Like `$collection->dump()`\ncollect([$var1, $someString])->debug();\n\nstart_measure('render','Time for rendering');\nstop_measure('render');\nadd_measure('now', LARAVEL_START, microtime(true));\nmeasure('My long operation', function() {\n    // Do something…\n});\n```\n\nIf you want you can add your own DataCollectors, through the Container or the Facade:\n\n```php\nDebugbar::addCollector(new DebugBar\\DataCollector\\MessagesCollector('my_messages'));\n//Or via the App container:\n$debugbar = App::make('debugbar');\n$debugbar->addCollector(new DebugBar\\DataCollector\\MessagesCollector('my_messages'));\n```\n\nBy default, the Debugbar is injected just before `</body>`. If you want to inject the Debugbar yourself,\nset the config option 'inject' to false and use the renderer yourself and follow http://phpdebugbar.com/docs/rendering.html\n\n```php\n$renderer = Debugbar::getJavascriptRenderer();\n```\n\nNote: Not using the auto-inject, will disable the Request information, because that is added After the response.\nYou can add the default_request datacollector in the config as alternative.\n\n## Enabling/Disabling on run time\nYou can enable or disable the debugbar during run time.\n\n```php\n\\Debugbar::enable();\n\\Debugbar::disable();\n```\n\nNB. Once enabled, the collectors are added (and could produce extra overhead), so if you want to use the debugbar in production, disable in the config and only enable when needed.\n\n## Storage\n\nDebugbar remembers previous requests, which you can view using the Browse button on the right. This will only work if you enable `debugbar.storage.open` in the config. \nMake sure you only do this on local development, because otherwise other people will be able to view previous requests.\nIn general, Debugbar should only be used locally or at least restricted by IP.\nIt's possible to pass a callback, which will receive the Request object, so you can determine access to the OpenHandler storage.\n\n## Twig Integration\n\nLaravel Debugbar comes with two Twig Extensions. These are tested with [rcrowe/TwigBridge](https://github.com/rcrowe/TwigBridge) 0.6.x\n\nAdd the following extensions to your TwigBridge config/extensions.php (or register the extensions manually)\n\n```php\n'Barryvdh\\Debugbar\\Twig\\Extension\\Debug',\n'Barryvdh\\Debugbar\\Twig\\Extension\\Dump',\n'Barryvdh\\Debugbar\\Twig\\Extension\\Stopwatch',\n```\n\nThe Dump extension will replace the [dump function](http://twig.sensiolabs.org/doc/functions/dump.html) to output variables using the DataFormatter. The Debug extension adds a `debug()` function which passes variables to the Message Collector,\ninstead of showing it directly in the template. It dumps the arguments, or when empty; all context variables.\n\n```twig\n{{ debug() }}\n{{ debug(user, categories) }}\n```\n\nThe Stopwatch extension adds a [stopwatch tag](http://symfony.com/blog/new-in-symfony-2-4-a-stopwatch-tag-for-twig)  similar to the one in Symfony/Silex Twigbridge.\n\n```twig\n{% stopwatch \"foo\" %}\n    …some things that gets timed\n{% endstopwatch %}\n```\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}