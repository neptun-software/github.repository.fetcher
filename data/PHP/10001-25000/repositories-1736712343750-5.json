{
  "metadata": {
    "timestamp": 1736712343750,
    "page": 5,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "PHPMailer/PHPMailer",
      "stars": 21182,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.333984375,
          "content": "codecov:\n  notify:\n    after_n_builds: 2\n\ncoverage:\n  round: nearest\n  # Status will be green when coverage is between 70 and 100%.\n  range: \"70...100\"\n  status:\n    project:\n      default:\n        threshold: 2%\n        paths:\n          - \"src\"\n    patch:\n      default:\n        threshold: 0%\n        paths:\n          - \"src\"\n\ncomment: false\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.21484375,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.376953125,
          "content": "* text=auto\n\n/.codecov.yml export-ignore\n/.gitattributes export-ignore\n/.github export-ignore\n/.gitignore export-ignore\n/.phan export-ignore\n/.scrutinizer.yml export-ignore\n/changelog.md export-ignore\n/docs export-ignore\n/examples export-ignore\n/phpcs.xml.dist export-ignore\n/phpdoc.dist.xml export-ignore\n/phpunit.xml.dist export-ignore\n/test export-ignore\n/UPGRADING.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2568359375,
          "content": "docs/*\n!docs/README.md\ntest/message.txt\ntest/testbootstrap.php\nbuild/\nvendor/\n*.pem\ncomposer.lock\n.phpcs.xml\nphpcs.xml\n.phpcs-cache\n/.rnd\ntest/PHPMailerTest.php*nonexistent_file.txt\ntest/*/PHPMailerTest.php*nonexistent_file.txt\nphpunit.xml\n/.phpunit.result.cache\n"
        },
        {
          "name": ".phan",
          "type": "tree",
          "content": null
        },
        {
          "name": "COMMITMENT",
          "type": "blob",
          "size": 2.04296875,
          "content": "GPL Cooperation Commitment\nVersion 1.0\n\nBefore filing or continuing to prosecute any legal proceeding or claim\n(other than a Defensive Action) arising from termination of a Covered\nLicense, we commit to extend to the person or entity ('you') accused\nof violating the Covered License the following provisions regarding\ncure and reinstatement, taken from GPL version 3. As used here, the\nterm 'this License' refers to the specific Covered License being\nenforced.\n\n    However, if you cease all violation of this License, then your\n    license from a particular copyright holder is reinstated (a)\n    provisionally, unless and until the copyright holder explicitly\n    and finally terminates your license, and (b) permanently, if the\n    copyright holder fails to notify you of the violation by some\n    reasonable means prior to 60 days after the cessation.\n\n    Moreover, your license from a particular copyright holder is\n    reinstated permanently if the copyright holder notifies you of the\n    violation by some reasonable means, this is the first time you\n    have received notice of violation of this License (for any work)\n    from that copyright holder, and you cure the violation prior to 30\n    days after your receipt of the notice.\n\nWe intend this Commitment to be irrevocable, and binding and\nenforceable against us and assignees of or successors to our\ncopyrights.\n\nDefinitions\n\n'Covered License' means the GNU General Public License, version 2\n(GPLv2), the GNU Lesser General Public License, version 2.1\n(LGPLv2.1), or the GNU Library General Public License, version 2\n(LGPLv2), all as published by the Free Software Foundation.\n\n'Defensive Action' means a legal proceeding or claim that We bring\nagainst you in response to a prior proceeding or claim initiated by\nyou or your affiliate.\n\n'We' means each contributor to this repository as of the date of\ninclusion of this file, including subsidiaries of a corporate\ncontributor.\n\nThis work is available under a Creative Commons Attribution-ShareAlike\n4.0 International license (https://creativecommons.org/licenses/by-sa/4.0/).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 25.9072265625,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.271484375,
          "content": "[![SWUbanner](https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner2-direct.svg)](https://supportukrainenow.org/)\n\n![PHPMailer](https://raw.github.com/PHPMailer/PHPMailer/master/examples/images/phpmailer.png)\n\n# PHPMailer – A full-featured email creation and transfer class for PHP\n\n[![Test status](https://github.com/PHPMailer/PHPMailer/workflows/Tests/badge.svg)](https://github.com/PHPMailer/PHPMailer/actions)\n[![codecov.io](https://codecov.io/gh/PHPMailer/PHPMailer/branch/master/graph/badge.svg?token=iORZpwmYmM)](https://codecov.io/gh/PHPMailer/PHPMailer)\n[![Latest Stable Version](https://poser.pugx.org/phpmailer/phpmailer/v/stable.svg)](https://packagist.org/packages/phpmailer/phpmailer)\n[![Total Downloads](https://poser.pugx.org/phpmailer/phpmailer/downloads)](https://packagist.org/packages/phpmailer/phpmailer)\n[![License](https://poser.pugx.org/phpmailer/phpmailer/license.svg)](https://packagist.org/packages/phpmailer/phpmailer)\n[![API Docs](https://github.com/phpmailer/phpmailer/workflows/Docs/badge.svg)](https://phpmailer.github.io/PHPMailer/)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/PHPMailer/PHPMailer/badge)](https://api.securityscorecards.dev/projects/github.com/PHPMailer/PHPMailer)\n\n## Features\n- Probably the world's most popular code for sending email from PHP!\n- Used by many open-source projects: WordPress, Drupal, 1CRM, SugarCRM, Yii, Joomla! and many more\n- Integrated SMTP support – send without a local mail server\n- Send emails with multiple To, CC, BCC, and Reply-to addresses\n- Multipart/alternative emails for mail clients that do not read HTML email\n- Add attachments, including inline\n- Support for UTF-8 content and 8bit, base64, binary, and quoted-printable encodings\n- SMTP authentication with LOGIN, PLAIN, CRAM-MD5, and XOAUTH2 mechanisms over SMTPS and SMTP+STARTTLS transports\n- Validates email addresses automatically\n- Protects against header injection attacks\n- Error messages in over 50 languages!\n- DKIM and S/MIME signing support\n- Compatible with PHP 5.5 and later, including PHP 8.2\n- Namespaced to prevent name clashes\n- Much more!\n\n## Why you might need it\nMany PHP developers need to send email from their code. The only PHP function that supports this directly is [`mail()`](https://www.php.net/manual/en/function.mail.php). However, it does not provide any assistance for making use of popular features such as encryption, authentication, HTML messages, and attachments.\n\nFormatting email correctly is surprisingly difficult. There are myriad overlapping (and conflicting) standards, requiring tight adherence to horribly complicated formatting and encoding rules – the vast majority of code that you'll find online that uses the `mail()` function directly is just plain wrong, if not unsafe!\n\nThe PHP `mail()` function usually sends via a local mail server, typically fronted by a `sendmail` binary on Linux, BSD, and macOS platforms, however, Windows usually doesn't include a local mail server; PHPMailer's integrated SMTP client allows email sending on all platforms without needing a local mail server. Be aware though, that the `mail()` function should be avoided when possible; it's both faster and [safer](https://exploitbox.io/paper/Pwning-PHP-Mail-Function-For-Fun-And-RCE.html) to use SMTP to localhost.\n\n*Please* don't be tempted to do it yourself – if you don't use PHPMailer, there are many other excellent libraries that\nyou should look at before rolling your own. Try [SwiftMailer](https://swiftmailer.symfony.com/)\n, [Laminas/Mail](https://docs.laminas.dev/laminas-mail/), [ZetaComponents](https://github.com/zetacomponents/Mail), etc.\n\n## License\nThis software is distributed under the [LGPL 2.1](https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html) license, along with the [GPL Cooperation Commitment](https://gplcc.github.io/gplcc/). Please read [LICENSE](https://github.com/PHPMailer/PHPMailer/blob/master/LICENSE) for information on the software availability and distribution.\n\n## Installation & loading\nPHPMailer is available on [Packagist](https://packagist.org/packages/phpmailer/phpmailer) (using semantic versioning), and installation via [Composer](https://getcomposer.org) is the recommended way to install PHPMailer. Just add this line to your `composer.json` file:\n\n```json\n\"phpmailer/phpmailer\": \"^6.9.2\"\n```\n\nor run\n\n```sh\ncomposer require phpmailer/phpmailer\n```\n\nNote that the `vendor` folder and the `vendor/autoload.php` script are generated by Composer; they are not part of PHPMailer.\n\nIf you want to use XOAUTH2 authentication, you will also need to add a dependency on the `league/oauth2-client` and appropriate service adapters package in your `composer.json`, or take a look at\nby @decomplexity's [SendOauth2 wrapper](https://github.com/decomplexity/SendOauth2), especially if you're using Microsoft services.\n\nAlternatively, if you're not using Composer, you\ncan [download PHPMailer as a zip file](https://github.com/PHPMailer/PHPMailer/archive/master.zip), (note that docs and examples are not included in the zip file), then copy the contents of the PHPMailer folder into one of the `include_path` directories specified in your PHP configuration and load each class file manually:\n\n```php\n<?php\nuse PHPMailer\\PHPMailer\\PHPMailer;\nuse PHPMailer\\PHPMailer\\Exception;\n\nrequire 'path/to/PHPMailer/src/Exception.php';\nrequire 'path/to/PHPMailer/src/PHPMailer.php';\nrequire 'path/to/PHPMailer/src/SMTP.php';\n```\n\nIf you're not using the `SMTP` class explicitly (you're probably not), you don't need a `use` line for the SMTP class. Even if you're not using exceptions, you do still need to load the `Exception` class as it is used internally.\n\n## Legacy versions\nPHPMailer 5.2 (which is compatible with PHP 5.0 — 7.0) is no longer supported, even for security updates. You will find the latest version of 5.2 in the [5.2-stable branch](https://github.com/PHPMailer/PHPMailer/tree/5.2-stable). If you're using PHP 5.5 or later (which you should be), switch to the 6.x releases.\n\n### Upgrading from 5.2\nThe biggest changes are that source files are now in the `src/` folder, and PHPMailer now declares the namespace `PHPMailer\\PHPMailer`. This has several important effects – [read the upgrade guide](https://github.com/PHPMailer/PHPMailer/tree/master/UPGRADING.md) for more details.\n\n### Minimal installation\nWhile installing the entire package manually or with Composer is simple, convenient, and reliable, you may want to include only vital files in your project. At the very least you will need [src/PHPMailer.php](https://github.com/PHPMailer/PHPMailer/tree/master/src/PHPMailer.php). If you're using SMTP, you'll need [src/SMTP.php](https://github.com/PHPMailer/PHPMailer/tree/master/src/SMTP.php), and if you're using POP-before SMTP (*very* unlikely!), you'll need [src/POP3.php](https://github.com/PHPMailer/PHPMailer/tree/master/src/POP3.php). You can skip the [language](https://github.com/PHPMailer/PHPMailer/tree/master/language/) folder if you're not showing errors to users and can make do with English-only errors. If you're using XOAUTH2 you will need [src/OAuth.php](https://github.com/PHPMailer/PHPMailer/tree/master/src/OAuth.php) as well as the Composer dependencies for the services you wish to authenticate with. Really, it's much easier to use Composer!\n\n## A Simple Example\n\n```php\n<?php\n//Import PHPMailer classes into the global namespace\n//These must be at the top of your script, not inside a function\nuse PHPMailer\\PHPMailer\\PHPMailer;\nuse PHPMailer\\PHPMailer\\SMTP;\nuse PHPMailer\\PHPMailer\\Exception;\n\n//Load Composer's autoloader\nrequire 'vendor/autoload.php';\n\n//Create an instance; passing `true` enables exceptions\n$mail = new PHPMailer(true);\n\ntry {\n    //Server settings\n    $mail->SMTPDebug = SMTP::DEBUG_SERVER;                      //Enable verbose debug output\n    $mail->isSMTP();                                            //Send using SMTP\n    $mail->Host       = 'smtp.example.com';                     //Set the SMTP server to send through\n    $mail->SMTPAuth   = true;                                   //Enable SMTP authentication\n    $mail->Username   = 'user@example.com';                     //SMTP username\n    $mail->Password   = 'secret';                               //SMTP password\n    $mail->SMTPSecure = PHPMailer::ENCRYPTION_SMTPS;            //Enable implicit TLS encryption\n    $mail->Port       = 465;                                    //TCP port to connect to; use 587 if you have set `SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS`\n\n    //Recipients\n    $mail->setFrom('from@example.com', 'Mailer');\n    $mail->addAddress('joe@example.net', 'Joe User');     //Add a recipient\n    $mail->addAddress('ellen@example.com');               //Name is optional\n    $mail->addReplyTo('info@example.com', 'Information');\n    $mail->addCC('cc@example.com');\n    $mail->addBCC('bcc@example.com');\n\n    //Attachments\n    $mail->addAttachment('/var/tmp/file.tar.gz');         //Add attachments\n    $mail->addAttachment('/tmp/image.jpg', 'new.jpg');    //Optional name\n\n    //Content\n    $mail->isHTML(true);                                  //Set email format to HTML\n    $mail->Subject = 'Here is the subject';\n    $mail->Body    = 'This is the HTML message body <b>in bold!</b>';\n    $mail->AltBody = 'This is the body in plain text for non-HTML mail clients';\n\n    $mail->send();\n    echo 'Message has been sent';\n} catch (Exception $e) {\n    echo \"Message could not be sent. Mailer Error: {$mail->ErrorInfo}\";\n}\n```\n\nYou'll find plenty to play with in the [examples](https://github.com/PHPMailer/PHPMailer/tree/master/examples) folder, which covers many common scenarios including sending through Gmail, building contact forms, sending to mailing lists, and more.\n\nIf you are re-using the instance (e.g. when sending to a mailing list), you may need to clear the recipient list to avoid sending duplicate messages. See [the mailing list example](https://github.com/PHPMailer/PHPMailer/blob/master/examples/mailing_list.phps) for further guidance.\n\nThat's it. You should now be ready to use PHPMailer!\n\n## Localization\nPHPMailer defaults to English, but in the [language](https://github.com/PHPMailer/PHPMailer/tree/master/language/) folder, you'll find many translations for PHPMailer error messages that you may encounter. Their filenames contain [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) language code for the translations, for example `fr` for French. To specify a language, you need to tell PHPMailer which one to use, like this:\n\n```php\n//To load the French version\n$mail->setLanguage('fr', '/optional/path/to/language/directory/');\n```\n\nWe welcome corrections and new languages – if you're looking for corrections, run the [Language/TranslationCompletenessTest.php](https://github.com/PHPMailer/PHPMailer/blob/master/test/Language/TranslationCompletenessTest.php) script in the tests folder and it will show any missing translations.\n\n## Documentation\nStart reading at the [GitHub wiki](https://github.com/PHPMailer/PHPMailer/wiki). If you're having trouble, head for [the troubleshooting guide](https://github.com/PHPMailer/PHPMailer/wiki/Troubleshooting) as it's frequently updated.\n\nExamples of how to use PHPMailer for common scenarios can be found in the [examples](https://github.com/PHPMailer/PHPMailer/tree/master/examples) folder. If you're looking for a good starting point, we recommend you start with [the Gmail example](https://github.com/PHPMailer/PHPMailer/tree/master/examples/gmail.phps).\n\nTo reduce PHPMailer's deployed code footprint, examples are not included if you load PHPMailer via Composer or via [GitHub's zip file download](https://github.com/PHPMailer/PHPMailer/archive/master.zip), so you'll need to either clone the git repository or use the above links to get to the examples directly.\n\nComplete generated API documentation is [available online](https://phpmailer.github.io/PHPMailer/).\n\nYou can generate complete API-level documentation by running `phpdoc` in the top-level folder, and documentation will appear in the `docs` folder, though you'll need to have [PHPDocumentor](https://www.phpdoc.org) installed. You may find [the unit tests](https://github.com/PHPMailer/PHPMailer/blob/master/test/PHPMailer/PHPMailerTest.php) a good reference for how to do various operations such as encryption.\n\nIf the documentation doesn't cover what you need, search the [many questions on Stack Overflow](https://stackoverflow.com/questions/tagged/phpmailer), and before you ask a question about \"SMTP Error: Could not connect to SMTP host.\", [read the troubleshooting guide](https://github.com/PHPMailer/PHPMailer/wiki/Troubleshooting).\n\n## Tests\n[PHPMailer tests](https://github.com/PHPMailer/PHPMailer/tree/master/test/) use PHPUnit 9, with [a polyfill](https://github.com/Yoast/PHPUnit-Polyfills) to let 9-style tests run on older PHPUnit and PHP versions.\n\n[![Test status](https://github.com/PHPMailer/PHPMailer/workflows/Tests/badge.svg)](https://github.com/PHPMailer/PHPMailer/actions)\n\nIf this isn't passing, is there something you can do to help?\n\n## Security\nPlease disclose any vulnerabilities found responsibly – report security issues to the maintainers privately.\n\nSee [SECURITY](https://github.com/PHPMailer/PHPMailer/tree/master/SECURITY.md) and [PHPMailer's security advisories on GitHub](https://github.com/PHPMailer/PHPMailer/security). \n\n## Contributing\nPlease submit bug reports, suggestions, and pull requests to the [GitHub issue tracker](https://github.com/PHPMailer/PHPMailer/issues).\n\nWe're particularly interested in fixing edge cases, expanding test coverage, and updating translations.\n\nIf you found a mistake in the docs, or want to add something, go ahead and amend the wiki – anyone can edit it.\n\nIf you have git clones from prior to the move to the PHPMailer GitHub organisation, you'll need to update any remote URLs referencing the old GitHub location with a command like this from within your clone:\n\n```sh\ngit remote set-url upstream https://github.com/PHPMailer/PHPMailer.git\n```\n\nPlease *don't* use the SourceForge or Google Code projects any more; they are obsolete and no longer maintained.\n\n## Sponsorship\nDevelopment time and resources for PHPMailer are provided by [Smartmessages.net](https://info.smartmessages.net/), the world's only privacy-first email marketing system.\n\n<a href=\"https://info.smartmessages.net/\"><img src=\"https://www.smartmessages.net/img/smartmessages-logo.svg\" width=\"550\" alt=\"Smartmessages.net privacy-first email marketing logo\"></a>\n\nDonations are very welcome, whether in beer 🍺, T-shirts 👕, or cold, hard cash 💰. Sponsorship through GitHub is a simple and convenient way to say \"thank you\" to PHPMailer's maintainers and contributors – just click the \"Sponsor\" button [on the project page](https://github.com/PHPMailer/PHPMailer). If your company uses PHPMailer, consider taking part in Tidelift's enterprise support programme.\n\n## PHPMailer For Enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of PHPMailer and thousands of other packages are working with Tidelift to deliver commercial\nsupport and maintenance for the open-source packages you use to build your applications. Save time, reduce risk, and\nimprove code health, while paying the maintainers of the exact packages you\nuse. [Learn more.](https://tidelift.com/subscription/pkg/packagist-phpmailer-phpmailer?utm_source=packagist-phpmailer-phpmailer&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Changelog\nSee [changelog](changelog.md).\n\n## History\n- PHPMailer was originally written in 2001 by Brent R. Matzelle as a [SourceForge project](https://sourceforge.net/projects/phpmailer/).\n- [Marcus Bointon](https://github.com/Synchro) (`coolbru` on SF) and Andy Prevost (`codeworxtech`) took over the project in 2004.\n- Became an Apache incubator project on Google Code in 2010, managed by Jim Jagielski.\n- Marcus created [his fork on GitHub](https://github.com/Synchro/PHPMailer) in 2008.\n- Jim and Marcus decide to join forces and use GitHub as the canonical and official repo for PHPMailer in 2013.\n- PHPMailer moves to [the PHPMailer organisation](https://github.com/PHPMailer) on GitHub in 2013.\n\n### What's changed since moving from SourceForge?\n- Official successor to the SourceForge and Google Code projects.\n- Test suite.\n- Continuous integration with GitHub Actions.\n- Composer support.\n- Public development.\n- Additional languages and language strings.\n- CRAM-MD5 authentication support.\n- Preserves full repo history of authors, commits, and branches from the original SourceForge project.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 7.4072265625,
          "content": "# Security notices relating to PHPMailer\n\nPlease disclose any security issues or vulnerabilities found through [Tidelift's coordinated disclosure system](https://tidelift.com/security) or to the maintainers privately.\n\nPHPMailer 6.4.1 and earlier contain a vulnerability that can result in untrusted code being called (if such code is injected into the host project's scope by other means). If the `$patternselect` parameter to `validateAddress()` is set to `'php'` (the default, defined by `PHPMailer::$validator`), and the global namespace contains a function called `php`, it will be called in preference to the built-in validator of the same name. Mitigated in PHPMailer 6.5.0 by denying the use of simple strings as validator function names. Recorded as [CVE-2021-3603](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-3603). Reported by [Vikrant Singh Chauhan](mailto:vi@hackberry.xyz) via [huntr.dev](https://www.huntr.dev/).\n\nPHPMailer versions 6.4.1 and earlier contain a possible remote code execution vulnerability through the `$lang_path` parameter of the `setLanguage()` method. If the `$lang_path` parameter is passed unfiltered from user input, it can be set to [a UNC path](https://docs.microsoft.com/en-us/dotnet/standard/io/file-path-formats#unc-paths), and if an attacker is also able to persuade the server to load a file from that UNC path, a script file under their control may be executed. This vulnerability only applies to systems that resolve UNC paths, typically only Microsoft Windows.\nPHPMailer 6.5.0 mitigates this by no longer treating translation files as PHP code, but by parsing their text content directly. This approach avoids the possibility of executing unknown code while retaining backward compatibility. This isn't ideal, so the current translation format is deprecated and will be replaced in the next major release. Recorded as [CVE-2021-34551](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-34551). Reported by [Jilin Diting Information Technology Co., Ltd](https://listensec.com) via Tidelift.\n\nPHPMailer versions between 6.1.8 and 6.4.0 contain a regression of the earlier CVE-2018-19296 object injection vulnerability as a result of [a fix for Windows UNC paths in 6.1.8](https://github.com/PHPMailer/PHPMailer/commit/e2e07a355ee8ff36aba21d0242c5950c56e4c6f9). Recorded as [CVE-2020-36326](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-36326). Reported by Fariskhi Vidyan via Tidelift. 6.4.1 fixes this issue, and also enforces stricter checks for URL schemes in local path contexts.\n\nPHPMailer versions 6.1.5 and earlier contain an output escaping bug that occurs in `Content-Type` and `Content-Disposition` when filenames passed into `addAttachment` and other methods that accept attachment names contain double quote characters, in contravention of RFC822 3.4.1. No specific vulnerability has been found relating to this, but it could allow file attachments to bypass attachment filters that are based on matching filename extensions. Recorded as [CVE-2020-13625](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-13625). Reported by Elar Lang of Clarified Security.\n\nPHPMailer versions prior to 6.0.6 and 5.2.27 are vulnerable to an object injection attack by passing `phar://` paths into `addAttachment()` and other functions that may receive unfiltered local paths, possibly leading to RCE. Recorded as [CVE-2018-19296](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-19296). See [this article](https://knasmueller.net/5-answers-about-php-phar-exploitation) for more info on this type of vulnerability. Mitigated by blocking the use of paths containing URL-protocol style prefixes such as `phar://`. Reported by Sehun Oh of cyberone.kr.\n\nPHPMailer versions prior to 5.2.24 (released July 26th 2017) have an XSS vulnerability in one of the code examples, [CVE-2017-11503](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-11503). The `code_generator.phps` example did not filter user input prior to output. This file is distributed with a `.phps` extension, so it is not normally executable unless it is explicitly renamed, and the file is not included when PHPMailer is loaded through composer, so it is safe by default. There was also an undisclosed potential XSS vulnerability in the default exception handler (unused by default). Patches for both issues kindly provided by Patrick Monnerat of the Fedora Project.\n\nPHPMailer versions prior to 5.2.22 (released January 9th 2017) have a local file disclosure vulnerability, [CVE-2017-5223](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-5223). If content passed into `msgHTML()` is sourced from unfiltered user input, relative paths can map to absolute local file paths and added as attachments. Also note that `addAttachment` (just like `file_get_contents`, `passthru`, `unlink`, etc) should not be passed user-sourced params either! Reported by Yongxiang Li of Asiasecurity.\n\nPHPMailer versions prior to 5.2.20 (released December 28th 2016) are vulnerable to [CVE-2016-10045](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-10045) a remote code execution vulnerability, responsibly reported by [Dawid Golunski](https://legalhackers.com/advisories/PHPMailer-Exploit-Remote-Code-Exec-CVE-2016-10045-Vuln-Patch-Bypass.html), and patched by Paul Buonopane (@Zenexer).\n\nPHPMailer versions prior to 5.2.18 (released December 2016) are vulnerable to [CVE-2016-10033](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-10033) a remote code execution vulnerability, responsibly reported by [Dawid Golunski](https://legalhackers.com/advisories/PHPMailer-Exploit-Remote-Code-Exec-CVE-2016-10033-Vuln.html).\n\nPHPMailer versions prior to 5.2.14 (released November 2015) are vulnerable to [CVE-2015-8476](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-8476) an SMTP CRLF injection bug permitting arbitrary message sending.\n\nPHPMailer versions prior to 5.2.10 (released May 2015) are vulnerable to [CVE-2008-5619](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2008-5619), a remote code execution vulnerability in the bundled html2text library. This file was removed in 5.2.10, so if you are using a version prior to that and make use of the html2text function, it's vitally important that you upgrade and remove this file.\n\nPHPMailer versions prior to 2.0.7 and 2.2.1 are vulnerable to [CVE-2012-0796](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-0796), an email header injection attack.\n\nJoomla 1.6.0 uses PHPMailer in an unsafe way, allowing it to reveal local file paths, reported in [CVE-2011-3747](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-3747).\n\nPHPMailer didn't sanitise the `$lang_path` parameter in `SetLanguage`. This wasn't a problem in itself, but some apps (PHPClassifieds, ATutor) also failed to sanitise user-provided parameters passed to it, permitting semi-arbitrary local file inclusion, reported in [CVE-2010-4914](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2010-4914), [CVE-2007-2021](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2007-2021) and [CVE-2006-5734](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2006-5734).\n\nPHPMailer 1.7.2 and earlier contained a possible DDoS vulnerability reported in [CVE-2005-1807](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2005-1807).\n\nPHPMailer 1.7 and earlier (June 2003) have a possible vulnerability in the `SendmailSend` method where shell commands may not be sanitised. Reported in [CVE-2007-3215](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2007-3215).\n\n"
        },
        {
          "name": "UPGRADING.md",
          "type": "blob",
          "size": 5.310546875,
          "content": "# Upgrading from PHPMailer 5.2 to 6.0\n\nPHPMailer 6.0 is a major update, breaking backward compatibility.\n\nIf you're in doubt about how you should be using PHPMailer 6, take a look at the examples as they have all been updated to work in a PHPMailer 6.0 style.\n\n## PHP Version\n\nPHPMailer 6.0 requires PHP 5.5 or later, and is fully compatible with PHP versions all the way up to 8.4. PHPMailer 5.2 supported PHP 5.0 and upwards, so if you need to run on a legacy PHP version, see the [PHPMailer 5.2-stable branch on Github](https://github.com/PHPMailer/PHPMailer/tree/5.2-stable), but bear in mind that this branch is no longer maintained.\n\n## Loading PHPMailer\n \nThe single biggest change will be in the way that you load PHPMailer. In earlier versions you may have done this:\n\n```php\nrequire 'PHPMailerAutoload.php';\n```\n\nor\n\n```php\nrequire 'class.phpmailer.php';\nrequire 'class.smtp.php';\n```\n\nWe recommend that you load PHPMailer via composer, using its standard autoloader, which you probably won't need to load if you're using it already, but in case you're not, you will need to do this instead:\n\n```php\nrequire 'vendor/autoload.php';\n```\n\nIf you're not using composer, you can still load the classes manually, depending on what you're using:\n\n```php\nrequire 'src/PHPMailer.php';\nrequire 'src/SMTP.php';\nrequire 'src/Exception.php';\n```\n\n## Namespace\nPHPMailer 6 uses a [namespace](https://www.php.net/manual/en/language.namespaces.rationale.php) of `PHPMailer\\PHPMailer`, because it's the PHPMailer project within the PHPMailer organisation. You **must** import (with a `use` statement) classes you're using explicitly into your own namespace, or reference them absolutely in the global namespace - all the examples do this. This means the fully-qualified name of the main PHPMailer class is `PHPMailer\\PHPMailer\\PHPMailer`, which is a bit of a mouthful, but there's no harm in it! If you are using other PHPMailer classes explicitly (such as `SMTP` or `Exception`), you will need to import them into your namespace too.\n\nFor example you might create an instance like this:\n\n```php\n<?php\nnamespace MyProject;\nuse PHPMailer\\PHPMailer\\PHPMailer;\nrequire 'vendor/autoload.php';\n$mail = new PHPMailer;\n...\n```\n\nor alternatively, using a fully qualified name:\n\n```php\n<?php\nnamespace MyProject;\nrequire 'vendor/autoload.php';\n$mail = new PHPMailer\\PHPMailer\\PHPMailer;\n...\n```\n\nNote that `use` statements apply *only* to the file they appear in (they are local aliases), so if an included file contains `use` statements, it will not import the namespaced classes into the file you're including from.\n\n## Namespaced exceptions\nPHPMailer now uses its own namespaced `Exception` class, so if you were previously catching exceptions of type `phpmailerException` (or subclasses of that), you will need to update them to use the PHPMailer namespace, and make any existing `Exception` references use the global namespace, i.e. `\\Exception`. If your original code was:\n\n```php\ntry {\n...\n} catch (phpmailerException $e) {\n    echo $e->errorMessage();\n} catch (Exception $e) {\n    echo $e->getMessage();\n}\n```\n\nConvert it to:\n\n```php\nuse PHPMailer\\PHPMailer\\Exception;\n...\ntry {\n...\n} catch (Exception $e) {\n    echo $e->errorMessage();\n} catch (\\Exception $e) {\n    echo $e->getMessage();\n}\n```\n\n## OAuth2 Support\nThe OAuth2 implementation has been completely redesigned using the [OAuth2 packages](https://oauth2-client.thephpleague.com) from the [League of extraordinary packages](https://thephpleague.com), providing support for many more OAuth services, and you'll need to update your code if you were using OAuth in 5.2. See [the examples](https://github.com/PHPMailer/PHPMailer/tree/master/examples) and documentation in the [PHPMailer wiki](https://github.com/PHPMailer/PHPMailer/wiki).\n\n## Extras\nAdditional classes previously bundled in the `Extras` folder (such as htmlfilter and EasyPeasyICS) have been removed - use equivalent packages from [packagist.org](https://packagist.org) instead.\n\n## Other upgrade changes\nSee the changelog for full details.\n* File structure simplified, classes live in the `src/` folder\n* Most statically called functions now use the `static` keyword instead of `self`, so it's possible to override static internal functions in subclasses, for example `validateAddress()`\n* Complete RFC standardisation on CRLF (`\\r\\n`) line breaks by default:\n  * `PHPMailer::$LE` still exists, but all uses of it are changed to `static::$LE` for easier overriding. It may be changed to `\\n` automatically when sending via `mail()` on UNIX-like OSs\n  * `PHPMailer::CRLF` line ending constant removed\n  * The length of the line break is no longer used in line length calculations\n  * Similar changes to line break handling in SMTP and POP3 classes\n* All elements previously marked as deprecated have been removed:\n  * `PHPMailer->Version`\n  * `PHPMailer->ReturnPath`\n  * `PHPMailer->PluginDir`\n  * `PHPMailer->encodeQPphp()`\n  * `SMTP->CRLF`\n  * `SMTP->Version`\n  * `SMTP->SMTP_PORT`\n  * `POP3->CRLF`\n  * `POP3->Version`\n* NTLM authentication has been removed - it never worked anyway!\n  * `PHPMailer->Workstation`\n  * `PHPMailer->Realm`\n* `SMTP::authenticate` method signature changed\n* `parseAddresses()` is now static\n* `validateAddress()` is now called statically from `parseAddresses()`\n* `idnSupported()` is now static and is called statically from `punyencodeAddress()`\n* `PHPMailer->SingleToArray` is now protected\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "6.9.3\n"
        },
        {
          "name": "changelog.md",
          "type": "blob",
          "size": 50.9931640625,
          "content": "# PHPMailer Change Log\n\n## Version 6.9.3 (November 22nd, 2024)\n* Add support for the release version of PHP 8.4\n* Add experimental support for PHP 8.5\n* Use rfc-editor.org for all RFC docs links\n\n## Version 6.9.2 (October 9th, 2024)\n* Escape dots in SMTP transaction ID patterns\n* Add link to [aboutmy.email](https://aboutmy.email) testing service in docs\n* Add a more comprehensive example for using XOAUTH2 with gmail and Azure, thanks to @decomplexity\n* Update Turkish, Spanish, Japanese, Russian, French translations\n* Add Urdu & Kurdish (Sorani) translations\n* Fix broken links in docs and comments, avoid http links, correct link to LGPL 2.1 license file\n* Cleaner PSR-3 SMTP debug logging\n* Bump GitHub action versions\n* Fix error handler scope issue in POP3 and SMTP classes\n* Numerous test improvements by @jrfnl\n\n## Version 6.9.1 (November 25th, 2023)\n* Finalise SendOauth2 example\n\n## Version 6.9.0 (November 23rd, 2023)\n* Add support for official release of PHP 8.3, add experimental support for PHP 8.4\n* Add `clearCustomHeader` and `replaceCustomHeader` methods\n* Add support for the XCLIENT SMTP extension with `setSMTPXclientAttribute` and `getSMTPXclientAttributes` methods\n* Don't attempt opportunistic TLS when connecting to localhost\n* Add package link and example showing how to use @decomplexity's SendOauth2 wrapper\n* Update example to show a better way of using an SMTP subclass\n* Avoid some more deprecation warnings\n* Update Danish and Polish translations\n* Add Bengali and Assamese translations\n\n## Version 6.8.1 (August 29th, 2023)\n* Don't reflect malformed DSNs in error messages to avert any risk of XSS\n* Improve Simplified Chinese, Sinhalese, and Norwegian translations\n* Don't use `setAccessible` in PHP >= 8.1 in tests\n* Avoid a deprecation notice in PHP 8.3\n* Fix link in readme\n\n## Version 6.8.0 (March 6th, 2023)\n* Add DSN parsing class, thanks to @voronkovich\n* Fix some name edge cases, expand tests\n* Add pattern for ZonMTA message IDs\n* Improve Hindi translation\n\n## Version 6.7.1 (December 8th, 2022)\n* Add official support for PHP 8.2\n* Add PHP 8.3 to test suite with \"experimental\" status\n* Add ext-openssl to composer suggest list\n* Bump development dependencies\n\n## Version 6.7 (December 5th, 2022)\n* Break out boundary definitions into a method (note that boundary format has also changed slightly)\n* Remove MIME preamble to match popular client behaviour, may help with DKIM too\n* Fix handling of trailing whitespace in simple DKIM canonicalisation\n* Fix some possible POP3 auth issues, including a TCP hang (thanks to @czirkoszoltan)\n* Add Azure XOAUTH2 example and docs (thanks to @greew)\n* Preserve errors during disconnect\n* Avoid some PHP 8.1 type issues\n* Update CI to run on Ubuntu 22.04\n\n## Version 6.6.5 (October 7th, 2022)\n\n* Don't try to issue RSET if there has been a connection error\n* Reject attempts to add folders as attachments\n* Don't suppress earlier error messages on close()\n* Handle Host === null better\n* Update Danish and Polish translations\n* Change recommendation for Microsoft OAuth package to thenetworg/oauth2-azure\n* Bump some GitHub action versions\n\n## Version 6.6.4 (August 22nd, 2022)\n* Update Greek translation\n* Add text/csv MIME type\n* Fix DKIM when sending to anonymous group via mail()\n* Improve docs around auth following gmail & MS deprecations\n* Update GitHub action deps\n* Add OpenSSF Scorecard security health metrics\n\n## Version 6.6.3 (June 20th, 2022)\n* Add an HTML form to the OAuth setup script\n* Minor CS improvements\n* Add Mongolian translation\n* Remove bogus \"ch\" translation\n\n## Version 6.6.2 (June 14th, 2022)\n* Fix docs deployment GitHub action\n* Updates to parallel-lint and console highlighter, thanks to @jrfnl\n\n## Version 6.6.1 (June 14th, 2022) (unreleased)\n* Don't clear errors on RSET, so they can still be obtained when using keepalive\n* Bump some GitHub action versions\n* Fix some tests\n* 🇺🇦 Slava Ukraini!\n\n## Version 6.6 (February 28th, 2022)\n* Introduce interface for OAuth providers, making it easier to use OAuth libraries other than the League one, thanks to @pdscopes.\n* Add more contextual information to TLS connection failure error messages, and throw exceptions on TLS connection errors, thanks to @miken32\n\n## Version 6.5.4 (February 17th, 2022)\n* If we can't use escaping functions, refuse to do unsafe things\n* Avoid PHP 8.1 trim issue\n* Add tests for XMailer\n* Fix bug in use of CharSet property\n* Fix bug in file upload example\n* Update dev dependencies\n\n## Version 6.5.3 (November 25th, 2021)\n* Wrong commit tagged for the 6.5.2 release!\n* Version file updated\n\n## Version 6.5.2 (November 25th, 2021)\n* Enable official support for PHP 8.1\n* Enable experimental support for PHP 8.2\n* Fix for PHP 5.6\n* Fix for incorrect options for punyencoding IDNs\n\n## Version 6.5.1 (August 18th, 2021)\n* Provisional support for PHP 8.1\n* Major overhaul of test suite\n* Add codecov.io coverage reporting\n* Prefer implicit TLS on port 465 as default encryption scheme in examples, as per RFC8314\n* Fix potential noisy output from IMAP address parser\n* Stricter checking of custom MessageID validity\n* Replace invalid default From address\n* Support fallback for languages, so a request for `pt_xx` will fall back to `pt` rather than the default `en`.\n* Support multi-line RFC2047 addresses in parseAddresses\n* Improved Japanese translation\n\nMany thanks to @jrfnl for all her work.\n\n## Version 6.5.0 (June 16th, 2021)\n* **SECURITY** Fixes CVE-2021-34551, a complex RCE affecting Windows hosts. See [SECURITY.md](SECURITY.md) for details.\n* The fix for this issue changes the way that language files are loaded. While they remain in the same PHP-like format, they are processed as plain text, and any code in them will not be run, including operations such as concatenation using the `.` operator.\n* *Deprecation* The current translation file format using PHP arrays is now deprecated; the next major version will introduce a new format.\n* **SECURITY** Fixes CVE-2021-3603 that may permit untrusted code to be run from an address validator. See [SECURITY.md](SECURITY.md) for details.\n* The fix for this issue includes a minor BC break: callables injected into `validateAddress`, or indirectly through the `$validator` class property, may no longer be simple strings. If you want to inject your own validator, provide a closure instead of a function name.\n* Haraka message ID strings are now recognised\n\n## Version 6.4.1 (April 29th, 2021)\n* **SECURITY** Fixes CVE-2020-36326, a regression of CVE-2018-19296 object injection introduced in 6.1.8, see SECURITY.md for details\n* Reject more file paths that look like URLs, matching RFC3986 spec, blocking URLS using schemes such as `ssh2`\n* Ensure method signature consistency in `doCallback` calls\n* Ukrainian language update\n* Add composer scripts for checking coding standards and running tests\n\n## Version 6.4.0 (March 31st, 2021)\n* Revert change that made the `mail()` and sendmail transports set the envelope sender if one isn't explicitly provided, as it causes problems described in <https://github.com/PHPMailer/PHPMailer/issues/2298>\n* Check for mbstring extension before decoding addresss in `parseAddress`\n* Add Serbian Latin translation (`sr_latn`)\n* Enrol PHPMailer in Tidelift\n\n## Version 6.3.0 (February 19th, 2021)\n* Handle early connection errors such as 421 during connection and EHLO states\n* Switch to GitHub Actions for CI\n* Generate debug output for `mail()`, sendmail, and qmail transports. Enable using the same mechanism as for SMTP: set `SMTPDebug` > 0\n* Make the `mail()` and sendmail transports set the envelope sender the same way as SMTP does, i.e. use whatever `From` is set to, only falling back to the `sendmail_from` php.ini setting if `From` is unset. This avoids errors from the `mail()` function if `Sender` is not set explicitly and php.ini is not configured. This is a minor functionality change, so bumps the minor version number.\n* Extend `parseAddresses` to decode encoded names, improve tests\n\n## Version 6.2.0\n* PHP 8.0 compatibility, many thanks to @jrf_nl!\n* Switch from PHP CS Fixer to PHP CodeSniffer for coding standards\n* Create class constants for the debug levels in the POP3 class\n* Improve French, Slovenian, and Ukrainian translations\n* Improve file upload examples so file extensions are retained\n* Resolve PHP 8 line break issues due to a very old PHP bug being fixed\n* Avoid warnings when using old openssl functions\n* Improve Travis-CI build configuration\n\n## Version 6.1.8 (October 9th, 2020)\n* Mark `ext-hash` as required in composer.json. This has long been required, but now it will cause an error at install time rather than runtime, making it easier to diagnose\n* Make file upload examples safer\n* Update links to SMTP testing servers\n* Avoid errors when set_time_limit is disabled (you need better hosting!)\n* Allow overriding auth settings for local tests; makes it easy to run tests using HELO\n* Recover gracefully from errors during keepalive sessions\n* Add AVIF MIME type mapping\n* Prevent duplicate `To` headers in BCC-only messages when using `mail()`\n* Avoid file function problems when attaching files from Windows UNC paths\n* Improve German, Bahasa Indonesian, Filipino translations\n* Add Javascript-based example\n* Increased test coverage\n\n## Version 6.1.7 (July 14th, 2020)\n* Split SMTP connection into two separate methods\n* Undo BC break in PHP versions 5.2.3 - 7.0.0 introduced in 6.1.2 when injecting callables for address validation and HTML to text conversion\n* Save response to SMTP welcome banner as other responses are saved\n* Retry stream_select if interrupted by a signal\n\n## Version 6.1.6 (May 27th, 2020)\n* **SECURITY** Fix insufficient output escaping bug in file attachment names. CVE-2020-13625. Reported by Elar Lang of Clarified Security.\n* Correct Armenian ISO language code from `am` to `hy`, add mapping for fallback\n* Use correct timeout property in debug output\n\n## Version 6.1.5 (March 14th, 2020)\n* Reject invalid custom headers that are empty or contain breaks\n* Various fixes for DKIM issues, especially when using `mail()` transport\n* Drop the `l=` length tag from DKIM signatures; it's a mild security risk\n* Ensure CRLF is used explicitly when needed, rather than `static::$LE`\n* Add a method for trimming header content consistently\n* Some minor tweaks to resolve static analyser complaints\n* Check that attachment files are readable both when adding *and* when sending\n* Work around Outlook bug in mishandling MIME preamble\n* Danish translation improvements\n\n## Version 6.1.4 (December 10th, 2019)\n* Clean up hostname handling\n* Avoid IDN error on older PHP versions, prep for PHP 8.0\n* Don't force RFC2047 folding unnecessarily\n* Enable tests on full release of PHP 7.4\n\n## Version 6.1.3 (November 21st, 2019) \n* Fix an issue preventing injected debug handlers from working\n* Fix an issue relating to connection timeout\n* Add `SMTP::MAX_REPLY_LENGTH` constant\n* Remove some dev dependencies; phpdoc no longer included\n* Fix an issue where non-compliant servers returning bare codes caused an SMTP hang\n\n## Version 6.1.2 (November 13th, 2019) \n* Substantial revision of DKIM header generation\n* Use shorter hashes for auto-generated CID values\n* Fix format of content-id headers, and only use them for inline attachments\n* Remove all use of XHTML\n* Lots of coding standards cleanup\n* API docs are now auto-updated via GitHub actions\n* Fix header separation bug created in 6.1.1\n* Fix misidentification of background attributes in SVG images in msgHTML\n\n## Version 6.1.1 (September 27th 2019)\n* Fix misordered version tag\n\n## Version 6.1.0 (September 27th 2019)\n* Multiple bug fixes for folding of long header lines, thanks to @caugner\n* Add support for [RFC2387 child element content-type hint](https://www.rfc-editor.org/rfc/rfc2387#section-3.1) in `multipart/related` structures.\n* Support for Ical event methods other than `REQUEST`, thanks to @puhr-mde\n* Change header folding and param separation to use spaces instead of tabs\n* Use ; to separate multiple MIME header params\n* Add support for RFC3461 DSN messages\n* IMAP example code fixed\n* Use PHP temp streams instead of temp files\n* Allow for longer SMTP error codes\n* Updated Brazilian Portuguese translation\n* Throw exceptions on invalid encoding values\n* Add Afrikaans translation, thanks to @Donno191\n* Updated Farsi/Persian translation\n* Add PHP 7.4 to test config\n* Remove some ambiguity about setting XMailer property\n* Improve error checking in mailing list example\n* Drop PHP 5.5 from CI config as it's no longer supported by Travis-CI\n* Fix S/MIME signing\n* Add constants for encryption type\n* More consistent use of constants for encryption, charset, encoding\n* Add PHPMailer logo images\n\n## Version 6.0.7 (February 1st 2019)\n* Include RedHat GPL Cooperation Commitment - see the `COMMITMENT` file for details.\n* Don't exclude composer.json from git exports as it breaks composer updates in projects that use PHPMailer\n* Updated Malay translation\n* Fix language tests\n\n## Version 6.0.6 (November 14th 2018)\n* **SECURITY** Fix potential object injection vulnerability. Reported by Sehun Oh of cyberone.kr.\n* Added Tagalog translation, thanks to @StoneArtz\n* Added Malagache translation, thanks to @Hackinet\n* Updated Serbian translation, fixed incorrect language code, thanks to @mmilanovic4\n* Updated Arabic translations (@MicroDroid)\n* Updated Hungarian translations\n* Updated Dutch translations\n* Updated Slovenian translation (@filips123)\n* Updated Slovak translation (@pcmanik)\n* Updated Italian translation (@sabas)\n* Updated Norwegian translation (@aleskr)\n* Updated Indonesian translation (@mylastof)\n* Add constants for common values, such as `text/html` and `quoted-printable`, and use them\n* Added support for copied headers in DKIM, helping with debugging, and an option to add extra headers to the DKIM signature. See DKIM_sign example for how to use them. Thanks to @gwi-mmuths.\n* Add Campaign Monitor transaction ID pattern matcher\n* Remove deprecated constant and ini values causing warnings in PHP 7.3, added PHP 7.3 build to Travis config.\n* Expanded test coverage\n\n## Version 5.2.27 (November 14th 2018)\n* **SECURITY** Fix potential object injection vulnerability. Reported by Sehun Oh of cyberone.kr.\n* Note that the 5.2 branch is now deprecated and will not receive security updates after 31st December 2018.\n\n## Version 6.0.5 (March 27th 2018)\n* Re-roll of 6.0.4 to fix missed version file entry. No code changes.\n\n## Version 6.0.4 (March 27th 2018)\n* Add some modern MIME types\n* Add Hindi translation (thanks to @dextel2)\n* Improve composer docs\n* Fix generation of path to language files\n\n## Version 6.0.3 (January 5th 2018)\n* Correct DKIM canonicalization of line breaks for header & body - thanks to @themichaelhall\n* Make dependence on ext-filter explicit in composer.json\n\n## Version 6.0.2 (November 29th 2017)\n* Don't make max line length depend on line break format\n* Improve Travis-CI config - thanks to Filippo Tessarotto\n* Match SendGrid transaction IDs\n* `idnSupported()` now static, as previously documented\n* Improve error messages for invalid addresses\n* Improve Indonesian translation (thanks to @januridp)\n* Improve Esperanto translation (thanks to @dknacht)\n* Clean up git export ignore settings for production and zip bundles\n* Update license doc\n* Updated upgrading docs\n* Clarify `addStringEmbeddedImage` docs\n* Hide auth credentials in all but lowest-level debug output, prevents leakage in bug reports\n* Code style cleanup\n\n## Version 6.0.1 (September 14th 2017)\n* Use shorter Message-ID headers (with more entropy) to avoid iCloud blackhole bug\n* Switch to Symfony code style (though it's not well defined)\n* CI builds now apply syntax & code style checks, so make your PRs tidy!\n* CI code coverage only applied on latest version of PHP to speed up builds (thanks to @Slamdunk for these CI changes)\n* Remove `composer.lock` - it's important that libraries break early; keeping it is for apps\n* Rename test scripts to PSR-4 spec\n* Make content-id values settable on attachments, not just embedded items\n* Add SMTP transaction IDs to callbacks & allow for future expansion\n* Expand test coverage\n\n## Version 6.0 (August 28th 2017)\nThis is a major update that breaks backwards compatibility.\n\n* **Requires PHP 5.5 or later**\n* **Uses the `PHPMailer\\PHPMailer` namespace**\n* File structure simplified and PSR-4 compatible, classes live in the `src/` folder\n* The custom autoloader has been removed: [**use composer**](https://getcomposer.org)!\n* Classes & Exceptions renamed to make use of the namespace\n* Most statically called functions now use the `static` keyword instead of `self`, so it's possible to override static internal functions in subclasses, for example `validateAddress()`\n* Complete RFC standardisation on CRLF (`\\r\\n`) line breaks for SMTP by default:\n  * `PHPMailer:$LE` defaults to CRLF\n  * All uses of `PHPMailer::$LE` property converted to use `static::$LE` constant for consistency and ease of overriding\n  * Similar changes to line break handling in SMTP and POP3 classes.\n  * Line break format for `mail()` transport is set automatically.\n  * Warnings emitted for buggy `mail()` in PHP versions 7.0.0 - 7.0.16 and 7.1.0 - 7.1.2; either upgrade or switch to SMTP.\n* Extensive reworking of XOAUTH2, adding support for Google, Yahoo and Microsoft providers, thanks to @sherryl4george\n* Major cleanup of docs and examples\n* All elements previously marked as deprecated have been removed:\n  * `PHPMailer->Version` (replaced with `VERSION` constant)\n  * `PHPMailer->ReturnPath`\n  * `PHPMailer->PluginDir`\n  * `PHPMailer->encodeQPphp()`\n  * `SMTP->CRLF` (replaced with `LE` constant)\n  * `SMTP->Version` (replaced with `VERSION` constant)\n  * `SMTP->SMTP_PORT` (replaced with `DEFAULT_PORT` constant)\n  * `POP3->CRLF` (replaced with `LE` constant)\n  * `POP3->Version` (replaced with `VERSION` constant)\n  * `POP3->POP3_PORT` (replaced with `DEFAULT_PORT` constant)\n  * `POP3->POP3_TIMEOUT` (replaced with `DEFAULT_TIMEOUT` constant)\n* NTLM authentication has been removed - it never worked anyway!\n  * `PHPMailer->Workstation`\n  * `PHPMailer->Realm`\n* `SingleTo` functionality is deprecated; this belongs at a higher level - PHPMailer is not a mailing list system.\n* `SMTP::authenticate` method signature changed\n* `parseAddresses()` is now static\n* `validateAddress()` is now called statically from `parseAddresses()`\n* `idnSupported()` is now static and is called statically from `punyencodeAddress()`\n* `PHPMailer->SingleToArray` is now protected\n* `fixEOL()` method removed - it duplicates `PHPMailer::normalizeBreaks()`, so use that instead\n* Don't try to use an auth mechanism if it's not supported by the server\n* Reorder automatic AUTH mechanism selector to try most secure method first\n* `Extras` classes have been removed - use alternative packages from [packagist.org](https://packagist.org) instead\n* Better handling of automatic transfer encoding switch in the presence of long lines\n* Simplification of address validation - now uses PHP's `FILTER_VALIDATE_EMAIL` pattern by default, retains advanced options\n* `Debugoutput` can accept a PSR-3 logger instance\n* To reduce code footprint, the examples folder is no longer included in composer deployments or GitHub zip files\n* Trap low-level errors in SMTP, reports via debug output\n* More reliable folding of message headers\n* Inject your own SMTP implementation via `setSMTPInstance()` instead of having to subclass and override `getSMTPInstance()`.\n* Make obtaining SMTP transaction ID more reliable\n* Better handling of unreliable PHP timeouts\n* Made `SMTPDebug = 4` slightly less noisy\n\n## Version 5.2.25 (August 28th 2017)\n* Make obtaining SMTP transaction ID more reliable\n* Add Bosnian translation\n* This is the last official release in the legacy PHPMailer 5.2 series; there may be future security patches (which will be found in the [5.2-stable branch](https://github.com/PHPMailer/PHPMailer/tree/5.2-stable)), but no further non-security PRs or issues will be accepted. Migrate to PHPMailer 6.0.\n\n## Version 5.2.24 (July 26th 2017)\n* **SECURITY** Fix XSS vulnerability in one of the code examples, [CVE-2017-11503](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-11503). The `code_generator.phps` example did not filter user input prior to output. This file is distributed with a `.phps` extension, so it is not normally executable unless it is explicitly renamed, so it is safe by default. There was also an undisclosed potential XSS vulnerability in the default exception handler (unused by default). Patches for both issues kindly provided by Patrick Monnerat of the Fedora Project.\n* Handle bare codes (an RFC contravention) in SMTP server responses\n* Make message timestamps more dynamic - calculate the date separately for each message\n* More thorough checks for reading attachments.\n* Throw an exception when trying to send a message with an empty body caused by an internal error.\n* Replaced all use of MD5 and SHA1 hash functions with SHA256.\n* Now checks for invalid host strings when sending via SMTP.\n* Include timestamps in HTML-format debug output\n* Improve Turkish, Norwegian, Serbian, Brazilian Portuguese & simplified Chinese translations\n* Correction of Serbian ISO language code from `sr` to `rs`\n* Fix matching of multiple entries in `Host` to match IPv6 literals without breaking port selection (see #1094, caused by a3b4f6b)\n* Better capture and reporting of SMTP connection errors\n\n## Version 5.2.23 (March 15th 2017)\n* Improve trapping of TLS errors during connection so that they don't cause warnings, and are reported better in debug output\n* Amend test suite so it uses PHPUnit version 4.8, compatible with older versions of PHP, instead of the version supplied by Travis-CI\n* This forces pinning of some dev packages to older releases, but should make travis builds more reliable\n* Test suite now runs on HHVM, and thus so should PHPMailer in general\n* Improve Czech translations\n* Add links to CVE-2017-5223 resources\n\n## Version 5.2.22 (January 5th 2017)\n* **SECURITY** Fix [CVE-2017-5223](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-5223), local file disclosure vulnerability if content passed to `msgHTML()` is sourced from unfiltered user input. Reported by Yongxiang Li of Asiasecurity. The fix for this means that calls to `msgHTML()` without a `$basedir` will not import images with relative URLs, and relative URLs containing `..` will be ignored.\n* Add simple contact form example\n* Emoji in test content\n\n## Version 5.2.21 (December 28th 2016)\n* Fix missed number update in version file - no functional changes\n\n## Version 5.2.20 (December 28th 2016)\n* **SECURITY** Critical security update for CVE-2016-10045 please update now! Thanks to [Dawid Golunski](https://legalhackers.com) and Paul Buonopane (@Zenexer).\n* Note that this change will break VERP addresses in Sender if you're using mail() - workaround: use SMTP to localhost instead.\n\n## Version 5.2.19 (December 26th 2016)\n* Minor cleanup\n\n## Version 5.2.18 (December 24th 2016)\n* **SECURITY** Critical security update for CVE-2016-10033 please update now! Thanks to [Dawid Golunski](https://legalhackers.com).\n* Add ability to extract the SMTP transaction ID from some common SMTP success messages\n* Minor documentation tweaks\n\n## Version 5.2.17 (December 9th 2016)\n* This is officially the last feature release of 5.2. Security fixes only from now on; use PHPMailer 6.0!\n* Allow DKIM private key to be provided as a string\n* Provide mechanism to allow overriding of boundary and message ID creation\n* Improve Brazilian Portuguese, Spanish, Swedish, Romanian, and German translations\n* PHP 7.1 support for Travis-CI\n* Fix some language codes\n* Add security notices\n* Improve DKIM compatibility in older PHP versions\n* Improve trapping and capture of SMTP connection errors\n* Improve passthrough of error levels for debug output\n* PHPDoc cleanup\n\n## Version 5.2.16 (June 6th 2016)\n* Added DKIM example\n* Fixed empty additional_parameters problem\n* Fixed wrong version number in VERSION file!\n* Improve line-length tests\n* Use instance settings for SMTP::connect by default\n* Use more secure auth mechanisms first\n\n## Version 5.2.15 (May 10th 2016)\n* Added ability to inject custom address validators, and set the default validator\n* Fix TLS 1.2 compatibility\n* Remove some excess line breaks in MIME structure\n* Updated Polish, Russian, Brazilian Portuguese, Georgian translations\n* More DRY!\n* Improve error messages\n* Update dependencies\n* Add example showing how to handle multiple form file uploads\n* Improve SMTP example\n* Improve Windows compatibility\n* Use consistent names for temp files\n* Fix gmail XOAUTH2 scope, thanks to @sherryl4george\n* Fix extra line break in getSentMIMEMessage()\n* Improve DKIM signing to use SHA-2\n\n## Version 5.2.14 (Nov 1st 2015)\n* Allow addresses with IDN (Internationalized Domain Name) in PHP 5.3+, thanks to @fbonzon\n* Allow access to POP3 errors\n* Make all POP3 private properties and methods protected\n* **SECURITY** Fix vulnerability that allowed email addresses with line breaks (valid in RFC5322) to pass to SMTP, permitting message injection at the SMTP level. Mitigated in both the address validator and in the lower-level SMTP class. Thanks to Takeshi Terada.\n* Updated Brazilian Portuguese translations (Thanks to @phelipealves)\n\n## Version 5.2.13 (Sep 14th 2015)\n* Rename internal oauth class to avoid name clashes\n* Improve Estonian translations\n\n## Version 5.2.12 (Sep 1st 2015)\n* Fix incorrect composer package dependencies\n* Skip existing embedded image `cid`s in `msgHTML`\n\n## Version 5.2.11 (Aug 31st 2015)\n* Don't switch to quoted-printable for long lines if already using base64\n* Fixed Travis-CI config when run on PHP 7\n* Added Google XOAUTH2 authentication mechanism, thanks to @sherryl4george\n* Add address parser for RFC822-format addresses\n* Update MS Office MIME types\n* Don't convert line breaks when using quoted-printable encoding\n* Handle MS Exchange returning an invalid empty AUTH-type list in EHLO\n* Don't set name or filename properties on MIME parts that don't have one\n\n## Version 5.2.10 (May 4th 2015)\n* Add custom header getter\n* Use `application/javascript` for .js attachments\n* Improve RFC2821 compliance for timelimits, especially for end-of-data\n* Add Azerbaijani translations (Thanks to @mirjalal)\n* Minor code cleanup for robustness\n* Add Indonesian translations (Thanks to @ceceprawiro)\n* Avoid `error_log` Debugoutput naming clash\n* Add ability to parse server capabilities in response to EHLO (useful for SendGrid etc)\n* Amended default values for WordWrap to match RFC\n* Remove html2text converter class (has incompatible license)\n* Provide new mechanism for injecting html to text converters\n* Improve pointers to docs and support in README\n* Add example file upload script\n* Refactor and major cleanup of EasyPeasyICS, now a lot more usable\n* Make set() method simpler and more reliable\n* Add Malay translation (Thanks to @nawawi)\n* Add Bulgarian translation (Thanks to @mialy)\n* Add Armenian translation (Thanks to Hrayr Grigoryan)\n* Add Slovenian translation (Thanks to Klemen Tušar)\n* More efficient word wrapping\n* Add support for S/MIME signing with additional CA certificate (thanks to @IgitBuh)\n* Fix incorrect MIME structure when using S/MIME signing and isMail() (#372)\n* Improved checks and error messages for missing extensions\n* Store and report SMTP errors more consistently\n* Add MIME multipart preamble for better Outlook compatibility\n* Enable TLS encryption automatically if the server offers it\n* Provide detailed errors when individual recipients fail\n* Report more errors when connecting\n* Add extras classes to composer classmap\n* Expose stream_context_create options via new SMTPOptions property\n* Automatic encoding switch to quoted-printable if message lines are too long\n* Add Korean translation (Thanks to @ChalkPE)\n* Provide a pointer to troubleshooting docs on SMTP connection failure\n\n## Version 5.2.9 (Sept 25th 2014)\n* **Important: The autoloader is no longer autoloaded by the PHPMailer class**\n* Update html2text from https://github.com/mtibben/html2text\n* Improve Arabic translations (Thanks to @tarekdj)\n* Consistent handling of connection variables in SMTP and POP3\n* PHPDoc cleanup\n* Update composer to use PHPUnit 4.1\n* Pass consistent params to callbacks\n* More consistent handling of error states and debug output\n* Use property defaults, remove constructors\n* Remove unreachable code\n* Use older regex validation pattern for troublesome PCRE library versions\n* Improve PCRE detection in older PHP versions\n* Handle debug output consistently, and always in UTF-8\n* Allow user-defined debug output method via a callable\n* msgHTML now converts data URIs to embedded images\n* SMTP::getLastReply() will now always be populated\n* Improved example code in README\n* Ensure long filenames in Content-Disposition are encoded correctly\n* Simplify SMTP debug output mechanism, clarify levels with constants\n* Add SMTP connection check example\n* Simplify examples, don't use mysql* functions\n\n## Version 5.2.8 (May 14th 2014)\n* Increase timeout to match RFC2821 section 4.5.3.2 and thus not fail greetdelays, fixes #104\n* Add timestamps to default debug output\n* Add connection events and new level 3 to debug output options\n* Chinese language update (Thanks to @binaryoung)\n* Allow custom Mailer types (Thanks to @michield)\n* Cope with spaces around SMTP host specs\n* Fix processing of multiple hosts in connect string\n* Added Galician translation (Thanks to @donatorouco)\n* Autoloader now prepends\n* Docs updates\n* Add Latvian translation (Thanks to @eddsstudio)\n* Add Belarusian translation (Thanks to @amaksymiuk)\n* Make autoloader work better on older PHP versions\n* Avoid double-encoding if mbstring is overloading mail()\n* Add Portuguese translation (Thanks to @Jonadabe)\n* Make quoted-printable encoder respect line ending setting\n* Improve Chinese translation (Thanks to @PeterDaveHello)\n* Add Georgian translation (Thanks to @akalongman)\n* Add Greek translation (Thanks to @lenasterg)\n* Fix serverHostname on PHP < 5.3\n* Improve performance of SMTP class\n* Implement automatic 7bit downgrade\n* Add Vietnamese translation (Thanks to @vinades)\n* Improve example images, switch to PNG\n* Add Croatian translation (Thanks to @hrvoj3e)\n* Remove setting the Return-Path and deprecate the Return-path property - it's just wrong!\n* Fix language file loading if CWD has changed (@stephandesouza)\n* Add HTML5 email validation pattern\n* Improve Turkish translations (Thanks to @yasinaydin)\n* Improve Romanian translations (Thanks to @aflorea)\n* Check php.ini for path to sendmail/qmail before using default\n* Improve Farsi translation (Thanks to @MHM5000)\n* Don't use quoted-printable encoding for multipart types\n* Add Serbian translation (Thanks to ajevremovic at gmail.com)\n* Remove useless PHP5 check\n* Use SVG for build status badges\n* Store MessageDate on creation\n* Better default behaviour for validateAddress\n\n## Version 5.2.7 (September 12th 2013)\n* Add Ukrainian translation from @Krezalis\n* Support for do_verp\n* Fix bug in CRAM-MD5 AUTH\n* Propagate Debugoutput option to SMTP class (@Reblutus)\n* Determine MIME type of attachments automatically\n* Add cross-platform, multibyte-safe pathinfo replacement (with tests) and use it\n* Add a new 'html' Debugoutput type\n* Clean up SMTP debug output, remove embedded HTML\n* Some small changes in header formatting to improve IETF msglint test results\n* Update test_script to use some recently changed features, rename to code_generator\n* Generated code actually works!\n* Update SyntaxHighlighter\n* Major overhaul and cleanup of example code\n* New PHPMailer graphic\n* msgHTML now uses RFC2392-compliant content ids\n* Add line break normalization function and use it in msgHTML\n* Don't set unnecessary reply-to addresses\n* Make fakesendmail.sh a bit cleaner and safer\n* Set a content-transfer-encoding on multiparts (fixes msglint error)\n* Fix cid generation in msgHTML (Thanks to @digitalthought)\n* Fix handling of multiple SMTP servers (Thanks to @NanoCaiordo)\n* SMTP->connect() now supports stream context options (Thanks to @stanislavdavid)\n* Add support for iCal event alternatives (Thanks to @reblutus)\n* Update to Polish language file (Thanks to Krzysztof Kowalewski)\n* Update to Norwegian language file (Thanks to @datagutten)\n* Update to Hungarian language file (Thanks to @dominicus-75)\n* Add Persian/Farsi translation from @jaii\n* Make SMTPDebug property type match type in SMTP class\n* Add unit tests for DKIM\n* Major refactor of SMTP class\n* Reformat to PSR-2 coding standard\n* Introduce autoloader\n* Allow overriding of SMTP class\n* Overhaul of PHPDocs\n* Fix broken Q-encoding\n* Czech language update (Thanks to @nemelu)\n* Removal of excess blank lines in messages\n* Added fake POP server and unit tests for POP-before-SMTP\n\n## Version 5.2.6 (April 11th 2013)\n* Reflect move to PHPMailer GitHub organisation at https://github.com/PHPMailer/PHPMailer\n* Fix unbumped version numbers\n* Update packagist.org with new location\n* Clean up Changelog\n\n## Version 5.2.5 (April 6th 2013)\n* First official release after move from Google Code\n* Fixes for qmail when sending via mail()\n* Merge in changes from Google code 5.2.4 release\n* Minor coding standards cleanup in SMTP class\n* Improved unit tests, now tests S/MIME signing\n* Travis-CI support on GitHub, runs tests with fake SMTP server\n\n## Version 5.2.4 (February 19, 2013)\n* Fix tag and version bug.\n* un-deprecate isSMTP(), isMail(), IsSendmail() and isQmail().\n* Numerous translation updates\n\n## Version 5.2.3 (February 8, 2013)\n* Fix issue with older PCREs and ValidateAddress() (Bugz: 124)\n* Add CRAM-MD5 authentication, thanks to Elijah madden, https://github.com/okonomiyaki3000\n* Replacement of obsolete Quoted-Printable encoder with a much better implementation\n* Composer package definition\n* New language added: Hebrew\n\n## Version 5.2.2 (December 3, 2012)\n* Some fixes and syncs from https://github.com/Synchro/PHPMailer\n* Add Slovak translation, thanks to Michal Tinka\n\n## Version 5.2.2-rc2 (November 6, 2012)\n* Fix SMTP server rotation (Bugz: 118)\n* Allow override of autogen'ed 'Date' header (for Drupal's\n  og_mailinglist module)\n* No whitespace after '-f' option (Bugz: 116)\n* Work around potential warning (Bugz: 114)\n\n## Version 5.2.2-rc1 (September 28, 2012)\n* Header encoding works with long lines (Bugz: 93)\n* Turkish language update (Bugz: 94)\n* undefined $pattern in EncodeQ bug squashed (Bugz: 98)\n* use of mail() in safe_mode now works (Bugz: 96)\n* ValidateAddress() now 'public static' so people can override the\n  default and use their own validation scheme.\n* ValidateAddress() no longer uses broken FILTER_VALIDATE_EMAIL\n* Added in AUTH PLAIN SMTP authentication\n\n## Version 5.2.2-beta2 (August 17, 2012)\n* Fixed Postfix VERP support (Bugz: 92)\n* Allow action_function callbacks to pass/use\n  the From address (passed as final param)\n* Prevent inf look for get_lines() (Bugz: 77)\n* New public var ($UseSendmailOptions). Only pass sendmail()\n  options iff we really are using sendmail or something sendmail\n  compatible. (Bugz: 75)\n* default setting for LE returned to \"\\n\" due to popular demand.\n\n## Version 5.2.2-beta1 (July 13, 2012)\n* Expose PreSend() and PostSend() as public methods to allow\n  for more control if serializing message sending.\n* GetSentMIMEMessage() only constructs the message copy when\n needed. Save memory.\n* Only pass params to mail() if the underlying MTA is\n  \"sendmail\" (as defined as \"having the string sendmail\n  in its pathname\") [#69]\n* Attachments now work with Amazon SES and others [Bugz#70]\n* Debug output now sent to stdout (via echo) or error_log [Bugz#5]\n* New var: Debugoutput (for above) [Bugz#5]\n* SMTP reads now Timeout aware (new var: Timeout=15) [Bugz#71]\n* SMTP reads now can have a Timelimit associated with them\n  (new var: Timelimit=30)[Bugz#71]\n* Fix quoting issue associated with charsets\n* default setting for LE is now RFC compliant: \"\\r\\n\"\n* Return-Path can now be user defined (new var: ReturnPath)\n  (the default is \"\" which implies no change from previous\n  behavior, which was to use either From or Sender) [Bugz#46]\n* X-Mailer header can now be disabled (by setting to a\n  whitespace string, eg \"  \") [Bugz#66]\n* Bugz closed: #68, #60, #42, #43, #59, #55, #66, #48, #49,\n               #52, #31, #41, #5. #70, #69\n\n## Version 5.2.1 (January 16, 2012)\n* Closed several bugs #5\n* Performance improvements\n* MsgHTML() now returns the message as required.\n* New method: GetSentMIMEMessage() (returns full copy of sent message)\n\n## Version 5.2 (July 19, 2011)\n* protected MIME body and header\n* better DKIM DNS Resource Record support\n* better aly handling\n* htmlfilter class added to extras\n* moved to Apache Extras\n\n## Version 5.1 (October 20, 2009)\n* fixed filename issue with AddStringAttachment (thanks to Tony)\n* fixed \"SingleTo\" property, now works with Senmail, Qmail, and SMTP in\n  addition to PHP mail()\n* added DKIM digital signing functionality, new properties:\n  - DKIM_domain (sets the domain name)\n  - DKIM_private (holds DKIM private key)\n  - DKIM_passphrase (holds your DKIM passphrase)\n  - DKIM_selector (holds the DKIM \"selector\")\n  - DKIM_identity (holds the identifying email address)\n* added callback function support\n  - callback function parameters include:\n    result, to, cc, bcc, subject and body\n  - see the test/test_callback.php file for usage.\n* added \"auto\" identity functionality\n  - can automatically add:\n    - Return-path (if Sender not set)\n    - Reply-To (if ReplyTo not set)\n  - can be disabled:\n    - $mail->SetFrom('yourname@yourdomain.com','First Last',false);\n    - or by adding the $mail->Sender and/or $mail->ReplyTo properties\n\nNote: \"auto\" identity added to help with emails ending up in spam or junk boxes because of missing headers\n\n## Version 5.0.2 (May 24, 2009)\n* Fix for missing attachments when inline graphics are present\n* Fix for missing Cc in header when using SMTP (mail was sent,\n  but not displayed in header -- Cc receiver only saw email To:\n  line and no Cc line, but did get the email (To receiver\n  saw same)\n\n## Version 5.0.1 (April 05, 2009)\n* Temporary fix for missing attachments\n\n## Version 5.0.0 (April 02, 2009)\nWith the release of this version, we are initiating a new version numbering\nsystem to differentiate from the PHP4 version of PHPMailer.\nMost notable in this release is fully object oriented code.\n\n### class.smtp.php:\n* Refactored class.smtp.php to support new exception handling\n* code size reduced from 29.2 Kb to 25.6 Kb\n* Removed unnecessary functions from class.smtp.php:\n  - public function Expand($name) {\n  - public function Help($keyword=\"\") {\n  - public function Noop() {\n  - public function Send($from) {\n  - public function SendOrMail($from) {\n  - public function Verify($name) {\n\n###  class.phpmailer.php:\n* Refactored class.phpmailer.php with new exception handling\n* Changed processing functionality of Sendmail and Qmail so they cannot be\n  inadvertently used\n* removed getFile() function, just became a simple wrapper for\n  file_get_contents()\n* added check for PHP version (will gracefully exit if not at least PHP 5.0)\n* enhanced code to check if an attachment source is the same as an embedded or\n  inline graphic source to eliminate duplicate attachments\n\n### New /test_script\nWe have written a test script you can use to test the script as part of your\ninstallation. Once you press submit, the test script will send a multi-mime\nemail with either the message you type in or an HTML email with an inline\ngraphic. Two attachments are included in the email (one of the attachments\nis also the inline graphic so you can see that only one copy of the graphic\nis sent in the email). The test script will also display the functional\nscript that you can copy/paste to your editor to duplicate the functionality.\n\n### New examples\nAll new examples in both basic and advanced modes. Advanced examples show\n   Exception handling.\n\n### PHPDocumentator (phpdocs) documentation for PHPMailer version 5.0.0\nAll new documentation\n\n## Version 2.3 (November 06, 2008)\n* added Arabic language (many thanks to Bahjat Al Mostafa)\n* removed English language from language files and made it a default within\n  class.phpmailer.php - if no language is found, it will default to use\n  the english language translation\n* fixed public/private declarations\n* corrected line 1728, $basedir to $directory\n* added $sign_cert_file to avoid improper duplicate use of $sign_key_file\n* corrected $this->Hello on line 612 to $this->Helo\n* changed default of $LE to \"\\r\\n\" to comply with RFC 2822. Can be set by the user\n  if default is not acceptable\n* removed trim() from return results in EncodeQP\n* /test and three files it contained are removed from version 2.3\n* fixed phpunit.php for compliance with PHP5\n* changed $this->AltBody = $textMsg; to $this->AltBody = html_entity_decode($textMsg);\n* We have removed the /phpdoc from the downloads. All documentation is now on\n  the http://phpmailer.codeworxtech.com website.\n\n## Version 2.2.1 (July 19, 2008)\n* fixed line 1092 in class.smtp.php (my apologies, error on my part)\n\n## Version 2.2 (July 15, 2008)\n* Fixed redirect issue (display of UTF-8 in thank you redirect)\n* fixed error in getResponse function declaration (class.pop3.php)\n* PHPMailer now PHP6 compliant\n* fixed line 1092 in class.smtp.php (endless loop from missing = sign)\n\n## Version 2.1 (Wed, June 04 2008)\nNOTE: WE HAVE A NEW LANGUAGE VARIABLE FOR DIGITALLY SIGNED S/MIME EMAILS. IF YOU CAN HELP WITH LANGUAGES OTHER THAN ENGLISH AND SPANISH, IT WOULD BE APPRECIATED.\n\n* added S/MIME functionality (ability to digitally sign emails)\n  BIG THANKS TO \"sergiocambra\" for posting this patch back in November 2007.\n  The \"Signed Emails\" functionality adds the Sign method to pass the private key\n  filename and the password to read it, and then email will be sent with\n  content-type multipart/signed and with the digital signature attached.\n* fully compatible with E_STRICT error level\n  - Please note:\n    In about half the test environments this development version was subjected\n    to, an error was thrown for the date() functions used (line 1565 and 1569).\n    This is NOT a PHPMailer error, it is the result of an incorrectly configured\n    PHP5 installation. The fix is to modify your 'php.ini' file and include the\n    date.timezone = Etc/UTC (or your own zone)\n    directive, to your own server timezone\n  - If you do get this error, and are unable to access your php.ini file:\n    In your PHP script, add\n    `date_default_timezone_set('Etc/UTC');`\n  - do not try to use\n    `$myVar = date_default_timezone_get();`\n    as a test, it will throw an error.\n* added ability to define path (mainly for embedded images)\n  function `MsgHTML($message,$basedir='')` ... where:\n  `$basedir` is the fully qualified path\n* fixed `MsgHTML()` function:\n  - Embedded Images where images are specified by `<protocol>://` will not be altered or embedded\n* fixed the return value of SMTP exit code ( pclose )\n* addressed issue of multibyte characters in subject line and truncating\n* added ability to have user specified Message ID\n  (default is still that PHPMailer create a unique Message ID)\n* corrected unidentified message type to 'application/octet-stream'\n* fixed chunk_split() multibyte issue (thanks to Colin Brown, et al).\n* added check for added attachments\n* enhanced conversion of HTML to text in MsgHTML (thanks to \"brunny\")\n\n## Version 2.1.0beta2 (Sun, Dec 02 2007)\n* implemented updated EncodeQP (thanks to coolbru, aka Marcus Bointon)\n* finished all testing, all known bugs corrected, enhancements tested\n\nNote: will NOT work with PHP4.\n\nPlease note, this is BETA software **DO NOT USE THIS IN PRODUCTION OR LIVE PROJECTS; INTENDED STRICTLY FOR TESTING**\n\n## Version 2.1.0beta1\nPlease note, this is BETA software\n** DO NOT USE THIS IN PRODUCTION OR LIVE PROJECTS\n INTENDED STRICTLY FOR TESTING\n\n## Version 2.0.0 rc2 (Fri, Nov 16 2007), interim release\n* implements new property to control VERP in class.smtp.php\n  example (requires instantiating class.smtp.php):\n  $mail->do_verp = true;\n* POP-before-SMTP functionality included, thanks to Richard Davey\n  (see class.pop3.php & pop3_before_smtp_test.php for examples)\n* included example showing how to use PHPMailer with GMAIL\n* fixed the missing Cc in SendMail() and Mail()\n\n## Version 2.0.0 rc1 (Thu, Nov 08 2007), interim release\n* dramatically simplified using inline graphics ... it's fully automated and requires no user input\n* added automatic document type detection for attachments and pictures\n* added MsgHTML() function to replace Body tag for HTML emails\n* fixed the SendMail security issues (input validation vulnerability)\n* enhanced the AddAddresses functionality so that the \"Name\" portion is used in the email address\n* removed the need to use the AltBody method (set from the HTML, or default text used)\n* set the PHP Mail() function as the default (still support SendMail, SMTP Mail)\n* removed the need to set the IsHTML property (set automatically)\n* added Estonian language file by Indrek P&auml;ri\n* added header injection patch\n* added \"set\" method to permit users to create their own pseudo-properties like 'X-Headers', etc.\n* fixed warning message in SMTP get_lines method\n* added TLS/SSL SMTP support.\n* PHPMailer has been tested with PHP4 (4.4.7) and PHP5 (5.2.7)\n* Works with PHP installed as a module or as CGI-PHP\nNOTE: will NOT work with PHP5 in E_STRICT error mode\n\n## Version 1.73 (Sun, Jun 10 2005)\n* Fixed denial of service bug: http://www.cybsec.com/vuln/PHPMailer-DOS.pdf\n* Now has a total of 20 translations\n* Fixed alt attachments bug: https://sourceforge.net/p/phpmailer/bugs/120/\n\n## Version 1.72 (Wed, May 25 2004)\n* Added Dutch, Swedish, Czech, Norwegian, and Turkish translations.\n* Received: Removed this method because spam filter programs like\n  SpamAssassin reject this header.\n* Fixed error count bug.\n* SetLanguage default is now \"language/\".\n* Fixed magic_quotes_runtime bug.\n\n## Version 1.71 (Tue, Jul 28 2003)\n* Made several speed enhancements\n* Added German and Italian translation files\n* Fixed HELO/AUTH bugs on keep-alive connects\n* Now provides an error message if language file does not load\n* Fixed attachment EOL bug\n* Updated some unclear documentation\n* Added additional tests and improved others\n\n## Version 1.70 (Mon, Jun 20 2003)\n* Added SMTP keep-alive support\n* Added IsError method for error detection\n* Added error message translation support (SetLanguage)\n* Refactored many methods to increase library performance\n* Hello now sends the newer EHLO message before HELO as per RFC 2821\n* Removed the boundary class and replaced it with GetBoundary\n* Removed queue support methods\n* New $Hostname variable\n* New Message-ID header\n* Received header reformat\n* Helo variable default changed to $Hostname\n* Removed extra spaces in Content-Type definition (#667182)\n* Return-Path should be set to Sender when set\n* Adds Q or B encoding to headers when necessary\n* quoted-encoding should now encode NULs \\000\n* Fixed encoding of body/AltBody (#553370)\n* Adds \"To: undisclosed-recipients:;\" when all recipients are hidden (BCC)\n* Multiple bug fixes\n\n## Version 1.65 (Fri, Aug 09 2002)\n* Fixed non-visible attachment bug (#585097) for Outlook\n* SMTP connections are now closed after each transaction\n* Fixed SMTP::Expand return value\n* Converted SMTP class documentation to phpDocumentor format\n\n## Version 1.62 (Wed, Jun 26 2002)\n* Fixed multi-attach bug\n* Set proper word wrapping\n* Reduced memory use with attachments\n* Added more debugging\n* Changed documentation to phpDocumentor format\n\n## Version 1.60 (Sat, Mar 30 2002)\n* Sendmail pipe and address patch (Christian Holtje)\n* Added embedded image and read confirmation support (A. Ognio)\n* Added unit tests\n* Added SMTP timeout support (*nix only)\n* Added possibly temporary PluginDir variable for SMTP class\n* Added LE message line ending variable\n* Refactored boundary and attachment code\n* Eliminated SMTP class warnings\n* Added SendToQueue method for future queuing support\n\n## Version 1.54 (Wed, Dec 19 2001)\n* Add some queuing support code\n* Fixed a pesky multi/alt bug\n* Messages are no longer forced to have \"To\" addresses\n\n## Version 1.50 (Thu, Nov 08 2001)\n* Fix extra lines when not using SMTP mailer\n* Set WordWrap variable to int with a zero default\n\n## Version 1.47 (Tue, Oct 16 2001)\n* Fixed Received header code format\n* Fixed AltBody order error\n* Fixed alternate port warning\n\n## Version 1.45 (Tue, Sep 25 2001)\n* Added enhanced SMTP debug support\n* Added support for multiple ports on SMTP\n* Added Received header for tracing\n* Fixed AddStringAttachment encoding\n* Fixed possible header name quote bug\n* Fixed wordwrap() trim bug\n* Couple other small bug fixes\n\n## Version 1.41 (Wed, Aug 22 2001)\n* Fixed AltBody bug w/o attachments\n* Fixed rfc_date() for certain mail servers\n\n## Version 1.40 (Sun, Aug 12 2001)\n* Added multipart/alternative support (AltBody)\n* Documentation update\n* Fixed bug in Mercury MTA\n\n## Version 1.29 (Fri, Aug 03 2001)\n* Added AddStringAttachment() method\n* Added SMTP authentication support\n\n## Version 1.28 (Mon, Jul 30 2001)\n* Fixed a typo in SMTP class\n* Fixed header issue with Imail (win32) SMTP server\n* Made fopen() calls for attachments use \"rb\" to fix win32 error\n\n## Version 1.25 (Mon, Jul 02 2001)\n* Added RFC 822 date fix (Patrice)\n* Added improved error handling by adding a $ErrorInfo variable\n* Removed MailerDebug variable (obsolete with new error handler)\n\n## Version 1.20 (Mon, Jun 25 2001)\n* Added quoted-printable encoding (Patrice)\n* Set Version as public and removed PrintVersion()\n* Changed phpdoc to only display public variables and methods\n\n## Version 1.19 (Thu, Jun 21 2001)\n* Fixed MS Mail header bug\n* Added fix for Bcc problem with mail(). *Does not work on Win32*\n  (See PHP bug report: https://bugs.php.net/bug.php?id=11616\n* mail() no longer passes a fifth parameter when not needed\n\n## Version 1.15 (Fri, Jun 15 2001)\nNote: these changes contributed by Patrice Fournier\n* Changed all remaining \\n to \\r\\n\n* Bcc: header no longer written to message except\n  when sent directly to sendmail\n* Added a small message to non-MIME compliant mail reader\n* Added Sender variable to change the Sender email\n  used in -f for sendmail/mail and in 'MAIL FROM' for smtp mode\n* Changed boundary setting to a place it will be set only once\n* Removed transfer encoding for whole message when using multipart\n* Message body now uses Encoding in multipart messages\n* Can set encoding and type to attachments 7bit, 8bit\n  and binary attachment are sent as is, base64 are encoded\n* Can set Encoding to base64 to send 8 bits body\n  through 7 bits servers\n\n## Version 1.10 (Tue, Jun 12 2001)\n* Fixed win32 mail header bug (printed out headers in message body)\n\n## Version 1.09 (Fri, Jun 08 2001)\n* Changed date header to work with Netscape mail programs\n* Altered phpdoc documentation\n\n## Version 1.08 (Tue, Jun 05 2001)\n* Added enhanced error-checking\n* Added phpdoc documentation to source\n\n## Version 1.06 (Fri, Jun 01 2001)\n* Added optional name for file attachments\n\n## Version 1.05 (Tue, May 29 2001)\n* Code cleanup\n* Eliminated sendmail header warning message\n* Fixed possible SMTP error\n\n## Version 1.03 (Thu, May 24 2001)\n* Fixed problem where qmail sends out duplicate messages\n\n## Version 1.02 (Wed, May 23 2001)\n* Added multiple recipient and attachment Clear* methods\n* Added Sendmail public variable\n* Fixed problem with loading SMTP library multiple times\n\n## Version 0.98 (Tue, May 22 2001)\n* Fixed problem with redundant mail hosts sending out multiple messages\n* Added additional error handler code\n* Added AddCustomHeader() function\n* Added support for Microsoft mail client headers (affects priority)\n* Fixed small bug with Mailer variable\n* Added PrintVersion() function\n\n## Version 0.92 (Tue, May 15 2001)\n* Changed file names to class.phpmailer.php and class.smtp.php to match\n  current PHP class trend.\n* Fixed problem where body not being printed when a message is attached\n* Several small bug fixes\n\n## Version 0.90 (Tue, April 17 2001)\n* Initial public release\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.7099609375,
          "content": "{\n    \"name\": \"phpmailer/phpmailer\",\n    \"type\": \"library\",\n    \"description\": \"PHPMailer is a full-featured email creation and transfer class for PHP\",\n    \"authors\": [\n        {\n            \"name\": \"Marcus Bointon\",\n            \"email\": \"phpmailer@synchromedia.co.uk\"\n        },\n        {\n            \"name\": \"Jim Jagielski\",\n            \"email\": \"jimjag@gmail.com\"\n        },\n        {\n            \"name\": \"Andy Prevost\",\n            \"email\": \"codeworxtech@users.sourceforge.net\"\n        },\n        {\n            \"name\": \"Brent R. Matzelle\"\n        }\n    ],\n    \"funding\": [\n        {\n            \"url\": \"https://github.com/Synchro\",\n            \"type\": \"github\"\n        }\n    ],\n    \"config\": {\n        \"allow-plugins\": {\n            \"dealerdirect/phpcodesniffer-composer-installer\": true\n        },\n        \"lock\": false\n    },\n    \"require\": {\n        \"php\": \">=5.5.0\",\n        \"ext-ctype\": \"*\",\n        \"ext-filter\": \"*\",\n        \"ext-hash\": \"*\"\n    },\n    \"require-dev\": {\n        \"dealerdirect/phpcodesniffer-composer-installer\": \"^1.0\",\n        \"doctrine/annotations\": \"^1.2.6 || ^1.13.3\",\n        \"php-parallel-lint/php-console-highlighter\": \"^1.0.0\",\n        \"php-parallel-lint/php-parallel-lint\": \"^1.3.2\",\n        \"phpcompatibility/php-compatibility\": \"^9.3.5\",\n        \"roave/security-advisories\": \"dev-latest\",\n        \"squizlabs/php_codesniffer\": \"^3.7.2\",\n        \"yoast/phpunit-polyfills\": \"^1.0.4\"\n    },\n    \"suggest\": {\n        \"decomplexity/SendOauth2\": \"Adapter for using XOAUTH2 authentication\",\n        \"ext-mbstring\": \"Needed to send email in multibyte encoding charset or decode encoded addresses\",\n        \"ext-openssl\": \"Needed for secure SMTP sending and DKIM signing\",\n        \"greew/oauth2-azure-provider\": \"Needed for Microsoft Azure XOAUTH2 authentication\",\n        \"hayageek/oauth2-yahoo\": \"Needed for Yahoo XOAUTH2 authentication\",\n        \"league/oauth2-google\": \"Needed for Google XOAUTH2 authentication\",\n        \"psr/log\": \"For optional PSR-3 debug logging\",\n        \"thenetworg/oauth2-azure\": \"Needed for Microsoft XOAUTH2 authentication\",\n        \"symfony/polyfill-mbstring\": \"To support UTF-8 if the Mbstring PHP extension is not enabled (^1.2)\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"PHPMailer\\\\PHPMailer\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"PHPMailer\\\\Test\\\\\": \"test/\"\n        }\n    },\n    \"license\": \"LGPL-2.1-only\",\n    \"scripts\": {\n        \"check\": \"./vendor/bin/phpcs\",\n        \"test\": \"./vendor/bin/phpunit --no-coverage\",\n        \"coverage\": \"./vendor/bin/phpunit\",\n        \"lint\": [\n            \"@php ./vendor/php-parallel-lint/php-parallel-lint/parallel-lint . --show-deprecated -e php,phps --exclude vendor --exclude .git --exclude build\"\n        ]\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "get_oauth_token.php",
          "type": "blob",
          "size": 6.1142578125,
          "content": "<?php\n\n/**\n * PHPMailer - PHP email creation and transport class.\n * PHP Version 5.5\n * @package PHPMailer\n * @see https://github.com/PHPMailer/PHPMailer/ The PHPMailer GitHub project\n * @author Marcus Bointon (Synchro/coolbru) <phpmailer@synchromedia.co.uk>\n * @author Jim Jagielski (jimjag) <jimjag@gmail.com>\n * @author Andy Prevost (codeworxtech) <codeworxtech@users.sourceforge.net>\n * @author Brent R. Matzelle (original founder)\n * @copyright 2012 - 2020 Marcus Bointon\n * @copyright 2010 - 2012 Jim Jagielski\n * @copyright 2004 - 2009 Andy Prevost\n * @license https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html GNU Lesser General Public License\n * @note This program is distributed in the hope that it will be useful - WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.\n */\n\n/**\n * Get an OAuth2 token from an OAuth2 provider.\n * * Install this script on your server so that it's accessible\n * as [https/http]://<yourdomain>/<folder>/get_oauth_token.php\n * e.g.: http://localhost/phpmailer/get_oauth_token.php\n * * Ensure dependencies are installed with 'composer install'\n * * Set up an app in your Google/Yahoo/Microsoft account\n * * Set the script address as the app's redirect URL\n * If no refresh token is obtained when running this file,\n * revoke access to your app and run the script again.\n */\n\nnamespace PHPMailer\\PHPMailer;\n\n/**\n * Aliases for League Provider Classes\n * Make sure you have added these to your composer.json and run `composer install`\n * Plenty to choose from here:\n * @see https://oauth2-client.thephpleague.com/providers/thirdparty/\n */\n//@see https://github.com/thephpleague/oauth2-google\nuse League\\OAuth2\\Client\\Provider\\Google;\n//@see https://packagist.org/packages/hayageek/oauth2-yahoo\nuse Hayageek\\OAuth2\\Client\\Provider\\Yahoo;\n//@see https://github.com/stevenmaguire/oauth2-microsoft\nuse Stevenmaguire\\OAuth2\\Client\\Provider\\Microsoft;\n//@see https://github.com/greew/oauth2-azure-provider\nuse Greew\\OAuth2\\Client\\Provider\\Azure;\n\nif (!isset($_GET['code']) && !isset($_POST['provider'])) {\n    ?>\n<html>\n<body>\n<form method=\"post\">\n    <h1>Select Provider</h1>\n    <input type=\"radio\" name=\"provider\" value=\"Google\" id=\"providerGoogle\">\n    <label for=\"providerGoogle\">Google</label><br>\n    <input type=\"radio\" name=\"provider\" value=\"Yahoo\" id=\"providerYahoo\">\n    <label for=\"providerYahoo\">Yahoo</label><br>\n    <input type=\"radio\" name=\"provider\" value=\"Microsoft\" id=\"providerMicrosoft\">\n    <label for=\"providerMicrosoft\">Microsoft</label><br>\n    <input type=\"radio\" name=\"provider\" value=\"Azure\" id=\"providerAzure\">\n    <label for=\"providerAzure\">Azure</label><br>\n    <h1>Enter id and secret</h1>\n    <p>These details are obtained by setting up an app in your provider's developer console.\n    </p>\n    <p>ClientId: <input type=\"text\" name=\"clientId\"><p>\n    <p>ClientSecret: <input type=\"text\" name=\"clientSecret\"></p>\n    <p>TenantID (only relevant for Azure): <input type=\"text\" name=\"tenantId\"></p>\n    <input type=\"submit\" value=\"Continue\">\n</form>\n</body>\n</html>\n    <?php\n    exit;\n}\n\nrequire 'vendor/autoload.php';\n\nsession_start();\n\n$providerName = '';\n$clientId = '';\n$clientSecret = '';\n$tenantId = '';\n\nif (array_key_exists('provider', $_POST)) {\n    $providerName = $_POST['provider'];\n    $clientId = $_POST['clientId'];\n    $clientSecret = $_POST['clientSecret'];\n    $tenantId = $_POST['tenantId'];\n    $_SESSION['provider'] = $providerName;\n    $_SESSION['clientId'] = $clientId;\n    $_SESSION['clientSecret'] = $clientSecret;\n    $_SESSION['tenantId'] = $tenantId;\n} elseif (array_key_exists('provider', $_SESSION)) {\n    $providerName = $_SESSION['provider'];\n    $clientId = $_SESSION['clientId'];\n    $clientSecret = $_SESSION['clientSecret'];\n    $tenantId = $_SESSION['tenantId'];\n}\n\n//If you don't want to use the built-in form, set your client id and secret here\n//$clientId = 'RANDOMCHARS-----duv1n2.apps.googleusercontent.com';\n//$clientSecret = 'RANDOMCHARS-----lGyjPcRtvP';\n\n//If this automatic URL doesn't work, set it yourself manually to the URL of this script\n$redirectUri = (isset($_SERVER['HTTPS']) ? 'https://' : 'http://') . $_SERVER['HTTP_HOST'] . $_SERVER['PHP_SELF'];\n//$redirectUri = 'http://localhost/PHPMailer/redirect';\n\n$params = [\n    'clientId' => $clientId,\n    'clientSecret' => $clientSecret,\n    'redirectUri' => $redirectUri,\n    'accessType' => 'offline'\n];\n\n$options = [];\n$provider = null;\n\nswitch ($providerName) {\n    case 'Google':\n        $provider = new Google($params);\n        $options = [\n            'scope' => [\n                'https://mail.google.com/'\n            ]\n        ];\n        break;\n    case 'Yahoo':\n        $provider = new Yahoo($params);\n        break;\n    case 'Microsoft':\n        $provider = new Microsoft($params);\n        $options = [\n            'scope' => [\n                'wl.imap',\n                'wl.offline_access'\n            ]\n        ];\n        break;\n    case 'Azure':\n        $params['tenantId'] = $tenantId;\n\n        $provider = new Azure($params);\n        $options = [\n            'scope' => [\n                'https://outlook.office.com/SMTP.Send',\n                'offline_access'\n            ]\n        ];\n        break;\n}\n\nif (null === $provider) {\n    exit('Provider missing');\n}\n\nif (!isset($_GET['code'])) {\n    //If we don't have an authorization code then get one\n    $authUrl = $provider->getAuthorizationUrl($options);\n    $_SESSION['oauth2state'] = $provider->getState();\n    header('Location: ' . $authUrl);\n    exit;\n    //Check given state against previously stored one to mitigate CSRF attack\n} elseif (empty($_GET['state']) || ($_GET['state'] !== $_SESSION['oauth2state'])) {\n    unset($_SESSION['oauth2state']);\n    unset($_SESSION['provider']);\n    exit('Invalid state');\n} else {\n    unset($_SESSION['provider']);\n    //Try to get an access token (using the authorization code grant)\n    $token = $provider->getAccessToken(\n        'authorization_code',\n        [\n            'code' => $_GET['code']\n        ]\n    );\n    //Use this to interact with an API on the users behalf\n    //Use this to get a new access token if the old one expires\n    echo 'Refresh Token: ', htmlspecialchars($token->getRefreshToken());\n}\n"
        },
        {
          "name": "language",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpcs.xml.dist",
          "type": "blob",
          "size": 1.8603515625,
          "content": "<?xml version=\"1.0\"?>\n<ruleset xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"vendor/squizlabs/php_codesniffer/phpcs.xsd\">\n\n    <config name=\"testVersion\" value=\"5.5-\"/>\n\n    <arg name=\"basepath\" value=\".\"/>\n    <arg name=\"cache\" value=\".phpcs-cache\"/>\n    <arg name=\"colors\"/>\n    <arg name=\"extensions\" value=\"php,phps\"/>\n    <arg name=\"parallel\" value=\"10\"/>\n    <!-- Show progress -->\n    <arg value=\"p\"/>\n\n    <file>get_oauth_token.php</file>\n    <file>src</file>\n    <file>test</file>\n    <file>examples</file>\n    <file>language</file>\n\n    <rule ref=\"PSR12\">\n        <exclude name=\"PSR1.Classes.ClassDeclaration.MissingNamespace\"/>\n        <exclude name=\"PSR1.Classes.ClassDeclaration.MultipleClasses\"/>\n        <exclude name=\"PSR1.Files.SideEffects.FoundWithSymbols\"/>\n        <exclude name=\"PSR1.Methods.CamelCapsMethodName\"/>\n        <exclude name=\"PSR1.Methods.CamelCapsMethodName.NotCamelCaps\"/>\n        <exclude name=\"PSR2.Methods.MethodDeclaration.Underscore\"/>\n        <exclude name=\"PSR12.Properties.ConstantVisibility.NotFound\"/>\n    </rule>\n    <rule ref=\"PHPCompatibility\">\n        <exclude name=\"PHPCompatibility.Constants.NewConstants.stream_crypto_method_tlsv1_1_clientFound\"/>\n        <exclude name=\"PHPCompatibility.Constants.NewConstants.stream_crypto_method_tlsv1_2_clientFound\"/>\n        <exclude name=\"PHPCompatibility.Constants.RemovedConstants.intl_idna_variant_2003Deprecated\"/>\n        <exclude name=\"PHPCompatibility.FunctionUse.NewFunctions.random_bytesFound\"/>\n        <exclude name=\"PHPCompatibility.IniDirectives.RemovedIniDirectives.mbstring_func_overloadDeprecated\"/>\n        <exclude name=\"PHPCompatibility.ParameterValues.NewIDNVariantDefault.NotSet\"/>\n    </rule>\n\n    <rule ref=\"Generic.Files.LineLength.TooLong\">\n        <exclude-pattern>*/language/phpmailer\\.lang*\\.php$</exclude-pattern>\n    </rule>\n</ruleset>\n"
        },
        {
          "name": "phpdoc.dist.xml",
          "type": "blob",
          "size": 0.4404296875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<phpdoc>\n    <title>PHPMailer</title>\n    <parser>\n        <target>docs</target>\n        <encoding>utf8</encoding>\n        <markers>\n            <item>TODO</item>\n        </markers>\n    </parser>\n    <transformer>\n        <target>docs</target>\n    </transformer>\n    <transformations>\n        <template name=\"clean\"/>\n    </transformations>\n    <files>\n        <directory>src</directory>\n    </files>\n</phpdoc>\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 1.1513671875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/8.5/phpunit.xsd\"\n         backupGlobals=\"true\"\n         bootstrap=\"vendor/autoload.php\"\n         convertDeprecationsToExceptions=\"true\"\n         verbose=\"true\"\n         colors=\"true\"\n         forceCoversAnnotation=\"false\"\n    >\n    <testsuites>\n        <testsuite name=\"PHPMailerTests\">\n            <directory>./test/</directory>\n        </testsuite>\n    </testsuites>\n    <listeners>\n        <listener class=\"PHPMailer\\Test\\DebugLogTestListener\" />\n    </listeners>\n    <groups>\n        <exclude>\n            <group>languages</group>\n            <group>pop3</group>\n        </exclude>\n    </groups>\n    <filter>\n        <whitelist addUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">./src</directory>\n        </whitelist>\n    </filter>\n    <logging>\n        <log type=\"coverage-text\" target=\"php://stdout\" showUncoveredFiles=\"true\"/>\n        <log type=\"coverage-clover\" target=\"build/logs/clover.xml\"/>\n        <log type=\"junit\" target=\"build/logs/junit.xml\"/>\n    </logging>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}