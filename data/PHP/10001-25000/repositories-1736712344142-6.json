{
  "metadata": {
    "timestamp": 1736712344142,
    "page": 6,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Seldaek/monolog",
      "stars": 21107,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1748046875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2412109375,
          "content": "/doc export-ignore\n/tests export-ignore\n/.* export-ignore\n/phpstan* export-ignore\n/phpunit.xml.dist export-ignore\n/_config.yml export-ignore\n/UPGRADE.md export-ignore\n/.editorconfig export-ignore\n/favicon.ico export-ignore\n/logo.jpg export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.115234375,
          "content": "vendor\ncomposer.phar\nphpunit.xml\ncomposer.lock\n.DS_Store\n.php-cs-fixer.cache\n.hg\n.phpunit.result.cache\n.phpunit.cache\n"
        },
        {
          "name": ".php-cs-fixer.php",
          "type": "blob",
          "size": 2.18359375,
          "content": "<?php\n\n$header = <<<EOF\nThis file is part of the Monolog package.\n\n(c) Jordi Boggiano <j.boggiano@seld.be>\n\nFor the full copyright and license information, please view the LICENSE\nfile that was distributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->name('*.php')\n    ->exclude('Fixtures')\n    ->in(__DIR__.'/src')\n    ->in(__DIR__.'/tests')\n;\n\n$config = new PhpCsFixer\\Config();\nreturn $config->setRules(array(\n        '@PSR2' => true,\n        // some rules disabled as long as 1.x branch is maintained\n        'array_syntax' => ['syntax' => 'short'],\n        'binary_operator_spaces' => [\n            'default' => null,\n        ],\n        'blank_line_before_statement' => ['statements' => ['continue', 'declare', 'return', 'throw', 'try']],\n        'cast_spaces' => ['space' => 'single'],\n        'header_comment' => ['header' => $header],\n        'include' => true,\n        'class_attributes_separation' => array('elements' => array('method' => 'one', 'trait_import' => 'none')),\n        'native_function_invocation' => true,\n        'no_blank_lines_after_class_opening' => true,\n        'no_blank_lines_after_phpdoc' => true,\n        'no_empty_statement' => true,\n        'no_extra_blank_lines' => true,\n        'no_leading_import_slash' => true,\n        'no_leading_namespace_whitespace' => true,\n        'no_superfluous_phpdoc_tags' => ['allow_mixed' => true],\n        'no_trailing_comma_in_singleline_array' => true,\n        'no_unused_imports' => true,\n        'no_whitespace_in_blank_line' => true,\n        'object_operator_without_whitespace' => true,\n        'phpdoc_align' => true,\n        'phpdoc_indent' => true,\n        'phpdoc_no_access' => true,\n        'phpdoc_no_package' => true,\n        'phpdoc_order' => true,\n        //'phpdoc_scalar' => true,\n        'phpdoc_trim' => true,\n        //'phpdoc_types' => true,\n        'psr_autoloading' => ['dir' => 'src'],\n        'declare_strict_types' => true,\n        'single_blank_line_before_namespace' => true,\n        'standardize_not_equals' => true,\n        'ternary_operator_spaces' => true,\n        'trailing_comma_in_multiline' => true,\n    ))\n    ->setUsingCache(true)\n    ->setRiskyAllowed(true)\n    ->setFinder($finder)\n;\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 47.9072265625,
          "content": "### 3.8.1 (2024-12-05)\n\n  * Deprecated Monolog\\DateTimeImmutable in favor of Monolog\\JsonSerializableDateTimeImmutable (#1928)\n  * Fixed gelf keys not being valid when context/extra data keys have spaces in them (#1927)\n  * Fixed empty lines appearing in the stack traces when a custom formatter returned null (#1925)\n\n### 3.8.0 (2024-11-12)\n\n  * Added `$fileOpenMode` param to `StreamHandler` to define a custom fopen mode to open the log file (#1913)\n  * Fixed PHP 8.4 deprecation notices (#1903)\n  * Added ability to extend/override `IntrospectionProcessor` (#1899)\n  * Added `$timeout` param to `ProcessHandler` to configure the stream_select() timeout to avoid blocking too long (default is 1.0 sec) (#1916)\n  * Fixed JsonFormatter batch handling to normalize records individually to make sure they look the same as if they were handled one by one (#1906)\n  * Fixed `StreamHandler` handling of write failures so that it now closes/reopens the stream and retries the write once before failing (#1882)\n  * Fixed `StreamHandler` error handler causing issues if a stream handler triggers an error (#1866)\n  * Fixed `StreamHandler::reset` not closing the stream, so that it would fail to write in some cases with long running processes (#1862)\n  * Fixed `RotatingFileHandler` issue where rotation does not happen in some long running processes (#1905)\n  * Fixed `JsonFormatter` handling of incomplete classes (#1834)\n  * Fixed `RotatingFileHandler` bug where rotation could sometimes not happen correctly (#1905)\n\n### 3.7.0 (2024-06-28)\n\n  * Added `NormalizerFormatter->setBasePath(...)` (and `JsonFormatter` by extension) that allows removing the project's path from the stack trace output (47e301d3e)\n  * Fixed JsonFormatter handling of incomplete classes (#1834)\n  * Fixed private error handlers causing problems with custom StreamHandler implementations (#1866)\n\n### 3.6.0 (2024-04-12)\n\n  * Added `LineFormatter->setBasePath(...)` that allows removing the project's path from the stack trace output (#1873)\n  * Added `$includeExtra` option in `PsrHandler` to also use extra data to replace placeholder values in the message (#1852)\n  * Added ability to customize what is a duplicated message by extending the `DeduplicationHandler` (#1879)\n  * Added handling for using `GelfMessageFormatter` together with the `AmqpHandler` (#1869)\n  * Added ability to extend `GoogleCloudLoggingFormatter` (#1859)\n  * Fixed `__toString` failures in context data crashing the normalization process (#1868)\n  * Fixed PHP 8.4 deprecation warnings (#1874)\n\n### 3.5.0 (2023-10-27)\n\n  * Added ability to indent stack traces in LineFormatter via e.g. `indentStacktraces('  ')` (#1835)\n  * Added ability to configure a max level name length in LineFormatter via e.g. `setMaxLevelNameLength(3)` (#1850)\n  * Added support for indexed arrays (i.e. `[]` and not `{}` arrays once json serialized) containing inline linebreaks in LineFormatter (#1818)\n  * Added `WithMonologChannel` attribute for integrators to use to configure autowiring (#1847)\n  * Fixed log record `extra` data leaking between handlers that have handler-specific processors set (#1819)\n  * Fixed LogglyHandler issue with record level filtering (#1841)\n  * Fixed display_errors parsing in ErrorHandler which did not support string values (#1804)\n  * Fixed bug where the previous error handler would not be restored in some cases where StreamHandler fails (#1815)\n  * Fixed normalization error when normalizing incomplete classes (#1833)\n\n### 3.4.0 (2023-06-21)\n\n  * Added `LoadAverageProcessor` to track one of the 1, 5 or 15min load averages (#1803)\n  * Added support for priority to the `AsMonologProcessor` attribute (#1797)\n  * Added `TelegramBotHandler` `topic`/`message_thread_id` support (#1802)\n  * Fixed `FingersCrossedHandler` passthruLevel checking (#1801)\n  * Fixed support of yearly and monthly rotation log file to rotate only once a month/year (#1805)\n  * Fixed `TestHandler` method docs (#1794)\n  * Fixed handling of falsey `display_errors` string values (#1804)\n\n### 3.3.1 (2023-02-06)\n\n  * Fixed Logger not being serializable anymore (#1792)\n\n### 3.3.0 (2023-02-06)\n\n  * Deprecated FlowdockHandler & Formatter as the flowdock service was shutdown (#1748)\n  * Added `ClosureContextProcessor` to allow delaying the creation of context data by setting a Closure in context which is called when the log record is used (#1745)\n  * Added an ElasticsearchHandler option to set the `op_type` to `create` instead of the default `index` (#1766)\n  * Added support for enum context values in PsrLogMessageProcessor (#1773)\n  * Added graylog2/gelf-php 2.x support (#1747)\n  * Improved `BrowserConsoleHandler` logging to use more appropriate methods than just console.log in the browser (#1739)\n  * Fixed GitProcessor not filtering correctly based on Level (#1749)\n  * Fixed `WhatFailureGroupHandler` not catching errors happening inside `close()` (#1791)\n  * Fixed datetime field in `GoogleCloudLoggingFormatter` (#1758)\n  * Fixed infinite loop detection within Fibers (#1753)\n  * Fixed `AmqpHandler->setExtraAttributes` not working with buffering handler wrappers (#1781)\n\n### 3.2.0 (2022-07-24)\n\n  * Deprecated `CubeHandler` and `PHPConsoleHandler` as both projects are abandoned and those should not be used anymore (#1734)\n  * Marked `Logger` `@final` as it should not be extended, prefer composition or talk to us if you are missing something\n  * Added RFC 5424 level (`7` to `0`) support to `Logger::log` and `Logger::addRecord` to increase interoperability (#1723)\n  * Added `SyslogFormatter` to output syslog-like files which can be consumed by tools like [lnav](https://lnav.org/) (#1689)\n  * Added support for `__toString` for objects which are not json serializable in `JsonFormatter` (#1733)\n  * Added `GoogleCloudLoggingFormatter` (#1719)\n  * Added support for Predis 2.x (#1732)\n  * Added `AmqpHandler->setExtraAttributes` to allow configuring attributes when using an AMQPExchange (#1724)\n  * Fixed serialization/unserialization of handlers to make sure private properties are included (#1727)\n  * Fixed allowInlineLineBreaks in LineFormatter causing issues with windows paths containing `\\n` or `\\r` sequences (#1720)\n  * Fixed max normalization depth not being taken into account when formatting exceptions with a deep chain of previous exceptions (#1726)\n  * Fixed PHP 8.2 deprecation warnings (#1722)\n  * Fixed rare race condition or filesystem issue where StreamHandler is unable to create the directory the log should go into yet it exists already (#1678)\n\n### 3.1.0 (2022-06-09)\n\n  * Added `$datetime` parameter to `Logger::addRecord` as low level API to allow logging into the past or future (#1682)\n  * Added `Logger::useLoggingLoopDetection` to allow disabling cyclic logging detection in concurrent frameworks (#1681)\n  * Fixed handling of fatal errors if callPrevious is disabled in ErrorHandler (#1670)\n  * Fixed interop issue by removing the need for a return type in ProcessorInterface (#1680)\n  * Marked the reusable `Monolog\\Test\\TestCase` class as `@internal` to make sure PHPStorm does not show it above PHPUnit, you may still use it to test your own handlers/etc though (#1677)\n  * Fixed RotatingFileHandler issue when the date format contained slashes (#1671)\n\n### 3.0.0 (2022-05-10)\n\nChanges from RC1\n\n- The `Monolog\\LevelName` enum does not exist anymore, use `Monolog\\Level->getName()` instead.\n\n### 3.0.0-RC1 (2022-05-08)\n\nThis is mostly a cleanup release offering stronger type guarantees for integrators with the\narray->object/enum changes, but there is no big new feature for end users.\n\nSee [UPGRADE notes](UPGRADE.md#300) for details on all breaking changes especially if you are extending/implementing Monolog classes/interfaces.\n\nNoteworthy BC Breaks:\n\n- The minimum supported PHP version is now `8.1.0`.\n- Log records have been converted from an array to a [`Monolog\\LogRecord` object](src/Monolog/LogRecord.php)\n  with public (and mostly readonly) properties. e.g. instead of doing\n  `$record['context']` use `$record->context`.\n  In formatters or handlers if you rather need an array to work with you can use `$record->toArray()`\n  to get back a Monolog 1/2 style record array. This will contain the enum values instead of enum cases\n  in the `level` and `level_name` keys to be more backwards compatible and use simpler data types.\n- `FormatterInterface`, `HandlerInterface`, `ProcessorInterface`, etc. changed to contain `LogRecord $record`\n  instead of `array $record` parameter types. If you want to support multiple Monolog versions this should\n  be possible by type-hinting nothing, or `array|LogRecord` if you support PHP 8.0+. You can then code\n  against the $record using Monolog 2 style as LogRecord implements ArrayAccess for BC.\n  The interfaces do not require a `LogRecord` return type even where it would be applicable, but if you only\n  support Monolog 3 in integration code I would recommend you use `LogRecord` return types wherever fitting\n  to ensure forward compatibility as it may be added in Monolog 4.\n- Log levels are now enums [`Monolog\\Level`](src/Monolog/Level.php) and [`Monolog\\LevelName`](src/Monolog/LevelName.php)\n- Removed deprecated SwiftMailerHandler, migrate to SymfonyMailerHandler instead.\n- `ResettableInterface::reset()` now requires a void return type.\n- All properties have had types added, which may require you to do so as well if you extended\n  a Monolog class and declared the same property.\n\nNew deprecations:\n\n- `Logger::DEBUG`, `Logger::ERROR`, etc. are now deprecated in favor of the `Monolog\\Level` enum.\n  e.g. instead of `Logger::WARNING` use `Level::Warning` if you need to pass the enum case\n  to Monolog or one of its handlers, or `Level::Warning->value` if you need the integer\n  value equal to what `Logger::WARNING` was giving you.\n- `Logger::getLevelName()` is now deprecated.\n\n### 2.10.0 (2024-11-12)\n\n  * Added `$fileOpenMode` to `StreamHandler` to define a custom fopen mode to open the log file (#1913)\n  * Fixed `StreamHandler` handling of write failures so that it now closes/reopens the stream and retries the write once before failing (#1882)\n  * Fixed `StreamHandler` error handler causing issues if a stream handler triggers an error (#1866)\n  * Fixed `JsonFormatter` handling of incomplete classes (#1834)\n  * Fixed `RotatingFileHandler` bug where rotation could sometimes not happen correctly (#1905)\n\n### 2.9.3 (2024-04-12)\n\n  * Fixed PHP 8.4 deprecation warnings (#1874)\n\n### 2.9.2 (2023-10-27)\n\n  * Fixed display_errors parsing in ErrorHandler which did not support string values (#1804)\n  * Fixed bug where the previous error handler would not be restored in some cases where StreamHandler fails (#1815)\n  * Fixed normalization error when normalizing incomplete classes (#1833)\n\n### 2.9.1 (2023-02-06)\n\n  * Fixed Logger not being serializable anymore (#1792)\n\n### 2.9.0 (2023-02-05)\n\n  * Deprecated FlowdockHandler & Formatter as the flowdock service was shutdown (#1748)\n  * Added support for enum context values in PsrLogMessageProcessor (#1773)\n  * Added graylog2/gelf-php 2.x support (#1747)\n  * Improved `BrowserConsoleHandler` logging to use more appropriate methods than just console.log in the browser (#1739)\n  * Fixed `WhatFailureGroupHandler` not catching errors happening inside `close()` (#1791)\n  * Fixed datetime field in `GoogleCloudLoggingFormatter` (#1758)\n  * Fixed infinite loop detection within Fibers (#1753)\n  * Fixed `AmqpHandler->setExtraAttributes` not working with buffering handler wrappers (#1781)\n\n### 2.8.0 (2022-07-24)\n\n  * Deprecated `CubeHandler` and `PHPConsoleHandler` as both projects are abandoned and those should not be used anymore (#1734)\n  * Added RFC 5424 level (`7` to `0`) support to `Logger::log` and `Logger::addRecord` to increase interoperability (#1723)\n  * Added support for `__toString` for objects which are not json serializable in `JsonFormatter` (#1733)\n  * Added `GoogleCloudLoggingFormatter` (#1719)\n  * Added support for Predis 2.x (#1732)\n  * Added `AmqpHandler->setExtraAttributes` to allow configuring attributes when using an AMQPExchange (#1724)\n  * Fixed serialization/unserialization of handlers to make sure private properties are included (#1727)\n  * Fixed allowInlineLineBreaks in LineFormatter causing issues with windows paths containing `\\n` or `\\r` sequences (#1720)\n  * Fixed max normalization depth not being taken into account when formatting exceptions with a deep chain of previous exceptions (#1726)\n  * Fixed PHP 8.2 deprecation warnings (#1722)\n  * Fixed rare race condition or filesystem issue where StreamHandler is unable to create the directory the log should go into yet it exists already (#1678)\n\n### 2.7.0 (2022-06-09)\n\n  * Added `$datetime` parameter to `Logger::addRecord` as low level API to allow logging into the past or future (#1682)\n  * Added `Logger::useLoggingLoopDetection` to allow disabling cyclic logging detection in concurrent frameworks (#1681)\n  * Fixed handling of fatal errors if callPrevious is disabled in ErrorHandler (#1670)\n  * Marked the reusable `Monolog\\Test\\TestCase` class as `@internal` to make sure PHPStorm does not show it above PHPUnit, you may still use it to test your own handlers/etc though (#1677)\n  * Fixed RotatingFileHandler issue when the date format contained slashes (#1671)\n\n### 2.6.0 (2022-05-10)\n\n  * Deprecated `SwiftMailerHandler`, use `SymfonyMailerHandler` instead\n  * Added `SymfonyMailerHandler` (#1663)\n  * Added ElasticSearch 8.x support to the ElasticsearchHandler (#1662)\n  * Added a way to filter/modify stack traces in LineFormatter (#1665)\n  * Fixed UdpSocket not being able to reopen/reconnect after close()\n  * Fixed infinite loops if a Handler is triggering logging while handling log records\n\n### 2.5.0 (2022-04-08)\n\n  * Added `callType` to IntrospectionProcessor (#1612)\n  * Fixed AsMonologProcessor syntax to be compatible with PHP 7.2 (#1651)\n\n### 2.4.0 (2022-03-14)\n\n  * Added [`Monolog\\LogRecord`](src/Monolog/LogRecord.php) interface that can be used to type-hint records like `array|\\Monolog\\LogRecord $record` to be forward compatible with the upcoming Monolog 3 changes\n  * Added `includeStacktraces` constructor params to LineFormatter & JsonFormatter (#1603)\n  * Added `persistent`, `timeout`, `writingTimeout`, `connectionTimeout`, `chunkSize` constructor params to SocketHandler and derivatives (#1600)\n  * Added `AsMonologProcessor` PHP attribute which can help autowiring / autoconfiguration of processors if frameworks / integrations decide to make use of it. This is useless when used purely with Monolog (#1637)\n  * Added support for keeping native BSON types as is in MongoDBFormatter (#1620)\n  * Added support for a `user_agent` key in WebProcessor, disabled by default but you can use it by configuring the $extraFields you want (#1613)\n  * Added support for username/userIcon in SlackWebhookHandler (#1617)\n  * Added extension points to BrowserConsoleHandler (#1593)\n  * Added record message/context/extra info to exceptions thrown when a StreamHandler cannot open its stream to avoid completely losing the data logged (#1630)\n  * Fixed error handler signature to accept a null $context which happens with internal PHP errors (#1614)\n  * Fixed a few setter methods not returning `self` (#1609)\n  * Fixed handling of records going over the max Telegram message length (#1616)\n\n### 2.3.5 (2021-10-01)\n\n  * Fixed regression in StreamHandler since 2.3.3 on systems with the memory_limit set to >=20GB (#1592)\n\n### 2.3.4 (2021-09-15)\n\n  * Fixed support for psr/log 3.x (#1589)\n\n### 2.3.3 (2021-09-14)\n\n  * Fixed memory usage when using StreamHandler and calling stream_get_contents on the resource you passed to it (#1578, #1577)\n  * Fixed support for psr/log 2.x (#1587)\n  * Fixed some type annotations\n\n### 2.3.2 (2021-07-23)\n\n  * Fixed compatibility with PHP 7.2 - 7.4 when experiencing PCRE errors (#1568)\n\n### 2.3.1 (2021-07-14)\n\n  * Fixed Utils::getClass handling of anonymous classes not being fully compatible with PHP 8 (#1563)\n  * Fixed some `@inheritDoc` annotations having the wrong case\n\n### 2.3.0 (2021-07-05)\n\n  * Added a ton of PHPStan type annotations as well as type aliases on Monolog\\Logger for Record, Level and LevelName that you can import (#1557)\n  * Added ability to customize date format when using JsonFormatter (#1561)\n  * Fixed FilterHandler not calling reset on its internal handler when reset() is called on it (#1531)\n  * Fixed SyslogUdpHandler not setting the timezone correctly on DateTimeImmutable instances (#1540)\n  * Fixed StreamHandler thread safety - chunk size set to 2GB now to avoid interlacing when doing concurrent writes (#1553)\n\n### 2.2.0 (2020-12-14)\n\n  * Added JSON_PARTIAL_OUTPUT_ON_ERROR to default json encoding flags, to avoid dropping entire context data or even records due to an invalid subset of it somewhere\n  * Added setDateFormat to NormalizerFormatter (and Line/Json formatters by extension) to allow changing this after object creation\n  * Added RedisPubSubHandler to log records to a Redis channel using PUBLISH\n  * Added support for Elastica 7, and deprecated the $type argument of ElasticaFormatter which is not in use anymore as of Elastica 7\n  * Added support for millisecond write timeouts in SocketHandler, you can now pass floats to setWritingTimeout, e.g. 0.2 is 200ms\n  * Added support for unix sockets in SyslogUdpHandler (set $port to 0 to make the $host a unix socket)\n  * Added handleBatch support for TelegramBotHandler\n  * Added RFC5424e extended date format including milliseconds to SyslogUdpHandler\n  * Added support for configuring handlers with numeric level values in strings (coming from e.g. env vars)\n  * Fixed Wildfire/FirePHP/ChromePHP handling of unicode characters\n  * Fixed PHP 8 issues in SyslogUdpHandler\n  * Fixed internal type error when mbstring is missing\n\n### 2.1.1 (2020-07-23)\n\n  * Fixed removing of json encoding options\n  * Fixed type hint of $level not accepting strings in SendGridHandler and OverflowHandler\n  * Fixed SwiftMailerHandler not accepting email templates with an empty subject\n  * Fixed array access on null in RavenHandler\n  * Fixed unique_id in WebProcessor not being disableable\n\n### 2.1.0 (2020-05-22)\n\n  * Added `JSON_INVALID_UTF8_SUBSTITUTE` to default json flags, so that invalid UTF8 characters now get converted to [�](https://en.wikipedia.org/wiki/Specials_(Unicode_block)#Replacement_character) instead of being converted from ISO-8859-15 to UTF8 as it was before, which was hardly a comprehensive solution\n  * Added `$ignoreEmptyContextAndExtra` option to JsonFormatter to skip empty context/extra entirely from the output\n  * Added `$parseMode`, `$disableWebPagePreview` and `$disableNotification` options to TelegramBotHandler\n  * Added tentative support for PHP 8\n  * NormalizerFormatter::addJsonEncodeOption and removeJsonEncodeOption are now public to allow modifying default json flags\n  * Fixed GitProcessor type error when there is no git repo present\n  * Fixed normalization of SoapFault objects containing deeply nested objects as \"detail\"\n  * Fixed support for relative paths in RotatingFileHandler\n\n### 2.0.2 (2019-12-20)\n\n  * Fixed ElasticsearchHandler swallowing exceptions details when failing to index log records\n  * Fixed normalization of SoapFault objects containing non-strings as \"detail\" in LineFormatter\n  * Fixed formatting of resources in JsonFormatter\n  * Fixed RedisHandler failing to use MULTI properly when passed a proxied Redis instance (e.g. in Symfony with lazy services)\n  * Fixed FilterHandler triggering a notice when handleBatch was filtering all records passed to it\n  * Fixed Turkish locale messing up the conversion of level names to their constant values\n\n### 2.0.1 (2019-11-13)\n\n  * Fixed normalization of Traversables to avoid traversing them as not all of them are rewindable\n  * Fixed setFormatter/getFormatter to forward to the nested handler in FilterHandler, FingersCrossedHandler, BufferHandler, OverflowHandler and SamplingHandler\n  * Fixed BrowserConsoleHandler formatting when using multiple styles\n  * Fixed normalization of exception codes to be always integers even for PDOException which have them as numeric strings\n  * Fixed normalization of SoapFault objects containing non-strings as \"detail\"\n  * Fixed json encoding across all handlers to always attempt recovery of non-UTF-8 strings instead of failing the whole encoding\n  * Fixed ChromePHPHandler to avoid sending more data than latest Chrome versions allow in headers (4KB down from 256KB).\n  * Fixed type error in BrowserConsoleHandler when the context array of log records was not associative.\n\n### 2.0.0 (2019-08-30)\n\n  * BC Break: This is a major release, see [UPGRADE.md](UPGRADE.md) for details if you are coming from a 1.x release\n  * BC Break: Logger methods log/debug/info/notice/warning/error/critical/alert/emergency now have explicit void return types\n  * Added FallbackGroupHandler which works like the WhatFailureGroupHandler but stops dispatching log records as soon as one handler accepted it\n  * Fixed support for UTF-8 when cutting strings to avoid cutting a multibyte-character in half\n  * Fixed normalizers handling of exception backtraces to avoid serializing arguments in some cases\n  * Fixed date timezone handling in SyslogUdpHandler\n\n### 2.0.0-beta2 (2019-07-06)\n\n  * BC Break: This is a major release, see [UPGRADE.md](UPGRADE.md) for details if you are coming from a 1.x release\n  * BC Break: PHP 7.2 is now the minimum required PHP version.\n  * BC Break: Removed SlackbotHandler, RavenHandler and HipChatHandler, see [UPGRADE.md](UPGRADE.md) for details\n  * Added OverflowHandler which will only flush log records to its nested handler when reaching a certain amount of logs (i.e. only pass through when things go really bad)\n  * Added TelegramBotHandler to log records to a [Telegram](https://core.telegram.org/bots/api) bot account\n  * Added support for JsonSerializable when normalizing exceptions\n  * Added support for RFC3164 (outdated BSD syslog protocol) to SyslogUdpHandler\n  * Added SoapFault details to formatted exceptions\n  * Fixed DeduplicationHandler silently failing to start when file could not be opened\n  * Fixed issue in GroupHandler and WhatFailureGroupHandler where setting multiple processors would duplicate records\n  * Fixed GelfFormatter losing some data when one attachment was too long\n  * Fixed issue in SignalHandler restarting syscalls functionality\n  * Improved performance of LogglyHandler when sending multiple logs in a single request\n\n### 2.0.0-beta1 (2018-12-08)\n\n  * BC Break: This is a major release, see [UPGRADE.md](UPGRADE.md) for details if you are coming from a 1.x release\n  * BC Break: PHP 7.1 is now the minimum required PHP version.\n  * BC Break: Quite a few interface changes, only relevant if you implemented your own handlers/processors/formatters\n  * BC Break: Removed non-PSR-3 methods to add records, all the `add*` (e.g. `addWarning`) methods as well as `emerg`, `crit`, `err` and `warn`\n  * BC Break: The record timezone is now set per Logger instance and not statically anymore\n  * BC Break: There is no more default handler configured on empty Logger instances\n  * BC Break: ElasticSearchHandler renamed to ElasticaHandler\n  * BC Break: Various handler-specific breaks, see [UPGRADE.md](UPGRADE.md) for details\n  * Added scalar type hints and return hints in all the places it was possible. Switched strict_types on for more reliability.\n  * Added DateTimeImmutable support, all record datetime are now immutable, and will toString/json serialize with the correct date format, including microseconds (unless disabled)\n  * Added timezone and microseconds to the default date format\n  * Added SendGridHandler to use the SendGrid API to send emails\n  * Added LogmaticHandler to use the Logmatic.io API to store log records\n  * Added SqsHandler to send log records to an AWS SQS queue\n  * Added ElasticsearchHandler to send records via the official ES library. Elastica users should now use ElasticaHandler instead of ElasticSearchHandler\n  * Added NoopHandler which is similar to the NullHandle but does not prevent the bubbling of log records to handlers further down the configuration, useful for temporarily disabling a handler in configuration files\n  * Added ProcessHandler to write log output to the STDIN of a given process\n  * Added HostnameProcessor that adds the machine's hostname to log records\n  * Added a `$dateFormat` option to the PsrLogMessageProcessor which lets you format DateTime instances nicely\n  * Added support for the PHP 7.x `mongodb` extension in the MongoDBHandler\n  * Fixed many minor issues in various handlers, and probably added a few regressions too\n\n### 1.26.1 (2021-05-28)\n\n  * Fixed PHP 8.1 deprecation warning\n\n### 1.26.0 (2020-12-14)\n\n  * Added $dateFormat and $removeUsedContextFields arguments to PsrLogMessageProcessor (backport from 2.x)\n\n### 1.25.5 (2020-07-23)\n\n  * Fixed array access on null in RavenHandler\n  * Fixed unique_id in WebProcessor not being disableable\n\n### 1.25.4 (2020-05-22)\n\n  * Fixed GitProcessor type error when there is no git repo present\n  * Fixed normalization of SoapFault objects containing deeply nested objects as \"detail\"\n  * Fixed support for relative paths in RotatingFileHandler\n\n### 1.25.3 (2019-12-20)\n\n  * Fixed formatting of resources in JsonFormatter\n  * Fixed RedisHandler failing to use MULTI properly when passed a proxied Redis instance (e.g. in Symfony with lazy services)\n  * Fixed FilterHandler triggering a notice when handleBatch was filtering all records passed to it\n  * Fixed Turkish locale messing up the conversion of level names to their constant values\n\n### 1.25.2 (2019-11-13)\n\n  * Fixed normalization of Traversables to avoid traversing them as not all of them are rewindable\n  * Fixed setFormatter/getFormatter to forward to the nested handler in FilterHandler, FingersCrossedHandler, BufferHandler and SamplingHandler\n  * Fixed BrowserConsoleHandler formatting when using multiple styles\n  * Fixed normalization of exception codes to be always integers even for PDOException which have them as numeric strings\n  * Fixed normalization of SoapFault objects containing non-strings as \"detail\"\n  * Fixed json encoding across all handlers to always attempt recovery of non-UTF-8 strings instead of failing the whole encoding\n\n### 1.25.1 (2019-09-06)\n\n  * Fixed forward-compatible interfaces to be compatible with Monolog 1.x too.\n\n### 1.25.0 (2019-09-06)\n\n  * Deprecated SlackbotHandler, use SlackWebhookHandler or SlackHandler instead\n  * Deprecated RavenHandler, use sentry/sentry 2.x and their Sentry\\Monolog\\Handler instead\n  * Deprecated HipChatHandler, migrate to Slack and use SlackWebhookHandler or SlackHandler instead\n  * Added forward-compatible interfaces and traits FormattableHandlerInterface, FormattableHandlerTrait, ProcessableHandlerInterface, ProcessableHandlerTrait. If you use modern PHP and want to make code compatible with Monolog 1 and 2 this can help. You will have to require at least Monolog 1.25 though.\n  * Added support for RFC3164 (outdated BSD syslog protocol) to SyslogUdpHandler\n  * Fixed issue in GroupHandler and WhatFailureGroupHandler where setting multiple processors would duplicate records\n  * Fixed issue in SignalHandler restarting syscalls functionality\n  * Fixed normalizers handling of exception backtraces to avoid serializing arguments in some cases\n  * Fixed ZendMonitorHandler to work with the latest Zend Server versions\n  * Fixed ChromePHPHandler to avoid sending more data than latest Chrome versions allow in headers (4KB down from 256KB).\n\n### 1.24.0 (2018-11-05)\n\n  * BC Notice: If you are extending any of the Monolog's Formatters' `normalize` method, make sure you add the new `$depth = 0` argument to your function signature to avoid strict PHP warnings.\n  * Added a `ResettableInterface` in order to reset/reset/clear/flush handlers and processors\n  * Added a `ProcessorInterface` as an optional way to label a class as being a processor (mostly useful for autowiring dependency containers)\n  * Added a way to log signals being received using Monolog\\SignalHandler\n  * Added ability to customize error handling at the Logger level using Logger::setExceptionHandler\n  * Added InsightOpsHandler to migrate users of the LogEntriesHandler\n  * Added protection to NormalizerFormatter against circular and very deep structures, it now stops normalizing at a depth of 9\n  * Added capture of stack traces to ErrorHandler when logging PHP errors\n  * Added RavenHandler support for a `contexts` context or extra key to forward that to Sentry's contexts\n  * Added forwarding of context info to FluentdFormatter\n  * Added SocketHandler::setChunkSize to override the default chunk size in case you must send large log lines to rsyslog for example\n  * Added ability to extend/override BrowserConsoleHandler\n  * Added SlackWebhookHandler::getWebhookUrl and SlackHandler::getToken to enable class extensibility\n  * Added SwiftMailerHandler::getSubjectFormatter to enable class extensibility\n  * Dropped official support for HHVM in test builds\n  * Fixed normalization of exception traces when call_user_func is used to avoid serializing objects and the data they contain\n  * Fixed naming of fields in Slack handler, all field names are now capitalized in all cases\n  * Fixed HipChatHandler bug where slack dropped messages randomly\n  * Fixed normalization of objects in Slack handlers\n  * Fixed support for PHP7's Throwable in NewRelicHandler\n  * Fixed race bug when StreamHandler sometimes incorrectly reported it failed to create a directory\n  * Fixed table row styling issues in HtmlFormatter\n  * Fixed RavenHandler dropping the message when logging exception\n  * Fixed WhatFailureGroupHandler skipping processors when using handleBatch\n    and implement it where possible\n  * Fixed display of anonymous class names\n\n### 1.23.0 (2017-06-19)\n\n  * Improved SyslogUdpHandler's support for RFC5424 and added optional `$ident` argument\n  * Fixed GelfHandler truncation to be per field and not per message\n  * Fixed compatibility issue with PHP <5.3.6\n  * Fixed support for headless Chrome in ChromePHPHandler\n  * Fixed support for latest Aws SDK in DynamoDbHandler\n  * Fixed support for SwiftMailer 6.0+ in SwiftMailerHandler\n\n### 1.22.1 (2017-03-13)\n\n  * Fixed lots of minor issues in the new Slack integrations\n  * Fixed support for allowInlineLineBreaks in LineFormatter when formatting exception backtraces\n\n### 1.22.0 (2016-11-26)\n\n  * Added SlackbotHandler and SlackWebhookHandler to set up Slack integration more easily\n  * Added MercurialProcessor to add mercurial revision and branch names to log records\n  * Added support for AWS SDK v3 in DynamoDbHandler\n  * Fixed fatal errors occurring when normalizing generators that have been fully consumed\n  * Fixed RollbarHandler to include a level (rollbar level), monolog_level (original name), channel and datetime (unix)\n  * Fixed RollbarHandler not flushing records automatically, calling close() explicitly is not necessary anymore\n  * Fixed SyslogUdpHandler to avoid sending empty frames\n  * Fixed a few PHP 7.0 and 7.1 compatibility issues\n\n### 1.21.0 (2016-07-29)\n\n  * Break: Reverted the addition of $context when the ErrorHandler handles regular php errors from 1.20.0 as it was causing issues\n  * Added support for more formats in RotatingFileHandler::setFilenameFormat as long as they have Y, m and d in order\n  * Added ability to format the main line of text the SlackHandler sends by explicitly setting a formatter on the handler\n  * Added information about SoapFault instances in NormalizerFormatter\n  * Added $handleOnlyReportedErrors option on ErrorHandler::registerErrorHandler (default true) to allow logging of all errors no matter the error_reporting level\n\n### 1.20.0 (2016-07-02)\n\n  * Added FingersCrossedHandler::activate() to manually trigger the handler regardless of the activation policy\n  * Added StreamHandler::getUrl to retrieve the stream's URL\n  * Added ability to override addRow/addTitle in HtmlFormatter\n  * Added the $context to context information when the ErrorHandler handles a regular php error\n  * Deprecated RotatingFileHandler::setFilenameFormat to only support 3 formats: Y, Y-m and Y-m-d\n  * Fixed WhatFailureGroupHandler to work with PHP7 throwables\n  * Fixed a few minor bugs\n\n### 1.19.0 (2016-04-12)\n\n  * Break: StreamHandler will not close streams automatically that it does not own. If you pass in a stream (not a path/url), then it will not close it for you. You can retrieve those using getStream() if needed\n  * Added DeduplicationHandler to remove duplicate records from notifications across multiple requests, useful for email or other notifications on errors\n  * Added ability to use `%message%` and other LineFormatter replacements in the subject line of emails sent with NativeMailHandler and SwiftMailerHandler\n  * Fixed HipChatHandler handling of long messages\n\n### 1.18.2 (2016-04-02)\n\n  * Fixed ElasticaFormatter to use more precise dates\n  * Fixed GelfMessageFormatter sending too long messages\n\n### 1.18.1 (2016-03-13)\n\n  * Fixed SlackHandler bug where slack dropped messages randomly\n  * Fixed RedisHandler issue when using with the PHPRedis extension\n  * Fixed AmqpHandler content-type being incorrectly set when using with the AMQP extension\n  * Fixed BrowserConsoleHandler regression\n\n### 1.18.0 (2016-03-01)\n\n  * Added optional reduction of timestamp precision via `Logger->useMicrosecondTimestamps(false)`, disabling it gets you a bit of performance boost but reduces the precision to the second instead of microsecond\n  * Added possibility to skip some extra stack frames in IntrospectionProcessor if you have some library wrapping Monolog that is always adding frames\n  * Added `Logger->withName` to clone a logger (keeping all handlers) with a new name\n  * Added FluentdFormatter for the Fluentd unix socket protocol\n  * Added HandlerWrapper base class to ease the creation of handler wrappers, just extend it and override as needed\n  * Added support for replacing context sub-keys using `%context.*%` in LineFormatter\n  * Added support for `payload` context value in RollbarHandler\n  * Added setRelease to RavenHandler to describe the application version, sent with every log\n  * Added support for `fingerprint` context value in RavenHandler\n  * Fixed JSON encoding errors that would gobble up the whole log record, we now handle those more gracefully by dropping chars as needed\n  * Fixed write timeouts in SocketHandler and derivatives, set to 10sec by default, lower it with `setWritingTimeout()`\n  * Fixed PHP7 compatibility with regard to Exception/Throwable handling in a few places\n\n### 1.17.2 (2015-10-14)\n\n  * Fixed ErrorHandler compatibility with non-Monolog PSR-3 loggers\n  * Fixed SlackHandler handling to use slack functionalities better\n  * Fixed SwiftMailerHandler bug when sending multiple emails they all had the same id\n  * Fixed 5.3 compatibility regression\n\n### 1.17.1 (2015-08-31)\n\n  * Fixed RollbarHandler triggering PHP notices\n\n### 1.17.0 (2015-08-30)\n\n  * Added support for `checksum` and `release` context/extra values in RavenHandler\n  * Added better support for exceptions in RollbarHandler\n  * Added UidProcessor::getUid\n  * Added support for showing the resource type in NormalizedFormatter\n  * Fixed IntrospectionProcessor triggering PHP notices\n\n### 1.16.0 (2015-08-09)\n\n  * Added IFTTTHandler to notify ifttt.com triggers\n  * Added Logger::setHandlers() to allow setting/replacing all handlers\n  * Added $capSize in RedisHandler to cap the log size\n  * Fixed StreamHandler creation of directory to only trigger when the first log write happens\n  * Fixed bug in the handling of curl failures\n  * Fixed duplicate logging of fatal errors when both error and fatal error handlers are registered in monolog's ErrorHandler\n  * Fixed missing fatal errors records with handlers that need to be closed to flush log records\n  * Fixed TagProcessor::addTags support for associative arrays\n\n### 1.15.0 (2015-07-12)\n\n  * Added addTags and setTags methods to change a TagProcessor\n  * Added automatic creation of directories if they are missing for a StreamHandler to open a log file\n  * Added retry functionality to Loggly, Cube and Mandrill handlers so they retry up to 5 times in case of network failure\n  * Fixed process exit code being incorrectly reset to 0 if ErrorHandler::registerExceptionHandler was used\n  * Fixed HTML/JS escaping in BrowserConsoleHandler\n  * Fixed JSON encoding errors being silently suppressed (PHP 5.5+ only)\n\n### 1.14.0 (2015-06-19)\n\n  * Added PHPConsoleHandler to send record to Chrome's PHP Console extension and library\n  * Added support for objects implementing __toString in the NormalizerFormatter\n  * Added support for HipChat's v2 API in HipChatHandler\n  * Added Logger::setTimezone() to initialize the timezone monolog should use in case date.timezone isn't correct for your app\n  * Added an option to send formatted message instead of the raw record on PushoverHandler via ->useFormattedMessage(true)\n  * Fixed curl errors being silently suppressed\n\n### 1.13.1 (2015-03-09)\n\n  * Fixed regression in HipChat requiring a new token to be created\n\n### 1.13.0 (2015-03-05)\n\n  * Added Registry::hasLogger to check for the presence of a logger instance\n  * Added context.user support to RavenHandler\n  * Added HipChat API v2 support in the HipChatHandler\n  * Added NativeMailerHandler::addParameter to pass params to the mail() process\n  * Added context data to SlackHandler when $includeContextAndExtra is true\n  * Added ability to customize the Swift_Message per-email in SwiftMailerHandler\n  * Fixed SwiftMailerHandler to lazily create message instances if a callback is provided\n  * Fixed serialization of INF and NaN values in Normalizer and LineFormatter\n\n### 1.12.0 (2014-12-29)\n\n  * Break: HandlerInterface::isHandling now receives a partial record containing only a level key. This was always the intent and does not break any Monolog handler but is strictly speaking a BC break and you should check if you relied on any other field in your own handlers.\n  * Added PsrHandler to forward records to another PSR-3 logger\n  * Added SamplingHandler to wrap around a handler and include only every Nth record\n  * Added MongoDBFormatter to support better storage with MongoDBHandler (it must be enabled manually for now)\n  * Added exception codes in the output of most formatters\n  * Added LineFormatter::includeStacktraces to enable exception stack traces in logs (uses more than one line)\n  * Added $useShortAttachment to SlackHandler to minify attachment size and $includeExtra to append extra data\n  * Added $host to HipChatHandler for users of private instances\n  * Added $transactionName to NewRelicHandler and support for a transaction_name context value\n  * Fixed MandrillHandler to avoid outputting API call responses\n  * Fixed some non-standard behaviors in SyslogUdpHandler\n\n### 1.11.0 (2014-09-30)\n\n  * Break: The NewRelicHandler extra and context data are now prefixed with extra_ and context_ to avoid clashes. Watch out if you have scripts reading those from the API and rely on names\n  * Added WhatFailureGroupHandler to suppress any exception coming from the wrapped handlers and avoid chain failures if a logging service fails\n  * Added MandrillHandler to send emails via the Mandrillapp.com API\n  * Added SlackHandler to log records to a Slack.com account\n  * Added FleepHookHandler to log records to a Fleep.io account\n  * Added LogglyHandler::addTag to allow adding tags to an existing handler\n  * Added $ignoreEmptyContextAndExtra to LineFormatter to avoid empty [] at the end\n  * Added $useLocking to StreamHandler and RotatingFileHandler to enable flock() while writing\n  * Added support for PhpAmqpLib in the AmqpHandler\n  * Added FingersCrossedHandler::clear and BufferHandler::clear to reset them between batches in long running jobs\n  * Added support for adding extra fields from $_SERVER in the WebProcessor\n  * Fixed support for non-string values in PrsLogMessageProcessor\n  * Fixed SwiftMailer messages being sent with the wrong date in long running scripts\n  * Fixed minor PHP 5.6 compatibility issues\n  * Fixed BufferHandler::close being called twice\n\n### 1.10.0 (2014-06-04)\n\n  * Added Logger::getHandlers() and Logger::getProcessors() methods\n  * Added $passthruLevel argument to FingersCrossedHandler to let it always pass some records through even if the trigger level is not reached\n  * Added support for extra data in NewRelicHandler\n  * Added $expandNewlines flag to the ErrorLogHandler to create multiple log entries when a message has multiple lines\n\n### 1.9.1 (2014-04-24)\n\n  * Fixed regression in RotatingFileHandler file permissions\n  * Fixed initialization of the BufferHandler to make sure it gets flushed after receiving records\n  * Fixed ChromePHPHandler and FirePHPHandler's activation strategies to be more conservative\n\n### 1.9.0 (2014-04-20)\n\n  * Added LogEntriesHandler to send logs to a LogEntries account\n  * Added $filePermissions to tweak file mode on StreamHandler and RotatingFileHandler\n  * Added $useFormatting flag to MemoryProcessor to make it send raw data in bytes\n  * Added support for table formatting in FirePHPHandler via the table context key\n  * Added a TagProcessor to add tags to records, and support for tags in RavenHandler\n  * Added $appendNewline flag to the JsonFormatter to enable using it when logging to files\n  * Added sound support to the PushoverHandler\n  * Fixed multi-threading support in StreamHandler\n  * Fixed empty headers issue when ChromePHPHandler received no records\n  * Fixed default format of the ErrorLogHandler\n\n### 1.8.0 (2014-03-23)\n\n  * Break: the LineFormatter now strips newlines by default because this was a bug, set $allowInlineLineBreaks to true if you need them\n  * Added BrowserConsoleHandler to send logs to any browser's console via console.log() injection in the output\n  * Added FilterHandler to filter records and only allow those of a given list of levels through to the wrapped handler\n  * Added FlowdockHandler to send logs to a Flowdock account\n  * Added RollbarHandler to send logs to a Rollbar account\n  * Added HtmlFormatter to send prettier log emails with colors for each log level\n  * Added GitProcessor to add the current branch/commit to extra record data\n  * Added a Monolog\\Registry class to allow easier global access to pre-configured loggers\n  * Added support for the new official graylog2/gelf-php lib for GelfHandler, upgrade if you can by replacing the mlehner/gelf-php requirement\n  * Added support for HHVM\n  * Added support for Loggly batch uploads\n  * Added support for tweaking the content type and encoding in NativeMailerHandler\n  * Added $skipClassesPartials to tweak the ignored classes in the IntrospectionProcessor\n  * Fixed batch request support in GelfHandler\n\n### 1.7.0 (2013-11-14)\n\n  * Added ElasticSearchHandler to send logs to an Elastic Search server\n  * Added DynamoDbHandler and ScalarFormatter to send logs to Amazon's Dynamo DB\n  * Added SyslogUdpHandler to send logs to a remote syslogd server\n  * Added LogglyHandler to send logs to a Loggly account\n  * Added $level to IntrospectionProcessor so it only adds backtraces when needed\n  * Added $version to LogstashFormatter to allow using the new v1 Logstash format\n  * Added $appName to NewRelicHandler\n  * Added configuration of Pushover notification retries/expiry\n  * Added $maxColumnWidth to NativeMailerHandler to change the 70 chars default\n  * Added chainability to most setters for all handlers\n  * Fixed RavenHandler batch processing so it takes the message from the record with highest priority\n  * Fixed HipChatHandler batch processing so it sends all messages at once\n  * Fixed issues with eAccelerator\n  * Fixed and improved many small things\n\n### 1.6.0 (2013-07-29)\n\n  * Added HipChatHandler to send logs to a HipChat chat room\n  * Added ErrorLogHandler to send logs to PHP's error_log function\n  * Added NewRelicHandler to send logs to NewRelic's service\n  * Added Monolog\\ErrorHandler helper class to register a Logger as exception/error/fatal handler\n  * Added ChannelLevelActivationStrategy for the FingersCrossedHandler to customize levels by channel\n  * Added stack traces output when normalizing exceptions (json output & co)\n  * Added Monolog\\Logger::API constant (currently 1)\n  * Added support for ChromePHP's v4.0 extension\n  * Added support for message priorities in PushoverHandler, see $highPriorityLevel and $emergencyLevel\n  * Added support for sending messages to multiple users at once with the PushoverHandler\n  * Fixed RavenHandler's support for batch sending of messages (when behind a Buffer or FingersCrossedHandler)\n  * Fixed normalization of Traversables with very large data sets, only the first 1000 items are shown now\n  * Fixed issue in RotatingFileHandler when an open_basedir restriction is active\n  * Fixed minor issues in RavenHandler and bumped the API to Raven 0.5.0\n  * Fixed SyslogHandler issue when many were used concurrently with different facilities\n\n### 1.5.0 (2013-04-23)\n\n  * Added ProcessIdProcessor to inject the PID in log records\n  * Added UidProcessor to inject a unique identifier to all log records of one request/run\n  * Added support for previous exceptions in the LineFormatter exception serialization\n  * Added Monolog\\Logger::getLevels() to get all available levels\n  * Fixed ChromePHPHandler so it avoids sending headers larger than Chrome can handle\n\n### 1.4.1 (2013-04-01)\n\n  * Fixed exception formatting in the LineFormatter to be more minimalistic\n  * Fixed RavenHandler's handling of context/extra data, requires Raven client >0.1.0\n  * Fixed log rotation in RotatingFileHandler to work with long running scripts spanning multiple days\n  * Fixed WebProcessor array access so it checks for data presence\n  * Fixed Buffer, Group and FingersCrossed handlers to make use of their processors\n\n### 1.4.0 (2013-02-13)\n\n  * Added RedisHandler to log to Redis via the Predis library or the phpredis extension\n  * Added ZendMonitorHandler to log to the Zend Server monitor\n  * Added the possibility to pass arrays of handlers and processors directly in the Logger constructor\n  * Added `$useSSL` option to the PushoverHandler which is enabled by default\n  * Fixed ChromePHPHandler and FirePHPHandler issue when multiple instances are used simultaneously\n  * Fixed header injection capability in the NativeMailHandler\n\n### 1.3.1 (2013-01-11)\n\n  * Fixed LogstashFormatter to be usable with stream handlers\n  * Fixed GelfMessageFormatter levels on Windows\n\n### 1.3.0 (2013-01-08)\n\n  * Added PSR-3 compliance, the `Monolog\\Logger` class is now an instance of `Psr\\Log\\LoggerInterface`\n  * Added PsrLogMessageProcessor that you can selectively enable for full PSR-3 compliance\n  * Added LogstashFormatter (combine with SocketHandler or StreamHandler to send logs to Logstash)\n  * Added PushoverHandler to send mobile notifications\n  * Added CouchDBHandler and DoctrineCouchDBHandler\n  * Added RavenHandler to send data to Sentry servers\n  * Added support for the new MongoClient class in MongoDBHandler\n  * Added microsecond precision to log records' timestamps\n  * Added `$flushOnOverflow` param to BufferHandler to flush by batches instead of losing\n    the oldest entries\n  * Fixed normalization of objects with cyclic references\n\n### 1.2.1 (2012-08-29)\n\n  * Added new $logopts arg to SyslogHandler to provide custom openlog options\n  * Fixed fatal error in SyslogHandler\n\n### 1.2.0 (2012-08-18)\n\n  * Added AmqpHandler (for use with AMQP servers)\n  * Added CubeHandler\n  * Added NativeMailerHandler::addHeader() to send custom headers in mails\n  * Added the possibility to specify more than one recipient in NativeMailerHandler\n  * Added the possibility to specify float timeouts in SocketHandler\n  * Added NOTICE and EMERGENCY levels to conform with RFC 5424\n  * Fixed the log records to use the php default timezone instead of UTC\n  * Fixed BufferHandler not being flushed properly on PHP fatal errors\n  * Fixed normalization of exotic resource types\n  * Fixed the default format of the SyslogHandler to avoid duplicating datetimes in syslog\n\n### 1.1.0 (2012-04-23)\n\n  * Added Monolog\\Logger::isHandling() to check if a handler will\n    handle the given log level\n  * Added ChromePHPHandler\n  * Added MongoDBHandler\n  * Added GelfHandler (for use with Graylog2 servers)\n  * Added SocketHandler (for use with syslog-ng for example)\n  * Added NormalizerFormatter\n  * Added the possibility to change the activation strategy of the FingersCrossedHandler\n  * Added possibility to show microseconds in logs\n  * Added `server` and `referer` to WebProcessor output\n\n### 1.0.2 (2011-10-24)\n\n  * Fixed bug in IE with large response headers and FirePHPHandler\n\n### 1.0.1 (2011-08-25)\n\n  * Added MemoryPeakUsageProcessor and MemoryUsageProcessor\n  * Added Monolog\\Logger::getName() to get a logger's channel name\n\n### 1.0.0 (2011-07-06)\n\n  * Added IntrospectionProcessor to get info from where the logger was called\n  * Fixed WebProcessor in CLI\n\n### 1.0.0-RC1 (2011-07-01)\n\n  * Initial release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "Copyright (c) 2011-2020 Jordi Boggiano\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.3134765625,
          "content": "![Monolog](logo.jpg)\n\n# Monolog - Logging for PHP [![Continuous Integration](https://github.com/Seldaek/monolog/workflows/Continuous%20Integration/badge.svg?branch=main)](https://github.com/Seldaek/monolog/actions)\n\n[![Total Downloads](https://img.shields.io/packagist/dt/monolog/monolog.svg)](https://packagist.org/packages/monolog/monolog)\n[![Latest Stable Version](https://img.shields.io/packagist/v/monolog/monolog.svg)](https://packagist.org/packages/monolog/monolog)\n\n>**Note** This is the **documentation for Monolog 3.x**, if you are using older releases\n>see the documentation for [Monolog 2.x](https://github.com/Seldaek/monolog/blob/2.x/README.md) or [Monolog 1.x](https://github.com/Seldaek/monolog/blob/1.x/README.md)\n\nMonolog sends your logs to files, sockets, inboxes, databases and various\nweb services. See the complete list of handlers below. Special handlers\nallow you to build advanced logging strategies.\n\nThis library implements the [PSR-3](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md)\ninterface that you can type-hint against in your own libraries to keep\na maximum of interoperability. You can also use it in your applications to\nmake sure you can always use another compatible logger at a later time.\nAs of 1.11.0 Monolog public APIs will also accept PSR-3 log levels.\nInternally Monolog still uses its own level scheme since it predates PSR-3.\n\n<div align=\"center\">\n  <hr>\n  <sup><b>Sponsored by:</b></sup>\n  <br>\n  <a href=\"https://betterstack.com\">\n    <div>\n      <img src=\"https://github.com/Seldaek/monolog/assets/183678/7de58ce0-2fa2-45c0-b3e8-e60cebb3c4cf\" width=\"200\" alt=\"Better Stack\">\n    </div>\n    <div>\n      Better Stack lets you centralize, search, and visualize your logs.\n    </div>\n  </a>\n  <br>\n  <hr>\n</div>\n\n## Installation\n\nInstall the latest version with\n\n```bash\ncomposer require monolog/monolog\n```\n\n## Basic Usage\n\n```php\n<?php\n\nuse Monolog\\Level;\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\n\n// create a log channel\n$log = new Logger('name');\n$log->pushHandler(new StreamHandler('path/to/your.log', Level::Warning));\n\n// add records to the log\n$log->warning('Foo');\n$log->error('Bar');\n```\n\n## Documentation\n\n- [Usage Instructions](doc/01-usage.md)\n- [Handlers, Formatters and Processors](doc/02-handlers-formatters-processors.md)\n- [Utility Classes](doc/03-utilities.md)\n- [Extending Monolog](doc/04-extending.md)\n- [Log Record Structure](doc/message-structure.md)\n\n## Support Monolog Financially\n\nGet supported Monolog and help fund the project with the [Tidelift Subscription](https://tidelift.com/subscription/pkg/packagist-monolog-monolog?utm_source=packagist-monolog-monolog&utm_medium=referral&utm_campaign=enterprise) or via [GitHub sponsorship](https://github.com/sponsors/Seldaek).\n\nTidelift delivers commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use.\n\n## Third Party Packages\n\nThird party handlers, formatters and processors are\n[listed in the wiki](https://github.com/Seldaek/monolog/wiki/Third-Party-Packages). You\ncan also add your own there if you publish one.\n\n## About\n\n### Requirements\n\n- Monolog `^3.0` works with PHP 8.1 or above.\n- Monolog `^2.5` works with PHP 7.2 or above.\n- Monolog `^1.25` works with PHP 5.3 up to 8.1, but is not very maintained anymore and will not receive PHP support fixes anymore.\n\n### Support\n\nMonolog 1.x support is somewhat limited at this point and only important fixes will be done. You should migrate to Monolog 2 or 3 where possible to benefit from all the latest features and fixes.\n\n### Submitting bugs and feature requests\n\nBugs and feature request are tracked on [GitHub](https://github.com/Seldaek/monolog/issues)\n\n### Framework Integrations\n\n- Frameworks and libraries using [PSR-3](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md)\n  can be used very easily with Monolog since it implements the interface.\n- [Symfony](http://symfony.com) comes out of the box with Monolog.\n- [Laravel](http://laravel.com/) comes out of the box with Monolog.\n- [Lumen](http://lumen.laravel.com/) comes out of the box with Monolog.\n- [PPI](https://github.com/ppi/framework) comes out of the box with Monolog.\n- [CakePHP](http://cakephp.org/) is usable with Monolog via the [cakephp-monolog](https://github.com/jadb/cakephp-monolog) plugin.\n- [XOOPS 2.6](http://xoops.org/) comes out of the box with Monolog.\n- [Aura.Web_Project](https://github.com/auraphp/Aura.Web_Project) comes out of the box with Monolog.\n- [Nette Framework](http://nette.org/en/) is usable with Monolog via the [contributte/monolog](https://github.com/contributte/monolog) or [orisai/nette-monolog](https://github.com/orisai/nette-monolog) extensions.\n- [Proton Micro Framework](https://github.com/alexbilbie/Proton) comes out of the box with Monolog.\n- [FuelPHP](http://fuelphp.com/) comes out of the box with Monolog.\n- [Equip Framework](https://github.com/equip/framework) comes out of the box with Monolog.\n- [Yii 2](http://www.yiiframework.com/) is usable with Monolog via the [yii2-monolog](https://github.com/merorafael/yii2-monolog) or [yii2-psr-log-target](https://github.com/samdark/yii2-psr-log-target) plugins.\n- [Hawkbit Micro Framework](https://github.com/HawkBitPhp/hawkbit) comes out of the box with Monolog.\n- [SilverStripe 4](https://www.silverstripe.org/) comes out of the box with Monolog.\n- [Drupal](https://www.drupal.org/) is usable with Monolog via the [monolog](https://www.drupal.org/project/monolog) module.\n- [Aimeos ecommerce framework](https://aimeos.org/) is usable with Monolog via the [ai-monolog](https://github.com/aimeos/ai-monolog) extension.\n- [Magento](https://magento.com/) comes out of the box with Monolog.\n- [Spiral Framework](https://spiral.dev) comes out of the box with Monolog bridge.\n\n### Author\n\nJordi Boggiano - <j.boggiano@seld.be> - <http://twitter.com/seldaek><br />\nSee also the list of [contributors](https://github.com/Seldaek/monolog/contributors) who participated in this project.\n\n### License\n\nMonolog is licensed under the MIT License - see the [LICENSE](LICENSE) file for details\n\n### Acknowledgements\n\nThis library is heavily inspired by Python's [Logbook](https://logbook.readthedocs.io/en/stable/)\nlibrary, although most concepts have been adjusted to fit to the PHP world.\n"
        },
        {
          "name": "UPGRADE.md",
          "type": "blob",
          "size": 6.9013671875,
          "content": "### 4.0.0\n\nOverall / notable changes:\n\n- Monolog\\DateTimeImmutable has been removed in favor of Monolog\\JsonSerializableDateTimeImmutable.\n\n### 3.0.0\n\nOverall / notable changes:\n\n- The minimum supported PHP version is now `8.1.0`.\n- `Monolog\\Logger::API` can be used to distinguish between a Monolog `3`, `2` or `1`\n  install when writing integration code.\n- Log records have been converted from an array to a [`Monolog\\LogRecord` object](src/Monolog/LogRecord.php)\n  with public (and mostly readonly) properties. e.g. instead of doing\n  `$record['context']` use `$record->context`.\n  In formatters or handlers if you rather need an array to work with you can use `$record->toArray()`\n  to get back a Monolog 1/2 style record array. This will contain the enum values instead of enum cases\n  in the `level` and `level_name` keys to be more backwards compatible and use simpler data types.\n- `FormatterInterface`, `HandlerInterface`, `ProcessorInterface`, etc. changed to contain `LogRecord $record`\n  instead of `array $record` parameter types. If you want to support multiple Monolog versions this should\n  be possible by type-hinting nothing, or `array|LogRecord` if you support PHP 8.0+. You can then code\n  against the $record using Monolog 2 style as LogRecord implements ArrayAccess for BC.\n  The interfaces do not require a `LogRecord` return type even where it would be applicable, but if you only\n  support Monolog 3 in integration code I would recommend you use `LogRecord` return types wherever fitting\n  to ensure forward compatibility as it may be added in Monolog 4.\n- Log levels are now stored as an enum [`Monolog\\Level`](src/Monolog/Level.php)\n- All properties have had types added, which may require you to do so as well if you extended\n  a Monolog class and declared the same property.\n\n#### Logger\n\n- `Logger::DEBUG`, `Logger::ERROR`, etc. are now deprecated in favor of the `Level` enum.\n  e.g. instead of `Logger::WARNING` use `Level::Warning` if you need to pass the enum case\n  to Monolog or one of its handlers, or `Level::Warning->value` if you need the integer\n  value equal to what `Logger::WARNING` was giving you.\n- `Logger::$levels` has been removed.\n- `Logger::getLevels` has been removed in favor of `Monolog\\Level::VALUES` or `Monolog\\Level::cases()`.\n- `setExceptionHandler` now requires a `Closure` instance and not just any `callable`.\n\n#### HtmlFormatter\n\n- If you redefined colors in the `$logLevels` property you must now override the\n  `getLevelColor` method instead.\n\n#### NormalizerFormatter\n\n- A new `normalizeRecord` method is available as an extension point which is called\n  only when converting the LogRecord to an array. You may need this if you overrode\n  `format` previously as `parent::format` now needs to receive a LogRecord still\n  so you cannot modify it before.\n\n#### AbstractSyslogHandler\n\n- If you redefined syslog levels in the `$logLevels` property you must now override the\n  `toSyslogPriority` method instead.\n\n#### DynamoDbHandler\n\n- Dropped support for AWS SDK v2\n\n#### FilterHandler\n\n- The factory callable to lazy load the nested handler must now be a `Closure` instance\n  and not just a `callable`.\n\n#### FingersCrossedHandler\n\n- The factory callable to lazy load the nested handler must now be a `Closure` instance\n  and not just a `callable`.\n\n#### GelfHandler\n\n- Dropped support for Gelf <1.1 and added support for graylog2/gelf-php v2.x. File, level\n  and facility are now passed in as additional fields (#1664)[https://github.com/Seldaek/monolog/pull/1664].\n\n#### RollbarHandler\n\n- If you redefined rollbar levels in the `$logLevels` property you must now override the\n  `toRollbarLevel` method instead.\n\n#### SamplingHandler\n\n- The factory callable to lazy load the nested handler must now be a `Closure` instance\n  and not just a `callable`.\n\n#### SwiftMailerHandler\n\n- Removed deprecated SwiftMailer handler, migrate to SymfonyMailerHandler instead.\n\n#### ZendMonitorHandler\n\n- If you redefined zend monitor levels in the `$levelMap` property you must now override the\n  `toZendMonitorLevel` method instead.\n\n#### ResettableInterface\n\n- `reset()` now requires a void return type.\n\n### 2.0.0\n\n- `Monolog\\Logger::API` can be used to distinguish between a Monolog `1` and `2`\n  install of Monolog when writing integration code.\n\n- Removed non-PSR-3 methods to add records, all the `add*` (e.g. `addWarning`)\n  methods as well as `emerg`, `crit`, `err` and `warn`.\n\n- DateTime are now formatted with a timezone and microseconds (unless disabled).\n  Various formatters and log output might be affected, which may mess with log parsing\n  in some cases.\n\n- The `datetime` in every record array is now a DateTimeImmutable, not that you\n  should have been modifying these anyway.\n\n- The timezone is now set per Logger instance and not statically, either\n  via ->setTimezone or passed in the constructor. Calls to Logger::setTimezone\n  should be converted.\n\n- `HandlerInterface` has been split off and two new interfaces now exist for\n  more granular controls: `ProcessableHandlerInterface` and\n  `FormattableHandlerInterface`. Handlers not extending `AbstractHandler`\n  should make sure to implement the relevant interfaces.\n\n- `HandlerInterface` now requires the `close` method to be implemented. This\n  only impacts you if you implement the interface yourself, but you can extend\n  the new `Monolog\\Handler\\Handler` base class too.\n\n- There is no more default handler configured on empty Logger instances, if\n  you were relying on that you will not get any output anymore, make sure to\n  configure the handler you need.\n\n#### LogglyFormatter\n\n- The records' `datetime` is not sent anymore. Only `timestamp` is sent to Loggly.\n\n#### AmqpHandler\n\n- Log levels are not shortened to 4 characters anymore. e.g. a warning record\n  will be sent using the `warning.channel` routing key instead of `warn.channel`\n  as in 1.x.\n- The exchange name does not default to 'log' anymore, and it is completely ignored\n  now for the AMQP extension users. Only PHPAmqpLib uses it if provided.\n\n#### RotatingFileHandler\n\n- The file name format must now contain `{date}` and the date format must be set\n  to one of the predefined FILE_PER_* constants to avoid issues with file rotation.\n  See `setFilenameFormat`.\n\n#### LogstashFormatter\n\n- Removed Logstash V0 support\n- Context/extra prefix has been removed in favor of letting users configure the exact key being sent\n- Context/extra data are now sent as an object instead of single keys\n\n#### HipChatHandler\n\n- Removed deprecated HipChat handler, migrate to Slack and use SlackWebhookHandler or SlackHandler instead\n\n#### SlackbotHandler\n\n- Removed deprecated SlackbotHandler handler, use SlackWebhookHandler or SlackHandler instead\n\n#### RavenHandler\n\n- Removed deprecated RavenHandler handler, use sentry/sentry 2.x and their Sentry\\Monolog\\Handler instead\n\n#### ElasticSearchHandler\n\n- As support for the official Elasticsearch library was added, the former ElasticSearchHandler has been\n  renamed to ElasticaHandler and the new one added as ElasticsearchHandler.\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.0244140625,
          "content": "theme: jekyll-theme-slate"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 3.15625,
          "content": "{\n    \"name\": \"monolog/monolog\",\n    \"description\": \"Sends your logs to files, sockets, inboxes, databases and various web services\",\n    \"keywords\": [\"log\", \"logging\", \"psr-3\"],\n    \"homepage\": \"https://github.com/Seldaek/monolog\",\n    \"type\": \"library\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Jordi Boggiano\",\n            \"email\": \"j.boggiano@seld.be\",\n            \"homepage\": \"https://seld.be\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=8.1\",\n        \"psr/log\": \"^2.0 || ^3.0\"\n    },\n    \"require-dev\": {\n        \"ext-json\": \"*\",\n        \"aws/aws-sdk-php\": \"^3.0\",\n        \"doctrine/couchdb\": \"~1.0@dev\",\n        \"elasticsearch/elasticsearch\": \"^7 || ^8\",\n        \"graylog2/gelf-php\": \"^1.4.2 || ^2.0\",\n        \"guzzlehttp/guzzle\": \"^7.4.5\",\n        \"guzzlehttp/psr7\": \"^2.2\",\n        \"mongodb/mongodb\": \"^1.8\",\n        \"php-amqplib/php-amqplib\": \"~2.4 || ^3\",\n        \"php-console/php-console\": \"^3.1.8\",\n        \"phpstan/phpstan\": \"^2\",\n        \"phpstan/phpstan-deprecation-rules\": \"^2\",\n        \"phpstan/phpstan-strict-rules\": \"^2\",\n        \"phpunit/phpunit\": \"^10.5.17 || ^11.0.7\",\n        \"predis/predis\": \"^1.1 || ^2\",\n        \"rollbar/rollbar\": \"^4.0\",\n        \"ruflin/elastica\": \"^7 || ^8\",\n        \"symfony/mailer\": \"^5.4 || ^6\",\n        \"symfony/mime\": \"^5.4 || ^6\"\n    },\n    \"suggest\": {\n        \"graylog2/gelf-php\": \"Allow sending log messages to a GrayLog2 server\",\n        \"doctrine/couchdb\": \"Allow sending log messages to a CouchDB server\",\n        \"ruflin/elastica\": \"Allow sending log messages to an Elastic Search server\",\n        \"elasticsearch/elasticsearch\": \"Allow sending log messages to an Elasticsearch server via official client\",\n        \"php-amqplib/php-amqplib\": \"Allow sending log messages to an AMQP server using php-amqplib\",\n        \"ext-amqp\": \"Allow sending log messages to an AMQP server (1.0+ required)\",\n        \"ext-mongodb\": \"Allow sending log messages to a MongoDB server (via driver)\",\n        \"mongodb/mongodb\": \"Allow sending log messages to a MongoDB server (via library)\",\n        \"aws/aws-sdk-php\": \"Allow sending log messages to AWS services like DynamoDB\",\n        \"rollbar/rollbar\": \"Allow sending log messages to Rollbar\",\n        \"ext-mbstring\": \"Allow to work properly with unicode symbols\",\n        \"ext-sockets\": \"Allow sending log messages to a Syslog server (via UDP driver)\",\n        \"ext-curl\": \"Required to send log messages using the IFTTTHandler, the LogglyHandler, the SendGridHandler, the SlackWebhookHandler or the TelegramBotHandler\",\n        \"ext-openssl\": \"Required to send log messages using SSL\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\"Monolog\\\\\": \"src/Monolog\"}\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\"Monolog\\\\\": \"tests/Monolog\"}\n    },\n    \"provide\": {\n        \"psr/log-implementation\": \"3.0.0\"\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-main\": \"3.x-dev\"\n        }\n    },\n    \"scripts\": {\n        \"test\": \"@php vendor/bin/phpunit\",\n        \"phpstan\": \"@php vendor/bin/phpstan analyse\"\n    },\n    \"config\": {\n        \"lock\": false,\n        \"sort-packages\": true,\n        \"platform-check\": false,\n        \"allow-plugins\": {\n            \"php-http/discovery\": false\n        }\n    }\n}\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "favicon.ico",
          "type": "blob",
          "size": 11.3115234375,
          "content": null
        },
        {
          "name": "logo.jpg",
          "type": "blob",
          "size": 690.9443359375,
          "content": null
        },
        {
          "name": "phpstan-baseline-8.2.neon",
          "type": "blob",
          "size": 0.1376953125,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Call to deprecated function utf8_encode\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Utils.php\n"
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 6.400390625,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: '#^Property Monolog\\\\ErrorHandler\\:\\:\\$reservedMemory is never read, only written\\.$#'\n\t\t\tidentifier: property.onlyWritten\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/ErrorHandler.php\n\n\t\t-\n\t\t\tmessage: '#^Return type \\(array\\<array\\<mixed\\>\\|bool\\|float\\|int\\|object\\|string\\|null\\>\\|bool\\|float\\|int\\|object\\|string\\|null\\) of method Monolog\\\\Formatter\\\\JsonFormatter\\:\\:normalize\\(\\) should be covariant with return type \\(array\\<array\\<mixed\\>\\|bool\\|float\\|int\\|string\\|null\\>\\|bool\\|float\\|int\\|string\\|null\\) of method Monolog\\\\Formatter\\\\NormalizerFormatter\\:\\:normalize\\(\\)$#'\n\t\t\tidentifier: method.childReturnType\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Formatter/JsonFormatter.php\n\n\t\t-\n\t\t\tmessage: '#^Return type \\(array\\<array\\<mixed\\>\\|bool\\|float\\|int\\|stdClass\\|string\\|null\\>\\) of method Monolog\\\\Formatter\\\\JsonFormatter\\:\\:normalizeRecord\\(\\) should be covariant with return type \\(array\\<array\\<mixed\\>\\|bool\\|float\\|int\\|string\\|null\\>\\) of method Monolog\\\\Formatter\\\\NormalizerFormatter\\:\\:normalizeRecord\\(\\)$#'\n\t\t\tidentifier: method.childReturnType\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Formatter/JsonFormatter.php\n\n\t\t-\n\t\t\tmessage: '#^Return type \\(string\\) of method Monolog\\\\Formatter\\\\LineFormatter\\:\\:normalizeException\\(\\) should be compatible with return type \\(array\\<array\\<array\\<string\\>\\|int\\|string\\>\\|int\\|string\\>\\) of method Monolog\\\\Formatter\\\\NormalizerFormatter\\:\\:normalizeException\\(\\)$#'\n\t\t\tidentifier: method.childReturnType\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Formatter/LineFormatter.php\n\n\t\t-\n\t\t\tmessage: '#^Method Monolog\\\\Formatter\\\\NormalizerFormatter\\:\\:normalizeException\\(\\) should return array\\<array\\<array\\<string\\>\\|int\\|string\\>\\|int\\|string\\> but returns array\\<string, array\\<array\\<array\\<string\\>\\|int\\|string\\>\\|int\\|string\\>\\|int\\|string\\>\\.$#'\n\t\t\tidentifier: return.type\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Formatter/NormalizerFormatter.php\n\n\t\t-\n\t\t\tmessage: '#^Cannot access offset ''table'' on array\\<array\\<mixed\\>\\|bool\\|float\\|int\\|string\\|null\\>\\|bool\\|float\\|int\\|object\\|string\\.$#'\n\t\t\tidentifier: offsetAccess.nonOffsetAccessible\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Formatter/WildfireFormatter.php\n\n\t\t-\n\t\t\tmessage: '#^Return type \\(array\\<array\\<mixed\\>\\|bool\\|float\\|int\\|string\\|null\\>\\|bool\\|float\\|int\\|object\\|string\\|null\\) of method Monolog\\\\Formatter\\\\WildfireFormatter\\:\\:normalize\\(\\) should be covariant with return type \\(array\\<array\\<mixed\\>\\|bool\\|float\\|int\\|string\\|null\\>\\|bool\\|float\\|int\\|string\\|null\\) of method Monolog\\\\Formatter\\\\NormalizerFormatter\\:\\:normalize\\(\\)$#'\n\t\t\tidentifier: method.childReturnType\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Formatter/WildfireFormatter.php\n\n\t\t-\n\t\t\tmessage: '#^Access to constant VERSION on an unknown class Elasticsearch\\\\Client\\.$#'\n\t\t\tidentifier: class.notFound\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Handler/ElasticsearchHandler.php\n\n\t\t-\n\t\t\tmessage: '#^Call to method bulk\\(\\) on an unknown class Elasticsearch\\\\Client\\.$#'\n\t\t\tidentifier: class.notFound\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Handler/ElasticsearchHandler.php\n\n\t\t-\n\t\t\tmessage: '#^Method Monolog\\\\Handler\\\\ElasticsearchHandler\\:\\:createExceptionFromError\\(\\) should return Throwable but returns Elasticsearch\\\\Common\\\\Exceptions\\\\RuntimeException\\.$#'\n\t\t\tidentifier: return.type\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Handler/ElasticsearchHandler.php\n\n\t\t-\n\t\t\tmessage: '#^Method Monolog\\\\Handler\\\\ElasticsearchHandler\\:\\:createExceptionFromResponses\\(\\) should return Throwable but returns Elasticsearch\\\\Common\\\\Exceptions\\\\RuntimeException\\.$#'\n\t\t\tidentifier: return.type\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Handler/ElasticsearchHandler.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\$client of method Monolog\\\\Handler\\\\ElasticsearchHandler\\:\\:__construct\\(\\) has invalid type Elasticsearch\\\\Client\\.$#'\n\t\t\tidentifier: class.notFound\n\t\t\tcount: 2\n\t\t\tpath: src/Monolog/Handler/ElasticsearchHandler.php\n\n\t\t-\n\t\t\tmessage: '#^Property Monolog\\\\Handler\\\\ElasticsearchHandler\\:\\:\\$client has unknown class Elasticsearch\\\\Client as its type\\.$#'\n\t\t\tidentifier: class.notFound\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Handler/ElasticsearchHandler.php\n\n\t\t-\n\t\t\tmessage: '#^Short ternary operator is not allowed\\. Use null coalesce operator if applicable or consider using long ternary\\.$#'\n\t\t\tidentifier: ternary.shortNotAllowed\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Handler/FingersCrossedHandler.php\n\n\t\t-\n\t\t\tmessage: '#^Call to method setBody\\(\\) on an unknown class Swift_Message\\.$#'\n\t\t\tidentifier: class.notFound\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Handler/MandrillHandler.php\n\n\t\t-\n\t\t\tmessage: '#^Call to method setDate\\(\\) on an unknown class Swift_Message\\.$#'\n\t\t\tidentifier: class.notFound\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Handler/MandrillHandler.php\n\n\t\t-\n\t\t\tmessage: '#^Class Swift_Message not found\\.$#'\n\t\t\tidentifier: class.notFound\n\t\t\tcount: 2\n\t\t\tpath: src/Monolog/Handler/MandrillHandler.php\n\n\t\t-\n\t\t\tmessage: '#^Cloning object of an unknown class Swift_Message\\.$#'\n\t\t\tidentifier: class.notFound\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Handler/MandrillHandler.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\$message of method Monolog\\\\Handler\\\\MandrillHandler\\:\\:__construct\\(\\) has invalid type Swift_Message\\.$#'\n\t\t\tidentifier: class.notFound\n\t\t\tcount: 3\n\t\t\tpath: src/Monolog/Handler/MandrillHandler.php\n\n\t\t-\n\t\t\tmessage: '#^Property Monolog\\\\Handler\\\\MandrillHandler\\:\\:\\$message has unknown class Swift_Message as its type\\.$#'\n\t\t\tidentifier: class.notFound\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Handler/MandrillHandler.php\n\n\t\t-\n\t\t\tmessage: '#^Variable property access on \\$this\\(Monolog\\\\LogRecord\\)\\.$#'\n\t\t\tidentifier: property.dynamicName\n\t\t\tcount: 4\n\t\t\tpath: src/Monolog/LogRecord.php\n\n\t\t-\n\t\t\tmessage: '#^Cannot assign offset Fiber to WeakMap\\<Fiber\\<mixed, mixed, mixed, mixed\\>, int\\>\\.$#'\n\t\t\tidentifier: offsetAssign.dimType\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Logger.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#1 \\$level \\(''alert''\\|''critical''\\|''debug''\\|''emergency''\\|''error''\\|''info''\\|''notice''\\|''warning''\\|Monolog\\\\Level\\) of method Monolog\\\\Logger\\:\\:log\\(\\) should be contravariant with parameter \\$level \\(mixed\\) of method Psr\\\\Log\\\\LoggerInterface\\:\\:log\\(\\)$#'\n\t\t\tidentifier: method.childParameterType\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Logger.php\n\n\t\t-\n\t\t\tmessage: '#^Variable property access on \\$this\\(Monolog\\\\Logger\\)\\.$#'\n\t\t\tidentifier: property.dynamicName\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Logger.php\n\n\t\t-\n\t\t\tmessage: '#^Parameter \\#1 \\$length of function random_bytes expects int\\<1, max\\>, int given\\.$#'\n\t\t\tidentifier: argument.type\n\t\t\tcount: 1\n\t\t\tpath: src/Monolog/Processor/UidProcessor.php\n"
        },
        {
          "name": "phpstan-ignore-by-php-version.neon.php",
          "type": "blob",
          "size": 0.1875,
          "content": "<?php declare(strict_types = 1);\n\n$includes = [];\nif (PHP_VERSION_ID >= 80200) {\n    $includes[] = __DIR__ . '/phpstan-baseline-8.2.neon';\n}\n\n$config['includes'] = $includes;\n\nreturn $config;\n"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.5546875,
          "content": "parameters:\n    level: 8\n\n    treatPhpDocTypesAsCertain: false\n    reportUnmatchedIgnoredErrors: true\n\n    paths:\n        - src/\n#        - tests/\n\n    excludePaths:\n        - 'src/Monolog/Handler/PHPConsoleHandler.php'\n\n    ignoreErrors:\n        - '#zend_monitor_|ZEND_MONITOR_#'\n        - '#MongoDB\\\\(Client|Collection)#'\n\nincludes:\n    - phpstan-baseline.neon\n    - phpstan-ignore-by-php-version.neon.php\n    - phar://phpstan.phar/conf/bleedingEdge.neon\n    - vendor/phpstan/phpstan-strict-rules/rules.neon\n    - vendor/phpstan/phpstan-deprecation-rules/rules.neon\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.771484375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n         bootstrap=\"tests/bootstrap.php\"\n         colors=\"true\"\n         displayDetailsOnTestsThatTriggerWarnings=\"true\"\n         displayDetailsOnSkippedTests=\"true\"\n         displayDetailsOnTestsThatTriggerNotices=\"true\"\n         beStrictAboutTestsThatDoNotTestAnything=\"false\">\n  <testsuites>\n    <testsuite name=\"Monolog Test Suite\">\n      <directory>tests/Monolog/</directory>\n    </testsuite>\n  </testsuites>\n\n  <coverage/>\n\n  <php>\n    <ini name=\"date.timezone\" value=\"UTC\"/>\n  </php>\n\n  <source>\n    <include>\n      <directory suffix=\".php\">src/Monolog/</directory>\n    </include>\n  </source>\n\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}