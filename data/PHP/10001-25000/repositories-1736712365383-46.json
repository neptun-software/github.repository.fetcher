{
  "metadata": {
    "timestamp": 1736712365383,
    "page": 46,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "egulias/EmailValidator",
      "stars": 11482,
      "defaultBranch": "4.x",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.146484375,
          "content": "/documentation export-ignore\n/tests export-ignore\n/.* export-ignore\n/phpunit.xml.dist export-ignore\n/psalm.xml export-ignore\n/README.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0927734375,
          "content": "build/\nreport/\nvendor/\ncomposer.lock\nphpunit.result.cache\n.phpunit*\n.idea\n.vscode\n.php-version\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.357421875,
          "content": "# Contributing\n\nWhen contributing to this repository make sure to follow the Pull request process below.\nReduce to the minimum 3rd party dependencies.\n\nPlease note we have a [code of conduct](#Code of Conduct), please follow it in all your interactions with the project.\n\n## Pull Request Process\n\nWhen doing a PR to v2 remember that you also have to do the PR port to v3, or tests confirming the bug is not reproducible.\n\n1. Supported version is v3. If you are fixing a bug in v2, please port to v3\n2. Use the title as a brief description of the changes\n3. Describe the changes you are proposing\n    1. If adding an extra validation state the benefits of adding it and the problem is solving\n    2. Document in the readme, by adding it to the list\n4. Provide appropriate tests for the code you are submitting: aim to keep the existing coverage percentage.\n5. Add your Twitter handle (if you have) so we can thank you there.\n\n## License\nBy contributing, you agree that your contributions will be licensed under its MIT License.\n\n## Code of Conduct\n\n### Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n### Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n### Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at <emailvalidatorrfc.ccreport@gmail.com>.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n#### Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n#### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n#### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n#### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n#### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\n[https://www.contributor-covenant.org/version/2/0/code_of_conduct.html][v2.0].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available\nat [https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.0]: https://www.contributor-covenant.org/version/2/0/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "Copyright (c) 2013-2023 Eduardo Gulias Davis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.30078125,
          "content": "# EmailValidator\n\n[![Build Status](https://github.com/egulias/EmailValidator/actions/workflows/tests.yml/badge.svg)](https://github.com/egulias/EmailValidator/actions/workflows/tests.yml)\n[![Quality Badge](https://app.codacy.com/project/badge/Grade/55d44898c7e44ebdb4e457523563ad63)](https://app.codacy.com/gh/egulias/EmailValidator/dashboard?utm_source=gh&utm_medium=referral&utm_content=&utm_campaign=Badge_grade)\n[![Test Coverage](https://app.codacy.com/project/badge/Coverage/55d44898c7e44ebdb4e457523563ad63)](https://app.codacy.com/gh/egulias/EmailValidator/dashboard?utm_source=gh&utm_medium=referral&utm_content=&utm_campaign=Badge_coverage)\n![Latest Release](https://img.shields.io/github/v/release/egulias/EmailValidator)\n\nA library for validating emails against several RFC.\n\n## Supported RFCs\n\nThis library aims to support RFCs:\n\n* [5321](https://tools.ietf.org/html/rfc5321),\n* [5322](https://tools.ietf.org/html/rfc5322),\n* [6530](https://tools.ietf.org/html/rfc6530),\n* [6531](https://tools.ietf.org/html/rfc6531),\n* [6532](https://tools.ietf.org/html/rfc6532),\n* [1035](https://tools.ietf.org/html/rfc1035) \n\n## Supported versions\n\n| Version |  Released  | EOL | Only critical bug fixes | Full |\n|:-------:|:----------:|:---:|:-----------------------:|:----:|\n|**v4.x** |**2023/01/07** |  -  |            **X**        |**X** |\n|  v3.x   | 2020/12/29 | YES |                         |      |\n| v2.1.x  | 2016/05/16 | YES |                         |      |\n|  v1.2   | 2013/19/05 | YES |                         |      |\n\n## Requirements\n\n* PHP 8.1\n* [Composer](https://getcomposer.org) is required for installation\n* [Spoofchecking](/src/Validation/Extra/SpoofCheckValidation.php) and\n[DNSCheckValidation](/src/Validation/DNSCheckValidation.php) validation\nrequires that your PHP system has the\n[PHP Internationalization Libraries](https://php.net/manual/en/book.intl.php)\n(also known as PHP Intl)\n\n**Note**: `PHP version upgrades will happen to accomodate to the pace of major\nframeworks. Minor versions bumps will go via minor versions of this library\n(i.e: PHP7.3 -> v3.x+1). Major versions will go with major versions\nof the library`\n\n## Installation\n\nRun the command below to install via Composer\n\n```shell\ncomposer require egulias/email-validator\n```\n\n## Getting Started\n\n`EmailValidator` requires you to decide which (or combination of them)\nvalidation/s strategy/ies you'd like to follow for each\n[validation](#available-validations).\n\nA basic example with the RFC validation\n\n```php\n<?php\n\nuse Egulias\\EmailValidator\\EmailValidator;\nuse Egulias\\EmailValidator\\Validation\\RFCValidation;\n\n$validator = new EmailValidator();\n$validator->isValid(\"example@example.com\", new RFCValidation()); //true\n```\n\n### Available validations\n\n1. [RFCValidation](/src/Validation/RFCValidation.php): Standard RFC-like email validation.\n2. [NoRFCWarningsValidation](/src/Validation/NoRFCWarningsValidation.php):\nRFC-like validation that will fail when warnings* are found.\n3. [DNSCheckValidation](/src/Validation/DNSCheckValidation.php):\nWill check if there are DNS records that signal that the server accepts emails. This does not entail that the email exists.\n4. [MultipleValidationWithAnd](/src/Validation/MultipleValidationWithAnd.php):\nIt is a validation that operates over other validations performing a logical and (&&) over the result of each validation.\n5. [MessageIDValidation](/src/Validation/MessageIDValidation.php):\nFollows [RFC2822 for message-id](https://tools.ietf.org/html/rfc2822#section-3.6.4) to validate that field, that has some differences in the domain part.\n6. [Your own validation](#how-to-extend): You can extend the library behaviour\nby implementing your own validations.\n\n*warnings: Warnings are deviations from the RFC that in a broader interpretation\nare accepted.\n\n```php\n<?php\n\nuse Egulias\\EmailValidator\\EmailValidator;\nuse Egulias\\EmailValidator\\Validation\\DNSCheckValidation;\nuse Egulias\\EmailValidator\\Validation\\MultipleValidationWithAnd;\nuse Egulias\\EmailValidator\\Validation\\RFCValidation;\n\n$validator = new EmailValidator();\n$multipleValidations = new MultipleValidationWithAnd([\n    new RFCValidation(),\n    new DNSCheckValidation()\n]);\n//ietf.org has MX records signaling a server with email capabilities\n$validator->isValid(\"example@ietf.org\", $multipleValidations); //true\n```\n\n#### Additional validations\n\nValidations not present in the RFCs\n\n1. [SpoofCheckValidation](/src/Validation/Extra/SpoofCheckValidation.php): \nWill check for multi-utf-8 chars that can signal an erroneous email name.\n\n### How to extend\n\nIt's easy! You just need to implement\n[EmailValidation](/src/Validation/EmailValidation.php) and you can use your own\nvalidation.\n\n## Contributing\n\nPlease follow the [Contribution guide](CONTRIBUTING.md).\nIs short and simple and will help a lot.\n\n## Other Contributors\n\n(You can find current contributors\n[here](https://github.com/egulias/EmailValidator/graphs/contributors))\n\nAs this is a port from another library and work, here are other people related\nto the previous one:\n\n* Ricard Clau [@ricardclau](https://github.com/ricardclau):\nPerformance against PHP built-in filter_var (v2 and earlier)\n* Josepf Bielawski [@stloyd](https://github.com/stloyd):\nFor its first re-work of Dominic's lib\n* Dominic Sayers [@dominicsayers](https://github.com/dominicsayers):\nThe original `isemail` function\n\n## License\n\nReleased under the MIT License attached with this code."
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.9140625,
          "content": "{\n  \"name\":        \"egulias/email-validator\",\n  \"description\": \"A library for validating emails against several RFCs\",\n  \"homepage\":    \"https://github.com/egulias/EmailValidator\",\n  \"keywords\":    [\"email\", \"validation\", \"validator\", \"emailvalidation\", \"emailvalidator\"],\n  \"license\":     \"MIT\",\n  \"authors\": [\n    {\"name\": \"Eduardo Gulias Davis\"}\n  ],\n  \"extra\": {\n    \"branch-alias\": {\n      \"dev-master\": \"4.0.x-dev\"\n    }\n  },\n  \"require\": {\n    \"php\": \">=8.1\",\n    \"doctrine/lexer\": \"^2.0 || ^3.0\",\n    \"symfony/polyfill-intl-idn\": \"^1.26\"\n  },\n  \"require-dev\": {\n    \"phpunit/phpunit\": \"^10.2\",\n    \"vimeo/psalm\": \"^5.12\"\n  },\n  \"suggest\": {\n    \"ext-intl\": \"PHP Internationalization Libraries are required to use the SpoofChecking validation\"\n  },\n  \"autoload\": {\n    \"psr-4\": {\n      \"Egulias\\\\EmailValidator\\\\\": \"src\"\n    }\n  },\n  \"autoload-dev\": {\n    \"psr-4\": {\n      \"Egulias\\\\EmailValidator\\\\Tests\\\\\": \"tests\"\n    }\n  }\n}\n"
        },
        {
          "name": "documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.6943359375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n         executionOrder=\"defects\"\n         cacheDirectory=\".phpunit.cache\"\n>\n  <coverage/>\n\n  <testsuites>\n    <testsuite name=\"EmailValidator Test Suite\">\n      <directory>./tests/EmailValidator</directory>\n      <exclude>./vendor/</exclude>\n    </testsuite>\n  </testsuites>\n\n  <source>\n    <include>\n      <directory>./src/</directory>\n    </include>\n    <exclude>\n      <directory suffix=\".php\">./src/Result/Reason</directory>\n    </exclude>\n  </source>\n\n</phpunit>\n"
        },
        {
          "name": "psalm.xml",
          "type": "blob",
          "size": 0.5322265625,
          "content": "<?xml version=\"1.0\"?>\n<psalm\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"https://getpsalm.org/schema/config\"\n    xsi:schemaLocation=\"https://getpsalm.org/schema/config ./vendor/vimeo/psalm/config.xsd\"\n    errorLevel=\"1\"\n    findUnusedCode=\"false\"\n    findUnusedPsalmSuppress=\"true\"\n    disableSuppressAll=\"true\"\n    findUnusedVariablesAndParams=\"true\"\n>\n    <projectFiles>\n        <directory name=\"src\" />\n        <ignoreFiles>\n            <directory name=\"vendor\" />\n        </ignoreFiles>\n    </projectFiles>\n</psalm>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}